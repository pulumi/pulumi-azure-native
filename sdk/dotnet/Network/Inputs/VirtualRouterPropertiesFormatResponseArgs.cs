// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Virtual Router definition.
    /// </summary>
    public sealed class VirtualRouterPropertiesFormatResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Gateway on which VirtualRouter is hosted.
        /// </summary>
        [Input("hostedGateway")]
        public Input<Inputs.SubResourceResponseArgs>? HostedGateway { get; set; }

        /// <summary>
        /// The Subnet on which VirtualRouter is hosted.
        /// </summary>
        [Input("hostedSubnet")]
        public Input<Inputs.SubResourceResponseArgs>? HostedSubnet { get; set; }

        [Input("peerings", required: true)]
        private InputList<Inputs.SubResourceResponseArgs>? _peerings;

        /// <summary>
        /// List of references to VirtualRouterPeerings.
        /// </summary>
        public InputList<Inputs.SubResourceResponseArgs> Peerings
        {
            get => _peerings ?? (_peerings = new InputList<Inputs.SubResourceResponseArgs>());
            set => _peerings = value;
        }

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// VirtualRouter ASN.
        /// </summary>
        [Input("virtualRouterAsn")]
        public Input<int>? VirtualRouterAsn { get; set; }

        [Input("virtualRouterIps")]
        private InputList<string>? _virtualRouterIps;

        /// <summary>
        /// VirtualRouter IPs.
        /// </summary>
        public InputList<string> VirtualRouterIps
        {
            get => _virtualRouterIps ?? (_virtualRouterIps = new InputList<string>());
            set => _virtualRouterIps = value;
        }

        public VirtualRouterPropertiesFormatResponseArgs()
        {
        }
    }
}
