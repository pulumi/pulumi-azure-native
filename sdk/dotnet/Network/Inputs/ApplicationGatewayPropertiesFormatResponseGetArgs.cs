// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of the application gateway.
    /// </summary>
    public sealed class ApplicationGatewayPropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayAuthenticationCertificateResponseGetArgs>? _authenticationCertificates;

        /// <summary>
        /// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayAuthenticationCertificateResponseGetArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayAuthenticationCertificateResponseGetArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// Autoscale Configuration.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.ApplicationGatewayAutoscaleConfigurationResponseGetArgs>? AutoscaleConfiguration { get; set; }

        [Input("backendAddressPools")]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs>? _backendAddressPools;

        /// <summary>
        /// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolResponseGetArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettingsCollection")]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingsResponseGetArgs>? _backendHttpSettingsCollection;

        /// <summary>
        /// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingsResponseGetArgs> BackendHttpSettingsCollection
        {
            get => _backendHttpSettingsCollection ?? (_backendHttpSettingsCollection = new InputList<Inputs.ApplicationGatewayBackendHttpSettingsResponseGetArgs>());
            set => _backendHttpSettingsCollection = value;
        }

        [Input("customErrorConfigurations")]
        private InputList<Inputs.ApplicationGatewayCustomErrorResponseGetArgs>? _customErrorConfigurations;

        /// <summary>
        /// Custom error configurations of the application gateway resource.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayCustomErrorResponseGetArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<Inputs.ApplicationGatewayCustomErrorResponseGetArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// Whether FIPS is enabled on the application gateway resource.
        /// </summary>
        [Input("enableFips")]
        public Input<bool>? EnableFips { get; set; }

        /// <summary>
        /// Whether HTTP2 is enabled on the application gateway resource.
        /// </summary>
        [Input("enableHttp2")]
        public Input<bool>? EnableHttp2 { get; set; }

        /// <summary>
        /// Reference to the FirewallPolicy resource.
        /// </summary>
        [Input("firewallPolicy")]
        public Input<Inputs.SubResourceResponseGetArgs>? FirewallPolicy { get; set; }

        /// <summary>
        /// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
        /// </summary>
        [Input("forceFirewallPolicyAssociation")]
        public Input<bool>? ForceFirewallPolicyAssociation { get; set; }

        [Input("frontendIPConfigurations")]
        private InputList<Inputs.ApplicationGatewayFrontendIPConfigurationResponseGetArgs>? _frontendIPConfigurations;

        /// <summary>
        /// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIPConfigurationResponseGetArgs> FrontendIPConfigurations
        {
            get => _frontendIPConfigurations ?? (_frontendIPConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIPConfigurationResponseGetArgs>());
            set => _frontendIPConfigurations = value;
        }

        [Input("frontendPorts")]
        private InputList<Inputs.ApplicationGatewayFrontendPortResponseGetArgs>? _frontendPorts;

        /// <summary>
        /// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortResponseGetArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortResponseGetArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIPConfigurations")]
        private InputList<Inputs.ApplicationGatewayIPConfigurationResponseGetArgs>? _gatewayIPConfigurations;

        /// <summary>
        /// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayIPConfigurationResponseGetArgs> GatewayIPConfigurations
        {
            get => _gatewayIPConfigurations ?? (_gatewayIPConfigurations = new InputList<Inputs.ApplicationGatewayIPConfigurationResponseGetArgs>());
            set => _gatewayIPConfigurations = value;
        }

        [Input("httpListeners")]
        private InputList<Inputs.ApplicationGatewayHttpListenerResponseGetArgs>? _httpListeners;

        /// <summary>
        /// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenerResponseGetArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenerResponseGetArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// Operational state of the application gateway resource.
        /// </summary>
        [Input("operationalState", required: true)]
        public Input<string> OperationalState { get; set; } = null!;

        [Input("privateEndpointConnections", required: true)]
        private InputList<Inputs.ApplicationGatewayPrivateEndpointConnectionResponseGetArgs>? _privateEndpointConnections;

        /// <summary>
        /// Private Endpoint connections on application gateway.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayPrivateEndpointConnectionResponseGetArgs> PrivateEndpointConnections
        {
            get => _privateEndpointConnections ?? (_privateEndpointConnections = new InputList<Inputs.ApplicationGatewayPrivateEndpointConnectionResponseGetArgs>());
            set => _privateEndpointConnections = value;
        }

        [Input("privateLinkConfigurations")]
        private InputList<Inputs.ApplicationGatewayPrivateLinkConfigurationResponseGetArgs>? _privateLinkConfigurations;

        /// <summary>
        /// PrivateLink configurations on application gateway.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayPrivateLinkConfigurationResponseGetArgs> PrivateLinkConfigurations
        {
            get => _privateLinkConfigurations ?? (_privateLinkConfigurations = new InputList<Inputs.ApplicationGatewayPrivateLinkConfigurationResponseGetArgs>());
            set => _privateLinkConfigurations = value;
        }

        [Input("probes")]
        private InputList<Inputs.ApplicationGatewayProbeResponseGetArgs>? _probes;

        /// <summary>
        /// Probes of the application gateway resource.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayProbeResponseGetArgs> Probes
        {
            get => _probes ?? (_probes = new InputList<Inputs.ApplicationGatewayProbeResponseGetArgs>());
            set => _probes = value;
        }

        /// <summary>
        /// The provisioning state of the application gateway resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        [Input("redirectConfigurations")]
        private InputList<Inputs.ApplicationGatewayRedirectConfigurationResponseGetArgs>? _redirectConfigurations;

        /// <summary>
        /// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRedirectConfigurationResponseGetArgs> RedirectConfigurations
        {
            get => _redirectConfigurations ?? (_redirectConfigurations = new InputList<Inputs.ApplicationGatewayRedirectConfigurationResponseGetArgs>());
            set => _redirectConfigurations = value;
        }

        [Input("requestRoutingRules")]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRuleResponseGetArgs>? _requestRoutingRules;

        /// <summary>
        /// Request routing rules of the application gateway resource.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRuleResponseGetArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRuleResponseGetArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The resource GUID property of the application gateway resource.
        /// </summary>
        [Input("resourceGuid", required: true)]
        public Input<string> ResourceGuid { get; set; } = null!;

        [Input("rewriteRuleSets")]
        private InputList<Inputs.ApplicationGatewayRewriteRuleSetResponseGetArgs>? _rewriteRuleSets;

        /// <summary>
        /// Rewrite rules for the application gateway resource.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRewriteRuleSetResponseGetArgs> RewriteRuleSets
        {
            get => _rewriteRuleSets ?? (_rewriteRuleSets = new InputList<Inputs.ApplicationGatewayRewriteRuleSetResponseGetArgs>());
            set => _rewriteRuleSets = value;
        }

        /// <summary>
        /// SKU of the application gateway resource.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ApplicationGatewaySkuResponseGetArgs>? Sku { get; set; }

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificateResponseGetArgs>? _sslCertificates;

        /// <summary>
        /// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificateResponseGetArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificateResponseGetArgs>());
            set => _sslCertificates = value;
        }

        /// <summary>
        /// SSL policy of the application gateway resource.
        /// </summary>
        [Input("sslPolicy")]
        public Input<Inputs.ApplicationGatewaySslPolicyResponseGetArgs>? SslPolicy { get; set; }

        [Input("trustedRootCertificates")]
        private InputList<Inputs.ApplicationGatewayTrustedRootCertificateResponseGetArgs>? _trustedRootCertificates;

        /// <summary>
        /// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayTrustedRootCertificateResponseGetArgs> TrustedRootCertificates
        {
            get => _trustedRootCertificates ?? (_trustedRootCertificates = new InputList<Inputs.ApplicationGatewayTrustedRootCertificateResponseGetArgs>());
            set => _trustedRootCertificates = value;
        }

        [Input("urlPathMaps")]
        private InputList<Inputs.ApplicationGatewayUrlPathMapResponseGetArgs>? _urlPathMaps;

        /// <summary>
        /// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        /// </summary>
        public InputList<Inputs.ApplicationGatewayUrlPathMapResponseGetArgs> UrlPathMaps
        {
            get => _urlPathMaps ?? (_urlPathMaps = new InputList<Inputs.ApplicationGatewayUrlPathMapResponseGetArgs>());
            set => _urlPathMaps = value;
        }

        /// <summary>
        /// Web application firewall configuration.
        /// </summary>
        [Input("webApplicationFirewallConfiguration")]
        public Input<Inputs.ApplicationGatewayWebApplicationFirewallConfigurationResponseGetArgs>? WebApplicationFirewallConfiguration { get; set; }

        public ApplicationGatewayPropertiesFormatResponseGetArgs()
        {
        }
    }
}
