// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Parameters for VpnServerConfiguration.
    /// </summary>
    public sealed class VpnServerConfigurationPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The set of aad vpn authentication parameters.
        /// </summary>
        [Input("aadAuthenticationParameters")]
        public Input<Inputs.AadAuthenticationParametersResponseGetArgs>? AadAuthenticationParameters { get; set; }

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Input("etag", required: true)]
        public Input<string> Etag { get; set; } = null!;

        /// <summary>
        /// The name of the VpnServerConfiguration that is unique within a resource group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("p2SVpnGateways", required: true)]
        private InputList<Inputs.P2SVpnGatewayResponseGetArgs>? _p2SVpnGateways;

        /// <summary>
        /// List of references to P2SVpnGateways.
        /// </summary>
        public InputList<Inputs.P2SVpnGatewayResponseGetArgs> P2SVpnGateways
        {
            get => _p2SVpnGateways ?? (_p2SVpnGateways = new InputList<Inputs.P2SVpnGatewayResponseGetArgs>());
            set => _p2SVpnGateways = value;
        }

        /// <summary>
        /// The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        [Input("radiusClientRootCertificates")]
        private InputList<Inputs.VpnServerConfigRadiusClientRootCertificateResponseGetArgs>? _radiusClientRootCertificates;

        /// <summary>
        /// Radius client root certificate of VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.VpnServerConfigRadiusClientRootCertificateResponseGetArgs> RadiusClientRootCertificates
        {
            get => _radiusClientRootCertificates ?? (_radiusClientRootCertificates = new InputList<Inputs.VpnServerConfigRadiusClientRootCertificateResponseGetArgs>());
            set => _radiusClientRootCertificates = value;
        }

        /// <summary>
        /// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
        /// </summary>
        [Input("radiusServerAddress")]
        public Input<string>? RadiusServerAddress { get; set; }

        [Input("radiusServerRootCertificates")]
        private InputList<Inputs.VpnServerConfigRadiusServerRootCertificateResponseGetArgs>? _radiusServerRootCertificates;

        /// <summary>
        /// Radius Server root certificate of VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.VpnServerConfigRadiusServerRootCertificateResponseGetArgs> RadiusServerRootCertificates
        {
            get => _radiusServerRootCertificates ?? (_radiusServerRootCertificates = new InputList<Inputs.VpnServerConfigRadiusServerRootCertificateResponseGetArgs>());
            set => _radiusServerRootCertificates = value;
        }

        /// <summary>
        /// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
        /// </summary>
        [Input("radiusServerSecret")]
        public Input<string>? RadiusServerSecret { get; set; }

        [Input("radiusServers")]
        private InputList<Inputs.RadiusServerResponseGetArgs>? _radiusServers;

        /// <summary>
        /// Multiple Radius Server configuration for VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.RadiusServerResponseGetArgs> RadiusServers
        {
            get => _radiusServers ?? (_radiusServers = new InputList<Inputs.RadiusServerResponseGetArgs>());
            set => _radiusServers = value;
        }

        [Input("vpnAuthenticationTypes")]
        private InputList<string>? _vpnAuthenticationTypes;

        /// <summary>
        /// VPN authentication types for the VpnServerConfiguration.
        /// </summary>
        public InputList<string> VpnAuthenticationTypes
        {
            get => _vpnAuthenticationTypes ?? (_vpnAuthenticationTypes = new InputList<string>());
            set => _vpnAuthenticationTypes = value;
        }

        [Input("vpnClientIpsecPolicies")]
        private InputList<Inputs.IpsecPolicyResponseGetArgs>? _vpnClientIpsecPolicies;

        /// <summary>
        /// VpnClientIpsecPolicies for VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.IpsecPolicyResponseGetArgs> VpnClientIpsecPolicies
        {
            get => _vpnClientIpsecPolicies ?? (_vpnClientIpsecPolicies = new InputList<Inputs.IpsecPolicyResponseGetArgs>());
            set => _vpnClientIpsecPolicies = value;
        }

        [Input("vpnClientRevokedCertificates")]
        private InputList<Inputs.VpnServerConfigVpnClientRevokedCertificateResponseGetArgs>? _vpnClientRevokedCertificates;

        /// <summary>
        /// VPN client revoked certificate of VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.VpnServerConfigVpnClientRevokedCertificateResponseGetArgs> VpnClientRevokedCertificates
        {
            get => _vpnClientRevokedCertificates ?? (_vpnClientRevokedCertificates = new InputList<Inputs.VpnServerConfigVpnClientRevokedCertificateResponseGetArgs>());
            set => _vpnClientRevokedCertificates = value;
        }

        [Input("vpnClientRootCertificates")]
        private InputList<Inputs.VpnServerConfigVpnClientRootCertificateResponseGetArgs>? _vpnClientRootCertificates;

        /// <summary>
        /// VPN client root certificate of VpnServerConfiguration.
        /// </summary>
        public InputList<Inputs.VpnServerConfigVpnClientRootCertificateResponseGetArgs> VpnClientRootCertificates
        {
            get => _vpnClientRootCertificates ?? (_vpnClientRootCertificates = new InputList<Inputs.VpnServerConfigVpnClientRootCertificateResponseGetArgs>());
            set => _vpnClientRootCertificates = value;
        }

        [Input("vpnProtocols")]
        private InputList<string>? _vpnProtocols;

        /// <summary>
        /// VPN protocols for the VpnServerConfiguration.
        /// </summary>
        public InputList<string> VpnProtocols
        {
            get => _vpnProtocols ?? (_vpnProtocols = new InputList<string>());
            set => _vpnProtocols = value;
        }

        public VpnServerConfigurationPropertiesResponseGetArgs()
        {
        }
    }
}
