// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties specific to ExpressRouteLink resources.
    /// </summary>
    public sealed class ExpressRouteLinkPropertiesFormatResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrative state of the physical port.
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// Physical fiber port type.
        /// </summary>
        [Input("connectorType", required: true)]
        public Input<string> ConnectorType { get; set; } = null!;

        /// <summary>
        /// Name of Azure router interface.
        /// </summary>
        [Input("interfaceName", required: true)]
        public Input<string> InterfaceName { get; set; } = null!;

        /// <summary>
        /// MacSec configuration.
        /// </summary>
        [Input("macSecConfig")]
        public Input<Inputs.ExpressRouteLinkMacSecConfigResponseArgs>? MacSecConfig { get; set; }

        /// <summary>
        /// Mapping between physical port to patch panel port.
        /// </summary>
        [Input("patchPanelId", required: true)]
        public Input<string> PatchPanelId { get; set; } = null!;

        /// <summary>
        /// The provisioning state of the express route link resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Mapping of physical patch panel to rack.
        /// </summary>
        [Input("rackId", required: true)]
        public Input<string> RackId { get; set; } = null!;

        /// <summary>
        /// Name of Azure router associated with physical port.
        /// </summary>
        [Input("routerName", required: true)]
        public Input<string> RouterName { get; set; } = null!;

        public ExpressRouteLinkPropertiesFormatResponseArgs()
        {
        }
    }
}
