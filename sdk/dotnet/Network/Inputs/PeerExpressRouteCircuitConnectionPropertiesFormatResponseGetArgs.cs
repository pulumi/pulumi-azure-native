// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Properties of the peer express route circuit connection.
    /// </summary>
    public sealed class PeerExpressRouteCircuitConnectionPropertiesFormatResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// /29 IP address space to carve out Customer addresses for tunnels.
        /// </summary>
        [Input("addressPrefix")]
        public Input<string>? AddressPrefix { get; set; }

        /// <summary>
        /// The resource guid of the authorization used for the express route circuit connection.
        /// </summary>
        [Input("authResourceGuid")]
        public Input<string>? AuthResourceGuid { get; set; }

        /// <summary>
        /// Express Route Circuit connection state.
        /// </summary>
        [Input("circuitConnectionStatus")]
        public Input<string>? CircuitConnectionStatus { get; set; }

        /// <summary>
        /// The name of the express route circuit connection resource.
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        /// <summary>
        /// Reference to Express Route Circuit Private Peering Resource of the circuit.
        /// </summary>
        [Input("expressRouteCircuitPeering")]
        public Input<Inputs.SubResourceResponseGetArgs>? ExpressRouteCircuitPeering { get; set; }

        /// <summary>
        /// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
        /// </summary>
        [Input("peerExpressRouteCircuitPeering")]
        public Input<Inputs.SubResourceResponseGetArgs>? PeerExpressRouteCircuitPeering { get; set; }

        /// <summary>
        /// The provisioning state of the peer express route circuit connection resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        public PeerExpressRouteCircuitConnectionPropertiesFormatResponseGetArgs()
        {
        }
    }
}
