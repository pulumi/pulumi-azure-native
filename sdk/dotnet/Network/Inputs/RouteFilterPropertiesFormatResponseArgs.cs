// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Inputs
{

    /// <summary>
    /// Route Filter Resource.
    /// </summary>
    public sealed class RouteFilterPropertiesFormatResponseArgs : Pulumi.ResourceArgs
    {
        [Input("ipv6Peerings", required: true)]
        private InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs>? _ipv6Peerings;

        /// <summary>
        /// A collection of references to express route circuit ipv6 peerings.
        /// </summary>
        public InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs> Ipv6Peerings
        {
            get => _ipv6Peerings ?? (_ipv6Peerings = new InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs>());
            set => _ipv6Peerings = value;
        }

        [Input("peerings", required: true)]
        private InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs>? _peerings;

        /// <summary>
        /// A collection of references to express route circuit peerings.
        /// </summary>
        public InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs> Peerings
        {
            get => _peerings ?? (_peerings = new InputList<Inputs.ExpressRouteCircuitPeeringResponseArgs>());
            set => _peerings = value;
        }

        /// <summary>
        /// The provisioning state of the route filter resource.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.RouteFilterRuleResponseArgs>? _rules;

        /// <summary>
        /// Collection of RouteFilterRules contained within a route filter.
        /// </summary>
        public InputList<Inputs.RouteFilterRuleResponseArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.RouteFilterRuleResponseArgs>());
            set => _rules = value;
        }

        public RouteFilterPropertiesFormatResponseArgs()
        {
        }
    }
}
