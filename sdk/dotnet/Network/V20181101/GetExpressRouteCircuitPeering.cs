// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20181101
{
    public static class GetExpressRouteCircuitPeering
    {
        public static Task<GetExpressRouteCircuitPeeringResult> InvokeAsync(GetExpressRouteCircuitPeeringArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExpressRouteCircuitPeeringResult>("azurerm:network/v20181101:getExpressRouteCircuitPeering", args ?? new GetExpressRouteCircuitPeeringArgs(), options.WithVersion());
    }


    public sealed class GetExpressRouteCircuitPeeringArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the express route circuit.
        /// </summary>
        [Input("circuitName", required: true)]
        public string CircuitName { get; set; } = null!;

        /// <summary>
        /// The name of the peering.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExpressRouteCircuitPeeringArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExpressRouteCircuitPeeringResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        public readonly Outputs.ExpressRouteCircuitPeeringPropertiesFormatResponseResult Properties;

        [OutputConstructor]
        private GetExpressRouteCircuitPeeringResult(
            string etag,

            string? name,

            Outputs.ExpressRouteCircuitPeeringPropertiesFormatResponseResult properties)
        {
            Etag = etag;
            Name = name;
            Properties = properties;
        }
    }
}
