// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230401
{
    /// <summary>
    /// VpnServerConfigurationPolicyGroup Resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20230401:ConfigurationPolicyGroup")]
    public partial class ConfigurationPolicyGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
        /// </summary>
        [Output("isDefault")]
        public Output<bool?> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// List of references to P2SConnectionConfigurations.
        /// </summary>
        [Output("p2SConnectionConfigurations")]
        public Output<ImmutableArray<Outputs.SubResourceResponse>> P2SConnectionConfigurations { get; private set; } = null!;

        /// <summary>
        /// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
        /// </summary>
        [Output("policyMembers")]
        public Output<ImmutableArray<Outputs.VpnServerConfigurationPolicyGroupMemberResponse>> PolicyMembers { get; private set; } = null!;

        /// <summary>
        /// Priority for VpnServerConfigurationPolicyGroup.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationPolicyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationPolicyGroup(string name, ConfigurationPolicyGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230401:ConfigurationPolicyGroup", name, args ?? new ConfigurationPolicyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationPolicyGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230401:ConfigurationPolicyGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20221101:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230201:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230501:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230601:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230901:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240101:ConfigurationPolicyGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240301:ConfigurationPolicyGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationPolicyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationPolicyGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConfigurationPolicyGroup(name, id, options);
        }
    }

    public sealed class ConfigurationPolicyGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the ConfigurationPolicyGroup.
        /// </summary>
        [Input("configurationPolicyGroupName")]
        public Input<string>? ConfigurationPolicyGroupName { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyMembers")]
        private InputList<Inputs.VpnServerConfigurationPolicyGroupMemberArgs>? _policyMembers;

        /// <summary>
        /// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationPolicyGroupMemberArgs> PolicyMembers
        {
            get => _policyMembers ?? (_policyMembers = new InputList<Inputs.VpnServerConfigurationPolicyGroupMemberArgs>());
            set => _policyMembers = value;
        }

        /// <summary>
        /// Priority for VpnServerConfigurationPolicyGroup.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The resource group name of the ConfigurationPolicyGroup.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VpnServerConfiguration.
        /// </summary>
        [Input("vpnServerConfigurationName", required: true)]
        public Input<string> VpnServerConfigurationName { get; set; } = null!;

        public ConfigurationPolicyGroupArgs()
        {
        }
        public static new ConfigurationPolicyGroupArgs Empty => new ConfigurationPolicyGroupArgs();
    }
}
