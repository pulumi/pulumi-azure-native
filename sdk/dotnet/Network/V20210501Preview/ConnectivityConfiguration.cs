// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20210501Preview
{
    /// <summary>
    /// The network manager connectivity configuration resource
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20210501preview:ConnectivityConfiguration")]
    public partial class ConnectivityConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Groups for configuration
        /// </summary>
        [Output("appliesToGroups")]
        public Output<ImmutableArray<Outputs.ConnectivityGroupItemResponse>> AppliesToGroups { get; private set; } = null!;

        /// <summary>
        /// Connectivity topology type.
        /// </summary>
        [Output("connectivityTopology")]
        public Output<string> ConnectivityTopology { get; private set; } = null!;

        /// <summary>
        /// Flag if need to remove current existing peerings.
        /// </summary>
        [Output("deleteExistingPeering")]
        public Output<string?> DeleteExistingPeering { get; private set; } = null!;

        /// <summary>
        /// A description of the connectivity configuration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A friendly name for the resource.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// List of hubItems
        /// </summary>
        [Output("hubs")]
        public Output<ImmutableArray<Outputs.HubResponse>> Hubs { get; private set; } = null!;

        /// <summary>
        /// Flag if global mesh is supported.
        /// </summary>
        [Output("isGlobal")]
        public Output<string?> IsGlobal { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the connectivity configuration resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectivityConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectivityConfiguration(string name, ConnectivityConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210501preview:ConnectivityConfiguration", name, args ?? new ConnectivityConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectivityConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210501preview:ConnectivityConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201preview:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220201preview:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220401preview:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:ConnectivityConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:ConnectivityConfiguration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectivityConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectivityConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConnectivityConfiguration(name, id, options);
        }
    }

    public sealed class ConnectivityConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("appliesToGroups", required: true)]
        private InputList<Inputs.ConnectivityGroupItemArgs>? _appliesToGroups;

        /// <summary>
        /// Groups for configuration
        /// </summary>
        public InputList<Inputs.ConnectivityGroupItemArgs> AppliesToGroups
        {
            get => _appliesToGroups ?? (_appliesToGroups = new InputList<Inputs.ConnectivityGroupItemArgs>());
            set => _appliesToGroups = value;
        }

        /// <summary>
        /// The name of the network manager connectivity configuration.
        /// </summary>
        [Input("configurationName")]
        public Input<string>? ConfigurationName { get; set; }

        /// <summary>
        /// Connectivity topology type.
        /// </summary>
        [Input("connectivityTopology", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Network.V20210501Preview.ConnectivityTopology> ConnectivityTopology { get; set; } = null!;

        /// <summary>
        /// Flag if need to remove current existing peerings.
        /// </summary>
        [Input("deleteExistingPeering")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20210501Preview.DeleteExistingPeering>? DeleteExistingPeering { get; set; }

        /// <summary>
        /// A description of the connectivity configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A friendly name for the resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("hubs")]
        private InputList<Inputs.HubArgs>? _hubs;

        /// <summary>
        /// List of hubItems
        /// </summary>
        public InputList<Inputs.HubArgs> Hubs
        {
            get => _hubs ?? (_hubs = new InputList<Inputs.HubArgs>());
            set => _hubs = value;
        }

        /// <summary>
        /// Flag if global mesh is supported.
        /// </summary>
        [Input("isGlobal")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20210501Preview.IsGlobal>? IsGlobal { get; set; }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ConnectivityConfigurationArgs()
        {
        }
        public static new ConnectivityConfigurationArgs Empty => new ConnectivityConfigurationArgs();
    }
}
