// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20181001.Inputs
{

    /// <summary>
    /// Parameters for VirtualWAN
    /// </summary>
    public sealed class VirtualWanPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// True if branch to branch traffic is allowed.
        /// </summary>
        [Input("allowBranchToBranchTraffic")]
        public Input<bool>? AllowBranchToBranchTraffic { get; set; }

        /// <summary>
        /// True if Vnet to Vnet traffic is allowed.
        /// </summary>
        [Input("allowVnetToVnetTraffic")]
        public Input<bool>? AllowVnetToVnetTraffic { get; set; }

        /// <summary>
        /// Vpn encryption to be disabled or not.
        /// </summary>
        [Input("disableVpnEncryption")]
        public Input<bool>? DisableVpnEncryption { get; set; }

        /// <summary>
        /// The office local breakout category.
        /// </summary>
        [Input("office365LocalBreakoutCategory")]
        public Input<string>? Office365LocalBreakoutCategory { get; set; }

        [Input("p2SVpnServerConfigurations")]
        private InputList<Inputs.P2SVpnServerConfigurationArgs>? _p2SVpnServerConfigurations;

        /// <summary>
        /// list of all P2SVpnServerConfigurations associated with the virtual wan.
        /// </summary>
        public InputList<Inputs.P2SVpnServerConfigurationArgs> P2SVpnServerConfigurations
        {
            get => _p2SVpnServerConfigurations ?? (_p2SVpnServerConfigurations = new InputList<Inputs.P2SVpnServerConfigurationArgs>());
            set => _p2SVpnServerConfigurations = value;
        }

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// The Security Provider name.
        /// </summary>
        [Input("securityProviderName")]
        public Input<string>? SecurityProviderName { get; set; }

        public VirtualWanPropertiesArgs()
        {
        }
    }
}
