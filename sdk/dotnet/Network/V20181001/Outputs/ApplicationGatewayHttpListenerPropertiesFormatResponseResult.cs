// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20181001.Outputs
{

    [OutputType]
    public sealed class ApplicationGatewayHttpListenerPropertiesFormatResponseResult
    {
        /// <summary>
        /// Custom error configurations of the HTTP listener.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayCustomErrorResponseResult> CustomErrorConfigurations;
        /// <summary>
        /// Frontend IP configuration resource of an application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? FrontendIPConfiguration;
        /// <summary>
        /// Frontend port resource of an application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? FrontendPort;
        /// <summary>
        /// Host name of HTTP listener.
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Applicable only if protocol is https. Enables SNI for multi-hosting.
        /// </summary>
        public readonly bool? RequireServerNameIndication;
        /// <summary>
        /// SSL certificate resource of an application gateway.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? SslCertificate;

        [OutputConstructor]
        private ApplicationGatewayHttpListenerPropertiesFormatResponseResult(
            ImmutableArray<Outputs.ApplicationGatewayCustomErrorResponseResult> customErrorConfigurations,

            Outputs.SubResourceResponseResult? frontendIPConfiguration,

            Outputs.SubResourceResponseResult? frontendPort,

            string? hostName,

            string? protocol,

            string? provisioningState,

            bool? requireServerNameIndication,

            Outputs.SubResourceResponseResult? sslCertificate)
        {
            CustomErrorConfigurations = customErrorConfigurations;
            FrontendIPConfiguration = frontendIPConfiguration;
            FrontendPort = frontendPort;
            HostName = hostName;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            RequireServerNameIndication = requireServerNameIndication;
            SslCertificate = sslCertificate;
        }
    }
}
