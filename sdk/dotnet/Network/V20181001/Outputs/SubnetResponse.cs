// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20181001.Outputs
{

    [OutputType]
    public sealed class SubnetResponse
    {
        /// <summary>
        /// The address prefix for the subnet.
        /// </summary>
        public readonly string? AddressPrefix;
        /// <summary>
        /// List of  address prefixes for the subnet.
        /// </summary>
        public readonly ImmutableArray<string> AddressPrefixes;
        /// <summary>
        /// Gets an array of references to the delegations on the subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.DelegationResponse> Delegations;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// An array of references to interface endpoints 
        /// </summary>
        public readonly ImmutableArray<Outputs.InterfaceEndpointResponse> InterfaceEndpoints;
        /// <summary>
        /// Array of IP configuration profiles which reference this subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.IPConfigurationProfileResponse> IpConfigurationProfiles;
        /// <summary>
        /// Gets an array of references to the network interface IP configurations using subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.IPConfigurationResponse> IpConfigurations;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The reference of the NetworkSecurityGroup resource.
        /// </summary>
        public readonly Outputs.NetworkSecurityGroupResponse? NetworkSecurityGroup;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// Gets an array of references to the external resources using subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceNavigationLinkResponse> ResourceNavigationLinks;
        /// <summary>
        /// The reference of the RouteTable resource.
        /// </summary>
        public readonly Outputs.RouteTableResponse? RouteTable;
        /// <summary>
        /// Gets an array of references to services injecting into this subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceAssociationLinkResponse> ServiceAssociationLinks;
        /// <summary>
        /// An array of service endpoint policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceEndpointPolicyResponse> ServiceEndpointPolicies;
        /// <summary>
        /// An array of service endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceEndpointPropertiesFormatResponse> ServiceEndpoints;

        [OutputConstructor]
        private SubnetResponse(
            string? addressPrefix,

            ImmutableArray<string> addressPrefixes,

            ImmutableArray<Outputs.DelegationResponse> delegations,

            string? etag,

            string? id,

            ImmutableArray<Outputs.InterfaceEndpointResponse> interfaceEndpoints,

            ImmutableArray<Outputs.IPConfigurationProfileResponse> ipConfigurationProfiles,

            ImmutableArray<Outputs.IPConfigurationResponse> ipConfigurations,

            string? name,

            Outputs.NetworkSecurityGroupResponse? networkSecurityGroup,

            string? provisioningState,

            string purpose,

            ImmutableArray<Outputs.ResourceNavigationLinkResponse> resourceNavigationLinks,

            Outputs.RouteTableResponse? routeTable,

            ImmutableArray<Outputs.ServiceAssociationLinkResponse> serviceAssociationLinks,

            ImmutableArray<Outputs.ServiceEndpointPolicyResponse> serviceEndpointPolicies,

            ImmutableArray<Outputs.ServiceEndpointPropertiesFormatResponse> serviceEndpoints)
        {
            AddressPrefix = addressPrefix;
            AddressPrefixes = addressPrefixes;
            Delegations = delegations;
            Etag = etag;
            Id = id;
            InterfaceEndpoints = interfaceEndpoints;
            IpConfigurationProfiles = ipConfigurationProfiles;
            IpConfigurations = ipConfigurations;
            Name = name;
            NetworkSecurityGroup = networkSecurityGroup;
            ProvisioningState = provisioningState;
            Purpose = purpose;
            ResourceNavigationLinks = resourceNavigationLinks;
            RouteTable = routeTable;
            ServiceAssociationLinks = serviceAssociationLinks;
            ServiceEndpointPolicies = serviceEndpointPolicies;
            ServiceEndpoints = serviceEndpoints;
        }
    }
}
