// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class ListNetworkManagerEffectiveConnectivityConfigurations
    {
        /// <summary>
        /// List all effective connectivity configurations applied on a virtual network.
        /// Azure REST API version: 2022-11-01.
        /// </summary>
        public static Task<ListNetworkManagerEffectiveConnectivityConfigurationsResult> InvokeAsync(ListNetworkManagerEffectiveConnectivityConfigurationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListNetworkManagerEffectiveConnectivityConfigurationsResult>("azure-native:network:listNetworkManagerEffectiveConnectivityConfigurations", args ?? new ListNetworkManagerEffectiveConnectivityConfigurationsArgs(), options.WithDefaults());

        /// <summary>
        /// List all effective connectivity configurations applied on a virtual network.
        /// Azure REST API version: 2022-11-01.
        /// </summary>
        public static Output<ListNetworkManagerEffectiveConnectivityConfigurationsResult> Invoke(ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListNetworkManagerEffectiveConnectivityConfigurationsResult>("azure-native:network:listNetworkManagerEffectiveConnectivityConfigurations", args ?? new ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListNetworkManagerEffectiveConnectivityConfigurationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        /// <summary>
        /// An optional query parameter which specifies the maximum number of records to be returned by the server.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        /// <summary>
        /// The name of the virtual network.
        /// </summary>
        [Input("virtualNetworkName", required: true)]
        public string VirtualNetworkName { get; set; } = null!;

        public ListNetworkManagerEffectiveConnectivityConfigurationsArgs()
        {
        }
        public static new ListNetworkManagerEffectiveConnectivityConfigurationsArgs Empty => new ListNetworkManagerEffectiveConnectivityConfigurationsArgs();
    }

    public sealed class ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        [Input("skipToken")]
        public Input<string>? SkipToken { get; set; }

        /// <summary>
        /// An optional query parameter which specifies the maximum number of records to be returned by the server.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        /// <summary>
        /// The name of the virtual network.
        /// </summary>
        [Input("virtualNetworkName", required: true)]
        public Input<string> VirtualNetworkName { get; set; } = null!;

        public ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs()
        {
        }
        public static new ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs Empty => new ListNetworkManagerEffectiveConnectivityConfigurationsInvokeArgs();
    }


    [OutputType]
    public sealed class ListNetworkManagerEffectiveConnectivityConfigurationsResult
    {
        /// <summary>
        /// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
        /// </summary>
        public readonly string? SkipToken;
        /// <summary>
        /// Gets a page of NetworkManagerEffectiveConnectivityConfiguration
        /// </summary>
        public readonly ImmutableArray<Outputs.EffectiveConnectivityConfigurationResponse> Value;

        [OutputConstructor]
        private ListNetworkManagerEffectiveConnectivityConfigurationsResult(
            string? skipToken,

            ImmutableArray<Outputs.EffectiveConnectivityConfigurationResponse> value)
        {
            SkipToken = skipToken;
            Value = value;
        }
    }
}
