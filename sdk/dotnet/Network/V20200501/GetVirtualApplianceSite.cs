// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20200501
{
    public static class GetVirtualApplianceSite
    {
        public static Task<GetVirtualApplianceSiteResult> InvokeAsync(GetVirtualApplianceSiteArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVirtualApplianceSiteResult>("azure-nextgen:network/v20200501:getVirtualApplianceSite", args ?? new GetVirtualApplianceSiteArgs(), options.WithVersion());
    }


    public sealed class GetVirtualApplianceSiteArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public string NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the site.
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        public GetVirtualApplianceSiteArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVirtualApplianceSiteResult
    {
        /// <summary>
        /// Address Prefix.
        /// </summary>
        public readonly string? AddressPrefix;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Name of the virtual appliance site.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Office 365 Policy.
        /// </summary>
        public readonly Outputs.Office365PolicyPropertiesResponse? O365Policy;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Site type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVirtualApplianceSiteResult(
            string? addressPrefix,

            string etag,

            string? name,

            Outputs.Office365PolicyPropertiesResponse? o365Policy,

            string provisioningState,

            string type)
        {
            AddressPrefix = addressPrefix;
            Etag = etag;
            Name = name;
            O365Policy = o365Policy;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
