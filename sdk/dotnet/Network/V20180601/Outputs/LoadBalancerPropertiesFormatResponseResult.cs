// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20180601.Outputs
{

    [OutputType]
    public sealed class LoadBalancerPropertiesFormatResponseResult
    {
        /// <summary>
        /// Collection of backend address pools used by a load balancer
        /// </summary>
        public readonly ImmutableArray<Outputs.BackendAddressPoolResponseResult> BackendAddressPools;
        /// <summary>
        /// Object representing the frontend IPs to be used for the load balancer
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontendIPConfigurationResponseResult> FrontendIPConfigurations;
        /// <summary>
        /// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.InboundNatPoolResponseResult> InboundNatPools;
        /// <summary>
        /// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.InboundNatRuleResponseResult> InboundNatRules;
        /// <summary>
        /// Object collection representing the load balancing rules Gets the provisioning 
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancingRuleResponseResult> LoadBalancingRules;
        /// <summary>
        /// The outbound NAT rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.OutboundNatRuleResponseResult> OutboundNatRules;
        /// <summary>
        /// Collection of probe objects used in the load balancer
        /// </summary>
        public readonly ImmutableArray<Outputs.ProbeResponseResult> Probes;
        /// <summary>
        /// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The resource GUID property of the load balancer resource.
        /// </summary>
        public readonly string? ResourceGuid;

        [OutputConstructor]
        private LoadBalancerPropertiesFormatResponseResult(
            ImmutableArray<Outputs.BackendAddressPoolResponseResult> backendAddressPools,

            ImmutableArray<Outputs.FrontendIPConfigurationResponseResult> frontendIPConfigurations,

            ImmutableArray<Outputs.InboundNatPoolResponseResult> inboundNatPools,

            ImmutableArray<Outputs.InboundNatRuleResponseResult> inboundNatRules,

            ImmutableArray<Outputs.LoadBalancingRuleResponseResult> loadBalancingRules,

            ImmutableArray<Outputs.OutboundNatRuleResponseResult> outboundNatRules,

            ImmutableArray<Outputs.ProbeResponseResult> probes,

            string? provisioningState,

            string? resourceGuid)
        {
            BackendAddressPools = backendAddressPools;
            FrontendIPConfigurations = frontendIPConfigurations;
            InboundNatPools = inboundNatPools;
            InboundNatRules = inboundNatRules;
            LoadBalancingRules = loadBalancingRules;
            OutboundNatRules = outboundNatRules;
            Probes = probes;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
        }
    }
}
