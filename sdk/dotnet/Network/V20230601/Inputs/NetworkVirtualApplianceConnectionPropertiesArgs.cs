// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230601.Inputs
{

    /// <summary>
    /// Properties of the NetworkVirtualApplianceConnection subresource.
    /// </summary>
    public sealed class NetworkVirtualApplianceConnectionPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Network Virtual Appliance ASN.
        /// </summary>
        [Input("asn")]
        public Input<double>? Asn { get; set; }

        [Input("bgpPeerAddress")]
        private InputList<string>? _bgpPeerAddress;

        /// <summary>
        /// List of bgpPeerAddresses for the NVA instances
        /// </summary>
        public InputList<string> BgpPeerAddress
        {
            get => _bgpPeerAddress ?? (_bgpPeerAddress = new InputList<string>());
            set => _bgpPeerAddress = value;
        }

        /// <summary>
        /// Enable internet security.
        /// </summary>
        [Input("enableInternetSecurity")]
        public Input<bool>? EnableInternetSecurity { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Routing Configuration indicating the associated and propagated route tables on this connection.
        /// </summary>
        [Input("routingConfiguration")]
        public Input<Inputs.RoutingConfigurationArgs>? RoutingConfiguration { get; set; }

        /// <summary>
        /// Unique identifier for the connection.
        /// </summary>
        [Input("tunnelIdentifier")]
        public Input<double>? TunnelIdentifier { get; set; }

        public NetworkVirtualApplianceConnectionPropertiesArgs()
        {
        }
        public static new NetworkVirtualApplianceConnectionPropertiesArgs Empty => new NetworkVirtualApplianceConnectionPropertiesArgs();
    }
}
