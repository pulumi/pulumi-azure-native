// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230601
{
    /// <summary>
    /// NetworkVirtualApplianceConnection resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20230601:NetworkVirtualApplianceConnection")]
    public partial class NetworkVirtualApplianceConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Network Virtual Appliance ASN.
        /// </summary>
        [Output("asn")]
        public Output<double?> Asn { get; private set; } = null!;

        /// <summary>
        /// List of bgpPeerAddresses for the NVA instances
        /// </summary>
        [Output("bgpPeerAddress")]
        public Output<ImmutableArray<string>> BgpPeerAddress { get; private set; } = null!;

        /// <summary>
        /// Enable internet security.
        /// </summary>
        [Output("enableInternetSecurity")]
        public Output<bool?> EnableInternetSecurity { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the NetworkVirtualApplianceConnection resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The Routing Configuration indicating the associated and propagated route tables on this connection.
        /// </summary>
        [Output("routingConfiguration")]
        public Output<Outputs.RoutingConfigurationResponse?> RoutingConfiguration { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the connection.
        /// </summary>
        [Output("tunnelIdentifier")]
        public Output<double?> TunnelIdentifier { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkVirtualApplianceConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkVirtualApplianceConnection(string name, NetworkVirtualApplianceConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230601:NetworkVirtualApplianceConnection", name, args ?? new NetworkVirtualApplianceConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkVirtualApplianceConnection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20230601:NetworkVirtualApplianceConnection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230901:NetworkVirtualApplianceConnection" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:NetworkVirtualApplianceConnection" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240101:NetworkVirtualApplianceConnection" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240301:NetworkVirtualApplianceConnection" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkVirtualApplianceConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkVirtualApplianceConnection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkVirtualApplianceConnection(name, id, options);
        }
    }

    public sealed class NetworkVirtualApplianceConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Network Virtual Appliance ASN.
        /// </summary>
        [Input("asn")]
        public Input<double>? Asn { get; set; }

        [Input("bgpPeerAddress")]
        private InputList<string>? _bgpPeerAddress;

        /// <summary>
        /// List of bgpPeerAddresses for the NVA instances
        /// </summary>
        public InputList<string> BgpPeerAddress
        {
            get => _bgpPeerAddress ?? (_bgpPeerAddress = new InputList<string>());
            set => _bgpPeerAddress = value;
        }

        /// <summary>
        /// The name of the NVA connection.
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        /// <summary>
        /// Enable internet security.
        /// </summary>
        [Input("enableInternetSecurity")]
        public Input<bool>? EnableInternetSecurity { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public Input<string> NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Routing Configuration indicating the associated and propagated route tables on this connection.
        /// </summary>
        [Input("routingConfiguration")]
        public Input<Inputs.RoutingConfigurationArgs>? RoutingConfiguration { get; set; }

        /// <summary>
        /// Unique identifier for the connection.
        /// </summary>
        [Input("tunnelIdentifier")]
        public Input<double>? TunnelIdentifier { get; set; }

        public NetworkVirtualApplianceConnectionArgs()
        {
        }
        public static new NetworkVirtualApplianceConnectionArgs Empty => new NetworkVirtualApplianceConnectionArgs();
    }
}
