// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20230601
{
    public static class GetNetworkVirtualApplianceConnection
    {
        /// <summary>
        /// Retrieves the details of specified NVA connection.
        /// </summary>
        public static Task<GetNetworkVirtualApplianceConnectionResult> InvokeAsync(GetNetworkVirtualApplianceConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkVirtualApplianceConnectionResult>("azure-native:network/v20230601:getNetworkVirtualApplianceConnection", args ?? new GetNetworkVirtualApplianceConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of specified NVA connection.
        /// </summary>
        public static Output<GetNetworkVirtualApplianceConnectionResult> Invoke(GetNetworkVirtualApplianceConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkVirtualApplianceConnectionResult>("azure-native:network/v20230601:getNetworkVirtualApplianceConnection", args ?? new GetNetworkVirtualApplianceConnectionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of specified NVA connection.
        /// </summary>
        public static Output<GetNetworkVirtualApplianceConnectionResult> Invoke(GetNetworkVirtualApplianceConnectionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkVirtualApplianceConnectionResult>("azure-native:network/v20230601:getNetworkVirtualApplianceConnection", args ?? new GetNetworkVirtualApplianceConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkVirtualApplianceConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NVA connection.
        /// </summary>
        [Input("connectionName", required: true)]
        public string ConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public string NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkVirtualApplianceConnectionArgs()
        {
        }
        public static new GetNetworkVirtualApplianceConnectionArgs Empty => new GetNetworkVirtualApplianceConnectionArgs();
    }

    public sealed class GetNetworkVirtualApplianceConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NVA connection.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the Network Virtual Appliance.
        /// </summary>
        [Input("networkVirtualApplianceName", required: true)]
        public Input<string> NetworkVirtualApplianceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkVirtualApplianceConnectionInvokeArgs()
        {
        }
        public static new GetNetworkVirtualApplianceConnectionInvokeArgs Empty => new GetNetworkVirtualApplianceConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkVirtualApplianceConnectionResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Properties of the express route connection.
        /// </summary>
        public readonly Outputs.NetworkVirtualApplianceConnectionPropertiesResponse Properties;

        [OutputConstructor]
        private GetNetworkVirtualApplianceConnectionResult(
            string? id,

            string? name,

            Outputs.NetworkVirtualApplianceConnectionPropertiesResponse properties)
        {
            Id = id;
            Name = name;
            Properties = properties;
        }
    }
}
