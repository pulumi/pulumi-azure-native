// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class ListNetworkManagerDeploymentStatus
    {
        /// <summary>
        /// A list of Network Manager Deployment Status
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Task<ListNetworkManagerDeploymentStatusResult> InvokeAsync(ListNetworkManagerDeploymentStatusArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListNetworkManagerDeploymentStatusResult>("azure-native:network:listNetworkManagerDeploymentStatus", args ?? new ListNetworkManagerDeploymentStatusArgs(), options.WithVersion());
    }


    public sealed class ListNetworkManagerDeploymentStatusArgs : Pulumi.InvokeArgs
    {
        [Input("deploymentTypes")]
        private List<Union<string, Pulumi.AzureNative.Network.DeploymentType>>? _deploymentTypes;

        /// <summary>
        /// List of configurations' deployment types.
        /// </summary>
        public List<Union<string, Pulumi.AzureNative.Network.DeploymentType>> DeploymentTypes
        {
            get => _deploymentTypes ?? (_deploymentTypes = new List<Union<string, Pulumi.AzureNative.Network.DeploymentType>>());
            set => _deploymentTypes = value;
        }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        [Input("regions")]
        private List<string>? _regions;

        /// <summary>
        /// List of locations.
        /// </summary>
        public List<string> Regions
        {
            get => _regions ?? (_regions = new List<string>());
            set => _regions = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        /// <summary>
        /// An optional query parameter which specifies the maximum number of records to be returned by the server.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListNetworkManagerDeploymentStatusArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListNetworkManagerDeploymentStatusResult
    {
        /// <summary>
        /// Gets the URL to get the next page of results.
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// Gets a page of Network Manager Deployment Status
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkManagerDeploymentStatusResponse> Value;

        [OutputConstructor]
        private ListNetworkManagerDeploymentStatusResult(
            string? nextLink,

            ImmutableArray<Outputs.NetworkManagerDeploymentStatusResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
