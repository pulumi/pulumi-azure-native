// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20191101
{
    public static class GetNetworkInterfaceTapConfiguration
    {
        public static Task<GetNetworkInterfaceTapConfigurationResult> InvokeAsync(GetNetworkInterfaceTapConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNetworkInterfaceTapConfigurationResult>("azure-nextgen:network/v20191101:getNetworkInterfaceTapConfiguration", args ?? new GetNetworkInterfaceTapConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetNetworkInterfaceTapConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network interface.
        /// </summary>
        [Input("networkInterfaceName", required: true)]
        public string NetworkInterfaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the tap configuration.
        /// </summary>
        [Input("tapConfigurationName", required: true)]
        public string TapConfigurationName { get; set; } = null!;

        public GetNetworkInterfaceTapConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNetworkInterfaceTapConfigurationResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning state of the network interface tap configuration resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Sub Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The reference to the Virtual Network Tap resource.
        /// </summary>
        public readonly Outputs.VirtualNetworkTapResponse? VirtualNetworkTap;

        [OutputConstructor]
        private GetNetworkInterfaceTapConfigurationResult(
            string etag,

            string? name,

            string provisioningState,

            string type,

            Outputs.VirtualNetworkTapResponse? virtualNetworkTap)
        {
            Etag = etag;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
            VirtualNetworkTap = virtualNetworkTap;
        }
    }
}
