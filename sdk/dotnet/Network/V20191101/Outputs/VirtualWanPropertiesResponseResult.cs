// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20191101.Outputs
{

    [OutputType]
    public sealed class VirtualWanPropertiesResponseResult
    {
        /// <summary>
        /// True if branch to branch traffic is allowed.
        /// </summary>
        public readonly bool? AllowBranchToBranchTraffic;
        /// <summary>
        /// True if Vnet to Vnet traffic is allowed.
        /// </summary>
        public readonly bool? AllowVnetToVnetTraffic;
        /// <summary>
        /// Vpn encryption to be disabled or not.
        /// </summary>
        public readonly bool? DisableVpnEncryption;
        /// <summary>
        /// The office local breakout category.
        /// </summary>
        public readonly string? Office365LocalBreakoutCategory;
        /// <summary>
        /// The provisioning state of the virtual WAN resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the VirtualWAN.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// List of VirtualHubs in the VirtualWAN.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> VirtualHubs;
        /// <summary>
        /// List of VpnSites in the VirtualWAN.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> VpnSites;

        [OutputConstructor]
        private VirtualWanPropertiesResponseResult(
            bool? allowBranchToBranchTraffic,

            bool? allowVnetToVnetTraffic,

            bool? disableVpnEncryption,

            string? office365LocalBreakoutCategory,

            string provisioningState,

            string? type,

            ImmutableArray<Outputs.SubResourceResponseResult> virtualHubs,

            ImmutableArray<Outputs.SubResourceResponseResult> vpnSites)
        {
            AllowBranchToBranchTraffic = allowBranchToBranchTraffic;
            AllowVnetToVnetTraffic = allowVnetToVnetTraffic;
            DisableVpnEncryption = disableVpnEncryption;
            Office365LocalBreakoutCategory = office365LocalBreakoutCategory;
            ProvisioningState = provisioningState;
            Type = type;
            VirtualHubs = virtualHubs;
            VpnSites = vpnSites;
        }
    }
}
