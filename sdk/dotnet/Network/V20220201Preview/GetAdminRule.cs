// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220201Preview
{
    [Obsolete(@"Please use one of the variants: AdminRule, DefaultAdminRule.")]
    public static class GetAdminRule
    {
        /// <summary>
        /// Network base admin rule.
        /// </summary>
        public static Task<GetAdminRuleResult> InvokeAsync(GetAdminRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAdminRuleResult>("azure-native:network/v20220201preview:getAdminRule", args ?? new GetAdminRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Network base admin rule.
        /// </summary>
        public static Output<GetAdminRuleResult> Invoke(GetAdminRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAdminRuleResult>("azure-native:network/v20220201preview:getAdminRule", args ?? new GetAdminRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAdminRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public string ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public string NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager security Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName", required: true)]
        public string RuleCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetAdminRuleArgs()
        {
        }
        public static new GetAdminRuleArgs Empty => new GetAdminRuleArgs();
    }

    public sealed class GetAdminRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network manager Security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager security Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName", required: true)]
        public Input<string> RuleCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public GetAdminRuleInvokeArgs()
        {
        }
        public static new GetAdminRuleInvokeArgs Empty => new GetAdminRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetAdminRuleResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the rule is custom or default.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAdminRuleResult(
            string etag,

            string id,

            string kind,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Etag = etag;
            Id = id;
            Kind = kind;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
