// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20200301.Outputs
{

    [OutputType]
    public sealed class VpnSiteLinkConnectionPropertiesResponseResult
    {
        /// <summary>
        /// Expected bandwidth in MBPS.
        /// </summary>
        public readonly int? ConnectionBandwidth;
        /// <summary>
        /// The connection status.
        /// </summary>
        public readonly string? ConnectionStatus;
        /// <summary>
        /// Egress bytes transferred.
        /// </summary>
        public readonly int EgressBytesTransferred;
        /// <summary>
        /// EnableBgp flag.
        /// </summary>
        public readonly bool? EnableBgp;
        /// <summary>
        /// EnableBgp flag.
        /// </summary>
        public readonly bool? EnableRateLimiting;
        /// <summary>
        /// Ingress bytes transferred.
        /// </summary>
        public readonly int IngressBytesTransferred;
        /// <summary>
        /// The IPSec Policies to be considered by this connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpsecPolicyResponseResult> IpsecPolicies;
        /// <summary>
        /// The provisioning state of the VPN site link connection resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Routing weight for vpn connection.
        /// </summary>
        public readonly int? RoutingWeight;
        /// <summary>
        /// SharedKey for the vpn connection.
        /// </summary>
        public readonly string? SharedKey;
        /// <summary>
        /// Use local azure ip to initiate connection.
        /// </summary>
        public readonly bool? UseLocalAzureIpAddress;
        /// <summary>
        /// Enable policy-based traffic selectors.
        /// </summary>
        public readonly bool? UsePolicyBasedTrafficSelectors;
        /// <summary>
        /// Connection protocol used for this connection.
        /// </summary>
        public readonly string? VpnConnectionProtocolType;
        /// <summary>
        /// Id of the connected vpn site link.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? VpnSiteLink;

        [OutputConstructor]
        private VpnSiteLinkConnectionPropertiesResponseResult(
            int? connectionBandwidth,

            string? connectionStatus,

            int egressBytesTransferred,

            bool? enableBgp,

            bool? enableRateLimiting,

            int ingressBytesTransferred,

            ImmutableArray<Outputs.IpsecPolicyResponseResult> ipsecPolicies,

            string provisioningState,

            int? routingWeight,

            string? sharedKey,

            bool? useLocalAzureIpAddress,

            bool? usePolicyBasedTrafficSelectors,

            string? vpnConnectionProtocolType,

            Outputs.SubResourceResponseResult? vpnSiteLink)
        {
            ConnectionBandwidth = connectionBandwidth;
            ConnectionStatus = connectionStatus;
            EgressBytesTransferred = egressBytesTransferred;
            EnableBgp = enableBgp;
            EnableRateLimiting = enableRateLimiting;
            IngressBytesTransferred = ingressBytesTransferred;
            IpsecPolicies = ipsecPolicies;
            ProvisioningState = provisioningState;
            RoutingWeight = routingWeight;
            SharedKey = sharedKey;
            UseLocalAzureIpAddress = useLocalAzureIpAddress;
            UsePolicyBasedTrafficSelectors = usePolicyBasedTrafficSelectors;
            VpnConnectionProtocolType = vpnConnectionProtocolType;
            VpnSiteLink = vpnSiteLink;
        }
    }
}
