// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220701
{
    public static class GetServiceEndpointPolicy
    {
        /// <summary>
        /// Gets the specified service Endpoint Policies in a specified resource group.
        /// </summary>
        public static Task<GetServiceEndpointPolicyResult> InvokeAsync(GetServiceEndpointPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceEndpointPolicyResult>("azure-native:network/v20220701:getServiceEndpointPolicy", args ?? new GetServiceEndpointPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified service Endpoint Policies in a specified resource group.
        /// </summary>
        public static Output<GetServiceEndpointPolicyResult> Invoke(GetServiceEndpointPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceEndpointPolicyResult>("azure-native:network/v20220701:getServiceEndpointPolicy", args ?? new GetServiceEndpointPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceEndpointPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Expands referenced resources.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the service endpoint policy.
        /// </summary>
        [Input("serviceEndpointPolicyName", required: true)]
        public string ServiceEndpointPolicyName { get; set; } = null!;

        public GetServiceEndpointPolicyArgs()
        {
        }
        public static new GetServiceEndpointPolicyArgs Empty => new GetServiceEndpointPolicyArgs();
    }

    public sealed class GetServiceEndpointPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Expands referenced resources.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the service endpoint policy.
        /// </summary>
        [Input("serviceEndpointPolicyName", required: true)]
        public Input<string> ServiceEndpointPolicyName { get; set; } = null!;

        public GetServiceEndpointPolicyInvokeArgs()
        {
        }
        public static new GetServiceEndpointPolicyInvokeArgs Empty => new GetServiceEndpointPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceEndpointPolicyResult
    {
        /// <summary>
        /// A collection of contextual service endpoint policy.
        /// </summary>
        public readonly ImmutableArray<string> ContextualServiceEndpointPolicies;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the service endpoint policy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource GUID property of the service endpoint policy resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// The alias indicating if the policy belongs to a service
        /// </summary>
        public readonly string? ServiceAlias;
        /// <summary>
        /// A collection of service endpoint policy definitions of the service endpoint policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceEndpointPolicyDefinitionResponse> ServiceEndpointPolicyDefinitions;
        /// <summary>
        /// A collection of references to subnets.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubnetResponse> Subnets;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServiceEndpointPolicyResult(
            ImmutableArray<string> contextualServiceEndpointPolicies,

            string etag,

            string? id,

            string kind,

            string? location,

            string name,

            string provisioningState,

            string resourceGuid,

            string? serviceAlias,

            ImmutableArray<Outputs.ServiceEndpointPolicyDefinitionResponse> serviceEndpointPolicyDefinitions,

            ImmutableArray<Outputs.SubnetResponse> subnets,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ContextualServiceEndpointPolicies = contextualServiceEndpointPolicies;
            Etag = etag;
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            ServiceAlias = serviceAlias;
            ServiceEndpointPolicyDefinitions = serviceEndpointPolicyDefinitions;
            Subnets = subnets;
            Tags = tags;
            Type = type;
        }
    }
}
