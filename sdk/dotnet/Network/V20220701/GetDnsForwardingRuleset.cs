// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220701
{
    public static class GetDnsForwardingRuleset
    {
        /// <summary>
        /// Describes a DNS forwarding ruleset.
        /// </summary>
        public static Task<GetDnsForwardingRulesetResult> InvokeAsync(GetDnsForwardingRulesetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDnsForwardingRulesetResult>("azure-native:network/v20220701:getDnsForwardingRuleset", args ?? new GetDnsForwardingRulesetArgs(), options.WithDefaults());

        /// <summary>
        /// Describes a DNS forwarding ruleset.
        /// </summary>
        public static Output<GetDnsForwardingRulesetResult> Invoke(GetDnsForwardingRulesetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDnsForwardingRulesetResult>("azure-native:network/v20220701:getDnsForwardingRuleset", args ?? new GetDnsForwardingRulesetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsForwardingRulesetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS forwarding ruleset.
        /// </summary>
        [Input("dnsForwardingRulesetName", required: true)]
        public string DnsForwardingRulesetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDnsForwardingRulesetArgs()
        {
        }
        public static new GetDnsForwardingRulesetArgs Empty => new GetDnsForwardingRulesetArgs();
    }

    public sealed class GetDnsForwardingRulesetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS forwarding ruleset.
        /// </summary>
        [Input("dnsForwardingRulesetName", required: true)]
        public Input<string> DnsForwardingRulesetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDnsForwardingRulesetInvokeArgs()
        {
        }
        public static new GetDnsForwardingRulesetInvokeArgs Empty => new GetDnsForwardingRulesetInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsForwardingRulesetResult
    {
        /// <summary>
        /// The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> DnsResolverOutboundEndpoints;
        /// <summary>
        /// ETag of the DNS forwarding ruleset.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resourceGuid for the DNS forwarding ruleset.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDnsForwardingRulesetResult(
            ImmutableArray<Outputs.SubResourceResponse> dnsResolverOutboundEndpoints,

            string etag,

            string id,

            string location,

            string name,

            string provisioningState,

            string resourceGuid,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            DnsResolverOutboundEndpoints = dnsResolverOutboundEndpoints;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
