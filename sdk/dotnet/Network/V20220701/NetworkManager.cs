// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220701
{
    /// <summary>
    /// The Managed Network resource
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20220701:NetworkManager")]
    public partial class NetworkManager : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the network manager.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Scope Access.
        /// </summary>
        [Output("networkManagerScopeAccesses")]
        public Output<ImmutableArray<string>> NetworkManagerScopeAccesses { get; private set; } = null!;

        /// <summary>
        /// Scope of Network Manager.
        /// </summary>
        [Output("networkManagerScopes")]
        public Output<Outputs.NetworkManagerPropertiesResponseNetworkManagerScopes> NetworkManagerScopes { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the network manager resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManager resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManager(string name, NetworkManagerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20220701:NetworkManager", name, args ?? new NetworkManagerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManager(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20220701:NetworkManager", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201preview:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501preview:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220201preview:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220401preview:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:NetworkManager"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:NetworkManager"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManager resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManager Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkManager(name, id, options);
        }
    }

    public sealed class NetworkManagerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the network manager.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName")]
        public Input<string>? NetworkManagerName { get; set; }

        [Input("networkManagerScopeAccesses", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.Network.V20220701.ConfigurationType>>? _networkManagerScopeAccesses;

        /// <summary>
        /// Scope Access.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Network.V20220701.ConfigurationType>> NetworkManagerScopeAccesses
        {
            get => _networkManagerScopeAccesses ?? (_networkManagerScopeAccesses = new InputList<Union<string, Pulumi.AzureNative.Network.V20220701.ConfigurationType>>());
            set => _networkManagerScopeAccesses = value;
        }

        /// <summary>
        /// Scope of Network Manager.
        /// </summary>
        [Input("networkManagerScopes", required: true)]
        public Input<Inputs.NetworkManagerPropertiesNetworkManagerScopesArgs> NetworkManagerScopes { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkManagerArgs()
        {
        }
        public static new NetworkManagerArgs Empty => new NetworkManagerArgs();
    }
}
