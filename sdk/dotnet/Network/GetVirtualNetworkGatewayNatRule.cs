// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetVirtualNetworkGatewayNatRule
    {
        /// <summary>
        /// Retrieves the details of a nat rule.
        /// Azure REST API version: 2022-11-01.
        /// </summary>
        public static Task<GetVirtualNetworkGatewayNatRuleResult> InvokeAsync(GetVirtualNetworkGatewayNatRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualNetworkGatewayNatRuleResult>("azure-native:network:getVirtualNetworkGatewayNatRule", args ?? new GetVirtualNetworkGatewayNatRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of a nat rule.
        /// Azure REST API version: 2022-11-01.
        /// </summary>
        public static Output<GetVirtualNetworkGatewayNatRuleResult> Invoke(GetVirtualNetworkGatewayNatRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualNetworkGatewayNatRuleResult>("azure-native:network:getVirtualNetworkGatewayNatRule", args ?? new GetVirtualNetworkGatewayNatRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualNetworkGatewayNatRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the nat rule.
        /// </summary>
        [Input("natRuleName", required: true)]
        public string NatRuleName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the Virtual Network Gateway.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the gateway.
        /// </summary>
        [Input("virtualNetworkGatewayName", required: true)]
        public string VirtualNetworkGatewayName { get; set; } = null!;

        public GetVirtualNetworkGatewayNatRuleArgs()
        {
        }
        public static new GetVirtualNetworkGatewayNatRuleArgs Empty => new GetVirtualNetworkGatewayNatRuleArgs();
    }

    public sealed class GetVirtualNetworkGatewayNatRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the nat rule.
        /// </summary>
        [Input("natRuleName", required: true)]
        public Input<string> NatRuleName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the Virtual Network Gateway.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the gateway.
        /// </summary>
        [Input("virtualNetworkGatewayName", required: true)]
        public Input<string> VirtualNetworkGatewayName { get; set; } = null!;

        public GetVirtualNetworkGatewayNatRuleInvokeArgs()
        {
        }
        public static new GetVirtualNetworkGatewayNatRuleInvokeArgs Empty => new GetVirtualNetworkGatewayNatRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualNetworkGatewayNatRuleResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The private IP address external mapping for NAT.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpnNatRuleMappingResponse> ExternalMappings;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The private IP address internal mapping for NAT.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpnNatRuleMappingResponse> InternalMappings;
        /// <summary>
        /// The IP Configuration ID this NAT rule applies to.
        /// </summary>
        public readonly string? IpConfigurationId;
        /// <summary>
        /// The Source NAT direction of a VPN NAT.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning state of the NAT Rule resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVirtualNetworkGatewayNatRuleResult(
            string etag,

            ImmutableArray<Outputs.VpnNatRuleMappingResponse> externalMappings,

            string? id,

            ImmutableArray<Outputs.VpnNatRuleMappingResponse> internalMappings,

            string? ipConfigurationId,

            string? mode,

            string? name,

            string provisioningState,

            string type)
        {
            Etag = etag;
            ExternalMappings = externalMappings;
            Id = id;
            InternalMappings = internalMappings;
            IpConfigurationId = ipConfigurationId;
            Mode = mode;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
