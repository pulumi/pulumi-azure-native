// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetRouteMap
    {
        /// <summary>
        /// Retrieves the details of a RouteMap.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01.
        /// </summary>
        public static Task<GetRouteMapResult> InvokeAsync(GetRouteMapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteMapResult>("azure-native:network:getRouteMap", args ?? new GetRouteMapArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of a RouteMap.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01.
        /// </summary>
        public static Output<GetRouteMapResult> Invoke(GetRouteMapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteMapResult>("azure-native:network:getRouteMap", args ?? new GetRouteMapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteMapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource group name of the RouteMap's resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the RouteMap.
        /// </summary>
        [Input("routeMapName", required: true)]
        public string RouteMapName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub containing the RouteMap.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public string VirtualHubName { get; set; } = null!;

        public GetRouteMapArgs()
        {
        }
        public static new GetRouteMapArgs Empty => new GetRouteMapArgs();
    }

    public sealed class GetRouteMapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource group name of the RouteMap's resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the RouteMap.
        /// </summary>
        [Input("routeMapName", required: true)]
        public Input<string> RouteMapName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub containing the RouteMap.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public Input<string> VirtualHubName { get; set; } = null!;

        public GetRouteMapInvokeArgs()
        {
        }
        public static new GetRouteMapInvokeArgs Empty => new GetRouteMapInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteMapResult
    {
        /// <summary>
        /// List of connections which have this RoutMap associated for inbound traffic.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedInboundConnections;
        /// <summary>
        /// List of connections which have this RoutMap associated for outbound traffic.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedOutboundConnections;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the RouteMap resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of RouteMap rules to be applied.
        /// </summary>
        public readonly ImmutableArray<Outputs.RouteMapRuleResponse> Rules;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRouteMapResult(
            ImmutableArray<string> associatedInboundConnections,

            ImmutableArray<string> associatedOutboundConnections,

            string etag,

            string id,

            string name,

            string provisioningState,

            ImmutableArray<Outputs.RouteMapRuleResponse> rules,

            string type)
        {
            AssociatedInboundConnections = associatedInboundConnections;
            AssociatedOutboundConnections = associatedOutboundConnections;
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Rules = rules;
            Type = type;
        }
    }
}
