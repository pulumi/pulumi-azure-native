// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20220501
{
    public static class GetPrivateEndpoint
    {
        /// <summary>
        /// Gets the specified private endpoint by resource group.
        /// </summary>
        public static Task<GetPrivateEndpointResult> InvokeAsync(GetPrivateEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateEndpointResult>("azure-native:network/v20220501:getPrivateEndpoint", args ?? new GetPrivateEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified private endpoint by resource group.
        /// </summary>
        public static Output<GetPrivateEndpointResult> Invoke(GetPrivateEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateEndpointResult>("azure-native:network/v20220501:getPrivateEndpoint", args ?? new GetPrivateEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Expands referenced resources.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the private endpoint.
        /// </summary>
        [Input("privateEndpointName", required: true)]
        public string PrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPrivateEndpointArgs()
        {
        }
        public static new GetPrivateEndpointArgs Empty => new GetPrivateEndpointArgs();
    }

    public sealed class GetPrivateEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Expands referenced resources.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the private endpoint.
        /// </summary>
        [Input("privateEndpointName", required: true)]
        public Input<string> PrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPrivateEndpointInvokeArgs()
        {
        }
        public static new GetPrivateEndpointInvokeArgs Empty => new GetPrivateEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateEndpointResult
    {
        /// <summary>
        /// Application security groups in which the private endpoint IP configuration is included.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationSecurityGroupResponse> ApplicationSecurityGroups;
        /// <summary>
        /// An array of custom dns configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomDnsConfigPropertiesFormatResponse> CustomDnsConfigs;
        /// <summary>
        /// The custom name of the network interface attached to the private endpoint.
        /// </summary>
        public readonly string? CustomNetworkInterfaceName;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The extended location of the load balancer.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointIPConfigurationResponse> IpConfigurations;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> ManualPrivateLinkServiceConnections;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An array of references to the network interfaces created for this private endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfaceResponse> NetworkInterfaces;
        /// <summary>
        /// A grouping of information about the connection to the remote resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> PrivateLinkServiceConnections;
        /// <summary>
        /// The provisioning state of the private endpoint resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The ID of the subnet from which the private IP will be allocated.
        /// </summary>
        public readonly Outputs.SubnetResponse? Subnet;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPrivateEndpointResult(
            ImmutableArray<Outputs.ApplicationSecurityGroupResponse> applicationSecurityGroups,

            ImmutableArray<Outputs.CustomDnsConfigPropertiesFormatResponse> customDnsConfigs,

            string? customNetworkInterfaceName,

            string etag,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string? id,

            ImmutableArray<Outputs.PrivateEndpointIPConfigurationResponse> ipConfigurations,

            string? location,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections,

            string name,

            ImmutableArray<Outputs.NetworkInterfaceResponse> networkInterfaces,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> privateLinkServiceConnections,

            string provisioningState,

            Outputs.SubnetResponse? subnet,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ApplicationSecurityGroups = applicationSecurityGroups;
            CustomDnsConfigs = customDnsConfigs;
            CustomNetworkInterfaceName = customNetworkInterfaceName;
            Etag = etag;
            ExtendedLocation = extendedLocation;
            Id = id;
            IpConfigurations = ipConfigurations;
            Location = location;
            ManualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            Name = name;
            NetworkInterfaces = networkInterfaces;
            PrivateLinkServiceConnections = privateLinkServiceConnections;
            ProvisioningState = provisioningState;
            Subnet = subnet;
            Tags = tags;
            Type = type;
        }
    }
}
