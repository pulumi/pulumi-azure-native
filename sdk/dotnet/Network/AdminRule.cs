// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// Network admin rule.
    /// API Version: 2021-02-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:network:AdminRule")]
    public partial class AdminRule : Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates the access allowed for this particular rule
        /// </summary>
        [Output("access")]
        public Output<string> Access { get; private set; } = null!;

        /// <summary>
        /// Groups for configuration
        /// </summary>
        [Output("appliesToGroups")]
        public Output<ImmutableArray<Outputs.NetworkManagerSecurityGroupItemResponse>> AppliesToGroups { get; private set; } = null!;

        /// <summary>
        /// A description for this rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The destination address prefixes. CIDR or destination IP ranges.
        /// </summary>
        [Output("destination")]
        public Output<ImmutableArray<Outputs.AddressPrefixItemResponse>> Destination { get; private set; } = null!;

        /// <summary>
        /// The destination port ranges.
        /// </summary>
        [Output("destinationPortRanges")]
        public Output<ImmutableArray<string>> DestinationPortRanges { get; private set; } = null!;

        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound.
        /// </summary>
        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        /// <summary>
        /// A friendly name for the rule.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// Network protocol this rule applies to.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the security Configuration resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The CIDR or source IP ranges.
        /// </summary>
        [Output("source")]
        public Output<ImmutableArray<Outputs.AddressPrefixItemResponse>> Source { get; private set; } = null!;

        /// <summary>
        /// The source port ranges.
        /// </summary>
        [Output("sourcePortRanges")]
        public Output<ImmutableArray<string>> SourcePortRanges { get; private set; } = null!;

        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AdminRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AdminRule(string name, AdminRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:AdminRule", name, args ?? new AdminRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AdminRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:AdminRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:network:AdminRule"},
                    new Pulumi.Alias { Type = "azure-native:network/v20210201preview:AdminRule"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20210201preview:AdminRule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AdminRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AdminRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AdminRule(name, id, options);
        }
    }

    public sealed class AdminRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates the access allowed for this particular rule
        /// </summary>
        [Input("access", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Network.SecurityConfigurationRuleAccess> Access { get; set; } = null!;

        [Input("appliesToGroups")]
        private InputList<Inputs.NetworkManagerSecurityGroupItemArgs>? _appliesToGroups;

        /// <summary>
        /// Groups for configuration
        /// </summary>
        public InputList<Inputs.NetworkManagerSecurityGroupItemArgs> AppliesToGroups
        {
            get => _appliesToGroups ?? (_appliesToGroups = new InputList<Inputs.NetworkManagerSecurityGroupItemArgs>());
            set => _appliesToGroups = value;
        }

        /// <summary>
        /// The name of the network manager security Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// A description for this rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destination")]
        private InputList<Inputs.AddressPrefixItemArgs>? _destination;

        /// <summary>
        /// The destination address prefixes. CIDR or destination IP ranges.
        /// </summary>
        public InputList<Inputs.AddressPrefixItemArgs> Destination
        {
            get => _destination ?? (_destination = new InputList<Inputs.AddressPrefixItemArgs>());
            set => _destination = value;
        }

        [Input("destinationPortRanges")]
        private InputList<string>? _destinationPortRanges;

        /// <summary>
        /// The destination port ranges.
        /// </summary>
        public InputList<string> DestinationPortRanges
        {
            get => _destinationPortRanges ?? (_destinationPortRanges = new InputList<string>());
            set => _destinationPortRanges = value;
        }

        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound.
        /// </summary>
        [Input("direction", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Network.SecurityConfigurationRuleDirection> Direction { get; set; } = null!;

        /// <summary>
        /// A friendly name for the rule.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Network protocol this rule applies to.
        /// </summary>
        [Input("protocol", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Network.SecurityConfigurationRuleProtocol> Protocol { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        [Input("source")]
        private InputList<Inputs.AddressPrefixItemArgs>? _source;

        /// <summary>
        /// The CIDR or source IP ranges.
        /// </summary>
        public InputList<Inputs.AddressPrefixItemArgs> Source
        {
            get => _source ?? (_source = new InputList<Inputs.AddressPrefixItemArgs>());
            set => _source = value;
        }

        [Input("sourcePortRanges")]
        private InputList<string>? _sourcePortRanges;

        /// <summary>
        /// The source port ranges.
        /// </summary>
        public InputList<string> SourcePortRanges
        {
            get => _sourcePortRanges ?? (_sourcePortRanges = new InputList<string>());
            set => _sourcePortRanges = value;
        }

        public AdminRuleArgs()
        {
        }
    }
}
