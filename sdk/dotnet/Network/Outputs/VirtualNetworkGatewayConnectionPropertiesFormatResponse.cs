// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Outputs
{

    [OutputType]
    public sealed class VirtualNetworkGatewayConnectionPropertiesFormatResponse
    {
        /// <summary>
        /// The authorizationKey.
        /// </summary>
        public readonly string? AuthorizationKey;
        /// <summary>
        /// Connection protocol used for this connection.
        /// </summary>
        public readonly string? ConnectionProtocol;
        /// <summary>
        /// Virtual Network Gateway connection status.
        /// </summary>
        public readonly string ConnectionStatus;
        /// <summary>
        /// Gateway connection type.
        /// </summary>
        public readonly string ConnectionType;
        /// <summary>
        /// The dead peer detection timeout of this connection in seconds.
        /// </summary>
        public readonly int? DpdTimeoutSeconds;
        /// <summary>
        /// The egress bytes transferred in this connection.
        /// </summary>
        public readonly int EgressBytesTransferred;
        /// <summary>
        /// EnableBgp flag.
        /// </summary>
        public readonly bool? EnableBgp;
        /// <summary>
        /// Bypass ExpressRoute Gateway for data forwarding.
        /// </summary>
        public readonly bool? ExpressRouteGatewayBypass;
        /// <summary>
        /// The ingress bytes transferred in this connection.
        /// </summary>
        public readonly int IngressBytesTransferred;
        /// <summary>
        /// The IPSec Policies to be considered by this connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpsecPolicyResponse> IpsecPolicies;
        /// <summary>
        /// The reference to local network gateway resource.
        /// </summary>
        public readonly Outputs.LocalNetworkGatewayResponse? LocalNetworkGateway2;
        /// <summary>
        /// The reference to peerings resource.
        /// </summary>
        public readonly Outputs.SubResourceResponse? Peer;
        /// <summary>
        /// The provisioning state of the virtual network gateway connection resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource GUID property of the virtual network gateway connection resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// The routing weight.
        /// </summary>
        public readonly int? RoutingWeight;
        /// <summary>
        /// The IPSec shared key.
        /// </summary>
        public readonly string? SharedKey;
        /// <summary>
        /// The Traffic Selector Policies to be considered by this connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrafficSelectorPolicyResponse> TrafficSelectorPolicies;
        /// <summary>
        /// Collection of all tunnels' connection health status.
        /// </summary>
        public readonly ImmutableArray<Outputs.TunnelConnectionHealthResponse> TunnelConnectionStatus;
        /// <summary>
        /// Use private local Azure IP for the connection.
        /// </summary>
        public readonly bool? UseLocalAzureIpAddress;
        /// <summary>
        /// Enable policy-based traffic selectors.
        /// </summary>
        public readonly bool? UsePolicyBasedTrafficSelectors;
        /// <summary>
        /// The reference to virtual network gateway resource.
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponse VirtualNetworkGateway1;
        /// <summary>
        /// The reference to virtual network gateway resource.
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponse? VirtualNetworkGateway2;

        [OutputConstructor]
        private VirtualNetworkGatewayConnectionPropertiesFormatResponse(
            string? authorizationKey,

            string? connectionProtocol,

            string connectionStatus,

            string connectionType,

            int? dpdTimeoutSeconds,

            int egressBytesTransferred,

            bool? enableBgp,

            bool? expressRouteGatewayBypass,

            int ingressBytesTransferred,

            ImmutableArray<Outputs.IpsecPolicyResponse> ipsecPolicies,

            Outputs.LocalNetworkGatewayResponse? localNetworkGateway2,

            Outputs.SubResourceResponse? peer,

            string provisioningState,

            string resourceGuid,

            int? routingWeight,

            string? sharedKey,

            ImmutableArray<Outputs.TrafficSelectorPolicyResponse> trafficSelectorPolicies,

            ImmutableArray<Outputs.TunnelConnectionHealthResponse> tunnelConnectionStatus,

            bool? useLocalAzureIpAddress,

            bool? usePolicyBasedTrafficSelectors,

            Outputs.VirtualNetworkGatewayResponse virtualNetworkGateway1,

            Outputs.VirtualNetworkGatewayResponse? virtualNetworkGateway2)
        {
            AuthorizationKey = authorizationKey;
            ConnectionProtocol = connectionProtocol;
            ConnectionStatus = connectionStatus;
            ConnectionType = connectionType;
            DpdTimeoutSeconds = dpdTimeoutSeconds;
            EgressBytesTransferred = egressBytesTransferred;
            EnableBgp = enableBgp;
            ExpressRouteGatewayBypass = expressRouteGatewayBypass;
            IngressBytesTransferred = ingressBytesTransferred;
            IpsecPolicies = ipsecPolicies;
            LocalNetworkGateway2 = localNetworkGateway2;
            Peer = peer;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            RoutingWeight = routingWeight;
            SharedKey = sharedKey;
            TrafficSelectorPolicies = trafficSelectorPolicies;
            TunnelConnectionStatus = tunnelConnectionStatus;
            UseLocalAzureIpAddress = useLocalAzureIpAddress;
            UsePolicyBasedTrafficSelectors = usePolicyBasedTrafficSelectors;
            VirtualNetworkGateway1 = virtualNetworkGateway1;
            VirtualNetworkGateway2 = virtualNetworkGateway2;
        }
    }
}
