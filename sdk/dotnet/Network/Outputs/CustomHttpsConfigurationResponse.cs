// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Outputs
{

    [OutputType]
    public sealed class CustomHttpsConfigurationResponse
    {
        /// <summary>
        /// Defines the source of the SSL certificate
        /// </summary>
        public readonly string CertificateSource;
        /// <summary>
        /// Parameters required for enabling SSL with Front Door-managed certificates (if certificateSource=FrontDoor)
        /// </summary>
        public readonly Outputs.FrontDoorCertificateSourceParametersResponse? FrontDoorCertificateSourceParameters;
        /// <summary>
        /// KeyVault certificate source parameters (if certificateSource=AzureKeyVault)
        /// </summary>
        public readonly Outputs.KeyVaultCertificateSourceParametersResponse? KeyVaultCertificateSourceParameters;
        /// <summary>
        /// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
        /// </summary>
        public readonly string MinimumTlsVersion;
        /// <summary>
        /// Defines the TLS extension protocol that is used for secure delivery
        /// </summary>
        public readonly string ProtocolType;

        [OutputConstructor]
        private CustomHttpsConfigurationResponse(
            string certificateSource,

            Outputs.FrontDoorCertificateSourceParametersResponse? frontDoorCertificateSourceParameters,

            Outputs.KeyVaultCertificateSourceParametersResponse? keyVaultCertificateSourceParameters,

            string minimumTlsVersion,

            string protocolType)
        {
            CertificateSource = certificateSource;
            FrontDoorCertificateSourceParameters = frontDoorCertificateSourceParameters;
            KeyVaultCertificateSourceParameters = keyVaultCertificateSourceParameters;
            MinimumTlsVersion = minimumTlsVersion;
            ProtocolType = protocolType;
        }
    }
}
