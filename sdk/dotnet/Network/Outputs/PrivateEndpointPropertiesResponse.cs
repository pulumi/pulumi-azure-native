// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Outputs
{

    [OutputType]
    public sealed class PrivateEndpointPropertiesResponse
    {
        /// <summary>
        /// An array of custom dns configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomDnsConfigPropertiesFormatResponse> CustomDnsConfigs;
        /// <summary>
        /// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> ManualPrivateLinkServiceConnections;
        /// <summary>
        /// An array of references to the network interfaces created for this private endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfaceResponse> NetworkInterfaces;
        /// <summary>
        /// A grouping of information about the connection to the remote resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> PrivateLinkServiceConnections;
        /// <summary>
        /// The provisioning state of the private endpoint resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The ID of the subnet from which the private IP will be allocated.
        /// </summary>
        public readonly Outputs.SubnetResponse? Subnet;

        [OutputConstructor]
        private PrivateEndpointPropertiesResponse(
            ImmutableArray<Outputs.CustomDnsConfigPropertiesFormatResponse> customDnsConfigs,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections,

            ImmutableArray<Outputs.NetworkInterfaceResponse> networkInterfaces,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> privateLinkServiceConnections,

            string provisioningState,

            Outputs.SubnetResponse? subnet)
        {
            CustomDnsConfigs = customDnsConfigs;
            ManualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            NetworkInterfaces = networkInterfaces;
            PrivateLinkServiceConnections = privateLinkServiceConnections;
            ProvisioningState = provisioningState;
            Subnet = subnet;
        }
    }
}
