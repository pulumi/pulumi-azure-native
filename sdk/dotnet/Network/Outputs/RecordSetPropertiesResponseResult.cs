// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Outputs
{

    [OutputType]
    public sealed class RecordSetPropertiesResponseResult
    {
        /// <summary>
        /// The list of A records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.ARecordResponseResult> ARecords;
        /// <summary>
        /// The list of AAAA records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.AaaaRecordResponseResult> AaaaRecords;
        /// <summary>
        /// The CNAME record in the record set.
        /// </summary>
        public readonly Outputs.CnameRecordResponseResult? CnameRecord;
        /// <summary>
        /// Fully qualified domain name of the record set.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        public readonly bool IsAutoRegistered;
        /// <summary>
        /// The metadata attached to the record set.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// The list of MX records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.MxRecordResponseResult> MxRecords;
        /// <summary>
        /// The list of PTR records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.PtrRecordResponseResult> PtrRecords;
        /// <summary>
        /// The SOA record in the record set.
        /// </summary>
        public readonly Outputs.SoaRecordResponseResult? SoaRecord;
        /// <summary>
        /// The list of SRV records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.SrvRecordResponseResult> SrvRecords;
        /// <summary>
        /// The TTL (time-to-live) of the records in the record set.
        /// </summary>
        public readonly int? Ttl;
        /// <summary>
        /// The list of TXT records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.TxtRecordResponseResult> TxtRecords;

        [OutputConstructor]
        private RecordSetPropertiesResponseResult(
            ImmutableArray<Outputs.ARecordResponseResult> aRecords,

            ImmutableArray<Outputs.AaaaRecordResponseResult> aaaaRecords,

            Outputs.CnameRecordResponseResult? cnameRecord,

            string fqdn,

            bool isAutoRegistered,

            ImmutableDictionary<string, string>? metadata,

            ImmutableArray<Outputs.MxRecordResponseResult> mxRecords,

            ImmutableArray<Outputs.PtrRecordResponseResult> ptrRecords,

            Outputs.SoaRecordResponseResult? soaRecord,

            ImmutableArray<Outputs.SrvRecordResponseResult> srvRecords,

            int? ttl,

            ImmutableArray<Outputs.TxtRecordResponseResult> txtRecords)
        {
            ARecords = aRecords;
            AaaaRecords = aaaaRecords;
            CnameRecord = cnameRecord;
            Fqdn = fqdn;
            IsAutoRegistered = isAutoRegistered;
            Metadata = metadata;
            MxRecords = mxRecords;
            PtrRecords = ptrRecords;
            SoaRecord = soaRecord;
            SrvRecords = srvRecords;
            Ttl = ttl;
            TxtRecords = txtRecords;
        }
    }
}
