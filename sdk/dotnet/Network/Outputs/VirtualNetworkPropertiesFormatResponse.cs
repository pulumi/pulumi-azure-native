// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.Outputs
{

    [OutputType]
    public sealed class VirtualNetworkPropertiesFormatResponse
    {
        /// <summary>
        /// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
        /// </summary>
        public readonly Outputs.AddressSpaceResponse? AddressSpace;
        /// <summary>
        /// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
        /// </summary>
        public readonly Outputs.VirtualNetworkBgpCommunitiesResponse? BgpCommunities;
        /// <summary>
        /// The DDoS protection plan associated with the virtual network.
        /// </summary>
        public readonly Outputs.SubResourceResponse? DdosProtectionPlan;
        /// <summary>
        /// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
        /// </summary>
        public readonly Outputs.DhcpOptionsResponse? DhcpOptions;
        /// <summary>
        /// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
        /// </summary>
        public readonly bool? EnableDdosProtection;
        /// <summary>
        /// Indicates if VM protection is enabled for all the subnets in the virtual network.
        /// </summary>
        public readonly bool? EnableVmProtection;
        /// <summary>
        /// Array of IpAllocation which reference this VNET.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> IpAllocations;
        /// <summary>
        /// The provisioning state of the virtual network resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resourceGuid property of the Virtual Network resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// A list of subnets in a Virtual Network.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubnetResponse> Subnets;
        /// <summary>
        /// A list of peerings in a Virtual Network.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualNetworkPeeringResponse> VirtualNetworkPeerings;

        [OutputConstructor]
        private VirtualNetworkPropertiesFormatResponse(
            Outputs.AddressSpaceResponse? addressSpace,

            Outputs.VirtualNetworkBgpCommunitiesResponse? bgpCommunities,

            Outputs.SubResourceResponse? ddosProtectionPlan,

            Outputs.DhcpOptionsResponse? dhcpOptions,

            bool? enableDdosProtection,

            bool? enableVmProtection,

            ImmutableArray<Outputs.SubResourceResponse> ipAllocations,

            string provisioningState,

            string resourceGuid,

            ImmutableArray<Outputs.SubnetResponse> subnets,

            ImmutableArray<Outputs.VirtualNetworkPeeringResponse> virtualNetworkPeerings)
        {
            AddressSpace = addressSpace;
            BgpCommunities = bgpCommunities;
            DdosProtectionPlan = ddosProtectionPlan;
            DhcpOptions = dhcpOptions;
            EnableDdosProtection = enableDdosProtection;
            EnableVmProtection = enableVmProtection;
            IpAllocations = ipAllocations;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            Subnets = subnets;
            VirtualNetworkPeerings = virtualNetworkPeerings;
        }
    }
}
