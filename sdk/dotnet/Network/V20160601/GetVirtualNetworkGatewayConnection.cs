// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20160601
{
    public static class GetVirtualNetworkGatewayConnection
    {
        public static Task<GetVirtualNetworkGatewayConnectionResult> InvokeAsync(GetVirtualNetworkGatewayConnectionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVirtualNetworkGatewayConnectionResult>("azure-nextgen:network/v20160601:getVirtualNetworkGatewayConnection", args ?? new GetVirtualNetworkGatewayConnectionArgs(), options.WithVersion());
    }


    public sealed class GetVirtualNetworkGatewayConnectionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network gateway connection.
        /// </summary>
        [Input("virtualNetworkGatewayConnectionName", required: true)]
        public string VirtualNetworkGatewayConnectionName { get; set; } = null!;

        public GetVirtualNetworkGatewayConnectionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVirtualNetworkGatewayConnectionResult
    {
        /// <summary>
        /// The authorizationKey.
        /// </summary>
        public readonly string? AuthorizationKey;
        /// <summary>
        /// Virtual network Gateway connection status
        /// </summary>
        public readonly string? ConnectionStatus;
        /// <summary>
        /// Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet
        /// </summary>
        public readonly string? ConnectionType;
        /// <summary>
        /// The Egress Bytes Transferred in this connection
        /// </summary>
        public readonly int? EgressBytesTransferred;
        /// <summary>
        /// EnableBgp Flag
        /// </summary>
        public readonly bool? EnableBgp;
        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The Ingress Bytes Transferred in this connection
        /// </summary>
        public readonly int? IngressBytesTransferred;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.LocalNetworkGatewayResponse? LocalNetworkGateway2;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The reference to peerings resource.
        /// </summary>
        public readonly Outputs.SubResourceResponse? Peer;
        /// <summary>
        /// Gets provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource
        /// </summary>
        public readonly string? ResourceGuid;
        /// <summary>
        /// The Routing weight.
        /// </summary>
        public readonly int? RoutingWeight;
        /// <summary>
        /// The IPsec share key.
        /// </summary>
        public readonly string? SharedKey;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponse? VirtualNetworkGateway1;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponse? VirtualNetworkGateway2;

        [OutputConstructor]
        private GetVirtualNetworkGatewayConnectionResult(
            string? authorizationKey,

            string? connectionStatus,

            string? connectionType,

            int? egressBytesTransferred,

            bool? enableBgp,

            string? etag,

            int? ingressBytesTransferred,

            Outputs.LocalNetworkGatewayResponse? localNetworkGateway2,

            string? location,

            string name,

            Outputs.SubResourceResponse? peer,

            string? provisioningState,

            string? resourceGuid,

            int? routingWeight,

            string? sharedKey,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.VirtualNetworkGatewayResponse? virtualNetworkGateway1,

            Outputs.VirtualNetworkGatewayResponse? virtualNetworkGateway2)
        {
            AuthorizationKey = authorizationKey;
            ConnectionStatus = connectionStatus;
            ConnectionType = connectionType;
            EgressBytesTransferred = egressBytesTransferred;
            EnableBgp = enableBgp;
            Etag = etag;
            IngressBytesTransferred = ingressBytesTransferred;
            LocalNetworkGateway2 = localNetworkGateway2;
            Location = location;
            Name = name;
            Peer = peer;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            RoutingWeight = routingWeight;
            SharedKey = sharedKey;
            Tags = tags;
            Type = type;
            VirtualNetworkGateway1 = virtualNetworkGateway1;
            VirtualNetworkGateway2 = virtualNetworkGateway2;
        }
    }
}
