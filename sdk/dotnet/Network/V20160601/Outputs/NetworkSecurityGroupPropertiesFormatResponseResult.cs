// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160601.Outputs
{

    [OutputType]
    public sealed class NetworkSecurityGroupPropertiesFormatResponseResult
    {
        /// <summary>
        /// Gets or default security rules of network security group
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityRuleResponseResult> DefaultSecurityRules;
        /// <summary>
        /// Gets collection of references to Network Interfaces
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfaceResponseResult> NetworkInterfaces;
        /// <summary>
        /// Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets resource guid property of the network security group resource
        /// </summary>
        public readonly string? ResourceGuid;
        /// <summary>
        /// Gets or sets security rules of network security group
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityRuleResponseResult> SecurityRules;
        /// <summary>
        /// Gets collection of references to subnets
        /// </summary>
        public readonly ImmutableArray<Outputs.SubnetResponseResult> Subnets;

        [OutputConstructor]
        private NetworkSecurityGroupPropertiesFormatResponseResult(
            ImmutableArray<Outputs.SecurityRuleResponseResult> defaultSecurityRules,

            ImmutableArray<Outputs.NetworkInterfaceResponseResult> networkInterfaces,

            string? provisioningState,

            string? resourceGuid,

            ImmutableArray<Outputs.SecurityRuleResponseResult> securityRules,

            ImmutableArray<Outputs.SubnetResponseResult> subnets)
        {
            DefaultSecurityRules = defaultSecurityRules;
            NetworkInterfaces = networkInterfaces;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            SecurityRules = securityRules;
            Subnets = subnets;
        }
    }
}
