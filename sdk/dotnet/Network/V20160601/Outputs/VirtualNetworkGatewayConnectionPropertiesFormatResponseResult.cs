// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160601.Outputs
{

    [OutputType]
    public sealed class VirtualNetworkGatewayConnectionPropertiesFormatResponseResult
    {
        /// <summary>
        /// The authorizationKey.
        /// </summary>
        public readonly string? AuthorizationKey;
        /// <summary>
        /// Virtual network Gateway connection status
        /// </summary>
        public readonly string? ConnectionStatus;
        /// <summary>
        /// Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet
        /// </summary>
        public readonly string? ConnectionType;
        /// <summary>
        /// The Egress Bytes Transferred in this connection
        /// </summary>
        public readonly int? EgressBytesTransferred;
        /// <summary>
        /// EnableBgp Flag
        /// </summary>
        public readonly bool? EnableBgp;
        /// <summary>
        /// The Ingress Bytes Transferred in this connection
        /// </summary>
        public readonly int? IngressBytesTransferred;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.LocalNetworkGatewayResponseResult? LocalNetworkGateway2;
        /// <summary>
        /// The reference to peerings resource.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? Peer;
        /// <summary>
        /// Gets provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource
        /// </summary>
        public readonly string? ResourceGuid;
        /// <summary>
        /// The Routing weight.
        /// </summary>
        public readonly int? RoutingWeight;
        /// <summary>
        /// The IPsec share key.
        /// </summary>
        public readonly string? SharedKey;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponseResult? VirtualNetworkGateway1;
        /// <summary>
        /// A common class for general resource information
        /// </summary>
        public readonly Outputs.VirtualNetworkGatewayResponseResult? VirtualNetworkGateway2;

        [OutputConstructor]
        private VirtualNetworkGatewayConnectionPropertiesFormatResponseResult(
            string? authorizationKey,

            string? connectionStatus,

            string? connectionType,

            int? egressBytesTransferred,

            bool? enableBgp,

            int? ingressBytesTransferred,

            Outputs.LocalNetworkGatewayResponseResult? localNetworkGateway2,

            Outputs.SubResourceResponseResult? peer,

            string? provisioningState,

            string? resourceGuid,

            int? routingWeight,

            string? sharedKey,

            Outputs.VirtualNetworkGatewayResponseResult? virtualNetworkGateway1,

            Outputs.VirtualNetworkGatewayResponseResult? virtualNetworkGateway2)
        {
            AuthorizationKey = authorizationKey;
            ConnectionStatus = connectionStatus;
            ConnectionType = connectionType;
            EgressBytesTransferred = egressBytesTransferred;
            EnableBgp = enableBgp;
            IngressBytesTransferred = ingressBytesTransferred;
            LocalNetworkGateway2 = localNetworkGateway2;
            Peer = peer;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            RoutingWeight = routingWeight;
            SharedKey = sharedKey;
            VirtualNetworkGateway1 = virtualNetworkGateway1;
            VirtualNetworkGateway2 = virtualNetworkGateway2;
        }
    }
}
