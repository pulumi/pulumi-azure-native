// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160601.Outputs
{

    [OutputType]
    public sealed class NetworkInterfaceIPConfigurationPropertiesFormatResponseResult
    {
        /// <summary>
        /// Gets or sets the reference of ApplicationGatewayBackendAddressPool resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayBackendAddressPoolResponseResult> ApplicationGatewayBackendAddressPools;
        /// <summary>
        /// Gets or sets the reference of LoadBalancerBackendAddressPool resource
        /// </summary>
        public readonly ImmutableArray<Outputs.BackendAddressPoolResponseResult> LoadBalancerBackendAddressPools;
        /// <summary>
        /// Gets or sets list of references of LoadBalancerInboundNatRules
        /// </summary>
        public readonly ImmutableArray<Outputs.InboundNatRuleResponseResult> LoadBalancerInboundNatRules;
        /// <summary>
        /// Gets whether this is a primary customer address on the NIC
        /// </summary>
        public readonly bool? Primary;
        public readonly string? PrivateIPAddress;
        /// <summary>
        /// Gets or sets PrivateIP address version (IPv4/IPv6)
        /// </summary>
        public readonly string? PrivateIPAddressVersion;
        /// <summary>
        /// Gets or sets PrivateIP allocation method
        /// </summary>
        public readonly string? PrivateIPAllocationMethod;
        public readonly string? ProvisioningState;
        /// <summary>
        /// PublicIPAddress resource
        /// </summary>
        public readonly Outputs.PublicIPAddressResponseResult? PublicIPAddress;
        /// <summary>
        /// Subnet in a VirtualNetwork resource
        /// </summary>
        public readonly Outputs.SubnetResponseResult? Subnet;

        [OutputConstructor]
        private NetworkInterfaceIPConfigurationPropertiesFormatResponseResult(
            ImmutableArray<Outputs.ApplicationGatewayBackendAddressPoolResponseResult> applicationGatewayBackendAddressPools,

            ImmutableArray<Outputs.BackendAddressPoolResponseResult> loadBalancerBackendAddressPools,

            ImmutableArray<Outputs.InboundNatRuleResponseResult> loadBalancerInboundNatRules,

            bool? primary,

            string? privateIPAddress,

            string? privateIPAddressVersion,

            string? privateIPAllocationMethod,

            string? provisioningState,

            Outputs.PublicIPAddressResponseResult? publicIPAddress,

            Outputs.SubnetResponseResult? subnet)
        {
            ApplicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            LoadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            LoadBalancerInboundNatRules = loadBalancerInboundNatRules;
            Primary = primary;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAddressVersion = privateIPAddressVersion;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            ProvisioningState = provisioningState;
            PublicIPAddress = publicIPAddress;
            Subnet = subnet;
        }
    }
}
