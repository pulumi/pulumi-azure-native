// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160601.Inputs
{

    public sealed class VirtualNetworkPropertiesFormatArgs : Pulumi.ResourceArgs
    {
        [Input("VirtualNetworkPeerings")]
        private InputList<Inputs.VirtualNetworkPeeringArgs>? _VirtualNetworkPeerings;

        /// <summary>
        /// Gets or sets list of peerings in a VirtualNetwork
        /// </summary>
        public InputList<Inputs.VirtualNetworkPeeringArgs> VirtualNetworkPeerings
        {
            get => _VirtualNetworkPeerings ?? (_VirtualNetworkPeerings = new InputList<Inputs.VirtualNetworkPeeringArgs>());
            set => _VirtualNetworkPeerings = value;
        }

        /// <summary>
        /// Gets or sets AddressSpace that contains an array of IP address ranges that can be used by subnets
        /// </summary>
        [Input("addressSpace")]
        public Input<Inputs.AddressSpaceArgs>? AddressSpace { get; set; }

        /// <summary>
        /// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs deployed in the virtual network
        /// </summary>
        [Input("dhcpOptions")]
        public Input<Inputs.DhcpOptionsArgs>? DhcpOptions { get; set; }

        /// <summary>
        /// Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets resource guid property of the VirtualNetwork resource
        /// </summary>
        [Input("resourceGuid")]
        public Input<string>? ResourceGuid { get; set; }

        [Input("subnets")]
        private InputList<Inputs.SubnetArgs>? _subnets;

        /// <summary>
        /// Gets or sets list of subnets in a VirtualNetwork
        /// </summary>
        public InputList<Inputs.SubnetArgs> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<Inputs.SubnetArgs>());
            set => _subnets = value;
        }

        public VirtualNetworkPropertiesFormatArgs()
        {
        }
    }
}
