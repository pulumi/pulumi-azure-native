// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20150501Preview
{
    [Obsolete(@"Version 2015-05-01-preview will be removed in v2 of the provider.")]
    public static class GetNetworkSecurityGroup
    {
        /// <summary>
        /// NetworkSecurityGroup resource
        /// </summary>
        public static Task<GetNetworkSecurityGroupResult> InvokeAsync(GetNetworkSecurityGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSecurityGroupResult>("azure-native:network/v20150501preview:getNetworkSecurityGroup", args ?? new GetNetworkSecurityGroupArgs(), options.WithDefaults());

        /// <summary>
        /// NetworkSecurityGroup resource
        /// </summary>
        public static Output<GetNetworkSecurityGroupResult> Invoke(GetNetworkSecurityGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNetworkSecurityGroupResult>("azure-native:network/v20150501preview:getNetworkSecurityGroup", args ?? new GetNetworkSecurityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSecurityGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network security group.
        /// </summary>
        [Input("networkSecurityGroupName", required: true)]
        public string NetworkSecurityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityGroupArgs()
        {
        }
        public static new GetNetworkSecurityGroupArgs Empty => new GetNetworkSecurityGroupArgs();
    }

    public sealed class GetNetworkSecurityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the network security group.
        /// </summary>
        [Input("networkSecurityGroupName", required: true)]
        public Input<string> NetworkSecurityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkSecurityGroupInvokeArgs()
        {
        }
        public static new GetNetworkSecurityGroupInvokeArgs Empty => new GetNetworkSecurityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSecurityGroupResult
    {
        /// <summary>
        /// Gets or sets Default security rules of network security group
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityRuleResponse> DefaultSecurityRules;
        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets collection of references to Network Interfaces
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> NetworkInterfaces;
        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets resource guid property of the network security group resource
        /// </summary>
        public readonly string? ResourceGuid;
        /// <summary>
        /// Gets or sets Security rules of network security group
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityRuleResponse> SecurityRules;
        /// <summary>
        /// Gets collection of references to subnets
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> Subnets;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkSecurityGroupResult(
            ImmutableArray<Outputs.SecurityRuleResponse> defaultSecurityRules,

            string? etag,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.SubResourceResponse> networkInterfaces,

            string? provisioningState,

            string? resourceGuid,

            ImmutableArray<Outputs.SecurityRuleResponse> securityRules,

            ImmutableArray<Outputs.SubResourceResponse> subnets,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            DefaultSecurityRules = defaultSecurityRules;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            NetworkInterfaces = networkInterfaces;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            SecurityRules = securityRules;
            Subnets = subnets;
            Tags = tags;
            Type = type;
        }
    }
}
