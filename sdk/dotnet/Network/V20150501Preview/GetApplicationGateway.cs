// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20150501Preview
{
    [Obsolete(@"Version 2015-05-01-preview will be removed in v2 of the provider.")]
    public static class GetApplicationGateway
    {
        /// <summary>
        /// ApplicationGateways resource
        /// </summary>
        public static Task<GetApplicationGatewayResult> InvokeAsync(GetApplicationGatewayArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationGatewayResult>("azure-native:network/v20150501preview:getApplicationGateway", args ?? new GetApplicationGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// ApplicationGateways resource
        /// </summary>
        public static Output<GetApplicationGatewayResult> Invoke(GetApplicationGatewayInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationGatewayResult>("azure-native:network/v20150501preview:getApplicationGateway", args ?? new GetApplicationGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application gateway.
        /// </summary>
        [Input("applicationGatewayName", required: true)]
        public string ApplicationGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApplicationGatewayArgs()
        {
        }
        public static new GetApplicationGatewayArgs Empty => new GetApplicationGatewayArgs();
    }

    public sealed class GetApplicationGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application gateway.
        /// </summary>
        [Input("applicationGatewayName", required: true)]
        public Input<string> ApplicationGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetApplicationGatewayInvokeArgs()
        {
        }
        public static new GetApplicationGatewayInvokeArgs Empty => new GetApplicationGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationGatewayResult
    {
        /// <summary>
        /// Gets or sets backend address pool of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayBackendAddressPoolResponse> BackendAddressPools;
        /// <summary>
        /// Gets or sets backend http settings of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayBackendHttpSettingsResponse> BackendHttpSettingsCollection;
        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets or sets frontend IP addresses of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayFrontendIPConfigurationResponse> FrontendIPConfigurations;
        /// <summary>
        /// Gets or sets frontend ports of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayFrontendPortResponse> FrontendPorts;
        /// <summary>
        /// Gets or sets subnets of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayIPConfigurationResponse> GatewayIPConfigurations;
        /// <summary>
        /// Gets or sets HTTP listeners of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayHttpListenerResponse> HttpListeners;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets operational state of application gateway resource
        /// </summary>
        public readonly string OperationalState;
        /// <summary>
        /// Gets or sets Provisioning state of the ApplicationGateway resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets request routing rules of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewayRequestRoutingRuleResponse> RequestRoutingRules;
        /// <summary>
        /// Gets or sets resource guid property of the ApplicationGateway resource
        /// </summary>
        public readonly string? ResourceGuid;
        /// <summary>
        /// Gets or sets sku of application gateway resource
        /// </summary>
        public readonly Outputs.ApplicationGatewaySkuResponse? Sku;
        /// <summary>
        /// Gets or sets ssl certificates of application gateway resource
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationGatewaySslCertificateResponse> SslCertificates;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApplicationGatewayResult(
            ImmutableArray<Outputs.ApplicationGatewayBackendAddressPoolResponse> backendAddressPools,

            ImmutableArray<Outputs.ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection,

            string? etag,

            ImmutableArray<Outputs.ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations,

            ImmutableArray<Outputs.ApplicationGatewayFrontendPortResponse> frontendPorts,

            ImmutableArray<Outputs.ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations,

            ImmutableArray<Outputs.ApplicationGatewayHttpListenerResponse> httpListeners,

            string id,

            string location,

            string name,

            string operationalState,

            string? provisioningState,

            ImmutableArray<Outputs.ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules,

            string? resourceGuid,

            Outputs.ApplicationGatewaySkuResponse? sku,

            ImmutableArray<Outputs.ApplicationGatewaySslCertificateResponse> sslCertificates,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            BackendAddressPools = backendAddressPools;
            BackendHttpSettingsCollection = backendHttpSettingsCollection;
            Etag = etag;
            FrontendIPConfigurations = frontendIPConfigurations;
            FrontendPorts = frontendPorts;
            GatewayIPConfigurations = gatewayIPConfigurations;
            HttpListeners = httpListeners;
            Id = id;
            Location = location;
            Name = name;
            OperationalState = operationalState;
            ProvisioningState = provisioningState;
            RequestRoutingRules = requestRoutingRules;
            ResourceGuid = resourceGuid;
            Sku = sku;
            SslCertificates = sslCertificates;
            Tags = tags;
            Type = type;
        }
    }
}
