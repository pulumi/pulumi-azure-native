// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20150501Preview.Outputs
{

    [OutputType]
    public sealed class OutboundNatRuleResponse
    {
        /// <summary>
        /// Gets or sets the number of outbound ports to be used for SNAT
        /// </summary>
        public readonly int AllocatedOutboundPorts;
        /// <summary>
        /// Gets or sets a reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs
        /// </summary>
        public readonly Outputs.SubResourceResponse BackendAddressPool;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets or sets Frontend IP addresses of the load balancer
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> FrontendIPConfigurations;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Gets name of the resource that is unique within a resource group. This name can be used to access the resource
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;

        [OutputConstructor]
        private OutboundNatRuleResponse(
            int allocatedOutboundPorts,

            Outputs.SubResourceResponse backendAddressPool,

            string? etag,

            ImmutableArray<Outputs.SubResourceResponse> frontendIPConfigurations,

            string? id,

            string? name,

            string? provisioningState)
        {
            AllocatedOutboundPorts = allocatedOutboundPorts;
            BackendAddressPool = backendAddressPool;
            Etag = etag;
            FrontendIPConfigurations = frontendIPConfigurations;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
        }
    }
}
