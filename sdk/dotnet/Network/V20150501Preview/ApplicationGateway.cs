// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20150501Preview
{
    /// <summary>
    /// ApplicationGateways resource
    /// </summary>
    public partial class ApplicationGateway : Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets backend address pool of application gateway resource
        /// </summary>
        [Output("backendAddressPools")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendAddressPoolResponse>> BackendAddressPools { get; private set; } = null!;

        /// <summary>
        /// Gets or sets backend http settings of application gateway resource
        /// </summary>
        [Output("backendHttpSettingsCollection")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendHttpSettingsResponse>> BackendHttpSettingsCollection { get; private set; } = null!;

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Gets or sets frontend IP addresses of application gateway resource
        /// </summary>
        [Output("frontendIPConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendIPConfigurationResponse>> FrontendIPConfigurations { get; private set; } = null!;

        /// <summary>
        /// Gets or sets frontend ports of application gateway resource
        /// </summary>
        [Output("frontendPorts")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendPortResponse>> FrontendPorts { get; private set; } = null!;

        /// <summary>
        /// Gets or sets subnets of application gateway resource
        /// </summary>
        [Output("gatewayIPConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayIPConfigurationResponse>> GatewayIPConfigurations { get; private set; } = null!;

        /// <summary>
        /// Gets or sets HTTP listeners of application gateway resource
        /// </summary>
        [Output("httpListeners")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayHttpListenerResponse>> HttpListeners { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets operational state of application gateway resource
        /// </summary>
        [Output("operationalState")]
        public Output<string> OperationalState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets Provisioning state of the ApplicationGateway resource Updating/Deleting/Failed
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets request routing rules of application gateway resource
        /// </summary>
        [Output("requestRoutingRules")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRequestRoutingRuleResponse>> RequestRoutingRules { get; private set; } = null!;

        /// <summary>
        /// Gets or sets resource guid property of the ApplicationGateway resource
        /// </summary>
        [Output("resourceGuid")]
        public Output<string?> ResourceGuid { get; private set; } = null!;

        /// <summary>
        /// Gets or sets sku of application gateway resource
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ApplicationGatewaySkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Gets or sets ssl certificates of application gateway resource
        /// </summary>
        [Output("sslCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewaySslCertificateResponse>> SslCertificates { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationGateway(string name, ApplicationGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:network/v20150501preview:ApplicationGateway", name, args ?? new ApplicationGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationGateway(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:network/v20150501preview:ApplicationGateway", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:network/latest:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20150615:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20160330:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20160601:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20160901:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20161201:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20170301:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20170601:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20170801:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20170901:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20171001:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20171101:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180101:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180201:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180401:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180601:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180701:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20180801:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20181001:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20181101:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20181201:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190201:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190401:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190601:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190701:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190801:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20190901:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20191101:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20191201:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20200301:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20200401:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20200501:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20200601:ApplicationGateway"},
                    new Pulumi.Alias { Type = "azure-nextgen:network/v20200701:ApplicationGateway"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationGateway Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ApplicationGateway(name, id, options);
        }
    }

    public sealed class ApplicationGatewayArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the ApplicationGateway.
        /// </summary>
        [Input("applicationGatewayName", required: true)]
        public Input<string> ApplicationGatewayName { get; set; } = null!;

        [Input("backendAddressPools")]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs>? _backendAddressPools;

        /// <summary>
        /// Gets or sets backend address pool of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettingsCollection")]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs>? _backendHttpSettingsCollection;

        /// <summary>
        /// Gets or sets backend http settings of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs> BackendHttpSettingsCollection
        {
            get => _backendHttpSettingsCollection ?? (_backendHttpSettingsCollection = new InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs>());
            set => _backendHttpSettingsCollection = value;
        }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("frontendIPConfigurations")]
        private InputList<Inputs.ApplicationGatewayFrontendIPConfigurationArgs>? _frontendIPConfigurations;

        /// <summary>
        /// Gets or sets frontend IP addresses of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIPConfigurationArgs> FrontendIPConfigurations
        {
            get => _frontendIPConfigurations ?? (_frontendIPConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIPConfigurationArgs>());
            set => _frontendIPConfigurations = value;
        }

        [Input("frontendPorts")]
        private InputList<Inputs.ApplicationGatewayFrontendPortArgs>? _frontendPorts;

        /// <summary>
        /// Gets or sets frontend ports of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIPConfigurations")]
        private InputList<Inputs.ApplicationGatewayIPConfigurationArgs>? _gatewayIPConfigurations;

        /// <summary>
        /// Gets or sets subnets of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayIPConfigurationArgs> GatewayIPConfigurations
        {
            get => _gatewayIPConfigurations ?? (_gatewayIPConfigurations = new InputList<Inputs.ApplicationGatewayIPConfigurationArgs>());
            set => _gatewayIPConfigurations = value;
        }

        [Input("httpListeners")]
        private InputList<Inputs.ApplicationGatewayHttpListenerArgs>? _httpListeners;

        /// <summary>
        /// Gets or sets HTTP listeners of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenerArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenerArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Gets or sets Provisioning state of the ApplicationGateway resource Updating/Deleting/Failed
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        [Input("requestRoutingRules")]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs>? _requestRoutingRules;

        /// <summary>
        /// Gets or sets request routing rules of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets resource guid property of the ApplicationGateway resource
        /// </summary>
        [Input("resourceGuid")]
        public Input<string>? ResourceGuid { get; set; }

        /// <summary>
        /// Gets or sets sku of application gateway resource
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ApplicationGatewaySkuArgs>? Sku { get; set; }

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificateArgs>? _sslCertificates;

        /// <summary>
        /// Gets or sets ssl certificates of application gateway resource
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificateArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificateArgs>());
            set => _sslCertificates = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ApplicationGatewayArgs()
        {
        }
    }
}
