// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    public static class GetRoutingIntent
    {
        /// <summary>
        /// Retrieves the details of a RoutingIntent.
        /// API Version: 2022-01-01.
        /// </summary>
        public static Task<GetRoutingIntentResult> InvokeAsync(GetRoutingIntentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingIntentResult>("azure-native:network:getRoutingIntent", args ?? new GetRoutingIntentArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of a RoutingIntent.
        /// API Version: 2022-01-01.
        /// </summary>
        public static Output<GetRoutingIntentResult> Invoke(GetRoutingIntentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingIntentResult>("azure-native:network:getRoutingIntent", args ?? new GetRoutingIntentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingIntentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource group name of the RoutingIntent.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the RoutingIntent.
        /// </summary>
        [Input("routingIntentName", required: true)]
        public string RoutingIntentName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public string VirtualHubName { get; set; } = null!;

        public GetRoutingIntentArgs()
        {
        }
        public static new GetRoutingIntentArgs Empty => new GetRoutingIntentArgs();
    }

    public sealed class GetRoutingIntentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource group name of the RoutingIntent.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the RoutingIntent.
        /// </summary>
        [Input("routingIntentName", required: true)]
        public Input<string> RoutingIntentName { get; set; } = null!;

        /// <summary>
        /// The name of the VirtualHub.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public Input<string> VirtualHubName { get; set; } = null!;

        public GetRoutingIntentInvokeArgs()
        {
        }
        public static new GetRoutingIntentInvokeArgs Empty => new GetRoutingIntentInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingIntentResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The provisioning state of the RoutingIntent resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of routing policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.RoutingPolicyResponse> RoutingPolicies;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRoutingIntentResult(
            string etag,

            string? id,

            string? name,

            string provisioningState,

            ImmutableArray<Outputs.RoutingPolicyResponse> routingPolicies,

            string type)
        {
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            RoutingPolicies = routingPolicies;
            Type = type;
        }
    }
}
