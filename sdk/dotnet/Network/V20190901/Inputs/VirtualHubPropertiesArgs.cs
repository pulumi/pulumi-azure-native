// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190901.Inputs
{

    /// <summary>
    /// Parameters for VirtualHub.
    /// </summary>
    public sealed class VirtualHubPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address-prefix for this VirtualHub.
        /// </summary>
        [Input("addressPrefix")]
        public Input<string>? AddressPrefix { get; set; }

        /// <summary>
        /// The azureFirewall associated with this VirtualHub.
        /// </summary>
        [Input("azureFirewall")]
        public Input<Inputs.SubResourceArgs>? AzureFirewall { get; set; }

        /// <summary>
        /// The expressRouteGateway associated with this VirtualHub.
        /// </summary>
        [Input("expressRouteGateway")]
        public Input<Inputs.SubResourceArgs>? ExpressRouteGateway { get; set; }

        /// <summary>
        /// The P2SVpnGateway associated with this VirtualHub.
        /// </summary>
        [Input("p2SVpnGateway")]
        public Input<Inputs.SubResourceArgs>? P2SVpnGateway { get; set; }

        /// <summary>
        /// The routeTable associated with this virtual hub.
        /// </summary>
        [Input("routeTable")]
        public Input<Inputs.VirtualHubRouteTableArgs>? RouteTable { get; set; }

        /// <summary>
        /// The Security Provider name.
        /// </summary>
        [Input("securityProviderName")]
        public Input<string>? SecurityProviderName { get; set; }

        /// <summary>
        /// The sku of this VirtualHub.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        [Input("virtualHubRouteTableV2s")]
        private InputList<Inputs.VirtualHubRouteTableV2Args>? _virtualHubRouteTableV2s;

        /// <summary>
        /// List of all virtual hub route table v2s associated with this VirtualHub.
        /// </summary>
        public InputList<Inputs.VirtualHubRouteTableV2Args> VirtualHubRouteTableV2s
        {
            get => _virtualHubRouteTableV2s ?? (_virtualHubRouteTableV2s = new InputList<Inputs.VirtualHubRouteTableV2Args>());
            set => _virtualHubRouteTableV2s = value;
        }

        [Input("virtualNetworkConnections")]
        private InputList<Inputs.HubVirtualNetworkConnectionArgs>? _virtualNetworkConnections;

        /// <summary>
        /// List of all vnet connections with this VirtualHub.
        /// </summary>
        public InputList<Inputs.HubVirtualNetworkConnectionArgs> VirtualNetworkConnections
        {
            get => _virtualNetworkConnections ?? (_virtualNetworkConnections = new InputList<Inputs.HubVirtualNetworkConnectionArgs>());
            set => _virtualNetworkConnections = value;
        }

        /// <summary>
        /// The VirtualWAN to which the VirtualHub belongs.
        /// </summary>
        [Input("virtualWan")]
        public Input<Inputs.SubResourceArgs>? VirtualWan { get; set; }

        /// <summary>
        /// The VpnGateway associated with this VirtualHub.
        /// </summary>
        [Input("vpnGateway")]
        public Input<Inputs.SubResourceArgs>? VpnGateway { get; set; }

        public VirtualHubPropertiesArgs()
        {
        }
    }
}
