// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190901.Outputs
{

    [OutputType]
    public sealed class ExpressRoutePortPropertiesFormatResponseResult
    {
        /// <summary>
        /// Date of the physical port allocation to be used in Letter of Authorization.
        /// </summary>
        public readonly string AllocationDate;
        /// <summary>
        /// Bandwidth of procured ports in Gbps.
        /// </summary>
        public readonly int? BandwidthInGbps;
        /// <summary>
        /// Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponseResult> Circuits;
        /// <summary>
        /// Encapsulation method on physical ports.
        /// </summary>
        public readonly string? Encapsulation;
        /// <summary>
        /// Ether type of the physical port.
        /// </summary>
        public readonly string EtherType;
        /// <summary>
        /// The set of physical links of the ExpressRoutePort resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteLinkResponseResult> Links;
        /// <summary>
        /// Maximum transmission unit of the physical port pair(s).
        /// </summary>
        public readonly string Mtu;
        /// <summary>
        /// The name of the peering location that the ExpressRoutePort is mapped to physically.
        /// </summary>
        public readonly string? PeeringLocation;
        /// <summary>
        /// Aggregate Gbps of associated circuit bandwidths.
        /// </summary>
        public readonly double ProvisionedBandwidthInGbps;
        /// <summary>
        /// The provisioning state of the express route port resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource GUID property of the express route port resource.
        /// </summary>
        public readonly string ResourceGuid;

        [OutputConstructor]
        private ExpressRoutePortPropertiesFormatResponseResult(
            string allocationDate,

            int? bandwidthInGbps,

            ImmutableArray<Outputs.SubResourceResponseResult> circuits,

            string? encapsulation,

            string etherType,

            ImmutableArray<Outputs.ExpressRouteLinkResponseResult> links,

            string mtu,

            string? peeringLocation,

            double provisionedBandwidthInGbps,

            string provisioningState,

            string resourceGuid)
        {
            AllocationDate = allocationDate;
            BandwidthInGbps = bandwidthInGbps;
            Circuits = circuits;
            Encapsulation = encapsulation;
            EtherType = etherType;
            Links = links;
            Mtu = mtu;
            PeeringLocation = peeringLocation;
            ProvisionedBandwidthInGbps = provisionedBandwidthInGbps;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
        }
    }
}
