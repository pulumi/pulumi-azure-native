// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20190901.Outputs
{

    [OutputType]
    public sealed class SubnetPropertiesFormatResponseResult
    {
        /// <summary>
        /// The address prefix for the subnet.
        /// </summary>
        public readonly string? AddressPrefix;
        /// <summary>
        /// List of address prefixes for the subnet.
        /// </summary>
        public readonly ImmutableArray<string> AddressPrefixes;
        /// <summary>
        /// An array of references to the delegations on the subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.DelegationResponseResult> Delegations;
        /// <summary>
        /// Array of IP configuration profiles which reference this subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.IPConfigurationProfileResponseResult> IpConfigurationProfiles;
        /// <summary>
        /// An array of references to the network interface IP configurations using subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.IPConfigurationResponseResult> IpConfigurations;
        /// <summary>
        /// Nat gateway associated with this subnet.
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? NatGateway;
        /// <summary>
        /// The reference of the NetworkSecurityGroup resource.
        /// </summary>
        public readonly Outputs.NetworkSecurityGroupResponseResult? NetworkSecurityGroup;
        /// <summary>
        /// Enable or Disable apply network policies on private end point in the subnet.
        /// </summary>
        public readonly string? PrivateEndpointNetworkPolicies;
        /// <summary>
        /// An array of references to private endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointResponseResult> PrivateEndpoints;
        /// <summary>
        /// Enable or Disable apply network policies on private link service in the subnet.
        /// </summary>
        public readonly string? PrivateLinkServiceNetworkPolicies;
        /// <summary>
        /// The provisioning state of the subnet resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// An array of references to the external resources using subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceNavigationLinkResponseResult> ResourceNavigationLinks;
        /// <summary>
        /// The reference of the RouteTable resource.
        /// </summary>
        public readonly Outputs.RouteTableResponseResult? RouteTable;
        /// <summary>
        /// An array of references to services injecting into this subnet.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceAssociationLinkResponseResult> ServiceAssociationLinks;
        /// <summary>
        /// An array of service endpoint policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceEndpointPolicyResponseResult> ServiceEndpointPolicies;
        /// <summary>
        /// An array of service endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceEndpointPropertiesFormatResponseResult> ServiceEndpoints;

        [OutputConstructor]
        private SubnetPropertiesFormatResponseResult(
            string? addressPrefix,

            ImmutableArray<string> addressPrefixes,

            ImmutableArray<Outputs.DelegationResponseResult> delegations,

            ImmutableArray<Outputs.IPConfigurationProfileResponseResult> ipConfigurationProfiles,

            ImmutableArray<Outputs.IPConfigurationResponseResult> ipConfigurations,

            Outputs.SubResourceResponseResult? natGateway,

            Outputs.NetworkSecurityGroupResponseResult? networkSecurityGroup,

            string? privateEndpointNetworkPolicies,

            ImmutableArray<Outputs.PrivateEndpointResponseResult> privateEndpoints,

            string? privateLinkServiceNetworkPolicies,

            string provisioningState,

            string purpose,

            ImmutableArray<Outputs.ResourceNavigationLinkResponseResult> resourceNavigationLinks,

            Outputs.RouteTableResponseResult? routeTable,

            ImmutableArray<Outputs.ServiceAssociationLinkResponseResult> serviceAssociationLinks,

            ImmutableArray<Outputs.ServiceEndpointPolicyResponseResult> serviceEndpointPolicies,

            ImmutableArray<Outputs.ServiceEndpointPropertiesFormatResponseResult> serviceEndpoints)
        {
            AddressPrefix = addressPrefix;
            AddressPrefixes = addressPrefixes;
            Delegations = delegations;
            IpConfigurationProfiles = ipConfigurationProfiles;
            IpConfigurations = ipConfigurations;
            NatGateway = natGateway;
            NetworkSecurityGroup = networkSecurityGroup;
            PrivateEndpointNetworkPolicies = privateEndpointNetworkPolicies;
            PrivateEndpoints = privateEndpoints;
            PrivateLinkServiceNetworkPolicies = privateLinkServiceNetworkPolicies;
            ProvisioningState = provisioningState;
            Purpose = purpose;
            ResourceNavigationLinks = resourceNavigationLinks;
            RouteTable = routeTable;
            ServiceAssociationLinks = serviceAssociationLinks;
            ServiceEndpointPolicies = serviceEndpointPolicies;
            ServiceEndpoints = serviceEndpoints;
        }
    }
}
