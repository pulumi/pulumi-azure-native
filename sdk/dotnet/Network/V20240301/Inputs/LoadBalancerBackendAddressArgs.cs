// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240301.Inputs
{

    /// <summary>
    /// Load balancer backend addresses.
    /// </summary>
    public sealed class LoadBalancerBackendAddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
        /// </summary>
        [Input("adminState")]
        public InputUnion<string, Pulumi.AzureNative.Network.V20240301.LoadBalancerBackendAddressAdminState>? AdminState { get; set; }

        /// <summary>
        /// IP Address belonging to the referenced virtual network.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Reference to the frontend ip address configuration defined in regional loadbalancer.
        /// </summary>
        [Input("loadBalancerFrontendIPConfiguration")]
        public Input<Inputs.SubResourceArgs>? LoadBalancerFrontendIPConfiguration { get; set; }

        /// <summary>
        /// Name of the backend address.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Reference to an existing subnet.
        /// </summary>
        [Input("subnet")]
        public Input<Inputs.SubResourceArgs>? Subnet { get; set; }

        /// <summary>
        /// Reference to an existing virtual network.
        /// </summary>
        [Input("virtualNetwork")]
        public Input<Inputs.SubResourceArgs>? VirtualNetwork { get; set; }

        public LoadBalancerBackendAddressArgs()
        {
        }
        public static new LoadBalancerBackendAddressArgs Empty => new LoadBalancerBackendAddressArgs();
    }
}
