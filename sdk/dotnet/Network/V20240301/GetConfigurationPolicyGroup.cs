// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240301
{
    public static class GetConfigurationPolicyGroup
    {
        /// <summary>
        /// Retrieves the details of a ConfigurationPolicyGroup.
        /// </summary>
        public static Task<GetConfigurationPolicyGroupResult> InvokeAsync(GetConfigurationPolicyGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationPolicyGroupResult>("azure-native:network/v20240301:getConfigurationPolicyGroup", args ?? new GetConfigurationPolicyGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the details of a ConfigurationPolicyGroup.
        /// </summary>
        public static Output<GetConfigurationPolicyGroupResult> Invoke(GetConfigurationPolicyGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationPolicyGroupResult>("azure-native:network/v20240301:getConfigurationPolicyGroup", args ?? new GetConfigurationPolicyGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationPolicyGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ConfigurationPolicyGroup being retrieved.
        /// </summary>
        [Input("configurationPolicyGroupName", required: true)]
        public string ConfigurationPolicyGroupName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the VpnServerConfiguration.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VpnServerConfiguration.
        /// </summary>
        [Input("vpnServerConfigurationName", required: true)]
        public string VpnServerConfigurationName { get; set; } = null!;

        public GetConfigurationPolicyGroupArgs()
        {
        }
        public static new GetConfigurationPolicyGroupArgs Empty => new GetConfigurationPolicyGroupArgs();
    }

    public sealed class GetConfigurationPolicyGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ConfigurationPolicyGroup being retrieved.
        /// </summary>
        [Input("configurationPolicyGroupName", required: true)]
        public Input<string> ConfigurationPolicyGroupName { get; set; } = null!;

        /// <summary>
        /// The resource group name of the VpnServerConfiguration.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the VpnServerConfiguration.
        /// </summary>
        [Input("vpnServerConfigurationName", required: true)]
        public Input<string> VpnServerConfigurationName { get; set; } = null!;

        public GetConfigurationPolicyGroupInvokeArgs()
        {
        }
        public static new GetConfigurationPolicyGroupInvokeArgs Empty => new GetConfigurationPolicyGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationPolicyGroupResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of references to P2SConnectionConfigurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> P2SConnectionConfigurations;
        /// <summary>
        /// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpnServerConfigurationPolicyGroupMemberResponse> PolicyMembers;
        /// <summary>
        /// Priority for VpnServerConfigurationPolicyGroup.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConfigurationPolicyGroupResult(
            string etag,

            string? id,

            bool? isDefault,

            string? name,

            ImmutableArray<Outputs.SubResourceResponse> p2SConnectionConfigurations,

            ImmutableArray<Outputs.VpnServerConfigurationPolicyGroupMemberResponse> policyMembers,

            int? priority,

            string provisioningState,

            string type)
        {
            Etag = etag;
            Id = id;
            IsDefault = isDefault;
            Name = name;
            P2SConnectionConfigurations = p2SConnectionConfigurations;
            PolicyMembers = policyMembers;
            Priority = priority;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
