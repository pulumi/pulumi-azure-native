// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240301
{
    /// <summary>
    /// Network routing rule.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20240301:RoutingRule")]
    public partial class RoutingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description for this rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Indicates the destination for this particular rule.
        /// </summary>
        [Output("destination")]
        public Output<Outputs.RoutingRuleRouteDestinationResponse> Destination { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Indicates the next hop for this particular rule.
        /// </summary>
        [Output("nextHop")]
        public Output<Outputs.RoutingRuleNextHopResponse> NextHop { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for this resource.
        /// </summary>
        [Output("resourceGuid")]
        public Output<string> ResourceGuid { get; private set; } = null!;

        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RoutingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutingRule(string name, RoutingRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240301:RoutingRule", name, args ?? new RoutingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutingRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240301:RoutingRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:RoutingRule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutingRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RoutingRule(name, id, options);
        }
    }

    public sealed class RoutingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the network manager Routing Configuration.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// A description for this rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates the destination for this particular rule.
        /// </summary>
        [Input("destination", required: true)]
        public Input<Inputs.RoutingRuleRouteDestinationArgs> Destination { get; set; } = null!;

        /// <summary>
        /// The name of the network manager.
        /// </summary>
        [Input("networkManagerName", required: true)]
        public Input<string> NetworkManagerName { get; set; } = null!;

        /// <summary>
        /// Indicates the next hop for this particular rule.
        /// </summary>
        [Input("nextHop", required: true)]
        public Input<Inputs.RoutingRuleNextHopArgs> NextHop { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the network manager routing Configuration rule collection.
        /// </summary>
        [Input("ruleCollectionName", required: true)]
        public Input<string> RuleCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public RoutingRuleArgs()
        {
        }
        public static new RoutingRuleArgs Empty => new RoutingRuleArgs();
    }
}
