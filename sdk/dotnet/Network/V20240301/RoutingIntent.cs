// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240301
{
    /// <summary>
    /// The routing intent child resource of a Virtual hub.
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20240301:RoutingIntent")]
    public partial class RoutingIntent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the RoutingIntent resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// List of routing policies.
        /// </summary>
        [Output("routingPolicies")]
        public Output<ImmutableArray<Outputs.RoutingPolicyResponse>> RoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RoutingIntent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutingIntent(string name, RoutingIntentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240301:RoutingIntent", name, args ?? new RoutingIntentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutingIntent(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20240301:RoutingIntent", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20221101:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230201:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230401:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230501:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230601:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20230901:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20231101:RoutingIntent" },
                    new global::Pulumi.Alias { Type = "azure-native:network/v20240101:RoutingIntent" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutingIntent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutingIntent Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RoutingIntent(name, id, options);
        }
    }

    public sealed class RoutingIntentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource group name of the RoutingIntent.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the per VirtualHub singleton Routing Intent resource.
        /// </summary>
        [Input("routingIntentName")]
        public Input<string>? RoutingIntentName { get; set; }

        [Input("routingPolicies")]
        private InputList<Inputs.RoutingPolicyArgs>? _routingPolicies;

        /// <summary>
        /// List of routing policies.
        /// </summary>
        public InputList<Inputs.RoutingPolicyArgs> RoutingPolicies
        {
            get => _routingPolicies ?? (_routingPolicies = new InputList<Inputs.RoutingPolicyArgs>());
            set => _routingPolicies = value;
        }

        /// <summary>
        /// The name of the VirtualHub.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public Input<string> VirtualHubName { get; set; } = null!;

        public RoutingIntentArgs()
        {
        }
        public static new RoutingIntentArgs Empty => new RoutingIntentArgs();
    }
}
