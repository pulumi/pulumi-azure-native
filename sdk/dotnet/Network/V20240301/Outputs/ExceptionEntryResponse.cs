// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20240301.Outputs
{

    /// <summary>
    /// Adds exception to allow a request when the condition is satisfied.
    /// </summary>
    [OutputType]
    public sealed class ExceptionEntryResponse
    {
        /// <summary>
        /// The managed rule sets that are associated with the exception.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExclusionManagedRuleSetResponse> ExceptionManagedRuleSets;
        /// <summary>
        /// The variable on which we evaluate the exception condition
        /// </summary>
        public readonly string MatchVariable;
        /// <summary>
        /// When the matchVariable points to a key-value pair (e.g, RequestHeader), this identifies the key.
        /// </summary>
        public readonly string? Selector;
        /// <summary>
        /// When the matchVariable points to a key-value pair (e.g, RequestHeader), this operates on the selector
        /// </summary>
        public readonly string? SelectorMatchOperator;
        /// <summary>
        /// Operates on the allowed values for the matchVariable
        /// </summary>
        public readonly string ValueMatchOperator;
        /// <summary>
        /// Allowed values for the matchVariable
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private ExceptionEntryResponse(
            ImmutableArray<Outputs.ExclusionManagedRuleSetResponse> exceptionManagedRuleSets,

            string matchVariable,

            string? selector,

            string? selectorMatchOperator,

            string valueMatchOperator,

            ImmutableArray<string> values)
        {
            ExceptionManagedRuleSets = exceptionManagedRuleSets;
            MatchVariable = matchVariable;
            Selector = selector;
            SelectorMatchOperator = selectorMatchOperator;
            ValueMatchOperator = valueMatchOperator;
            Values = values;
        }
    }
}
