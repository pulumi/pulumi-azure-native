// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20160330.Outputs
{

    [OutputType]
    public sealed class SubnetInvokeResponseResult
    {
        /// <summary>
        /// Gets or sets Address prefix for the subnet.
        /// </summary>
        public readonly string? AddressPrefix;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Gets array of references to the network interface IP configurations using subnet
        /// </summary>
        public readonly ImmutableArray<Outputs.IPConfigurationInvokeResponseResult> IpConfigurations;
        /// <summary>
        /// Gets name of the resource that is unique within a resource group. This name can be used to access the resource
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Gets or sets the reference of the NetworkSecurityGroup resource
        /// </summary>
        public readonly Outputs.NetworkSecurityGroupInvokeResponseResult? NetworkSecurityGroup;
        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the reference of the RouteTable resource
        /// </summary>
        public readonly Outputs.RouteTableInvokeResponseResult? RouteTable;

        [OutputConstructor]
        private SubnetInvokeResponseResult(
            string? addressPrefix,

            string? etag,

            string? id,

            ImmutableArray<Outputs.IPConfigurationInvokeResponseResult> ipConfigurations,

            string? name,

            Outputs.NetworkSecurityGroupInvokeResponseResult? networkSecurityGroup,

            string? provisioningState,

            Outputs.RouteTableInvokeResponseResult? routeTable)
        {
            AddressPrefix = addressPrefix;
            Etag = etag;
            Id = id;
            IpConfigurations = ipConfigurations;
            Name = name;
            NetworkSecurityGroup = networkSecurityGroup;
            ProvisioningState = provisioningState;
            RouteTable = routeTable;
        }
    }
}
