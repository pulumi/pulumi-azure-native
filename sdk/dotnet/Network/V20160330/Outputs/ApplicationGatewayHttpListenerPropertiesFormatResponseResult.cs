// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network.V20160330.Outputs
{

    [OutputType]
    public sealed class ApplicationGatewayHttpListenerPropertiesFormatResponseResult
    {
        /// <summary>
        /// Gets or sets frontend IP configuration resource of application gateway 
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? FrontendIPConfiguration;
        /// <summary>
        /// Gets or sets frontend port resource of application gateway 
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? FrontendPort;
        /// <summary>
        /// Gets or sets the host name of http listener 
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// Gets or sets the protocol
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Gets or sets Provisioning state of the http listener resource Updating/Deleting/Failed
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the requireServerNameIndication of http listener 
        /// </summary>
        public readonly bool? RequireServerNameIndication;
        /// <summary>
        /// Gets or sets ssl certificate resource of application gateway 
        /// </summary>
        public readonly Outputs.SubResourceResponseResult? SslCertificate;

        [OutputConstructor]
        private ApplicationGatewayHttpListenerPropertiesFormatResponseResult(
            Outputs.SubResourceResponseResult? frontendIPConfiguration,

            Outputs.SubResourceResponseResult? frontendPort,

            string? hostName,

            string? protocol,

            string? provisioningState,

            bool? requireServerNameIndication,

            Outputs.SubResourceResponseResult? sslCertificate)
        {
            FrontendIPConfiguration = frontendIPConfiguration;
            FrontendPort = frontendPort;
            HostName = hostName;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            RequireServerNameIndication = requireServerNameIndication;
            SslCertificate = sslCertificate;
        }
    }
}
