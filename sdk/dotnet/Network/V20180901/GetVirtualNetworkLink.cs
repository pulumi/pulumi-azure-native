// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Network.V20180901
{
    public static class GetVirtualNetworkLink
    {
        public static Task<GetVirtualNetworkLinkResult> InvokeAsync(GetVirtualNetworkLinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVirtualNetworkLinkResult>("azure-nextgen:network/v20180901:getVirtualNetworkLink", args ?? new GetVirtualNetworkLinkArgs(), options.WithVersion());
    }


    public sealed class GetVirtualNetworkLinkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </summary>
        [Input("privateZoneName", required: true)]
        public string PrivateZoneName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network link.
        /// </summary>
        [Input("virtualNetworkLinkName", required: true)]
        public string VirtualNetworkLinkName { get; set; } = null!;

        public GetVirtualNetworkLinkArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVirtualNetworkLinkResult
    {
        /// <summary>
        /// The ETag of the virtual network link.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
        /// </summary>
        public readonly bool? RegistrationEnabled;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The reference of the virtual network.
        /// </summary>
        public readonly Outputs.SubResourceResponse? VirtualNetwork;
        /// <summary>
        /// The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        public readonly string VirtualNetworkLinkState;

        [OutputConstructor]
        private GetVirtualNetworkLinkResult(
            string? etag,

            string? location,

            string name,

            string provisioningState,

            bool? registrationEnabled,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.SubResourceResponse? virtualNetwork,

            string virtualNetworkLinkState)
        {
            Etag = etag;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            RegistrationEnabled = registrationEnabled;
            Tags = tags;
            Type = type;
            VirtualNetwork = virtualNetwork;
            VirtualNetworkLinkState = virtualNetworkLinkState;
        }
    }
}
