// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Network
{
    public static class GetTrafficmanagerprofile
    {
        public static Task<GetTrafficmanagerprofileResult> InvokeAsync(GetTrafficmanagerprofileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTrafficmanagerprofileResult>("azurerm:network:getTrafficmanagerprofile", args ?? new GetTrafficmanagerprofileArgs(), options.WithVersion());
    }


    public sealed class GetTrafficmanagerprofileArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Traffic Manager profile.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group containing the Traffic Manager profile.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetTrafficmanagerprofileArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTrafficmanagerprofileResult
    {
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The properties of the Traffic Manager profile.
        /// </summary>
        public readonly Outputs.ProfilePropertiesResponseResult Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetTrafficmanagerprofileResult(
            string? location,

            string? name,

            Outputs.ProfilePropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string? type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
