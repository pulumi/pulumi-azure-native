// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerStorage
{
    public static class GetVolumeSnapshot
    {
        /// <summary>
        /// Get a VolumeSnapshot
        /// Azure REST API version: 2023-03-01-preview.
        /// </summary>
        public static Task<GetVolumeSnapshotResult> InvokeAsync(GetVolumeSnapshotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeSnapshotResult>("azure-native:containerstorage:getVolumeSnapshot", args ?? new GetVolumeSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// Get a VolumeSnapshot
        /// Azure REST API version: 2023-03-01-preview.
        /// </summary>
        public static Output<GetVolumeSnapshotResult> Invoke(GetVolumeSnapshotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeSnapshotResult>("azure-native:containerstorage:getVolumeSnapshot", args ?? new GetVolumeSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Pool Object
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Volume Snapshot Resource
        /// </summary>
        [Input("volumeSnapshotName", required: true)]
        public string VolumeSnapshotName { get; set; } = null!;

        public GetVolumeSnapshotArgs()
        {
        }
        public static new GetVolumeSnapshotArgs Empty => new GetVolumeSnapshotArgs();
    }

    public sealed class GetVolumeSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Pool Object
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Volume Snapshot Resource
        /// </summary>
        [Input("volumeSnapshotName", required: true)]
        public Input<string> VolumeSnapshotName { get; set; } = null!;

        public GetVolumeSnapshotInvokeArgs()
        {
        }
        public static new GetVolumeSnapshotInvokeArgs Empty => new GetVolumeSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeSnapshotResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of string mount options
        /// </summary>
        public readonly ImmutableArray<string> MountOptions;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Reclaim Policy, Delete or Retain
        /// </summary>
        public readonly string ReclaimPolicy;
        /// <summary>
        /// Reference to the source volume
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Indicates how the volumes created from the snapshot should be attached
        /// </summary>
        public readonly string VolumeMode;

        [OutputConstructor]
        private GetVolumeSnapshotResult(
            string id,

            ImmutableArray<string> mountOptions,

            string name,

            string provisioningState,

            string reclaimPolicy,

            string source,

            Outputs.SystemDataResponse systemData,

            string type,

            string volumeMode)
        {
            Id = id;
            MountOptions = mountOptions;
            Name = name;
            ProvisioningState = provisioningState;
            ReclaimPolicy = reclaimPolicy;
            Source = source;
            SystemData = systemData;
            Type = type;
            VolumeMode = volumeMode;
        }
    }
}
