// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerStorage.Inputs
{

    /// <summary>
    /// Ephemeral Pool Properties
    /// </summary>
    public sealed class EphemeralPoolPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Consent to format the local disks.
        /// </summary>
        [Input("diskFormat")]
        public Input<bool>? DiskFormat { get; set; }

        [Input("diskSelector", required: true)]
        private InputList<string>? _diskSelector;

        /// <summary>
        /// Template name or KV pairs containing disk selection criteria, e.g. model="Microsoft NVMe Direct Disk" to match all Lsv2 NVMe disks.
        /// </summary>
        public InputList<string> DiskSelector
        {
            get => _diskSelector ?? (_diskSelector = new InputList<string>());
            set => _diskSelector = value;
        }

        [Input("disks", required: true)]
        private InputList<string>? _disks;

        /// <summary>
        /// Only required if individual disk selection is desired. Path to disk, e.g. &lt;nodename&gt;:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
        /// </summary>
        public InputList<string> Disks
        {
            get => _disks ?? (_disks = new InputList<string>());
            set => _disks = value;
        }

        public EphemeralPoolPropertiesArgs()
        {
            DiskFormat = false;
        }
        public static new EphemeralPoolPropertiesArgs Empty => new EphemeralPoolPropertiesArgs();
    }
}
