// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerStorage.V20230701Preview.Inputs
{

    /// <summary>
    /// Azure Disk Pool Properties
    /// </summary>
    public sealed class AzureDiskArgs : global::Pulumi.ResourceArgs
    {
        [Input("disks")]
        private InputList<Inputs.DiskArgs>? _disks;

        /// <summary>
        /// Only required if individual disk selection is desired. Path to disk, e.g. &lt;nodename&gt;:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
        /// </summary>
        public InputList<Inputs.DiskArgs> Disks
        {
            get => _disks ?? (_disks = new InputList<Inputs.DiskArgs>());
            set => _disks = value;
        }

        /// <summary>
        /// Encryption specifies the encryption configuration for the Azure Disk pool
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// Sku name
        /// </summary>
        [Input("skuName")]
        public InputUnion<string, Pulumi.AzureNative.ContainerStorage.V20230701Preview.AzureDiskSkuName>? SkuName { get; set; }

        public AzureDiskArgs()
        {
        }
        public static new AzureDiskArgs Empty => new AzureDiskArgs();
    }
}
