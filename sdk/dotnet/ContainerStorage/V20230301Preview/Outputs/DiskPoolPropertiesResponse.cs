// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerStorage.V20230301Preview.Outputs
{

    /// <summary>
    /// Disk Pool Properties
    /// </summary>
    [OutputType]
    public sealed class DiskPoolPropertiesResponse
    {
        /// <summary>
        /// List of KV pairs to set in StorageClass to configure CSI driver.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? CsiParams;
        /// <summary>
        /// Only required if individual disk selection is desired. Path to disk, e.g. &lt;nodename&gt;:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
        /// </summary>
        public readonly ImmutableArray<string> Disks;
        /// <summary>
        /// Maximum capacity of the volumes in GiB the user intends to create. Default 512.
        /// </summary>
        public readonly double? MaxVolumeCapacityGiB;

        [OutputConstructor]
        private DiskPoolPropertiesResponse(
            ImmutableDictionary<string, string>? csiParams,

            ImmutableArray<string> disks,

            double? maxVolumeCapacityGiB)
        {
            CsiParams = csiParams;
            Disks = disks;
            MaxVolumeCapacityGiB = maxVolumeCapacityGiB;
        }
    }
}
