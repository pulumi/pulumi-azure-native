// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerStorage.V20230301Preview.Inputs
{

    /// <summary>
    /// Disk Pool Properties
    /// </summary>
    public sealed class DiskPoolPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("csiParams")]
        private InputMap<string>? _csiParams;

        /// <summary>
        /// List of KV pairs to set in StorageClass to configure CSI driver.
        /// </summary>
        public InputMap<string> CsiParams
        {
            get => _csiParams ?? (_csiParams = new InputMap<string>());
            set => _csiParams = value;
        }

        [Input("disks")]
        private InputList<string>? _disks;

        /// <summary>
        /// Only required if individual disk selection is desired. Path to disk, e.g. &lt;nodename&gt;:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
        /// </summary>
        public InputList<string> Disks
        {
            get => _disks ?? (_disks = new InputList<string>());
            set => _disks = value;
        }

        /// <summary>
        /// Maximum capacity of the volumes in GiB the user intends to create. Default 512.
        /// </summary>
        [Input("maxVolumeCapacityGiB")]
        public Input<double>? MaxVolumeCapacityGiB { get; set; }

        public DiskPoolPropertiesArgs()
        {
            MaxVolumeCapacityGiB = 512;
        }
        public static new DiskPoolPropertiesArgs Empty => new DiskPoolPropertiesArgs();
    }
}
