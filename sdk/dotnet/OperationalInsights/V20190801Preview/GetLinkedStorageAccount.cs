// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.OperationalInsights.V20190801Preview
{
    public static class GetLinkedStorageAccount
    {
        public static Task<GetLinkedStorageAccountResult> InvokeAsync(GetLinkedStorageAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLinkedStorageAccountResult>("azure-nextgen:operationalinsights/v20190801preview:getLinkedStorageAccount", args ?? new GetLinkedStorageAccountArgs(), options.WithVersion());
    }


    public sealed class GetLinkedStorageAccountArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Linked storage accounts type.
        /// </summary>
        [Input("dataSourceType", required: true)]
        public string DataSourceType { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to get. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Log Analytics Workspace that will contain the resource.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetLinkedStorageAccountArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLinkedStorageAccountResult
    {
        /// <summary>
        /// Linked storage accounts type.
        /// </summary>
        public readonly string DataSourceType;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Linked storage accounts resources ids.
        /// </summary>
        public readonly ImmutableArray<string> StorageAccountIds;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLinkedStorageAccountResult(
            string dataSourceType,

            string name,

            ImmutableArray<string> storageAccountIds,

            string type)
        {
            DataSourceType = dataSourceType;
            Name = name;
            StorageAccountIds = storageAccountIds;
            Type = type;
        }
    }
}
