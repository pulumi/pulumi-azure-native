// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OperationalInsights
{
    public static class GetSavedSearch
    {
        /// <summary>
        /// Gets the specified saved search for a given workspace.
        /// Azure REST API version: 2020-08-01.
        /// 
        /// Other available API versions: 2015-03-20.
        /// </summary>
        public static Task<GetSavedSearchResult> InvokeAsync(GetSavedSearchArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSavedSearchResult>("azure-native:operationalinsights:getSavedSearch", args ?? new GetSavedSearchArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified saved search for a given workspace.
        /// Azure REST API version: 2020-08-01.
        /// 
        /// Other available API versions: 2015-03-20.
        /// </summary>
        public static Output<GetSavedSearchResult> Invoke(GetSavedSearchInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSavedSearchResult>("azure-native:operationalinsights:getSavedSearch", args ?? new GetSavedSearchInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSavedSearchArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The id of the saved search.
        /// </summary>
        [Input("savedSearchId", required: true)]
        public string SavedSearchId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetSavedSearchArgs()
        {
        }
        public static new GetSavedSearchArgs Empty => new GetSavedSearchArgs();
    }

    public sealed class GetSavedSearchInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The id of the saved search.
        /// </summary>
        [Input("savedSearchId", required: true)]
        public Input<string> SavedSearchId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetSavedSearchInvokeArgs()
        {
        }
        public static new GetSavedSearchInvokeArgs Empty => new GetSavedSearchInvokeArgs();
    }


    [OutputType]
    public sealed class GetSavedSearchResult
    {
        /// <summary>
        /// The category of the saved search. This helps the user to find a saved search faster. 
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// Saved search display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The ETag of the saved search. To override an existing saved search, use "*" or specify the current Etag
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The function alias if query serves as a function.
        /// </summary>
        public readonly string? FunctionAlias;
        /// <summary>
        /// The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions.
        /// </summary>
        public readonly string? FunctionParameters;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The query expression for the saved search.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The tags attached to the saved search.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version number of the query language. The current version is 2 and is the default.
        /// </summary>
        public readonly double? Version;

        [OutputConstructor]
        private GetSavedSearchResult(
            string category,

            string displayName,

            string? etag,

            string? functionAlias,

            string? functionParameters,

            string id,

            string name,

            string query,

            ImmutableArray<Outputs.TagResponse> tags,

            string type,

            double? version)
        {
            Category = category;
            DisplayName = displayName;
            Etag = etag;
            FunctionAlias = functionAlias;
            FunctionParameters = functionParameters;
            Id = id;
            Name = name;
            Query = query;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
