// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OperationalInsights.V20211201Preview
{
    public static class GetTable
    {
        /// <summary>
        /// Workspace data table definition.
        /// </summary>
        public static Task<GetTableResult> InvokeAsync(GetTableArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTableResult>("azure-native:operationalinsights/v20211201preview:getTable", args ?? new GetTableArgs(), options.WithDefaults());

        /// <summary>
        /// Workspace data table definition.
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTableResult>("azure-native:operationalinsights/v20211201preview:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the table.
        /// </summary>
        [Input("tableName", required: true)]
        public string TableName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetTableArgs()
        {
        }
    }

    public sealed class GetTableInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the table.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetTableInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTableResult
    {
        /// <summary>
        /// The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays)
        /// </summary>
        public readonly int ArchiveRetentionInDays;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp that table plan was last modified (UTC).
        /// </summary>
        public readonly string LastPlanModifiedDate;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Instruct the system how to handle and charge the logs ingested to this table.
        /// </summary>
        public readonly string? Plan;
        /// <summary>
        /// Table's current provisioning state. If set to 'updating', indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Parameters of the restore operation that initiated this table.
        /// </summary>
        public readonly Outputs.RestoredLogsResponse? RestoredLogs;
        /// <summary>
        /// Search job execution statistics.
        /// </summary>
        public readonly Outputs.ResultStatisticsResponse? ResultStatistics;
        /// <summary>
        /// The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.
        /// </summary>
        public readonly int? RetentionInDays;
        /// <summary>
        /// Table schema.
        /// </summary>
        public readonly Outputs.SchemaResponse? Schema;
        /// <summary>
        /// Parameters of the search job that initiated this table.
        /// </summary>
        public readonly Outputs.SearchResultsResponse? SearchResults;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.
        /// </summary>
        public readonly int? TotalRetentionInDays;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTableResult(
            int archiveRetentionInDays,

            string id,

            string lastPlanModifiedDate,

            string name,

            string? plan,

            string provisioningState,

            Outputs.RestoredLogsResponse? restoredLogs,

            Outputs.ResultStatisticsResponse? resultStatistics,

            int? retentionInDays,

            Outputs.SchemaResponse? schema,

            Outputs.SearchResultsResponse? searchResults,

            Outputs.SystemDataResponse systemData,

            int? totalRetentionInDays,

            string type)
        {
            ArchiveRetentionInDays = archiveRetentionInDays;
            Id = id;
            LastPlanModifiedDate = lastPlanModifiedDate;
            Name = name;
            Plan = plan;
            ProvisioningState = provisioningState;
            RestoredLogs = restoredLogs;
            ResultStatistics = resultStatistics;
            RetentionInDays = retentionInDays;
            Schema = schema;
            SearchResults = searchResults;
            SystemData = systemData;
            TotalRetentionInDays = totalRetentionInDays;
            Type = type;
        }
    }
}
