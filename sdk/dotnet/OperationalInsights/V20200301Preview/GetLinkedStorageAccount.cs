// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OperationalInsights.V20200301Preview
{
    public static class GetLinkedStorageAccount
    {
        /// <summary>
        /// Gets all linked storage account of a specific data source type associated with the specified workspace.
        /// </summary>
        public static Task<GetLinkedStorageAccountResult> InvokeAsync(GetLinkedStorageAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLinkedStorageAccountResult>("azure-native:operationalinsights/v20200301preview:getLinkedStorageAccount", args ?? new GetLinkedStorageAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Gets all linked storage account of a specific data source type associated with the specified workspace.
        /// </summary>
        public static Output<GetLinkedStorageAccountResult> Invoke(GetLinkedStorageAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLinkedStorageAccountResult>("azure-native:operationalinsights/v20200301preview:getLinkedStorageAccount", args ?? new GetLinkedStorageAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLinkedStorageAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Linked storage accounts type.
        /// </summary>
        [Input("dataSourceType", required: true)]
        public string DataSourceType { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetLinkedStorageAccountArgs()
        {
        }
        public static new GetLinkedStorageAccountArgs Empty => new GetLinkedStorageAccountArgs();
    }

    public sealed class GetLinkedStorageAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Linked storage accounts type.
        /// </summary>
        [Input("dataSourceType", required: true)]
        public Input<string> DataSourceType { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetLinkedStorageAccountInvokeArgs()
        {
        }
        public static new GetLinkedStorageAccountInvokeArgs Empty => new GetLinkedStorageAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetLinkedStorageAccountResult
    {
        /// <summary>
        /// Linked storage accounts type.
        /// </summary>
        public readonly string DataSourceType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Linked storage accounts resources ids.
        /// </summary>
        public readonly ImmutableArray<string> StorageAccountIds;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLinkedStorageAccountResult(
            string dataSourceType,

            string id,

            string name,

            ImmutableArray<string> storageAccountIds,

            string type)
        {
            DataSourceType = dataSourceType;
            Id = id;
            Name = name;
            StorageAccountIds = storageAccountIds;
            Type = type;
        }
    }
}
