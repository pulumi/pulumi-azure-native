// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OperationalInsights.V20200301Preview.Outputs
{

    /// <summary>
    /// Value object for saved search results.
    /// </summary>
    [OutputType]
    public sealed class SavedSearchPropertiesResponse
    {
        /// <summary>
        /// The category of the saved search. This helps the user to find a saved search faster. 
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// Saved search display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The function alias if query serves as a function.
        /// </summary>
        public readonly string? FunctionAlias;
        /// <summary>
        /// The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions.
        /// </summary>
        public readonly string? FunctionParameters;
        /// <summary>
        /// The query expression for the saved search.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The tags attached to the saved search.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// The version number of the query language. The current version is 2 and is the default.
        /// </summary>
        public readonly double? Version;

        [OutputConstructor]
        private SavedSearchPropertiesResponse(
            string category,

            string displayName,

            string? functionAlias,

            string? functionParameters,

            string query,

            ImmutableArray<Outputs.TagResponse> tags,

            double? version)
        {
            Category = category;
            DisplayName = displayName;
            FunctionAlias = functionAlias;
            FunctionParameters = functionParameters;
            Query = query;
            Tags = tags;
            Version = version;
        }
    }
}
