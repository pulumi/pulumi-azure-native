// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.OperationalInsights
{
    public static class GetWorkspaceStorageInsightConfig
    {
        public static Task<GetWorkspaceStorageInsightConfigResult> InvokeAsync(GetWorkspaceStorageInsightConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceStorageInsightConfigResult>("azurerm:operationalinsights:getWorkspaceStorageInsightConfig", args ?? new GetWorkspaceStorageInsightConfigArgs(), options.WithVersion());
    }


    public sealed class GetWorkspaceStorageInsightConfigArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the storageInsightsConfigs resource
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The Resource Group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Log Analytics Workspace name.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetWorkspaceStorageInsightConfigArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkspaceStorageInsightConfigResult
    {
        /// <summary>
        /// The ETag of the storage insight.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Storage insight properties.
        /// </summary>
        public readonly Outputs.StorageInsightPropertiesResponseResult Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkspaceStorageInsightConfigResult(
            string? eTag,

            string name,

            Outputs.StorageInsightPropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ETag = eTag;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
