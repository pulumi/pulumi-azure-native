// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OperationalInsights
{
    public static class GetSummaryLog
    {
        /// <summary>
        /// Gets Log Analytics workspace Summary rules.
        /// 
        /// Uses Azure REST API version 2025-07-01.
        /// </summary>
        public static Task<GetSummaryLogResult> InvokeAsync(GetSummaryLogArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSummaryLogResult>("azure-native:operationalinsights:getSummaryLog", args ?? new GetSummaryLogArgs(), options.WithDefaults());

        /// <summary>
        /// Gets Log Analytics workspace Summary rules.
        /// 
        /// Uses Azure REST API version 2025-07-01.
        /// </summary>
        public static Output<GetSummaryLogResult> Invoke(GetSummaryLogInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSummaryLogResult>("azure-native:operationalinsights:getSummaryLog", args ?? new GetSummaryLogInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets Log Analytics workspace Summary rules.
        /// 
        /// Uses Azure REST API version 2025-07-01.
        /// </summary>
        public static Output<GetSummaryLogResult> Invoke(GetSummaryLogInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSummaryLogResult>("azure-native:operationalinsights:getSummaryLog", args ?? new GetSummaryLogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSummaryLogArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the summary logs. Must not contain '/'.
        /// </summary>
        [Input("summaryLogsName", required: true)]
        public string SummaryLogsName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetSummaryLogArgs()
        {
        }
        public static new GetSummaryLogArgs Empty => new GetSummaryLogArgs();
    }

    public sealed class GetSummaryLogInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the summary logs. Must not contain '/'.
        /// </summary>
        [Input("summaryLogsName", required: true)]
        public Input<string> SummaryLogsName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetSummaryLogInvokeArgs()
        {
        }
        public static new GetSummaryLogInvokeArgs Empty => new GetSummaryLogInvokeArgs();
    }


    [OutputType]
    public sealed class GetSummaryLogResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The description of the Summary rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the Summary rule.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if Summary rule is active. If not, Summary rule execution stops.
        /// </summary>
        public readonly bool IsActive;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Summary rule is in provisioning state. If set to 'updating' or 'deleting', indicates a resource lock due to an ongoing operation, preventing any update to the Summary rule until the operation is complete.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Rule definition parameters.
        /// </summary>
        public readonly Outputs.RuleDefinitionResponse? RuleDefinition;
        /// <summary>
        /// SummaryRules rule type: User.
        /// </summary>
        public readonly string? RuleType;
        /// <summary>
        /// Indicates the reason for rule deactivation.
        /// </summary>
        public readonly string StatusCode;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSummaryLogResult(
            string azureApiVersion,

            string? description,

            string? displayName,

            string id,

            bool isActive,

            string name,

            string provisioningState,

            Outputs.RuleDefinitionResponse? ruleDefinition,

            string? ruleType,

            string statusCode,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsActive = isActive;
            Name = name;
            ProvisioningState = provisioningState;
            RuleDefinition = ruleDefinition;
            RuleType = ruleType;
            StatusCode = statusCode;
            SystemData = systemData;
            Type = type;
        }
    }
}
