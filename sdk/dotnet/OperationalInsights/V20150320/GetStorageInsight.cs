// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.OperationalInsights.V20150320
{
    public static class GetStorageInsight
    {
        public static Task<GetStorageInsightResult> InvokeAsync(GetStorageInsightArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStorageInsightResult>("azure-nextgen:operationalinsights/v20150320:getStorageInsight", args ?? new GetStorageInsightArgs(), options.WithVersion());
    }


    public sealed class GetStorageInsightArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Resource Group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the storageInsightsConfigs resource
        /// </summary>
        [Input("storageInsightName", required: true)]
        public string StorageInsightName { get; set; } = null!;

        /// <summary>
        /// The Log Analytics Workspace name.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetStorageInsightArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStorageInsightResult
    {
        /// <summary>
        /// The names of the blob containers that the workspace should read
        /// </summary>
        public readonly ImmutableArray<string> Containers;
        /// <summary>
        /// The ETag of the storage insight.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the storage insight
        /// </summary>
        public readonly Outputs.StorageInsightStatusResponse Status;
        /// <summary>
        /// The storage account connection details
        /// </summary>
        public readonly Outputs.StorageAccountResponse StorageAccount;
        /// <summary>
        /// The names of the Azure tables that the workspace should read
        /// </summary>
        public readonly ImmutableArray<string> Tables;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageInsightResult(
            ImmutableArray<string> containers,

            string? eTag,

            string name,

            Outputs.StorageInsightStatusResponse status,

            Outputs.StorageAccountResponse storageAccount,

            ImmutableArray<string> tables,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Containers = containers;
            ETag = eTag;
            Name = name;
            Status = status;
            StorageAccount = storageAccount;
            Tables = tables;
            Tags = tags;
            Type = type;
        }
    }
}
