// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.OperationalInsights.V20150320
{
    /// <summary>
    /// The top level storage insight resource container.
    /// </summary>
    public partial class StorageInsight : Pulumi.CustomResource
    {
        /// <summary>
        /// The names of the blob containers that the workspace should read
        /// </summary>
        [Output("containers")]
        public Output<ImmutableArray<string>> Containers { get; private set; } = null!;

        /// <summary>
        /// The ETag of the storage insight.
        /// </summary>
        [Output("eTag")]
        public Output<string?> ETag { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the storage insight
        /// </summary>
        [Output("status")]
        public Output<Outputs.StorageInsightStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// The storage account connection details
        /// </summary>
        [Output("storageAccount")]
        public Output<Outputs.StorageAccountResponse> StorageAccount { get; private set; } = null!;

        /// <summary>
        /// The names of the Azure tables that the workspace should read
        /// </summary>
        [Output("tables")]
        public Output<ImmutableArray<string>> Tables { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a StorageInsight resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageInsight(string name, StorageInsightArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:operationalinsights/v20150320:StorageInsight", name, args ?? new StorageInsightArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageInsight(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:operationalinsights/v20150320:StorageInsight", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:operationalinsights/latest:StorageInsight"},
                    new Pulumi.Alias { Type = "azure-nextgen:operationalinsights/v20200301preview:StorageInsight"},
                    new Pulumi.Alias { Type = "azure-nextgen:operationalinsights/v20200801:StorageInsight"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageInsight resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageInsight Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageInsight(name, id, options);
        }
    }

    public sealed class StorageInsightArgs : Pulumi.ResourceArgs
    {
        [Input("containers")]
        private InputList<string>? _containers;

        /// <summary>
        /// The names of the blob containers that the workspace should read
        /// </summary>
        public InputList<string> Containers
        {
            get => _containers ?? (_containers = new InputList<string>());
            set => _containers = value;
        }

        /// <summary>
        /// The ETag of the storage insight.
        /// </summary>
        [Input("eTag")]
        public Input<string>? ETag { get; set; }

        /// <summary>
        /// The Resource Group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The storage account connection details
        /// </summary>
        [Input("storageAccount", required: true)]
        public Input<Inputs.StorageAccountArgs> StorageAccount { get; set; } = null!;

        /// <summary>
        /// Name of the storageInsightsConfigs resource
        /// </summary>
        [Input("storageInsightName", required: true)]
        public Input<string> StorageInsightName { get; set; } = null!;

        [Input("tables")]
        private InputList<string>? _tables;

        /// <summary>
        /// The names of the Azure tables that the workspace should read
        /// </summary>
        public InputList<string> Tables
        {
            get => _tables ?? (_tables = new InputList<string>());
            set => _tables = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Log Analytics Workspace name.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public StorageInsightArgs()
        {
        }
    }
}
