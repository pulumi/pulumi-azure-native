// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTFirmwareDefense
{
    /// <summary>
    /// Firmware definition
    /// API Version: 2023-02-08-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:iotfirmwaredefense:Firmware")]
    public partial class Firmware : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User-specified description of the firmware.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// File name for a firmware that user uploaded.
        /// </summary>
        [Output("fileName")]
        public Output<string?> FileName { get; private set; } = null!;

        /// <summary>
        /// File size of the uploaded firmware image.
        /// </summary>
        [Output("fileSize")]
        public Output<double?> FileSize { get; private set; } = null!;

        /// <summary>
        /// Firmware model.
        /// </summary>
        [Output("model")]
        public Output<string?> Model { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The status of firmware scan.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// A list of errors or other messages generated during firmware analysis
        /// </summary>
        [Output("statusMessages")]
        public Output<ImmutableArray<object>> StatusMessages { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Firmware vendor.
        /// </summary>
        [Output("vendor")]
        public Output<string?> Vendor { get; private set; } = null!;

        /// <summary>
        /// Firmware version.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Firmware resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Firmware(string name, FirmwareArgs args, CustomResourceOptions? options = null)
            : base("azure-native:iotfirmwaredefense:Firmware", name, args ?? new FirmwareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Firmware(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:iotfirmwaredefense:Firmware", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:iotfirmwaredefense/v20230208preview:Firmware"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Firmware resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Firmware Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Firmware(name, id, options);
        }
    }

    public sealed class FirmwareArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-specified description of the firmware.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// File name for a firmware that user uploaded.
        /// </summary>
        [Input("fileName")]
        public Input<string>? FileName { get; set; }

        /// <summary>
        /// File size of the uploaded firmware image.
        /// </summary>
        [Input("fileSize")]
        public Input<double>? FileSize { get; set; }

        /// <summary>
        /// The id of the firmware.
        /// </summary>
        [Input("firmwareId")]
        public Input<string>? FirmwareId { get; set; }

        /// <summary>
        /// Firmware model.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The status of firmware scan.
        /// </summary>
        [Input("status")]
        public InputUnion<string, Pulumi.AzureNative.IoTFirmwareDefense.Status>? Status { get; set; }

        [Input("statusMessages")]
        private InputList<object>? _statusMessages;

        /// <summary>
        /// A list of errors or other messages generated during firmware analysis
        /// </summary>
        public InputList<object> StatusMessages
        {
            get => _statusMessages ?? (_statusMessages = new InputList<object>());
            set => _statusMessages = value;
        }

        /// <summary>
        /// Firmware vendor.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        /// <summary>
        /// Firmware version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// The name of the firmware analysis workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public FirmwareArgs()
        {
            Status = "Pending";
        }
        public static new FirmwareArgs Empty => new FirmwareArgs();
    }
}
