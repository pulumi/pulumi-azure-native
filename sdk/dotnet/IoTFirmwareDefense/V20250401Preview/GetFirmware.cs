// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTFirmwareDefense.V20250401Preview
{
    public static class GetFirmware
    {
        /// <summary>
        /// Get firmware.
        /// </summary>
        public static Task<GetFirmwareResult> InvokeAsync(GetFirmwareArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirmwareResult>("azure-native:iotfirmwaredefense/v20250401preview:getFirmware", args ?? new GetFirmwareArgs(), options.WithDefaults());

        /// <summary>
        /// Get firmware.
        /// </summary>
        public static Output<GetFirmwareResult> Invoke(GetFirmwareInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirmwareResult>("azure-native:iotfirmwaredefense/v20250401preview:getFirmware", args ?? new GetFirmwareInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get firmware.
        /// </summary>
        public static Output<GetFirmwareResult> Invoke(GetFirmwareInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirmwareResult>("azure-native:iotfirmwaredefense/v20250401preview:getFirmware", args ?? new GetFirmwareInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirmwareArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the firmware.
        /// </summary>
        [Input("firmwareId", required: true)]
        public string FirmwareId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the firmware analysis workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetFirmwareArgs()
        {
        }
        public static new GetFirmwareArgs Empty => new GetFirmwareArgs();
    }

    public sealed class GetFirmwareInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the firmware.
        /// </summary>
        [Input("firmwareId", required: true)]
        public Input<string> FirmwareId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the firmware analysis workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetFirmwareInvokeArgs()
        {
        }
        public static new GetFirmwareInvokeArgs Empty => new GetFirmwareInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirmwareResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.FirmwarePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFirmwareResult(
            string id,

            string name,

            Outputs.FirmwarePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
