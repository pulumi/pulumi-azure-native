// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTFirmwareDefense.V20250401Preview.Inputs
{

    /// <summary>
    /// Firmware properties.
    /// </summary>
    public sealed class FirmwarePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-specified description of the firmware.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// File name for a firmware that user uploaded.
        /// </summary>
        [Input("fileName")]
        public Input<string>? FileName { get; set; }

        /// <summary>
        /// File size of the uploaded firmware image.
        /// </summary>
        [Input("fileSize")]
        public Input<double>? FileSize { get; set; }

        /// <summary>
        /// Firmware model.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// The status of firmware scan.
        /// </summary>
        [Input("status")]
        public InputUnion<string, Pulumi.AzureNative.IoTFirmwareDefense.V20250401Preview.Status>? Status { get; set; }

        [Input("statusMessages")]
        private InputList<Inputs.StatusMessageArgs>? _statusMessages;

        /// <summary>
        /// A list of errors or other messages generated during firmware analysis
        /// </summary>
        public InputList<Inputs.StatusMessageArgs> StatusMessages
        {
            get => _statusMessages ?? (_statusMessages = new InputList<Inputs.StatusMessageArgs>());
            set => _statusMessages = value;
        }

        /// <summary>
        /// Firmware vendor.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        /// <summary>
        /// Firmware version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FirmwarePropertiesArgs()
        {
        }
        public static new FirmwarePropertiesArgs Empty => new FirmwarePropertiesArgs();
    }
}
