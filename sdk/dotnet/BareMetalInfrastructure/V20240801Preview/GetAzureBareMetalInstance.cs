// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BareMetalInfrastructure.V20240801Preview
{
    public static class GetAzureBareMetalInstance
    {
        /// <summary>
        /// Gets an Azure Bare Metal Instance for the specified subscription, resource group, and instance name.
        /// </summary>
        public static Task<GetAzureBareMetalInstanceResult> InvokeAsync(GetAzureBareMetalInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureBareMetalInstanceResult>("azure-native:baremetalinfrastructure/v20240801preview:getAzureBareMetalInstance", args ?? new GetAzureBareMetalInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an Azure Bare Metal Instance for the specified subscription, resource group, and instance name.
        /// </summary>
        public static Output<GetAzureBareMetalInstanceResult> Invoke(GetAzureBareMetalInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureBareMetalInstanceResult>("azure-native:baremetalinfrastructure/v20240801preview:getAzureBareMetalInstance", args ?? new GetAzureBareMetalInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureBareMetalInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Bare Metal Instance, also known as the ResourceName.
        /// </summary>
        [Input("azureBareMetalInstanceName", required: true)]
        public string AzureBareMetalInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAzureBareMetalInstanceArgs()
        {
        }
        public static new GetAzureBareMetalInstanceArgs Empty => new GetAzureBareMetalInstanceArgs();
    }

    public sealed class GetAzureBareMetalInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Azure Bare Metal Instance, also known as the ResourceName.
        /// </summary>
        [Input("azureBareMetalInstanceName", required: true)]
        public Input<string> AzureBareMetalInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAzureBareMetalInstanceInvokeArgs()
        {
        }
        public static new GetAzureBareMetalInstanceInvokeArgs Empty => new GetAzureBareMetalInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureBareMetalInstanceResult
    {
        /// <summary>
        /// Specifies the Azure Bare Metal Instance unique ID.
        /// </summary>
        public readonly string? AzureBareMetalInstanceId;
        /// <summary>
        /// Specifies the hardware settings for the Azure Bare Metal Instance.
        /// </summary>
        public readonly Outputs.HardwareProfileResponse? HardwareProfile;
        /// <summary>
        /// Hardware revision of an Azure Bare Metal Instance
        /// </summary>
        public readonly string? HwRevision;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the network settings for the Azure Bare Metal Instance.
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// Specifies the operating system settings for the Azure Bare Metal Instance.
        /// </summary>
        public readonly Outputs.OSProfileResponse? OsProfile;
        /// <summary>
        /// ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance
        /// </summary>
        public readonly string? PartnerNodeId;
        /// <summary>
        /// Resource power state
        /// </summary>
        public readonly string? PowerState;
        /// <summary>
        /// State of provisioning of the AzureBareMetalInstance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource proximity placement group
        /// </summary>
        public readonly string? ProximityPlacementGroup;
        /// <summary>
        /// Specifies the storage settings for the Azure Bare Metal Instance disks.
        /// </summary>
        public readonly Outputs.StorageProfileResponse? StorageProfile;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureBareMetalInstanceResult(
            string? azureBareMetalInstanceId,

            Outputs.HardwareProfileResponse? hardwareProfile,

            string? hwRevision,

            string id,

            string location,

            string name,

            Outputs.NetworkProfileResponse? networkProfile,

            Outputs.OSProfileResponse? osProfile,

            string? partnerNodeId,

            string? powerState,

            string provisioningState,

            string? proximityPlacementGroup,

            Outputs.StorageProfileResponse? storageProfile,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureBareMetalInstanceId = azureBareMetalInstanceId;
            HardwareProfile = hardwareProfile;
            HwRevision = hwRevision;
            Id = id;
            Location = location;
            Name = name;
            NetworkProfile = networkProfile;
            OsProfile = osProfile;
            PartnerNodeId = partnerNodeId;
            PowerState = powerState;
            ProvisioningState = provisioningState;
            ProximityPlacementGroup = proximityPlacementGroup;
            StorageProfile = storageProfile;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
