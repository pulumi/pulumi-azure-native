// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBox.V20221001.Outputs
{

    /// <summary>
    /// Customer disk job details.
    /// </summary>
    [OutputType]
    public sealed class DataBoxCustomerDiskJobDetailsResponse
    {
        /// <summary>
        /// Available actions on the job.
        /// </summary>
        public readonly ImmutableArray<string> Actions;
        /// <summary>
        /// Shared access key to download the chain of custody logs
        /// </summary>
        public readonly string ChainOfCustodySasKey;
        /// <summary>
        /// Contact details for notification and shipping.
        /// </summary>
        public readonly Outputs.ContactDetailsResponse ContactDetails;
        /// <summary>
        /// List of copy log details.
        /// </summary>
        public readonly ImmutableArray<object> CopyLogDetails;
        /// <summary>
        /// Copy progress per disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataBoxCustomerDiskCopyProgressResponse> CopyProgress;
        /// <summary>
        /// DataCenter code.
        /// </summary>
        public readonly string DataCenterCode;
        /// <summary>
        /// Details of the data to be exported from azure.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataExportDetailsResponse> DataExportDetails;
        /// <summary>
        /// Details of the data to be imported into azure.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataImportDetailsResponse> DataImportDetails;
        /// <summary>
        /// Datacenter address to ship to, for the given sku and storage location.
        /// </summary>
        public readonly Union<Outputs.DatacenterAddressInstructionResponseResponse, Outputs.DatacenterAddressLocationResponseResponse> DatacenterAddress;
        /// <summary>
        /// Delivery package shipping details.
        /// </summary>
        public readonly Outputs.PackageCarrierInfoResponse DeliverToDcPackageDetails;
        /// <summary>
        /// Delivery package shipping details.
        /// </summary>
        public readonly Outputs.PackageShippingDetailsResponse DeliveryPackage;
        /// <summary>
        /// Holds device data erasure details
        /// </summary>
        public readonly Outputs.DeviceErasureDetailsResponse DeviceErasureDetails;
        /// <summary>
        /// Flag to indicate if disk manifest should be backed-up in the Storage Account.
        /// </summary>
        public readonly bool? EnableManifestBackup;
        /// <summary>
        /// The expected size of the data, which needs to be transferred in this job, in terabytes.
        /// </summary>
        public readonly int? ExpectedDataSizeInTeraBytes;
        /// <summary>
        /// Contains the map of disk serial number to the disk details for export jobs.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ExportDiskDetailsResponse> ExportDiskDetailsCollection;
        /// <summary>
        /// Contains the map of disk serial number to the disk details for import jobs.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ImportDiskDetailsResponse>? ImportDiskDetailsCollection;
        /// <summary>
        /// Indicates the type of job details.
        /// Expected value is 'DataBoxCustomerDisk'.
        /// </summary>
        public readonly string JobDetailsType;
        /// <summary>
        /// List of stages that run in the job.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobStagesResponse> JobStages;
        /// <summary>
        /// Details about which key encryption type is being used.
        /// </summary>
        public readonly Outputs.KeyEncryptionKeyResponse? KeyEncryptionKey;
        /// <summary>
        /// Last mitigation action performed on the job.
        /// </summary>
        public readonly Outputs.LastMitigationActionOnJobResponse LastMitigationActionOnJob;
        /// <summary>
        /// Preferences for the order.
        /// </summary>
        public readonly Outputs.PreferencesResponse? Preferences;
        /// <summary>
        /// Return package shipping details.
        /// </summary>
        public readonly Outputs.PackageShippingDetailsResponse ReturnPackage;
        /// <summary>
        /// Return package shipping details.
        /// </summary>
        public readonly Outputs.PackageCarrierDetailsResponse ReturnToCustomerPackageDetails;
        /// <summary>
        /// Shared access key to download the return shipment label
        /// </summary>
        public readonly string ReverseShipmentLabelSasKey;
        /// <summary>
        /// Optional Reverse Shipping details for order.
        /// </summary>
        public readonly Outputs.ReverseShippingDetailsResponse? ReverseShippingDetails;
        /// <summary>
        /// Shipping address of the customer.
        /// </summary>
        public readonly Outputs.ShippingAddressResponse? ShippingAddress;

        [OutputConstructor]
        private DataBoxCustomerDiskJobDetailsResponse(
            ImmutableArray<string> actions,

            string chainOfCustodySasKey,

            Outputs.ContactDetailsResponse contactDetails,

            ImmutableArray<object> copyLogDetails,

            ImmutableArray<Outputs.DataBoxCustomerDiskCopyProgressResponse> copyProgress,

            string dataCenterCode,

            ImmutableArray<Outputs.DataExportDetailsResponse> dataExportDetails,

            ImmutableArray<Outputs.DataImportDetailsResponse> dataImportDetails,

            Union<Outputs.DatacenterAddressInstructionResponseResponse, Outputs.DatacenterAddressLocationResponseResponse> datacenterAddress,

            Outputs.PackageCarrierInfoResponse deliverToDcPackageDetails,

            Outputs.PackageShippingDetailsResponse deliveryPackage,

            Outputs.DeviceErasureDetailsResponse deviceErasureDetails,

            bool? enableManifestBackup,

            int? expectedDataSizeInTeraBytes,

            ImmutableDictionary<string, Outputs.ExportDiskDetailsResponse> exportDiskDetailsCollection,

            ImmutableDictionary<string, Outputs.ImportDiskDetailsResponse>? importDiskDetailsCollection,

            string jobDetailsType,

            ImmutableArray<Outputs.JobStagesResponse> jobStages,

            Outputs.KeyEncryptionKeyResponse? keyEncryptionKey,

            Outputs.LastMitigationActionOnJobResponse lastMitigationActionOnJob,

            Outputs.PreferencesResponse? preferences,

            Outputs.PackageShippingDetailsResponse returnPackage,

            Outputs.PackageCarrierDetailsResponse returnToCustomerPackageDetails,

            string reverseShipmentLabelSasKey,

            Outputs.ReverseShippingDetailsResponse? reverseShippingDetails,

            Outputs.ShippingAddressResponse? shippingAddress)
        {
            Actions = actions;
            ChainOfCustodySasKey = chainOfCustodySasKey;
            ContactDetails = contactDetails;
            CopyLogDetails = copyLogDetails;
            CopyProgress = copyProgress;
            DataCenterCode = dataCenterCode;
            DataExportDetails = dataExportDetails;
            DataImportDetails = dataImportDetails;
            DatacenterAddress = datacenterAddress;
            DeliverToDcPackageDetails = deliverToDcPackageDetails;
            DeliveryPackage = deliveryPackage;
            DeviceErasureDetails = deviceErasureDetails;
            EnableManifestBackup = enableManifestBackup;
            ExpectedDataSizeInTeraBytes = expectedDataSizeInTeraBytes;
            ExportDiskDetailsCollection = exportDiskDetailsCollection;
            ImportDiskDetailsCollection = importDiskDetailsCollection;
            JobDetailsType = jobDetailsType;
            JobStages = jobStages;
            KeyEncryptionKey = keyEncryptionKey;
            LastMitigationActionOnJob = lastMitigationActionOnJob;
            Preferences = preferences;
            ReturnPackage = returnPackage;
            ReturnToCustomerPackageDetails = returnToCustomerPackageDetails;
            ReverseShipmentLabelSasKey = reverseShipmentLabelSasKey;
            ReverseShippingDetails = reverseShippingDetails;
            ShippingAddress = shippingAddress;
        }
    }
}
