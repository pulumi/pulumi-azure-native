// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataBox.Latest.Outputs
{

    [OutputType]
    public sealed class DataBoxDiskJobDetailsInvokeResponseResult
    {
        /// <summary>
        /// Shared access key to download the chain of custody logs
        /// </summary>
        public readonly string ChainOfCustodySasKey;
        /// <summary>
        /// Contact details for notification and shipping.
        /// </summary>
        public readonly Outputs.ContactDetailsInvokeResponseResult ContactDetails;
        /// <summary>
        /// List of copy log details.
        /// </summary>
        public readonly ImmutableArray<object> CopyLogDetails;
        /// <summary>
        /// Copy progress per disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataBoxDiskCopyProgressInvokeResponseResult> CopyProgress;
        /// <summary>
        /// Details of the data to be exported from azure.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataExportDetailsInvokeResponseResult> DataExportDetails;
        /// <summary>
        /// Details of the data to be imported into azure.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataImportDetailsInvokeResponseResult> DataImportDetails;
        /// <summary>
        /// Delivery package shipping details.
        /// </summary>
        public readonly Outputs.PackageShippingDetailsInvokeResponseResult DeliveryPackage;
        /// <summary>
        /// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
        /// </summary>
        public readonly ImmutableDictionary<string, int> DisksAndSizeDetails;
        /// <summary>
        /// The expected size of the data, which needs to be transferred in this job, in terabytes.
        /// </summary>
        public readonly int? ExpectedDataSizeInTerabytes;
        /// <summary>
        /// Indicates the type of job details.
        /// Expected value is 'DataBoxDisk'.
        /// </summary>
        public readonly string JobDetailsType;
        /// <summary>
        /// List of stages that run in the job.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobStagesInvokeResponseResult> JobStages;
        /// <summary>
        /// Details about which key encryption type is being used.
        /// </summary>
        public readonly Outputs.KeyEncryptionKeyInvokeResponseResult? KeyEncryptionKey;
        /// <summary>
        /// User entered passkey for DataBox Disk job.
        /// </summary>
        public readonly string? Passkey;
        /// <summary>
        /// Preferences for the order.
        /// </summary>
        public readonly Outputs.PreferencesInvokeResponseResult? Preferences;
        /// <summary>
        /// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
        /// </summary>
        public readonly ImmutableDictionary<string, int>? PreferredDisks;
        /// <summary>
        /// Return package shipping details.
        /// </summary>
        public readonly Outputs.PackageShippingDetailsInvokeResponseResult ReturnPackage;
        /// <summary>
        /// Shared access key to download the return shipment label
        /// </summary>
        public readonly string ReverseShipmentLabelSasKey;
        /// <summary>
        /// Shipping address of the customer.
        /// </summary>
        public readonly Outputs.ShippingAddressInvokeResponseResult? ShippingAddress;

        [OutputConstructor]
        private DataBoxDiskJobDetailsInvokeResponseResult(
            string chainOfCustodySasKey,

            Outputs.ContactDetailsInvokeResponseResult contactDetails,

            ImmutableArray<object> copyLogDetails,

            ImmutableArray<Outputs.DataBoxDiskCopyProgressInvokeResponseResult> copyProgress,

            ImmutableArray<Outputs.DataExportDetailsInvokeResponseResult> dataExportDetails,

            ImmutableArray<Outputs.DataImportDetailsInvokeResponseResult> dataImportDetails,

            Outputs.PackageShippingDetailsInvokeResponseResult deliveryPackage,

            ImmutableDictionary<string, int> disksAndSizeDetails,

            int? expectedDataSizeInTerabytes,

            string jobDetailsType,

            ImmutableArray<Outputs.JobStagesInvokeResponseResult> jobStages,

            Outputs.KeyEncryptionKeyInvokeResponseResult? keyEncryptionKey,

            string? passkey,

            Outputs.PreferencesInvokeResponseResult? preferences,

            ImmutableDictionary<string, int>? preferredDisks,

            Outputs.PackageShippingDetailsInvokeResponseResult returnPackage,

            string reverseShipmentLabelSasKey,

            Outputs.ShippingAddressInvokeResponseResult? shippingAddress)
        {
            ChainOfCustodySasKey = chainOfCustodySasKey;
            ContactDetails = contactDetails;
            CopyLogDetails = copyLogDetails;
            CopyProgress = copyProgress;
            DataExportDetails = dataExportDetails;
            DataImportDetails = dataImportDetails;
            DeliveryPackage = deliveryPackage;
            DisksAndSizeDetails = disksAndSizeDetails;
            ExpectedDataSizeInTerabytes = expectedDataSizeInTerabytes;
            JobDetailsType = jobDetailsType;
            JobStages = jobStages;
            KeyEncryptionKey = keyEncryptionKey;
            Passkey = passkey;
            Preferences = preferences;
            PreferredDisks = preferredDisks;
            ReturnPackage = returnPackage;
            ReverseShipmentLabelSasKey = reverseShipmentLabelSasKey;
            ShippingAddress = shippingAddress;
        }
    }
}
