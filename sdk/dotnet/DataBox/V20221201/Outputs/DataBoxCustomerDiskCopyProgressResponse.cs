// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBox.V20221201.Outputs
{

    /// <summary>
    /// DataBox CustomerDisk Copy Progress
    /// </summary>
    [OutputType]
    public sealed class DataBoxCustomerDiskCopyProgressResponse
    {
        /// <summary>
        /// Id of the account where the data needs to be uploaded.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Available actions on the job.
        /// </summary>
        public readonly ImmutableArray<string> Actions;
        /// <summary>
        /// To indicate bytes transferred.
        /// </summary>
        public readonly double BytesProcessed;
        /// <summary>
        /// The Status of the copy
        /// </summary>
        public readonly string CopyStatus;
        /// <summary>
        /// Data Account Type.
        /// </summary>
        public readonly string DataAccountType;
        /// <summary>
        /// To indicate directories errored out in the job.
        /// </summary>
        public readonly double DirectoriesErroredOut;
        /// <summary>
        /// Error, if any, in the stage
        /// </summary>
        public readonly Outputs.CloudErrorResponse Error;
        /// <summary>
        /// Number of files which could not be copied
        /// </summary>
        public readonly double FilesErroredOut;
        /// <summary>
        /// Number of files processed
        /// </summary>
        public readonly double FilesProcessed;
        /// <summary>
        /// To indicate directories renamed
        /// </summary>
        public readonly double InvalidDirectoriesProcessed;
        /// <summary>
        /// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
        /// </summary>
        public readonly double InvalidFileBytesUploaded;
        /// <summary>
        /// Number of files not adhering to azure naming conventions which were processed by automatic renaming
        /// </summary>
        public readonly double InvalidFilesProcessed;
        /// <summary>
        /// To indicate if enumeration of data is in progress. 
        /// Until this is true, the TotalBytesToProcess may not be valid.
        /// </summary>
        public readonly bool IsEnumerationInProgress;
        /// <summary>
        /// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
        /// </summary>
        public readonly double RenamedContainerCount;
        /// <summary>
        /// Disk Serial Number.
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// Name of the storage account. This will be empty for data account types other than storage account.
        /// </summary>
        public readonly string StorageAccountName;
        /// <summary>
        /// Total amount of data to be processed by the job.
        /// </summary>
        public readonly double TotalBytesToProcess;
        /// <summary>
        /// Total files to process
        /// </summary>
        public readonly double TotalFilesToProcess;
        /// <summary>
        /// Transfer type of data
        /// </summary>
        public readonly string TransferType;

        [OutputConstructor]
        private DataBoxCustomerDiskCopyProgressResponse(
            string accountId,

            ImmutableArray<string> actions,

            double bytesProcessed,

            string copyStatus,

            string dataAccountType,

            double directoriesErroredOut,

            Outputs.CloudErrorResponse error,

            double filesErroredOut,

            double filesProcessed,

            double invalidDirectoriesProcessed,

            double invalidFileBytesUploaded,

            double invalidFilesProcessed,

            bool isEnumerationInProgress,

            double renamedContainerCount,

            string serialNumber,

            string storageAccountName,

            double totalBytesToProcess,

            double totalFilesToProcess,

            string transferType)
        {
            AccountId = accountId;
            Actions = actions;
            BytesProcessed = bytesProcessed;
            CopyStatus = copyStatus;
            DataAccountType = dataAccountType;
            DirectoriesErroredOut = directoriesErroredOut;
            Error = error;
            FilesErroredOut = filesErroredOut;
            FilesProcessed = filesProcessed;
            InvalidDirectoriesProcessed = invalidDirectoriesProcessed;
            InvalidFileBytesUploaded = invalidFileBytesUploaded;
            InvalidFilesProcessed = invalidFilesProcessed;
            IsEnumerationInProgress = isEnumerationInProgress;
            RenamedContainerCount = renamedContainerCount;
            SerialNumber = serialNumber;
            StorageAccountName = storageAccountName;
            TotalBytesToProcess = totalBytesToProcess;
            TotalFilesToProcess = totalFilesToProcess;
            TransferType = transferType;
        }
    }
}
