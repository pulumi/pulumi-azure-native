// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBox.V20220901.Inputs
{

    /// <summary>
    /// Customer disk job details.
    /// </summary>
    public sealed class DataBoxCustomerDiskJobDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contact details for notification and shipping.
        /// </summary>
        [Input("contactDetails", required: true)]
        public Input<Inputs.ContactDetailsArgs> ContactDetails { get; set; } = null!;

        [Input("dataExportDetails")]
        private InputList<Inputs.DataExportDetailsArgs>? _dataExportDetails;

        /// <summary>
        /// Details of the data to be exported from azure.
        /// </summary>
        public InputList<Inputs.DataExportDetailsArgs> DataExportDetails
        {
            get => _dataExportDetails ?? (_dataExportDetails = new InputList<Inputs.DataExportDetailsArgs>());
            set => _dataExportDetails = value;
        }

        [Input("dataImportDetails")]
        private InputList<Inputs.DataImportDetailsArgs>? _dataImportDetails;

        /// <summary>
        /// Details of the data to be imported into azure.
        /// </summary>
        public InputList<Inputs.DataImportDetailsArgs> DataImportDetails
        {
            get => _dataImportDetails ?? (_dataImportDetails = new InputList<Inputs.DataImportDetailsArgs>());
            set => _dataImportDetails = value;
        }

        /// <summary>
        /// Flag to indicate if disk manifest should be backed-up in the Storage Account.
        /// </summary>
        [Input("enableManifestBackup")]
        public Input<bool>? EnableManifestBackup { get; set; }

        /// <summary>
        /// The expected size of the data, which needs to be transferred in this job, in terabytes.
        /// </summary>
        [Input("expectedDataSizeInTeraBytes")]
        public Input<int>? ExpectedDataSizeInTeraBytes { get; set; }

        [Input("importDiskDetailsCollection")]
        private InputMap<Inputs.ImportDiskDetailsArgs>? _importDiskDetailsCollection;

        /// <summary>
        /// Contains the map of disk serial number to the disk details for import jobs.
        /// </summary>
        public InputMap<Inputs.ImportDiskDetailsArgs> ImportDiskDetailsCollection
        {
            get => _importDiskDetailsCollection ?? (_importDiskDetailsCollection = new InputMap<Inputs.ImportDiskDetailsArgs>());
            set => _importDiskDetailsCollection = value;
        }

        /// <summary>
        /// Indicates the type of job details.
        /// Expected value is 'DataBoxCustomerDisk'.
        /// </summary>
        [Input("jobDetailsType", required: true)]
        public Input<string> JobDetailsType { get; set; } = null!;

        /// <summary>
        /// Details about which key encryption type is being used.
        /// </summary>
        [Input("keyEncryptionKey")]
        public Input<Inputs.KeyEncryptionKeyArgs>? KeyEncryptionKey { get; set; }

        /// <summary>
        /// Preferences for the order.
        /// </summary>
        [Input("preferences")]
        public Input<Inputs.PreferencesArgs>? Preferences { get; set; }

        /// <summary>
        /// Return package shipping details.
        /// </summary>
        [Input("returnToCustomerPackageDetails", required: true)]
        public Input<Inputs.PackageCarrierDetailsArgs> ReturnToCustomerPackageDetails { get; set; } = null!;

        /// <summary>
        /// Optional Reverse Shipping details for order.
        /// </summary>
        [Input("reverseShippingDetails")]
        public Input<Inputs.ReverseShippingDetailsArgs>? ReverseShippingDetails { get; set; }

        /// <summary>
        /// Shipping address of the customer.
        /// </summary>
        [Input("shippingAddress")]
        public Input<Inputs.ShippingAddressArgs>? ShippingAddress { get; set; }

        public DataBoxCustomerDiskJobDetailsArgs()
        {
            EnableManifestBackup = false;
        }
        public static new DataBoxCustomerDiskJobDetailsArgs Empty => new DataBoxCustomerDiskJobDetailsArgs();
    }
}
