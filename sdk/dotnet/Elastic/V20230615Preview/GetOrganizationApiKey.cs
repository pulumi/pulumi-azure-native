// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic.V20230615Preview
{
    public static class GetOrganizationApiKey
    {
        /// <summary>
        /// Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
        /// </summary>
        public static Task<GetOrganizationApiKeyResult> InvokeAsync(GetOrganizationApiKeyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationApiKeyResult>("azure-native:elastic/v20230615preview:getOrganizationApiKey", args ?? new GetOrganizationApiKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
        /// </summary>
        public static Output<GetOrganizationApiKeyResult> Invoke(GetOrganizationApiKeyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationApiKeyResult>("azure-native:elastic/v20230615preview:getOrganizationApiKey", args ?? new GetOrganizationApiKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationApiKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The User email Id
        /// </summary>
        [Input("emailId")]
        public string? EmailId { get; set; }

        public GetOrganizationApiKeyArgs()
        {
        }
        public static new GetOrganizationApiKeyArgs Empty => new GetOrganizationApiKeyArgs();
    }

    public sealed class GetOrganizationApiKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The User email Id
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        public GetOrganizationApiKeyInvokeArgs()
        {
        }
        public static new GetOrganizationApiKeyInvokeArgs Empty => new GetOrganizationApiKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationApiKeyResult
    {
        public readonly Outputs.UserApiKeyResponsePropertiesResponse Properties;

        [OutputConstructor]
        private GetOrganizationApiKeyResult(Outputs.UserApiKeyResponsePropertiesResponse properties)
        {
            Properties = properties;
        }
    }
}
