// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic
{
    public static class GetMonitoredSubscription
    {
        /// <summary>
        /// The request to update subscriptions needed to be monitored by the Elastic monitor resource.
        /// Azure REST API version: 2024-05-01-preview.
        /// 
        /// Other available API versions: 2024-06-15-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetMonitoredSubscriptionResult> InvokeAsync(GetMonitoredSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredSubscriptionResult>("azure-native:elastic:getMonitoredSubscription", args ?? new GetMonitoredSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// The request to update subscriptions needed to be monitored by the Elastic monitor resource.
        /// Azure REST API version: 2024-05-01-preview.
        /// 
        /// Other available API versions: 2024-06-15-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetMonitoredSubscriptionResult> Invoke(GetMonitoredSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredSubscriptionResult>("azure-native:elastic:getMonitoredSubscription", args ?? new GetMonitoredSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The configuration name. Only 'default' value is supported.
        /// </summary>
        [Input("configurationName", required: true)]
        public string ConfigurationName { get; set; } = null!;

        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMonitoredSubscriptionArgs()
        {
        }
        public static new GetMonitoredSubscriptionArgs Empty => new GetMonitoredSubscriptionArgs();
    }

    public sealed class GetMonitoredSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The configuration name. Only 'default' value is supported.
        /// </summary>
        [Input("configurationName", required: true)]
        public Input<string> ConfigurationName { get; set; } = null!;

        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMonitoredSubscriptionInvokeArgs()
        {
        }
        public static new GetMonitoredSubscriptionInvokeArgs Empty => new GetMonitoredSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredSubscriptionResult
    {
        /// <summary>
        /// The id of the monitored subscription resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the monitored subscription resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The request to update subscriptions needed to be monitored by the Elastic monitor resource.
        /// </summary>
        public readonly Outputs.SubscriptionListResponse Properties;
        /// <summary>
        /// The type of the monitored subscription resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMonitoredSubscriptionResult(
            string id,

            string name,

            Outputs.SubscriptionListResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
