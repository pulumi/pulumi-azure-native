// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic.V20250115Preview.Inputs
{

    /// <summary>
    /// Properties specific to the monitor resource.
    /// </summary>
    public sealed class MonitorPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag to determine if User API Key has to be generated and shared.
        /// </summary>
        [Input("generateApiKey")]
        public Input<bool>? GenerateApiKey { get; set; }

        /// <summary>
        /// Hosting type of the monitor resource - either Hosted deployments OR Serverless Projects.
        /// </summary>
        [Input("hostingType")]
        public InputUnion<string, Pulumi.AzureNative.Elastic.V20250115Preview.HostingType>? HostingType { get; set; }

        /// <summary>
        /// Flag specifying if the resource monitoring is enabled or disabled.
        /// </summary>
        [Input("monitoringStatus")]
        public InputUnion<string, Pulumi.AzureNative.Elastic.V20250115Preview.MonitoringStatus>? MonitoringStatus { get; set; }

        /// <summary>
        /// Plan details of the monitor resource.
        /// </summary>
        [Input("planDetails")]
        public Input<Inputs.PlanDetailsArgs>? PlanDetails { get; set; }

        /// <summary>
        /// Project details of the monitor resource IF it belongs to Serverless offer kind.
        /// </summary>
        [Input("projectDetails")]
        public Input<Inputs.ProjectDetailsArgs>? ProjectDetails { get; set; }

        /// <summary>
        /// Status of Azure Subscription where Marketplace SaaS is located.
        /// </summary>
        [Input("saaSAzureSubscriptionStatus")]
        public Input<string>? SaaSAzureSubscriptionStatus { get; set; }

        /// <summary>
        /// A unique identifier associated with the campaign.
        /// </summary>
        [Input("sourceCampaignId")]
        public Input<string>? SourceCampaignId { get; set; }

        /// <summary>
        /// Name of the marketing campaign.
        /// </summary>
        [Input("sourceCampaignName")]
        public Input<string>? SourceCampaignName { get; set; }

        /// <summary>
        /// State of the Azure Subscription containing the monitor resource
        /// </summary>
        [Input("subscriptionState")]
        public Input<string>? SubscriptionState { get; set; }

        /// <summary>
        /// User information.
        /// </summary>
        [Input("userInfo")]
        public Input<Inputs.UserInfoArgs>? UserInfo { get; set; }

        /// <summary>
        /// Version of elastic of the monitor resource
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public MonitorPropertiesArgs()
        {
        }
        public static new MonitorPropertiesArgs Empty => new MonitorPropertiesArgs();
    }
}
