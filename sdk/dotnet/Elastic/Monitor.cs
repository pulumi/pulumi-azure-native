// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic
{
    /// <summary>
    /// Monitor resource.
    /// API Version: 2023-06-01.
    /// Previous API Version: 2020-07-01. See https://github.com/pulumi/pulumi-azure-native/discussions/1834 for information on migrating from v1 to v2 of the provider.
    /// </summary>
    [AzureNativeResourceType("azure-native:elastic:Monitor")]
    public partial class Monitor : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identity properties of the monitor resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityPropertiesResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The location of the monitor resource
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the monitor resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the monitor resource.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.MonitorPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// SKU of the monitor resource.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ResourceSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The tags of the monitor resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the monitor resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Monitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Monitor(string name, MonitorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:elastic:Monitor", name, args ?? new MonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Monitor(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:elastic:Monitor", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20200701:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20200701preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20210901preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20211001preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20220505preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20220701preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20220901preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20230201preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20230501preview:Monitor"},
                    new global::Pulumi.Alias { Type = "azure-native:elastic/v20230601:Monitor"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Monitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Monitor Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Monitor(name, id, options);
        }
    }

    public sealed class MonitorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity properties of the monitor resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityPropertiesArgs>? Identity { get; set; }

        /// <summary>
        /// The location of the monitor resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName")]
        public Input<string>? MonitorName { get; set; }

        /// <summary>
        /// Properties of the monitor resource.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.MonitorPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group to which the Elastic resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SKU of the monitor resource.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ResourceSkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags of the monitor resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public MonitorArgs()
        {
        }
        public static new MonitorArgs Empty => new MonitorArgs();
    }
}
