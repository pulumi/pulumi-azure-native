// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic.V20240101Preview
{
    public static class ListDeploymentInfo
    {
        /// <summary>
        /// The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
        /// </summary>
        public static Task<ListDeploymentInfoResult> InvokeAsync(ListDeploymentInfoArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDeploymentInfoResult>("azure-native:elastic/v20240101preview:listDeploymentInfo", args ?? new ListDeploymentInfoArgs(), options.WithDefaults());

        /// <summary>
        /// The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
        /// </summary>
        public static Output<ListDeploymentInfoResult> Invoke(ListDeploymentInfoInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDeploymentInfoResult>("azure-native:elastic/v20240101preview:listDeploymentInfo", args ?? new ListDeploymentInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDeploymentInfoArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListDeploymentInfoArgs()
        {
        }
        public static new ListDeploymentInfoArgs Empty => new ListDeploymentInfoArgs();
    }

    public sealed class ListDeploymentInfoInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListDeploymentInfoInvokeArgs()
        {
        }
        public static new ListDeploymentInfoInvokeArgs Empty => new ListDeploymentInfoInvokeArgs();
    }


    [OutputType]
    public sealed class ListDeploymentInfoResult
    {
        /// <summary>
        /// Deployment URL of the elasticsearch in Elastic cloud deployment.
        /// </summary>
        public readonly string DeploymentUrl;
        /// <summary>
        /// Disk capacity of the elasticsearch in Elastic cloud deployment.
        /// </summary>
        public readonly string DiskCapacity;
        /// <summary>
        /// Elasticsearch endpoint in Elastic cloud deployment. This is either the aliased_endpoint if available, or the service_url otherwise.
        /// </summary>
        public readonly string ElasticsearchEndPoint;
        /// <summary>
        /// Marketplace SaaS Info of the resource.
        /// </summary>
        public readonly Outputs.MarketplaceSaaSInfoResponse MarketplaceSaasInfo;
        /// <summary>
        /// RAM capacity of the elasticsearch in Elastic cloud deployment.
        /// </summary>
        public readonly string MemoryCapacity;
        /// <summary>
        /// The Elastic deployment status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Version of the elasticsearch in Elastic cloud deployment.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private ListDeploymentInfoResult(
            string deploymentUrl,

            string diskCapacity,

            string elasticsearchEndPoint,

            Outputs.MarketplaceSaaSInfoResponse marketplaceSaasInfo,

            string memoryCapacity,

            string status,

            string version)
        {
            DeploymentUrl = deploymentUrl;
            DiskCapacity = diskCapacity;
            ElasticsearchEndPoint = elasticsearchEndPoint;
            MarketplaceSaasInfo = marketplaceSaasInfo;
            MemoryCapacity = memoryCapacity;
            Status = status;
            Version = version;
        }
    }
}
