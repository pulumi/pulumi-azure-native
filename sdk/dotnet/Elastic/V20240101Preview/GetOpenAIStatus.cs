// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Elastic.V20240101Preview
{
    public static class GetOpenAIStatus
    {
        /// <summary>
        /// Status of the OpenAI Integration
        /// </summary>
        public static Task<GetOpenAIStatusResult> InvokeAsync(GetOpenAIStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOpenAIStatusResult>("azure-native:elastic/v20240101preview:getOpenAIStatus", args ?? new GetOpenAIStatusArgs(), options.WithDefaults());

        /// <summary>
        /// Status of the OpenAI Integration
        /// </summary>
        public static Output<GetOpenAIStatusResult> Invoke(GetOpenAIStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpenAIStatusResult>("azure-native:elastic/v20240101preview:getOpenAIStatus", args ?? new GetOpenAIStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpenAIStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OpenAI Integration name
        /// </summary>
        [Input("integrationName", required: true)]
        public string IntegrationName { get; set; } = null!;

        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOpenAIStatusArgs()
        {
        }
        public static new GetOpenAIStatusArgs Empty => new GetOpenAIStatusArgs();
    }

    public sealed class GetOpenAIStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OpenAI Integration name
        /// </summary>
        [Input("integrationName", required: true)]
        public Input<string> IntegrationName { get; set; } = null!;

        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetOpenAIStatusInvokeArgs()
        {
        }
        public static new GetOpenAIStatusInvokeArgs Empty => new GetOpenAIStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetOpenAIStatusResult
    {
        /// <summary>
        /// Status of the OpenAI Integration
        /// </summary>
        public readonly Outputs.OpenAIIntegrationStatusResponsePropertiesResponse Properties;

        [OutputConstructor]
        private GetOpenAIStatusResult(Outputs.OpenAIIntegrationStatusResponsePropertiesResponse properties)
        {
            Properties = properties;
        }
    }
}
