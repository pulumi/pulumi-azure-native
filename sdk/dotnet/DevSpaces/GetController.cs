// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DevSpaces
{
    public static class GetController
    {
        public static Task<GetControllerResult> InvokeAsync(GetControllerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetControllerResult>("azurerm:devspaces:getController", args ?? new GetControllerArgs(), options.WithVersion());
    }


    public sealed class GetControllerArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetControllerArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetControllerResult
    {
        /// <summary>
        /// Region where the Azure resource is located.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.ControllerPropertiesResponseResult Properties;
        /// <summary>
        /// Model representing SKU for Azure Dev Spaces Controller.
        /// </summary>
        public readonly Outputs.SkuResponseResult Sku;
        /// <summary>
        /// Tags for the Azure resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetControllerResult(
            string location,

            string name,

            Outputs.ControllerPropertiesResponseResult properties,

            Outputs.SkuResponseResult sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
