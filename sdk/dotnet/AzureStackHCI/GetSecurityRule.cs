// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI
{
    public static class GetSecurityRule
    {
        /// <summary>
        /// Gets the specified security rule.
        /// Azure REST API version: 2024-02-01-preview.
        /// 
        /// Other available API versions: 2024-05-01-preview.
        /// </summary>
        public static Task<GetSecurityRuleResult> InvokeAsync(GetSecurityRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityRuleResult>("azure-native:azurestackhci:getSecurityRule", args ?? new GetSecurityRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified security rule.
        /// Azure REST API version: 2024-02-01-preview.
        /// 
        /// Other available API versions: 2024-05-01-preview.
        /// </summary>
        public static Output<GetSecurityRuleResult> Invoke(GetSecurityRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityRuleResult>("azure-native:azurestackhci:getSecurityRule", args ?? new GetSecurityRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the network security group
        /// </summary>
        [Input("networkSecurityGroupName", required: true)]
        public string NetworkSecurityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the security rule.
        /// </summary>
        [Input("securityRuleName", required: true)]
        public string SecurityRuleName { get; set; } = null!;

        public GetSecurityRuleArgs()
        {
        }
        public static new GetSecurityRuleArgs Empty => new GetSecurityRuleArgs();
    }

    public sealed class GetSecurityRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the network security group
        /// </summary>
        [Input("networkSecurityGroupName", required: true)]
        public Input<string> NetworkSecurityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the security rule.
        /// </summary>
        [Input("securityRuleName", required: true)]
        public Input<string> SecurityRuleName { get; set; } = null!;

        public GetSecurityRuleInvokeArgs()
        {
        }
        public static new GetSecurityRuleInvokeArgs Empty => new GetSecurityRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityRuleResult
    {
        /// <summary>
        /// The network traffic is allowed or denied.
        /// </summary>
        public readonly string Access;
        /// <summary>
        /// A description for this rule. Restricted to 140 chars.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The destination address prefixes. CIDR or destination IP ranges.
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddressPrefixes;
        /// <summary>
        /// The destination port ranges. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        /// </summary>
        public readonly ImmutableArray<string> DestinationPortRanges;
        /// <summary>
        /// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Network protocol this rule applies to.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Provisioning state of the SR
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The CIDR or source IP ranges.
        /// </summary>
        public readonly ImmutableArray<string> SourceAddressPrefixes;
        /// <summary>
        /// The source port ranges. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        /// </summary>
        public readonly ImmutableArray<string> SourcePortRanges;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSecurityRuleResult(
            string access,

            string? description,

            ImmutableArray<string> destinationAddressPrefixes,

            ImmutableArray<string> destinationPortRanges,

            string direction,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string name,

            int priority,

            string protocol,

            string provisioningState,

            ImmutableArray<string> sourceAddressPrefixes,

            ImmutableArray<string> sourcePortRanges,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Access = access;
            Description = description;
            DestinationAddressPrefixes = destinationAddressPrefixes;
            DestinationPortRanges = destinationPortRanges;
            Direction = direction;
            ExtendedLocation = extendedLocation;
            Id = id;
            Name = name;
            Priority = priority;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            SourceAddressPrefixes = sourceAddressPrefixes;
            SourcePortRanges = sourcePortRanges;
            SystemData = systemData;
            Type = type;
        }
    }
}
