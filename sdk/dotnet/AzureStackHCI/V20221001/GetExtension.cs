// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20221001
{
    public static class GetExtension
    {
        /// <summary>
        /// Get particular Arc Extension of HCI Cluster.
        /// </summary>
        public static Task<GetExtensionResult> InvokeAsync(GetExtensionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionResult>("azure-native:azurestackhci/v20221001:getExtension", args ?? new GetExtensionArgs(), options.WithDefaults());

        /// <summary>
        /// Get particular Arc Extension of HCI Cluster.
        /// </summary>
        public static Output<GetExtensionResult> Invoke(GetExtensionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionResult>("azure-native:azurestackhci/v20221001:getExtension", args ?? new GetExtensionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public string ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the machine extension.
        /// </summary>
        [Input("extensionName", required: true)]
        public string ExtensionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExtensionArgs()
        {
        }
        public static new GetExtensionArgs Empty => new GetExtensionArgs();
    }

    public sealed class GetExtensionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public Input<string> ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the machine extension.
        /// </summary>
        [Input("extensionName", required: true)]
        public Input<string> ExtensionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExtensionInvokeArgs()
        {
        }
        public static new GetExtensionInvokeArgs Empty => new GetExtensionInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionResult
    {
        /// <summary>
        /// Aggregate state of Arc Extensions across the nodes in this HCI cluster.
        /// </summary>
        public readonly string AggregateState;
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        public readonly bool? AutoUpgradeMinorVersion;
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        public readonly string? CreatedByType;
        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        public readonly string? ForceUpdateTag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        public readonly string? LastModifiedAt;
        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedByType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of Arc Extension in each of the nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.PerNodeExtensionStateResponse> PerNodeExtensionDetails;
        /// <summary>
        /// Protected settings (may contain secrets).
        /// </summary>
        public readonly object? ProtectedSettings;
        /// <summary>
        /// Provisioning state of the Extension proxy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The name of the extension handler publisher.
        /// </summary>
        public readonly string? Publisher;
        /// <summary>
        /// Json formatted public settings for the extension.
        /// </summary>
        public readonly object? Settings;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the version of the script handler.
        /// </summary>
        public readonly string? TypeHandlerVersion;

        [OutputConstructor]
        private GetExtensionResult(
            string aggregateState,

            bool? autoUpgradeMinorVersion,

            string? createdAt,

            string? createdBy,

            string? createdByType,

            string? forceUpdateTag,

            string id,

            string? lastModifiedAt,

            string? lastModifiedBy,

            string? lastModifiedByType,

            string name,

            ImmutableArray<Outputs.PerNodeExtensionStateResponse> perNodeExtensionDetails,

            object? protectedSettings,

            string provisioningState,

            string? publisher,

            object? settings,

            Outputs.SystemDataResponse systemData,

            string type,

            string? typeHandlerVersion)
        {
            AggregateState = aggregateState;
            AutoUpgradeMinorVersion = autoUpgradeMinorVersion;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            CreatedByType = createdByType;
            ForceUpdateTag = forceUpdateTag;
            Id = id;
            LastModifiedAt = lastModifiedAt;
            LastModifiedBy = lastModifiedBy;
            LastModifiedByType = lastModifiedByType;
            Name = name;
            PerNodeExtensionDetails = perNodeExtensionDetails;
            ProtectedSettings = protectedSettings;
            ProvisioningState = provisioningState;
            Publisher = publisher;
            Settings = settings;
            SystemData = systemData;
            Type = type;
            TypeHandlerVersion = typeHandlerVersion;
        }
    }
}
