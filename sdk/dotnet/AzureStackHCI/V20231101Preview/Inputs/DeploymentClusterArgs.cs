// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20231101Preview.Inputs
{

    /// <summary>
    /// AzureStackHCI Cluster deployment properties.
    /// </summary>
    public sealed class DeploymentClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
        /// </summary>
        [Input("azureServiceEndpoint")]
        public Input<string>? AzureServiceEndpoint { get; set; }

        /// <summary>
        /// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
        /// </summary>
        [Input("cloudAccountName")]
        public Input<string>? CloudAccountName { get; set; }

        /// <summary>
        /// The cluster name provided when preparing Active Directory.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
        /// </summary>
        [Input("witnessPath")]
        public Input<string>? WitnessPath { get; set; }

        /// <summary>
        /// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. 
        /// </summary>
        [Input("witnessType")]
        public Input<string>? WitnessType { get; set; }

        public DeploymentClusterArgs()
        {
        }
        public static new DeploymentClusterArgs Empty => new DeploymentClusterArgs();
    }
}
