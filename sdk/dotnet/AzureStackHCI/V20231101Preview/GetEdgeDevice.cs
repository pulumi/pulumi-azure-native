// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20231101Preview
{
    public static class GetEdgeDevice
    {
        /// <summary>
        /// Get a EdgeDevice
        /// </summary>
        public static Task<GetEdgeDeviceResult> InvokeAsync(GetEdgeDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeDeviceResult>("azure-native:azurestackhci/v20231101preview:getEdgeDevice", args ?? new GetEdgeDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a EdgeDevice
        /// </summary>
        public static Output<GetEdgeDeviceResult> Invoke(GetEdgeDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeDeviceResult>("azure-native:azurestackhci/v20231101preview:getEdgeDevice", args ?? new GetEdgeDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Device
        /// </summary>
        [Input("edgeDeviceName", required: true)]
        public string EdgeDeviceName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetEdgeDeviceArgs()
        {
        }
        public static new GetEdgeDeviceArgs Empty => new GetEdgeDeviceArgs();
    }

    public sealed class GetEdgeDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Device
        /// </summary>
        [Input("edgeDeviceName", required: true)]
        public Input<string> EdgeDeviceName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetEdgeDeviceInvokeArgs()
        {
        }
        public static new GetEdgeDeviceInvokeArgs Empty => new GetEdgeDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeDeviceResult
    {
        /// <summary>
        /// Device Configuration
        /// </summary>
        public readonly Outputs.DeviceConfigurationResponse DeviceConfiguration;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of edgeDevice resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEdgeDeviceResult(
            Outputs.DeviceConfigurationResponse deviceConfiguration,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DeviceConfiguration = deviceConfiguration;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
