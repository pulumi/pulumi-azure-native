// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240401.Inputs
{

    /// <summary>
    /// The InfrastructureNetwork of a AzureStackHCI Cluster.
    /// </summary>
    public sealed class InfrastructureNetworkArgs : global::Pulumi.ResourceArgs
    {
        [Input("dnsServers")]
        private InputList<string>? _dnsServers;

        /// <summary>
        /// IPv4 address of the DNS servers in your environment.
        /// </summary>
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        /// <summary>
        /// Default gateway that should be used for the provided IP address space.
        /// </summary>
        [Input("gateway")]
        public Input<string>? Gateway { get; set; }

        [Input("ipPools")]
        private InputList<Inputs.IpPoolsArgs>? _ipPools;

        /// <summary>
        /// Range of IP addresses from which addresses are allocated for nodes within a subnet.
        /// </summary>
        public InputList<Inputs.IpPoolsArgs> IpPools
        {
            get => _ipPools ?? (_ipPools = new InputList<Inputs.IpPoolsArgs>());
            set => _ipPools = value;
        }

        /// <summary>
        /// Subnet mask that matches the provided IP address space.
        /// </summary>
        [Input("subnetMask")]
        public Input<string>? SubnetMask { get; set; }

        /// <summary>
        /// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
        /// </summary>
        [Input("useDhcp")]
        public Input<bool>? UseDhcp { get; set; }

        public InfrastructureNetworkArgs()
        {
        }
        public static new InfrastructureNetworkArgs Empty => new InfrastructureNetworkArgs();
    }
}
