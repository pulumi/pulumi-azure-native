// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240401.Outputs
{

    /// <summary>
    /// Properties reported by cluster agent.
    /// </summary>
    [OutputType]
    public sealed class ClusterReportedPropertiesResponse
    {
        /// <summary>
        /// Unique id generated by the on-prem cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// Name of the on-prem cluster connected to this resource.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// The node type of all the nodes of the cluster.
        /// </summary>
        public readonly string ClusterType;
        /// <summary>
        /// Version of the cluster software.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// Level of diagnostic data emitted by the cluster.
        /// </summary>
        public readonly string? DiagnosticLevel;
        /// <summary>
        /// IMDS attestation status of the cluster.
        /// </summary>
        public readonly string ImdsAttestation;
        /// <summary>
        /// Last time the cluster reported the data.
        /// </summary>
        public readonly string LastUpdated;
        /// <summary>
        /// The manufacturer of all the nodes of the cluster.
        /// </summary>
        public readonly string Manufacturer;
        /// <summary>
        /// List of nodes reported by the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterNodeResponse> Nodes;
        /// <summary>
        /// OEM activation status of the cluster.
        /// </summary>
        public readonly string OemActivation;
        /// <summary>
        /// Capabilities supported by the cluster.
        /// </summary>
        public readonly ImmutableArray<string> SupportedCapabilities;

        [OutputConstructor]
        private ClusterReportedPropertiesResponse(
            string clusterId,

            string clusterName,

            string clusterType,

            string clusterVersion,

            string? diagnosticLevel,

            string imdsAttestation,

            string lastUpdated,

            string manufacturer,

            ImmutableArray<Outputs.ClusterNodeResponse> nodes,

            string oemActivation,

            ImmutableArray<string> supportedCapabilities)
        {
            ClusterId = clusterId;
            ClusterName = clusterName;
            ClusterType = clusterType;
            ClusterVersion = clusterVersion;
            DiagnosticLevel = diagnosticLevel;
            ImdsAttestation = imdsAttestation;
            LastUpdated = lastUpdated;
            Manufacturer = manufacturer;
            Nodes = nodes;
            OemActivation = oemActivation;
            SupportedCapabilities = supportedCapabilities;
        }
    }
}
