// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240401
{
    public static class GetHciEdgeDevice
    {
        /// <summary>
        /// Get a EdgeDevice
        /// </summary>
        public static Task<GetHciEdgeDeviceResult> InvokeAsync(GetHciEdgeDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHciEdgeDeviceResult>("azure-native:azurestackhci/v20240401:getHciEdgeDevice", args ?? new GetHciEdgeDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a EdgeDevice
        /// </summary>
        public static Output<GetHciEdgeDeviceResult> Invoke(GetHciEdgeDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHciEdgeDeviceResult>("azure-native:azurestackhci/v20240401:getHciEdgeDevice", args ?? new GetHciEdgeDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHciEdgeDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Device
        /// </summary>
        [Input("edgeDeviceName", required: true)]
        public string EdgeDeviceName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetHciEdgeDeviceArgs()
        {
        }
        public static new GetHciEdgeDeviceArgs Empty => new GetHciEdgeDeviceArgs();
    }

    public sealed class GetHciEdgeDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Device
        /// </summary>
        [Input("edgeDeviceName", required: true)]
        public Input<string> EdgeDeviceName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetHciEdgeDeviceInvokeArgs()
        {
        }
        public static new GetHciEdgeDeviceInvokeArgs Empty => new GetHciEdgeDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetHciEdgeDeviceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Edge device kind.
        /// Expected value is 'HCI'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// properties for Arc-enabled edge device with HCI OS.
        /// </summary>
        public readonly Outputs.HciEdgeDevicePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHciEdgeDeviceResult(
            string id,

            string kind,

            string name,

            Outputs.HciEdgeDevicePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
