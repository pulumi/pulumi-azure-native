// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240401
{
    public static class GetUpdateRun
    {
        /// <summary>
        /// Get the Update run for a specified update
        /// </summary>
        public static Task<GetUpdateRunResult> InvokeAsync(GetUpdateRunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUpdateRunResult>("azure-native:azurestackhci/v20240401:getUpdateRun", args ?? new GetUpdateRunArgs(), options.WithDefaults());

        /// <summary>
        /// Get the Update run for a specified update
        /// </summary>
        public static Output<GetUpdateRunResult> Invoke(GetUpdateRunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUpdateRunResult>("azure-native:azurestackhci/v20240401:getUpdateRun", args ?? new GetUpdateRunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUpdateRunArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Update
        /// </summary>
        [Input("updateName", required: true)]
        public string UpdateName { get; set; } = null!;

        /// <summary>
        /// The name of the Update Run
        /// </summary>
        [Input("updateRunName", required: true)]
        public string UpdateRunName { get; set; } = null!;

        public GetUpdateRunArgs()
        {
        }
        public static new GetUpdateRunArgs Empty => new GetUpdateRunArgs();
    }

    public sealed class GetUpdateRunInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Update
        /// </summary>
        [Input("updateName", required: true)]
        public Input<string> UpdateName { get; set; } = null!;

        /// <summary>
        /// The name of the Update Run
        /// </summary>
        [Input("updateRunName", required: true)]
        public Input<string> UpdateRunName { get; set; } = null!;

        public GetUpdateRunInvokeArgs()
        {
        }
        public static new GetUpdateRunInvokeArgs Empty => new GetUpdateRunInvokeArgs();
    }


    [OutputType]
    public sealed class GetUpdateRunResult
    {
        /// <summary>
        /// More detailed description of the step.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Duration of the update run.
        /// </summary>
        public readonly string? Duration;
        /// <summary>
        /// When the step reached a terminal state.
        /// </summary>
        public readonly string? EndTimeUtc;
        /// <summary>
        /// Error message, specified if the step is in a failed state.
        /// </summary>
        public readonly string? ErrorMessage;
        /// <summary>
        /// Expected execution time of a given step. This is optionally authored in the update action plan and can be empty.
        /// </summary>
        public readonly string? ExpectedExecutionTime;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Timestamp of the most recently completed step in the update run.
        /// </summary>
        public readonly string? LastUpdatedTime;
        /// <summary>
        /// Completion time of this step or the last completed sub-step.
        /// </summary>
        public readonly string? LastUpdatedTimeUtc;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the UpdateRuns proxy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// When the step started, or empty if it has not started executing.
        /// </summary>
        public readonly string? StartTimeUtc;
        /// <summary>
        /// State of the update run.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Recursive model for child steps of this step.
        /// </summary>
        public readonly ImmutableArray<Outputs.StepResponse> Steps;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Timestamp of the update run was started.
        /// </summary>
        public readonly string? TimeStarted;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetUpdateRunResult(
            string? description,

            string? duration,

            string? endTimeUtc,

            string? errorMessage,

            string? expectedExecutionTime,

            string id,

            string? lastUpdatedTime,

            string? lastUpdatedTimeUtc,

            string? location,

            string name,

            string provisioningState,

            string? startTimeUtc,

            string? state,

            string? status,

            ImmutableArray<Outputs.StepResponse> steps,

            Outputs.SystemDataResponse systemData,

            string? timeStarted,

            string type)
        {
            Description = description;
            Duration = duration;
            EndTimeUtc = endTimeUtc;
            ErrorMessage = errorMessage;
            ExpectedExecutionTime = expectedExecutionTime;
            Id = id;
            LastUpdatedTime = lastUpdatedTime;
            LastUpdatedTimeUtc = lastUpdatedTimeUtc;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            StartTimeUtc = startTimeUtc;
            State = state;
            Status = status;
            Steps = steps;
            SystemData = systemData;
            TimeStarted = timeStarted;
            Type = type;
        }
    }
}
