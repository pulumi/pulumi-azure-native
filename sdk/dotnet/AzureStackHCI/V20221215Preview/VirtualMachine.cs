// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20221215Preview
{
    /// <summary>
    /// The virtual machine resource definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:azurestackhci/v20221215preview:VirtualMachine")]
    public partial class VirtualMachine : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// Guest agent status properties.
        /// </summary>
        [Output("guestAgentProfile")]
        public Output<Outputs.GuestAgentProfileResponse?> GuestAgentProfile { get; private set; } = null!;

        /// <summary>
        /// HardwareProfile - Specifies the hardware settings for the virtual machine.
        /// </summary>
        [Output("hardwareProfile")]
        public Output<Outputs.VirtualMachinePropertiesResponseHardwareProfile?> HardwareProfile { get; private set; } = null!;

        /// <summary>
        /// Identity for the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// NetworkProfile - describes the network configuration the virtual machine
        /// </summary>
        [Output("networkProfile")]
        public Output<Outputs.VirtualMachinePropertiesResponseNetworkProfile?> NetworkProfile { get; private set; } = null!;

        /// <summary>
        /// OsProfile - describes the configuration of the operating system and sets login data
        /// </summary>
        [Output("osProfile")]
        public Output<Outputs.VirtualMachinePropertiesResponseOsProfile?> OsProfile { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the virtual machine.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// SecurityProfile - Specifies the security settings for the virtual machine.
        /// </summary>
        [Output("securityProfile")]
        public Output<Outputs.VirtualMachinePropertiesResponseSecurityProfile?> SecurityProfile { get; private set; } = null!;

        /// <summary>
        /// The observed state of virtual machines
        /// </summary>
        [Output("status")]
        public Output<Outputs.VirtualMachineStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// StorageProfile - contains information about the disks and storage information for the virtual machine
        /// </summary>
        [Output("storageProfile")]
        public Output<Outputs.VirtualMachinePropertiesResponseStorageProfile?> StorageProfile { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the vm resource.
        /// </summary>
        [Output("vmId")]
        public Output<string> VmId { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachine(string name, VirtualMachineArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20221215preview:VirtualMachine", name, args ?? new VirtualMachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20221215preview:VirtualMachine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci:VirtualMachine" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210701preview:VirtualMachine" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210901preview:VirtualMachine" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualMachine(name, id, options);
        }
    }

    public sealed class VirtualMachineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// HardwareProfile - Specifies the hardware settings for the virtual machine.
        /// </summary>
        [Input("hardwareProfile")]
        public Input<Inputs.VirtualMachinePropertiesHardwareProfileArgs>? HardwareProfile { get; set; }

        /// <summary>
        /// Identity for the resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// NetworkProfile - describes the network configuration the virtual machine
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.VirtualMachinePropertiesNetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// OsProfile - describes the configuration of the operating system and sets login data
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.VirtualMachinePropertiesOsProfileArgs>? OsProfile { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SecurityProfile - Specifies the security settings for the virtual machine.
        /// </summary>
        [Input("securityProfile")]
        public Input<Inputs.VirtualMachinePropertiesSecurityProfileArgs>? SecurityProfile { get; set; }

        /// <summary>
        /// StorageProfile - contains information about the disks and storage information for the virtual machine
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.VirtualMachinePropertiesStorageProfileArgs>? StorageProfile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Name of the virtual machine
        /// </summary>
        [Input("virtualMachineName")]
        public Input<string>? VirtualMachineName { get; set; }

        public VirtualMachineArgs()
        {
        }
        public static new VirtualMachineArgs Empty => new VirtualMachineArgs();
    }
}
