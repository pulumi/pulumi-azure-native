// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210901Preview
{
    /// <summary>
    /// The storage container resource definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:azurestackhci/v20210901preview:StoragecontainerRetrieve")]
    public partial class StoragecontainerRetrieve : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amount of space available on the disk in MB
        /// </summary>
        [Output("availableSizeMB")]
        public Output<double> AvailableSizeMB { get; private set; } = null!;

        /// <summary>
        /// Total size of the disk in MB
        /// </summary>
        [Output("containerSizeMB")]
        public Output<double> ContainerSizeMB { get; private set; } = null!;

        [Output("extendedLocation")]
        public Output<Outputs.StoragecontainersResponseExtendedLocation?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Path of the storage container on the disk
        /// </summary>
        [Output("path")]
        public Output<string?> Path { get; private set; } = null!;

        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// name of the object to be used in moc
        /// </summary>
        [Output("resourceName")]
        public Output<string?> ResourceName { get; private set; } = null!;

        /// <summary>
        /// storageContainerStatus defines the observed state of storagecontainers
        /// </summary>
        [Output("status")]
        public Output<Outputs.StorageContainerStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource Type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a StoragecontainerRetrieve resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StoragecontainerRetrieve(string name, StoragecontainerRetrieveArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20210901preview:StoragecontainerRetrieve", name, args ?? new StoragecontainerRetrieveArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StoragecontainerRetrieve(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20210901preview:StoragecontainerRetrieve", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210901preview:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20221215preview:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20221215preview:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230701preview:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230701preview:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230901preview:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230901preview:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240101:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240101:storagecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240201preview:StoragecontainerRetrieve" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240201preview:storagecontainerRetrieve" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StoragecontainerRetrieve resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StoragecontainerRetrieve Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StoragecontainerRetrieve(name, id, options);
        }
    }

    public sealed class StoragecontainerRetrieveArgs : global::Pulumi.ResourceArgs
    {
        [Input("extendedLocation")]
        public Input<Inputs.StoragecontainersExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// The resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Path of the storage container on the disk
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// name of the object to be used in moc
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        [Input("storagecontainersName")]
        public Input<string>? StoragecontainersName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public StoragecontainerRetrieveArgs()
        {
        }
        public static new StoragecontainerRetrieveArgs Empty => new StoragecontainerRetrieveArgs();
    }
}
