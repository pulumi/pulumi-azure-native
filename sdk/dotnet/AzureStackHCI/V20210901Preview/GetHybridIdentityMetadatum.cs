// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210901Preview
{
    public static class GetHybridIdentityMetadatum
    {
        /// <summary>
        /// Implements HybridIdentityMetadata GET method.
        /// </summary>
        public static Task<GetHybridIdentityMetadatumResult> InvokeAsync(GetHybridIdentityMetadatumArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHybridIdentityMetadatumResult>("azure-native:azurestackhci/v20210901preview:getHybridIdentityMetadatum", args ?? new GetHybridIdentityMetadatumArgs(), options.WithDefaults());

        /// <summary>
        /// Implements HybridIdentityMetadata GET method.
        /// </summary>
        public static Output<GetHybridIdentityMetadatumResult> Invoke(GetHybridIdentityMetadatumInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHybridIdentityMetadatumResult>("azure-native:azurestackhci/v20210901preview:getHybridIdentityMetadatum", args ?? new GetHybridIdentityMetadatumInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHybridIdentityMetadatumArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the HybridIdentityMetadata.
        /// </summary>
        [Input("metadataName", required: true)]
        public string MetadataName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vm.
        /// </summary>
        [Input("virtualMachineName", required: true)]
        public string VirtualMachineName { get; set; } = null!;

        public GetHybridIdentityMetadatumArgs()
        {
        }
        public static new GetHybridIdentityMetadatumArgs Empty => new GetHybridIdentityMetadatumArgs();
    }

    public sealed class GetHybridIdentityMetadatumInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the HybridIdentityMetadata.
        /// </summary>
        [Input("metadataName", required: true)]
        public Input<string> MetadataName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vm.
        /// </summary>
        [Input("virtualMachineName", required: true)]
        public Input<string> VirtualMachineName { get; set; } = null!;

        public GetHybridIdentityMetadatumInvokeArgs()
        {
        }
        public static new GetHybridIdentityMetadatumInvokeArgs Empty => new GetHybridIdentityMetadatumInvokeArgs();
    }


    [OutputType]
    public sealed class GetHybridIdentityMetadatumResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity for the resource.
        /// </summary>
        public readonly Outputs.IdentityResponse Identity;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The Public Key.
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// The unique identifier for the resource.
        /// </summary>
        public readonly string? ResourceUid;
        /// <summary>
        /// The system data.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHybridIdentityMetadatumResult(
            string id,

            Outputs.IdentityResponse identity,

            string name,

            string provisioningState,

            string? publicKey,

            string? resourceUid,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Identity = identity;
            Name = name;
            ProvisioningState = provisioningState;
            PublicKey = publicKey;
            ResourceUid = resourceUid;
            SystemData = systemData;
            Type = type;
        }
    }
}
