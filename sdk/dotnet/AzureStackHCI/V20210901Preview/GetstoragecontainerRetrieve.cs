// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210901Preview
{
    public static class GetStoragecontainerRetrieve
    {
        /// <summary>
        /// Gets storagecontainers by resource name
        /// </summary>
        public static Task<GetStoragecontainerRetrieveResult> InvokeAsync(GetStoragecontainerRetrieveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStoragecontainerRetrieveResult>("azure-native:azurestackhci/v20210901preview:getStoragecontainerRetrieve", args ?? new GetStoragecontainerRetrieveArgs(), options.WithDefaults());

        /// <summary>
        /// Gets storagecontainers by resource name
        /// </summary>
        public static Output<GetStoragecontainerRetrieveResult> Invoke(GetStoragecontainerRetrieveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStoragecontainerRetrieveResult>("azure-native:azurestackhci/v20210901preview:getStoragecontainerRetrieve", args ?? new GetStoragecontainerRetrieveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStoragecontainerRetrieveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("storagecontainersName", required: true)]
        public string StoragecontainersName { get; set; } = null!;

        public GetStoragecontainerRetrieveArgs()
        {
        }
        public static new GetStoragecontainerRetrieveArgs Empty => new GetStoragecontainerRetrieveArgs();
    }

    public sealed class GetStoragecontainerRetrieveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("storagecontainersName", required: true)]
        public Input<string> StoragecontainersName { get; set; } = null!;

        public GetStoragecontainerRetrieveInvokeArgs()
        {
        }
        public static new GetStoragecontainerRetrieveInvokeArgs Empty => new GetStoragecontainerRetrieveInvokeArgs();
    }


    [OutputType]
    public sealed class GetStoragecontainerRetrieveResult
    {
        /// <summary>
        /// Amount of space available on the disk in MB
        /// </summary>
        public readonly double AvailableSizeMB;
        /// <summary>
        /// Total size of the disk in MB
        /// </summary>
        public readonly double ContainerSizeMB;
        public readonly Outputs.StoragecontainersResponseExtendedLocation? ExtendedLocation;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Path of the storage container on the disk
        /// </summary>
        public readonly string? Path;
        public readonly string? ProvisioningState;
        /// <summary>
        /// name of the object to be used in moc
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// storageContainerStatus defines the observed state of storagecontainers
        /// </summary>
        public readonly Outputs.StorageContainerStatusResponse Status;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource Type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStoragecontainerRetrieveResult(
            double availableSizeMB,

            double containerSizeMB,

            Outputs.StoragecontainersResponseExtendedLocation? extendedLocation,

            string id,

            string location,

            string name,

            string? path,

            string? provisioningState,

            string? resourceName,

            Outputs.StorageContainerStatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AvailableSizeMB = availableSizeMB;
            ContainerSizeMB = containerSizeMB;
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            Path = path;
            ProvisioningState = provisioningState;
            ResourceName = resourceName;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
