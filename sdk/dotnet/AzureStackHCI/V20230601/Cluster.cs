// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20230601
{
    /// <summary>
    /// Cluster details.
    /// </summary>
    [AzureNativeResourceType("azure-native:azurestackhci/v20230601:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Object id of cluster AAD identity.
        /// </summary>
        [Output("aadApplicationObjectId")]
        public Output<string?> AadApplicationObjectId { get; private set; } = null!;

        /// <summary>
        /// App id of cluster AAD identity.
        /// </summary>
        [Output("aadClientId")]
        public Output<string?> AadClientId { get; private set; } = null!;

        /// <summary>
        /// Id of cluster identity service principal.
        /// </summary>
        [Output("aadServicePrincipalObjectId")]
        public Output<string?> AadServicePrincipalObjectId { get; private set; } = null!;

        /// <summary>
        /// Tenant id of cluster AAD identity.
        /// </summary>
        [Output("aadTenantId")]
        public Output<string?> AadTenantId { get; private set; } = null!;

        /// <summary>
        /// Type of billing applied to the resource.
        /// </summary>
        [Output("billingModel")]
        public Output<string> BillingModel { get; private set; } = null!;

        /// <summary>
        /// Unique, immutable resource id.
        /// </summary>
        [Output("cloudId")]
        public Output<string> CloudId { get; private set; } = null!;

        /// <summary>
        /// Endpoint configured for management from the Azure portal.
        /// </summary>
        [Output("cloudManagementEndpoint")]
        public Output<string?> CloudManagementEndpoint { get; private set; } = null!;

        /// <summary>
        /// Desired properties of the cluster.
        /// </summary>
        [Output("desiredProperties")]
        public Output<Outputs.ClusterDesiredPropertiesResponse?> DesiredProperties { get; private set; } = null!;

        /// <summary>
        /// Most recent billing meter timestamp.
        /// </summary>
        [Output("lastBillingTimestamp")]
        public Output<string> LastBillingTimestamp { get; private set; } = null!;

        /// <summary>
        /// Most recent cluster sync timestamp.
        /// </summary>
        [Output("lastSyncTimestamp")]
        public Output<string> LastSyncTimestamp { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// Provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// First cluster sync timestamp.
        /// </summary>
        [Output("registrationTimestamp")]
        public Output<string> RegistrationTimestamp { get; private set; } = null!;

        /// <summary>
        /// Properties reported by cluster agent.
        /// </summary>
        [Output("reportedProperties")]
        public Output<Outputs.ClusterReportedPropertiesResponse> ReportedProperties { get; private set; } = null!;

        /// <summary>
        /// Object id of RP Service Principal
        /// </summary>
        [Output("resourceProviderObjectId")]
        public Output<string> ResourceProviderObjectId { get; private set; } = null!;

        /// <summary>
        /// Region specific DataPath Endpoint of the cluster.
        /// </summary>
        [Output("serviceEndpoint")]
        public Output<string> ServiceEndpoint { get; private set; } = null!;

        /// <summary>
        /// Software Assurance properties of the cluster.
        /// </summary>
        [Output("softwareAssuranceProperties")]
        public Output<Outputs.SoftwareAssurancePropertiesResponse?> SoftwareAssuranceProperties { get; private set; } = null!;

        /// <summary>
        /// Status of the cluster agent.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// Number of days remaining in the trial period.
        /// </summary>
        [Output("trialDaysRemaining")]
        public Output<double> TrialDaysRemaining { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Output("userAssignedIdentities")]
        public Output<ImmutableDictionary<string, Outputs.UserAssignedIdentityResponse>?> UserAssignedIdentities { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20230601:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20230601:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20200301preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20201001:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210101preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210901:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20210901preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20220101:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20220301:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20220501:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20220901:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20221001:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20221201:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20221215preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230201:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230301:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230801:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230801preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20231101preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240101:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240215preview:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240401:Cluster" },
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20240901preview:Cluster" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Object id of cluster AAD identity.
        /// </summary>
        [Input("aadApplicationObjectId")]
        public Input<string>? AadApplicationObjectId { get; set; }

        /// <summary>
        /// App id of cluster AAD identity.
        /// </summary>
        [Input("aadClientId")]
        public Input<string>? AadClientId { get; set; }

        /// <summary>
        /// Id of cluster identity service principal.
        /// </summary>
        [Input("aadServicePrincipalObjectId")]
        public Input<string>? AadServicePrincipalObjectId { get; set; }

        /// <summary>
        /// Tenant id of cluster AAD identity.
        /// </summary>
        [Input("aadTenantId")]
        public Input<string>? AadTenantId { get; set; }

        /// <summary>
        /// Endpoint configured for management from the Azure portal.
        /// </summary>
        [Input("cloudManagementEndpoint")]
        public Input<string>? CloudManagementEndpoint { get; set; }

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Desired properties of the cluster.
        /// </summary>
        [Input("desiredProperties")]
        public Input<Inputs.ClusterDesiredPropertiesArgs>? DesiredProperties { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Software Assurance properties of the cluster.
        /// </summary>
        [Input("softwareAssuranceProperties")]
        public Input<Inputs.SoftwareAssurancePropertiesArgs>? SoftwareAssuranceProperties { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Input("type", required: true)]
        public InputUnion<string, Pulumi.AzureNative.AzureStackHCI.V20230601.ManagedServiceIdentityType> Type { get; set; } = null!;

        [Input("userAssignedIdentities")]
        private InputList<string>? _userAssignedIdentities;

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        public InputList<string> UserAssignedIdentities
        {
            get => _userAssignedIdentities ?? (_userAssignedIdentities = new InputList<string>());
            set => _userAssignedIdentities = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
