// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240101
{
    public static class GetGuestAgent
    {
        /// <summary>
        /// Implements GuestAgent GET method.
        /// </summary>
        public static Task<GetGuestAgentResult> InvokeAsync(GetGuestAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGuestAgentResult>("azure-native:azurestackhci/v20240101:getGuestAgent", args ?? new GetGuestAgentArgs(), options.WithDefaults());

        /// <summary>
        /// Implements GuestAgent GET method.
        /// </summary>
        public static Output<GetGuestAgentResult> Invoke(GetGuestAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGuestAgentResult>("azure-native:azurestackhci/v20240101:getGuestAgent", args ?? new GetGuestAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGuestAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetGuestAgentArgs()
        {
        }
        public static new GetGuestAgentArgs Empty => new GetGuestAgentArgs();
    }

    public sealed class GetGuestAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetGuestAgentInvokeArgs()
        {
        }
        public static new GetGuestAgentInvokeArgs Empty => new GetGuestAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetGuestAgentResult
    {
        /// <summary>
        /// Username / Password Credentials to provision guest agent.
        /// </summary>
        public readonly Outputs.GuestCredentialResponse? Credentials;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The guest agent provisioning action.
        /// </summary>
        public readonly string? ProvisioningAction;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The guest agent status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGuestAgentResult(
            Outputs.GuestCredentialResponse? credentials,

            string id,

            string name,

            string? provisioningAction,

            string provisioningState,

            string status,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Credentials = credentials;
            Id = id;
            Name = name;
            ProvisioningAction = provisioningAction;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Type = type;
        }
    }
}
