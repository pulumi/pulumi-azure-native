// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.Outputs
{

    /// <summary>
    /// The HostNetwork of a cluster.
    /// </summary>
    [OutputType]
    public sealed class HostNetworkResponse
    {
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        public readonly bool? EnableStorageAutoIp;
        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        public readonly ImmutableArray<Outputs.IntentsResponse> Intents;
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less..
        /// </summary>
        public readonly bool? StorageConnectivitySwitchless;
        /// <summary>
        /// List of StorageNetworks config to deploy AzureStackHCI Cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.StorageNetworksResponse> StorageNetworks;

        [OutputConstructor]
        private HostNetworkResponse(
            bool? enableStorageAutoIp,

            ImmutableArray<Outputs.IntentsResponse> intents,

            bool? storageConnectivitySwitchless,

            ImmutableArray<Outputs.StorageNetworksResponse> storageNetworks)
        {
            EnableStorageAutoIp = enableStorageAutoIp;
            Intents = intents;
            StorageConnectivitySwitchless = storageConnectivitySwitchless;
            StorageNetworks = storageNetworks;
        }
    }
}
