// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240901Preview.Inputs
{

    /// <summary>
    /// The HostNetwork of a cluster.
    /// </summary>
    public sealed class HostNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        [Input("enableStorageAutoIp")]
        public Input<bool>? EnableStorageAutoIp { get; set; }

        [Input("intents")]
        private InputList<Inputs.IntentsArgs>? _intents;

        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        public InputList<Inputs.IntentsArgs> Intents
        {
            get => _intents ?? (_intents = new InputList<Inputs.IntentsArgs>());
            set => _intents = value;
        }

        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less..
        /// </summary>
        [Input("storageConnectivitySwitchless")]
        public Input<bool>? StorageConnectivitySwitchless { get; set; }

        [Input("storageNetworks")]
        private InputList<Inputs.StorageNetworksArgs>? _storageNetworks;

        /// <summary>
        /// List of StorageNetworks config to deploy AzureStackHCI Cluster.
        /// </summary>
        public InputList<Inputs.StorageNetworksArgs> StorageNetworks
        {
            get => _storageNetworks ?? (_storageNetworks = new InputList<Inputs.StorageNetworksArgs>());
            set => _storageNetworks = value;
        }

        public HostNetworkArgs()
        {
            EnableStorageAutoIp = false;
            StorageConnectivitySwitchless = false;
        }
        public static new HostNetworkArgs Empty => new HostNetworkArgs();
    }
}
