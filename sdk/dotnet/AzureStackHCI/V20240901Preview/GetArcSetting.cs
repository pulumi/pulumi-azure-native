// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240901Preview
{
    public static class GetArcSetting
    {
        /// <summary>
        /// Get ArcSetting resource details of HCI Cluster.
        /// </summary>
        public static Task<GetArcSettingResult> InvokeAsync(GetArcSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetArcSettingResult>("azure-native:azurestackhci/v20240901preview:getArcSetting", args ?? new GetArcSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Get ArcSetting resource details of HCI Cluster.
        /// </summary>
        public static Output<GetArcSettingResult> Invoke(GetArcSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetArcSettingResult>("azure-native:azurestackhci/v20240901preview:getArcSetting", args ?? new GetArcSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArcSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public string ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArcSettingArgs()
        {
        }
        public static new GetArcSettingArgs Empty => new GetArcSettingArgs();
    }

    public sealed class GetArcSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public Input<string> ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetArcSettingInvokeArgs()
        {
        }
        public static new GetArcSettingInvokeArgs Empty => new GetArcSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetArcSettingResult
    {
        /// <summary>
        /// Aggregate state of Arc agent across the nodes in this HCI cluster.
        /// </summary>
        public readonly string AggregateState;
        /// <summary>
        /// App id of arc AAD identity.
        /// </summary>
        public readonly string? ArcApplicationClientId;
        /// <summary>
        /// Object id of arc AAD identity.
        /// </summary>
        public readonly string? ArcApplicationObjectId;
        /// <summary>
        /// Tenant id of arc AAD identity.
        /// </summary>
        public readonly string? ArcApplicationTenantId;
        /// <summary>
        /// The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.
        /// </summary>
        public readonly string? ArcInstanceResourceGroup;
        /// <summary>
        /// Object id of arc AAD service principal.
        /// </summary>
        public readonly string? ArcServicePrincipalObjectId;
        /// <summary>
        /// contains connectivity related configuration for ARC resources
        /// </summary>
        public readonly ImmutableArray<Outputs.ArcConnectivityPropertiesResponse> ConnectivityProperties;
        /// <summary>
        /// Properties for each of the default extensions category
        /// </summary>
        public readonly ImmutableArray<Outputs.DefaultExtensionDetailsResponse> DefaultExtensions;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of Arc agent in each of the nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.PerNodeStateResponse> PerNodeDetails;
        /// <summary>
        /// Provisioning state of the ArcSetting proxy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetArcSettingResult(
            string aggregateState,

            string? arcApplicationClientId,

            string? arcApplicationObjectId,

            string? arcApplicationTenantId,

            string? arcInstanceResourceGroup,

            string? arcServicePrincipalObjectId,

            ImmutableArray<Outputs.ArcConnectivityPropertiesResponse> connectivityProperties,

            ImmutableArray<Outputs.DefaultExtensionDetailsResponse> defaultExtensions,

            string id,

            string name,

            ImmutableArray<Outputs.PerNodeStateResponse> perNodeDetails,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AggregateState = aggregateState;
            ArcApplicationClientId = arcApplicationClientId;
            ArcApplicationObjectId = arcApplicationObjectId;
            ArcApplicationTenantId = arcApplicationTenantId;
            ArcInstanceResourceGroup = arcInstanceResourceGroup;
            ArcServicePrincipalObjectId = arcServicePrincipalObjectId;
            ConnectivityProperties = connectivityProperties;
            DefaultExtensions = defaultExtensions;
            Id = id;
            Name = name;
            PerNodeDetails = perNodeDetails;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
