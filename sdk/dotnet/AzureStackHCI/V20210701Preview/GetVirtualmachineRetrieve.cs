// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210701Preview
{
    public static class GetVirtualmachineRetrieve
    {
        /// <summary>
        /// The virtualmachines resource definition.
        /// </summary>
        public static Task<GetVirtualmachineRetrieveResult> InvokeAsync(GetVirtualmachineRetrieveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualmachineRetrieveResult>("azure-native:azurestackhci/v20210701preview:getVirtualmachineRetrieve", args ?? new GetVirtualmachineRetrieveArgs(), options.WithDefaults());

        /// <summary>
        /// The virtualmachines resource definition.
        /// </summary>
        public static Output<GetVirtualmachineRetrieveResult> Invoke(GetVirtualmachineRetrieveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualmachineRetrieveResult>("azure-native:azurestackhci/v20210701preview:getVirtualmachineRetrieve", args ?? new GetVirtualmachineRetrieveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualmachineRetrieveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("virtualmachinesName", required: true)]
        public string VirtualmachinesName { get; set; } = null!;

        public GetVirtualmachineRetrieveArgs()
        {
        }
        public static new GetVirtualmachineRetrieveArgs Empty => new GetVirtualmachineRetrieveArgs();
    }

    public sealed class GetVirtualmachineRetrieveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("virtualmachinesName", required: true)]
        public Input<string> VirtualmachinesName { get; set; } = null!;

        public GetVirtualmachineRetrieveInvokeArgs()
        {
        }
        public static new GetVirtualmachineRetrieveInvokeArgs Empty => new GetVirtualmachineRetrieveInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualmachineRetrieveResult
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// HardwareProfile - Specifies the hardware settings for the virtual machine.
        /// </summary>
        public readonly Outputs.VirtualmachinesPropertiesResponseHardwareProfile? HardwareProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// NetworkProfile - describes the network configuration the virtual machine
        /// </summary>
        public readonly Outputs.VirtualmachinesPropertiesResponseNetworkProfile? NetworkProfile;
        /// <summary>
        /// OsProfile - describes the configuration of the operating system and sets login data
        /// </summary>
        public readonly Outputs.VirtualmachinesPropertiesResponseOsProfile? OsProfile;
        public readonly string ProvisioningState;
        /// <summary>
        /// name of the object to be used in moc
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// SecurityProfile - Specifies the security settings for the virtual machine.
        /// </summary>
        public readonly Outputs.VirtualmachinesPropertiesResponseSecurityProfile? SecurityProfile;
        /// <summary>
        /// VirtualMachineStatus defines the observed state of VirtualMachine
        /// </summary>
        public readonly Outputs.VirtualMachineStatusResponse Status;
        /// <summary>
        /// StorageProfile - contains information about the disks and storage information for the virtual machine
        /// </summary>
        public readonly Outputs.VirtualmachinesPropertiesResponseStorageProfile? StorageProfile;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVirtualmachineRetrieveResult(
            Outputs.ExtendedLocationResponse? extendedLocation,

            Outputs.VirtualmachinesPropertiesResponseHardwareProfile? hardwareProfile,

            string id,

            string location,

            string name,

            Outputs.VirtualmachinesPropertiesResponseNetworkProfile? networkProfile,

            Outputs.VirtualmachinesPropertiesResponseOsProfile? osProfile,

            string provisioningState,

            string? resourceName,

            Outputs.VirtualmachinesPropertiesResponseSecurityProfile? securityProfile,

            Outputs.VirtualMachineStatusResponse status,

            Outputs.VirtualmachinesPropertiesResponseStorageProfile? storageProfile,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            HardwareProfile = hardwareProfile;
            Id = id;
            Location = location;
            Name = name;
            NetworkProfile = networkProfile;
            OsProfile = osProfile;
            ProvisioningState = provisioningState;
            ResourceName = resourceName;
            SecurityProfile = securityProfile;
            Status = status;
            StorageProfile = storageProfile;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
