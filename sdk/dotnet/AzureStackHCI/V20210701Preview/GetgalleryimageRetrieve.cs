// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210701Preview
{
    public static class GetgalleryimageRetrieve
    {
        /// <summary>
        /// Lists all galleryimages under the resource group.
        /// </summary>
        public static Task<GetgalleryimageRetrieveResult> InvokeAsync(GetgalleryimageRetrieveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetgalleryimageRetrieveResult>("azure-native:azurestackhci/v20210701preview:getgalleryimageRetrieve", args ?? new GetgalleryimageRetrieveArgs(), options.WithDefaults());

        /// <summary>
        /// Lists all galleryimages under the resource group.
        /// </summary>
        public static Output<GetgalleryimageRetrieveResult> Invoke(GetgalleryimageRetrieveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetgalleryimageRetrieveResult>("azure-native:azurestackhci/v20210701preview:getgalleryimageRetrieve", args ?? new GetgalleryimageRetrieveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetgalleryimageRetrieveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the gallery image
        /// </summary>
        [Input("galleryimagesName", required: true)]
        public string GalleryimagesName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetgalleryimageRetrieveArgs()
        {
        }
        public static new GetgalleryimageRetrieveArgs Empty => new GetgalleryimageRetrieveArgs();
    }

    public sealed class GetgalleryimageRetrieveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the gallery image
        /// </summary>
        [Input("galleryimagesName", required: true)]
        public Input<string> GalleryimagesName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetgalleryimageRetrieveInvokeArgs()
        {
        }
        public static new GetgalleryimageRetrieveInvokeArgs Empty => new GetgalleryimageRetrieveInvokeArgs();
    }


    [OutputType]
    public sealed class GetgalleryimageRetrieveResult
    {
        /// <summary>
        /// Container Name for storage container
        /// </summary>
        public readonly string? ContainerName;
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// location of the image the gallery image should be created from
        /// </summary>
        public readonly string? ImagePath;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// operating system type that the gallery image uses. Expected to be linux or windows
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// Provisioning state of the gallery image.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// name of the object to be used in moc
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// GalleryImageStatus defines the observed state of MOCGalleryImage
        /// </summary>
        public readonly Outputs.GalleryImageStatusResponse Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetgalleryimageRetrieveResult(
            string? containerName,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string? imagePath,

            string location,

            string name,

            string? osType,

            string provisioningState,

            string? resourceName,

            Outputs.GalleryImageStatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ContainerName = containerName;
            ExtendedLocation = extendedLocation;
            Id = id;
            ImagePath = imagePath;
            Location = location;
            Name = name;
            OsType = osType;
            ProvisioningState = provisioningState;
            ResourceName = resourceName;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
