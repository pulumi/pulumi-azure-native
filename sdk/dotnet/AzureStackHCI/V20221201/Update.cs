// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20221201
{
    /// <summary>
    /// Update details
    /// </summary>
    [AzureNativeResourceType("azure-native:azurestackhci/v20221201:Update")]
    public partial class Update : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.
        /// </summary>
        [Output("additionalProperties")]
        public Output<string?> AdditionalProperties { get; private set; } = null!;

        /// <summary>
        /// Indicates the way the update content can be downloaded.
        /// </summary>
        [Output("availabilityType")]
        public Output<string?> AvailabilityType { get; private set; } = null!;

        /// <summary>
        /// Description of the update.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Display name of the Update
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Last time the package-specific checks were run.
        /// </summary>
        [Output("healthCheckDate")]
        public Output<string?> HealthCheckDate { get; private set; } = null!;

        /// <summary>
        /// Date that the update was installed.
        /// </summary>
        [Output("installedDate")]
        public Output<string?> InstalledDate { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Brief message with instructions for updates of AvailabilityType Notify.
        /// </summary>
        [Output("notifyMessage")]
        public Output<string?> NotifyMessage { get; private set; } = null!;

        /// <summary>
        /// Path where the update package is available.
        /// </summary>
        [Output("packagePath")]
        public Output<string?> PackagePath { get; private set; } = null!;

        /// <summary>
        /// Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.
        /// </summary>
        [Output("packageSizeInMb")]
        public Output<double?> PackageSizeInMb { get; private set; } = null!;

        /// <summary>
        /// Customer-visible type of the update.
        /// </summary>
        [Output("packageType")]
        public Output<string?> PackageType { get; private set; } = null!;

        /// <summary>
        /// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
        /// </summary>
        [Output("prerequisites")]
        public Output<ImmutableArray<Outputs.UpdatePrerequisiteResponse>> Prerequisites { get; private set; } = null!;

        /// <summary>
        /// Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.
        /// </summary>
        [Output("progressPercentage")]
        public Output<double?> ProgressPercentage { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the Updates proxy resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Publisher of the update package.
        /// </summary>
        [Output("publisher")]
        public Output<string?> Publisher { get; private set; } = null!;

        /// <summary>
        /// Link to release notes for the update.
        /// </summary>
        [Output("releaseLink")]
        public Output<string?> ReleaseLink { get; private set; } = null!;

        /// <summary>
        /// State of the update as it relates to this stamp.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Version of the update.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Update resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Update(string name, UpdateArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20221201:Update", name, args ?? new UpdateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Update(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurestackhci/v20221201:Update", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurestackhci/v20230201:Update"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Update resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Update Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Update(name, id, options);
        }
    }

    public sealed class UpdateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.
        /// </summary>
        [Input("additionalProperties")]
        public Input<string>? AdditionalProperties { get; set; }

        /// <summary>
        /// Indicates the way the update content can be downloaded.
        /// </summary>
        [Input("availabilityType")]
        public InputUnion<string, Pulumi.AzureNative.AzureStackHCI.V20221201.AvailabilityType>? AvailabilityType { get; set; }

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Description of the update.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of the Update
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Last time the package-specific checks were run.
        /// </summary>
        [Input("healthCheckDate")]
        public Input<string>? HealthCheckDate { get; set; }

        /// <summary>
        /// Date that the update was installed.
        /// </summary>
        [Input("installedDate")]
        public Input<string>? InstalledDate { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Brief message with instructions for updates of AvailabilityType Notify.
        /// </summary>
        [Input("notifyMessage")]
        public Input<string>? NotifyMessage { get; set; }

        /// <summary>
        /// Path where the update package is available.
        /// </summary>
        [Input("packagePath")]
        public Input<string>? PackagePath { get; set; }

        /// <summary>
        /// Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.
        /// </summary>
        [Input("packageSizeInMb")]
        public Input<double>? PackageSizeInMb { get; set; }

        /// <summary>
        /// Customer-visible type of the update.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        [Input("prerequisites")]
        private InputList<Inputs.UpdatePrerequisiteArgs>? _prerequisites;

        /// <summary>
        /// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
        /// </summary>
        public InputList<Inputs.UpdatePrerequisiteArgs> Prerequisites
        {
            get => _prerequisites ?? (_prerequisites = new InputList<Inputs.UpdatePrerequisiteArgs>());
            set => _prerequisites = value;
        }

        /// <summary>
        /// Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.
        /// </summary>
        [Input("progressPercentage")]
        public Input<double>? ProgressPercentage { get; set; }

        /// <summary>
        /// Publisher of the update package.
        /// </summary>
        [Input("publisher")]
        public Input<string>? Publisher { get; set; }

        /// <summary>
        /// Link to release notes for the update.
        /// </summary>
        [Input("releaseLink")]
        public Input<string>? ReleaseLink { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// State of the update as it relates to this stamp.
        /// </summary>
        [Input("state")]
        public InputUnion<string, Pulumi.AzureNative.AzureStackHCI.V20221201.State>? State { get; set; }

        /// <summary>
        /// The name of the Update
        /// </summary>
        [Input("updateName")]
        public Input<string>? UpdateName { get; set; }

        /// <summary>
        /// Version of the update.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public UpdateArgs()
        {
        }
        public static new UpdateArgs Empty => new UpdateArgs();
    }
}
