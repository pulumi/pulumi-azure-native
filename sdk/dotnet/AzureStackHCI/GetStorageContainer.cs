// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI
{
    public static class GetStorageContainer
    {
        /// <summary>
        /// Gets a storage container
        /// Azure REST API version: 2022-12-15-preview.
        /// </summary>
        public static Task<GetStorageContainerResult> InvokeAsync(GetStorageContainerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageContainerResult>("azure-native:azurestackhci:getStorageContainer", args ?? new GetStorageContainerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a storage container
        /// Azure REST API version: 2022-12-15-preview.
        /// </summary>
        public static Output<GetStorageContainerResult> Invoke(GetStorageContainerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageContainerResult>("azure-native:azurestackhci:getStorageContainer", args ?? new GetStorageContainerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageContainerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the storage container
        /// </summary>
        [Input("storageContainerName", required: true)]
        public string StorageContainerName { get; set; } = null!;

        public GetStorageContainerArgs()
        {
        }
        public static new GetStorageContainerArgs Empty => new GetStorageContainerArgs();
    }

    public sealed class GetStorageContainerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the storage container
        /// </summary>
        [Input("storageContainerName", required: true)]
        public Input<string> StorageContainerName { get; set; } = null!;

        public GetStorageContainerInvokeArgs()
        {
        }
        public static new GetStorageContainerInvokeArgs Empty => new GetStorageContainerInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageContainerResult
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Path of the storage container on the disk
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Provisioning state of the storage container.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The observed state of storage containers
        /// </summary>
        public readonly Outputs.StorageContainerStatusResponse Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageContainerResult(
            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string location,

            string name,

            string? path,

            string provisioningState,

            Outputs.StorageContainerStatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            Path = path;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
