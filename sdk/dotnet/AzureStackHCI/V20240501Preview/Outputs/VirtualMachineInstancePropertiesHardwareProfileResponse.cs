// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20240501Preview.Outputs
{

    /// <summary>
    /// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineInstancePropertiesHardwareProfileResponse
    {
        /// <summary>
        /// Dynamic memory config
        /// </summary>
        public readonly Outputs.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse? DynamicMemoryConfig;
        /// <summary>
        /// RAM in MB for the virtual machine instance
        /// </summary>
        public readonly double? MemoryMB;
        /// <summary>
        /// number of processors for the virtual machine instance
        /// </summary>
        public readonly int? Processors;
        /// <summary>
        /// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse> VirtualMachineGPUs;
        /// <summary>
        /// Enum of VM Sizes
        /// </summary>
        public readonly string? VmSize;

        [OutputConstructor]
        private VirtualMachineInstancePropertiesHardwareProfileResponse(
            Outputs.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse? dynamicMemoryConfig,

            double? memoryMB,

            int? processors,

            ImmutableArray<Outputs.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse> virtualMachineGPUs,

            string? vmSize)
        {
            DynamicMemoryConfig = dynamicMemoryConfig;
            MemoryMB = memoryMB;
            Processors = processors;
            VirtualMachineGPUs = virtualMachineGPUs;
            VmSize = vmSize;
        }
    }
}
