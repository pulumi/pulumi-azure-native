// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI.V20210901
{
    public static class GetArcSetting
    {
        /// <summary>
        /// Get ArcSetting resource details of HCI Cluster.
        /// </summary>
        public static Task<GetArcSettingResult> InvokeAsync(GetArcSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetArcSettingResult>("azure-native:azurestackhci/v20210901:getArcSetting", args ?? new GetArcSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Get ArcSetting resource details of HCI Cluster.
        /// </summary>
        public static Output<GetArcSettingResult> Invoke(GetArcSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetArcSettingResult>("azure-native:azurestackhci/v20210901:getArcSetting", args ?? new GetArcSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArcSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public string ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArcSettingArgs()
        {
        }
        public static new GetArcSettingArgs Empty => new GetArcSettingArgs();
    }

    public sealed class GetArcSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the proxy resource holding details of HCI ArcSetting information.
        /// </summary>
        [Input("arcSettingName", required: true)]
        public Input<string> ArcSettingName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetArcSettingInvokeArgs()
        {
        }
        public static new GetArcSettingInvokeArgs Empty => new GetArcSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetArcSettingResult
    {
        /// <summary>
        /// Aggregate state of Arc agent across the nodes in this HCI cluster.
        /// </summary>
        public readonly string AggregateState;
        /// <summary>
        /// The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.
        /// </summary>
        public readonly string ArcInstanceResourceGroup;
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        public readonly string? CreatedByType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        public readonly string? LastModifiedAt;
        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedByType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of Arc agent in each of the nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.PerNodeStateResponse> PerNodeDetails;
        /// <summary>
        /// Provisioning state of the ArcSetting proxy resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetArcSettingResult(
            string aggregateState,

            string arcInstanceResourceGroup,

            string? createdAt,

            string? createdBy,

            string? createdByType,

            string id,

            string? lastModifiedAt,

            string? lastModifiedBy,

            string? lastModifiedByType,

            string name,

            ImmutableArray<Outputs.PerNodeStateResponse> perNodeDetails,

            string provisioningState,

            string type)
        {
            AggregateState = aggregateState;
            ArcInstanceResourceGroup = arcInstanceResourceGroup;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            CreatedByType = createdByType;
            Id = id;
            LastModifiedAt = lastModifiedAt;
            LastModifiedBy = lastModifiedBy;
            LastModifiedByType = lastModifiedByType;
            Name = name;
            PerNodeDetails = perNodeDetails;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
