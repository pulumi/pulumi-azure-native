// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureStackHCI
{
    public static class GetDeploymentSetting
    {
        /// <summary>
        /// Get a DeploymentSetting
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2023-11-01-preview, 2024-01-01, 2024-02-15-preview, 2024-04-01, 2024-09-01-preview.
        /// </summary>
        public static Task<GetDeploymentSettingResult> InvokeAsync(GetDeploymentSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentSettingResult>("azure-native:azurestackhci:getDeploymentSetting", args ?? new GetDeploymentSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DeploymentSetting
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2023-11-01-preview, 2024-01-01, 2024-02-15-preview, 2024-04-01, 2024-09-01-preview.
        /// </summary>
        public static Output<GetDeploymentSettingResult> Invoke(GetDeploymentSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentSettingResult>("azure-native:azurestackhci:getDeploymentSetting", args ?? new GetDeploymentSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of Deployment Setting
        /// </summary>
        [Input("deploymentSettingsName", required: true)]
        public string DeploymentSettingsName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDeploymentSettingArgs()
        {
        }
        public static new GetDeploymentSettingArgs Empty => new GetDeploymentSettingArgs();
    }

    public sealed class GetDeploymentSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of Deployment Setting
        /// </summary>
        [Input("deploymentSettingsName", required: true)]
        public Input<string> DeploymentSettingsName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDeploymentSettingInvokeArgs()
        {
        }
        public static new GetDeploymentSettingInvokeArgs Empty => new GetDeploymentSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentSettingResult
    {
        /// <summary>
        /// Azure resource ids of Arc machines to be part of cluster.
        /// </summary>
        public readonly ImmutableArray<string> ArcNodeResourceIds;
        /// <summary>
        /// Scale units will contains list of deployment data
        /// </summary>
        public readonly Outputs.DeploymentConfigurationResponse DeploymentConfiguration;
        /// <summary>
        /// The deployment mode for cluster deployment.
        /// </summary>
        public readonly string DeploymentMode;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// DeploymentSetting provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Deployment Status reported from cluster.
        /// </summary>
        public readonly Outputs.ReportedPropertiesResponse ReportedProperties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDeploymentSettingResult(
            ImmutableArray<string> arcNodeResourceIds,

            Outputs.DeploymentConfigurationResponse deploymentConfiguration,

            string deploymentMode,

            string id,

            string name,

            string provisioningState,

            Outputs.ReportedPropertiesResponse reportedProperties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ArcNodeResourceIds = arcNodeResourceIds;
            DeploymentConfiguration = deploymentConfiguration;
            DeploymentMode = deploymentMode;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ReportedProperties = reportedProperties;
            SystemData = systemData;
            Type = type;
        }
    }
}
