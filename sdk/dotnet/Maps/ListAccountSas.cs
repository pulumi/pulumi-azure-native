// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Maps
{
    public static class ListAccountSas
    {
        /// <summary>
        /// Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token. 
        /// 
        /// Prerequisites:
        /// 1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account. 
        /// 2. Create or update an Azure Map account with the same Azure region as the User Assigned Managed Identity is placed.
        /// Azure REST API version: 2021-12-01-preview.
        /// </summary>
        public static Task<ListAccountSasResult> InvokeAsync(ListAccountSasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAccountSasResult>("azure-native:maps:listAccountSas", args ?? new ListAccountSasArgs(), options.WithDefaults());

        /// <summary>
        /// Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token. 
        /// 
        /// Prerequisites:
        /// 1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account. 
        /// 2. Create or update an Azure Map account with the same Azure region as the User Assigned Managed Identity is placed.
        /// Azure REST API version: 2021-12-01-preview.
        /// </summary>
        public static Output<ListAccountSasResult> Invoke(ListAccountSasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAccountSasResult>("azure-native:maps:listAccountSas", args ?? new ListAccountSasInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAccountSasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Maps Account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z"
        /// </summary>
        [Input("expiry", required: true)]
        public string Expiry { get; set; } = null!;

        /// <summary>
        /// Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        /// </summary>
        [Input("maxRatePerSecond", required: true)]
        public int MaxRatePerSecond { get; set; }

        /// <summary>
        /// The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id.
        /// </summary>
        [Input("principalId", required: true)]
        public string PrincipalId { get; set; } = null!;

        [Input("regions")]
        private List<string>? _regions;

        /// <summary>
        /// Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.
        /// </summary>
        public List<string> Regions
        {
            get => _regions ?? (_regions = new List<string>());
            set => _regions = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Map account key to use for signing.
        /// </summary>
        [Input("signingKey", required: true)]
        public Union<string, Pulumi.AzureNative.Maps.SigningKey> SigningKey { get; set; } = null!;

        /// <summary>
        /// The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z".
        /// </summary>
        [Input("start", required: true)]
        public string Start { get; set; } = null!;

        public ListAccountSasArgs()
        {
            MaxRatePerSecond = 500;
        }
        public static new ListAccountSasArgs Empty => new ListAccountSasArgs();
    }

    public sealed class ListAccountSasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Maps Account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z"
        /// </summary>
        [Input("expiry", required: true)]
        public Input<string> Expiry { get; set; } = null!;

        /// <summary>
        /// Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        /// </summary>
        [Input("maxRatePerSecond", required: true)]
        public Input<int> MaxRatePerSecond { get; set; } = null!;

        /// <summary>
        /// The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Map account key to use for signing.
        /// </summary>
        [Input("signingKey", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Maps.SigningKey> SigningKey { get; set; } = null!;

        /// <summary>
        /// The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z".
        /// </summary>
        [Input("start", required: true)]
        public Input<string> Start { get; set; } = null!;

        public ListAccountSasInvokeArgs()
        {
            MaxRatePerSecond = 500;
        }
        public static new ListAccountSasInvokeArgs Empty => new ListAccountSasInvokeArgs();
    }


    [OutputType]
    public sealed class ListAccountSasResult
    {
        /// <summary>
        /// The shared access signature access token.
        /// </summary>
        public readonly string AccountSasToken;

        [OutputConstructor]
        private ListAccountSasResult(string accountSasToken)
        {
            AccountSasToken = accountSasToken;
        }
    }
}
