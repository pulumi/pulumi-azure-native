// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Maps.V20211201Preview.Outputs
{

    /// <summary>
    /// Additional Map account properties
    /// </summary>
    [OutputType]
    public sealed class MapsAccountPropertiesResponse
    {
        /// <summary>
        /// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        /// </summary>
        public readonly Outputs.CorsRulesResponse? Cors;
        /// <summary>
        /// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys authentication from any usage.
        /// </summary>
        public readonly bool? DisableLocalAuth;
        /// <summary>
        /// Sets the resources to be used for Managed Identities based operations for the Map account resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkedResourceResponse> LinkedResources;
        /// <summary>
        /// The provisioning state of the Map account resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// A unique identifier for the maps account
        /// </summary>
        public readonly string UniqueId;

        [OutputConstructor]
        private MapsAccountPropertiesResponse(
            Outputs.CorsRulesResponse? cors,

            bool? disableLocalAuth,

            ImmutableArray<Outputs.LinkedResourceResponse> linkedResources,

            string provisioningState,

            string uniqueId)
        {
            Cors = cors;
            DisableLocalAuth = disableLocalAuth;
            LinkedResources = linkedResources;
            ProvisioningState = provisioningState;
            UniqueId = uniqueId;
        }
    }
}
