// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTCentral.V20211101Preview
{
    public static class GetApp
    {
        /// <summary>
        /// The IoT Central application.
        /// </summary>
        public static Task<GetAppResult> InvokeAsync(GetAppArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppResult>("azure-native:iotcentral/v20211101preview:getApp", args ?? new GetAppArgs(), options.WithDefaults());

        /// <summary>
        /// The IoT Central application.
        /// </summary>
        public static Output<GetAppResult> Invoke(GetAppInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppResult>("azure-native:iotcentral/v20211101preview:getApp", args ?? new GetAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the IoT Central application.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ARM resource name of the IoT Central application.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetAppArgs()
        {
        }
        public static new GetAppArgs Empty => new GetAppArgs();
    }

    public sealed class GetAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the IoT Central application.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ARM resource name of the IoT Central application.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetAppInvokeArgs()
        {
        }
        public static new GetAppInvokeArgs Empty => new GetAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppResult
    {
        /// <summary>
        /// The ID of the application.
        /// </summary>
        public readonly string ApplicationId;
        /// <summary>
        /// The display name of the application.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed identities for the IoT Central application.
        /// </summary>
        public readonly Outputs.SystemAssignedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network Rule Set Properties of this IoT Central application.
        /// </summary>
        public readonly Outputs.NetworkRuleSetsResponse? NetworkRuleSets;
        /// <summary>
        /// Private endpoint connections created on this IoT Central application.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// The provisioning state of the application.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether requests from the public network are allowed.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// A valid instance SKU.
        /// </summary>
        public readonly Outputs.AppSkuInfoResponse Sku;
        /// <summary>
        /// The current state of the application.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The subdomain of the application.
        /// </summary>
        public readonly string? Subdomain;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
        /// </summary>
        public readonly string? Template;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAppResult(
            string applicationId,

            string? displayName,

            string id,

            Outputs.SystemAssignedServiceIdentityResponse? identity,

            string location,

            string name,

            Outputs.NetworkRuleSetsResponse? networkRuleSets,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.AppSkuInfoResponse sku,

            string state,

            string? subdomain,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string? template,

            string type)
        {
            ApplicationId = applicationId;
            DisplayName = displayName;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            NetworkRuleSets = networkRuleSets;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            Sku = sku;
            State = state;
            Subdomain = subdomain;
            SystemData = systemData;
            Tags = tags;
            Template = template;
            Type = type;
        }
    }
}
