// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.VirtualMachineImages.V20190201Preview.Inputs
{

    /// <summary>
    /// Distribute as a Managed Disk Image.
    /// </summary>
    public sealed class ImageTemplateManagedImageDistributorArgs : Pulumi.ResourceArgs
    {
        [Input("artifactTags")]
        private InputMap<string>? _artifactTags;

        /// <summary>
        /// Tags that will be applied to the artifact once it has been created/updated by the distributor.
        /// </summary>
        public InputMap<string> ArtifactTags
        {
            get => _artifactTags ?? (_artifactTags = new InputMap<string>());
            set => _artifactTags = value;
        }

        /// <summary>
        /// Resource Id of the Managed Disk Image
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// Azure location for the image, should match if image already exists
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name to be used for the associated RunOutput.
        /// </summary>
        [Input("runOutputName", required: true)]
        public Input<string> RunOutputName { get; set; } = null!;

        /// <summary>
        /// Type of distribution.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ImageTemplateManagedImageDistributorArgs()
        {
        }
    }
}
