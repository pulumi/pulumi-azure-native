// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.VirtualMachineImages.V20200214.Inputs
{

    /// <summary>
    /// Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
    /// </summary>
    public sealed class ImageTemplatePowerShellCustomizerArgs : Pulumi.ResourceArgs
    {
        [Input("inline")]
        private InputList<string>? _inline;

        /// <summary>
        /// Array of PowerShell commands to execute
        /// </summary>
        public InputList<string> Inline
        {
            get => _inline ?? (_inline = new InputList<string>());
            set => _inline = value;
        }

        /// <summary>
        /// Friendly Name to provide context on what this customization step does
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
        /// </summary>
        [Input("runAsSystem")]
        public Input<bool>? RunAsSystem { get; set; }

        /// <summary>
        /// If specified, the PowerShell script will be run with elevated privileges
        /// </summary>
        [Input("runElevated")]
        public Input<bool>? RunElevated { get; set; }

        /// <summary>
        /// URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
        /// </summary>
        [Input("scriptUri")]
        public Input<string>? ScriptUri { get; set; }

        /// <summary>
        /// SHA256 checksum of the power shell script provided in the scriptUri field above
        /// </summary>
        [Input("sha256Checksum")]
        public Input<string>? Sha256Checksum { get; set; }

        /// <summary>
        /// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("validExitCodes")]
        private InputList<int>? _validExitCodes;

        /// <summary>
        /// Valid exit codes for the PowerShell script. [Default: 0]
        /// </summary>
        public InputList<int> ValidExitCodes
        {
            get => _validExitCodes ?? (_validExitCodes = new InputList<int>());
            set => _validExitCodes = value;
        }

        public ImageTemplatePowerShellCustomizerArgs()
        {
        }
    }
}
