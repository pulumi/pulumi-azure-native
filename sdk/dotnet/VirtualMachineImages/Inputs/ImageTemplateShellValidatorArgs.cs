// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VirtualMachineImages.Inputs
{

    /// <summary>
    /// Runs the specified shell script during the validation phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
    /// </summary>
    public sealed class ImageTemplateShellValidatorArgs : global::Pulumi.ResourceArgs
    {
        [Input("inline")]
        private InputList<string>? _inline;

        /// <summary>
        /// Array of shell commands to execute
        /// </summary>
        public InputList<string> Inline
        {
            get => _inline ?? (_inline = new InputList<string>());
            set => _inline = value;
        }

        /// <summary>
        /// Friendly Name to provide context on what this validation step does
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// URI of the shell script to be run for validation. It can be a github link, Azure Storage URI, etc
        /// </summary>
        [Input("scriptUri")]
        public Input<string>? ScriptUri { get; set; }

        /// <summary>
        /// SHA256 checksum of the shell script provided in the scriptUri field
        /// </summary>
        [Input("sha256Checksum")]
        public Input<string>? Sha256Checksum { get; set; }

        /// <summary>
        /// The type of validation you want to use on the Image. For example, "Shell" can be shell validation
        /// Expected value is 'Shell'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ImageTemplateShellValidatorArgs()
        {
            Sha256Checksum = "";
        }
        public static new ImageTemplateShellValidatorArgs Empty => new ImageTemplateShellValidatorArgs();
    }
}
