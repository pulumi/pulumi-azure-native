// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.VirtualMachineImages.Latest.Inputs
{

    /// <summary>
    /// Installs Windows Updates. Corresponds to Packer Windows Update Provisioner (https://github.com/rgl/packer-provisioner-windows-update)
    /// </summary>
    public sealed class ImageTemplateWindowsUpdateCustomizerArgs : Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<string>? _filters;

        /// <summary>
        /// Array of filters to select updates to apply. Omit or specify empty array to use the default (no filter). Refer to above link for examples and detailed description of this field.
        /// </summary>
        public InputList<string> Filters
        {
            get => _filters ?? (_filters = new InputList<string>());
            set => _filters = value;
        }

        /// <summary>
        /// Friendly Name to provide context on what this customization step does
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Criteria to search updates. Omit or specify empty string to use the default (search all). Refer to above link for examples and detailed description of this field.
        /// </summary>
        [Input("searchCriteria")]
        public Input<string>? SearchCriteria { get; set; }

        /// <summary>
        /// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Maximum number of updates to apply at a time. Omit or specify 0 to use the default (1000)
        /// </summary>
        [Input("updateLimit")]
        public Input<int>? UpdateLimit { get; set; }

        public ImageTemplateWindowsUpdateCustomizerArgs()
        {
        }
    }
}
