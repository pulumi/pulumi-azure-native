// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VirtualMachineImages
{
    public static class GetVirtualMachineImageTemplate
    {
        /// <summary>
        /// Get information about a virtual machine image template
        /// Azure REST API version: 2022-07-01.
        /// 
        /// Other available API versions: 2018-02-01-preview, 2019-05-01-preview, 2023-07-01, 2024-02-01.
        /// </summary>
        public static Task<GetVirtualMachineImageTemplateResult> InvokeAsync(GetVirtualMachineImageTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualMachineImageTemplateResult>("azure-native:virtualmachineimages:getVirtualMachineImageTemplate", args ?? new GetVirtualMachineImageTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a virtual machine image template
        /// Azure REST API version: 2022-07-01.
        /// 
        /// Other available API versions: 2018-02-01-preview, 2019-05-01-preview, 2023-07-01, 2024-02-01.
        /// </summary>
        public static Output<GetVirtualMachineImageTemplateResult> Invoke(GetVirtualMachineImageTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualMachineImageTemplateResult>("azure-native:virtualmachineimages:getVirtualMachineImageTemplate", args ?? new GetVirtualMachineImageTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualMachineImageTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the image Template
        /// </summary>
        [Input("imageTemplateName", required: true)]
        public string ImageTemplateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetVirtualMachineImageTemplateArgs()
        {
        }
        public static new GetVirtualMachineImageTemplateArgs Empty => new GetVirtualMachineImageTemplateArgs();
    }

    public sealed class GetVirtualMachineImageTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the image Template
        /// </summary>
        [Input("imageTemplateName", required: true)]
        public Input<string> ImageTemplateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetVirtualMachineImageTemplateInvokeArgs()
        {
        }
        public static new GetVirtualMachineImageTemplateInvokeArgs Empty => new GetVirtualMachineImageTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualMachineImageTemplateResult
    {
        /// <summary>
        /// Maximum duration to wait while building the image template (includes all customizations, optimization, validations, and distributions). Omit or specify 0 to use the default (4 hours).
        /// </summary>
        public readonly int? BuildTimeoutInMinutes;
        /// <summary>
        /// Specifies the properties used to describe the customization steps of the image, like Image source etc
        /// </summary>
        public readonly ImmutableArray<object> Customize;
        /// <summary>
        /// The distribution targets where the image output needs to go to.
        /// </summary>
        public readonly ImmutableArray<object> Distribute;
        /// <summary>
        /// The staging resource group id in the same subscription as the image template that will be used to build the image. This read-only field differs from 'stagingResourceGroup' only if the value specified in the 'stagingResourceGroup' field is empty.
        /// </summary>
        public readonly string ExactStagingResourceGroup;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity of the image template, if configured.
        /// </summary>
        public readonly Outputs.ImageTemplateIdentityResponse Identity;
        /// <summary>
        /// State of 'run' that is currently executing or was last executed.
        /// </summary>
        public readonly Outputs.ImageTemplateLastRunStatusResponse LastRunStatus;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies optimization to be performed on image.
        /// </summary>
        public readonly Outputs.ImageTemplatePropertiesResponseOptimize? Optimize;
        /// <summary>
        /// Provisioning error, if any
        /// </summary>
        public readonly Outputs.ProvisioningErrorResponse ProvisioningError;
        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Specifies the properties used to describe the source image.
        /// </summary>
        public readonly object Source;
        /// <summary>
        /// The staging resource group id in the same subscription as the image template that will be used to build the image. If this field is empty, a resource group with a random name will be created. If the resource group specified in this field doesn't exist, it will be created with the same name. If the resource group specified exists, it must be empty and in the same region as the image template. The resource group created will be deleted during template deletion if this field is empty or the resource group specified doesn't exist, but if the resource group specified exists the resources created in the resource group will be deleted during template deletion and the resource group itself will remain.
        /// </summary>
        public readonly string? StagingResourceGroup;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Configuration options and list of validations to be performed on the resulting image.
        /// </summary>
        public readonly Outputs.ImageTemplatePropertiesResponseValidate? Validate;
        /// <summary>
        /// Describes how virtual machine is set up to build images
        /// </summary>
        public readonly Outputs.ImageTemplateVmProfileResponse? VmProfile;

        [OutputConstructor]
        private GetVirtualMachineImageTemplateResult(
            int? buildTimeoutInMinutes,

            ImmutableArray<object> customize,

            ImmutableArray<object> distribute,

            string exactStagingResourceGroup,

            string id,

            Outputs.ImageTemplateIdentityResponse identity,

            Outputs.ImageTemplateLastRunStatusResponse lastRunStatus,

            string location,

            string name,

            Outputs.ImageTemplatePropertiesResponseOptimize? optimize,

            Outputs.ProvisioningErrorResponse provisioningError,

            string provisioningState,

            object source,

            string? stagingResourceGroup,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ImageTemplatePropertiesResponseValidate? validate,

            Outputs.ImageTemplateVmProfileResponse? vmProfile)
        {
            BuildTimeoutInMinutes = buildTimeoutInMinutes;
            Customize = customize;
            Distribute = distribute;
            ExactStagingResourceGroup = exactStagingResourceGroup;
            Id = id;
            Identity = identity;
            LastRunStatus = lastRunStatus;
            Location = location;
            Name = name;
            Optimize = optimize;
            ProvisioningError = provisioningError;
            ProvisioningState = provisioningState;
            Source = source;
            StagingResourceGroup = stagingResourceGroup;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Validate = validate;
            VmProfile = vmProfile;
        }
    }
}
