// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Resources.Outputs
{

    /// <summary>
    /// Defines the behavior of resources that are not managed immediately after the stack is updated.
    /// </summary>
    [OutputType]
    public sealed class DeploymentStackPropertiesResponseActionOnUnmanage
    {
        /// <summary>
        /// Specifies the action that should be taken on the resource when the deployment stack is deleted. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.
        /// </summary>
        public readonly string? ManagementGroups;
        /// <summary>
        /// Specifies the action that should be taken on the resource when the deployment stack is deleted. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.
        /// </summary>
        public readonly string? ResourceGroups;
        /// <summary>
        /// Specifies the action that should be taken on the resource when the deployment stack is deleted. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.
        /// </summary>
        public readonly string Resources;

        [OutputConstructor]
        private DeploymentStackPropertiesResponseActionOnUnmanage(
            string? managementGroups,

            string? resourceGroups,

            string resources)
        {
            ManagementGroups = managementGroups;
            ResourceGroups = resourceGroups;
            Resources = resources;
        }
    }
}
