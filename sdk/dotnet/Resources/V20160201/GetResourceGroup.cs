// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Resources.V20160201
{
    [Obsolete(@"Version 2016-02-01 will be removed in v2 of the provider.")]
    public static class GetResourceGroup
    {
        /// <summary>
        /// Get a resource group.
        /// </summary>
        public static Task<GetResourceGroupResult> InvokeAsync(GetResourceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceGroupResult>("azure-native:resources/v20160201:getResourceGroup", args ?? new GetResourceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get a resource group.
        /// </summary>
        public static Output<GetResourceGroupResult> Invoke(GetResourceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceGroupResult>("azure-native:resources/v20160201:getResourceGroup", args ?? new GetResourceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group to get. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetResourceGroupArgs()
        {
        }
        public static new GetResourceGroupArgs Empty => new GetResourceGroupArgs();
    }

    public sealed class GetResourceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group to get. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetResourceGroupInvokeArgs()
        {
        }
        public static new GetResourceGroupInvokeArgs Empty => new GetResourceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceGroupResult
    {
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The Name of the resource group.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The resource group properties.
        /// </summary>
        public readonly Outputs.ResourceGroupPropertiesResponse Properties;
        /// <summary>
        /// The tags attached to the resource group.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetResourceGroupResult(
            string id,

            string location,

            string? name,

            Outputs.ResourceGroupPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
        }
    }
}
