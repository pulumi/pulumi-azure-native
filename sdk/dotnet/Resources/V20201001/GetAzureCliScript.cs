// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Resources.V20201001
{
    public static class GetAzureCliScript
    {
        /// <summary>
        /// Gets a deployment script with a given name.
        /// </summary>
        public static Task<GetAzureCliScriptResult> InvokeAsync(GetAzureCliScriptArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureCliScriptResult>("azure-native:resources/v20201001:getAzureCliScript", args ?? new GetAzureCliScriptArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a deployment script with a given name.
        /// </summary>
        public static Output<GetAzureCliScriptResult> Invoke(GetAzureCliScriptInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureCliScriptResult>("azure-native:resources/v20201001:getAzureCliScript", args ?? new GetAzureCliScriptInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureCliScriptArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment script.
        /// </summary>
        [Input("scriptName", required: true)]
        public string ScriptName { get; set; } = null!;

        public GetAzureCliScriptArgs()
        {
        }
        public static new GetAzureCliScriptArgs Empty => new GetAzureCliScriptArgs();
    }

    public sealed class GetAzureCliScriptInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment script.
        /// </summary>
        [Input("scriptName", required: true)]
        public Input<string> ScriptName { get; set; } = null!;

        public GetAzureCliScriptInvokeArgs()
        {
        }
        public static new GetAzureCliScriptInvokeArgs Empty => new GetAzureCliScriptInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureCliScriptResult
    {
        /// <summary>
        /// String Id used to locate any resource on Azure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// Type of the script.
        /// Expected value is 'AzureCLI'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The location of the ACI and the storage account for the deployment script.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the Azure CLI script object.
        /// </summary>
        public readonly Outputs.AzureCliScriptPropertiesResponse Properties;
        /// <summary>
        /// The system metadata related to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureCliScriptResult(
            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string kind,

            string location,

            string name,

            Outputs.AzureCliScriptPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Identity = identity;
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
