// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.BatchAI.Inputs
{

    /// <summary>
    /// File Server properties.
    /// </summary>
    public sealed class FileServerPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time when the FileServer was created.
        /// </summary>
        [Input("creationTime", required: true)]
        public Input<string> CreationTime { get; set; } = null!;

        /// <summary>
        /// Information about disks attached to File Server VM.
        /// </summary>
        [Input("dataDisks")]
        public Input<Inputs.DataDisksResponseGetArgs>? DataDisks { get; set; }

        /// <summary>
        /// File Server mount settings.
        /// </summary>
        [Input("mountSettings", required: true)]
        public Input<Inputs.MountSettingsResponseGetArgs> MountSettings { get; set; } = null!;

        /// <summary>
        /// Provisioning state of the File Server. Possible values: creating - The File Server is getting created; updating - The File Server creation has been accepted and it is getting updated; deleting - The user has requested that the File Server be deleted, and it is in the process of being deleted; failed - The File Server creation has failed with the specified error code. Details about the error code are specified in the message field; succeeded - The File Server creation has succeeded.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Time when the provisioning state was changed.
        /// </summary>
        [Input("provisioningStateTransitionTime", required: true)]
        public Input<string> ProvisioningStateTransitionTime { get; set; } = null!;

        /// <summary>
        /// SSH configuration for accessing the File Server node.
        /// </summary>
        [Input("sshConfiguration")]
        public Input<Inputs.SshConfigurationResponseGetArgs>? SshConfiguration { get; set; }

        /// <summary>
        /// File Server virtual network subnet resource ID.
        /// </summary>
        [Input("subnet")]
        public Input<Inputs.ResourceIdResponseGetArgs>? Subnet { get; set; }

        /// <summary>
        /// VM size of the File Server.
        /// </summary>
        [Input("vmSize")]
        public Input<string>? VmSize { get; set; }

        public FileServerPropertiesResponseGetArgs()
        {
        }
    }
}
