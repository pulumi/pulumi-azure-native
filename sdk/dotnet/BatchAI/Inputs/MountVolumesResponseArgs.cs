// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.BatchAI.Inputs
{

    /// <summary>
    /// Details of volumes to mount on the cluster.
    /// </summary>
    public sealed class MountVolumesResponseArgs : Pulumi.ResourceArgs
    {
        [Input("azureBlobFileSystems")]
        private InputList<Inputs.AzureBlobFileSystemReferenceResponseArgs>? _azureBlobFileSystems;

        /// <summary>
        /// A collection of Azure Blob Containers that are to be mounted to the cluster nodes.
        /// </summary>
        public InputList<Inputs.AzureBlobFileSystemReferenceResponseArgs> AzureBlobFileSystems
        {
            get => _azureBlobFileSystems ?? (_azureBlobFileSystems = new InputList<Inputs.AzureBlobFileSystemReferenceResponseArgs>());
            set => _azureBlobFileSystems = value;
        }

        [Input("azureFileShares")]
        private InputList<Inputs.AzureFileShareReferenceResponseArgs>? _azureFileShares;

        /// <summary>
        /// A collection of Azure File Shares that are to be mounted to the cluster nodes.
        /// </summary>
        public InputList<Inputs.AzureFileShareReferenceResponseArgs> AzureFileShares
        {
            get => _azureFileShares ?? (_azureFileShares = new InputList<Inputs.AzureFileShareReferenceResponseArgs>());
            set => _azureFileShares = value;
        }

        [Input("fileServers")]
        private InputList<Inputs.FileServerReferenceResponseArgs>? _fileServers;

        /// <summary>
        /// A collection of Batch AI File Servers that are to be mounted to the cluster nodes.
        /// </summary>
        public InputList<Inputs.FileServerReferenceResponseArgs> FileServers
        {
            get => _fileServers ?? (_fileServers = new InputList<Inputs.FileServerReferenceResponseArgs>());
            set => _fileServers = value;
        }

        [Input("unmanagedFileSystems")]
        private InputList<Inputs.UnmanagedFileSystemReferenceResponseArgs>? _unmanagedFileSystems;

        /// <summary>
        /// A collection of unmanaged file systems that are to be mounted to the cluster nodes.
        /// </summary>
        public InputList<Inputs.UnmanagedFileSystemReferenceResponseArgs> UnmanagedFileSystems
        {
            get => _unmanagedFileSystems ?? (_unmanagedFileSystems = new InputList<Inputs.UnmanagedFileSystemReferenceResponseArgs>());
            set => _unmanagedFileSystems = value;
        }

        public MountVolumesResponseArgs()
        {
        }
    }
}
