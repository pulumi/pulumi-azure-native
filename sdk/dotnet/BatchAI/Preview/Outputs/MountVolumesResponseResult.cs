// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.BatchAI.Preview.Outputs
{

    [OutputType]
    public sealed class MountVolumesResponseResult
    {
        /// <summary>
        /// A collection of Azure Blob Containers that are to be mounted to the cluster nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.AzureBlobFileSystemReferenceResponseResult> AzureBlobFileSystems;
        /// <summary>
        /// A collection of Azure File Shares that are to be mounted to the cluster nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.AzureFileShareReferenceResponseResult> AzureFileShares;
        /// <summary>
        /// A collection of Batch AI File Servers that are to be mounted to the cluster nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.FileServerReferenceResponseResult> FileServers;
        /// <summary>
        /// A collection of unmanaged file systems that are to be mounted to the cluster nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.UnmanagedFileSystemReferenceResponseResult> UnmanagedFileSystems;

        [OutputConstructor]
        private MountVolumesResponseResult(
            ImmutableArray<Outputs.AzureBlobFileSystemReferenceResponseResult> azureBlobFileSystems,

            ImmutableArray<Outputs.AzureFileShareReferenceResponseResult> azureFileShares,

            ImmutableArray<Outputs.FileServerReferenceResponseResult> fileServers,

            ImmutableArray<Outputs.UnmanagedFileSystemReferenceResponseResult> unmanagedFileSystems)
        {
            AzureBlobFileSystems = azureBlobFileSystems;
            AzureFileShares = azureFileShares;
            FileServers = fileServers;
            UnmanagedFileSystems = unmanagedFileSystems;
        }
    }
}
