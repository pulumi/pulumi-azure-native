// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.BatchAI.Latest
{
    [Obsolete(@"The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-nextgen:batchai:getWorkspace'.")]
    public static class GetWorkspace
    {
        /// <summary>
        /// Batch AI Workspace information.
        /// Latest API Version: 2018-05-01.
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("azure-nextgen:batchai/latest:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithVersion());
    }


    public sealed class GetWorkspaceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// Time when the Workspace was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The ID of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the resource
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioned state of the Workspace
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The time at which the workspace entered its current provisioning state.
        /// </summary>
        public readonly string ProvisioningStateTransitionTime;
        /// <summary>
        /// The tags of the resource
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The type of the resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkspaceResult(
            string creationTime,

            string id,

            string location,

            string name,

            string provisioningState,

            string provisioningStateTransitionTime,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            CreationTime = creationTime;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ProvisioningStateTransitionTime = provisioningStateTransitionTime;
            Tags = tags;
            Type = type;
        }
    }
}
