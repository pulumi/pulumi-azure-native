// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.BatchAI.V20180501.Outputs
{

    [OutputType]
    public sealed class SetupTaskResponse
    {
        /// <summary>
        /// The command line to be executed on each cluster's node after it being allocated or rebooted. The command is executed in a bash subshell as a root.
        /// </summary>
        public readonly string CommandLine;
        /// <summary>
        /// A collection of user defined environment variables to be set for setup task.
        /// </summary>
        public readonly ImmutableArray<Outputs.EnvironmentVariableResponse> EnvironmentVariables;
        /// <summary>
        /// A collection of user defined environment variables with secret values to be set for the setup task. Server will never report values of these variables back.
        /// </summary>
        public readonly ImmutableArray<Outputs.EnvironmentVariableWithSecretValueResponse> Secrets;
        /// <summary>
        /// The prefix of a path where the Batch AI service will upload the stdout, stderr and execution log of the setup task.
        /// </summary>
        public readonly string StdOutErrPathPrefix;
        /// <summary>
        /// A path segment appended by Batch AI to stdOutErrPathPrefix to form a path where stdout, stderr and execution log of the setup task will be uploaded. Batch AI creates the setup task output directories under an unique path to avoid conflicts between different clusters. The full path can be obtained by concatenation of stdOutErrPathPrefix and stdOutErrPathSuffix.
        /// </summary>
        public readonly string StdOutErrPathSuffix;

        [OutputConstructor]
        private SetupTaskResponse(
            string commandLine,

            ImmutableArray<Outputs.EnvironmentVariableResponse> environmentVariables,

            ImmutableArray<Outputs.EnvironmentVariableWithSecretValueResponse> secrets,

            string stdOutErrPathPrefix,

            string stdOutErrPathSuffix)
        {
            CommandLine = commandLine;
            EnvironmentVariables = environmentVariables;
            Secrets = secrets;
            StdOutErrPathPrefix = stdOutErrPathPrefix;
            StdOutErrPathSuffix = stdOutErrPathSuffix;
        }
    }
}
