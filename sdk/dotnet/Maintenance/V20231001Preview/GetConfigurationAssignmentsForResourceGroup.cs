// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Maintenance.V20231001Preview
{
    public static class GetConfigurationAssignmentsForResourceGroup
    {
        /// <summary>
        /// Get configuration assignment for resource..
        /// </summary>
        public static Task<GetConfigurationAssignmentsForResourceGroupResult> InvokeAsync(GetConfigurationAssignmentsForResourceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationAssignmentsForResourceGroupResult>("azure-native:maintenance/v20231001preview:getConfigurationAssignmentsForResourceGroup", args ?? new GetConfigurationAssignmentsForResourceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get configuration assignment for resource..
        /// </summary>
        public static Output<GetConfigurationAssignmentsForResourceGroupResult> Invoke(GetConfigurationAssignmentsForResourceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationAssignmentsForResourceGroupResult>("azure-native:maintenance/v20231001preview:getConfigurationAssignmentsForResourceGroup", args ?? new GetConfigurationAssignmentsForResourceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationAssignmentsForResourceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Configuration assignment name
        /// </summary>
        [Input("configurationAssignmentName", required: true)]
        public string ConfigurationAssignmentName { get; set; } = null!;

        /// <summary>
        /// Resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConfigurationAssignmentsForResourceGroupArgs()
        {
        }
        public static new GetConfigurationAssignmentsForResourceGroupArgs Empty => new GetConfigurationAssignmentsForResourceGroupArgs();
    }

    public sealed class GetConfigurationAssignmentsForResourceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Configuration assignment name
        /// </summary>
        [Input("configurationAssignmentName", required: true)]
        public Input<string> ConfigurationAssignmentName { get; set; } = null!;

        /// <summary>
        /// Resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetConfigurationAssignmentsForResourceGroupInvokeArgs()
        {
        }
        public static new GetConfigurationAssignmentsForResourceGroupInvokeArgs Empty => new GetConfigurationAssignmentsForResourceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationAssignmentsForResourceGroupResult
    {
        /// <summary>
        /// Properties of the configuration assignment
        /// </summary>
        public readonly Outputs.ConfigurationAssignmentFilterPropertiesResponse? Filter;
        /// <summary>
        /// Fully qualified identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Location of the resource
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The maintenance configuration Id
        /// </summary>
        public readonly string? MaintenanceConfigurationId;
        /// <summary>
        /// Name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique resourceId
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConfigurationAssignmentsForResourceGroupResult(
            Outputs.ConfigurationAssignmentFilterPropertiesResponse? filter,

            string id,

            string? location,

            string? maintenanceConfigurationId,

            string name,

            string? resourceId,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Filter = filter;
            Id = id;
            Location = location;
            MaintenanceConfigurationId = maintenanceConfigurationId;
            Name = name;
            ResourceId = resourceId;
            SystemData = systemData;
            Type = type;
        }
    }
}
