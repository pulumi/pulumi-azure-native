// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Maintenance.V20200701Preview
{
    /// <summary>
    /// Gets or sets maintenanceScope of the configuration
    /// </summary>
    [EnumType]
    public readonly struct MaintenanceScope : IEquatable<MaintenanceScope>
    {
        private readonly string _value;

        private MaintenanceScope(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static MaintenanceScope All { get; } = new MaintenanceScope("All");
        public static MaintenanceScope Host { get; } = new MaintenanceScope("Host");
        public static MaintenanceScope Resource { get; } = new MaintenanceScope("Resource");
        public static MaintenanceScope InResource { get; } = new MaintenanceScope("InResource");
        public static MaintenanceScope OSImage { get; } = new MaintenanceScope("OSImage");
        public static MaintenanceScope Extension { get; } = new MaintenanceScope("Extension");
        public static MaintenanceScope InGuestPatch { get; } = new MaintenanceScope("InGuestPatch");
        public static MaintenanceScope SQLDB { get; } = new MaintenanceScope("SQLDB");
        public static MaintenanceScope SQLManagedInstance { get; } = new MaintenanceScope("SQLManagedInstance");

        public static bool operator ==(MaintenanceScope left, MaintenanceScope right) => left.Equals(right);
        public static bool operator !=(MaintenanceScope left, MaintenanceScope right) => !left.Equals(right);

        public static explicit operator string(MaintenanceScope value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MaintenanceScope other && Equals(other);
        public bool Equals(MaintenanceScope other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Gets or sets the visibility of the configuration
    /// </summary>
    [EnumType]
    public readonly struct Visibility : IEquatable<Visibility>
    {
        private readonly string _value;

        private Visibility(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Visibility Custom { get; } = new Visibility("Custom");
        public static Visibility Public { get; } = new Visibility("Public");

        public static bool operator ==(Visibility left, Visibility right) => left.Equals(right);
        public static bool operator !=(Visibility left, Visibility right) => !left.Equals(right);

        public static explicit operator string(Visibility value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Visibility other && Equals(other);
        public bool Equals(Visibility other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
