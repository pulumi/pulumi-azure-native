// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.Outputs
{

    /// <summary>
    /// Properties of the storage task assignment.
    /// </summary>
    [OutputType]
    public sealed class StorageTaskAssignmentPropertiesResponse
    {
        /// <summary>
        /// Text that describes the purpose of the storage task assignment
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether the storage task assignment is enabled or not
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The storage task assignment execution context
        /// </summary>
        public readonly Outputs.StorageTaskAssignmentExecutionContextResponse ExecutionContext;
        /// <summary>
        /// Represents the provisioning state of the storage task assignment.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The storage task assignment report
        /// </summary>
        public readonly Outputs.StorageTaskAssignmentReportResponse Report;
        /// <summary>
        /// Run status of storage task assignment
        /// </summary>
        public readonly Outputs.StorageTaskReportPropertiesResponse? RunStatus;
        /// <summary>
        /// Id of the corresponding storage task
        /// </summary>
        public readonly string TaskId;

        [OutputConstructor]
        private StorageTaskAssignmentPropertiesResponse(
            string description,

            bool enabled,

            Outputs.StorageTaskAssignmentExecutionContextResponse executionContext,

            string provisioningState,

            Outputs.StorageTaskAssignmentReportResponse report,

            Outputs.StorageTaskReportPropertiesResponse? runStatus,

            string taskId)
        {
            Description = description;
            Enabled = enabled;
            ExecutionContext = executionContext;
            ProvisioningState = provisioningState;
            Report = report;
            RunStatus = runStatus;
            TaskId = taskId;
        }
    }
}
