// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Storage.Outputs
{

    [OutputType]
    public sealed class FileSharePropertiesResponseResult
    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
        /// </summary>
        public readonly string? AccessTier;
        /// <summary>
        /// Indicates the last modification time for share access tier.
        /// </summary>
        public readonly string AccessTierChangeTime;
        /// <summary>
        /// Indicates if there is a pending transition for access tier.
        /// </summary>
        public readonly string AccessTierStatus;
        /// <summary>
        /// Indicates whether the share was deleted.
        /// </summary>
        public readonly bool Deleted;
        /// <summary>
        /// The deleted time if the share was deleted.
        /// </summary>
        public readonly string DeletedTime;
        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        public readonly string? EnabledProtocols;
        /// <summary>
        /// Returns the date and time the share was last modified.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// A name-value pair to associate with the share as metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// Remaining retention days for share that was soft deleted.
        /// </summary>
        public readonly int RemainingRetentionDays;
        /// <summary>
        /// The property is for NFS share only. The default is NoRootSquash.
        /// </summary>
        public readonly string? RootSquash;
        /// <summary>
        /// The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
        /// </summary>
        public readonly int? ShareQuota;
        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.
        /// </summary>
        public readonly int ShareUsageBytes;
        /// <summary>
        /// The version of the share.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private FileSharePropertiesResponseResult(
            string? accessTier,

            string accessTierChangeTime,

            string accessTierStatus,

            bool deleted,

            string deletedTime,

            string? enabledProtocols,

            string lastModifiedTime,

            ImmutableDictionary<string, string>? metadata,

            int remainingRetentionDays,

            string? rootSquash,

            int? shareQuota,

            int shareUsageBytes,

            string version)
        {
            AccessTier = accessTier;
            AccessTierChangeTime = accessTierChangeTime;
            AccessTierStatus = accessTierStatus;
            Deleted = deleted;
            DeletedTime = deletedTime;
            EnabledProtocols = enabledProtocols;
            LastModifiedTime = lastModifiedTime;
            Metadata = metadata;
            RemainingRetentionDays = remainingRetentionDays;
            RootSquash = rootSquash;
            ShareQuota = shareQuota;
            ShareUsageBytes = shareUsageBytes;
            Version = version;
        }
    }
}
