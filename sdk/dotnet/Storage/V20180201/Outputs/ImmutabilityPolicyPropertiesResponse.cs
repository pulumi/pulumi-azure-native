// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20180201.Outputs
{

    /// <summary>
    /// The properties of an ImmutabilityPolicy of a blob container.
    /// </summary>
    [OutputType]
    public sealed class ImmutabilityPolicyPropertiesResponse
    {
        /// <summary>
        /// ImmutabilityPolicy Etag.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        public readonly int ImmutabilityPeriodSinceCreationInDays;
        /// <summary>
        /// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ImmutabilityPolicy update history of the blob container.
        /// </summary>
        public readonly ImmutableArray<Outputs.UpdateHistoryPropertyResponse> UpdateHistory;

        [OutputConstructor]
        private ImmutabilityPolicyPropertiesResponse(
            string etag,

            int immutabilityPeriodSinceCreationInDays,

            string state,

            ImmutableArray<Outputs.UpdateHistoryPropertyResponse> updateHistory)
        {
            Etag = etag;
            ImmutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            State = state;
            UpdateHistory = updateHistory;
        }
    }
}
