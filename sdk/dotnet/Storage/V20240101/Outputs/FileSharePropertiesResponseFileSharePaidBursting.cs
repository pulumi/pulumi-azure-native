// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20240101.Outputs
{

    /// <summary>
    /// File Share Paid Bursting properties.
    /// </summary>
    [OutputType]
    public sealed class FileSharePropertiesResponseFileSharePaidBursting
    {
        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type.
        /// </summary>
        public readonly bool? PaidBurstingEnabled;
        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share.
        /// </summary>
        public readonly int? PaidBurstingMaxBandwidthMibps;
        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        public readonly int? PaidBurstingMaxIops;

        [OutputConstructor]
        private FileSharePropertiesResponseFileSharePaidBursting(
            bool? paidBurstingEnabled,

            int? paidBurstingMaxBandwidthMibps,

            int? paidBurstingMaxIops)
        {
            PaidBurstingEnabled = paidBurstingEnabled;
            PaidBurstingMaxBandwidthMibps = paidBurstingMaxBandwidthMibps;
            PaidBurstingMaxIops = paidBurstingMaxIops;
        }
    }
}
