// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20220901.Outputs
{

    /// <summary>
    /// Management policy action for base blob.
    /// </summary>
    [OutputType]
    public sealed class ManagementPolicyBaseBlobResponse
    {
        /// <summary>
        /// The function to delete the blob
        /// </summary>
        public readonly Outputs.DateAfterModificationResponse? Delete;
        /// <summary>
        /// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
        /// </summary>
        public readonly bool? EnableAutoTierToHotFromCool;
        /// <summary>
        /// The function to tier blobs to archive storage.
        /// </summary>
        public readonly Outputs.DateAfterModificationResponse? TierToArchive;
        /// <summary>
        /// The function to tier blobs to cold storage.
        /// </summary>
        public readonly Outputs.DateAfterModificationResponse? TierToCold;
        /// <summary>
        /// The function to tier blobs to cool storage.
        /// </summary>
        public readonly Outputs.DateAfterModificationResponse? TierToCool;
        /// <summary>
        /// The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts
        /// </summary>
        public readonly Outputs.DateAfterModificationResponse? TierToHot;

        [OutputConstructor]
        private ManagementPolicyBaseBlobResponse(
            Outputs.DateAfterModificationResponse? delete,

            bool? enableAutoTierToHotFromCool,

            Outputs.DateAfterModificationResponse? tierToArchive,

            Outputs.DateAfterModificationResponse? tierToCold,

            Outputs.DateAfterModificationResponse? tierToCool,

            Outputs.DateAfterModificationResponse? tierToHot)
        {
            Delete = delete;
            EnableAutoTierToHotFromCool = enableAutoTierToHotFromCool;
            TierToArchive = tierToArchive;
            TierToCold = tierToCold;
            TierToCool = tierToCool;
            TierToHot = tierToHot;
        }
    }
}
