// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20220901.Inputs
{

    /// <summary>
    /// Management policy action for base blob.
    /// </summary>
    public sealed class ManagementPolicyBaseBlobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The function to delete the blob
        /// </summary>
        [Input("delete")]
        public Input<Inputs.DateAfterModificationArgs>? Delete { get; set; }

        /// <summary>
        /// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
        /// </summary>
        [Input("enableAutoTierToHotFromCool")]
        public Input<bool>? EnableAutoTierToHotFromCool { get; set; }

        /// <summary>
        /// The function to tier blobs to archive storage.
        /// </summary>
        [Input("tierToArchive")]
        public Input<Inputs.DateAfterModificationArgs>? TierToArchive { get; set; }

        /// <summary>
        /// The function to tier blobs to cold storage.
        /// </summary>
        [Input("tierToCold")]
        public Input<Inputs.DateAfterModificationArgs>? TierToCold { get; set; }

        /// <summary>
        /// The function to tier blobs to cool storage.
        /// </summary>
        [Input("tierToCool")]
        public Input<Inputs.DateAfterModificationArgs>? TierToCool { get; set; }

        /// <summary>
        /// The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts
        /// </summary>
        [Input("tierToHot")]
        public Input<Inputs.DateAfterModificationArgs>? TierToHot { get; set; }

        public ManagementPolicyBaseBlobArgs()
        {
        }
        public static new ManagementPolicyBaseBlobArgs Empty => new ManagementPolicyBaseBlobArgs();
    }
}
