// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Storage.Inputs
{

    /// <summary>
    /// An update history of the ImmutabilityPolicy of a blob container.
    /// </summary>
    public sealed class UpdateHistoryPropertyResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        [Input("immutabilityPeriodSinceCreationInDays", required: true)]
        public Input<int> ImmutabilityPeriodSinceCreationInDays { get; set; } = null!;

        /// <summary>
        /// Returns the Object ID of the user who updated the ImmutabilityPolicy.
        /// </summary>
        [Input("objectIdentifier", required: true)]
        public Input<string> ObjectIdentifier { get; set; } = null!;

        /// <summary>
        /// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// Returns the date and time the ImmutabilityPolicy was updated.
        /// </summary>
        [Input("timestamp", required: true)]
        public Input<string> Timestamp { get; set; } = null!;

        /// <summary>
        /// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
        /// </summary>
        [Input("update", required: true)]
        public Input<string> Update { get; set; } = null!;

        /// <summary>
        /// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
        /// </summary>
        [Input("upn", required: true)]
        public Input<string> Upn { get; set; } = null!;

        public UpdateHistoryPropertyResponseArgs()
        {
        }
    }
}
