// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.Inputs
{

    /// <summary>
    /// Properties of the storage task assignment.
    /// </summary>
    public sealed class StorageTaskAssignmentPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Text that describes the purpose of the storage task assignment
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Whether the storage task assignment is enabled or not
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The storage task assignment execution context
        /// </summary>
        [Input("executionContext", required: true)]
        public Input<Inputs.StorageTaskAssignmentExecutionContextArgs> ExecutionContext { get; set; } = null!;

        /// <summary>
        /// The storage task assignment report
        /// </summary>
        [Input("report", required: true)]
        public Input<Inputs.StorageTaskAssignmentReportArgs> Report { get; set; } = null!;

        /// <summary>
        /// Id of the corresponding storage task
        /// </summary>
        [Input("taskId", required: true)]
        public Input<string> TaskId { get; set; } = null!;

        public StorageTaskAssignmentPropertiesArgs()
        {
        }
        public static new StorageTaskAssignmentPropertiesArgs Empty => new StorageTaskAssignmentPropertiesArgs();
    }
}
