// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Storage.Inputs
{

    /// <summary>
    /// The properties of the file share.
    /// </summary>
    public sealed class FileSharePropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
        /// </summary>
        [Input("accessTier")]
        public Input<string>? AccessTier { get; set; }

        /// <summary>
        /// Indicates the last modification time for share access tier.
        /// </summary>
        [Input("accessTierChangeTime", required: true)]
        public Input<string> AccessTierChangeTime { get; set; } = null!;

        /// <summary>
        /// Indicates if there is a pending transition for access tier.
        /// </summary>
        [Input("accessTierStatus", required: true)]
        public Input<string> AccessTierStatus { get; set; } = null!;

        /// <summary>
        /// Indicates whether the share was deleted.
        /// </summary>
        [Input("deleted", required: true)]
        public Input<bool> Deleted { get; set; } = null!;

        /// <summary>
        /// The deleted time if the share was deleted.
        /// </summary>
        [Input("deletedTime", required: true)]
        public Input<string> DeletedTime { get; set; } = null!;

        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [Input("enabledProtocols")]
        public Input<string>? EnabledProtocols { get; set; }

        /// <summary>
        /// Returns the date and time the share was last modified.
        /// </summary>
        [Input("lastModifiedTime", required: true)]
        public Input<string> LastModifiedTime { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// A name-value pair to associate with the share as metadata.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Remaining retention days for share that was soft deleted.
        /// </summary>
        [Input("remainingRetentionDays", required: true)]
        public Input<int> RemainingRetentionDays { get; set; } = null!;

        /// <summary>
        /// The property is for NFS share only. The default is NoRootSquash.
        /// </summary>
        [Input("rootSquash")]
        public Input<string>? RootSquash { get; set; }

        /// <summary>
        /// The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
        /// </summary>
        [Input("shareQuota")]
        public Input<int>? ShareQuota { get; set; }

        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.
        /// </summary>
        [Input("shareUsageBytes", required: true)]
        public Input<int> ShareUsageBytes { get; set; } = null!;

        /// <summary>
        /// The version of the share.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public FileSharePropertiesResponseGetArgs()
        {
        }
    }
}
