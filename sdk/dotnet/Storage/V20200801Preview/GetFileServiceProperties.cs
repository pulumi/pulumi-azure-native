// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20200801Preview
{
    [Obsolete(@"Version 2020-08-01-preview will be removed in v2 of the provider.")]
    public static class GetFileServiceProperties
    {
        /// <summary>
        /// The properties of File services in storage account.
        /// </summary>
        public static Task<GetFileServicePropertiesResult> InvokeAsync(GetFileServicePropertiesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFileServicePropertiesResult>("azure-native:storage/v20200801preview:getFileServiceProperties", args ?? new GetFileServicePropertiesArgs(), options.WithDefaults());

        /// <summary>
        /// The properties of File services in storage account.
        /// </summary>
        public static Output<GetFileServicePropertiesResult> Invoke(GetFileServicePropertiesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFileServicePropertiesResult>("azure-native:storage/v20200801preview:getFileServiceProperties", args ?? new GetFileServicePropertiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFileServicePropertiesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the file Service within the specified storage account. File Service Name must be "default"
        /// </summary>
        [Input("fileServicesName", required: true)]
        public string FileServicesName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFileServicePropertiesArgs()
        {
        }
        public static new GetFileServicePropertiesArgs Empty => new GetFileServicePropertiesArgs();
    }

    public sealed class GetFileServicePropertiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the file Service within the specified storage account. File Service Name must be "default"
        /// </summary>
        [Input("fileServicesName", required: true)]
        public Input<string> FileServicesName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFileServicePropertiesInvokeArgs()
        {
        }
        public static new GetFileServicePropertiesInvokeArgs Empty => new GetFileServicePropertiesInvokeArgs();
    }


    [OutputType]
    public sealed class GetFileServicePropertiesResult
    {
        /// <summary>
        /// Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
        /// </summary>
        public readonly Outputs.CorsRulesResponse? Cors;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Protocol settings for file service
        /// </summary>
        public readonly Outputs.ProtocolSettingsResponse? ProtocolSettings;
        /// <summary>
        /// The file service properties for share soft delete.
        /// </summary>
        public readonly Outputs.DeleteRetentionPolicyResponse? ShareDeleteRetentionPolicy;
        /// <summary>
        /// Sku name and tier.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFileServicePropertiesResult(
            Outputs.CorsRulesResponse? cors,

            string id,

            string name,

            Outputs.ProtocolSettingsResponse? protocolSettings,

            Outputs.DeleteRetentionPolicyResponse? shareDeleteRetentionPolicy,

            Outputs.SkuResponse sku,

            string type)
        {
            Cors = cors;
            Id = id;
            Name = name;
            ProtocolSettings = protocolSettings;
            ShareDeleteRetentionPolicy = shareDeleteRetentionPolicy;
            Sku = sku;
            Type = type;
        }
    }
}
