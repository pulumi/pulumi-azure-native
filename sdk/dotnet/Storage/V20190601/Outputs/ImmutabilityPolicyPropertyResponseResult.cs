// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Storage.V20190601.Outputs
{

    [OutputType]
    public sealed class ImmutabilityPolicyPropertyResponseResult
    {
        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
        /// </summary>
        public readonly bool? AllowProtectedAppendWrites;
        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        public readonly int? ImmutabilityPeriodSinceCreationInDays;
        /// <summary>
        /// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private ImmutabilityPolicyPropertyResponseResult(
            bool? allowProtectedAppendWrites,

            int? immutabilityPeriodSinceCreationInDays,

            string state)
        {
            AllowProtectedAppendWrites = allowProtectedAppendWrites;
            ImmutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            State = state;
        }
    }
}
