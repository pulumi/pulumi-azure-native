// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Storage.V20190601
{
    /// <summary>
    /// The replication policy between two storage accounts. Multiple rules can be defined in one policy.
    /// </summary>
    public partial class ObjectReplicationPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// Required. Destination account name.
        /// </summary>
        [Output("destinationAccount")]
        public Output<string> DestinationAccount { get; private set; } = null!;

        /// <summary>
        /// Indicates when the policy is enabled on the source account.
        /// </summary>
        [Output("enabledTime")]
        public Output<string> EnabledTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A unique id for object replication policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The storage account object replication rules.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.ObjectReplicationPolicyRuleResponse>> Rules { get; private set; } = null!;

        /// <summary>
        /// Required. Source account name.
        /// </summary>
        [Output("sourceAccount")]
        public Output<string> SourceAccount { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectReplicationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectReplicationPolicy(string name, ObjectReplicationPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storage/v20190601:ObjectReplicationPolicy", name, args ?? new ObjectReplicationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectReplicationPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storage/v20190601:ObjectReplicationPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storage/latest:ObjectReplicationPolicy"},
                    new Pulumi.Alias { Type = "azure-nextgen:storage/v20200801preview:ObjectReplicationPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectReplicationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectReplicationPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ObjectReplicationPolicy(name, id, options);
        }
    }

    public sealed class ObjectReplicationPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Required. Destination account name.
        /// </summary>
        [Input("destinationAccount", required: true)]
        public Input<string> DestinationAccount { get; set; } = null!;

        /// <summary>
        /// The ID of object replication policy or 'default' if the policy ID is unknown.
        /// </summary>
        [Input("objectReplicationPolicyId", required: true)]
        public Input<string> ObjectReplicationPolicyId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.ObjectReplicationPolicyRuleArgs>? _rules;

        /// <summary>
        /// The storage account object replication rules.
        /// </summary>
        public InputList<Inputs.ObjectReplicationPolicyRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ObjectReplicationPolicyRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Required. Source account name.
        /// </summary>
        [Input("sourceAccount", required: true)]
        public Input<string> SourceAccount { get; set; } = null!;

        public ObjectReplicationPolicyArgs()
        {
        }
    }
}
