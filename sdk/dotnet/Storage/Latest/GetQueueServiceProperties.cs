// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Storage.Latest
{
    [Obsolete(@"The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-nextgen:storage:getQueueServiceProperties'.")]
    public static class GetQueueServiceProperties
    {
        /// <summary>
        /// The properties of a storage accountâ€™s Queue service.
        /// Latest API Version: 2021-01-01.
        /// </summary>
        public static Task<GetQueueServicePropertiesResult> InvokeAsync(GetQueueServicePropertiesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetQueueServicePropertiesResult>("azure-nextgen:storage/latest:getQueueServiceProperties", args ?? new GetQueueServicePropertiesArgs(), options.WithVersion());
    }


    public sealed class GetQueueServicePropertiesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'
        /// </summary>
        [Input("queueServiceName", required: true)]
        public string QueueServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetQueueServicePropertiesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetQueueServicePropertiesResult
    {
        /// <summary>
        /// Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.
        /// </summary>
        public readonly Outputs.CorsRulesResponse? Cors;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetQueueServicePropertiesResult(
            Outputs.CorsRulesResponse? cors,

            string id,

            string name,

            string type)
        {
            Cors = cors;
            Id = id;
            Name = name;
            Type = type;
        }
    }
}
