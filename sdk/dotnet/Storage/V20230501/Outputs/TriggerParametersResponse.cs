// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20230501.Outputs
{

    /// <summary>
    /// The trigger parameters update for the storage task assignment execution
    /// </summary>
    [OutputType]
    public sealed class TriggerParametersResponse
    {
        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        public readonly string? EndBy;
        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        public readonly string? IntervalUnit;
        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        public readonly string? StartFrom;
        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        public readonly string? StartOn;

        [OutputConstructor]
        private TriggerParametersResponse(
            string? endBy,

            int? interval,

            string? intervalUnit,

            string? startFrom,

            string? startOn)
        {
            EndBy = endBy;
            Interval = interval;
            IntervalUnit = intervalUnit;
            StartFrom = startFrom;
            StartOn = startOn;
        }
    }
}
