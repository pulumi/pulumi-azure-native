// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevOpsInfrastructure
{
    public static class GetPool
    {
        /// <summary>
        /// Get a Pool
        /// 
        /// Uses Azure REST API version 2025-01-21.
        /// 
        /// Other available API versions: 2023-10-30-preview, 2023-12-13-preview, 2024-03-26-preview, 2024-04-04-preview, 2024-10-19, 2025-09-20. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devopsinfrastructure [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetPoolResult> InvokeAsync(GetPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPoolResult>("azure-native:devopsinfrastructure:getPool", args ?? new GetPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Pool
        /// 
        /// Uses Azure REST API version 2025-01-21.
        /// 
        /// Other available API versions: 2023-10-30-preview, 2023-12-13-preview, 2024-03-26-preview, 2024-04-04-preview, 2024-10-19, 2025-09-20. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devopsinfrastructure [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPoolResult> Invoke(GetPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPoolResult>("azure-native:devopsinfrastructure:getPool", args ?? new GetPoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Pool
        /// 
        /// Uses Azure REST API version 2025-01-21.
        /// 
        /// Other available API versions: 2023-10-30-preview, 2023-12-13-preview, 2024-03-26-preview, 2024-04-04-preview, 2024-10-19, 2025-09-20. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devopsinfrastructure [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPoolResult> Invoke(GetPoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPoolResult>("azure-native:devopsinfrastructure:getPool", args ?? new GetPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the pool. It needs to be globally unique.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPoolArgs()
        {
        }
        public static new GetPoolArgs Empty => new GetPoolArgs();
    }

    public sealed class GetPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the pool. It needs to be globally unique.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPoolInvokeArgs()
        {
        }
        public static new GetPoolInvokeArgs Empty => new GetPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetPoolResult
    {
        /// <summary>
        /// Defines how the machine will be handled once it executed a job.
        /// </summary>
        public readonly Union<Outputs.StatefulResponse, Outputs.StatelessAgentProfileResponse> AgentProfile;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The resource id of the DevCenter Project the pool belongs to.
        /// </summary>
        public readonly string DevCenterProjectResourceId;
        /// <summary>
        /// Defines the type of fabric the agent will run on.
        /// </summary>
        public readonly Outputs.VmssFabricProfileResponse FabricProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Defines how many resources can there be created at any given time.
        /// </summary>
        public readonly int MaximumConcurrency;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the organization in which the pool will be used.
        /// </summary>
        public readonly Union<Outputs.AzureDevOpsOrganizationProfileResponse, Outputs.GitHubOrganizationProfileResponse> OrganizationProfile;
        /// <summary>
        /// The status of the current operation.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPoolResult(
            Union<Outputs.StatefulResponse, Outputs.StatelessAgentProfileResponse> agentProfile,

            string azureApiVersion,

            string devCenterProjectResourceId,

            Outputs.VmssFabricProfileResponse fabricProfile,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            int maximumConcurrency,

            string name,

            Union<Outputs.AzureDevOpsOrganizationProfileResponse, Outputs.GitHubOrganizationProfileResponse> organizationProfile,

            string? provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AgentProfile = agentProfile;
            AzureApiVersion = azureApiVersion;
            DevCenterProjectResourceId = devCenterProjectResourceId;
            FabricProfile = fabricProfile;
            Id = id;
            Identity = identity;
            Location = location;
            MaximumConcurrency = maximumConcurrency;
            Name = name;
            OrganizationProfile = organizationProfile;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
