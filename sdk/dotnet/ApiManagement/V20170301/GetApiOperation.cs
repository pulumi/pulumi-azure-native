// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ApiManagement.V20170301
{
    public static class GetApiOperation
    {
        public static Task<GetApiOperationResult> InvokeAsync(GetApiOperationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApiOperationResult>("azure-nextgen:apimanagement/v20170301:getApiOperation", args ?? new GetApiOperationArgs(), options.WithVersion());
    }


    public sealed class GetApiOperationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// Operation identifier within an API. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("operationId", required: true)]
        public string OperationId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetApiOperationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApiOperationResult
    {
        /// <summary>
        /// Description of the operation. May include HTML formatting tags.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Operation Name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
        /// </summary>
        public readonly string Method;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Operation Policies
        /// </summary>
        public readonly string? Policies;
        /// <summary>
        /// An entity containing request details.
        /// </summary>
        public readonly Outputs.RequestContractResponse? Request;
        /// <summary>
        /// Array of Operation responses.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResponseContractResponse> Responses;
        /// <summary>
        /// Collection of URL template parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.ParameterContractResponse> TemplateParameters;
        /// <summary>
        /// Resource type for API Management resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
        /// </summary>
        public readonly string UrlTemplate;

        [OutputConstructor]
        private GetApiOperationResult(
            string? description,

            string displayName,

            string method,

            string name,

            string? policies,

            Outputs.RequestContractResponse? request,

            ImmutableArray<Outputs.ResponseContractResponse> responses,

            ImmutableArray<Outputs.ParameterContractResponse> templateParameters,

            string type,

            string urlTemplate)
        {
            Description = description;
            DisplayName = displayName;
            Method = method;
            Name = name;
            Policies = policies;
            Request = request;
            Responses = responses;
            TemplateParameters = templateParameters;
            Type = type;
            UrlTemplate = urlTemplate;
        }
    }
}
