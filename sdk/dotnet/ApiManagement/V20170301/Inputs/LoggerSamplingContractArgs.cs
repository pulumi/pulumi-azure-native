// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ApiManagement.V20170301.Inputs
{

    /// <summary>
    /// Sampling settings contract.
    /// </summary>
    public sealed class LoggerSamplingContractArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rate re-evaluation interval in ISO8601 format.
        /// </summary>
        [Input("evaluationInterval")]
        public Input<string>? EvaluationInterval { get; set; }

        /// <summary>
        /// Initial sampling rate.
        /// </summary>
        [Input("initialPercentage")]
        public Input<double>? InitialPercentage { get; set; }

        /// <summary>
        /// Maximum allowed rate of sampling.
        /// </summary>
        [Input("maxPercentage")]
        public Input<double>? MaxPercentage { get; set; }

        /// <summary>
        /// Target rate of telemetry items per second.
        /// </summary>
        [Input("maxTelemetryItemsPerSecond")]
        public Input<int>? MaxTelemetryItemsPerSecond { get; set; }

        /// <summary>
        /// Minimum allowed rate of sampling.
        /// </summary>
        [Input("minPercentage")]
        public Input<double>? MinPercentage { get; set; }

        /// <summary>
        /// Moving average ration assigned to most recent value.
        /// </summary>
        [Input("movingAverageRatio")]
        public Input<double>? MovingAverageRatio { get; set; }

        /// <summary>
        /// Rate of sampling for fixed-rate sampling.
        /// </summary>
        [Input("percentage")]
        public Input<double>? Percentage { get; set; }

        /// <summary>
        /// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
        /// </summary>
        [Input("percentageDecreaseTimeout")]
        public Input<string>? PercentageDecreaseTimeout { get; set; }

        /// <summary>
        /// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
        /// </summary>
        [Input("percentageIncreaseTimeout")]
        public Input<string>? PercentageIncreaseTimeout { get; set; }

        /// <summary>
        /// Sampling type.
        /// </summary>
        [Input("samplingType")]
        public Input<string>? SamplingType { get; set; }

        public LoggerSamplingContractArgs()
        {
        }
    }
}
