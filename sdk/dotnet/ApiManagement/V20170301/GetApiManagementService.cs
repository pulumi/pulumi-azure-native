// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20170301
{
    public static class GetApiManagementService
    {
        /// <summary>
        /// Gets an API Management service resource description.
        /// </summary>
        public static Task<GetApiManagementServiceResult> InvokeAsync(GetApiManagementServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiManagementServiceResult>("azure-native:apimanagement/v20170301:getApiManagementService", args ?? new GetApiManagementServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an API Management service resource description.
        /// </summary>
        public static Output<GetApiManagementServiceResult> Invoke(GetApiManagementServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiManagementServiceResult>("azure-native:apimanagement/v20170301:getApiManagementService", args ?? new GetApiManagementServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiManagementServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetApiManagementServiceArgs()
        {
        }
        public static new GetApiManagementServiceArgs Empty => new GetApiManagementServiceArgs();
    }

    public sealed class GetApiManagementServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetApiManagementServiceInvokeArgs()
        {
        }
        public static new GetApiManagementServiceInvokeArgs Empty => new GetApiManagementServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiManagementServiceResult
    {
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed service identity of the Api Management service.
        /// </summary>
        public readonly Outputs.ApiManagementServiceIdentityResponse? Identity;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the API Management service.
        /// </summary>
        public readonly Outputs.ApiManagementServicePropertiesResponse Properties;
        /// <summary>
        /// SKU properties of the API Management service.
        /// </summary>
        public readonly Outputs.ApiManagementServiceSkuPropertiesResponse Sku;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type for API Management resource is set to Microsoft.ApiManagement.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApiManagementServiceResult(
            string etag,

            string id,

            Outputs.ApiManagementServiceIdentityResponse? identity,

            string location,

            string name,

            Outputs.ApiManagementServicePropertiesResponse properties,

            Outputs.ApiManagementServiceSkuPropertiesResponse sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
