// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class GetPolicyFragment
    {
        /// <summary>
        /// Gets a policy fragment.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01.
        /// </summary>
        public static Task<GetPolicyFragmentResult> InvokeAsync(GetPolicyFragmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyFragmentResult>("azure-native:apimanagement:getPolicyFragment", args ?? new GetPolicyFragmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a policy fragment.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01.
        /// </summary>
        public static Output<GetPolicyFragmentResult> Invoke(GetPolicyFragmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyFragmentResult>("azure-native:apimanagement:getPolicyFragment", args ?? new GetPolicyFragmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyFragmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Policy fragment content format.
        /// </summary>
        [Input("format")]
        public string? Format { get; set; }

        /// <summary>
        /// A resource identifier.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetPolicyFragmentArgs()
        {
        }
        public static new GetPolicyFragmentArgs Empty => new GetPolicyFragmentArgs();
    }

    public sealed class GetPolicyFragmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Policy fragment content format.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// A resource identifier.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetPolicyFragmentInvokeArgs()
        {
        }
        public static new GetPolicyFragmentInvokeArgs Empty => new GetPolicyFragmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyFragmentResult
    {
        /// <summary>
        /// Policy fragment description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Format of the policy fragment content.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Contents of the policy fragment.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetPolicyFragmentResult(
            string? description,

            string? format,

            string id,

            string name,

            string type,

            string value)
        {
            Description = description;
            Format = format;
            Id = id;
            Name = name;
            Type = type;
            Value = value;
        }
    }
}
