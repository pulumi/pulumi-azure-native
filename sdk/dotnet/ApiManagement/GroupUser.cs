// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    /// <summary>
    /// User details.
    /// 
    /// Uses Azure REST API version 2022-09-01-preview. In version 2.x of the Azure Native provider, it used API version 2022-08-01.
    /// 
    /// Other available API versions: 2021-04-01-preview, 2021-08-01, 2021-12-01-preview, 2022-04-01-preview, 2022-08-01, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01, 2024-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native apimanagement [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:apimanagement:GroupUser")]
    public partial class GroupUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Email address.
        /// </summary>
        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        /// <summary>
        /// First name.
        /// </summary>
        [Output("firstName")]
        public Output<string?> FirstName { get; private set; } = null!;

        /// <summary>
        /// Collection of groups user is part of.
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.GroupContractPropertiesResponse>> Groups { get; private set; } = null!;

        /// <summary>
        /// Collection of user identities.
        /// </summary>
        [Output("identities")]
        public Output<ImmutableArray<Outputs.UserIdentityContractResponse>> Identities { get; private set; } = null!;

        /// <summary>
        /// Last name.
        /// </summary>
        [Output("lastName")]
        public Output<string?> LastName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional note about a user set by the administrator.
        /// </summary>
        [Output("note")]
        public Output<string?> Note { get; private set; } = null!;

        /// <summary>
        /// Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        [Output("registrationDate")]
        public Output<string?> RegistrationDate { get; private set; } = null!;

        /// <summary>
        /// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GroupUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupUser(string name, GroupUserArgs args, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:GroupUser", name, args ?? new GroupUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupUser(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:GroupUser", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20170301:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180101:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220801:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220901preview:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230301preview:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230501preview:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230901preview:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20240501:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20240601preview:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20170301:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20180101:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20180601preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20190101:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20191201:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20191201preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20200601preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20201201:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20210101preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20210401preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20210801:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20211201preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20220401preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20220801:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20220901preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20230301preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20230501preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20230901preview:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20240501:apimanagement:GroupUser" },
                    new global::Pulumi.Alias { Type = "azure-native_apimanagement_v20240601preview:apimanagement:GroupUser" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupUser Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GroupUser(name, id, options);
        }
    }

    public sealed class GroupUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// User identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public GroupUserArgs()
        {
        }
        public static new GroupUserArgs Empty => new GroupUserArgs();
    }
}
