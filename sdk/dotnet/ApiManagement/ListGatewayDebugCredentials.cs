// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class ListGatewayDebugCredentials
    {
        /// <summary>
        /// Create new debug credentials for gateway.
        /// Azure REST API version: 2023-03-01-preview.
        /// 
        /// Other available API versions: 2023-05-01-preview, 2023-09-01-preview.
        /// </summary>
        public static Task<ListGatewayDebugCredentialsResult> InvokeAsync(ListGatewayDebugCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListGatewayDebugCredentialsResult>("azure-native:apimanagement:listGatewayDebugCredentials", args ?? new ListGatewayDebugCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// Create new debug credentials for gateway.
        /// Azure REST API version: 2023-03-01-preview.
        /// 
        /// Other available API versions: 2023-05-01-preview, 2023-09-01-preview.
        /// </summary>
        public static Output<ListGatewayDebugCredentialsResult> Invoke(ListGatewayDebugCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListGatewayDebugCredentialsResult>("azure-native:apimanagement:listGatewayDebugCredentials", args ?? new ListGatewayDebugCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListGatewayDebugCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full resource Id of an API.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used.
        /// </summary>
        [Input("credentialsExpireAfter")]
        public string? CredentialsExpireAfter { get; set; }

        /// <summary>
        /// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
        /// </summary>
        [Input("gatewayId", required: true)]
        public string GatewayId { get; set; } = null!;

        [Input("purposes", required: true)]
        private List<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>>? _purposes;

        /// <summary>
        /// Purposes of debug credential.
        /// </summary>
        public List<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>> Purposes
        {
            get => _purposes ?? (_purposes = new List<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>>());
            set => _purposes = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public ListGatewayDebugCredentialsArgs()
        {
        }
        public static new ListGatewayDebugCredentialsArgs Empty => new ListGatewayDebugCredentialsArgs();
    }

    public sealed class ListGatewayDebugCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full resource Id of an API.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used.
        /// </summary>
        [Input("credentialsExpireAfter")]
        public Input<string>? CredentialsExpireAfter { get; set; }

        /// <summary>
        /// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        [Input("purposes", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>>? _purposes;

        /// <summary>
        /// Purposes of debug credential.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>> Purposes
        {
            get => _purposes ?? (_purposes = new InputList<Union<string, Pulumi.AzureNative.ApiManagement.GatewayListDebugCredentialsContractPurpose>>());
            set => _purposes = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ListGatewayDebugCredentialsInvokeArgs()
        {
        }
        public static new ListGatewayDebugCredentialsInvokeArgs Empty => new ListGatewayDebugCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class ListGatewayDebugCredentialsResult
    {
        /// <summary>
        /// Gateway debug token.
        /// </summary>
        public readonly string? Token;

        [OutputConstructor]
        private ListGatewayDebugCredentialsResult(string? token)
        {
            Token = token;
        }
    }
}
