// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20230301Preview.Outputs
{

    /// <summary>
    /// KeyVault contract details.
    /// </summary>
    [OutputType]
    public sealed class KeyVaultContractPropertiesResponse
    {
        /// <summary>
        /// Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
        /// </summary>
        public readonly string? IdentityClientId;
        /// <summary>
        /// Last time sync and refresh status of secret from key vault.
        /// </summary>
        public readonly Outputs.KeyVaultLastAccessStatusContractPropertiesResponse? LastStatus;
        /// <summary>
        /// Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
        /// </summary>
        public readonly string? SecretIdentifier;

        [OutputConstructor]
        private KeyVaultContractPropertiesResponse(
            string? identityClientId,

            Outputs.KeyVaultLastAccessStatusContractPropertiesResponse? lastStatus,

            string? secretIdentifier)
        {
            IdentityClientId = identityClientId;
            LastStatus = lastStatus;
            SecretIdentifier = secretIdentifier;
        }
    }
}
