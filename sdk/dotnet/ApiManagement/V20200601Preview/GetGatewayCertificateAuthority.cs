// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ApiManagement.V20200601Preview
{
    public static class GetGatewayCertificateAuthority
    {
        /// <summary>
        /// Gateway certificate authority details.
        /// </summary>
        public static Task<GetGatewayCertificateAuthorityResult> InvokeAsync(GetGatewayCertificateAuthorityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewayCertificateAuthorityResult>("azure-nextgen:apimanagement/v20200601preview:getGatewayCertificateAuthority", args ?? new GetGatewayCertificateAuthorityArgs(), options.WithVersion());
    }


    public sealed class GetGatewayCertificateAuthorityArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the certificate entity. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("certificateId", required: true)]
        public string CertificateId { get; set; } = null!;

        /// <summary>
        /// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
        /// </summary>
        [Input("gatewayId", required: true)]
        public string GatewayId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetGatewayCertificateAuthorityArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGatewayCertificateAuthorityResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Determines whether certificate authority is trusted.
        /// </summary>
        public readonly bool? IsTrusted;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type for API Management resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGatewayCertificateAuthorityResult(
            string id,

            bool? isTrusted,

            string name,

            string type)
        {
            Id = id;
            IsTrusted = isTrusted;
            Name = name;
            Type = type;
        }
    }
}
