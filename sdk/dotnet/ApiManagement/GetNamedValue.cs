// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class GetNamedValue
    {
        /// <summary>
        /// Gets the details of the named value specified by its identifier.
        /// Azure REST API version: 2022-08-01.
        /// </summary>
        public static Task<GetNamedValueResult> InvokeAsync(GetNamedValueArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamedValueResult>("azure-native:apimanagement:getNamedValue", args ?? new GetNamedValueArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of the named value specified by its identifier.
        /// Azure REST API version: 2022-08-01.
        /// </summary>
        public static Output<GetNamedValueResult> Invoke(GetNamedValueInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamedValueResult>("azure-native:apimanagement:getNamedValue", args ?? new GetNamedValueInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamedValueArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the NamedValue.
        /// </summary>
        [Input("namedValueId", required: true)]
        public string NamedValueId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetNamedValueArgs()
        {
        }
        public static new GetNamedValueArgs Empty => new GetNamedValueArgs();
    }

    public sealed class GetNamedValueInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the NamedValue.
        /// </summary>
        [Input("namedValueId", required: true)]
        public Input<string> NamedValueId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetNamedValueInvokeArgs()
        {
        }
        public static new GetNamedValueInvokeArgs Empty => new GetNamedValueInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamedValueResult
    {
        /// <summary>
        /// Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// KeyVault location details of the namedValue.
        /// </summary>
        public readonly Outputs.KeyVaultContractPropertiesResponse? KeyVault;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Determines whether the value is a secret and should be encrypted or not. Default value is false.
        /// </summary>
        public readonly bool? Secret;
        /// <summary>
        /// Optional tags that when provided can be used to filter the NamedValue list.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private GetNamedValueResult(
            string displayName,

            string id,

            Outputs.KeyVaultContractPropertiesResponse? keyVault,

            string name,

            bool? secret,

            ImmutableArray<string> tags,

            string type,

            string? value)
        {
            DisplayName = displayName;
            Id = id;
            KeyVault = keyVault;
            Name = name;
            Secret = secret;
            Tags = tags;
            Type = type;
            Value = value;
        }
    }
}
