// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20240501
{
    public static class GetWorkspaceLogger
    {
        /// <summary>
        /// Gets the details of the logger specified by its identifier.
        /// </summary>
        public static Task<GetWorkspaceLoggerResult> InvokeAsync(GetWorkspaceLoggerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceLoggerResult>("azure-native:apimanagement/v20240501:getWorkspaceLogger", args ?? new GetWorkspaceLoggerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of the logger specified by its identifier.
        /// </summary>
        public static Output<GetWorkspaceLoggerResult> Invoke(GetWorkspaceLoggerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceLoggerResult>("azure-native:apimanagement/v20240501:getWorkspaceLogger", args ?? new GetWorkspaceLoggerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceLoggerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Logger identifier. Must be unique in the API Management service instance.
        /// </summary>
        [Input("loggerId", required: true)]
        public string LoggerId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// Workspace identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceLoggerArgs()
        {
        }
        public static new GetWorkspaceLoggerArgs Empty => new GetWorkspaceLoggerArgs();
    }

    public sealed class GetWorkspaceLoggerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Logger identifier. Must be unique in the API Management service instance.
        /// </summary>
        [Input("loggerId", required: true)]
        public Input<string> LoggerId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Workspace identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceLoggerInvokeArgs()
        {
        }
        public static new GetWorkspaceLoggerInvokeArgs Empty => new GetWorkspaceLoggerInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceLoggerResult
    {
        /// <summary>
        /// The name and SendRule connection string of the event hub for azureEventHub logger.
        /// Instrumentation key for applicationInsights logger.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Credentials;
        /// <summary>
        /// Logger description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether records are buffered in the logger before publishing. Default is assumed to be true.
        /// </summary>
        public readonly bool? IsBuffered;
        /// <summary>
        /// Logger type.
        /// </summary>
        public readonly string LoggerType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkspaceLoggerResult(
            ImmutableDictionary<string, string>? credentials,

            string? description,

            string id,

            bool? isBuffered,

            string loggerType,

            string name,

            string? resourceId,

            string type)
        {
            Credentials = credentials;
            Description = description;
            Id = id;
            IsBuffered = isBuffered;
            LoggerType = loggerType;
            Name = name;
            ResourceId = resourceId;
            Type = type;
        }
    }
}
