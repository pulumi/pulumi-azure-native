// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ApiManagement.V20180101.Outputs
{

    [OutputType]
    public sealed class SubscriptionContractPropertiesResponseResult
    {
        /// <summary>
        /// Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The name of the subscription, or null if the subscription has no name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string? ExpirationDate;
        /// <summary>
        /// Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string? NotificationDate;
        /// <summary>
        /// Subscription primary key.
        /// </summary>
        public readonly string PrimaryKey;
        /// <summary>
        /// The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.
        /// </summary>
        public readonly string ProductId;
        /// <summary>
        /// Subscription secondary key.
        /// </summary>
        public readonly string SecondaryKey;
        /// <summary>
        /// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string? StartDate;
        /// <summary>
        /// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Optional subscription comment added by an administrator.
        /// </summary>
        public readonly string? StateComment;
        /// <summary>
        /// The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private SubscriptionContractPropertiesResponseResult(
            string createdDate,

            string? displayName,

            string? endDate,

            string? expirationDate,

            string? notificationDate,

            string primaryKey,

            string productId,

            string secondaryKey,

            string? startDate,

            string state,

            string? stateComment,

            string userId)
        {
            CreatedDate = createdDate;
            DisplayName = displayName;
            EndDate = endDate;
            ExpirationDate = expirationDate;
            NotificationDate = notificationDate;
            PrimaryKey = primaryKey;
            ProductId = productId;
            SecondaryKey = secondaryKey;
            StartDate = startDate;
            State = state;
            StateComment = stateComment;
            UserId = userId;
        }
    }
}
