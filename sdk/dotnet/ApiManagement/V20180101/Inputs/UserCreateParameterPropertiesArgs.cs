// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ApiManagement.V20180101.Inputs
{

    /// <summary>
    /// Parameters supplied to the Create User operation.
    /// </summary>
    public sealed class UserCreateParameterPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines the type of confirmation e-mail that will be sent to the newly created user.
        /// </summary>
        [Input("confirmation")]
        public Input<string>? Confirmation { get; set; }

        /// <summary>
        /// Email address. Must not be empty and must be unique within the service instance.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// First name.
        /// </summary>
        [Input("firstName", required: true)]
        public Input<string> FirstName { get; set; } = null!;

        [Input("identities")]
        private InputList<Inputs.UserIdentityContractArgs>? _identities;

        /// <summary>
        /// Collection of user identities.
        /// </summary>
        public InputList<Inputs.UserIdentityContractArgs> Identities
        {
            get => _identities ?? (_identities = new InputList<Inputs.UserIdentityContractArgs>());
            set => _identities = value;
        }

        /// <summary>
        /// Last name.
        /// </summary>
        [Input("lastName", required: true)]
        public Input<string> LastName { get; set; } = null!;

        /// <summary>
        /// Optional note about a user set by the administrator.
        /// </summary>
        [Input("note")]
        public Input<string>? Note { get; set; }

        /// <summary>
        /// User Password. If no value is provided, a default password is generated.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public UserCreateParameterPropertiesArgs()
        {
        }
    }
}
