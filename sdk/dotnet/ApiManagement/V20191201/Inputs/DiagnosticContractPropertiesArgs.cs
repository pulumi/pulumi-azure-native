// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ApiManagement.V20191201.Inputs
{

    /// <summary>
    /// Diagnostic Entity Properties
    /// </summary>
    public sealed class DiagnosticContractPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies for what type of messages sampling settings should not apply.
        /// </summary>
        [Input("alwaysLog")]
        public Input<string>? AlwaysLog { get; set; }

        /// <summary>
        /// Diagnostic settings for incoming/outgoing HTTP messages to the Backend
        /// </summary>
        [Input("backend")]
        public Input<Inputs.PipelineDiagnosticSettingsArgs>? Backend { get; set; }

        /// <summary>
        /// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
        /// </summary>
        [Input("frontend")]
        public Input<Inputs.PipelineDiagnosticSettingsArgs>? Frontend { get; set; }

        /// <summary>
        /// Sets correlation protocol to use for Application Insights diagnostics.
        /// </summary>
        [Input("httpCorrelationProtocol")]
        public Input<string>? HttpCorrelationProtocol { get; set; }

        /// <summary>
        /// Log the ClientIP. Default is false.
        /// </summary>
        [Input("logClientIp")]
        public Input<bool>? LogClientIp { get; set; }

        /// <summary>
        /// Resource Id of a target logger.
        /// </summary>
        [Input("loggerId", required: true)]
        public Input<string> LoggerId { get; set; } = null!;

        /// <summary>
        /// Sampling settings for Diagnostic.
        /// </summary>
        [Input("sampling")]
        public Input<Inputs.SamplingSettingsArgs>? Sampling { get; set; }

        /// <summary>
        /// The verbosity level applied to traces emitted by trace policies.
        /// </summary>
        [Input("verbosity")]
        public Input<string>? Verbosity { get; set; }

        public DiagnosticContractPropertiesArgs()
        {
        }
    }
}
