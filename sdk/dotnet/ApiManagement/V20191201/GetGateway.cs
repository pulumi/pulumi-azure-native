// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ApiManagement.V20191201
{
    public static class GetGateway
    {
        public static Task<GetGatewayResult> InvokeAsync(GetGatewayArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewayResult>("azure-nextgen:apimanagement/v20191201:getGateway", args ?? new GetGatewayArgs(), options.WithVersion());
    }


    public sealed class GetGatewayArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
        /// </summary>
        [Input("gatewayId", required: true)]
        public string GatewayId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetGatewayArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGatewayResult
    {
        /// <summary>
        /// Gateway description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gateway location.
        /// </summary>
        public readonly Outputs.ResourceLocationDataContractResponse? LocationData;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type for API Management resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGatewayResult(
            string? description,

            Outputs.ResourceLocationDataContractResponse? locationData,

            string name,

            string type)
        {
            Description = description;
            LocationData = locationData;
            Name = name;
            Type = type;
        }
    }
}
