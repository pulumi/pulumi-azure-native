// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20220901Preview
{
    /// <summary>
    /// OpenId Connect Provider details.
    /// </summary>
    [AzureNativeResourceType("azure-native:apimanagement/v20220901preview:OpenIdConnectProvider")]
    public partial class OpenIdConnectProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Client ID of developer console which is the client application.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// Client Secret of developer console which is the client application.
        /// </summary>
        [Output("clientSecret")]
        public Output<string?> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// User-friendly description of OpenID Connect Provider.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// User-friendly OpenID Connect Provider name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Metadata endpoint URI.
        /// </summary>
        [Output("metadataEndpoint")]
        public Output<string> MetadataEndpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided.
        /// </summary>
        [Output("useInApiDocumentation")]
        public Output<bool?> UseInApiDocumentation { get; private set; } = null!;

        /// <summary>
        /// If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided.
        /// </summary>
        [Output("useInTestConsole")]
        public Output<bool?> UseInTestConsole { get; private set; } = null!;


        /// <summary>
        /// Create a OpenIdConnectProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OpenIdConnectProvider(string name, OpenIdConnectProviderArgs args, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement/v20220901preview:OpenIdConnectProvider", name, args ?? new OpenIdConnectProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OpenIdConnectProvider(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement/v20220901preview:OpenIdConnectProvider", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20160707:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20161010:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20170301:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180101:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180601preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20190101:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20200601preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20201201:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210101preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210401preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210801:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20211201preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220401preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220801:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230301preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230501preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230901preview:OpenIdConnectProvider" },
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20240501:OpenIdConnectProvider" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OpenIdConnectProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OpenIdConnectProvider Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OpenIdConnectProvider(name, id, options);
        }
    }

    public sealed class OpenIdConnectProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Client ID of developer console which is the client application.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Client Secret of developer console which is the client application.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// User-friendly description of OpenID Connect Provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User-friendly OpenID Connect Provider name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Metadata endpoint URI.
        /// </summary>
        [Input("metadataEndpoint", required: true)]
        public Input<string> MetadataEndpoint { get; set; } = null!;

        /// <summary>
        /// Identifier of the OpenID Connect Provider.
        /// </summary>
        [Input("opid")]
        public Input<string>? Opid { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided.
        /// </summary>
        [Input("useInApiDocumentation")]
        public Input<bool>? UseInApiDocumentation { get; set; }

        /// <summary>
        /// If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided.
        /// </summary>
        [Input("useInTestConsole")]
        public Input<bool>? UseInTestConsole { get; set; }

        public OpenIdConnectProviderArgs()
        {
        }
        public static new OpenIdConnectProviderArgs Empty => new OpenIdConnectProviderArgs();
    }
}
