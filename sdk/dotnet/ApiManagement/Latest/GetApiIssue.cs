// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ApiManagement.Latest
{
    public static class GetApiIssue
    {
        public static Task<GetApiIssueResult> InvokeAsync(GetApiIssueArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApiIssueResult>("azure-nextgen:apimanagement/latest:getApiIssue", args ?? new GetApiIssueArgs(), options.WithVersion());
    }


    public sealed class GetApiIssueArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// API identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// Expand the comment attachments. 
        /// </summary>
        [Input("expandCommentsAttachments")]
        public bool? ExpandCommentsAttachments { get; set; }

        /// <summary>
        /// Issue identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("issueId", required: true)]
        public string IssueId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetApiIssueArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApiIssueResult
    {
        /// <summary>
        /// A resource identifier for the API the issue was created for.
        /// </summary>
        public readonly string? ApiId;
        /// <summary>
        /// Date and time when the issue was created.
        /// </summary>
        public readonly string? CreatedDate;
        /// <summary>
        /// Text describing the issue.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status of the issue.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The issue title.
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// Resource type for API Management resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A resource identifier for the user created the issue.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetApiIssueResult(
            string? apiId,

            string? createdDate,

            string description,

            string name,

            string? state,

            string title,

            string type,

            string userId)
        {
            ApiId = apiId;
            CreatedDate = createdDate;
            Description = description;
            Name = name;
            State = state;
            Title = title;
            Type = type;
            UserId = userId;
        }
    }
}
