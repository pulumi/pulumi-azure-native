// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ApiManagement.Inputs
{

    /// <summary>
    /// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
    /// </summary>
    public sealed class IdentityProviderContractPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        [Input("allowedTenants")]
        private InputList<string>? _allowedTenants;

        /// <summary>
        /// List of Allowed Tenants when configuring Azure Active Directory login.
        /// </summary>
        public InputList<string> AllowedTenants
        {
            get => _allowedTenants ?? (_allowedTenants = new InputList<string>());
            set => _allowedTenants = value;
        }

        /// <summary>
        /// OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
        /// </summary>
        [Input("authority")]
        public Input<string>? Authority { get; set; }

        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
        /// </summary>
        [Input("passwordResetPolicyName")]
        public Input<string>? PasswordResetPolicyName { get; set; }

        /// <summary>
        /// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
        /// </summary>
        [Input("profileEditingPolicyName")]
        public Input<string>? ProfileEditingPolicyName { get; set; }

        /// <summary>
        /// Signin Policy Name. Only applies to AAD B2C Identity Provider.
        /// </summary>
        [Input("signinPolicyName")]
        public Input<string>? SigninPolicyName { get; set; }

        /// <summary>
        /// The TenantId to use instead of Common when logging into Active Directory
        /// </summary>
        [Input("signinTenant")]
        public Input<string>? SigninTenant { get; set; }

        /// <summary>
        /// Signup Policy Name. Only applies to AAD B2C Identity Provider.
        /// </summary>
        [Input("signupPolicyName")]
        public Input<string>? SignupPolicyName { get; set; }

        /// <summary>
        /// Identity Provider Type identifier.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public IdentityProviderContractPropertiesResponseArgs()
        {
        }
    }
}
