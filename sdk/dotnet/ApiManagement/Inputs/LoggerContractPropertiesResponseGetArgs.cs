// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ApiManagement.Inputs
{

    /// <summary>
    /// The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
    /// </summary>
    public sealed class LoggerContractPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        [Input("credentials", required: true)]
        private InputMap<string>? _credentials;

        /// <summary>
        /// The name and SendRule connection string of the event hub for azureEventHub logger.
        /// Instrumentation key for applicationInsights logger.
        /// </summary>
        public InputMap<string> Credentials
        {
            get => _credentials ?? (_credentials = new InputMap<string>());
            set => _credentials = value;
        }

        /// <summary>
        /// Logger description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether records are buffered in the logger before publishing. Default is assumed to be true.
        /// </summary>
        [Input("isBuffered")]
        public Input<bool>? IsBuffered { get; set; }

        /// <summary>
        /// Logger type.
        /// </summary>
        [Input("loggerType", required: true)]
        public Input<string> LoggerType { get; set; } = null!;

        /// <summary>
        /// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public LoggerContractPropertiesResponseGetArgs()
        {
        }
    }
}
