// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20210801
{
    public static class GetApi
    {
        /// <summary>
        /// Gets the details of the API specified by its identifier.
        /// </summary>
        public static Task<GetApiResult> InvokeAsync(GetApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiResult>("azure-native:apimanagement/v20210801:getApi", args ?? new GetApiArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of the API specified by its identifier.
        /// </summary>
        public static Output<GetApiResult> Invoke(GetApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiResult>("azure-native:apimanagement/v20210801:getApi", args ?? new GetApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetApiArgs()
        {
        }
        public static new GetApiArgs Empty => new GetApiArgs();
    }

    public sealed class GetApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetApiInvokeArgs()
        {
        }
        public static new GetApiInvokeArgs Empty => new GetApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiResult
    {
        /// <summary>
        /// Describes the revision of the API. If no value is provided, default revision 1 is created
        /// </summary>
        public readonly string? ApiRevision;
        /// <summary>
        /// Description of the API Revision.
        /// </summary>
        public readonly string? ApiRevisionDescription;
        /// <summary>
        /// Type of API.
        /// </summary>
        public readonly string? ApiType;
        /// <summary>
        /// Indicates the version identifier of the API if the API is versioned
        /// </summary>
        public readonly string? ApiVersion;
        /// <summary>
        /// Description of the API Version.
        /// </summary>
        public readonly string? ApiVersionDescription;
        /// <summary>
        /// Version set details
        /// </summary>
        public readonly Outputs.ApiVersionSetContractDetailsResponse? ApiVersionSet;
        /// <summary>
        /// A resource identifier for the related ApiVersionSet.
        /// </summary>
        public readonly string? ApiVersionSetId;
        /// <summary>
        /// Collection of authentication settings included into this API.
        /// </summary>
        public readonly Outputs.AuthenticationSettingsContractResponse? AuthenticationSettings;
        /// <summary>
        /// Contact information for the API.
        /// </summary>
        public readonly Outputs.ApiContactInformationResponse? Contact;
        /// <summary>
        /// Description of the API. May include HTML formatting tags.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// API name. Must be 1 to 300 characters long.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if API revision is current api revision.
        /// </summary>
        public readonly bool? IsCurrent;
        /// <summary>
        /// Indicates if API revision is accessible via the gateway.
        /// </summary>
        public readonly bool IsOnline;
        /// <summary>
        /// License information for the API.
        /// </summary>
        public readonly Outputs.ApiLicenseInformationResponse? License;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Describes on which protocols the operations in this API can be invoked.
        /// </summary>
        public readonly ImmutableArray<string> Protocols;
        /// <summary>
        /// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
        /// </summary>
        public readonly string? ServiceUrl;
        /// <summary>
        /// API identifier of the source API.
        /// </summary>
        public readonly string? SourceApiId;
        /// <summary>
        /// Protocols over which API is made available.
        /// </summary>
        public readonly Outputs.SubscriptionKeyParameterNamesContractResponse? SubscriptionKeyParameterNames;
        /// <summary>
        /// Specifies whether an API or Product subscription is required for accessing the API.
        /// </summary>
        public readonly bool? SubscriptionRequired;
        /// <summary>
        ///  A URL to the Terms of Service for the API. MUST be in the format of a URL.
        /// </summary>
        public readonly string? TermsOfServiceUrl;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApiResult(
            string? apiRevision,

            string? apiRevisionDescription,

            string? apiType,

            string? apiVersion,

            string? apiVersionDescription,

            Outputs.ApiVersionSetContractDetailsResponse? apiVersionSet,

            string? apiVersionSetId,

            Outputs.AuthenticationSettingsContractResponse? authenticationSettings,

            Outputs.ApiContactInformationResponse? contact,

            string? description,

            string? displayName,

            string id,

            bool? isCurrent,

            bool isOnline,

            Outputs.ApiLicenseInformationResponse? license,

            string name,

            string path,

            ImmutableArray<string> protocols,

            string? serviceUrl,

            string? sourceApiId,

            Outputs.SubscriptionKeyParameterNamesContractResponse? subscriptionKeyParameterNames,

            bool? subscriptionRequired,

            string? termsOfServiceUrl,

            string type)
        {
            ApiRevision = apiRevision;
            ApiRevisionDescription = apiRevisionDescription;
            ApiType = apiType;
            ApiVersion = apiVersion;
            ApiVersionDescription = apiVersionDescription;
            ApiVersionSet = apiVersionSet;
            ApiVersionSetId = apiVersionSetId;
            AuthenticationSettings = authenticationSettings;
            Contact = contact;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsCurrent = isCurrent;
            IsOnline = isOnline;
            License = license;
            Name = name;
            Path = path;
            Protocols = protocols;
            ServiceUrl = serviceUrl;
            SourceApiId = sourceApiId;
            SubscriptionKeyParameterNames = subscriptionKeyParameterNames;
            SubscriptionRequired = subscriptionRequired;
            TermsOfServiceUrl = termsOfServiceUrl;
            Type = type;
        }
    }
}
