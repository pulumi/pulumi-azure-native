// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20191201Preview
{
    public static class ListTenantAccessSecrets
    {
        /// <summary>
        /// Get tenant access information details.
        /// </summary>
        public static Task<ListTenantAccessSecretsResult> InvokeAsync(ListTenantAccessSecretsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListTenantAccessSecretsResult>("azure-native:apimanagement/v20191201preview:listTenantAccessSecrets", args ?? new ListTenantAccessSecretsArgs(), options.WithDefaults());

        /// <summary>
        /// Get tenant access information details.
        /// </summary>
        public static Output<ListTenantAccessSecretsResult> Invoke(ListTenantAccessSecretsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListTenantAccessSecretsResult>("azure-native:apimanagement/v20191201preview:listTenantAccessSecrets", args ?? new ListTenantAccessSecretsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListTenantAccessSecretsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the Access configuration.
        /// </summary>
        [Input("accessName", required: true)]
        public string AccessName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public ListTenantAccessSecretsArgs()
        {
        }
        public static new ListTenantAccessSecretsArgs Empty => new ListTenantAccessSecretsArgs();
    }

    public sealed class ListTenantAccessSecretsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the Access configuration.
        /// </summary>
        [Input("accessName", required: true)]
        public Input<string> AccessName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ListTenantAccessSecretsInvokeArgs()
        {
        }
        public static new ListTenantAccessSecretsInvokeArgs Empty => new ListTenantAccessSecretsInvokeArgs();
    }


    [OutputType]
    public sealed class ListTenantAccessSecretsResult
    {
        /// <summary>
        /// Determines whether direct access is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        public readonly string? PrimaryKey;
        /// <summary>
        /// Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        public readonly string? SecondaryKey;

        [OutputConstructor]
        private ListTenantAccessSecretsResult(
            bool? enabled,

            string? id,

            string? primaryKey,

            string? secondaryKey)
        {
            Enabled = enabled;
            Id = id;
            PrimaryKey = primaryKey;
            SecondaryKey = secondaryKey;
        }
    }
}
