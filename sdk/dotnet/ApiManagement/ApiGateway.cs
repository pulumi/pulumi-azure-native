// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    /// <summary>
    /// A single API Management gateway resource in List or Get response.
    /// Azure REST API version: 2023-09-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:apimanagement:ApiGateway")]
    public partial class ApiGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information regarding how the gateway should integrate with backend systems.
        /// </summary>
        [Output("backend")]
        public Output<Outputs.BackendConfigurationResponse?> Backend { get; private set; } = null!;

        /// <summary>
        /// Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.
        /// </summary>
        [Output("configurationApi")]
        public Output<Outputs.GatewayConfigurationApiResponse?> ConfigurationApi { get; private set; } = null!;

        /// <summary>
        /// Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        [Output("createdAtUtc")]
        public Output<string> CreatedAtUtc { get; private set; } = null!;

        /// <summary>
        /// ETag of the resource.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Information regarding how the gateway should be exposed.
        /// </summary>
        [Output("frontend")]
        public Output<Outputs.FrontendConfigurationResponse?> Frontend { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// SKU properties of the API Management gateway.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ApiManagementGatewaySkuPropertiesResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.
        /// </summary>
        [Output("targetProvisioningState")]
        public Output<string> TargetProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource type for API Management resource is set to Microsoft.ApiManagement.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The type of VPN in which API Management gateway needs to be configured in. 
        /// </summary>
        [Output("virtualNetworkType")]
        public Output<string?> VirtualNetworkType { get; private set; } = null!;


        /// <summary>
        /// Create a ApiGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiGateway(string name, ApiGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:ApiGateway", name, args ?? new ApiGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiGateway(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:ApiGateway", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20230901preview:ApiGateway" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiGateway Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ApiGateway(name, id, options);
        }
    }

    public sealed class ApiGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information regarding how the gateway should integrate with backend systems.
        /// </summary>
        [Input("backend")]
        public Input<Inputs.BackendConfigurationArgs>? Backend { get; set; }

        /// <summary>
        /// The name of the API Management gateway.
        /// </summary>
        [Input("gatewayName")]
        public Input<string>? GatewayName { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SKU properties of the API Management gateway.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.ApiManagementGatewaySkuPropertiesArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of VPN in which API Management gateway needs to be configured in. 
        /// </summary>
        [Input("virtualNetworkType")]
        public InputUnion<string, Pulumi.AzureNative.ApiManagement.VirtualNetworkType>? VirtualNetworkType { get; set; }

        public ApiGatewayArgs()
        {
        }
        public static new ApiGatewayArgs Empty => new ApiGatewayArgs();
    }
}
