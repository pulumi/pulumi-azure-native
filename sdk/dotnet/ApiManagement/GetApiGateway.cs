// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class GetApiGateway
    {
        /// <summary>
        /// Gets an API Management gateway resource description.
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-05-01.
        /// </summary>
        public static Task<GetApiGatewayResult> InvokeAsync(GetApiGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiGatewayResult>("azure-native:apimanagement:getApiGateway", args ?? new GetApiGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an API Management gateway resource description.
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-05-01.
        /// </summary>
        public static Output<GetApiGatewayResult> Invoke(GetApiGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiGatewayResult>("azure-native:apimanagement:getApiGateway", args ?? new GetApiGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API Management gateway.
        /// </summary>
        [Input("gatewayName", required: true)]
        public string GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApiGatewayArgs()
        {
        }
        public static new GetApiGatewayArgs Empty => new GetApiGatewayArgs();
    }

    public sealed class GetApiGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API Management gateway.
        /// </summary>
        [Input("gatewayName", required: true)]
        public Input<string> GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetApiGatewayInvokeArgs()
        {
        }
        public static new GetApiGatewayInvokeArgs Empty => new GetApiGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiGatewayResult
    {
        /// <summary>
        /// Information regarding how the gateway should integrate with backend systems.
        /// </summary>
        public readonly Outputs.BackendConfigurationResponse? Backend;
        /// <summary>
        /// Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.
        /// </summary>
        public readonly Outputs.GatewayConfigurationApiResponse? ConfigurationApi;
        /// <summary>
        /// Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string CreatedAtUtc;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Information regarding how the gateway should be exposed.
        /// </summary>
        public readonly Outputs.FrontendConfigurationResponse? Frontend;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// SKU properties of the API Management gateway.
        /// </summary>
        public readonly Outputs.ApiManagementGatewaySkuPropertiesResponse Sku;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.
        /// </summary>
        public readonly string TargetProvisioningState;
        /// <summary>
        /// Resource type for API Management resource is set to Microsoft.ApiManagement.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The type of VPN in which API Management gateway needs to be configured in. 
        /// </summary>
        public readonly string? VirtualNetworkType;

        [OutputConstructor]
        private GetApiGatewayResult(
            Outputs.BackendConfigurationResponse? backend,

            Outputs.GatewayConfigurationApiResponse? configurationApi,

            string createdAtUtc,

            string etag,

            Outputs.FrontendConfigurationResponse? frontend,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.ApiManagementGatewaySkuPropertiesResponse sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string targetProvisioningState,

            string type,

            string? virtualNetworkType)
        {
            Backend = backend;
            ConfigurationApi = configurationApi;
            CreatedAtUtc = createdAtUtc;
            Etag = etag;
            Frontend = frontend;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            TargetProvisioningState = targetProvisioningState;
            Type = type;
            VirtualNetworkType = virtualNetworkType;
        }
    }
}
