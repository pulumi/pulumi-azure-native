// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.Outputs
{

    /// <summary>
    /// The trip conditions of the circuit breaker
    /// </summary>
    [OutputType]
    public sealed class CircuitBreakerFailureConditionResponse
    {
        /// <summary>
        /// The threshold for opening the circuit.
        /// </summary>
        public readonly double? Count;
        /// <summary>
        /// The error reasons which are considered as failure.
        /// </summary>
        public readonly ImmutableArray<string> ErrorReasons;
        /// <summary>
        /// The interval during which the failures are counted.
        /// </summary>
        public readonly string? Interval;
        /// <summary>
        /// The threshold for opening the circuit.
        /// </summary>
        public readonly double? Percentage;
        /// <summary>
        /// The status code ranges which are considered as failure.
        /// </summary>
        public readonly ImmutableArray<Outputs.FailureStatusCodeRangeResponse> StatusCodeRanges;

        [OutputConstructor]
        private CircuitBreakerFailureConditionResponse(
            double? count,

            ImmutableArray<string> errorReasons,

            string? interval,

            double? percentage,

            ImmutableArray<Outputs.FailureStatusCodeRangeResponse> statusCodeRanges)
        {
            Count = count;
            ErrorReasons = errorReasons;
            Interval = interval;
            Percentage = percentage;
            StatusCodeRanges = statusCodeRanges;
        }
    }
}
