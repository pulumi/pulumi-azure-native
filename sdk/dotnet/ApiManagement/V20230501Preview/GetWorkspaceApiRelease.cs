// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20230501Preview
{
    public static class GetWorkspaceApiRelease
    {
        /// <summary>
        /// Returns the details of an API release.
        /// </summary>
        public static Task<GetWorkspaceApiReleaseResult> InvokeAsync(GetWorkspaceApiReleaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApiReleaseResult>("azure-native:apimanagement/v20230501preview:getWorkspaceApiRelease", args ?? new GetWorkspaceApiReleaseArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the details of an API release.
        /// </summary>
        public static Output<GetWorkspaceApiReleaseResult> Invoke(GetWorkspaceApiReleaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApiReleaseResult>("azure-native:apimanagement/v20230501preview:getWorkspaceApiRelease", args ?? new GetWorkspaceApiReleaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApiReleaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// API identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// Release identifier within an API. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("releaseId", required: true)]
        public string ReleaseId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// Workspace identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApiReleaseArgs()
        {
        }
        public static new GetWorkspaceApiReleaseArgs Empty => new GetWorkspaceApiReleaseArgs();
    }

    public sealed class GetWorkspaceApiReleaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// API identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// Release identifier within an API. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("releaseId", required: true)]
        public Input<string> ReleaseId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Workspace identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApiReleaseInvokeArgs()
        {
        }
        public static new GetWorkspaceApiReleaseInvokeArgs Empty => new GetWorkspaceApiReleaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApiReleaseResult
    {
        /// <summary>
        /// Identifier of the API the release belongs to.
        /// </summary>
        public readonly string? ApiId;
        /// <summary>
        /// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        /// </summary>
        public readonly string CreatedDateTime;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Release Notes
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The time the API release was updated.
        /// </summary>
        public readonly string UpdatedDateTime;

        [OutputConstructor]
        private GetWorkspaceApiReleaseResult(
            string? apiId,

            string createdDateTime,

            string id,

            string name,

            string? notes,

            string type,

            string updatedDateTime)
        {
            ApiId = apiId;
            CreatedDateTime = createdDateTime;
            Id = id;
            Name = name;
            Notes = notes;
            Type = type;
            UpdatedDateTime = updatedDateTime;
        }
    }
}
