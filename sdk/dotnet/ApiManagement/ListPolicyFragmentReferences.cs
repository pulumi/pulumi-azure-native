// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class ListPolicyFragmentReferences
    {
        /// <summary>
        /// Lists policy resources that reference the policy fragment.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01.
        /// </summary>
        public static Task<ListPolicyFragmentReferencesResult> InvokeAsync(ListPolicyFragmentReferencesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListPolicyFragmentReferencesResult>("azure-native:apimanagement:listPolicyFragmentReferences", args ?? new ListPolicyFragmentReferencesArgs(), options.WithDefaults());

        /// <summary>
        /// Lists policy resources that reference the policy fragment.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01.
        /// </summary>
        public static Output<ListPolicyFragmentReferencesResult> Invoke(ListPolicyFragmentReferencesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListPolicyFragmentReferencesResult>("azure-native:apimanagement:listPolicyFragmentReferences", args ?? new ListPolicyFragmentReferencesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListPolicyFragmentReferencesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A resource identifier.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// Number of records to skip.
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        /// <summary>
        /// Number of records to return.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListPolicyFragmentReferencesArgs()
        {
        }
        public static new ListPolicyFragmentReferencesArgs Empty => new ListPolicyFragmentReferencesArgs();
    }

    public sealed class ListPolicyFragmentReferencesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A resource identifier.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Number of records to skip.
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        /// <summary>
        /// Number of records to return.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        public ListPolicyFragmentReferencesInvokeArgs()
        {
        }
        public static new ListPolicyFragmentReferencesInvokeArgs Empty => new ListPolicyFragmentReferencesInvokeArgs();
    }


    [OutputType]
    public sealed class ListPolicyFragmentReferencesResult
    {
        /// <summary>
        /// Total record count number.
        /// </summary>
        public readonly double? Count;
        /// <summary>
        /// Next page link if any.
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// A collection of resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceCollectionResponseValue> Value;

        [OutputConstructor]
        private ListPolicyFragmentReferencesResult(
            double? count,

            string? nextLink,

            ImmutableArray<Outputs.ResourceCollectionResponseValue> value)
        {
            Count = count;
            NextLink = nextLink;
            Value = value;
        }
    }
}
