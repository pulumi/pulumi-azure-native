// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    public static class GetAuthorizationAccessPolicy
    {
        /// <summary>
        /// Gets the details of the authorization access policy specified by its identifier.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview.
        /// </summary>
        public static Task<GetAuthorizationAccessPolicyResult> InvokeAsync(GetAuthorizationAccessPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizationAccessPolicyResult>("azure-native:apimanagement:getAuthorizationAccessPolicy", args ?? new GetAuthorizationAccessPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of the authorization access policy specified by its identifier.
        /// Azure REST API version: 2022-08-01.
        /// 
        /// Other available API versions: 2022-09-01-preview, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview.
        /// </summary>
        public static Output<GetAuthorizationAccessPolicyResult> Invoke(GetAuthorizationAccessPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizationAccessPolicyResult>("azure-native:apimanagement:getAuthorizationAccessPolicy", args ?? new GetAuthorizationAccessPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizationAccessPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the authorization access policy.
        /// </summary>
        [Input("authorizationAccessPolicyId", required: true)]
        public string AuthorizationAccessPolicyId { get; set; } = null!;

        /// <summary>
        /// Identifier of the authorization.
        /// </summary>
        [Input("authorizationId", required: true)]
        public string AuthorizationId { get; set; } = null!;

        /// <summary>
        /// Identifier of the authorization provider.
        /// </summary>
        [Input("authorizationProviderId", required: true)]
        public string AuthorizationProviderId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetAuthorizationAccessPolicyArgs()
        {
        }
        public static new GetAuthorizationAccessPolicyArgs Empty => new GetAuthorizationAccessPolicyArgs();
    }

    public sealed class GetAuthorizationAccessPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the authorization access policy.
        /// </summary>
        [Input("authorizationAccessPolicyId", required: true)]
        public Input<string> AuthorizationAccessPolicyId { get; set; } = null!;

        /// <summary>
        /// Identifier of the authorization.
        /// </summary>
        [Input("authorizationId", required: true)]
        public Input<string> AuthorizationId { get; set; } = null!;

        /// <summary>
        /// Identifier of the authorization provider.
        /// </summary>
        [Input("authorizationProviderId", required: true)]
        public Input<string> AuthorizationProviderId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetAuthorizationAccessPolicyInvokeArgs()
        {
        }
        public static new GetAuthorizationAccessPolicyInvokeArgs Empty => new GetAuthorizationAccessPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizationAccessPolicyResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Object Id
        /// </summary>
        public readonly string? ObjectId;
        /// <summary>
        /// The Tenant Id
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAuthorizationAccessPolicyResult(
            string id,

            string name,

            string? objectId,

            string? tenantId,

            string type)
        {
            Id = id;
            Name = name;
            ObjectId = objectId;
            TenantId = tenantId;
            Type = type;
        }
    }
}
