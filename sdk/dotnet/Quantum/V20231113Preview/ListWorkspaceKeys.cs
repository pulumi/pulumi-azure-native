// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Quantum.V20231113Preview
{
    public static class ListWorkspaceKeys
    {
        /// <summary>
        /// Get the keys to use with the Quantum APIs. A key is used to authenticate and authorize access to the Quantum REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.
        /// </summary>
        public static Task<ListWorkspaceKeysResult> InvokeAsync(ListWorkspaceKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWorkspaceKeysResult>("azure-native:quantum/v20231113preview:listWorkspaceKeys", args ?? new ListWorkspaceKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Get the keys to use with the Quantum APIs. A key is used to authenticate and authorize access to the Quantum REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.
        /// </summary>
        public static Output<ListWorkspaceKeysResult> Invoke(ListWorkspaceKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWorkspaceKeysResult>("azure-native:quantum/v20231113preview:listWorkspaceKeys", args ?? new ListWorkspaceKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListWorkspaceKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the quantum workspace resource.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public ListWorkspaceKeysArgs()
        {
        }
        public static new ListWorkspaceKeysArgs Empty => new ListWorkspaceKeysArgs();
    }

    public sealed class ListWorkspaceKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the quantum workspace resource.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ListWorkspaceKeysInvokeArgs()
        {
        }
        public static new ListWorkspaceKeysInvokeArgs Empty => new ListWorkspaceKeysInvokeArgs();
    }


    [OutputType]
    public sealed class ListWorkspaceKeysResult
    {
        /// <summary>
        /// Indicator of enablement of the Quantum workspace Api keys.
        /// </summary>
        public readonly bool? ApiKeyEnabled;
        /// <summary>
        /// The connection string of the primary api key.
        /// </summary>
        public readonly string PrimaryConnectionString;
        /// <summary>
        /// The quantum workspace primary api key.
        /// </summary>
        public readonly Outputs.ApiKeyResponse? PrimaryKey;
        /// <summary>
        /// The connection string of the secondary api key.
        /// </summary>
        public readonly string SecondaryConnectionString;
        /// <summary>
        /// The quantum workspace secondary api key.
        /// </summary>
        public readonly Outputs.ApiKeyResponse? SecondaryKey;

        [OutputConstructor]
        private ListWorkspaceKeysResult(
            bool? apiKeyEnabled,

            string primaryConnectionString,

            Outputs.ApiKeyResponse? primaryKey,

            string secondaryConnectionString,

            Outputs.ApiKeyResponse? secondaryKey)
        {
            ApiKeyEnabled = apiKeyEnabled;
            PrimaryConnectionString = primaryConnectionString;
            PrimaryKey = primaryKey;
            SecondaryConnectionString = secondaryConnectionString;
            SecondaryKey = secondaryKey;
        }
    }
}
