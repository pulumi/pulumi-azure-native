// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Quantum.V20231113Preview.Outputs
{

    /// <summary>
    /// Properties of a Workspace
    /// </summary>
    [OutputType]
    public sealed class WorkspaceResourcePropertiesResponse
    {
        /// <summary>
        /// Indicator of enablement of the Quantum workspace Api keys.
        /// </summary>
        public readonly bool? ApiKeyEnabled;
        /// <summary>
        /// The URI of the workspace endpoint.
        /// </summary>
        public readonly string EndpointUri;
        /// <summary>
        /// List of Providers selected for this Workspace
        /// </summary>
        public readonly ImmutableArray<Outputs.ProviderResponse> Providers;
        /// <summary>
        /// Provisioning status field
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// ARM Resource Id of the storage account associated with this workspace.
        /// </summary>
        public readonly string? StorageAccount;
        /// <summary>
        /// Whether the current workspace is ready to accept Jobs.
        /// </summary>
        public readonly string Usable;

        [OutputConstructor]
        private WorkspaceResourcePropertiesResponse(
            bool? apiKeyEnabled,

            string endpointUri,

            ImmutableArray<Outputs.ProviderResponse> providers,

            string provisioningState,

            string? storageAccount,

            string usable)
        {
            ApiKeyEnabled = apiKeyEnabled;
            EndpointUri = endpointUri;
            Providers = providers;
            ProvisioningState = provisioningState;
            StorageAccount = storageAccount;
            Usable = usable;
        }
    }
}
