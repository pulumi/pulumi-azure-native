// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Billing.V20240401.Inputs
{

    /// <summary>
    /// A billing profile.
    /// </summary>
    public sealed class BillingProfilePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Billing address.
        /// </summary>
        [Input("billTo")]
        public Input<Inputs.BillingProfilePropertiesBillToArgs>? BillTo { get; set; }

        /// <summary>
        /// The current payment term of the billing profile.
        /// </summary>
        [Input("currentPaymentTerm")]
        public Input<Inputs.BillingProfilePropertiesCurrentPaymentTermArgs>? CurrentPaymentTerm { get; set; }

        /// <summary>
        /// The name of the billing profile.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enabledAzurePlans")]
        private InputList<Inputs.AzurePlanArgs>? _enabledAzurePlans;

        /// <summary>
        /// Information about the enabled azure plans.
        /// </summary>
        public InputList<Inputs.AzurePlanArgs> EnabledAzurePlans
        {
            get => _enabledAzurePlans ?? (_enabledAzurePlans = new InputList<Inputs.AzurePlanArgs>());
            set => _enabledAzurePlans = value;
        }

        /// <summary>
        /// Identifies the billing profile that is linked to another billing profile in indirect purchase motion.
        /// </summary>
        [Input("indirectRelationshipInfo")]
        public Input<Inputs.BillingProfilePropertiesIndirectRelationshipInfoArgs>? IndirectRelationshipInfo { get; set; }

        /// <summary>
        /// Flag controlling whether the invoices for the billing profile are sent through email.
        /// </summary>
        [Input("invoiceEmailOptIn")]
        public Input<bool>? InvoiceEmailOptIn { get; set; }

        [Input("invoiceRecipients")]
        private InputList<string>? _invoiceRecipients;

        /// <summary>
        /// The list of email addresses to receive invoices by email for the billing profile.
        /// </summary>
        public InputList<string> InvoiceRecipients
        {
            get => _invoiceRecipients ?? (_invoiceRecipients = new InputList<string>());
            set => _invoiceRecipients = value;
        }

        /// <summary>
        /// The default purchase order number that will appear on the invoices generated for the billing profile.
        /// </summary>
        [Input("poNumber")]
        public Input<string>? PoNumber { get; set; }

        /// <summary>
        /// The default address where the products are shipped, or the services are being used. If a ship to is not specified for a product or a subscription, then this address will be used.
        /// </summary>
        [Input("shipTo")]
        public Input<Inputs.BillingProfilePropertiesShipToArgs>? ShipTo { get; set; }

        /// <summary>
        /// The address of the individual or organization that is responsible for the billing account.
        /// </summary>
        [Input("soldTo")]
        public Input<Inputs.BillingProfilePropertiesSoldToArgs>? SoldTo { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Dictionary of metadata associated with the resource. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain &lt; &gt; % &amp; \ ? /
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public BillingProfilePropertiesArgs()
        {
        }
        public static new BillingProfilePropertiesArgs Empty => new BillingProfilePropertiesArgs();
    }
}
