// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Billing.V20240401.Outputs
{

    /// <summary>
    /// An invoice section.
    /// </summary>
    [OutputType]
    public sealed class InvoiceSectionPropertiesResponse
    {
        /// <summary>
        /// The name of the invoice section.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The provisioning state of the resource during a long-running operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Reason for the specified invoice section status.
        /// </summary>
        public readonly string? ReasonCode;
        /// <summary>
        /// Identifies the status of an invoice section.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The system generated unique identifier for an invoice section.
        /// </summary>
        public readonly string SystemId;
        /// <summary>
        /// Dictionary of metadata associated with the resource. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain &lt; &gt; % &amp; \ ? /
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Identifies the cloud environments that are associated with an invoice section. This is a system managed optional field and gets updated as the invoice section gets associated with accounts in various clouds.
        /// </summary>
        public readonly string? TargetCloud;

        [OutputConstructor]
        private InvoiceSectionPropertiesResponse(
            string? displayName,

            string provisioningState,

            string? reasonCode,

            string? state,

            string systemId,

            ImmutableDictionary<string, string>? tags,

            string? targetCloud)
        {
            DisplayName = displayName;
            ProvisioningState = provisioningState;
            ReasonCode = reasonCode;
            State = state;
            SystemId = systemId;
            Tags = tags;
            TargetCloud = targetCloud;
        }
    }
}
