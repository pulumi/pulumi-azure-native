// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Communication.V20200820Preview
{
    public static class GetCommunicationService
    {
        public static Task<GetCommunicationServiceResult> InvokeAsync(GetCommunicationServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCommunicationServiceResult>("azure-nextgen:communication/v20200820preview:getCommunicationService", args ?? new GetCommunicationServiceArgs(), options.WithVersion());
    }


    public sealed class GetCommunicationServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the CommunicationService resource.
        /// </summary>
        [Input("communicationServiceName", required: true)]
        public string CommunicationServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCommunicationServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCommunicationServiceResult
    {
        /// <summary>
        /// The location where the communication service stores its data at rest.
        /// </summary>
        public readonly string DataLocation;
        /// <summary>
        /// FQDN of the CommunicationService instance.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// The immutable resource Id of the communication service.
        /// </summary>
        public readonly string ImmutableResourceId;
        /// <summary>
        /// The Azure location where the CommunicationService is running.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource ID of an Azure Notification Hub linked to this resource.
        /// </summary>
        public readonly string NotificationHubId;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Tags of the service which is a list of key value pairs that describe the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetCommunicationServiceResult(
            string dataLocation,

            string hostName,

            string immutableResourceId,

            string? location,

            string name,

            string notificationHubId,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type,

            string version)
        {
            DataLocation = dataLocation;
            HostName = hostName;
            ImmutableResourceId = immutableResourceId;
            Location = location;
            Name = name;
            NotificationHubId = notificationHubId;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
