// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Communication
{
    public static class GetDomain
    {
        /// <summary>
        /// A class representing a Domains resource.
        /// API Version: 2021-10-01-preview.
        /// </summary>
        public static Task<GetDomainResult> InvokeAsync(GetDomainArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDomainResult>("azure-native:communication:getDomain", args ?? new GetDomainArgs(), options.WithDefaults());

        /// <summary>
        /// A class representing a Domains resource.
        /// API Version: 2021-10-01-preview.
        /// </summary>
        public static Output<GetDomainResult> Invoke(GetDomainInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDomainResult>("azure-native:communication:getDomain", args ?? new GetDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Domains resource.
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        /// <summary>
        /// The name of the EmailService resource.
        /// </summary>
        [Input("emailServiceName", required: true)]
        public string EmailServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDomainArgs()
        {
        }
    }

    public sealed class GetDomainInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Domains resource.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The name of the EmailService resource.
        /// </summary>
        [Input("emailServiceName", required: true)]
        public Input<string> EmailServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDomainInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDomainResult
    {
        /// <summary>
        /// The location where the Domains resource data is stored at rest.
        /// </summary>
        public readonly string DataLocation;
        /// <summary>
        /// Describes how a Domains resource is being managed.
        /// </summary>
        public readonly string DomainManagement;
        /// <summary>
        /// P2 sender domain that is displayed to the email recipients [RFC 5322].
        /// </summary>
        public readonly string FromSenderDomain;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// P1 sender domain that is present on the email envelope [RFC 5321].
        /// </summary>
        public readonly string MailFromSenderDomain;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Describes whether user engagement tracking is enabled or disabled.
        /// </summary>
        public readonly string? UserEngagementTracking;
        /// <summary>
        /// Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ValidSenderUsernames;
        /// <summary>
        /// List of DnsRecord
        /// </summary>
        public readonly Outputs.DomainPropertiesResponseVerificationRecords VerificationRecords;
        /// <summary>
        /// List of VerificationStatusRecord
        /// </summary>
        public readonly Outputs.DomainPropertiesResponseVerificationStates VerificationStates;

        [OutputConstructor]
        private GetDomainResult(
            string dataLocation,

            string domainManagement,

            string fromSenderDomain,

            string id,

            string location,

            string mailFromSenderDomain,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? userEngagementTracking,

            ImmutableDictionary<string, string>? validSenderUsernames,

            Outputs.DomainPropertiesResponseVerificationRecords verificationRecords,

            Outputs.DomainPropertiesResponseVerificationStates verificationStates)
        {
            DataLocation = dataLocation;
            DomainManagement = domainManagement;
            FromSenderDomain = fromSenderDomain;
            Id = id;
            Location = location;
            MailFromSenderDomain = mailFromSenderDomain;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            UserEngagementTracking = userEngagementTracking;
            ValidSenderUsernames = validSenderUsernames;
            VerificationRecords = verificationRecords;
            VerificationStates = verificationStates;
        }
    }
}
