// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Communication.V20220701Preview
{
    public static class GetCommunicationService
    {
        /// <summary>
        /// A class representing a CommunicationService resource.
        /// </summary>
        public static Task<GetCommunicationServiceResult> InvokeAsync(GetCommunicationServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCommunicationServiceResult>("azure-native:communication/v20220701preview:getCommunicationService", args ?? new GetCommunicationServiceArgs(), options.WithDefaults());

        /// <summary>
        /// A class representing a CommunicationService resource.
        /// </summary>
        public static Output<GetCommunicationServiceResult> Invoke(GetCommunicationServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCommunicationServiceResult>("azure-native:communication/v20220701preview:getCommunicationService", args ?? new GetCommunicationServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCommunicationServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the CommunicationService resource.
        /// </summary>
        [Input("communicationServiceName", required: true)]
        public string CommunicationServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCommunicationServiceArgs()
        {
        }
        public static new GetCommunicationServiceArgs Empty => new GetCommunicationServiceArgs();
    }

    public sealed class GetCommunicationServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the CommunicationService resource.
        /// </summary>
        [Input("communicationServiceName", required: true)]
        public Input<string> CommunicationServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCommunicationServiceInvokeArgs()
        {
        }
        public static new GetCommunicationServiceInvokeArgs Empty => new GetCommunicationServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetCommunicationServiceResult
    {
        /// <summary>
        /// The location where the communication service stores its data at rest.
        /// </summary>
        public readonly string DataLocation;
        /// <summary>
        /// FQDN of the CommunicationService instance.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The immutable resource Id of the communication service.
        /// </summary>
        public readonly string ImmutableResourceId;
        /// <summary>
        /// List of email Domain resource Ids.
        /// </summary>
        public readonly ImmutableArray<string> LinkedDomains;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource ID of an Azure Notification Hub linked to this resource.
        /// </summary>
        public readonly string NotificationHubId;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetCommunicationServiceResult(
            string dataLocation,

            string hostName,

            string id,

            string immutableResourceId,

            ImmutableArray<string> linkedDomains,

            string location,

            string name,

            string notificationHubId,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string version)
        {
            DataLocation = dataLocation;
            HostName = hostName;
            Id = id;
            ImmutableResourceId = immutableResourceId;
            LinkedDomains = linkedDomains;
            Location = location;
            Name = name;
            NotificationHubId = notificationHubId;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
