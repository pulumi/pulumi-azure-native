// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Fabric
{
    public static class GetFabricCapacity
    {
        /// <summary>
        /// Get a FabricCapacity
        /// Azure REST API version: 2023-11-01.
        /// </summary>
        public static Task<GetFabricCapacityResult> InvokeAsync(GetFabricCapacityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFabricCapacityResult>("azure-native:fabric:getFabricCapacity", args ?? new GetFabricCapacityArgs(), options.WithDefaults());

        /// <summary>
        /// Get a FabricCapacity
        /// Azure REST API version: 2023-11-01.
        /// </summary>
        public static Output<GetFabricCapacityResult> Invoke(GetFabricCapacityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFabricCapacityResult>("azure-native:fabric:getFabricCapacity", args ?? new GetFabricCapacityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFabricCapacityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("capacityName", required: true)]
        public string CapacityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFabricCapacityArgs()
        {
        }
        public static new GetFabricCapacityArgs Empty => new GetFabricCapacityArgs();
    }

    public sealed class GetFabricCapacityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a maximum of 63.
        /// </summary>
        [Input("capacityName", required: true)]
        public Input<string> CapacityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFabricCapacityInvokeArgs()
        {
        }
        public static new GetFabricCapacityInvokeArgs Empty => new GetFabricCapacityInvokeArgs();
    }


    [OutputType]
    public sealed class GetFabricCapacityResult
    {
        /// <summary>
        /// The capacity administration
        /// </summary>
        public readonly Outputs.CapacityAdministrationResponse Administration;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The SKU details
        /// </summary>
        public readonly Outputs.RpSkuResponse Sku;
        /// <summary>
        /// The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFabricCapacityResult(
            Outputs.CapacityAdministrationResponse administration,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.RpSkuResponse sku,

            string state,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Administration = administration;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            State = state;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
