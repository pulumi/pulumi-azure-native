// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.PrivateDns
{
    public static class GetPrivateRecordSet
    {
        /// <summary>
        /// Gets a record set.
        /// 
        /// Uses Azure REST API version 2024-06-01.
        /// 
        /// Other available API versions: 2018-09-01, 2020-01-01, 2020-06-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native privatedns [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetPrivateRecordSetResult> InvokeAsync(GetPrivateRecordSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateRecordSetResult>("azure-native:privatedns:getPrivateRecordSet", args ?? new GetPrivateRecordSetArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a record set.
        /// 
        /// Uses Azure REST API version 2024-06-01.
        /// 
        /// Other available API versions: 2018-09-01, 2020-01-01, 2020-06-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native privatedns [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPrivateRecordSetResult> Invoke(GetPrivateRecordSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateRecordSetResult>("azure-native:privatedns:getPrivateRecordSet", args ?? new GetPrivateRecordSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a record set.
        /// 
        /// Uses Azure REST API version 2024-06-01.
        /// 
        /// Other available API versions: 2018-09-01, 2020-01-01, 2020-06-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native privatedns [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetPrivateRecordSetResult> Invoke(GetPrivateRecordSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateRecordSetResult>("azure-native:privatedns:getPrivateRecordSet", args ?? new GetPrivateRecordSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateRecordSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS zone (without a terminating dot).
        /// </summary>
        [Input("privateZoneName", required: true)]
        public string PrivateZoneName { get; set; } = null!;

        /// <summary>
        /// The type of DNS record in this record set.
        /// </summary>
        [Input("recordType", required: true)]
        public string RecordType { get; set; } = null!;

        /// <summary>
        /// The name of the record set, relative to the name of the zone.
        /// </summary>
        [Input("relativeRecordSetName", required: true)]
        public string RelativeRecordSetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPrivateRecordSetArgs()
        {
        }
        public static new GetPrivateRecordSetArgs Empty => new GetPrivateRecordSetArgs();
    }

    public sealed class GetPrivateRecordSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS zone (without a terminating dot).
        /// </summary>
        [Input("privateZoneName", required: true)]
        public Input<string> PrivateZoneName { get; set; } = null!;

        /// <summary>
        /// The type of DNS record in this record set.
        /// </summary>
        [Input("recordType", required: true)]
        public Input<string> RecordType { get; set; } = null!;

        /// <summary>
        /// The name of the record set, relative to the name of the zone.
        /// </summary>
        [Input("relativeRecordSetName", required: true)]
        public Input<string> RelativeRecordSetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPrivateRecordSetInvokeArgs()
        {
        }
        public static new GetPrivateRecordSetInvokeArgs Empty => new GetPrivateRecordSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateRecordSetResult
    {
        /// <summary>
        /// The list of A records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.ARecordResponse> ARecords;
        /// <summary>
        /// The list of AAAA records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.AaaaRecordResponse> AaaaRecords;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The CNAME record in the record set.
        /// </summary>
        public readonly Outputs.CnameRecordResponse? CnameRecord;
        /// <summary>
        /// The ETag of the record set.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified domain name of the record set.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        public readonly bool IsAutoRegistered;
        /// <summary>
        /// The metadata attached to the record set.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// The list of MX records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.MxRecordResponse> MxRecords;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of PTR records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.PtrRecordResponse> PtrRecords;
        /// <summary>
        /// The SOA record in the record set.
        /// </summary>
        public readonly Outputs.SoaRecordResponse? SoaRecord;
        /// <summary>
        /// The list of SRV records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.SrvRecordResponse> SrvRecords;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The TTL (time-to-live) of the records in the record set.
        /// </summary>
        public readonly double? Ttl;
        /// <summary>
        /// The list of TXT records in the record set.
        /// </summary>
        public readonly ImmutableArray<Outputs.TxtRecordResponse> TxtRecords;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPrivateRecordSetResult(
            ImmutableArray<Outputs.ARecordResponse> aRecords,

            ImmutableArray<Outputs.AaaaRecordResponse> aaaaRecords,

            string azureApiVersion,

            Outputs.CnameRecordResponse? cnameRecord,

            string? etag,

            string fqdn,

            string id,

            bool isAutoRegistered,

            ImmutableDictionary<string, string>? metadata,

            ImmutableArray<Outputs.MxRecordResponse> mxRecords,

            string name,

            ImmutableArray<Outputs.PtrRecordResponse> ptrRecords,

            Outputs.SoaRecordResponse? soaRecord,

            ImmutableArray<Outputs.SrvRecordResponse> srvRecords,

            Outputs.SystemDataResponse systemData,

            double? ttl,

            ImmutableArray<Outputs.TxtRecordResponse> txtRecords,

            string type)
        {
            ARecords = aRecords;
            AaaaRecords = aaaaRecords;
            AzureApiVersion = azureApiVersion;
            CnameRecord = cnameRecord;
            Etag = etag;
            Fqdn = fqdn;
            Id = id;
            IsAutoRegistered = isAutoRegistered;
            Metadata = metadata;
            MxRecords = mxRecords;
            Name = name;
            PtrRecords = ptrRecords;
            SoaRecord = soaRecord;
            SrvRecords = srvRecords;
            SystemData = systemData;
            Ttl = ttl;
            TxtRecords = txtRecords;
            Type = type;
        }
    }
}
