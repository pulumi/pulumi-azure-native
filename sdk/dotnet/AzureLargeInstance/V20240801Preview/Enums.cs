// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.AzureLargeInstance.V20240801Preview
{
    /// <summary>
    /// the hardware type of the storage instance
    /// </summary>
    [EnumType]
    public readonly struct AzureLargeInstanceHardwareTypeNamesEnum : IEquatable<AzureLargeInstanceHardwareTypeNamesEnum>
    {
        private readonly string _value;

        private AzureLargeInstanceHardwareTypeNamesEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Hardware type of UCS from vendor Cisco
        /// </summary>
        public static AzureLargeInstanceHardwareTypeNamesEnum Cisco_UCS { get; } = new AzureLargeInstanceHardwareTypeNamesEnum("Cisco_UCS");
        /// <summary>
        /// Hardware type of HPE from vendor Hewlett Packard Enterprise
        /// </summary>
        public static AzureLargeInstanceHardwareTypeNamesEnum HPE { get; } = new AzureLargeInstanceHardwareTypeNamesEnum("HPE");
        /// <summary>
        /// Hardware type of SDFLEX
        /// </summary>
        public static AzureLargeInstanceHardwareTypeNamesEnum SDFLEX { get; } = new AzureLargeInstanceHardwareTypeNamesEnum("SDFLEX");

        public static bool operator ==(AzureLargeInstanceHardwareTypeNamesEnum left, AzureLargeInstanceHardwareTypeNamesEnum right) => left.Equals(right);
        public static bool operator !=(AzureLargeInstanceHardwareTypeNamesEnum left, AzureLargeInstanceHardwareTypeNamesEnum right) => !left.Equals(right);

        public static explicit operator string(AzureLargeInstanceHardwareTypeNamesEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AzureLargeInstanceHardwareTypeNamesEnum other && Equals(other);
        public bool Equals(AzureLargeInstanceHardwareTypeNamesEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Resource power state
    /// </summary>
    [EnumType]
    public readonly struct AzureLargeInstancePowerStateEnum : IEquatable<AzureLargeInstancePowerStateEnum>
    {
        private readonly string _value;

        private AzureLargeInstancePowerStateEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Starting means that the Azure Large Instance resource is turning on.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Starting { get; } = new AzureLargeInstancePowerStateEnum("starting");
        /// <summary>
        /// Started means that the Azure Large Instance resource has been powered on.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Started { get; } = new AzureLargeInstancePowerStateEnum("started");
        /// <summary>
        /// Stopping means that the Azure Large Instance resource is shutting down.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Stopping { get; } = new AzureLargeInstancePowerStateEnum("stopping");
        /// <summary>
        /// Stopped means that the Azure Large Instance resource has shut down.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Stopped { get; } = new AzureLargeInstancePowerStateEnum("stopped");
        /// <summary>
        /// Restarting means that the Azure Large Instance resource is restarting.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Restarting { get; } = new AzureLargeInstancePowerStateEnum("restarting");
        /// <summary>
        /// Unknown means that the state of the Azure Large Instance is unknown.
        /// </summary>
        public static AzureLargeInstancePowerStateEnum Unknown { get; } = new AzureLargeInstancePowerStateEnum("unknown");

        public static bool operator ==(AzureLargeInstancePowerStateEnum left, AzureLargeInstancePowerStateEnum right) => left.Equals(right);
        public static bool operator !=(AzureLargeInstancePowerStateEnum left, AzureLargeInstancePowerStateEnum right) => !left.Equals(right);

        public static explicit operator string(AzureLargeInstancePowerStateEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AzureLargeInstancePowerStateEnum other && Equals(other);
        public bool Equals(AzureLargeInstancePowerStateEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the Azure Large Instance SKU.
    /// </summary>
    [EnumType]
    public readonly struct AzureLargeInstanceSizeNamesEnum : IEquatable<AzureLargeInstanceSizeNamesEnum>
    {
        private readonly string _value;

        private AzureLargeInstanceSizeNamesEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S72m { get; } = new AzureLargeInstanceSizeNamesEnum("S72m");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S144m { get; } = new AzureLargeInstanceSizeNamesEnum("S144m");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S72 { get; } = new AzureLargeInstanceSizeNamesEnum("S72");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S144 { get; } = new AzureLargeInstanceSizeNamesEnum("S144");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S192 { get; } = new AzureLargeInstanceSizeNamesEnum("S192");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S192m { get; } = new AzureLargeInstanceSizeNamesEnum("S192m");
        /// <summary>
        /// Type I class SKU that can't be purchased anymore
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S192xm { get; } = new AzureLargeInstanceSizeNamesEnum("S192xm");
        /// <summary>
        /// 2 sockets, 96 CPU threads, 48 CPU cores, 768 GB total memory, 768 GB DRAM, 3.0 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S96 { get; } = new AzureLargeInstanceSizeNamesEnum("S96");
        /// <summary>
        /// No longer offered or used.
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S112 { get; } = new AzureLargeInstanceSizeNamesEnum("S112");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 3 TB total memory, 3 TB DRAM, 6.3 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224 { get; } = new AzureLargeInstanceSizeNamesEnum("S224");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224m { get; } = new AzureLargeInstanceSizeNamesEnum("S224m");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 3 TB DRAM, 3 TB memory optane, 10.5 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224om { get; } = new AzureLargeInstanceSizeNamesEnum("S224om");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 4.5 TB total memory, 1.5 TB DRAM, 3 TB memory optane, 8.4 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224oo { get; } = new AzureLargeInstanceSizeNamesEnum("S224oo");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224oom { get; } = new AzureLargeInstanceSizeNamesEnum("S224oom");
        /// <summary>
        /// 4 sockets, 224 CPU threads, 112 CPU cores, 7.5TB total memory, 1.5 TB DRAM, 6 TB memory optane, 12.7 TB storage, Cisco_UCS hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224ooo { get; } = new AzureLargeInstanceSizeNamesEnum("S224ooo");
        /// <summary>
        /// 4 sockets, 448 CPU threads, 6 TB total memory, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S224se { get; } = new AzureLargeInstanceSizeNamesEnum("S224se");
        /// <summary>
        /// 8 sockets, 384 CPU threads, 192 CPU cores, 4 TB total memory, 4 TB DRAM, 16 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S384 { get; } = new AzureLargeInstanceSizeNamesEnum("S384");
        /// <summary>
        /// 8 sockets, 384 CPU threads, 192 CPU cores, 6 TB total memory, 6 TB DRAM, 18 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S384m { get; } = new AzureLargeInstanceSizeNamesEnum("S384m");
        /// <summary>
        /// 8 sockets, 384 CPU threads, 192 CPU cores, 8 TB total memory, 8 TB DRAM, 22 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S384xm { get; } = new AzureLargeInstanceSizeNamesEnum("S384xm");
        /// <summary>
        /// 8 sockets, 384 CPU threads, 12 TB total memory, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S384xxm { get; } = new AzureLargeInstanceSizeNamesEnum("S384xxm");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448 { get; } = new AzureLargeInstanceSizeNamesEnum("S448");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448m { get; } = new AzureLargeInstanceSizeNamesEnum("S448m");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 6 TB DRAM, 6 TB memory optane, 18.9 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448om { get; } = new AzureLargeInstanceSizeNamesEnum("S448om");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448oo { get; } = new AzureLargeInstanceSizeNamesEnum("S448oo");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 18 TB total memory, 6 TB DRAM, 12 memory optane, 27.4 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448oom { get; } = new AzureLargeInstanceSizeNamesEnum("S448oom");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 224 CPU cores, 15 TB total memory, 3 TB DRAM, 12 memory optane, 23.2 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448ooo { get; } = new AzureLargeInstanceSizeNamesEnum("S448ooo");
        /// <summary>
        /// 8 sockets, 448 CPU threads, 12 TB total memory, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S448se { get; } = new AzureLargeInstanceSizeNamesEnum("S448se");
        /// <summary>
        /// 12 sockets, 576 CPU threads, 288 CPU cores, 12 TB total memory, 12 TB DRAM, 28 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S576m { get; } = new AzureLargeInstanceSizeNamesEnum("S576m");
        /// <summary>
        /// 12 sockets, 576 CPU threads, 288 CPU cores, 18 TB total memory, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S576xm { get; } = new AzureLargeInstanceSizeNamesEnum("S576xm");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 9 TB total memory, 9 TB DRAM, 14.7 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672 { get; } = new AzureLargeInstanceSizeNamesEnum("S672");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 18 TB DRAM, 27.4 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672m { get; } = new AzureLargeInstanceSizeNamesEnum("S672m");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 9 TB DRAM, 9 TB memory optane, 27.4 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672om { get; } = new AzureLargeInstanceSizeNamesEnum("S672om");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 13.5 TB total memory, 4.5 TB DRAM, 9 TB memory optane, 21.1 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672oo { get; } = new AzureLargeInstanceSizeNamesEnum("S672oo");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 27 TB total memory, 9 TB DRAM, 18 TB memory optane, 40 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672oom { get; } = new AzureLargeInstanceSizeNamesEnum("S672oom");
        /// <summary>
        /// 12 sockets, 672 CPU threads, 336 CPU cores, 22.5 TB total memory, 4.5 TB DRAM, 18 TB memory optane, 33.7 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S672ooo { get; } = new AzureLargeInstanceSizeNamesEnum("S672ooo");
        /// <summary>
        /// No longer offered or used.
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S768 { get; } = new AzureLargeInstanceSizeNamesEnum("S768");
        /// <summary>
        /// 16 sockets, 768 CPU threads, 384 CPU cores, 16 TB total memory, 16 TB DRAM, 36 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S768m { get; } = new AzureLargeInstanceSizeNamesEnum("S768m");
        /// <summary>
        /// 16 sockets, 768 CPU threads, 384 CPU cores, 24 TB total memory, 24 TB DRAM, 56 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S768xm { get; } = new AzureLargeInstanceSizeNamesEnum("S768xm");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896 { get; } = new AzureLargeInstanceSizeNamesEnum("S896");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 24 TB DRAM, 35.8 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896m { get; } = new AzureLargeInstanceSizeNamesEnum("S896m");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 12 TB DRAM, 12 TB memory optane, 35.8 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896om { get; } = new AzureLargeInstanceSizeNamesEnum("S896om");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 18 TB  total memory, 6 TB DRAM, 12 TB memory optane, 27.4 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896oo { get; } = new AzureLargeInstanceSizeNamesEnum("S896oo");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 36 TB total memory, 12 TB DRAM, 24 TB memory optane, 52.7 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896oom { get; } = new AzureLargeInstanceSizeNamesEnum("S896oom");
        /// <summary>
        /// 16 sockets, 896 CPU threads, 448 CPU cores, 30 TB total memory, 6 TB DRAM, 24 TB memory optane, 44.3 TB storage, SDFLEX hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S896ooo { get; } = new AzureLargeInstanceSizeNamesEnum("S896ooo");
        /// <summary>
        /// 20 sockets, 960 CPU threads, 480 CPU cores, 20 TB total memory, 20 TB DRAM, 46 TB storage, HPEMc990x hardware type
        /// </summary>
        public static AzureLargeInstanceSizeNamesEnum S960m { get; } = new AzureLargeInstanceSizeNamesEnum("S960m");

        public static bool operator ==(AzureLargeInstanceSizeNamesEnum left, AzureLargeInstanceSizeNamesEnum right) => left.Equals(right);
        public static bool operator !=(AzureLargeInstanceSizeNamesEnum left, AzureLargeInstanceSizeNamesEnum right) => !left.Equals(right);

        public static explicit operator string(AzureLargeInstanceSizeNamesEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AzureLargeInstanceSizeNamesEnum other && Equals(other);
        public bool Equals(AzureLargeInstanceSizeNamesEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    /// </summary>
    [EnumType]
    public readonly struct ManagedServiceIdentityType : IEquatable<ManagedServiceIdentityType>
    {
        private readonly string _value;

        private ManagedServiceIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ManagedServiceIdentityType None { get; } = new ManagedServiceIdentityType("None");
        public static ManagedServiceIdentityType SystemAssigned { get; } = new ManagedServiceIdentityType("SystemAssigned");
        public static ManagedServiceIdentityType UserAssigned { get; } = new ManagedServiceIdentityType("UserAssigned");
        public static ManagedServiceIdentityType SystemAssigned_UserAssigned { get; } = new ManagedServiceIdentityType("SystemAssigned,UserAssigned");

        public static bool operator ==(ManagedServiceIdentityType left, ManagedServiceIdentityType right) => left.Equals(right);
        public static bool operator !=(ManagedServiceIdentityType left, ManagedServiceIdentityType right) => !left.Equals(right);

        public static explicit operator string(ManagedServiceIdentityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ManagedServiceIdentityType other && Equals(other);
        public bool Equals(ManagedServiceIdentityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
