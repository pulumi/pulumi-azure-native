// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureLargeInstance.V20240801Preview
{
    public static class GetAzureLargeInstance
    {
        /// <summary>
        /// Gets an Azure Large Instance for the specified subscription, resource group,
        /// and instance name.
        /// </summary>
        public static Task<GetAzureLargeInstanceResult> InvokeAsync(GetAzureLargeInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureLargeInstanceResult>("azure-native:azurelargeinstance/v20240801preview:getAzureLargeInstance", args ?? new GetAzureLargeInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an Azure Large Instance for the specified subscription, resource group,
        /// and instance name.
        /// </summary>
        public static Output<GetAzureLargeInstanceResult> Invoke(GetAzureLargeInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureLargeInstanceResult>("azure-native:azurelargeinstance/v20240801preview:getAzureLargeInstance", args ?? new GetAzureLargeInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureLargeInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the AzureLargeInstance.
        /// </summary>
        [Input("azureLargeInstanceName", required: true)]
        public string AzureLargeInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAzureLargeInstanceArgs()
        {
        }
        public static new GetAzureLargeInstanceArgs Empty => new GetAzureLargeInstanceArgs();
    }

    public sealed class GetAzureLargeInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the AzureLargeInstance.
        /// </summary>
        [Input("azureLargeInstanceName", required: true)]
        public Input<string> AzureLargeInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAzureLargeInstanceInvokeArgs()
        {
        }
        public static new GetAzureLargeInstanceInvokeArgs Empty => new GetAzureLargeInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureLargeInstanceResult
    {
        /// <summary>
        /// Specifies the Azure Large Instance unique ID.
        /// </summary>
        public readonly string? AzureLargeInstanceId;
        /// <summary>
        /// Specifies the hardware settings for the Azure Large Instance.
        /// </summary>
        public readonly Outputs.HardwareProfileResponse? HardwareProfile;
        /// <summary>
        /// Hardware revision of an Azure Large Instance
        /// </summary>
        public readonly string? HwRevision;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the network settings for the Azure Large Instance.
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// Specifies the operating system settings for the Azure Large Instance.
        /// </summary>
        public readonly Outputs.OsProfileResponse? OsProfile;
        /// <summary>
        /// Resource power state
        /// </summary>
        public readonly string? PowerState;
        /// <summary>
        /// State of provisioning of the AzureLargeInstance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource proximity placement group
        /// </summary>
        public readonly string? ProximityPlacementGroup;
        /// <summary>
        /// Specifies the storage settings for the Azure Large Instance disks.
        /// </summary>
        public readonly Outputs.StorageProfileResponse? StorageProfile;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureLargeInstanceResult(
            string? azureLargeInstanceId,

            Outputs.HardwareProfileResponse? hardwareProfile,

            string? hwRevision,

            string id,

            string location,

            string name,

            Outputs.NetworkProfileResponse? networkProfile,

            Outputs.OsProfileResponse? osProfile,

            string? powerState,

            string provisioningState,

            string? proximityPlacementGroup,

            Outputs.StorageProfileResponse? storageProfile,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureLargeInstanceId = azureLargeInstanceId;
            HardwareProfile = hardwareProfile;
            HwRevision = hwRevision;
            Id = id;
            Location = location;
            Name = name;
            NetworkProfile = networkProfile;
            OsProfile = osProfile;
            PowerState = powerState;
            ProvisioningState = provisioningState;
            ProximityPlacementGroup = proximityPlacementGroup;
            StorageProfile = storageProfile;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
