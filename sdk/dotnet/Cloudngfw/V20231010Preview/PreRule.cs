// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20231010Preview
{
    /// <summary>
    /// PreRulestack rule list
    /// </summary>
    [AzureNativeResourceType("azure-native:cloudngfw/v20231010preview:PreRule")]
    public partial class PreRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// rule action
        /// </summary>
        [Output("actionType")]
        public Output<string?> ActionType { get; private set; } = null!;

        /// <summary>
        /// array of rule applications
        /// </summary>
        [Output("applications")]
        public Output<ImmutableArray<string>> Applications { get; private set; } = null!;

        /// <summary>
        /// rule comment
        /// </summary>
        [Output("auditComment")]
        public Output<string?> AuditComment { get; private set; } = null!;

        /// <summary>
        /// rule category
        /// </summary>
        [Output("category")]
        public Output<Outputs.CategoryResponse?> Category { get; private set; } = null!;

        /// <summary>
        /// enable or disable decryption
        /// </summary>
        [Output("decryptionRuleType")]
        public Output<string?> DecryptionRuleType { get; private set; } = null!;

        /// <summary>
        /// rule description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// destination address
        /// </summary>
        [Output("destination")]
        public Output<Outputs.DestinationAddrResponse?> Destination { get; private set; } = null!;

        /// <summary>
        /// enable or disable logging
        /// </summary>
        [Output("enableLogging")]
        public Output<string?> EnableLogging { get; private set; } = null!;

        /// <summary>
        /// etag info
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// inbound Inspection Certificate
        /// </summary>
        [Output("inboundInspectionCertificate")]
        public Output<string?> InboundInspectionCertificate { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// cidr should not be 'any'
        /// </summary>
        [Output("negateDestination")]
        public Output<string?> NegateDestination { get; private set; } = null!;

        /// <summary>
        /// cidr should not be 'any'
        /// </summary>
        [Output("negateSource")]
        public Output<string?> NegateSource { get; private set; } = null!;

        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// any, application-default, TCP:number, UDP:number
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// prot port list
        /// </summary>
        [Output("protocolPortList")]
        public Output<ImmutableArray<string>> ProtocolPortList { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// rule name
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// state of this rule
        /// </summary>
        [Output("ruleState")]
        public Output<string?> RuleState { get; private set; } = null!;

        /// <summary>
        /// source address
        /// </summary>
        [Output("source")]
        public Output<Outputs.SourceAddrResponse?> Source { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// tag for rule
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.TagInfoResponse>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PreRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreRule(string name, PreRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20231010preview:PreRule", name, args ?? new PreRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20231010preview:PreRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829preview:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20230901:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20230901preview:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240119preview:PreRule" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240207preview:PreRule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PreRule(name, id, options);
        }
    }

    public sealed class PreRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// rule action
        /// </summary>
        [Input("actionType")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.ActionEnum>? ActionType { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;

        /// <summary>
        /// array of rule applications
        /// </summary>
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        /// <summary>
        /// rule comment
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// rule category
        /// </summary>
        [Input("category")]
        public Input<Inputs.CategoryArgs>? Category { get; set; }

        /// <summary>
        /// enable or disable decryption
        /// </summary>
        [Input("decryptionRuleType")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.DecryptionRuleTypeEnum>? DecryptionRuleType { get; set; }

        /// <summary>
        /// rule description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// destination address
        /// </summary>
        [Input("destination")]
        public Input<Inputs.DestinationAddrArgs>? Destination { get; set; }

        /// <summary>
        /// enable or disable logging
        /// </summary>
        [Input("enableLogging")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.StateEnum>? EnableLogging { get; set; }

        /// <summary>
        /// GlobalRulestack resource name
        /// </summary>
        [Input("globalRulestackName", required: true)]
        public Input<string> GlobalRulestackName { get; set; } = null!;

        /// <summary>
        /// inbound Inspection Certificate
        /// </summary>
        [Input("inboundInspectionCertificate")]
        public Input<string>? InboundInspectionCertificate { get; set; }

        /// <summary>
        /// cidr should not be 'any'
        /// </summary>
        [Input("negateDestination")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.BooleanEnum>? NegateDestination { get; set; }

        /// <summary>
        /// cidr should not be 'any'
        /// </summary>
        [Input("negateSource")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.BooleanEnum>? NegateSource { get; set; }

        /// <summary>
        /// Pre Rule priority
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// any, application-default, TCP:number, UDP:number
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("protocolPortList")]
        private InputList<string>? _protocolPortList;

        /// <summary>
        /// prot port list
        /// </summary>
        public InputList<string> ProtocolPortList
        {
            get => _protocolPortList ?? (_protocolPortList = new InputList<string>());
            set => _protocolPortList = value;
        }

        /// <summary>
        /// rule name
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// state of this rule
        /// </summary>
        [Input("ruleState")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.StateEnum>? RuleState { get; set; }

        /// <summary>
        /// source address
        /// </summary>
        [Input("source")]
        public Input<Inputs.SourceAddrArgs>? Source { get; set; }

        [Input("tags")]
        private InputList<Inputs.TagInfoArgs>? _tags;

        /// <summary>
        /// tag for rule
        /// </summary>
        public InputList<Inputs.TagInfoArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TagInfoArgs>());
            set => _tags = value;
        }

        public PreRuleArgs()
        {
            Protocol = "application-default";
        }
        public static new PreRuleArgs Empty => new PreRuleArgs();
    }
}
