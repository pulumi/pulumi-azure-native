// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20231010Preview
{
    /// <summary>
    /// PaloAltoNetworks GlobalRulestack
    /// </summary>
    [AzureNativeResourceType("azure-native:cloudngfw/v20231010preview:GlobalRulestack")]
    public partial class GlobalRulestack : global::Pulumi.CustomResource
    {
        /// <summary>
        /// subscription scope of global rulestack
        /// </summary>
        [Output("associatedSubscriptions")]
        public Output<ImmutableArray<string>> AssociatedSubscriptions { get; private set; } = null!;

        /// <summary>
        /// Mode for default rules creation
        /// </summary>
        [Output("defaultMode")]
        public Output<string?> DefaultMode { get; private set; } = null!;

        /// <summary>
        /// rulestack description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.AzureResourceManagerManagedIdentityPropertiesResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Global Location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// minimum version
        /// </summary>
        [Output("minAppIdVersion")]
        public Output<string?> MinAppIdVersion { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// PanEtag info
        /// </summary>
        [Output("panEtag")]
        public Output<string?> PanEtag { get; private set; } = null!;

        /// <summary>
        /// Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks
        /// </summary>
        [Output("panLocation")]
        public Output<string?> PanLocation { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Rulestack Type
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// Security Profile
        /// </summary>
        [Output("securityServices")]
        public Output<Outputs.SecurityServicesResponse?> SecurityServices { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalRulestack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalRulestack(string name, GlobalRulestackArgs? args = null, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20231010preview:GlobalRulestack", name, args ?? new GlobalRulestackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalRulestack(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20231010preview:GlobalRulestack", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829preview:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20230901:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20230901preview:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240119preview:GlobalRulestack" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240207preview:GlobalRulestack" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalRulestack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalRulestack Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GlobalRulestack(name, id, options);
        }
    }

    public sealed class GlobalRulestackArgs : global::Pulumi.ResourceArgs
    {
        [Input("associatedSubscriptions")]
        private InputList<string>? _associatedSubscriptions;

        /// <summary>
        /// subscription scope of global rulestack
        /// </summary>
        public InputList<string> AssociatedSubscriptions
        {
            get => _associatedSubscriptions ?? (_associatedSubscriptions = new InputList<string>());
            set => _associatedSubscriptions = value;
        }

        /// <summary>
        /// Mode for default rules creation
        /// </summary>
        [Input("defaultMode")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.DefaultMode>? DefaultMode { get; set; }

        /// <summary>
        /// rulestack description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// GlobalRulestack resource name
        /// </summary>
        [Input("globalRulestackName")]
        public Input<string>? GlobalRulestackName { get; set; }

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.AzureResourceManagerManagedIdentityPropertiesArgs>? Identity { get; set; }

        /// <summary>
        /// Global Location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// minimum version
        /// </summary>
        [Input("minAppIdVersion")]
        public Input<string>? MinAppIdVersion { get; set; }

        /// <summary>
        /// PanEtag info
        /// </summary>
        [Input("panEtag")]
        public Input<string>? PanEtag { get; set; }

        /// <summary>
        /// Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks
        /// </summary>
        [Input("panLocation")]
        public Input<string>? PanLocation { get; set; }

        /// <summary>
        /// Rulestack Type
        /// </summary>
        [Input("scope")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20231010Preview.ScopeType>? Scope { get; set; }

        /// <summary>
        /// Security Profile
        /// </summary>
        [Input("securityServices")]
        public Input<Inputs.SecurityServicesArgs>? SecurityServices { get; set; }

        public GlobalRulestackArgs()
        {
        }
        public static new GlobalRulestackArgs Empty => new GlobalRulestackArgs();
    }
}
