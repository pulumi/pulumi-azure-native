// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20230901Preview
{
    /// <summary>
    /// PaloAltoNetworks Firewall
    /// </summary>
    [AzureNativeResourceType("azure-native:cloudngfw/v20230901preview:Firewall")]
    public partial class Firewall : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Associated Rulestack
        /// </summary>
        [Output("associatedRulestack")]
        public Output<Outputs.RulestackDetailsResponse?> AssociatedRulestack { get; private set; } = null!;

        /// <summary>
        /// DNS settings for Firewall
        /// </summary>
        [Output("dnsSettings")]
        public Output<Outputs.DNSSettingsResponse> DnsSettings { get; private set; } = null!;

        /// <summary>
        /// Frontend settings for Firewall
        /// </summary>
        [Output("frontEndSettings")]
        public Output<ImmutableArray<Outputs.FrontendSettingResponse>> FrontEndSettings { get; private set; } = null!;

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.AzureResourceManagerManagedIdentityPropertiesResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Panorama Managed: Default is False. Default will be CloudSec managed
        /// </summary>
        [Output("isPanoramaManaged")]
        public Output<string?> IsPanoramaManaged { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Marketplace details
        /// </summary>
        [Output("marketplaceDetails")]
        public Output<Outputs.MarketplaceDetailsResponse> MarketplaceDetails { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network settings
        /// </summary>
        [Output("networkProfile")]
        public Output<Outputs.NetworkProfileResponse> NetworkProfile { get; private set; } = null!;

        /// <summary>
        /// panEtag info
        /// </summary>
        [Output("panEtag")]
        public Output<string?> PanEtag { get; private set; } = null!;

        /// <summary>
        /// Panorama Configuration
        /// </summary>
        [Output("panoramaConfig")]
        public Output<Outputs.PanoramaConfigResponse?> PanoramaConfig { get; private set; } = null!;

        /// <summary>
        /// Billing plan information.
        /// </summary>
        [Output("planData")]
        public Output<Outputs.PlanDataResponse> PlanData { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Firewall resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Firewall(string name, FirewallArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20230901preview:Firewall", name, args ?? new FirewallArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Firewall(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cloudngfw/v20230901preview:Firewall", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20220829preview:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20230901:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20231010preview:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240119preview:Firewall" },
                    new global::Pulumi.Alias { Type = "azure-native:cloudngfw/v20240207preview:Firewall" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Firewall resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Firewall Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Firewall(name, id, options);
        }
    }

    public sealed class FirewallArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Associated Rulestack
        /// </summary>
        [Input("associatedRulestack")]
        public Input<Inputs.RulestackDetailsArgs>? AssociatedRulestack { get; set; }

        /// <summary>
        /// DNS settings for Firewall
        /// </summary>
        [Input("dnsSettings", required: true)]
        public Input<Inputs.DNSSettingsArgs> DnsSettings { get; set; } = null!;

        /// <summary>
        /// Firewall resource name
        /// </summary>
        [Input("firewallName")]
        public Input<string>? FirewallName { get; set; }

        [Input("frontEndSettings")]
        private InputList<Inputs.FrontendSettingArgs>? _frontEndSettings;

        /// <summary>
        /// Frontend settings for Firewall
        /// </summary>
        public InputList<Inputs.FrontendSettingArgs> FrontEndSettings
        {
            get => _frontEndSettings ?? (_frontEndSettings = new InputList<Inputs.FrontendSettingArgs>());
            set => _frontEndSettings = value;
        }

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.AzureResourceManagerManagedIdentityPropertiesArgs>? Identity { get; set; }

        /// <summary>
        /// Panorama Managed: Default is False. Default will be CloudSec managed
        /// </summary>
        [Input("isPanoramaManaged")]
        public InputUnion<string, Pulumi.AzureNative.Cloudngfw.V20230901Preview.BooleanEnum>? IsPanoramaManaged { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Marketplace details
        /// </summary>
        [Input("marketplaceDetails", required: true)]
        public Input<Inputs.MarketplaceDetailsArgs> MarketplaceDetails { get; set; } = null!;

        /// <summary>
        /// Network settings
        /// </summary>
        [Input("networkProfile", required: true)]
        public Input<Inputs.NetworkProfileArgs> NetworkProfile { get; set; } = null!;

        /// <summary>
        /// panEtag info
        /// </summary>
        [Input("panEtag")]
        public Input<string>? PanEtag { get; set; }

        /// <summary>
        /// Panorama Configuration
        /// </summary>
        [Input("panoramaConfig")]
        public Input<Inputs.PanoramaConfigArgs>? PanoramaConfig { get; set; }

        /// <summary>
        /// Billing plan information.
        /// </summary>
        [Input("planData", required: true)]
        public Input<Inputs.PlanDataArgs> PlanData { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FirewallArgs()
        {
        }
        public static new FirewallArgs Empty => new FirewallArgs();
    }
}
