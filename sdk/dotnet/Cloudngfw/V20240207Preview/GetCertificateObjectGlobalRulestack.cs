// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20240207Preview
{
    public static class GetCertificateObjectGlobalRulestack
    {
        /// <summary>
        /// Get a CertificateObjectGlobalRulestackResource
        /// </summary>
        public static Task<GetCertificateObjectGlobalRulestackResult> InvokeAsync(GetCertificateObjectGlobalRulestackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateObjectGlobalRulestackResult>("azure-native:cloudngfw/v20240207preview:getCertificateObjectGlobalRulestack", args ?? new GetCertificateObjectGlobalRulestackArgs(), options.WithDefaults());

        /// <summary>
        /// Get a CertificateObjectGlobalRulestackResource
        /// </summary>
        public static Output<GetCertificateObjectGlobalRulestackResult> Invoke(GetCertificateObjectGlobalRulestackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateObjectGlobalRulestackResult>("azure-native:cloudngfw/v20240207preview:getCertificateObjectGlobalRulestack", args ?? new GetCertificateObjectGlobalRulestackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateObjectGlobalRulestackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// GlobalRulestack resource name
        /// </summary>
        [Input("globalRulestackName", required: true)]
        public string GlobalRulestackName { get; set; } = null!;

        /// <summary>
        /// certificate name
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCertificateObjectGlobalRulestackArgs()
        {
        }
        public static new GetCertificateObjectGlobalRulestackArgs Empty => new GetCertificateObjectGlobalRulestackArgs();
    }

    public sealed class GetCertificateObjectGlobalRulestackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// GlobalRulestack resource name
        /// </summary>
        [Input("globalRulestackName", required: true)]
        public Input<string> GlobalRulestackName { get; set; } = null!;

        /// <summary>
        /// certificate name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCertificateObjectGlobalRulestackInvokeArgs()
        {
        }
        public static new GetCertificateObjectGlobalRulestackInvokeArgs Empty => new GetCertificateObjectGlobalRulestackInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateObjectGlobalRulestackResult
    {
        /// <summary>
        /// comment for this object
        /// </summary>
        public readonly string? AuditComment;
        /// <summary>
        /// use certificate self signed
        /// </summary>
        public readonly string CertificateSelfSigned;
        /// <summary>
        /// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
        /// </summary>
        public readonly string? CertificateSignerResourceId;
        /// <summary>
        /// user description for this object
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// read only string representing last create or update
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCertificateObjectGlobalRulestackResult(
            string? auditComment,

            string certificateSelfSigned,

            string? certificateSignerResourceId,

            string? description,

            string? etag,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AuditComment = auditComment;
            CertificateSelfSigned = certificateSelfSigned;
            CertificateSignerResourceId = certificateSignerResourceId;
            Description = description;
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
