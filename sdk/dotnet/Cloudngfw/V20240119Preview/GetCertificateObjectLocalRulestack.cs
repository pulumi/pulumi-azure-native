// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20240119Preview
{
    public static class GetCertificateObjectLocalRulestack
    {
        /// <summary>
        /// Get a CertificateObjectLocalRulestackResource
        /// </summary>
        public static Task<GetCertificateObjectLocalRulestackResult> InvokeAsync(GetCertificateObjectLocalRulestackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateObjectLocalRulestackResult>("azure-native:cloudngfw/v20240119preview:getCertificateObjectLocalRulestack", args ?? new GetCertificateObjectLocalRulestackArgs(), options.WithDefaults());

        /// <summary>
        /// Get a CertificateObjectLocalRulestackResource
        /// </summary>
        public static Output<GetCertificateObjectLocalRulestackResult> Invoke(GetCertificateObjectLocalRulestackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateObjectLocalRulestackResult>("azure-native:cloudngfw/v20240119preview:getCertificateObjectLocalRulestack", args ?? new GetCertificateObjectLocalRulestackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateObjectLocalRulestackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// LocalRulestack resource name
        /// </summary>
        [Input("localRulestackName", required: true)]
        public string LocalRulestackName { get; set; } = null!;

        /// <summary>
        /// certificate name
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCertificateObjectLocalRulestackArgs()
        {
        }
        public static new GetCertificateObjectLocalRulestackArgs Empty => new GetCertificateObjectLocalRulestackArgs();
    }

    public sealed class GetCertificateObjectLocalRulestackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// LocalRulestack resource name
        /// </summary>
        [Input("localRulestackName", required: true)]
        public Input<string> LocalRulestackName { get; set; } = null!;

        /// <summary>
        /// certificate name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCertificateObjectLocalRulestackInvokeArgs()
        {
        }
        public static new GetCertificateObjectLocalRulestackInvokeArgs Empty => new GetCertificateObjectLocalRulestackInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateObjectLocalRulestackResult
    {
        /// <summary>
        /// comment for this object
        /// </summary>
        public readonly string? AuditComment;
        /// <summary>
        /// use certificate self signed
        /// </summary>
        public readonly string CertificateSelfSigned;
        /// <summary>
        /// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
        /// </summary>
        public readonly string? CertificateSignerResourceId;
        /// <summary>
        /// user description for this object
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// read only string representing last create or update
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCertificateObjectLocalRulestackResult(
            string? auditComment,

            string certificateSelfSigned,

            string? certificateSignerResourceId,

            string? description,

            string? etag,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AuditComment = auditComment;
            CertificateSelfSigned = certificateSelfSigned;
            CertificateSignerResourceId = certificateSignerResourceId;
            Description = description;
            Etag = etag;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
