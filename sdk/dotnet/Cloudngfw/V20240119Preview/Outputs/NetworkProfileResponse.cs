// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cloudngfw.V20240119Preview.Outputs
{

    /// <summary>
    /// Network settings for Firewall
    /// </summary>
    [OutputType]
    public sealed class NetworkProfileResponse
    {
        /// <summary>
        /// Egress nat IP to use
        /// </summary>
        public readonly ImmutableArray<Outputs.IPAddressResponse> EgressNatIp;
        /// <summary>
        /// Enable egress NAT, enabled by default
        /// </summary>
        public readonly string EnableEgressNat;
        /// <summary>
        /// vnet or vwan, cannot be updated
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// Array of ipv4 destination address for which source NAT is to be performed
        /// </summary>
        public readonly ImmutableArray<string> PrivateSourceNatRulesDestination;
        /// <summary>
        /// List of IPs associated with the Firewall
        /// </summary>
        public readonly ImmutableArray<Outputs.IPAddressResponse> PublicIps;
        /// <summary>
        /// Non-RFC 1918 address
        /// </summary>
        public readonly ImmutableArray<string> TrustedRanges;
        /// <summary>
        /// Vnet configurations
        /// </summary>
        public readonly Outputs.VnetConfigurationResponse? VnetConfiguration;
        /// <summary>
        /// Vwan configurations
        /// </summary>
        public readonly Outputs.VwanConfigurationResponse? VwanConfiguration;

        [OutputConstructor]
        private NetworkProfileResponse(
            ImmutableArray<Outputs.IPAddressResponse> egressNatIp,

            string enableEgressNat,

            string networkType,

            ImmutableArray<string> privateSourceNatRulesDestination,

            ImmutableArray<Outputs.IPAddressResponse> publicIps,

            ImmutableArray<string> trustedRanges,

            Outputs.VnetConfigurationResponse? vnetConfiguration,

            Outputs.VwanConfigurationResponse? vwanConfiguration)
        {
            EgressNatIp = egressNatIp;
            EnableEgressNat = enableEgressNat;
            NetworkType = networkType;
            PrivateSourceNatRulesDestination = privateSourceNatRulesDestination;
            PublicIps = publicIps;
            TrustedRanges = trustedRanges;
            VnetConfiguration = vnetConfiguration;
            VwanConfiguration = vwanConfiguration;
        }
    }
}
