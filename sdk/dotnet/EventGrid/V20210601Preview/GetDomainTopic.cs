// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20210601Preview
{
    public static class GetDomainTopic
    {
        /// <summary>
        /// Domain Topic.
        /// </summary>
        public static Task<GetDomainTopicResult> InvokeAsync(GetDomainTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDomainTopicResult>("azure-native:eventgrid/v20210601preview:getDomainTopic", args ?? new GetDomainTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Domain Topic.
        /// </summary>
        public static Output<GetDomainTopicResult> Invoke(GetDomainTopicInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDomainTopicResult>("azure-native:eventgrid/v20210601preview:getDomainTopic", args ?? new GetDomainTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainTopicArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        /// <summary>
        /// Name of the topic.
        /// </summary>
        [Input("domainTopicName", required: true)]
        public string DomainTopicName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDomainTopicArgs()
        {
        }
    }

    public sealed class GetDomainTopicInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Name of the topic.
        /// </summary>
        [Input("domainTopicName", required: true)]
        public Input<string> DomainTopicName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDomainTopicInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDomainTopicResult
    {
        /// <summary>
        /// Fully qualified identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the domain topic.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system metadata relating to Domain Topic resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDomainTopicResult(
            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
