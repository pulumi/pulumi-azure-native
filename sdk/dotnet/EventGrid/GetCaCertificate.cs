// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid
{
    public static class GetCaCertificate
    {
        /// <summary>
        /// Get properties of a CA certificate.
        /// 
        /// Uses Azure REST API version 2025-02-15.
        /// 
        /// Other available API versions: 2023-06-01-preview, 2023-12-15-preview, 2024-06-01-preview, 2024-12-15-preview, 2025-04-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native eventgrid [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetCaCertificateResult> InvokeAsync(GetCaCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCaCertificateResult>("azure-native:eventgrid:getCaCertificate", args ?? new GetCaCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of a CA certificate.
        /// 
        /// Uses Azure REST API version 2025-02-15.
        /// 
        /// Other available API versions: 2023-06-01-preview, 2023-12-15-preview, 2024-06-01-preview, 2024-12-15-preview, 2025-04-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native eventgrid [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetCaCertificateResult> Invoke(GetCaCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCaCertificateResult>("azure-native:eventgrid:getCaCertificate", args ?? new GetCaCertificateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of a CA certificate.
        /// 
        /// Uses Azure REST API version 2025-02-15.
        /// 
        /// Other available API versions: 2023-06-01-preview, 2023-12-15-preview, 2024-06-01-preview, 2024-12-15-preview, 2025-04-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native eventgrid [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetCaCertificateResult> Invoke(GetCaCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCaCertificateResult>("azure-native:eventgrid:getCaCertificate", args ?? new GetCaCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCaCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the CA certificate.
        /// </summary>
        [Input("caCertificateName", required: true)]
        public string CaCertificateName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCaCertificateArgs()
        {
        }
        public static new GetCaCertificateArgs Empty => new GetCaCertificateArgs();
    }

    public sealed class GetCaCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the CA certificate.
        /// </summary>
        [Input("caCertificateName", required: true)]
        public Input<string> CaCertificateName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCaCertificateInvokeArgs()
        {
        }
        public static new GetCaCertificateInvokeArgs Empty => new GetCaCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCaCertificateResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Description for the CA Certificate resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
        /// </summary>
        public readonly string? EncodedCertificate;
        /// <summary>
        /// Certificate expiry time in UTC. This is a read-only field.
        /// </summary>
        public readonly string ExpiryTimeInUtc;
        /// <summary>
        /// Fully qualified identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Certificate issue time in UTC. This is a read-only field.
        /// </summary>
        public readonly string IssueTimeInUtc;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the CA Certificate resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system metadata relating to the Event Grid resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCaCertificateResult(
            string azureApiVersion,

            string? description,

            string? encodedCertificate,

            string expiryTimeInUtc,

            string id,

            string issueTimeInUtc,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Description = description;
            EncodedCertificate = encodedCertificate;
            ExpiryTimeInUtc = expiryTimeInUtc;
            Id = id;
            IssueTimeInUtc = issueTimeInUtc;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
