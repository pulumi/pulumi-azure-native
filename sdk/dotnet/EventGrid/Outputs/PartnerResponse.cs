// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.Outputs
{

    /// <summary>
    /// Information about the partner.
    /// </summary>
    [OutputType]
    public sealed class PartnerResponse
    {
        /// <summary>
        /// Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.
        /// If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.
        /// </summary>
        public readonly string? AuthorizationExpirationTimeInUtc;
        /// <summary>
        /// The partner name.
        /// </summary>
        public readonly string? PartnerName;
        /// <summary>
        /// The immutableId of the corresponding partner registration.
        /// </summary>
        public readonly string? PartnerRegistrationImmutableId;

        [OutputConstructor]
        private PartnerResponse(
            string? authorizationExpirationTimeInUtc,

            string? partnerName,

            string? partnerRegistrationImmutableId)
        {
            AuthorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
            PartnerName = partnerName;
            PartnerRegistrationImmutableId = partnerRegistrationImmutableId;
        }
    }
}
