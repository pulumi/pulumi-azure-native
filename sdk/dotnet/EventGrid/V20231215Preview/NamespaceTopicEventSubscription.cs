// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20231215Preview
{
    /// <summary>
    /// Event Subscription.
    /// </summary>
    [AzureNativeResourceType("azure-native:eventgrid/v20231215preview:NamespaceTopicEventSubscription")]
    public partial class NamespaceTopicEventSubscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information about the delivery configuration of the event subscription.
        /// </summary>
        [Output("deliveryConfiguration")]
        public Output<Outputs.DeliveryConfigurationResponse?> DeliveryConfiguration { get; private set; } = null!;

        /// <summary>
        /// The event delivery schema for the event subscription.
        /// </summary>
        [Output("eventDeliverySchema")]
        public Output<string?> EventDeliverySchema { get; private set; } = null!;

        /// <summary>
        /// Information about the filter for the event subscription.
        /// </summary>
        [Output("filtersConfiguration")]
        public Output<Outputs.FiltersConfigurationResponse?> FiltersConfiguration { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the event subscription.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to Event Subscription resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NamespaceTopicEventSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamespaceTopicEventSubscription(string name, NamespaceTopicEventSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20231215preview:NamespaceTopicEventSubscription", name, args ?? new NamespaceTopicEventSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamespaceTopicEventSubscription(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20231215preview:NamespaceTopicEventSubscription", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid:NamespaceTopicEventSubscription" },
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid/v20230601preview:NamespaceTopicEventSubscription" },
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid/v20240601preview:NamespaceTopicEventSubscription" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamespaceTopicEventSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamespaceTopicEventSubscription Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NamespaceTopicEventSubscription(name, id, options);
        }
    }

    public sealed class NamespaceTopicEventSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the delivery configuration of the event subscription.
        /// </summary>
        [Input("deliveryConfiguration")]
        public Input<Inputs.DeliveryConfigurationArgs>? DeliveryConfiguration { get; set; }

        /// <summary>
        /// The event delivery schema for the event subscription.
        /// </summary>
        [Input("eventDeliverySchema")]
        public InputUnion<string, Pulumi.AzureNative.EventGrid.V20231215Preview.DeliverySchema>? EventDeliverySchema { get; set; }

        /// <summary>
        /// Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
        /// </summary>
        [Input("eventSubscriptionName")]
        public Input<string>? EventSubscriptionName { get; set; }

        /// <summary>
        /// Information about the filter for the event subscription.
        /// </summary>
        [Input("filtersConfiguration")]
        public Input<Inputs.FiltersConfigurationArgs>? FiltersConfiguration { get; set; }

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace topic.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public NamespaceTopicEventSubscriptionArgs()
        {
        }
        public static new NamespaceTopicEventSubscriptionArgs Empty => new NamespaceTopicEventSubscriptionArgs();
    }
}
