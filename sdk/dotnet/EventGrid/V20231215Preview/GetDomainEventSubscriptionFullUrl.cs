// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20231215Preview
{
    public static class GetDomainEventSubscriptionFullUrl
    {
        /// <summary>
        /// Get the full endpoint URL for an event subscription for domain.
        /// </summary>
        public static Task<GetDomainEventSubscriptionFullUrlResult> InvokeAsync(GetDomainEventSubscriptionFullUrlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainEventSubscriptionFullUrlResult>("azure-native:eventgrid/v20231215preview:getDomainEventSubscriptionFullUrl", args ?? new GetDomainEventSubscriptionFullUrlArgs(), options.WithDefaults());

        /// <summary>
        /// Get the full endpoint URL for an event subscription for domain.
        /// </summary>
        public static Output<GetDomainEventSubscriptionFullUrlResult> Invoke(GetDomainEventSubscriptionFullUrlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainEventSubscriptionFullUrlResult>("azure-native:eventgrid/v20231215preview:getDomainEventSubscriptionFullUrl", args ?? new GetDomainEventSubscriptionFullUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainEventSubscriptionFullUrlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain topic.
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        /// <summary>
        /// Name of the event subscription.
        /// </summary>
        [Input("eventSubscriptionName", required: true)]
        public string EventSubscriptionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDomainEventSubscriptionFullUrlArgs()
        {
        }
        public static new GetDomainEventSubscriptionFullUrlArgs Empty => new GetDomainEventSubscriptionFullUrlArgs();
    }

    public sealed class GetDomainEventSubscriptionFullUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain topic.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Name of the event subscription.
        /// </summary>
        [Input("eventSubscriptionName", required: true)]
        public Input<string> EventSubscriptionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDomainEventSubscriptionFullUrlInvokeArgs()
        {
        }
        public static new GetDomainEventSubscriptionFullUrlInvokeArgs Empty => new GetDomainEventSubscriptionFullUrlInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainEventSubscriptionFullUrlResult
    {
        /// <summary>
        /// The URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        public readonly string? EndpointUrl;

        [OutputConstructor]
        private GetDomainEventSubscriptionFullUrlResult(string? endpointUrl)
        {
            EndpointUrl = endpointUrl;
        }
    }
}
