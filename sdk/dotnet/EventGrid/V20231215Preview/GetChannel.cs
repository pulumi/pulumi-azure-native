// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20231215Preview
{
    public static class GetChannel
    {
        /// <summary>
        /// Get properties of a channel.
        /// </summary>
        public static Task<GetChannelResult> InvokeAsync(GetChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChannelResult>("azure-native:eventgrid/v20231215preview:getChannel", args ?? new GetChannelArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of a channel.
        /// </summary>
        public static Output<GetChannelResult> Invoke(GetChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelResult>("azure-native:eventgrid/v20231215preview:getChannel", args ?? new GetChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChannelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the channel.
        /// </summary>
        [Input("channelName", required: true)]
        public string ChannelName { get; set; } = null!;

        /// <summary>
        /// Name of the partner namespace.
        /// </summary>
        [Input("partnerNamespaceName", required: true)]
        public string PartnerNamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the partners subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetChannelArgs()
        {
        }
        public static new GetChannelArgs Empty => new GetChannelArgs();
    }

    public sealed class GetChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the channel.
        /// </summary>
        [Input("channelName", required: true)]
        public Input<string> ChannelName { get; set; } = null!;

        /// <summary>
        /// Name of the partner namespace.
        /// </summary>
        [Input("partnerNamespaceName", required: true)]
        public Input<string> PartnerNamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the partners subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetChannelInvokeArgs()
        {
        }
        public static new GetChannelInvokeArgs Empty => new GetChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetChannelResult
    {
        /// <summary>
        /// The type of the event channel which represents the direction flow of events.
        /// </summary>
        public readonly string? ChannelType;
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        public readonly string? ExpirationTimeIfNotActivatedUtc;
        /// <summary>
        /// Fully qualified identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        public readonly string? MessageForActivation;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.
        /// </summary>
        public readonly Outputs.WebhookPartnerDestinationInfoResponse? PartnerDestinationInfo;
        /// <summary>
        /// This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
        /// </summary>
        public readonly Outputs.PartnerTopicInfoResponse? PartnerTopicInfo;
        /// <summary>
        /// Provisioning state of the channel.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The readiness state of the corresponding partner topic.
        /// </summary>
        public readonly string? ReadinessState;
        /// <summary>
        /// The system metadata relating to Channel resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetChannelResult(
            string? channelType,

            string? expirationTimeIfNotActivatedUtc,

            string id,

            string? messageForActivation,

            string name,

            Outputs.WebhookPartnerDestinationInfoResponse? partnerDestinationInfo,

            Outputs.PartnerTopicInfoResponse? partnerTopicInfo,

            string? provisioningState,

            string? readinessState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ChannelType = channelType;
            ExpirationTimeIfNotActivatedUtc = expirationTimeIfNotActivatedUtc;
            Id = id;
            MessageForActivation = messageForActivation;
            Name = name;
            PartnerDestinationInfo = partnerDestinationInfo;
            PartnerTopicInfo = partnerTopicInfo;
            ProvisioningState = provisioningState;
            ReadinessState = readinessState;
            SystemData = systemData;
            Type = type;
        }
    }
}
