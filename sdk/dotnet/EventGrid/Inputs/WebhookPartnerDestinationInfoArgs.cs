// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.Inputs
{

    /// <summary>
    /// Information about the WebHook of the partner destination.
    /// </summary>
    public sealed class WebhookPartnerDestinationInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner destination associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Input("azureSubscriptionId")]
        public Input<string>? AzureSubscriptionId { get; set; }

        /// <summary>
        /// Partner client authentication
        /// </summary>
        [Input("clientAuthentication")]
        public Input<Inputs.AzureADPartnerClientAuthenticationArgs>? ClientAuthentication { get; set; }

        /// <summary>
        /// The base URL that represents the endpoint of the partner destination.
        /// </summary>
        [Input("endpointBaseUrl")]
        public Input<string>? EndpointBaseUrl { get; set; }

        /// <summary>
        /// Additional context of the partner destination endpoint.
        /// </summary>
        [Input("endpointServiceContext")]
        public Input<string>? EndpointServiceContext { get; set; }

        /// <summary>
        /// Type of the endpoint for the partner destination
        /// Expected value is 'WebHook'.
        /// </summary>
        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        /// <summary>
        /// The URL that represents the endpoint of the partner destination.
        /// </summary>
        [Input("endpointUrl")]
        public Input<string>? EndpointUrl { get; set; }

        /// <summary>
        /// Name of the partner destination associated with the channel.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Azure Resource Group of the subscriber. The partner destination associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("resourceMoveChangeHistory")]
        private InputList<Inputs.ResourceMoveChangeHistoryArgs>? _resourceMoveChangeHistory;

        /// <summary>
        /// Change history of the resource move.
        /// </summary>
        public InputList<Inputs.ResourceMoveChangeHistoryArgs> ResourceMoveChangeHistory
        {
            get => _resourceMoveChangeHistory ?? (_resourceMoveChangeHistory = new InputList<Inputs.ResourceMoveChangeHistoryArgs>());
            set => _resourceMoveChangeHistory = value;
        }

        public WebhookPartnerDestinationInfoArgs()
        {
            EndpointType = "WebHook";
        }
        public static new WebhookPartnerDestinationInfoArgs Empty => new WebhookPartnerDestinationInfoArgs();
    }
}
