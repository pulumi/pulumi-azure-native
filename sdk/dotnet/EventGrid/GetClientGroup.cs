// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid
{
    public static class GetClientGroup
    {
        /// <summary>
        /// Get properties of a client group.
        /// API Version: 2023-06-01-preview.
        /// </summary>
        public static Task<GetClientGroupResult> InvokeAsync(GetClientGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClientGroupResult>("azure-native:eventgrid:getClientGroup", args ?? new GetClientGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of a client group.
        /// API Version: 2023-06-01-preview.
        /// </summary>
        public static Output<GetClientGroupResult> Invoke(GetClientGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClientGroupResult>("azure-native:eventgrid:getClientGroup", args ?? new GetClientGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClientGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the client group.
        /// </summary>
        [Input("clientGroupName", required: true)]
        public string ClientGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClientGroupArgs()
        {
        }
        public static new GetClientGroupArgs Empty => new GetClientGroupArgs();
    }

    public sealed class GetClientGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the client group.
        /// </summary>
        [Input("clientGroupName", required: true)]
        public Input<string> ClientGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetClientGroupInvokeArgs()
        {
        }
        public static new GetClientGroupInvokeArgs Empty => new GetClientGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetClientGroupResult
    {
        /// <summary>
        /// Description for the Client Group resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the ClientGroup resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The grouping query for the clients.
        /// Example : attributes.keyName IN ['a', 'b', 'c'].
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// The system metadata relating to the ClientGroup resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetClientGroupResult(
            string? description,

            string id,

            string name,

            string provisioningState,

            string? query,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Description = description;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Query = query;
            SystemData = systemData;
            Type = type;
        }
    }
}
