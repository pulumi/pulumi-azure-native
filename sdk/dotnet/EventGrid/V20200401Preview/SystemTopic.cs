// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventGrid.V20200401Preview
{
    /// <summary>
    /// EventGrid System Topic.
    /// </summary>
    public partial class SystemTopic : Pulumi.CustomResource
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Metric resource id for the system topic.
        /// </summary>
        [Output("metricResourceId")]
        public Output<string> MetricResourceId { get; private set; } = null!;

        /// <summary>
        /// Name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the system topic.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Source for the system topic.
        /// </summary>
        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        /// <summary>
        /// Tags of the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// TopicType for the system topic.
        /// </summary>
        [Output("topicType")]
        public Output<string?> TopicType { get; private set; } = null!;

        /// <summary>
        /// Type of the resource
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SystemTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemTopic(string name, SystemTopicArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:eventgrid/v20200401preview:SystemTopic", name, args ?? new SystemTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemTopic(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:eventgrid/v20200401preview:SystemTopic", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemTopic Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SystemTopic(name, id, options);
        }
    }

    public sealed class SystemTopicArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Source for the system topic.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Name of the system topic.
        /// </summary>
        [Input("systemTopicName", required: true)]
        public Input<string> SystemTopicName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags of the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// TopicType for the system topic.
        /// </summary>
        [Input("topicType")]
        public Input<string>? TopicType { get; set; }

        public SystemTopicArgs()
        {
        }
    }
}
