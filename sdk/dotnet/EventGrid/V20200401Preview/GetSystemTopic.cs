// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventGrid.V20200401Preview
{
    public static class GetSystemTopic
    {
        public static Task<GetSystemTopicResult> InvokeAsync(GetSystemTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSystemTopicResult>("azure-nextgen:eventgrid/v20200401preview:getSystemTopic", args ?? new GetSystemTopicArgs(), options.WithVersion());
    }


    public sealed class GetSystemTopicArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the system topic.
        /// </summary>
        [Input("systemTopicName", required: true)]
        public string SystemTopicName { get; set; } = null!;

        public GetSystemTopicArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSystemTopicResult
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Metric resource id for the system topic.
        /// </summary>
        public readonly string MetricResourceId;
        /// <summary>
        /// Name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the system topic.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Source for the system topic.
        /// </summary>
        public readonly string? Source;
        /// <summary>
        /// Tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// TopicType for the system topic.
        /// </summary>
        public readonly string? TopicType;
        /// <summary>
        /// Type of the resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSystemTopicResult(
            string location,

            string metricResourceId,

            string name,

            string provisioningState,

            string? source,

            ImmutableDictionary<string, string>? tags,

            string? topicType,

            string type)
        {
            Location = location;
            MetricResourceId = metricResourceId;
            Name = name;
            ProvisioningState = provisioningState;
            Source = source;
            Tags = tags;
            TopicType = topicType;
            Type = type;
        }
    }
}
