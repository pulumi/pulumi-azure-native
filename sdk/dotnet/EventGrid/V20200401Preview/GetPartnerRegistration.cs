// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventGrid.V20200401Preview
{
    public static class GetPartnerRegistration
    {
        public static Task<GetPartnerRegistrationResult> InvokeAsync(GetPartnerRegistrationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPartnerRegistrationResult>("azure-nextgen:eventgrid/v20200401preview:getPartnerRegistration", args ?? new GetPartnerRegistrationArgs(), options.WithVersion());
    }


    public sealed class GetPartnerRegistrationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the partner registration.
        /// </summary>
        [Input("partnerRegistrationName", required: true)]
        public string PartnerRegistrationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPartnerRegistrationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPartnerRegistrationResult
    {
        /// <summary>
        /// List of Azure subscription Ids that are authorized to create a partner namespace
        /// associated with this partner registration. This is an optional property. Creating
        /// partner namespaces is always permitted under the same Azure subscription as the one used
        /// for creating the partner registration.
        /// </summary>
        public readonly ImmutableArray<string> AuthorizedAzureSubscriptionIds;
        /// <summary>
        /// The extension of the customer service URI of the publisher.
        /// </summary>
        public readonly string? CustomerServiceUri;
        /// <summary>
        /// Location of the resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// URI of the logo.
        /// </summary>
        public readonly string? LogoUri;
        /// <summary>
        /// Long description for the custom scenarios and integration to be displayed in the portal if needed.
        /// Length of this description should not exceed 2048 characters.
        /// </summary>
        public readonly string? LongDescription;
        /// <summary>
        /// Name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
        /// </summary>
        public readonly string? PartnerCustomerServiceExtension;
        /// <summary>
        /// The customer service number of the publisher. The expected phone format should start with a '+' sign 
        /// followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
        /// length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
        /// +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
        /// </summary>
        public readonly string? PartnerCustomerServiceNumber;
        /// <summary>
        /// Official name of the partner name. For example: "Contoso".
        /// </summary>
        public readonly string? PartnerName;
        /// <summary>
        /// Short description of the partner resource type. The length of this description should not exceed 256 characters.
        /// </summary>
        public readonly string? PartnerResourceTypeDescription;
        /// <summary>
        /// Display name of the partner resource type.
        /// </summary>
        public readonly string? PartnerResourceTypeDisplayName;
        /// <summary>
        /// Name of the partner resource type.
        /// </summary>
        public readonly string? PartnerResourceTypeName;
        /// <summary>
        /// Provisioning state of the partner registration.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// URI of the partner website that can be used by Azure customers to setup Event Grid
        /// integration on an event source.
        /// </summary>
        public readonly string? SetupUri;
        /// <summary>
        /// Tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of the resource
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Visibility state of the partner registration.
        /// </summary>
        public readonly string? VisibilityState;

        [OutputConstructor]
        private GetPartnerRegistrationResult(
            ImmutableArray<string> authorizedAzureSubscriptionIds,

            string? customerServiceUri,

            string location,

            string? logoUri,

            string? longDescription,

            string name,

            string? partnerCustomerServiceExtension,

            string? partnerCustomerServiceNumber,

            string? partnerName,

            string? partnerResourceTypeDescription,

            string? partnerResourceTypeDisplayName,

            string? partnerResourceTypeName,

            string provisioningState,

            string? setupUri,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? visibilityState)
        {
            AuthorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
            CustomerServiceUri = customerServiceUri;
            Location = location;
            LogoUri = logoUri;
            LongDescription = longDescription;
            Name = name;
            PartnerCustomerServiceExtension = partnerCustomerServiceExtension;
            PartnerCustomerServiceNumber = partnerCustomerServiceNumber;
            PartnerName = partnerName;
            PartnerResourceTypeDescription = partnerResourceTypeDescription;
            PartnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
            PartnerResourceTypeName = partnerResourceTypeName;
            ProvisioningState = provisioningState;
            SetupUri = setupUri;
            Tags = tags;
            Type = type;
            VisibilityState = visibilityState;
        }
    }
}
