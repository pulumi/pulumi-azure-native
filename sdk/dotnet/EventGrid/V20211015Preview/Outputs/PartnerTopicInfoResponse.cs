// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20211015Preview.Outputs
{

    /// <summary>
    /// Properties of the corresponding partner topic of a Channel.
    /// </summary>
    [OutputType]
    public sealed class PartnerTopicInfoResponse
    {
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        public readonly string? AzureSubscriptionId;
        /// <summary>
        /// Event Type Information for the partner topic. This information is provided by the publisher and can be used by the 
        /// subscriber to view different types of events that are published.
        /// </summary>
        public readonly Outputs.EventTypeInfoResponse? EventTypeInfo;
        /// <summary>
        /// Name of the partner topic associated with the channel.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        public readonly string? ResourceGroupName;
        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        public readonly string? Source;

        [OutputConstructor]
        private PartnerTopicInfoResponse(
            string? azureSubscriptionId,

            Outputs.EventTypeInfoResponse? eventTypeInfo,

            string? name,

            string? resourceGroupName,

            string? source)
        {
            AzureSubscriptionId = azureSubscriptionId;
            EventTypeInfo = eventTypeInfo;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Source = source;
        }
    }
}
