// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventGrid.V20190601.Outputs
{

    [OutputType]
    public sealed class EventSubscriptionFilterResponse
    {
        /// <summary>
        /// An array of advanced filters that are used for filtering event subscriptions.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.BoolEqualsAdvancedFilterResponse, Union<Outputs.NumberGreaterThanAdvancedFilterResponse, Union<Outputs.NumberGreaterThanOrEqualsAdvancedFilterResponse, Union<Outputs.NumberInAdvancedFilterResponse, Union<Outputs.NumberLessThanAdvancedFilterResponse, Union<Outputs.NumberLessThanOrEqualsAdvancedFilterResponse, Union<Outputs.NumberNotInAdvancedFilterResponse, Union<Outputs.StringBeginsWithAdvancedFilterResponse, Union<Outputs.StringContainsAdvancedFilterResponse, Union<Outputs.StringEndsWithAdvancedFilterResponse, Union<Outputs.StringInAdvancedFilterResponse, Outputs.StringNotInAdvancedFilterResponse>>>>>>>>>>>> AdvancedFilters;
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
        /// </summary>
        public readonly ImmutableArray<string> IncludedEventTypes;
        /// <summary>
        /// Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter 
        /// should be compared in a case sensitive manner.
        /// </summary>
        public readonly bool? IsSubjectCaseSensitive;
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path prefix.
        /// The format of this depends on the publisher of the events. 
        /// Wildcard characters are not supported in this path.
        /// </summary>
        public readonly string? SubjectBeginsWith;
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path suffix.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        public readonly string? SubjectEndsWith;

        [OutputConstructor]
        private EventSubscriptionFilterResponse(
            ImmutableArray<Union<Outputs.BoolEqualsAdvancedFilterResponse, Union<Outputs.NumberGreaterThanAdvancedFilterResponse, Union<Outputs.NumberGreaterThanOrEqualsAdvancedFilterResponse, Union<Outputs.NumberInAdvancedFilterResponse, Union<Outputs.NumberLessThanAdvancedFilterResponse, Union<Outputs.NumberLessThanOrEqualsAdvancedFilterResponse, Union<Outputs.NumberNotInAdvancedFilterResponse, Union<Outputs.StringBeginsWithAdvancedFilterResponse, Union<Outputs.StringContainsAdvancedFilterResponse, Union<Outputs.StringEndsWithAdvancedFilterResponse, Union<Outputs.StringInAdvancedFilterResponse, Outputs.StringNotInAdvancedFilterResponse>>>>>>>>>>>> advancedFilters,

            ImmutableArray<string> includedEventTypes,

            bool? isSubjectCaseSensitive,

            string? subjectBeginsWith,

            string? subjectEndsWith)
        {
            AdvancedFilters = advancedFilters;
            IncludedEventTypes = includedEventTypes;
            IsSubjectCaseSensitive = isSubjectCaseSensitive;
            SubjectBeginsWith = subjectBeginsWith;
            SubjectEndsWith = subjectEndsWith;
        }
    }
}
