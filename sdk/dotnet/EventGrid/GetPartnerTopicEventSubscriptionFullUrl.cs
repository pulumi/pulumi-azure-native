// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid
{
    public static class GetPartnerTopicEventSubscriptionFullUrl
    {
        /// <summary>
        /// Get the full endpoint URL for an event subscription of a partner topic.
        /// Azure REST API version: 2022-06-15.
        /// </summary>
        public static Task<GetPartnerTopicEventSubscriptionFullUrlResult> InvokeAsync(GetPartnerTopicEventSubscriptionFullUrlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPartnerTopicEventSubscriptionFullUrlResult>("azure-native:eventgrid:getPartnerTopicEventSubscriptionFullUrl", args ?? new GetPartnerTopicEventSubscriptionFullUrlArgs(), options.WithDefaults());

        /// <summary>
        /// Get the full endpoint URL for an event subscription of a partner topic.
        /// Azure REST API version: 2022-06-15.
        /// </summary>
        public static Output<GetPartnerTopicEventSubscriptionFullUrlResult> Invoke(GetPartnerTopicEventSubscriptionFullUrlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPartnerTopicEventSubscriptionFullUrlResult>("azure-native:eventgrid:getPartnerTopicEventSubscriptionFullUrl", args ?? new GetPartnerTopicEventSubscriptionFullUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPartnerTopicEventSubscriptionFullUrlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
        /// </summary>
        [Input("eventSubscriptionName", required: true)]
        public string EventSubscriptionName { get; set; } = null!;

        /// <summary>
        /// Name of the partner topic.
        /// </summary>
        [Input("partnerTopicName", required: true)]
        public string PartnerTopicName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPartnerTopicEventSubscriptionFullUrlArgs()
        {
        }
        public static new GetPartnerTopicEventSubscriptionFullUrlArgs Empty => new GetPartnerTopicEventSubscriptionFullUrlArgs();
    }

    public sealed class GetPartnerTopicEventSubscriptionFullUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
        /// </summary>
        [Input("eventSubscriptionName", required: true)]
        public Input<string> EventSubscriptionName { get; set; } = null!;

        /// <summary>
        /// Name of the partner topic.
        /// </summary>
        [Input("partnerTopicName", required: true)]
        public Input<string> PartnerTopicName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPartnerTopicEventSubscriptionFullUrlInvokeArgs()
        {
        }
        public static new GetPartnerTopicEventSubscriptionFullUrlInvokeArgs Empty => new GetPartnerTopicEventSubscriptionFullUrlInvokeArgs();
    }


    [OutputType]
    public sealed class GetPartnerTopicEventSubscriptionFullUrlResult
    {
        /// <summary>
        /// The URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        public readonly string? EndpointUrl;

        [OutputConstructor]
        private GetPartnerTopicEventSubscriptionFullUrlResult(string? endpointUrl)
        {
            EndpointUrl = endpointUrl;
        }
    }
}
