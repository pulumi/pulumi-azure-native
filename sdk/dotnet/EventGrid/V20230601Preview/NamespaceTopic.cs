// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20230601Preview
{
    /// <summary>
    /// Namespace topic details.
    /// </summary>
    [AzureNativeResourceType("azure-native:eventgrid/v20230601preview:NamespaceTopic")]
    public partial class NamespaceTopic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Event retention for the namespace topic expressed in days. The property default value is 1 day.
        /// Min event retention duration value is 1 day and max event retention duration value is 1 day.
        /// </summary>
        [Output("eventRetentionInDays")]
        public Output<int?> EventRetentionInDays { get; private set; } = null!;

        /// <summary>
        /// This determines the format that is expected for incoming events published to the topic.
        /// </summary>
        [Output("inputSchema")]
        public Output<string?> InputSchema { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the namespace topic.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Publisher type of the namespace topic.
        /// </summary>
        [Output("publisherType")]
        public Output<string?> PublisherType { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to namespace topic resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NamespaceTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamespaceTopic(string name, NamespaceTopicArgs args, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20230601preview:NamespaceTopic", name, args ?? new NamespaceTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamespaceTopic(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20230601preview:NamespaceTopic", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid:NamespaceTopic"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamespaceTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamespaceTopic Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NamespaceTopic(name, id, options);
        }
    }

    public sealed class NamespaceTopicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Event retention for the namespace topic expressed in days. The property default value is 1 day.
        /// Min event retention duration value is 1 day and max event retention duration value is 1 day.
        /// </summary>
        [Input("eventRetentionInDays")]
        public Input<int>? EventRetentionInDays { get; set; }

        /// <summary>
        /// This determines the format that is expected for incoming events published to the topic.
        /// </summary>
        [Input("inputSchema")]
        public InputUnion<string, Pulumi.AzureNative.EventGrid.V20230601Preview.EventInputSchema>? InputSchema { get; set; }

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// Publisher type of the namespace topic.
        /// </summary>
        [Input("publisherType")]
        public InputUnion<string, Pulumi.AzureNative.EventGrid.V20230601Preview.PublisherType>? PublisherType { get; set; }

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the namespace topic.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public NamespaceTopicArgs()
        {
            InputSchema = "CloudEventSchemaV1_0";
        }
        public static new NamespaceTopicArgs Empty => new NamespaceTopicArgs();
    }
}
