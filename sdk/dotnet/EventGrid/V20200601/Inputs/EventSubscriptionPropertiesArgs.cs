// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.EventGrid.V20200601.Inputs
{

    /// <summary>
    /// Properties of the Event Subscription.
    /// </summary>
    public sealed class EventSubscriptionPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DeadLetter destination of the event subscription.
        /// </summary>
        [Input("deadLetterDestination")]
        public Input<Inputs.DeadLetterDestinationArgs>? DeadLetterDestination { get; set; }

        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// </summary>
        [Input("destination")]
        public Input<Inputs.EventSubscriptionDestinationArgs>? Destination { get; set; }

        /// <summary>
        /// The event delivery schema for the event subscription.
        /// </summary>
        [Input("eventDeliverySchema")]
        public Input<string>? EventDeliverySchema { get; set; }

        /// <summary>
        /// Expiration time of the event subscription.
        /// </summary>
        [Input("expirationTimeUtc")]
        public Input<string>? ExpirationTimeUtc { get; set; }

        /// <summary>
        /// Information about the filter for the event subscription.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.EventSubscriptionFilterArgs>? Filter { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// List of user defined labels.
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        /// </summary>
        [Input("retryPolicy")]
        public Input<Inputs.RetryPolicyArgs>? RetryPolicy { get; set; }

        public EventSubscriptionPropertiesArgs()
        {
        }
    }
}
