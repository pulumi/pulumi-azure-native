// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20240601Preview
{
    public static class GetPartnerDestination
    {
        /// <summary>
        /// Get properties of a partner destination.
        /// </summary>
        public static Task<GetPartnerDestinationResult> InvokeAsync(GetPartnerDestinationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPartnerDestinationResult>("azure-native:eventgrid/v20240601preview:getPartnerDestination", args ?? new GetPartnerDestinationArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of a partner destination.
        /// </summary>
        public static Output<GetPartnerDestinationResult> Invoke(GetPartnerDestinationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPartnerDestinationResult>("azure-native:eventgrid/v20240601preview:getPartnerDestination", args ?? new GetPartnerDestinationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPartnerDestinationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the partner destination.
        /// </summary>
        [Input("partnerDestinationName", required: true)]
        public string PartnerDestinationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPartnerDestinationArgs()
        {
        }
        public static new GetPartnerDestinationArgs Empty => new GetPartnerDestinationArgs();
    }

    public sealed class GetPartnerDestinationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the partner destination.
        /// </summary>
        [Input("partnerDestinationName", required: true)]
        public Input<string> PartnerDestinationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPartnerDestinationInvokeArgs()
        {
        }
        public static new GetPartnerDestinationInvokeArgs Empty => new GetPartnerDestinationInvokeArgs();
    }


    [OutputType]
    public sealed class GetPartnerDestinationResult
    {
        /// <summary>
        /// Activation state of the partner destination.
        /// </summary>
        public readonly string? ActivationState;
        /// <summary>
        /// Endpoint Base URL of the partner destination
        /// </summary>
        public readonly string? EndpointBaseUrl;
        /// <summary>
        /// Endpoint context associated with this partner destination.
        /// </summary>
        public readonly string? EndpointServiceContext;
        /// <summary>
        /// Expiration time of the partner destination. If this timer expires and the partner destination was never activated,
        /// the partner destination and corresponding channel are deleted.
        /// </summary>
        public readonly string? ExpirationTimeIfNotActivatedUtc;
        /// <summary>
        /// Fully qualified identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Location of the resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Context or helpful message that can be used during the approval process.
        /// </summary>
        public readonly string? MessageForActivation;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The immutable Id of the corresponding partner registration.
        /// </summary>
        public readonly string? PartnerRegistrationImmutableId;
        /// <summary>
        /// Provisioning state of the partner destination.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system metadata relating to Partner Destination resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPartnerDestinationResult(
            string? activationState,

            string? endpointBaseUrl,

            string? endpointServiceContext,

            string? expirationTimeIfNotActivatedUtc,

            string id,

            string location,

            string? messageForActivation,

            string name,

            string? partnerRegistrationImmutableId,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ActivationState = activationState;
            EndpointBaseUrl = endpointBaseUrl;
            EndpointServiceContext = endpointServiceContext;
            ExpirationTimeIfNotActivatedUtc = expirationTimeIfNotActivatedUtc;
            Id = id;
            Location = location;
            MessageForActivation = messageForActivation;
            Name = name;
            PartnerRegistrationImmutableId = partnerRegistrationImmutableId;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
