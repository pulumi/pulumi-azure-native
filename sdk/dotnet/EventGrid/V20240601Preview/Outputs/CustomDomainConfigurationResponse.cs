// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20240601Preview.Outputs
{

    /// <summary>
    /// A custom domain configuration that allows users to publish to their own domain name.
    /// </summary>
    [OutputType]
    public sealed class CustomDomainConfigurationResponse
    {
        /// <summary>
        /// The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either
        /// versioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,
        /// https://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)
        /// </summary>
        public readonly string? CertificateUrl;
        /// <summary>
        /// Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.
        /// The values under this TXT record must contain the expected TXT record value.
        /// </summary>
        public readonly string? ExpectedTxtRecordName;
        /// <summary>
        /// Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.
        /// </summary>
        public readonly string? ExpectedTxtRecordValue;
        /// <summary>
        /// Fully Qualified Domain Name (FQDN) for the custom domain.
        /// </summary>
        public readonly string FullyQualifiedDomainName;
        /// <summary>
        /// Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.
        /// </summary>
        public readonly Outputs.CustomDomainIdentityResponse? Identity;
        /// <summary>
        /// Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.
        /// </summary>
        public readonly string? ValidationState;

        [OutputConstructor]
        private CustomDomainConfigurationResponse(
            string? certificateUrl,

            string? expectedTxtRecordName,

            string? expectedTxtRecordValue,

            string fullyQualifiedDomainName,

            Outputs.CustomDomainIdentityResponse? identity,

            string? validationState)
        {
            CertificateUrl = certificateUrl;
            ExpectedTxtRecordName = expectedTxtRecordName;
            ExpectedTxtRecordValue = expectedTxtRecordValue;
            FullyQualifiedDomainName = fullyQualifiedDomainName;
            Identity = identity;
            ValidationState = validationState;
        }
    }
}
