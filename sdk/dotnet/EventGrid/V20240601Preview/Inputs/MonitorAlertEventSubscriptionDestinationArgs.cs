// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20240601Preview.Inputs
{

    /// <summary>
    /// Information about the Monitor Alert destination for an event subscription.
    /// </summary>
    public sealed class MonitorAlertEventSubscriptionDestinationArgs : global::Pulumi.ResourceArgs
    {
        [Input("actionGroups")]
        private InputList<string>? _actionGroups;

        /// <summary>
        /// The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.
        /// Each resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}.
        /// </summary>
        public InputList<string> ActionGroups
        {
            get => _actionGroups ?? (_actionGroups = new InputList<string>());
            set => _actionGroups = value;
        }

        /// <summary>
        /// The description that will be attached to every Alert fired through this event subscription.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Type of the endpoint for the event subscription destination.
        /// Expected value is 'MonitorAlert'.
        /// </summary>
        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        /// <summary>
        /// The severity that will be attached to every Alert fired through this event subscription.
        /// This field must be provided.
        /// </summary>
        [Input("severity")]
        public InputUnion<string, Pulumi.AzureNative.EventGrid.V20240601Preview.MonitorAlertSeverity>? Severity { get; set; }

        public MonitorAlertEventSubscriptionDestinationArgs()
        {
        }
        public static new MonitorAlertEventSubscriptionDestinationArgs Empty => new MonitorAlertEventSubscriptionDestinationArgs();
    }
}
