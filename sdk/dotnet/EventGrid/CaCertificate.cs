// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid
{
    /// <summary>
    /// The CA Certificate resource.
    /// Azure REST API version: 2023-06-01-preview.
    /// 
    /// Other available API versions: 2023-12-15-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:eventgrid:CaCertificate")]
    public partial class CaCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description for the CA Certificate resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
        /// </summary>
        [Output("encodedCertificate")]
        public Output<string?> EncodedCertificate { get; private set; } = null!;

        /// <summary>
        /// Certificate expiry time in UTC. This is a read-only field.
        /// </summary>
        [Output("expiryTimeInUtc")]
        public Output<string> ExpiryTimeInUtc { get; private set; } = null!;

        /// <summary>
        /// Certificate issue time in UTC. This is a read-only field.
        /// </summary>
        [Output("issueTimeInUtc")]
        public Output<string> IssueTimeInUtc { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the CA Certificate resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to the CaCertificate resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CaCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CaCertificate(string name, CaCertificateArgs args, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid:CaCertificate", name, args ?? new CaCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CaCertificate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid:CaCertificate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid/v20230601preview:CaCertificate" },
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid/v20231215preview:CaCertificate" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CaCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CaCertificate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CaCertificate(name, id, options);
        }
    }

    public sealed class CaCertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CA certificate name.
        /// </summary>
        [Input("caCertificateName")]
        public Input<string>? CaCertificateName { get; set; }

        /// <summary>
        /// Description for the CA Certificate resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
        /// </summary>
        [Input("encodedCertificate")]
        public Input<string>? EncodedCertificate { get; set; }

        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public CaCertificateArgs()
        {
        }
        public static new CaCertificateArgs Empty => new CaCertificateArgs();
    }
}
