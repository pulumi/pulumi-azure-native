// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageMover.V20230301
{
    public static class GetJobDefinition
    {
        /// <summary>
        /// Gets a Job Definition resource.
        /// </summary>
        public static Task<GetJobDefinitionResult> InvokeAsync(GetJobDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobDefinitionResult>("azure-native:storagemover/v20230301:getJobDefinition", args ?? new GetJobDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a Job Definition resource.
        /// </summary>
        public static Output<GetJobDefinitionResult> Invoke(GetJobDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobDefinitionResult>("azure-native:storagemover/v20230301:getJobDefinition", args ?? new GetJobDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Job Definition resource.
        /// </summary>
        [Input("jobDefinitionName", required: true)]
        public string JobDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the Project resource.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public string StorageMoverName { get; set; } = null!;

        public GetJobDefinitionArgs()
        {
        }
        public static new GetJobDefinitionArgs Empty => new GetJobDefinitionArgs();
    }

    public sealed class GetJobDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Job Definition resource.
        /// </summary>
        [Input("jobDefinitionName", required: true)]
        public Input<string> JobDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the Project resource.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public Input<string> StorageMoverName { get; set; } = null!;

        public GetJobDefinitionInvokeArgs()
        {
        }
        public static new GetJobDefinitionInvokeArgs Empty => new GetJobDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobDefinitionResult
    {
        /// <summary>
        /// Name of the Agent to assign for new Job Runs of this Job Definition.
        /// </summary>
        public readonly string? AgentName;
        /// <summary>
        /// Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition.
        /// </summary>
        public readonly string AgentResourceId;
        /// <summary>
        /// Strategy to use for copy.
        /// </summary>
        public readonly string CopyMode;
        /// <summary>
        /// A description for the Job Definition.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Job Run in a non-terminal state, if exists.
        /// </summary>
        public readonly string LatestJobRunName;
        /// <summary>
        /// The fully qualified resource ID of the Job Run in a non-terminal state, if exists.
        /// </summary>
        public readonly string LatestJobRunResourceId;
        /// <summary>
        /// The current status of the Job Run in a non-terminal state, if exists.
        /// </summary>
        public readonly string LatestJobRunStatus;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of this resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The name of the source Endpoint.
        /// </summary>
        public readonly string SourceName;
        /// <summary>
        /// Fully qualified resource ID of the source Endpoint.
        /// </summary>
        public readonly string SourceResourceId;
        /// <summary>
        /// The subpath to use when reading from the source Endpoint.
        /// </summary>
        public readonly string? SourceSubpath;
        /// <summary>
        /// Resource system metadata.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The name of the target Endpoint.
        /// </summary>
        public readonly string TargetName;
        /// <summary>
        /// Fully qualified resource ID of the target Endpoint.
        /// </summary>
        public readonly string TargetResourceId;
        /// <summary>
        /// The subpath to use when writing to the target Endpoint.
        /// </summary>
        public readonly string? TargetSubpath;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetJobDefinitionResult(
            string? agentName,

            string agentResourceId,

            string copyMode,

            string? description,

            string id,

            string latestJobRunName,

            string latestJobRunResourceId,

            string latestJobRunStatus,

            string name,

            string provisioningState,

            string sourceName,

            string sourceResourceId,

            string? sourceSubpath,

            Outputs.SystemDataResponse systemData,

            string targetName,

            string targetResourceId,

            string? targetSubpath,

            string type)
        {
            AgentName = agentName;
            AgentResourceId = agentResourceId;
            CopyMode = copyMode;
            Description = description;
            Id = id;
            LatestJobRunName = latestJobRunName;
            LatestJobRunResourceId = latestJobRunResourceId;
            LatestJobRunStatus = latestJobRunStatus;
            Name = name;
            ProvisioningState = provisioningState;
            SourceName = sourceName;
            SourceResourceId = sourceResourceId;
            SourceSubpath = sourceSubpath;
            SystemData = systemData;
            TargetName = targetName;
            TargetResourceId = targetResourceId;
            TargetSubpath = targetSubpath;
            Type = type;
        }
    }
}
