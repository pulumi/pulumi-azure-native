// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageMover
{
    /// <summary>
    /// The Agent resource.
    /// Azure REST API version: 2023-03-01. Prior API version in Azure Native 1.x: 2022-07-01-preview
    /// </summary>
    [AzureNativeResourceType("azure-native:storagemover:Agent")]
    public partial class Agent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Agent status.
        /// </summary>
        [Output("agentStatus")]
        public Output<string> AgentStatus { get; private set; } = null!;

        /// <summary>
        /// The Agent version.
        /// </summary>
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        /// <summary>
        /// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
        /// </summary>
        [Output("arcResourceId")]
        public Output<string> ArcResourceId { get; private set; } = null!;

        /// <summary>
        /// The VM UUID of the Hybrid Compute resource for the Agent.
        /// </summary>
        [Output("arcVmUuid")]
        public Output<string> ArcVmUuid { get; private set; } = null!;

        /// <summary>
        /// A description for the Agent.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("errorDetails")]
        public Output<Outputs.AgentPropertiesResponseErrorDetails> ErrorDetails { get; private set; } = null!;

        /// <summary>
        /// The last updated time of the Agent status.
        /// </summary>
        [Output("lastStatusUpdate")]
        public Output<string> LastStatusUpdate { get; private set; } = null!;

        /// <summary>
        /// Local IP address reported by the Agent.
        /// </summary>
        [Output("localIPAddress")]
        public Output<string> LocalIPAddress { get; private set; } = null!;

        /// <summary>
        /// Available memory reported by the Agent, in MB.
        /// </summary>
        [Output("memoryInMB")]
        public Output<double> MemoryInMB { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Available compute cores reported by the Agent.
        /// </summary>
        [Output("numberOfCores")]
        public Output<double> NumberOfCores { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of this resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource system metadata.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Uptime of the Agent in seconds.
        /// </summary>
        [Output("uptimeInSeconds")]
        public Output<double> UptimeInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a Agent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Agent(string name, AgentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:storagemover:Agent", name, args ?? new AgentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Agent(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:storagemover:Agent", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:storagemover/v20220701preview:Agent"},
                    new global::Pulumi.Alias { Type = "azure-native:storagemover/v20230301:Agent"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Agent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Agent Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Agent(name, id, options);
        }
    }

    public sealed class AgentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Agent resource.
        /// </summary>
        [Input("agentName")]
        public Input<string>? AgentName { get; set; }

        /// <summary>
        /// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
        /// </summary>
        [Input("arcResourceId", required: true)]
        public Input<string> ArcResourceId { get; set; } = null!;

        /// <summary>
        /// The VM UUID of the Hybrid Compute resource for the Agent.
        /// </summary>
        [Input("arcVmUuid", required: true)]
        public Input<string> ArcVmUuid { get; set; } = null!;

        /// <summary>
        /// A description for the Agent.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public Input<string> StorageMoverName { get; set; } = null!;

        public AgentArgs()
        {
        }
        public static new AgentArgs Empty => new AgentArgs();
    }
}
