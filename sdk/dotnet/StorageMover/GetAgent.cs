// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageMover
{
    public static class GetAgent
    {
        /// <summary>
        /// Gets an Agent resource.
        /// API Version: 2022-07-01-preview.
        /// </summary>
        public static Task<GetAgentResult> InvokeAsync(GetAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentResult>("azure-native:storagemover:getAgent", args ?? new GetAgentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an Agent resource.
        /// API Version: 2022-07-01-preview.
        /// </summary>
        public static Output<GetAgentResult> Invoke(GetAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentResult>("azure-native:storagemover:getAgent", args ?? new GetAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Agent resource.
        /// </summary>
        [Input("agentName", required: true)]
        public string AgentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public string StorageMoverName { get; set; } = null!;

        public GetAgentArgs()
        {
        }
        public static new GetAgentArgs Empty => new GetAgentArgs();
    }

    public sealed class GetAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Agent resource.
        /// </summary>
        [Input("agentName", required: true)]
        public Input<string> AgentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public Input<string> StorageMoverName { get; set; } = null!;

        public GetAgentInvokeArgs()
        {
        }
        public static new GetAgentInvokeArgs Empty => new GetAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentResult
    {
        /// <summary>
        /// The Agent status.
        /// </summary>
        public readonly string AgentStatus;
        /// <summary>
        /// The Agent version.
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
        /// </summary>
        public readonly string ArcResourceId;
        /// <summary>
        /// The VM UUID of the Hybrid Compute resource for the Agent.
        /// </summary>
        public readonly string ArcVmUuid;
        /// <summary>
        /// A description for the Agent.
        /// </summary>
        public readonly string? Description;
        public readonly Outputs.AgentPropertiesResponseErrorDetails ErrorDetails;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last updated time of the Agent status.
        /// </summary>
        public readonly string LastStatusUpdate;
        /// <summary>
        /// Local IP address reported by the Agent.
        /// </summary>
        public readonly string LocalIPAddress;
        /// <summary>
        /// Available memory reported by the Agent, in MB.
        /// </summary>
        public readonly double MemoryInMB;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Available compute cores reported by the Agent.
        /// </summary>
        public readonly double NumberOfCores;
        /// <summary>
        /// The provisioning state of this resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource system metadata.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Uptime of the Agent in seconds.
        /// </summary>
        public readonly double UptimeInSeconds;

        [OutputConstructor]
        private GetAgentResult(
            string agentStatus,

            string agentVersion,

            string arcResourceId,

            string arcVmUuid,

            string? description,

            Outputs.AgentPropertiesResponseErrorDetails errorDetails,

            string id,

            string lastStatusUpdate,

            string localIPAddress,

            double memoryInMB,

            string name,

            double numberOfCores,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type,

            double uptimeInSeconds)
        {
            AgentStatus = agentStatus;
            AgentVersion = agentVersion;
            ArcResourceId = arcResourceId;
            ArcVmUuid = arcVmUuid;
            Description = description;
            ErrorDetails = errorDetails;
            Id = id;
            LastStatusUpdate = lastStatusUpdate;
            LocalIPAddress = localIPAddress;
            MemoryInMB = memoryInMB;
            Name = name;
            NumberOfCores = numberOfCores;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
            UptimeInSeconds = uptimeInSeconds;
        }
    }
}
