// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageMover.V20220701Preview
{
    /// <summary>
    /// The Job Definition resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:storagemover/v20220701preview:JobDefinition")]
    public partial class JobDefinition : Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the Agent to assign for new Job Runs of this Job Definition.
        /// </summary>
        [Output("agentName")]
        public Output<string?> AgentName { get; private set; } = null!;

        /// <summary>
        /// Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition.
        /// </summary>
        [Output("agentResourceId")]
        public Output<string> AgentResourceId { get; private set; } = null!;

        /// <summary>
        /// Strategy to use for copy.
        /// </summary>
        [Output("copyMode")]
        public Output<string> CopyMode { get; private set; } = null!;

        /// <summary>
        /// A description for the Job Definition.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the Job Run in a non-terminal state, if exists.
        /// </summary>
        [Output("latestJobRunName")]
        public Output<string> LatestJobRunName { get; private set; } = null!;

        /// <summary>
        /// The fully qualified resource ID of the Job Run in a non-terminal state, if exists.
        /// </summary>
        [Output("latestJobRunResourceId")]
        public Output<string> LatestJobRunResourceId { get; private set; } = null!;

        /// <summary>
        /// The current status of the Job Run in a non-terminal state, if exists.
        /// </summary>
        [Output("latestJobRunStatus")]
        public Output<string> LatestJobRunStatus { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of this resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The name of the source Endpoint.
        /// </summary>
        [Output("sourceName")]
        public Output<string> SourceName { get; private set; } = null!;

        /// <summary>
        /// Fully qualified resource ID of the source Endpoint.
        /// </summary>
        [Output("sourceResourceId")]
        public Output<string> SourceResourceId { get; private set; } = null!;

        /// <summary>
        /// The subpath to use when reading from the source Endpoint.
        /// </summary>
        [Output("sourceSubpath")]
        public Output<string?> SourceSubpath { get; private set; } = null!;

        /// <summary>
        /// Resource system metadata.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The name of the target Endpoint.
        /// </summary>
        [Output("targetName")]
        public Output<string> TargetName { get; private set; } = null!;

        /// <summary>
        /// Fully qualified resource ID of the target Endpoint.
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;

        /// <summary>
        /// The subpath to use when writing to the target Endpoint.
        /// </summary>
        [Output("targetSubpath")]
        public Output<string?> TargetSubpath { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a JobDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobDefinition(string name, JobDefinitionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:storagemover/v20220701preview:JobDefinition", name, args ?? new JobDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobDefinition(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:storagemover/v20220701preview:JobDefinition", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobDefinition Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new JobDefinition(name, id, options);
        }
    }

    public sealed class JobDefinitionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Agent to assign for new Job Runs of this Job Definition.
        /// </summary>
        [Input("agentName")]
        public Input<string>? AgentName { get; set; }

        /// <summary>
        /// Strategy to use for copy.
        /// </summary>
        [Input("copyMode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.StorageMover.V20220701Preview.CopyMode> CopyMode { get; set; } = null!;

        /// <summary>
        /// A description for the Job Definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Job Definition resource.
        /// </summary>
        [Input("jobDefinitionName")]
        public Input<string>? JobDefinitionName { get; set; }

        /// <summary>
        /// The name of the Project resource.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the source Endpoint.
        /// </summary>
        [Input("sourceName", required: true)]
        public Input<string> SourceName { get; set; } = null!;

        /// <summary>
        /// The subpath to use when reading from the source Endpoint.
        /// </summary>
        [Input("sourceSubpath")]
        public Input<string>? SourceSubpath { get; set; }

        /// <summary>
        /// The name of the Storage Mover resource.
        /// </summary>
        [Input("storageMoverName", required: true)]
        public Input<string> StorageMoverName { get; set; } = null!;

        /// <summary>
        /// The name of the target Endpoint.
        /// </summary>
        [Input("targetName", required: true)]
        public Input<string> TargetName { get; set; } = null!;

        /// <summary>
        /// The subpath to use when writing to the target Endpoint.
        /// </summary>
        [Input("targetSubpath")]
        public Input<string>? TargetSubpath { get; set; }

        public JobDefinitionArgs()
        {
        }
    }
}
