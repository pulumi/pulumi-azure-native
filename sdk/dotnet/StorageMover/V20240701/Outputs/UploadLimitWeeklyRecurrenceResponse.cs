// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageMover.V20240701.Outputs
{

    /// <summary>
    /// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
    /// </summary>
    [OutputType]
    public sealed class UploadLimitWeeklyRecurrenceResponse
    {
        /// <summary>
        /// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
        /// </summary>
        public readonly ImmutableArray<string> Days;
        /// <summary>
        /// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
        /// </summary>
        public readonly Outputs.TimeResponse EndTime;
        /// <summary>
        /// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
        /// </summary>
        public readonly int LimitInMbps;
        /// <summary>
        /// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
        /// </summary>
        public readonly Outputs.TimeResponse StartTime;

        [OutputConstructor]
        private UploadLimitWeeklyRecurrenceResponse(
            ImmutableArray<string> days,

            Outputs.TimeResponse endTime,

            int limitInMbps,

            Outputs.TimeResponse startTime)
        {
            Days = days;
            EndTime = endTime;
            LimitInMbps = limitInMbps;
            StartTime = startTime;
        }
    }
}
