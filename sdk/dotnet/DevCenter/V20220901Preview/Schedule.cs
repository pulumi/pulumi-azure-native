// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter.V20220901Preview
{
    /// <summary>
    /// Represents a Schedule to execute a task.
    /// </summary>
    [AzureNativeResourceType("azure-native:devcenter/v20220901preview:Schedule")]
    public partial class Schedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The frequency of this scheduled task.
        /// </summary>
        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Indicates whether or not this scheduled task is enabled.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The target time to trigger the action. The format is HH:MM.
        /// </summary>
        [Output("time")]
        public Output<string> Time { get; private set; } = null!;

        /// <summary>
        /// The IANA timezone id at which the schedule should execute.
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Schedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Schedule(string name, ScheduleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:devcenter/v20220901preview:Schedule", name, args ?? new ScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Schedule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:devcenter/v20220901preview:Schedule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:devcenter:Schedule"},
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20220801preview:Schedule"},
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20221012preview:Schedule"},
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20221111preview:Schedule"},
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20230101preview:Schedule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Schedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Schedule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Schedule(name, id, options);
        }
    }

    public sealed class ScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The frequency of this scheduled task.
        /// </summary>
        [Input("frequency", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DevCenter.V20220901Preview.ScheduledFrequency> Frequency { get; set; } = null!;

        /// <summary>
        /// Name of the pool.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the schedule that uniquely identifies it.
        /// </summary>
        [Input("scheduleName")]
        public Input<string>? ScheduleName { get; set; }

        /// <summary>
        /// Indicates whether or not this scheduled task is enabled.
        /// </summary>
        [Input("state")]
        public InputUnion<string, Pulumi.AzureNative.DevCenter.V20220901Preview.EnableStatus>? State { get; set; }

        /// <summary>
        /// The target time to trigger the action. The format is HH:MM.
        /// </summary>
        [Input("time", required: true)]
        public Input<string> Time { get; set; } = null!;

        /// <summary>
        /// The IANA timezone id at which the schedule should execute.
        /// </summary>
        [Input("timeZone", required: true)]
        public Input<string> TimeZone { get; set; } = null!;

        /// <summary>
        /// The maximum number of resources to return from the operation. Example: '$top=10'.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        /// <summary>
        /// Supported type this scheduled task represents.
        /// </summary>
        [Input("type", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DevCenter.V20220901Preview.ScheduledType> Type { get; set; } = null!;

        public ScheduleArgs()
        {
        }
        public static new ScheduleArgs Empty => new ScheduleArgs();
    }
}
