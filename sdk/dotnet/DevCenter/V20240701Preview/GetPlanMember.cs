// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter.V20240701Preview
{
    public static class GetPlanMember
    {
        /// <summary>
        /// Gets a devcenter plan member.
        /// </summary>
        public static Task<GetPlanMemberResult> InvokeAsync(GetPlanMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlanMemberResult>("azure-native:devcenter/v20240701preview:getPlanMember", args ?? new GetPlanMemberArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a devcenter plan member.
        /// </summary>
        public static Output<GetPlanMemberResult> Invoke(GetPlanMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlanMemberResult>("azure-native:devcenter/v20240701preview:getPlanMember", args ?? new GetPlanMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPlanMemberArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of a devcenter plan member.
        /// </summary>
        [Input("memberName", required: true)]
        public string MemberName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter plan.
        /// </summary>
        [Input("planName", required: true)]
        public string PlanName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPlanMemberArgs()
        {
        }
        public static new GetPlanMemberArgs Empty => new GetPlanMemberArgs();
    }

    public sealed class GetPlanMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of a devcenter plan member.
        /// </summary>
        [Input("memberName", required: true)]
        public Input<string> MemberName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter plan.
        /// </summary>
        [Input("planName", required: true)]
        public Input<string> PlanName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPlanMemberInvokeArgs()
        {
        }
        public static new GetPlanMemberInvokeArgs Empty => new GetPlanMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetPlanMemberResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique id of the member.
        /// </summary>
        public readonly string? MemberId;
        /// <summary>
        /// The type of the member (user, group)
        /// </summary>
        public readonly string? MemberType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPlanMemberResult(
            string id,

            string? memberId,

            string? memberType,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            MemberId = memberId;
            MemberType = memberType;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
