// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter.V20221012Preview
{
    public static class GetAttachedNetworkByDevCenter
    {
        /// <summary>
        /// Gets an attached NetworkConnection.
        /// </summary>
        public static Task<GetAttachedNetworkByDevCenterResult> InvokeAsync(GetAttachedNetworkByDevCenterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttachedNetworkByDevCenterResult>("azure-native:devcenter/v20221012preview:getAttachedNetworkByDevCenter", args ?? new GetAttachedNetworkByDevCenterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an attached NetworkConnection.
        /// </summary>
        public static Output<GetAttachedNetworkByDevCenterResult> Invoke(GetAttachedNetworkByDevCenterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttachedNetworkByDevCenterResult>("azure-native:devcenter/v20221012preview:getAttachedNetworkByDevCenter", args ?? new GetAttachedNetworkByDevCenterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttachedNetworkByDevCenterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the attached NetworkConnection.
        /// </summary>
        [Input("attachedNetworkConnectionName", required: true)]
        public string AttachedNetworkConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public string DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAttachedNetworkByDevCenterArgs()
        {
        }
        public static new GetAttachedNetworkByDevCenterArgs Empty => new GetAttachedNetworkByDevCenterArgs();
    }

    public sealed class GetAttachedNetworkByDevCenterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the attached NetworkConnection.
        /// </summary>
        [Input("attachedNetworkConnectionName", required: true)]
        public Input<string> AttachedNetworkConnectionName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public Input<string> DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAttachedNetworkByDevCenterInvokeArgs()
        {
        }
        public static new GetAttachedNetworkByDevCenterInvokeArgs Empty => new GetAttachedNetworkByDevCenterInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttachedNetworkByDevCenterResult
    {
        /// <summary>
        /// AAD Join type of the network. This is populated based on the referenced Network Connection.
        /// </summary>
        public readonly string DomainJoinType;
        /// <summary>
        /// Health check status values
        /// </summary>
        public readonly string HealthCheckStatus;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource ID of the NetworkConnection you want to attach.
        /// </summary>
        public readonly string NetworkConnectionId;
        /// <summary>
        /// The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.
        /// </summary>
        public readonly string NetworkConnectionLocation;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAttachedNetworkByDevCenterResult(
            string domainJoinType,

            string healthCheckStatus,

            string id,

            string name,

            string networkConnectionId,

            string networkConnectionLocation,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DomainJoinType = domainJoinType;
            HealthCheckStatus = healthCheckStatus;
            Id = id;
            Name = name;
            NetworkConnectionId = networkConnectionId;
            NetworkConnectionLocation = networkConnectionLocation;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
