// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter
{
    public static class GetCatalog
    {
        /// <summary>
        /// Gets a catalog
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2023-08-01-preview, 2023-10-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-07-01-preview, 2024-08-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetCatalogResult> InvokeAsync(GetCatalogArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCatalogResult>("azure-native:devcenter:getCatalog", args ?? new GetCatalogArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a catalog
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2023-08-01-preview, 2023-10-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-07-01-preview, 2024-08-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetCatalogResult> Invoke(GetCatalogInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCatalogResult>("azure-native:devcenter:getCatalog", args ?? new GetCatalogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCatalogArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public string CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public string DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCatalogArgs()
        {
        }
        public static new GetCatalogArgs Empty => new GetCatalogArgs();
    }

    public sealed class GetCatalogInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public Input<string> CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public Input<string> DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCatalogInvokeArgs()
        {
        }
        public static new GetCatalogInvokeArgs Empty => new GetCatalogInvokeArgs();
    }


    [OutputType]
    public sealed class GetCatalogResult
    {
        /// <summary>
        /// Properties for an Azure DevOps catalog type.
        /// </summary>
        public readonly Outputs.GitCatalogResponse? AdoGit;
        /// <summary>
        /// Properties for a GitHub catalog type.
        /// </summary>
        public readonly Outputs.GitCatalogResponse? GitHub;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When the catalog was last synced.
        /// </summary>
        public readonly string LastSyncTime;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The synchronization state of the catalog.
        /// </summary>
        public readonly string SyncState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCatalogResult(
            Outputs.GitCatalogResponse? adoGit,

            Outputs.GitCatalogResponse? gitHub,

            string id,

            string lastSyncTime,

            string name,

            string provisioningState,

            string syncState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AdoGit = adoGit;
            GitHub = gitHub;
            Id = id;
            LastSyncTime = lastSyncTime;
            Name = name;
            ProvisioningState = provisioningState;
            SyncState = syncState;
            SystemData = systemData;
            Type = type;
        }
    }
}
