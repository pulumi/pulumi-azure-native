// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter
{
    public static class GetProjectCatalogImageDefinitionBuildDetails
    {
        /// <summary>
        /// Gets Build details
        /// Azure REST API version: 2024-07-01-preview.
        /// 
        /// Other available API versions: 2024-08-01-preview.
        /// </summary>
        public static Task<GetProjectCatalogImageDefinitionBuildDetailsResult> InvokeAsync(GetProjectCatalogImageDefinitionBuildDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectCatalogImageDefinitionBuildDetailsResult>("azure-native:devcenter:getProjectCatalogImageDefinitionBuildDetails", args ?? new GetProjectCatalogImageDefinitionBuildDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets Build details
        /// Azure REST API version: 2024-07-01-preview.
        /// 
        /// Other available API versions: 2024-08-01-preview.
        /// </summary>
        public static Output<GetProjectCatalogImageDefinitionBuildDetailsResult> Invoke(GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectCatalogImageDefinitionBuildDetailsResult>("azure-native:devcenter:getProjectCatalogImageDefinitionBuildDetails", args ?? new GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectCatalogImageDefinitionBuildDetailsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Image Definition Build.
        /// </summary>
        [Input("buildName", required: true)]
        public string BuildName { get; set; } = null!;

        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public string CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the Image Definition.
        /// </summary>
        [Input("imageDefinitionName", required: true)]
        public string ImageDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProjectCatalogImageDefinitionBuildDetailsArgs()
        {
        }
        public static new GetProjectCatalogImageDefinitionBuildDetailsArgs Empty => new GetProjectCatalogImageDefinitionBuildDetailsArgs();
    }

    public sealed class GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Image Definition Build.
        /// </summary>
        [Input("buildName", required: true)]
        public Input<string> BuildName { get; set; } = null!;

        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public Input<string> CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the Image Definition.
        /// </summary>
        [Input("imageDefinitionName", required: true)]
        public Input<string> ImageDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs()
        {
        }
        public static new GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs Empty => new GetProjectCatalogImageDefinitionBuildDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectCatalogImageDefinitionBuildDetailsResult
    {
        /// <summary>
        /// End time of the task group.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Details for image creation error. Populated when the image creation is not successful.
        /// </summary>
        public readonly Outputs.ImageCreationErrorDetailsResponse ErrorDetails;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The specific image version used by the build.
        /// </summary>
        public readonly Outputs.ImageReferenceResponse ImageReference;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Start time of the task group.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The status of the build.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The list of task groups executed during the image definition build.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageDefinitionBuildTaskGroupResponse> TaskGroups;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProjectCatalogImageDefinitionBuildDetailsResult(
            string endTime,

            Outputs.ImageCreationErrorDetailsResponse errorDetails,

            string id,

            Outputs.ImageReferenceResponse imageReference,

            string name,

            string startTime,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableArray<Outputs.ImageDefinitionBuildTaskGroupResponse> taskGroups,

            string type)
        {
            EndTime = endTime;
            ErrorDetails = errorDetails;
            Id = id;
            ImageReference = imageReference;
            Name = name;
            StartTime = startTime;
            Status = status;
            SystemData = systemData;
            TaskGroups = taskGroups;
            Type = type;
        }
    }
}
