// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter.V20240801Preview
{
    public static class GetCurationProfile
    {
        /// <summary>
        /// Gets a specific curation profile.
        /// </summary>
        public static Task<GetCurationProfileResult> InvokeAsync(GetCurationProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCurationProfileResult>("azure-native:devcenter/v20240801preview:getCurationProfile", args ?? new GetCurationProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a specific curation profile.
        /// </summary>
        public static Output<GetCurationProfileResult> Invoke(GetCurationProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCurationProfileResult>("azure-native:devcenter/v20240801preview:getCurationProfile", args ?? new GetCurationProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCurationProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the curation profile.
        /// </summary>
        [Input("curationProfileName", required: true)]
        public string CurationProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public string DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCurationProfileArgs()
        {
        }
        public static new GetCurationProfileArgs Empty => new GetCurationProfileArgs();
    }

    public sealed class GetCurationProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the curation profile.
        /// </summary>
        [Input("curationProfileName", required: true)]
        public Input<string> CurationProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName", required: true)]
        public Input<string> DevCenterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCurationProfileInvokeArgs()
        {
        }
        public static new GetCurationProfileInvokeArgs Empty => new GetCurationProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetCurationProfileResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource policies that are a part of this curation profile.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourcePolicyResponse> ResourcePolicies;
        /// <summary>
        /// Resources that have access to the shared resources that are a part of this curation profile.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCurationProfileResult(
            string id,

            string name,

            string provisioningState,

            ImmutableArray<Outputs.ResourcePolicyResponse> resourcePolicies,

            ImmutableArray<string> scopes,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ResourcePolicies = resourcePolicies;
            Scopes = scopes;
            SystemData = systemData;
            Type = type;
        }
    }
}
