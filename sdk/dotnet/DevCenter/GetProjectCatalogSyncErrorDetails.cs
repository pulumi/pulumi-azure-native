// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter
{
    public static class GetProjectCatalogSyncErrorDetails
    {
        /// <summary>
        /// Gets project catalog synchronization error details
        /// Azure REST API version: 2024-02-01.
        /// 
        /// Other available API versions: 2024-05-01-preview, 2024-06-01-preview, 2024-07-01-preview, 2024-08-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetProjectCatalogSyncErrorDetailsResult> InvokeAsync(GetProjectCatalogSyncErrorDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectCatalogSyncErrorDetailsResult>("azure-native:devcenter:getProjectCatalogSyncErrorDetails", args ?? new GetProjectCatalogSyncErrorDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets project catalog synchronization error details
        /// Azure REST API version: 2024-02-01.
        /// 
        /// Other available API versions: 2024-05-01-preview, 2024-06-01-preview, 2024-07-01-preview, 2024-08-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetProjectCatalogSyncErrorDetailsResult> Invoke(GetProjectCatalogSyncErrorDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectCatalogSyncErrorDetailsResult>("azure-native:devcenter:getProjectCatalogSyncErrorDetails", args ?? new GetProjectCatalogSyncErrorDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectCatalogSyncErrorDetailsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public string CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProjectCatalogSyncErrorDetailsArgs()
        {
        }
        public static new GetProjectCatalogSyncErrorDetailsArgs Empty => new GetProjectCatalogSyncErrorDetailsArgs();
    }

    public sealed class GetProjectCatalogSyncErrorDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Catalog.
        /// </summary>
        [Input("catalogName", required: true)]
        public Input<string> CatalogName { get; set; } = null!;

        /// <summary>
        /// The name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetProjectCatalogSyncErrorDetailsInvokeArgs()
        {
        }
        public static new GetProjectCatalogSyncErrorDetailsInvokeArgs Empty => new GetProjectCatalogSyncErrorDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectCatalogSyncErrorDetailsResult
    {
        /// <summary>
        /// Catalog items that have conflicting names.
        /// </summary>
        public readonly ImmutableArray<Outputs.CatalogConflictErrorResponse> Conflicts;
        /// <summary>
        /// Errors that occured during synchronization.
        /// </summary>
        public readonly ImmutableArray<Outputs.CatalogSyncErrorResponse> Errors;
        /// <summary>
        /// Error information for the overall synchronization operation.
        /// </summary>
        public readonly Outputs.CatalogErrorDetailsResponse OperationError;

        [OutputConstructor]
        private GetProjectCatalogSyncErrorDetailsResult(
            ImmutableArray<Outputs.CatalogConflictErrorResponse> conflicts,

            ImmutableArray<Outputs.CatalogSyncErrorResponse> errors,

            Outputs.CatalogErrorDetailsResponse operationError)
        {
            Conflicts = conflicts;
            Errors = errors;
            OperationError = operationError;
        }
    }
}
