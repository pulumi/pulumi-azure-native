// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevCenter.V20240601Preview
{
    /// <summary>
    /// Represents a devcenter resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:devcenter/v20240601preview:DevCenter")]
    public partial class DevCenter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Settings to be used in the provisioning of all Dev Boxes that belong to this dev center.
        /// </summary>
        [Output("devBoxProvisioningSettings")]
        public Output<Outputs.DevBoxProvisioningSettingsResponse?> DevBoxProvisioningSettings { get; private set; } = null!;

        /// <summary>
        /// The URI of the Dev Center.
        /// </summary>
        [Output("devCenterUri")]
        public Output<string> DevCenterUri { get; private set; } = null!;

        /// <summary>
        /// The display name of the devcenter.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations).
        /// </summary>
        [Output("encryption")]
        public Output<Outputs.EncryptionResponse?> Encryption { get; private set; } = null!;

        /// <summary>
        /// Managed identity properties
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network settings that will be enforced on network resources associated with the Dev Center.
        /// </summary>
        [Output("networkSettings")]
        public Output<Outputs.DevCenterNetworkSettingsResponse?> NetworkSettings { get; private set; } = null!;

        /// <summary>
        /// Resource Id of an associated Plan
        /// </summary>
        [Output("planId")]
        public Output<string?> PlanId { get; private set; } = null!;

        /// <summary>
        /// Dev Center settings to be used when associating a project with a catalog.
        /// </summary>
        [Output("projectCatalogSettings")]
        public Output<Outputs.DevCenterProjectCatalogSettingsResponse?> ProjectCatalogSettings { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DevCenter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DevCenter(string name, DevCenterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:devcenter/v20240601preview:DevCenter", name, args ?? new DevCenterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DevCenter(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:devcenter/v20240601preview:DevCenter", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:devcenter:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20220801preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20220901preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20221012preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20221111preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20230101preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20230401:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20230801preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20231001preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20240201:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20240501preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20240701preview:DevCenter" },
                    new global::Pulumi.Alias { Type = "azure-native:devcenter/v20240801preview:DevCenter" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DevCenter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DevCenter Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DevCenter(name, id, options);
        }
    }

    public sealed class DevCenterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings to be used in the provisioning of all Dev Boxes that belong to this dev center.
        /// </summary>
        [Input("devBoxProvisioningSettings")]
        public Input<Inputs.DevBoxProvisioningSettingsArgs>? DevBoxProvisioningSettings { get; set; }

        /// <summary>
        /// The name of the devcenter.
        /// </summary>
        [Input("devCenterName")]
        public Input<string>? DevCenterName { get; set; }

        /// <summary>
        /// The display name of the devcenter.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations).
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// Managed identity properties
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Network settings that will be enforced on network resources associated with the Dev Center.
        /// </summary>
        [Input("networkSettings")]
        public Input<Inputs.DevCenterNetworkSettingsArgs>? NetworkSettings { get; set; }

        /// <summary>
        /// Resource Id of an associated Plan
        /// </summary>
        [Input("planId")]
        public Input<string>? PlanId { get; set; }

        /// <summary>
        /// Dev Center settings to be used when associating a project with a catalog.
        /// </summary>
        [Input("projectCatalogSettings")]
        public Input<Inputs.DevCenterProjectCatalogSettingsArgs>? ProjectCatalogSettings { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DevCenterArgs()
        {
        }
        public static new DevCenterArgs Empty => new DevCenterArgs();
    }
}
