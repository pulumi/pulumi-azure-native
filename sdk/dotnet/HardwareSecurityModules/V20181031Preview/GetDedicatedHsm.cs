// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HardwareSecurityModules.V20181031Preview
{
    public static class GetDedicatedHsm
    {
        /// <summary>
        /// Gets the specified Azure dedicated HSM.
        /// </summary>
        public static Task<GetDedicatedHsmResult> InvokeAsync(GetDedicatedHsmArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedHsmResult>("azure-native:hardwaresecuritymodules/v20181031preview:getDedicatedHsm", args ?? new GetDedicatedHsmArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified Azure dedicated HSM.
        /// </summary>
        public static Output<GetDedicatedHsmResult> Invoke(GetDedicatedHsmInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDedicatedHsmResult>("azure-native:hardwaresecuritymodules/v20181031preview:getDedicatedHsm", args ?? new GetDedicatedHsmInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDedicatedHsmArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the dedicated HSM.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group to which the dedicated hsm belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedHsmArgs()
        {
        }
        public static new GetDedicatedHsmArgs Empty => new GetDedicatedHsmArgs();
    }

    public sealed class GetDedicatedHsmInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the dedicated HSM.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group to which the dedicated hsm belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDedicatedHsmInvokeArgs()
        {
        }
        public static new GetDedicatedHsmInvokeArgs Empty => new GetDedicatedHsmInvokeArgs();
    }


    [OutputType]
    public sealed class GetDedicatedHsmResult
    {
        /// <summary>
        /// The Azure Resource Manager resource ID for the dedicated HSM.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The supported Azure location where the dedicated HSM should be created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the dedicated HSM.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the dedicated HSM
        /// </summary>
        public readonly Outputs.DedicatedHsmPropertiesResponse Properties;
        /// <summary>
        /// SKU details
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type of the dedicated HSM.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The Dedicated Hsm zones.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetDedicatedHsmResult(
            string id,

            string location,

            string name,

            Outputs.DedicatedHsmPropertiesResponse properties,

            Outputs.SkuResponse sku,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> zones)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
            Zones = zones;
        }
    }
}
