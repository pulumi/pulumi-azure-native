// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Features.V20210701
{
    /// <summary>
    /// The state.
    /// </summary>
    [EnumType]
    public readonly struct SubscriptionFeatureRegistrationState : IEquatable<SubscriptionFeatureRegistrationState>
    {
        private readonly string _value;

        private SubscriptionFeatureRegistrationState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SubscriptionFeatureRegistrationState NotSpecified { get; } = new SubscriptionFeatureRegistrationState("NotSpecified");
        public static SubscriptionFeatureRegistrationState NotRegistered { get; } = new SubscriptionFeatureRegistrationState("NotRegistered");
        public static SubscriptionFeatureRegistrationState Pending { get; } = new SubscriptionFeatureRegistrationState("Pending");
        public static SubscriptionFeatureRegistrationState Registering { get; } = new SubscriptionFeatureRegistrationState("Registering");
        public static SubscriptionFeatureRegistrationState Registered { get; } = new SubscriptionFeatureRegistrationState("Registered");
        public static SubscriptionFeatureRegistrationState Unregistering { get; } = new SubscriptionFeatureRegistrationState("Unregistering");
        public static SubscriptionFeatureRegistrationState Unregistered { get; } = new SubscriptionFeatureRegistrationState("Unregistered");

        public static bool operator ==(SubscriptionFeatureRegistrationState left, SubscriptionFeatureRegistrationState right) => left.Equals(right);
        public static bool operator !=(SubscriptionFeatureRegistrationState left, SubscriptionFeatureRegistrationState right) => !left.Equals(right);

        public static explicit operator string(SubscriptionFeatureRegistrationState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SubscriptionFeatureRegistrationState other && Equals(other);
        public bool Equals(SubscriptionFeatureRegistrationState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
