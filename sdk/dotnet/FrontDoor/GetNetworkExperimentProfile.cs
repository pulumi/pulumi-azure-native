// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.FrontDoor
{
    public static class GetNetworkExperimentProfile
    {
        /// <summary>
        /// Defines an Network Experiment Profile and lists of Experiments
        /// 
        /// Uses Azure REST API version 2019-11-01.
        /// 
        /// Other available API versions: 2025-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native frontdoor [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetNetworkExperimentProfileResult> InvokeAsync(GetNetworkExperimentProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkExperimentProfileResult>("azure-native:frontdoor:getNetworkExperimentProfile", args ?? new GetNetworkExperimentProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Defines an Network Experiment Profile and lists of Experiments
        /// 
        /// Uses Azure REST API version 2019-11-01.
        /// 
        /// Other available API versions: 2025-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native frontdoor [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetNetworkExperimentProfileResult> Invoke(GetNetworkExperimentProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkExperimentProfileResult>("azure-native:frontdoor:getNetworkExperimentProfile", args ?? new GetNetworkExperimentProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Defines an Network Experiment Profile and lists of Experiments
        /// 
        /// Uses Azure REST API version 2019-11-01.
        /// 
        /// Other available API versions: 2025-10-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native frontdoor [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetNetworkExperimentProfileResult> Invoke(GetNetworkExperimentProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkExperimentProfileResult>("azure-native:frontdoor:getNetworkExperimentProfile", args ?? new GetNetworkExperimentProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkExperimentProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Profile identifier associated with the Tenant and Partner
        /// </summary>
        [Input("profileName", required: true)]
        public string ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkExperimentProfileArgs()
        {
        }
        public static new GetNetworkExperimentProfileArgs Empty => new GetNetworkExperimentProfileArgs();
    }

    public sealed class GetNetworkExperimentProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Profile identifier associated with the Tenant and Partner
        /// </summary>
        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkExperimentProfileInvokeArgs()
        {
        }
        public static new GetNetworkExperimentProfileInvokeArgs Empty => new GetNetworkExperimentProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkExperimentProfileResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The state of the Experiment
        /// </summary>
        public readonly string? EnabledState;
        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource status.
        /// </summary>
        public readonly string ResourceState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkExperimentProfileResult(
            string azureApiVersion,

            string? enabledState,

            string? etag,

            string id,

            string? location,

            string name,

            string resourceState,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            EnabledState = enabledState;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ResourceState = resourceState;
            Tags = tags;
            Type = type;
        }
    }
}
