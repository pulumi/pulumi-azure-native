// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AzureStack.V20200601Preview
{
    public static class GetLinkedSubscription
    {
        public static Task<GetLinkedSubscriptionResult> InvokeAsync(GetLinkedSubscriptionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLinkedSubscriptionResult>("azure-nextgen:azurestack/v20200601preview:getLinkedSubscription", args ?? new GetLinkedSubscriptionArgs(), options.WithVersion());
    }


    public sealed class GetLinkedSubscriptionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Linked Subscription resource.
        /// </summary>
        [Input("linkedSubscriptionName", required: true)]
        public string LinkedSubscriptionName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group.
        /// </summary>
        [Input("resourceGroup", required: true)]
        public string ResourceGroup { get; set; } = null!;

        public GetLinkedSubscriptionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLinkedSubscriptionResult
    {
        /// <summary>
        /// The status of the remote management connection of the Azure Stack device.
        /// </summary>
        public readonly string DeviceConnectionStatus;
        /// <summary>
        /// The identifier of the Azure Stack device for remote management.
        /// </summary>
        public readonly string DeviceId;
        /// <summary>
        /// The connection state of the Azure Stack device.
        /// </summary>
        public readonly string DeviceLinkState;
        /// <summary>
        /// The object identifier associated with the Azure Stack device connecting to Azure.
        /// </summary>
        public readonly string DeviceObjectId;
        /// <summary>
        /// The entity tag used for optimistic concurrency when modifying the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// ID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the resource.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
        /// </summary>
        public readonly string LastConnectedTime;
        /// <summary>
        /// The identifier associated with the device subscription.
        /// </summary>
        public readonly string? LinkedSubscriptionId;
        /// <summary>
        /// Location of the resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The identifier associated with the device registration.
        /// </summary>
        public readonly string? RegistrationResourceId;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Custom tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of Resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLinkedSubscriptionResult(
            string deviceConnectionStatus,

            string deviceId,

            string deviceLinkState,

            string deviceObjectId,

            string? etag,

            string id,

            string kind,

            string lastConnectedTime,

            string? linkedSubscriptionId,

            string location,

            string name,

            string? registrationResourceId,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            DeviceConnectionStatus = deviceConnectionStatus;
            DeviceId = deviceId;
            DeviceLinkState = deviceLinkState;
            DeviceObjectId = deviceObjectId;
            Etag = etag;
            Id = id;
            Kind = kind;
            LastConnectedTime = lastConnectedTime;
            LinkedSubscriptionId = linkedSubscriptionId;
            Location = location;
            Name = name;
            RegistrationResourceId = registrationResourceId;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
