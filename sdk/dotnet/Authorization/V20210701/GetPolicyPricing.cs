// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.AzureNative.Authorization.V20210701
{
    public static class GetPolicyPricing
    {
        /// <summary>
        /// The policy pricing.
        /// </summary>
        public static Task<GetPolicyPricingResult> InvokeAsync(GetPolicyPricingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPolicyPricingResult>("azure-native:authorization/v20210701:getPolicyPricing", args ?? new GetPolicyPricingArgs(), options.WithVersion());

        /// <summary>
        /// The policy pricing.
        /// </summary>
        public static Output<GetPolicyPricingResult> Invoke(GetPolicyPricingInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPolicyPricingResult>("azure-native:authorization/v20210701:getPolicyPricing", args ?? new GetPolicyPricingInvokeArgs(), options.WithVersion());
    }


    public sealed class GetPolicyPricingArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy pricing.
        /// </summary>
        [Input("policyPricingName", required: true)]
        public string PolicyPricingName { get; set; } = null!;

        /// <summary>
        /// The scope of the policy pricing. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}') or subscription (format: '/subscriptions/{subscriptionId}')
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetPolicyPricingArgs()
        {
        }
    }

    public sealed class GetPolicyPricingInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy pricing.
        /// </summary>
        [Input("policyPricingName", required: true)]
        public Input<string> PolicyPricingName { get; set; } = null!;

        /// <summary>
        /// The scope of the policy pricing. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}') or subscription (format: '/subscriptions/{subscriptionId}')
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public GetPolicyPricingInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPolicyPricingResult
    {
        /// <summary>
        /// The ID of the policy pricing.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the policy pricing.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The policy pricing tier. Possible values are Advanced and Defender.
        /// </summary>
        public readonly string PricingTier;
        /// <summary>
        /// The provisioning state of the policy pricing resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource (Microsoft.Authorization/policyPricings).
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPolicyPricingResult(
            string id,

            string name,

            string pricingTier,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            PricingTier = pricingTier;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
