// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Authorization.V20190101.Inputs
{

    /// <summary>
    /// The policy assignment properties.
    /// </summary>
    public sealed class PolicyAssignmentPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This message will be part of response in case of policy violation.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the policy assignment.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The policy assignment metadata.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("notScopes")]
        private InputList<string>? _notScopes;

        /// <summary>
        /// The policy's excluded scopes.
        /// </summary>
        public InputList<string> NotScopes
        {
            get => _notScopes ?? (_notScopes = new InputList<string>());
            set => _notScopes = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Required if a parameter is used in policy rule.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The ID of the policy definition or policy set definition being assigned.
        /// </summary>
        [Input("policyDefinitionId")]
        public Input<string>? PolicyDefinitionId { get; set; }

        /// <summary>
        /// The scope for the policy assignment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public PolicyAssignmentPropertiesArgs()
        {
        }
    }
}
