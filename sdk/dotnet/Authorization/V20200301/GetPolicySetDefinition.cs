// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Authorization.V20200301
{
    public static class GetPolicySetDefinition
    {
        public static Task<GetPolicySetDefinitionResult> InvokeAsync(GetPolicySetDefinitionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPolicySetDefinitionResult>("azure-nextgen:authorization/v20200301:getPolicySetDefinition", args ?? new GetPolicySetDefinitionArgs(), options.WithVersion());
    }


    public sealed class GetPolicySetDefinitionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy set definition to get.
        /// </summary>
        [Input("policySetDefinitionName", required: true)]
        public string PolicySetDefinitionName { get; set; } = null!;

        public GetPolicySetDefinitionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPolicySetDefinitionResult
    {
        /// <summary>
        /// The policy set definition description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the policy set definition.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        public readonly object? Metadata;
        /// <summary>
        /// The name of the policy set definition.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The policy set definition parameters that can be used in policy definition references.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterDefinitionsValueResponse>? Parameters;
        /// <summary>
        /// The metadata describing groups of policy definition references within the policy set definition.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyDefinitionGroupResponse> PolicyDefinitionGroups;
        /// <summary>
        /// An array of policy definition references.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyDefinitionReferenceResponse> PolicyDefinitions;
        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        public readonly string? PolicyType;
        /// <summary>
        /// The type of the resource (Microsoft.Authorization/policySetDefinitions).
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPolicySetDefinitionResult(
            string? description,

            string? displayName,

            object? metadata,

            string name,

            ImmutableDictionary<string, Outputs.ParameterDefinitionsValueResponse>? parameters,

            ImmutableArray<Outputs.PolicyDefinitionGroupResponse> policyDefinitionGroups,

            ImmutableArray<Outputs.PolicyDefinitionReferenceResponse> policyDefinitions,

            string? policyType,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            Metadata = metadata;
            Name = name;
            Parameters = parameters;
            PolicyDefinitionGroups = policyDefinitionGroups;
            PolicyDefinitions = policyDefinitions;
            PolicyType = policyType;
            Type = type;
        }
    }
}
