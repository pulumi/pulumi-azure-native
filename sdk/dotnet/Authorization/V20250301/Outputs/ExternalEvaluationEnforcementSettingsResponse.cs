// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20250301.Outputs
{

    /// <summary>
    /// The details of the source of external evaluation results required by the policy during enforcement evaluation.
    /// </summary>
    [OutputType]
    public sealed class ExternalEvaluationEnforcementSettingsResponse
    {
        /// <summary>
        /// The settings of an external endpoint providing evaluation results.
        /// </summary>
        public readonly Outputs.ExternalEvaluationEndpointSettingsResponse? EndpointSettings;
        /// <summary>
        /// What to do when evaluating an enforcement policy that requires an external evaluation and the token is missing. Possible values are Audit and Deny.
        /// </summary>
        public readonly string? MissingTokenAction;
        /// <summary>
        /// The lifespan of the endpoint invocation result after which it's no longer valid. Value is expected to follow the ISO 8601 duration format.
        /// </summary>
        public readonly string? ResultLifespan;
        /// <summary>
        /// An array of the role definition Ids the assignment's MSI will need in order to invoke the endpoint.
        /// </summary>
        public readonly ImmutableArray<string> RoleDefinitionIds;

        [OutputConstructor]
        private ExternalEvaluationEnforcementSettingsResponse(
            Outputs.ExternalEvaluationEndpointSettingsResponse? endpointSettings,

            string? missingTokenAction,

            string? resultLifespan,

            ImmutableArray<string> roleDefinitionIds)
        {
            EndpointSettings = endpointSettings;
            MissingTokenAction = missingTokenAction;
            ResultLifespan = resultLifespan;
            RoleDefinitionIds = roleDefinitionIds;
        }
    }
}
