// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Authorization.V20200701Preview
{
    /// <summary>
    /// The policy exemption category. Possible values are Waiver and Mitigated.
    /// </summary>
    [EnumType]
    public readonly struct ExemptionCategory : IEquatable<ExemptionCategory>
    {
        private readonly string _value;

        private ExemptionCategory(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// This category of exemptions usually means the scope is not applicable for the policy.
        /// </summary>
        public static ExemptionCategory Waiver { get; } = new ExemptionCategory("Waiver");
        /// <summary>
        /// This category of exemptions usually means the mitigation actions have been applied to the scope.
        /// </summary>
        public static ExemptionCategory Mitigated { get; } = new ExemptionCategory("Mitigated");

        public static bool operator ==(ExemptionCategory left, ExemptionCategory right) => left.Equals(right);
        public static bool operator !=(ExemptionCategory left, ExemptionCategory right) => !left.Equals(right);

        public static explicit operator string(ExemptionCategory value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExemptionCategory other && Equals(other);
        public bool Equals(ExemptionCategory other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
