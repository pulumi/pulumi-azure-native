// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20250101.Outputs
{

    /// <summary>
    /// The policy definition reference.
    /// </summary>
    [OutputType]
    public sealed class PolicyDefinitionReferenceResponse
    {
        /// <summary>
        /// The version of the policy definition to use.
        /// </summary>
        public readonly string? DefinitionVersion;
        /// <summary>
        /// The effective version of the policy definition in use. This is only present if requested via the $expand query parameter.
        /// </summary>
        public readonly string EffectiveDefinitionVersion;
        /// <summary>
        /// The name of the groups that this policy definition reference belongs to.
        /// </summary>
        public readonly ImmutableArray<string> GroupNames;
        /// <summary>
        /// The latest version of the policy definition available. This is only present if requested via the $expand query parameter.
        /// </summary>
        public readonly string LatestDefinitionVersion;
        /// <summary>
        /// The parameter values for the referenced policy rule. The keys are the parameter names.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterValuesValueResponse>? Parameters;
        /// <summary>
        /// The ID of the policy definition or policy set definition.
        /// </summary>
        public readonly string PolicyDefinitionId;
        /// <summary>
        /// A unique id (within the policy set definition) for this policy definition reference.
        /// </summary>
        public readonly string? PolicyDefinitionReferenceId;

        [OutputConstructor]
        private PolicyDefinitionReferenceResponse(
            string? definitionVersion,

            string effectiveDefinitionVersion,

            ImmutableArray<string> groupNames,

            string latestDefinitionVersion,

            ImmutableDictionary<string, Outputs.ParameterValuesValueResponse>? parameters,

            string policyDefinitionId,

            string? policyDefinitionReferenceId)
        {
            DefinitionVersion = definitionVersion;
            EffectiveDefinitionVersion = effectiveDefinitionVersion;
            GroupNames = groupNames;
            LatestDefinitionVersion = latestDefinitionVersion;
            Parameters = parameters;
            PolicyDefinitionId = policyDefinitionId;
            PolicyDefinitionReferenceId = policyDefinitionReferenceId;
        }
    }
}
