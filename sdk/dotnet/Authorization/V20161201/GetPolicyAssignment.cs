// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Authorization.V20161201
{
    public static class GetPolicyAssignment
    {
        public static Task<GetPolicyAssignmentResult> InvokeAsync(GetPolicyAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPolicyAssignmentResult>("azurerm:authorization/v20161201:getPolicyAssignment", args ?? new GetPolicyAssignmentArgs(), options.WithVersion());
    }


    public sealed class GetPolicyAssignmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy assignment to get.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The scope of the policy assignment.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetPolicyAssignmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPolicyAssignmentResult
    {
        /// <summary>
        /// The name of the policy assignment.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Properties for the policy assignment.
        /// </summary>
        public readonly Outputs.PolicyAssignmentPropertiesResponseResult Properties;
        /// <summary>
        /// The type of the policy assignment.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetPolicyAssignmentResult(
            string? name,

            Outputs.PolicyAssignmentPropertiesResponseResult properties,

            string? type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
