// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20230401
{
    /// <summary>
    /// The policy set definition version.
    /// </summary>
    [AzureNativeResourceType("azure-native:authorization/v20230401:PolicySetDefinitionVersionAtManagementGroup")]
    public partial class PolicySetDefinitionVersionAtManagementGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The policy set definition description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the policy set definition.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Output("metadata")]
        public Output<object?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name of the policy set definition version.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The policy set definition parameters that can be used in policy definition references.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, Outputs.ParameterDefinitionsValueResponse>?> Parameters { get; private set; } = null!;

        /// <summary>
        /// The metadata describing groups of policy definition references within the policy set definition.
        /// </summary>
        [Output("policyDefinitionGroups")]
        public Output<ImmutableArray<Outputs.PolicyDefinitionGroupResponse>> PolicyDefinitionGroups { get; private set; } = null!;

        /// <summary>
        /// An array of policy definition references.
        /// </summary>
        [Output("policyDefinitions")]
        public Output<ImmutableArray<Outputs.PolicyDefinitionReferenceResponse>> PolicyDefinitions { get; private set; } = null!;

        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        [Output("policyType")]
        public Output<string?> PolicyType { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource (Microsoft.Authorization/policySetDefinitions/versions).
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The policy set definition version in #.#.# format.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a PolicySetDefinitionVersionAtManagementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicySetDefinitionVersionAtManagementGroup(string name, PolicySetDefinitionVersionAtManagementGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:authorization/v20230401:PolicySetDefinitionVersionAtManagementGroup", name, args ?? new PolicySetDefinitionVersionAtManagementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicySetDefinitionVersionAtManagementGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:authorization/v20230401:PolicySetDefinitionVersionAtManagementGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:authorization:PolicySetDefinitionVersionAtManagementGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:authorization/v20240501:PolicySetDefinitionVersionAtManagementGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicySetDefinitionVersionAtManagementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicySetDefinitionVersionAtManagementGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PolicySetDefinitionVersionAtManagementGroup(name, id, options);
        }
    }

    public sealed class PolicySetDefinitionVersionAtManagementGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy set definition description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the policy set definition.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the management group. The name is case insensitive.
        /// </summary>
        [Input("managementGroupName", required: true)]
        public Input<string> ManagementGroupName { get; set; } = null!;

        /// <summary>
        /// The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Input("metadata")]
        public Input<object>? Metadata { get; set; }

        [Input("parameters")]
        private InputMap<Inputs.ParameterDefinitionsValueArgs>? _parameters;

        /// <summary>
        /// The policy set definition parameters that can be used in policy definition references.
        /// </summary>
        public InputMap<Inputs.ParameterDefinitionsValueArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterDefinitionsValueArgs>());
            set => _parameters = value;
        }

        [Input("policyDefinitionGroups")]
        private InputList<Inputs.PolicyDefinitionGroupArgs>? _policyDefinitionGroups;

        /// <summary>
        /// The metadata describing groups of policy definition references within the policy set definition.
        /// </summary>
        public InputList<Inputs.PolicyDefinitionGroupArgs> PolicyDefinitionGroups
        {
            get => _policyDefinitionGroups ?? (_policyDefinitionGroups = new InputList<Inputs.PolicyDefinitionGroupArgs>());
            set => _policyDefinitionGroups = value;
        }

        /// <summary>
        /// The policy set definition version.  The format is x.y.z where x is the major version number, y is the minor version number, and z is the patch number
        /// </summary>
        [Input("policyDefinitionVersion")]
        public Input<string>? PolicyDefinitionVersion { get; set; }

        [Input("policyDefinitions", required: true)]
        private InputList<Inputs.PolicyDefinitionReferenceArgs>? _policyDefinitions;

        /// <summary>
        /// An array of policy definition references.
        /// </summary>
        public InputList<Inputs.PolicyDefinitionReferenceArgs> PolicyDefinitions
        {
            get => _policyDefinitions ?? (_policyDefinitions = new InputList<Inputs.PolicyDefinitionReferenceArgs>());
            set => _policyDefinitions = value;
        }

        /// <summary>
        /// The name of the policy set definition.
        /// </summary>
        [Input("policySetDefinitionName", required: true)]
        public Input<string> PolicySetDefinitionName { get; set; } = null!;

        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        [Input("policyType")]
        public InputUnion<string, Pulumi.AzureNative.Authorization.V20230401.PolicyType>? PolicyType { get; set; }

        /// <summary>
        /// The policy set definition version in #.#.# format.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public PolicySetDefinitionVersionAtManagementGroupArgs()
        {
        }
        public static new PolicySetDefinitionVersionAtManagementGroupArgs Empty => new PolicySetDefinitionVersionAtManagementGroupArgs();
    }
}
