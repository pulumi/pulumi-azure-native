// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20230401
{
    public static class ListPolicyDefinitionVersionAllAtManagementGroup
    {
        /// <summary>
        /// This operation lists all the policy definition versions for all policy definitions at the management group scope.
        /// </summary>
        public static Task<ListPolicyDefinitionVersionAllAtManagementGroupResult> InvokeAsync(ListPolicyDefinitionVersionAllAtManagementGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListPolicyDefinitionVersionAllAtManagementGroupResult>("azure-native:authorization/v20230401:listPolicyDefinitionVersionAllAtManagementGroup", args ?? new ListPolicyDefinitionVersionAllAtManagementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This operation lists all the policy definition versions for all policy definitions at the management group scope.
        /// </summary>
        public static Output<ListPolicyDefinitionVersionAllAtManagementGroupResult> Invoke(ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListPolicyDefinitionVersionAllAtManagementGroupResult>("azure-native:authorization/v20230401:listPolicyDefinitionVersionAllAtManagementGroup", args ?? new ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListPolicyDefinitionVersionAllAtManagementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the management group. The name is case insensitive.
        /// </summary>
        [Input("managementGroupName", required: true)]
        public string ManagementGroupName { get; set; } = null!;

        public ListPolicyDefinitionVersionAllAtManagementGroupArgs()
        {
        }
        public static new ListPolicyDefinitionVersionAllAtManagementGroupArgs Empty => new ListPolicyDefinitionVersionAllAtManagementGroupArgs();
    }

    public sealed class ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the management group. The name is case insensitive.
        /// </summary>
        [Input("managementGroupName", required: true)]
        public Input<string> ManagementGroupName { get; set; } = null!;

        public ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs()
        {
        }
        public static new ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs Empty => new ListPolicyDefinitionVersionAllAtManagementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class ListPolicyDefinitionVersionAllAtManagementGroupResult
    {
        /// <summary>
        /// The URL to use for getting the next set of results.
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// An array of policy definitions versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyDefinitionVersionResponse> Value;

        [OutputConstructor]
        private ListPolicyDefinitionVersionAllAtManagementGroupResult(
            string? nextLink,

            ImmutableArray<Outputs.PolicyDefinitionVersionResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
