// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Authorization.V20201001Preview.Outputs
{

    [OutputType]
    public sealed class RoleManagementPolicyNotificationRuleInvokeResponseResult
    {
        /// <summary>
        /// The id of the rule.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The notification level.
        /// </summary>
        public readonly string? NotificationLevel;
        /// <summary>
        /// The list notification recipients.
        /// </summary>
        public readonly ImmutableArray<string> NotificationRecipients;
        /// <summary>
        /// The type of notification.
        /// </summary>
        public readonly string? NotificationType;
        /// <summary>
        /// The recipient type.
        /// </summary>
        public readonly string? RecipientType;
        /// <summary>
        /// The type of rule
        /// Expected value is 'RoleManagementPolicyNotificationRule'.
        /// </summary>
        public readonly string RuleType;
        /// <summary>
        /// The target of the current rule.
        /// </summary>
        public readonly Outputs.RoleManagementPolicyRuleTargetInvokeResponseResult? Target;

        [OutputConstructor]
        private RoleManagementPolicyNotificationRuleInvokeResponseResult(
            string? id,

            string? notificationLevel,

            ImmutableArray<string> notificationRecipients,

            string? notificationType,

            string? recipientType,

            string ruleType,

            Outputs.RoleManagementPolicyRuleTargetInvokeResponseResult? target)
        {
            Id = id;
            NotificationLevel = notificationLevel;
            NotificationRecipients = notificationRecipients;
            NotificationType = notificationType;
            RecipientType = recipientType;
            RuleType = ruleType;
            Target = target;
        }
    }
}
