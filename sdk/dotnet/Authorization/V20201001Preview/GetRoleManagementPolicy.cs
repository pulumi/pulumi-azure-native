// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Authorization.V20201001Preview
{
    public static class GetRoleManagementPolicy
    {
        /// <summary>
        /// Role management policy
        /// </summary>
        public static Task<GetRoleManagementPolicyResult> InvokeAsync(GetRoleManagementPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRoleManagementPolicyResult>("azure-nextgen:authorization/v20201001preview:getRoleManagementPolicy", args ?? new GetRoleManagementPolicyArgs(), options.WithVersion());
    }


    public sealed class GetRoleManagementPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name (guid) of the role management policy to get.
        /// </summary>
        [Input("roleManagementPolicyName", required: true)]
        public string RoleManagementPolicyName { get; set; } = null!;

        /// <summary>
        /// The scope of the role management policy.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetRoleManagementPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRoleManagementPolicyResult
    {
        /// <summary>
        /// The role management policy description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The role management policy display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The readonly computed rule applied to the policy.
        /// </summary>
        public readonly ImmutableArray<object> EffectiveRules;
        /// <summary>
        /// The role management policy Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The role management policy is default policy.
        /// </summary>
        public readonly bool? IsOrganizationDefault;
        /// <summary>
        /// The last updated date time.
        /// </summary>
        public readonly string LastUpdatedDateTime;
        /// <summary>
        /// The role management policy name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The rule applied to the policy.
        /// </summary>
        public readonly ImmutableArray<object> Rules;
        /// <summary>
        /// The role management policy scope.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The role management policy type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRoleManagementPolicyResult(
            string? description,

            string? displayName,

            ImmutableArray<object> effectiveRules,

            string id,

            bool? isOrganizationDefault,

            string lastUpdatedDateTime,

            string name,

            ImmutableArray<object> rules,

            string? scope,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            EffectiveRules = effectiveRules;
            Id = id;
            IsOrganizationDefault = isOrganizationDefault;
            LastUpdatedDateTime = lastUpdatedDateTime;
            Name = name;
            Rules = rules;
            Scope = scope;
            Type = type;
        }
    }
}
