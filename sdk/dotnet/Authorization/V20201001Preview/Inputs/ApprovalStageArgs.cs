// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Authorization.V20201001Preview.Inputs
{

    /// <summary>
    /// The approval stage.
    /// </summary>
    public sealed class ApprovalStageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time in days when approval request would be timed out.
        /// </summary>
        [Input("approvalStageTimeOutInDays")]
        public Input<int>? ApprovalStageTimeOutInDays { get; set; }

        [Input("escalationApprovers")]
        private InputList<Inputs.SingleUserArgs>? _escalationApprovers;

        /// <summary>
        /// The escalation approver of the request.
        /// </summary>
        public InputList<Inputs.SingleUserArgs> EscalationApprovers
        {
            get => _escalationApprovers ?? (_escalationApprovers = new InputList<Inputs.SingleUserArgs>());
            set => _escalationApprovers = value;
        }

        /// <summary>
        /// The time in minutes when the approval request would be escalated if the primary approver does not approves.
        /// </summary>
        [Input("escalationTimeInMinutes")]
        public Input<int>? EscalationTimeInMinutes { get; set; }

        /// <summary>
        /// Determine whether approver need to provide justification for his decision.
        /// </summary>
        [Input("isApproverJustificationRequired")]
        public Input<bool>? IsApproverJustificationRequired { get; set; }

        /// <summary>
        /// The value determine whether escalation feature is enabled.
        /// </summary>
        [Input("isEscalationEnabled")]
        public Input<bool>? IsEscalationEnabled { get; set; }

        [Input("primaryApprovers")]
        private InputList<Inputs.SingleUserArgs>? _primaryApprovers;

        /// <summary>
        /// The primary approver of the request.
        /// </summary>
        public InputList<Inputs.SingleUserArgs> PrimaryApprovers
        {
            get => _primaryApprovers ?? (_primaryApprovers = new InputList<Inputs.SingleUserArgs>());
            set => _primaryApprovers = value;
        }

        public ApprovalStageArgs()
        {
        }
    }
}
