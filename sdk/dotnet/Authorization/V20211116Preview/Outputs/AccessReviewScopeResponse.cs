// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20211116Preview.Outputs
{

    /// <summary>
    /// Descriptor for what needs to be reviewed
    /// </summary>
    [OutputType]
    public sealed class AccessReviewScopeResponse
    {
        /// <summary>
        /// The role assignment state eligible/active to review
        /// </summary>
        public readonly string AssignmentState;
        /// <summary>
        /// Flag to indicate whether to expand nested memberships or not.
        /// </summary>
        public readonly bool? ExpandNestedMemberships;
        /// <summary>
        /// Duration users are inactive for. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))
        /// </summary>
        public readonly string? InactiveDuration;
        /// <summary>
        /// The identity type user/servicePrincipal to review
        /// </summary>
        public readonly string PrincipalType;
        /// <summary>
        /// ResourceId in which this review is getting created
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// This is used to indicate the role being reviewed
        /// </summary>
        public readonly string RoleDefinitionId;

        [OutputConstructor]
        private AccessReviewScopeResponse(
            string assignmentState,

            bool? expandNestedMemberships,

            string? inactiveDuration,

            string principalType,

            string resourceId,

            string roleDefinitionId)
        {
            AssignmentState = assignmentState;
            ExpandNestedMemberships = expandNestedMemberships;
            InactiveDuration = inactiveDuration;
            PrincipalType = principalType;
            ResourceId = resourceId;
            RoleDefinitionId = roleDefinitionId;
        }
    }
}
