// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.Inputs
{

    /// <summary>
    /// The PIM Only Mode settings.
    /// </summary>
    public sealed class PIMOnlyModeSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludedAssignmentTypes")]
        private InputList<Union<string, Pulumi.AzureNative.Authorization.ExcludedPrincipalTypes>>? _excludedAssignmentTypes;

        /// <summary>
        /// The list of excluded assignment types allowed.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Authorization.ExcludedPrincipalTypes>> ExcludedAssignmentTypes
        {
            get => _excludedAssignmentTypes ?? (_excludedAssignmentTypes = new InputList<Union<string, Pulumi.AzureNative.Authorization.ExcludedPrincipalTypes>>());
            set => _excludedAssignmentTypes = value;
        }

        [Input("excludes")]
        private InputList<Inputs.UsersOrServicePrincipalSetArgs>? _excludes;

        /// <summary>
        /// The list of excluded entities that the rule does not apply to.
        /// </summary>
        public InputList<Inputs.UsersOrServicePrincipalSetArgs> Excludes
        {
            get => _excludes ?? (_excludes = new InputList<Inputs.UsersOrServicePrincipalSetArgs>());
            set => _excludes = value;
        }

        /// <summary>
        /// Determines whether the setting is enabled, disabled or report only.
        /// </summary>
        [Input("mode")]
        public InputUnion<string, Pulumi.AzureNative.Authorization.PIMOnlyMode>? Mode { get; set; }

        public PIMOnlyModeSettingsArgs()
        {
        }
        public static new PIMOnlyModeSettingsArgs Empty => new PIMOnlyModeSettingsArgs();
    }
}
