// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization
{
    public static class GetVariableAtManagementGroup
    {
        /// <summary>
        /// This operation retrieves a single variable, given its name and the  management group it was created at.
        /// 
        /// Uses Azure REST API version 2022-08-01-preview.
        /// 
        /// Other available API versions: 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetVariableAtManagementGroupResult> InvokeAsync(GetVariableAtManagementGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVariableAtManagementGroupResult>("azure-native:authorization:getVariableAtManagementGroup", args ?? new GetVariableAtManagementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This operation retrieves a single variable, given its name and the  management group it was created at.
        /// 
        /// Uses Azure REST API version 2022-08-01-preview.
        /// 
        /// Other available API versions: 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetVariableAtManagementGroupResult> Invoke(GetVariableAtManagementGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVariableAtManagementGroupResult>("azure-native:authorization:getVariableAtManagementGroup", args ?? new GetVariableAtManagementGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This operation retrieves a single variable, given its name and the  management group it was created at.
        /// 
        /// Uses Azure REST API version 2022-08-01-preview.
        /// 
        /// Other available API versions: 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetVariableAtManagementGroupResult> Invoke(GetVariableAtManagementGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVariableAtManagementGroupResult>("azure-native:authorization:getVariableAtManagementGroup", args ?? new GetVariableAtManagementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVariableAtManagementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the management group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public string ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The name of the variable to operate on.
        /// </summary>
        [Input("variableName", required: true)]
        public string VariableName { get; set; } = null!;

        public GetVariableAtManagementGroupArgs()
        {
        }
        public static new GetVariableAtManagementGroupArgs Empty => new GetVariableAtManagementGroupArgs();
    }

    public sealed class GetVariableAtManagementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the management group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The name of the variable to operate on.
        /// </summary>
        [Input("variableName", required: true)]
        public Input<string> VariableName { get; set; } = null!;

        public GetVariableAtManagementGroupInvokeArgs()
        {
        }
        public static new GetVariableAtManagementGroupInvokeArgs Empty => new GetVariableAtManagementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVariableAtManagementGroupResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Variable column definitions.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyVariableColumnResponse> Columns;
        /// <summary>
        /// The ID of the variable.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the variable.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource (Microsoft.Authorization/variables).
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVariableAtManagementGroupResult(
            string azureApiVersion,

            ImmutableArray<Outputs.PolicyVariableColumnResponse> columns,

            string id,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Columns = columns;
            Id = id;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
