// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization
{
    /// <summary>
    /// The variable value.
    /// Azure REST API version: 2022-08-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:authorization:VariableValueAtManagementGroup")]
    public partial class VariableValueAtManagementGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the variable.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource (Microsoft.Authorization/variables/values).
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Variable value column value array.
        /// </summary>
        [Output("values")]
        public Output<ImmutableArray<Outputs.PolicyVariableValueColumnValueResponse>> Values { get; private set; } = null!;


        /// <summary>
        /// Create a VariableValueAtManagementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VariableValueAtManagementGroup(string name, VariableValueAtManagementGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:authorization:VariableValueAtManagementGroup", name, args ?? new VariableValueAtManagementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VariableValueAtManagementGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:authorization:VariableValueAtManagementGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:authorization/v20220801preview:VariableValueAtManagementGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VariableValueAtManagementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VariableValueAtManagementGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VariableValueAtManagementGroup(name, id, options);
        }
    }

    public sealed class VariableValueAtManagementGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the management group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<Inputs.PolicyVariableValueColumnValueArgs>? _values;

        /// <summary>
        /// Variable value column value array.
        /// </summary>
        public InputList<Inputs.PolicyVariableValueColumnValueArgs> Values
        {
            get => _values ?? (_values = new InputList<Inputs.PolicyVariableValueColumnValueArgs>());
            set => _values = value;
        }

        /// <summary>
        /// The name of the variable to operate on.
        /// </summary>
        [Input("variableName", required: true)]
        public Input<string> VariableName { get; set; } = null!;

        /// <summary>
        /// The name of the variable value to operate on.
        /// </summary>
        [Input("variableValueName")]
        public Input<string>? VariableValueName { get; set; }

        public VariableValueAtManagementGroupArgs()
        {
        }
        public static new VariableValueAtManagementGroupArgs Empty => new VariableValueAtManagementGroupArgs();
    }
}
