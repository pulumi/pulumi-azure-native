// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20200301Preview.Inputs
{

    /// <summary>
    /// Role assignment properties.
    /// </summary>
    public sealed class RoleAssignmentPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The delegation flag used for creating a role assignment
        /// </summary>
        [Input("canDelegate")]
        public Input<bool>? CanDelegate { get; set; }

        /// <summary>
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// Version of the condition. Currently accepted value is '2.0'
        /// </summary>
        [Input("conditionVersion")]
        public Input<string>? ConditionVersion { get; set; }

        /// <summary>
        /// Id of the delegated managed identity resource
        /// </summary>
        [Input("delegatedManagedIdentityResourceId")]
        public Input<string>? DelegatedManagedIdentityResourceId { get; set; }

        /// <summary>
        /// The principal ID.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// The principal type of the assigned principal ID.
        /// </summary>
        [Input("principalType")]
        public InputUnion<string, Pulumi.AzureNative.Authorization.V20200301Preview.PrincipalType>? PrincipalType { get; set; }

        /// <summary>
        /// The role definition ID.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public Input<string> RoleDefinitionId { get; set; } = null!;

        /// <summary>
        /// The role assignment scope.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public RoleAssignmentPropertiesArgs()
        {
            PrincipalType = "User";
        }
        public static new RoleAssignmentPropertiesArgs Empty => new RoleAssignmentPropertiesArgs();
    }
}
