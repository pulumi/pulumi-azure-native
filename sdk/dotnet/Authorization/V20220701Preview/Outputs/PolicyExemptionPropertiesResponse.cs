// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20220701Preview.Outputs
{

    /// <summary>
    /// The policy exemption properties.
    /// </summary>
    [OutputType]
    public sealed class PolicyExemptionPropertiesResponse
    {
        /// <summary>
        /// The option whether validate the exemption is at or under the assignment scope.
        /// </summary>
        public readonly string? AssignmentScopeValidation;
        /// <summary>
        /// The description of the policy exemption.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the policy exemption.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The policy exemption category. Possible values are Waiver and Mitigated.
        /// </summary>
        public readonly string ExemptionCategory;
        /// <summary>
        /// The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.
        /// </summary>
        public readonly string? ExpiresOn;
        /// <summary>
        /// The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        public readonly object? Metadata;
        /// <summary>
        /// The ID of the policy assignment that is being exempted.
        /// </summary>
        public readonly string PolicyAssignmentId;
        /// <summary>
        /// The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
        /// </summary>
        public readonly ImmutableArray<string> PolicyDefinitionReferenceIds;
        /// <summary>
        /// The resource selector list to filter policies by resource properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceSelectorResponse> ResourceSelectors;

        [OutputConstructor]
        private PolicyExemptionPropertiesResponse(
            string? assignmentScopeValidation,

            string? description,

            string? displayName,

            string exemptionCategory,

            string? expiresOn,

            object? metadata,

            string policyAssignmentId,

            ImmutableArray<string> policyDefinitionReferenceIds,

            ImmutableArray<Outputs.ResourceSelectorResponse> resourceSelectors)
        {
            AssignmentScopeValidation = assignmentScopeValidation;
            Description = description;
            DisplayName = displayName;
            ExemptionCategory = exemptionCategory;
            ExpiresOn = expiresOn;
            Metadata = metadata;
            PolicyAssignmentId = policyAssignmentId;
            PolicyDefinitionReferenceIds = policyDefinitionReferenceIds;
            ResourceSelectors = resourceSelectors;
        }
    }
}
