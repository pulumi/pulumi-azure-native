// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization
{
    public static class ListPolicyDefinitionVersionAllBuiltins
    {
        /// <summary>
        /// This operation lists all the built-in policy definition versions for all built-in policy definitions.
        /// 
        /// Uses Azure REST API version 2025-01-01.
        /// 
        /// Other available API versions: 2023-04-01, 2024-05-01, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<ListPolicyDefinitionVersionAllBuiltinsResult> InvokeAsync(ListPolicyDefinitionVersionAllBuiltinsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListPolicyDefinitionVersionAllBuiltinsResult>("azure-native:authorization:listPolicyDefinitionVersionAllBuiltins", args ?? new ListPolicyDefinitionVersionAllBuiltinsArgs(), options.WithDefaults());

        /// <summary>
        /// This operation lists all the built-in policy definition versions for all built-in policy definitions.
        /// 
        /// Uses Azure REST API version 2025-01-01.
        /// 
        /// Other available API versions: 2023-04-01, 2024-05-01, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<ListPolicyDefinitionVersionAllBuiltinsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListPolicyDefinitionVersionAllBuiltinsResult>("azure-native:authorization:listPolicyDefinitionVersionAllBuiltins", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// This operation lists all the built-in policy definition versions for all built-in policy definitions.
        /// 
        /// Uses Azure REST API version 2025-01-01.
        /// 
        /// Other available API versions: 2023-04-01, 2024-05-01, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<ListPolicyDefinitionVersionAllBuiltinsResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListPolicyDefinitionVersionAllBuiltinsResult>("azure-native:authorization:listPolicyDefinitionVersionAllBuiltins", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListPolicyDefinitionVersionAllBuiltinsArgs : global::Pulumi.InvokeArgs
    {
        public ListPolicyDefinitionVersionAllBuiltinsArgs()
        {
        }
        public static new ListPolicyDefinitionVersionAllBuiltinsArgs Empty => new ListPolicyDefinitionVersionAllBuiltinsArgs();
    }


    [OutputType]
    public sealed class ListPolicyDefinitionVersionAllBuiltinsResult
    {
        /// <summary>
        /// The URL to use for getting the next set of results.
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// An array of policy definitions versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyDefinitionVersionResponse> Value;

        [OutputConstructor]
        private ListPolicyDefinitionVersionAllBuiltinsResult(
            string? nextLink,

            ImmutableArray<Outputs.PolicyDefinitionVersionResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
