// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Authorization.V20170401
{
    public static class GetManagementLockAtResourceGroupLevel
    {
        /// <summary>
        /// Gets a management lock at the resource group level.
        /// </summary>
        public static Task<GetManagementLockAtResourceGroupLevelResult> InvokeAsync(GetManagementLockAtResourceGroupLevelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementLockAtResourceGroupLevelResult>("azure-native:authorization/v20170401:getManagementLockAtResourceGroupLevel", args ?? new GetManagementLockAtResourceGroupLevelArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a management lock at the resource group level.
        /// </summary>
        public static Output<GetManagementLockAtResourceGroupLevelResult> Invoke(GetManagementLockAtResourceGroupLevelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementLockAtResourceGroupLevelResult>("azure-native:authorization/v20170401:getManagementLockAtResourceGroupLevel", args ?? new GetManagementLockAtResourceGroupLevelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementLockAtResourceGroupLevelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lock to get.
        /// </summary>
        [Input("lockName", required: true)]
        public string LockName { get; set; } = null!;

        /// <summary>
        /// The name of the locked resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagementLockAtResourceGroupLevelArgs()
        {
        }
        public static new GetManagementLockAtResourceGroupLevelArgs Empty => new GetManagementLockAtResourceGroupLevelArgs();
    }

    public sealed class GetManagementLockAtResourceGroupLevelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lock to get.
        /// </summary>
        [Input("lockName", required: true)]
        public Input<string> LockName { get; set; } = null!;

        /// <summary>
        /// The name of the locked resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagementLockAtResourceGroupLevelInvokeArgs()
        {
        }
        public static new GetManagementLockAtResourceGroupLevelInvokeArgs Empty => new GetManagementLockAtResourceGroupLevelInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementLockAtResourceGroupLevelResult
    {
        /// <summary>
        /// The resource ID of the lock.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the lock.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The properties of the lock.
        /// </summary>
        public readonly Outputs.ManagementLockPropertiesResponse Properties;
        /// <summary>
        /// The resource type of the lock - Microsoft.Authorization/locks.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagementLockAtResourceGroupLevelResult(
            string id,

            string name,

            Outputs.ManagementLockPropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
