// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Authorization.V20220401Preview
{
    /// <summary>
    /// The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc
    /// </summary>
    [EnumType]
    public readonly struct RequestType : IEquatable<RequestType>
    {
        private readonly string _value;

        private RequestType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RequestType AdminAssign { get; } = new RequestType("AdminAssign");
        public static RequestType AdminRemove { get; } = new RequestType("AdminRemove");
        public static RequestType AdminUpdate { get; } = new RequestType("AdminUpdate");
        public static RequestType AdminExtend { get; } = new RequestType("AdminExtend");
        public static RequestType AdminRenew { get; } = new RequestType("AdminRenew");
        public static RequestType SelfActivate { get; } = new RequestType("SelfActivate");
        public static RequestType SelfDeactivate { get; } = new RequestType("SelfDeactivate");
        public static RequestType SelfExtend { get; } = new RequestType("SelfExtend");
        public static RequestType SelfRenew { get; } = new RequestType("SelfRenew");

        public static bool operator ==(RequestType left, RequestType right) => left.Equals(right);
        public static bool operator !=(RequestType left, RequestType right) => !left.Equals(right);

        public static explicit operator string(RequestType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RequestType other && Equals(other);
        public bool Equals(RequestType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the role eligibility schedule expiration
    /// </summary>
    [EnumType]
    public readonly struct Type : IEquatable<Type>
    {
        private readonly string _value;

        private Type(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Type AfterDuration { get; } = new Type("AfterDuration");
        public static Type AfterDateTime { get; } = new Type("AfterDateTime");
        public static Type NoExpiration { get; } = new Type("NoExpiration");

        public static bool operator ==(Type left, Type right) => left.Equals(right);
        public static bool operator !=(Type left, Type right) => !left.Equals(right);

        public static explicit operator string(Type value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Type other && Equals(other);
        public bool Equals(Type other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
