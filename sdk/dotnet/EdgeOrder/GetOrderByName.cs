// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EdgeOrder
{
    public static class GetOrderByName
    {
        /// <summary>
        /// Represents order contract
        /// API Version: 2020-12-01-preview.
        /// </summary>
        public static Task<GetOrderByNameResult> InvokeAsync(GetOrderByNameArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrderByNameResult>("azure-nextgen:edgeorder:getOrderByName", args ?? new GetOrderByNameArgs(), options.WithVersion());
    }


    public sealed class GetOrderByNameArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the order
        /// </summary>
        [Input("orderName", required: true)]
        public string OrderName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOrderByNameArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrderByNameResult
    {
        /// <summary>
        /// Represents shipping and return address for order
        /// </summary>
        public readonly Outputs.AddressDetailsResponse AddressDetails;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Id of the order collection to which order belongs to
        /// </summary>
        public readonly string OrderCollectionId;
        /// <summary>
        /// Represents order details.
        /// </summary>
        public readonly Outputs.OrderDetailsResponse OrderDetails;
        /// <summary>
        /// Start time of order
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// Represents resource creation and update time
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOrderByNameResult(
            Outputs.AddressDetailsResponse addressDetails,

            string id,

            string location,

            string name,

            string orderCollectionId,

            Outputs.OrderDetailsResponse orderDetails,

            string startTime,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AddressDetails = addressDetails;
            Id = id;
            Location = location;
            Name = name;
            OrderCollectionId = orderCollectionId;
            OrderDetails = orderDetails;
            StartTime = startTime;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
