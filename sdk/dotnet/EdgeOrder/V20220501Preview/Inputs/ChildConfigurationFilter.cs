// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EdgeOrder.V20220501Preview.Inputs
{

    /// <summary>
    /// Child configuration filter.
    /// </summary>
    public sealed class ChildConfigurationFilter : global::Pulumi.InvokeArgs
    {
        [Input("childConfigurationTypes")]
        private List<Union<string, Pulumi.AzureNative.EdgeOrder.V20220501Preview.ChildConfigurationType>>? _childConfigurationTypes;

        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        public List<Union<string, Pulumi.AzureNative.EdgeOrder.V20220501Preview.ChildConfigurationType>> ChildConfigurationTypes
        {
            get => _childConfigurationTypes ?? (_childConfigurationTypes = new List<Union<string, Pulumi.AzureNative.EdgeOrder.V20220501Preview.ChildConfigurationType>>());
            set => _childConfigurationTypes = value;
        }

        [Input("hierarchyInformations")]
        private List<Inputs.HierarchyInformation>? _hierarchyInformations;

        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        public List<Inputs.HierarchyInformation> HierarchyInformations
        {
            get => _hierarchyInformations ?? (_hierarchyInformations = new List<Inputs.HierarchyInformation>());
            set => _hierarchyInformations = value;
        }

        public ChildConfigurationFilter()
        {
        }
        public static new ChildConfigurationFilter Empty => new ChildConfigurationFilter();
    }
}
