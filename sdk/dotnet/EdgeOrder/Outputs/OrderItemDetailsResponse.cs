// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EdgeOrder.Outputs
{

    /// <summary>
    /// Order item details
    /// </summary>
    [OutputType]
    public sealed class OrderItemDetailsResponse
    {
        /// <summary>
        /// Cancellation reason.
        /// </summary>
        public readonly string CancellationReason;
        /// <summary>
        /// Describes whether the order item is cancellable or not.
        /// </summary>
        public readonly string CancellationStatus;
        /// <summary>
        /// Current Order item Status
        /// </summary>
        public readonly Outputs.StageDetailsResponse CurrentStage;
        /// <summary>
        /// Describes whether the order item is deletable or not.
        /// </summary>
        public readonly string DeletionStatus;
        /// <summary>
        /// Top level error for the job.
        /// </summary>
        public readonly Outputs.ErrorDetailResponse Error;
        /// <summary>
        /// Forward Package Shipping details
        /// </summary>
        public readonly Outputs.ForwardShippingDetailsResponse ForwardShippingDetails;
        /// <summary>
        /// Parent RP details - this returns only the first or default parent RP from the entire list
        /// </summary>
        public readonly Outputs.ResourceProviderDetailsResponse ManagementRpDetails;
        /// <summary>
        /// List of parent RP details supported for configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceProviderDetailsResponse> ManagementRpDetailsList;
        /// <summary>
        /// Additional notification email list
        /// </summary>
        public readonly ImmutableArray<string> NotificationEmailList;
        /// <summary>
        /// Order item status history
        /// </summary>
        public readonly ImmutableArray<Outputs.StageDetailsResponse> OrderItemStageHistory;
        /// <summary>
        /// Order item type.
        /// </summary>
        public readonly string OrderItemType;
        /// <summary>
        /// Customer notification Preferences
        /// </summary>
        public readonly Outputs.PreferencesResponse? Preferences;
        /// <summary>
        /// Unique identifier for configuration.
        /// </summary>
        public readonly Outputs.ProductDetailsResponse ProductDetails;
        /// <summary>
        /// Return reason.
        /// </summary>
        public readonly string ReturnReason;
        /// <summary>
        /// Describes whether the order item is returnable or not.
        /// </summary>
        public readonly string ReturnStatus;
        /// <summary>
        /// Reverse Package Shipping details
        /// </summary>
        public readonly Outputs.ReverseShippingDetailsResponse ReverseShippingDetails;

        [OutputConstructor]
        private OrderItemDetailsResponse(
            string cancellationReason,

            string cancellationStatus,

            Outputs.StageDetailsResponse currentStage,

            string deletionStatus,

            Outputs.ErrorDetailResponse error,

            Outputs.ForwardShippingDetailsResponse forwardShippingDetails,

            Outputs.ResourceProviderDetailsResponse managementRpDetails,

            ImmutableArray<Outputs.ResourceProviderDetailsResponse> managementRpDetailsList,

            ImmutableArray<string> notificationEmailList,

            ImmutableArray<Outputs.StageDetailsResponse> orderItemStageHistory,

            string orderItemType,

            Outputs.PreferencesResponse? preferences,

            Outputs.ProductDetailsResponse productDetails,

            string returnReason,

            string returnStatus,

            Outputs.ReverseShippingDetailsResponse reverseShippingDetails)
        {
            CancellationReason = cancellationReason;
            CancellationStatus = cancellationStatus;
            CurrentStage = currentStage;
            DeletionStatus = deletionStatus;
            Error = error;
            ForwardShippingDetails = forwardShippingDetails;
            ManagementRpDetails = managementRpDetails;
            ManagementRpDetailsList = managementRpDetailsList;
            NotificationEmailList = notificationEmailList;
            OrderItemStageHistory = orderItemStageHistory;
            OrderItemType = orderItemType;
            Preferences = preferences;
            ProductDetails = productDetails;
            ReturnReason = returnReason;
            ReturnStatus = returnStatus;
            ReverseShippingDetails = reverseShippingDetails;
        }
    }
}
