// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EdgeOrder.Outputs
{

    /// <summary>
    /// Represents product details
    /// </summary>
    [OutputType]
    public sealed class ProductDetailsResponse
    {
        /// <summary>
        /// Details of all child configurations that are part of the order item.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigurationDeviceDetailsResponse> ChildConfigurationDeviceDetails;
        /// <summary>
        /// Quantity of the product
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// list of device details
        /// </summary>
        public readonly ImmutableArray<Outputs.DeviceDetailsResponse> DeviceDetails;
        /// <summary>
        /// Display details of the product
        /// </summary>
        public readonly Outputs.DisplayInfoResponse? DisplayInfo;
        /// <summary>
        /// Hierarchy of the product which uniquely identifies the product
        /// </summary>
        public readonly Outputs.HierarchyInformationResponse HierarchyInformation;
        /// <summary>
        /// Identification type of the configuration.
        /// </summary>
        public readonly string? IdentificationType;
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.AdditionalConfigurationResponse> OptInAdditionalConfigurations;
        /// <summary>
        /// Device details of the parent configuration.
        /// </summary>
        public readonly Outputs.DeviceDetailsResponse? ParentDeviceDetails;
        /// <summary>
        /// Double encryption status of the configuration. Read-only field.
        /// </summary>
        public readonly string ProductDoubleEncryptionStatus;

        [OutputConstructor]
        private ProductDetailsResponse(
            ImmutableArray<Outputs.ConfigurationDeviceDetailsResponse> childConfigurationDeviceDetails,

            int count,

            ImmutableArray<Outputs.DeviceDetailsResponse> deviceDetails,

            Outputs.DisplayInfoResponse? displayInfo,

            Outputs.HierarchyInformationResponse hierarchyInformation,

            string? identificationType,

            ImmutableArray<Outputs.AdditionalConfigurationResponse> optInAdditionalConfigurations,

            Outputs.DeviceDetailsResponse? parentDeviceDetails,

            string productDoubleEncryptionStatus)
        {
            ChildConfigurationDeviceDetails = childConfigurationDeviceDetails;
            Count = count;
            DeviceDetails = deviceDetails;
            DisplayInfo = displayInfo;
            HierarchyInformation = hierarchyInformation;
            IdentificationType = identificationType;
            OptInAdditionalConfigurations = optInAdditionalConfigurations;
            ParentDeviceDetails = parentDeviceDetails;
            ProductDoubleEncryptionStatus = productDoubleEncryptionStatus;
        }
    }
}
