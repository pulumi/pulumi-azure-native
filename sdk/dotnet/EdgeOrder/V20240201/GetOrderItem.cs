// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EdgeOrder.V20240201
{
    public static class GetOrderItem
    {
        /// <summary>
        /// Get an order item.
        /// </summary>
        public static Task<GetOrderItemResult> InvokeAsync(GetOrderItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrderItemResult>("azure-native:edgeorder/v20240201:getOrderItem", args ?? new GetOrderItemArgs(), options.WithDefaults());

        /// <summary>
        /// Get an order item.
        /// </summary>
        public static Output<GetOrderItemResult> Invoke(GetOrderItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrderItemResult>("azure-native:edgeorder/v20240201:getOrderItem", args ?? new GetOrderItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrderItemArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// $expand is supported on parent device details, device details, forward shipping details and reverse shipping details parameters. Each of these can be provided as a comma separated list. Parent Device Details for order item provides details on the devices of the product, Device Details for order item provides details on the devices of the child configurations of the product, Forward and Reverse Shipping details provide forward and reverse shipping details respectively.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the order item.
        /// </summary>
        [Input("orderItemName", required: true)]
        public string OrderItemName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOrderItemArgs()
        {
        }
        public static new GetOrderItemArgs Empty => new GetOrderItemArgs();
    }

    public sealed class GetOrderItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// $expand is supported on parent device details, device details, forward shipping details and reverse shipping details parameters. Each of these can be provided as a comma separated list. Parent Device Details for order item provides details on the devices of the product, Device Details for order item provides details on the devices of the child configurations of the product, Forward and Reverse Shipping details provide forward and reverse shipping details respectively.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the order item.
        /// </summary>
        [Input("orderItemName", required: true)]
        public Input<string> OrderItemName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetOrderItemInvokeArgs()
        {
        }
        public static new GetOrderItemInvokeArgs Empty => new GetOrderItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrderItemResult
    {
        /// <summary>
        /// Represents shipping and return address for order item.
        /// </summary>
        public readonly Outputs.AddressDetailsResponse? AddressDetails;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Msi identity of the resource
        /// </summary>
        public readonly Outputs.ResourceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Id of the order to which order item belongs to.
        /// </summary>
        public readonly string OrderId;
        /// <summary>
        /// Represents order item details.
        /// </summary>
        public readonly Outputs.OrderItemDetailsResponse OrderItemDetails;
        /// <summary>
        /// Provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Start time of order item.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOrderItemResult(
            Outputs.AddressDetailsResponse? addressDetails,

            string id,

            Outputs.ResourceIdentityResponse? identity,

            string location,

            string name,

            string orderId,

            Outputs.OrderItemDetailsResponse orderItemDetails,

            string provisioningState,

            string startTime,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AddressDetails = addressDetails;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            OrderId = orderId;
            OrderItemDetails = orderItemDetails;
            ProvisioningState = provisioningState;
            StartTime = startTime;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
