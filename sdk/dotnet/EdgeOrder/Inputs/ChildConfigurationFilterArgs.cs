// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EdgeOrder.Inputs
{

    /// <summary>
    /// Child configuration filter.
    /// </summary>
    public sealed class ChildConfigurationFilterArgs : global::Pulumi.ResourceArgs
    {
        [Input("childConfigurationTypes")]
        private InputList<Union<string, Pulumi.AzureNative.EdgeOrder.ChildConfigurationType>>? _childConfigurationTypes;

        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.EdgeOrder.ChildConfigurationType>> ChildConfigurationTypes
        {
            get => _childConfigurationTypes ?? (_childConfigurationTypes = new InputList<Union<string, Pulumi.AzureNative.EdgeOrder.ChildConfigurationType>>());
            set => _childConfigurationTypes = value;
        }

        [Input("hierarchyInformations")]
        private InputList<Inputs.HierarchyInformationArgs>? _hierarchyInformations;

        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        public InputList<Inputs.HierarchyInformationArgs> HierarchyInformations
        {
            get => _hierarchyInformations ?? (_hierarchyInformations = new InputList<Inputs.HierarchyInformationArgs>());
            set => _hierarchyInformations = value;
        }

        public ChildConfigurationFilterArgs()
        {
        }
        public static new ChildConfigurationFilterArgs Empty => new ChildConfigurationFilterArgs();
    }
}
