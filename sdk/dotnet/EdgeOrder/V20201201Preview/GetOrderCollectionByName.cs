// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EdgeOrder.V20201201Preview
{
    public static class GetOrderCollectionByName
    {
        /// <summary>
        /// Specifies the properties or parameters for an order collection. Order collection is a grouping of one or more orders.
        /// </summary>
        public static Task<GetOrderCollectionByNameResult> InvokeAsync(GetOrderCollectionByNameArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrderCollectionByNameResult>("azure-nextgen:edgeorder/v20201201preview:getOrderCollectionByName", args ?? new GetOrderCollectionByNameArgs(), options.WithVersion());
    }


    public sealed class GetOrderCollectionByNameArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the order collection
        /// </summary>
        [Input("orderCollectionName", required: true)]
        public string OrderCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOrderCollectionByNameArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrderCollectionByNameResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of order ARM Ids which are part of an order collection.
        /// </summary>
        public readonly ImmutableArray<string> OrderIds;
        /// <summary>
        /// Represents resource creation and update time
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOrderCollectionByNameResult(
            string id,

            string location,

            string name,

            ImmutableArray<string> orderIds,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            OrderIds = orderIds;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
