// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20210722Preview
{
    public static class GetPrometheusRuleGroup
    {
        /// <summary>
        /// Retrieve a Prometheus rule group definition.
        /// </summary>
        public static Task<GetPrometheusRuleGroupResult> InvokeAsync(GetPrometheusRuleGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrometheusRuleGroupResult>("azure-native:alertsmanagement/v20210722preview:getPrometheusRuleGroup", args ?? new GetPrometheusRuleGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a Prometheus rule group definition.
        /// </summary>
        public static Output<GetPrometheusRuleGroupResult> Invoke(GetPrometheusRuleGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrometheusRuleGroupResult>("azure-native:alertsmanagement/v20210722preview:getPrometheusRuleGroup", args ?? new GetPrometheusRuleGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrometheusRuleGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule group.
        /// </summary>
        [Input("ruleGroupName", required: true)]
        public string RuleGroupName { get; set; } = null!;

        public GetPrometheusRuleGroupArgs()
        {
        }
        public static new GetPrometheusRuleGroupArgs Empty => new GetPrometheusRuleGroupArgs();
    }

    public sealed class GetPrometheusRuleGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule group.
        /// </summary>
        [Input("ruleGroupName", required: true)]
        public Input<string> RuleGroupName { get; set; } = null!;

        public GetPrometheusRuleGroupInvokeArgs()
        {
        }
        public static new GetPrometheusRuleGroupInvokeArgs Empty => new GetPrometheusRuleGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrometheusRuleGroupResult
    {
        /// <summary>
        /// the cluster name of the rule group evaluation.
        /// </summary>
        public readonly string? ClusterName;
        /// <summary>
        /// the description of the Prometheus rule group that will be included in the alert email.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// the flag that indicates whether the Prometheus rule group is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// the interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
        /// </summary>
        public readonly string? Interval;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// defines the rules in the Prometheus rule group.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrometheusRuleResponse> Rules;
        /// <summary>
        /// the list of resource id's that this rule group is scoped to.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPrometheusRuleGroupResult(
            string? clusterName,

            string? description,

            bool? enabled,

            string id,

            string? interval,

            string location,

            string name,

            ImmutableArray<Outputs.PrometheusRuleResponse> rules,

            ImmutableArray<string> scopes,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ClusterName = clusterName;
            Description = description;
            Enabled = enabled;
            Id = id;
            Interval = interval;
            Location = location;
            Name = name;
            Rules = rules;
            Scopes = scopes;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
