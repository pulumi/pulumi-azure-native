// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20210722Preview.Outputs
{

    /// <summary>
    /// An alert rule.
    /// </summary>
    [OutputType]
    public sealed class PrometheusRuleGroupPropertiesResponse
    {
        /// <summary>
        /// the cluster name of the rule group evaluation.
        /// </summary>
        public readonly string? ClusterName;
        /// <summary>
        /// the description of the Prometheus rule group that will be included in the alert email.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// the flag that indicates whether the Prometheus rule group is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// the interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
        /// </summary>
        public readonly string? Interval;
        /// <summary>
        /// defines the rules in the Prometheus rule group.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrometheusRuleResponse> Rules;
        /// <summary>
        /// the list of resource id's that this rule group is scoped to.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;

        [OutputConstructor]
        private PrometheusRuleGroupPropertiesResponse(
            string? clusterName,

            string? description,

            bool? enabled,

            string? interval,

            ImmutableArray<Outputs.PrometheusRuleResponse> rules,

            ImmutableArray<string> scopes)
        {
            ClusterName = clusterName;
            Description = description;
            Enabled = enabled;
            Interval = interval;
            Rules = rules;
            Scopes = scopes;
        }
    }
}
