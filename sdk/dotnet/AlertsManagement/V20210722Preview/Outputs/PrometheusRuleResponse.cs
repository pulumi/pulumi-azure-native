// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20210722Preview.Outputs
{

    [OutputType]
    public sealed class PrometheusRuleResponse
    {
        /// <summary>
        /// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrometheusRuleGroupActionResponse> Actions;
        /// <summary>
        /// the name of the alert rule.
        /// </summary>
        public readonly string? Alert;
        /// <summary>
        /// annotations for rule group. Only relevant for alerts.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Annotations;
        /// <summary>
        /// the flag that indicates whether the Prometheus rule is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// the expression to run for the rule.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// the amount of time alert must be active before firing. Only relevant for alerts.
        /// </summary>
        public readonly string? For;
        /// <summary>
        /// labels for rule group. Only relevant for alerts.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// the name of the recording rule.
        /// </summary>
        public readonly string? Record;
        /// <summary>
        /// defines the configuration for resolving fired alerts. Only relevant for alerts.
        /// </summary>
        public readonly Outputs.PrometheusRuleResolveConfigurationResponse? ResolveConfiguration;
        /// <summary>
        /// the severity of the alerts fired by the rule. Only relevant for alerts.
        /// </summary>
        public readonly int? Severity;

        [OutputConstructor]
        private PrometheusRuleResponse(
            ImmutableArray<Outputs.PrometheusRuleGroupActionResponse> actions,

            string? alert,

            ImmutableDictionary<string, string>? annotations,

            bool? enabled,

            string expression,

            string? @for,

            ImmutableDictionary<string, string>? labels,

            string? record,

            Outputs.PrometheusRuleResolveConfigurationResponse? resolveConfiguration,

            int? severity)
        {
            Actions = actions;
            Alert = alert;
            Annotations = annotations;
            Enabled = enabled;
            Expression = expression;
            For = @for;
            Labels = labels;
            Record = record;
            ResolveConfiguration = resolveConfiguration;
            Severity = severity;
        }
    }
}
