// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20190505Preview.Outputs
{

    /// <summary>
    /// Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.
    /// </summary>
    [OutputType]
    public sealed class ConditionsResponse
    {
        /// <summary>
        /// filter alerts by alert context (payload)
        /// </summary>
        public readonly Outputs.ConditionResponse? AlertContext;
        /// <summary>
        /// filter alerts by alert rule id
        /// </summary>
        public readonly Outputs.ConditionResponse? AlertRuleId;
        /// <summary>
        /// filter alerts by alert rule name
        /// </summary>
        public readonly Outputs.ConditionResponse? AlertRuleName;
        /// <summary>
        /// filter alerts by alert rule description
        /// </summary>
        public readonly Outputs.ConditionResponse? Description;
        /// <summary>
        /// filter alerts by monitor condition
        /// </summary>
        public readonly Outputs.ConditionResponse? MonitorCondition;
        /// <summary>
        /// filter alerts by monitor service
        /// </summary>
        public readonly Outputs.ConditionResponse? MonitorService;
        /// <summary>
        /// filter alerts by severity
        /// </summary>
        public readonly Outputs.ConditionResponse? Severity;
        /// <summary>
        /// filter alerts by target resource type
        /// </summary>
        public readonly Outputs.ConditionResponse? TargetResourceType;

        [OutputConstructor]
        private ConditionsResponse(
            Outputs.ConditionResponse? alertContext,

            Outputs.ConditionResponse? alertRuleId,

            Outputs.ConditionResponse? alertRuleName,

            Outputs.ConditionResponse? description,

            Outputs.ConditionResponse? monitorCondition,

            Outputs.ConditionResponse? monitorService,

            Outputs.ConditionResponse? severity,

            Outputs.ConditionResponse? targetResourceType)
        {
            AlertContext = alertContext;
            AlertRuleId = alertRuleId;
            AlertRuleName = alertRuleName;
            Description = description;
            MonitorCondition = monitorCondition;
            MonitorService = monitorService;
            Severity = severity;
            TargetResourceType = targetResourceType;
        }
    }
}
