// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20230501Preview.Outputs
{

    /// <summary>
    /// Add logic for alerts correlation.
    /// </summary>
    [OutputType]
    public sealed class CorrelateAlertsResponse
    {
        /// <summary>
        /// Action that should be applied.
        /// Expected value is 'CorrelateAlerts'.
        /// </summary>
        public readonly string ActionType;
        /// <summary>
        /// The list of conditions for the alerts correlations.
        /// </summary>
        public readonly ImmutableArray<Outputs.CorrelateByResponse> CorrelateBy;
        /// <summary>
        /// The required duration (in ISO8601 format) for the alerts correlation.
        /// </summary>
        public readonly string CorrelationInterval;
        /// <summary>
        /// Indicates how to handle child alerts notifications.
        /// </summary>
        public readonly string? NotificationsForCorrelatedAlerts;
        /// <summary>
        /// The priority of this correlation.
        /// </summary>
        public readonly int Priority;

        [OutputConstructor]
        private CorrelateAlertsResponse(
            string actionType,

            ImmutableArray<Outputs.CorrelateByResponse> correlateBy,

            string correlationInterval,

            string? notificationsForCorrelatedAlerts,

            int priority)
        {
            ActionType = actionType;
            CorrelateBy = correlateBy;
            CorrelationInterval = correlationInterval;
            NotificationsForCorrelatedAlerts = notificationsForCorrelatedAlerts;
            Priority = priority;
        }
    }
}
