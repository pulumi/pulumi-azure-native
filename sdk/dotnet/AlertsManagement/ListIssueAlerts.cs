// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement
{
    public static class ListIssueAlerts
    {
        /// <summary>
        /// List all alerts in the issue - this method uses pagination to return all alerts
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// </summary>
        public static Task<ListIssueAlertsResult> InvokeAsync(ListIssueAlertsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListIssueAlertsResult>("azure-native:alertsmanagement:listIssueAlerts", args ?? new ListIssueAlertsArgs(), options.WithDefaults());

        /// <summary>
        /// List all alerts in the issue - this method uses pagination to return all alerts
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// </summary>
        public static Output<ListIssueAlertsResult> Invoke(ListIssueAlertsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListIssueAlertsResult>("azure-native:alertsmanagement:listIssueAlerts", args ?? new ListIssueAlertsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List all alerts in the issue - this method uses pagination to return all alerts
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// </summary>
        public static Output<ListIssueAlertsResult> Invoke(ListIssueAlertsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListIssueAlertsResult>("azure-native:alertsmanagement:listIssueAlerts", args ?? new ListIssueAlertsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListIssueAlertsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The filter to apply on the operation. For example, to filter by relevance, use "$filter=relevance eq 'Relevant'"
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The name of the IssueResource
        /// </summary>
        [Input("issueName", required: true)]
        public string IssueName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public ListIssueAlertsArgs()
        {
        }
        public static new ListIssueAlertsArgs Empty => new ListIssueAlertsArgs();
    }

    public sealed class ListIssueAlertsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The filter to apply on the operation. For example, to filter by relevance, use "$filter=relevance eq 'Relevant'"
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The name of the IssueResource
        /// </summary>
        [Input("issueName", required: true)]
        public Input<string> IssueName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public ListIssueAlertsInvokeArgs()
        {
        }
        public static new ListIssueAlertsInvokeArgs Empty => new ListIssueAlertsInvokeArgs();
    }


    [OutputType]
    public sealed class ListIssueAlertsResult
    {
        /// <summary>
        /// The link to the next page of items
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// The RelatedAlert items on this page
        /// </summary>
        public readonly ImmutableArray<Outputs.RelatedAlertResponse> Value;

        [OutputConstructor]
        private ListIssueAlertsResult(
            string? nextLink,

            ImmutableArray<Outputs.RelatedAlertResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
