// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AlertsManagement.V20200804Preview
{
    public static class GetHealthAlert
    {
        public static Task<GetHealthAlertResult> InvokeAsync(GetHealthAlertArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHealthAlertResult>("azure-nextgen:alertsmanagement/v20200804preview:getHealthAlert", args ?? new GetHealthAlertArgs(), options.WithVersion());
    }


    public sealed class GetHealthAlertArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetHealthAlertArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHealthAlertResult
    {
        /// <summary>
        /// the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
        /// </summary>
        public readonly ImmutableArray<Outputs.HealthAlertActionResponse> Actions;
        /// <summary>
        /// defines the specific alert criteria information.
        /// </summary>
        public readonly Outputs.HealthAlertCriteriaResponse Criteria;
        /// <summary>
        /// the description of the health alert that will be included in the alert email.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// the flag that indicates whether the health alert is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Last time the rule was updated in ISO8601 format.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// the list of resource id's that this health alert is scoped to.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHealthAlertResult(
            ImmutableArray<Outputs.HealthAlertActionResponse> actions,

            Outputs.HealthAlertCriteriaResponse criteria,

            string description,

            bool enabled,

            string lastUpdatedTime,

            string location,

            string name,

            ImmutableArray<string> scopes,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Actions = actions;
            Criteria = criteria;
            Description = description;
            Enabled = enabled;
            LastUpdatedTime = lastUpdatedTime;
            Location = location;
            Name = name;
            Scopes = scopes;
            Tags = tags;
            Type = type;
        }
    }
}
