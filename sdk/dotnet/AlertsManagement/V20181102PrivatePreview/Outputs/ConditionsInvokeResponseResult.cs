// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AlertsManagement.V20181102PrivatePreview.Outputs
{

    [OutputType]
    public sealed class ConditionsInvokeResponseResult
    {
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? AlertRuleId;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? ApplicationInsightsSearchResults;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? Description;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? LogAnalyticsSearchResults;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? MonitorCondition;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? MonitorService;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? Severity;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? SignalType;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? TargetResource;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? TargetResourceGroup;
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        public readonly Outputs.ConditionInvokeResponseResult? TargetResourceType;

        [OutputConstructor]
        private ConditionsInvokeResponseResult(
            Outputs.ConditionInvokeResponseResult? alertRuleId,

            Outputs.ConditionInvokeResponseResult? applicationInsightsSearchResults,

            Outputs.ConditionInvokeResponseResult? description,

            Outputs.ConditionInvokeResponseResult? logAnalyticsSearchResults,

            Outputs.ConditionInvokeResponseResult? monitorCondition,

            Outputs.ConditionInvokeResponseResult? monitorService,

            Outputs.ConditionInvokeResponseResult? severity,

            Outputs.ConditionInvokeResponseResult? signalType,

            Outputs.ConditionInvokeResponseResult? targetResource,

            Outputs.ConditionInvokeResponseResult? targetResourceGroup,

            Outputs.ConditionInvokeResponseResult? targetResourceType)
        {
            AlertRuleId = alertRuleId;
            ApplicationInsightsSearchResults = applicationInsightsSearchResults;
            Description = description;
            LogAnalyticsSearchResults = logAnalyticsSearchResults;
            MonitorCondition = monitorCondition;
            MonitorService = monitorService;
            Severity = severity;
            SignalType = signalType;
            TargetResource = targetResource;
            TargetResourceGroup = targetResourceGroup;
            TargetResourceType = targetResourceType;
        }
    }
}
