// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AlertsManagement.V20181102PrivatePreview.Inputs
{

    /// <summary>
    /// Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.
    /// </summary>
    public sealed class ConditionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("alertRuleId")]
        public Input<Inputs.ConditionArgs>? AlertRuleId { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("applicationInsightsSearchResults")]
        public Input<Inputs.ConditionArgs>? ApplicationInsightsSearchResults { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("description")]
        public Input<Inputs.ConditionArgs>? Description { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("logAnalyticsSearchResults")]
        public Input<Inputs.ConditionArgs>? LogAnalyticsSearchResults { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("monitorCondition")]
        public Input<Inputs.ConditionArgs>? MonitorCondition { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("monitorService")]
        public Input<Inputs.ConditionArgs>? MonitorService { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("severity")]
        public Input<Inputs.ConditionArgs>? Severity { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("signalType")]
        public Input<Inputs.ConditionArgs>? SignalType { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("targetResource")]
        public Input<Inputs.ConditionArgs>? TargetResource { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("targetResourceGroup")]
        public Input<Inputs.ConditionArgs>? TargetResourceGroup { get; set; }

        /// <summary>
        /// condition to trigger an action rule
        /// </summary>
        [Input("targetResourceType")]
        public Input<Inputs.ConditionArgs>? TargetResourceType { get; set; }

        public ConditionsArgs()
        {
        }
    }
}
