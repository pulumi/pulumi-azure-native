// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20230301
{
    /// <summary>
    /// The Prometheus rule group resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:alertsmanagement/v20230301:PrometheusRuleGroup")]
    public partial class PrometheusRuleGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Apply rule to data from a specific cluster.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Rule group description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enable/disable rule group.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
        /// </summary>
        [Output("interval")]
        public Output<string?> Interval { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Defines the rules in the Prometheus rule group.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.PrometheusRuleResponse>> Rules { get; private set; } = null!;

        /// <summary>
        /// Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PrometheusRuleGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrometheusRuleGroup(string name, PrometheusRuleGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:alertsmanagement/v20230301:PrometheusRuleGroup", name, args ?? new PrometheusRuleGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrometheusRuleGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:alertsmanagement/v20230301:PrometheusRuleGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement:PrometheusRuleGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement/v20210722preview:PrometheusRuleGroup"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrometheusRuleGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrometheusRuleGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PrometheusRuleGroup(name, id, options);
        }
    }

    public sealed class PrometheusRuleGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Apply rule to data from a specific cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Rule group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable/disable rule group.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule group.
        /// </summary>
        [Input("ruleGroupName")]
        public Input<string>? RuleGroupName { get; set; }

        [Input("rules", required: true)]
        private InputList<Inputs.PrometheusRuleArgs>? _rules;

        /// <summary>
        /// Defines the rules in the Prometheus rule group.
        /// </summary>
        public InputList<Inputs.PrometheusRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.PrometheusRuleArgs>());
            set => _rules = value;
        }

        [Input("scopes", required: true)]
        private InputList<string>? _scopes;

        /// <summary>
        /// Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PrometheusRuleGroupArgs()
        {
        }
        public static new PrometheusRuleGroupArgs Empty => new PrometheusRuleGroupArgs();
    }
}
