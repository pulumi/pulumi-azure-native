// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20210808
{
    public static class GetAlertProcessingRuleByName
    {
        /// <summary>
        /// Alert processing rule object containing target scopes, conditions and scheduling logic.
        /// </summary>
        public static Task<GetAlertProcessingRuleByNameResult> InvokeAsync(GetAlertProcessingRuleByNameArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAlertProcessingRuleByNameResult>("azure-native:alertsmanagement/v20210808:getAlertProcessingRuleByName", args ?? new GetAlertProcessingRuleByNameArgs(), options.WithDefaults());

        /// <summary>
        /// Alert processing rule object containing target scopes, conditions and scheduling logic.
        /// </summary>
        public static Output<GetAlertProcessingRuleByNameResult> Invoke(GetAlertProcessingRuleByNameInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAlertProcessingRuleByNameResult>("azure-native:alertsmanagement/v20210808:getAlertProcessingRuleByName", args ?? new GetAlertProcessingRuleByNameInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertProcessingRuleByNameArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the alert processing rule that needs to be fetched.
        /// </summary>
        [Input("alertProcessingRuleName", required: true)]
        public string AlertProcessingRuleName { get; set; } = null!;

        /// <summary>
        /// Resource group name where the resource is created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAlertProcessingRuleByNameArgs()
        {
        }
        public static new GetAlertProcessingRuleByNameArgs Empty => new GetAlertProcessingRuleByNameArgs();
    }

    public sealed class GetAlertProcessingRuleByNameInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the alert processing rule that needs to be fetched.
        /// </summary>
        [Input("alertProcessingRuleName", required: true)]
        public Input<string> AlertProcessingRuleName { get; set; } = null!;

        /// <summary>
        /// Resource group name where the resource is created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAlertProcessingRuleByNameInvokeArgs()
        {
        }
        public static new GetAlertProcessingRuleByNameInvokeArgs Empty => new GetAlertProcessingRuleByNameInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertProcessingRuleByNameResult
    {
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Alert processing rule properties.
        /// </summary>
        public readonly Outputs.AlertProcessingRulePropertiesResponse Properties;
        /// <summary>
        /// Alert processing rule system data.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAlertProcessingRuleByNameResult(
            string id,

            string location,

            string name,

            Outputs.AlertProcessingRulePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
