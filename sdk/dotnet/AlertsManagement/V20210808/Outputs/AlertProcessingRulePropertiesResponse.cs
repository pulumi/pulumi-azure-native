// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20210808.Outputs
{

    /// <summary>
    /// Alert processing rule properties defining scopes, conditions and scheduling logic for alert processing rule.
    /// </summary>
    [OutputType]
    public sealed class AlertProcessingRulePropertiesResponse
    {
        /// <summary>
        /// Actions to be applied.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.AddActionGroupsResponse, Outputs.RemoveAllActionGroupsResponse>> Actions;
        /// <summary>
        /// Conditions on which alerts will be filtered.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConditionResponse> Conditions;
        /// <summary>
        /// Description of alert processing rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicates if the given alert processing rule is enabled or disabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Scheduling for alert processing rule.
        /// </summary>
        public readonly Outputs.ScheduleResponse? Schedule;
        /// <summary>
        /// Scopes on which alert processing rule will apply.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;

        [OutputConstructor]
        private AlertProcessingRulePropertiesResponse(
            ImmutableArray<Union<Outputs.AddActionGroupsResponse, Outputs.RemoveAllActionGroupsResponse>> actions,

            ImmutableArray<Outputs.ConditionResponse> conditions,

            string? description,

            bool? enabled,

            Outputs.ScheduleResponse? schedule,

            ImmutableArray<string> scopes)
        {
            Actions = actions;
            Conditions = conditions;
            Description = description;
            Enabled = enabled;
            Schedule = schedule;
            Scopes = scopes;
        }
    }
}
