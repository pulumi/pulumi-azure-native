// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20230401Preview.Outputs
{

    /// <summary>
    /// An Activity Log Alert rule condition that is met when all its member conditions are met.
    /// Each condition can be of one of the following types:
    /// __Important__: Each type has its unique subset of properties. Properties from different types CANNOT exist in one condition.
    ///    * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
    ///   _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
    ///   * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
    ///   _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._
    /// </summary>
    [OutputType]
    public sealed class AlertRuleAnyOfOrLeafConditionResponse
    {
        /// <summary>
        /// An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
        /// </summary>
        public readonly ImmutableArray<Outputs.AlertRuleLeafConditionResponse> AnyOf;
        /// <summary>
        /// The value of the event's field will be compared to the values in this array (case-insensitive) to determine if the condition is met.
        /// </summary>
        public readonly ImmutableArray<string> ContainsAny;
        /// <summary>
        /// The value of the event's field will be compared to this value (case-insensitive) to determine if the condition is met.
        /// </summary>
        public readonly string? Equals;
        /// <summary>
        /// The name of the Activity Log event's field that this condition will examine.
        /// The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties'.
        /// </summary>
        public readonly string? Field;

        [OutputConstructor]
        private AlertRuleAnyOfOrLeafConditionResponse(
            ImmutableArray<Outputs.AlertRuleLeafConditionResponse> anyOf,

            ImmutableArray<string> containsAny,

            string? equals,

            string? field)
        {
            AnyOf = anyOf;
            ContainsAny = containsAny;
            Equals = equals;
            Field = field;
        }
    }
}
