// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.AlertsManagement.V20190301.Outputs
{

    [OutputType]
    public sealed class AlertRulePropertiesResponseResult
    {
        /// <summary>
        /// The alert rule actions.
        /// </summary>
        public readonly Outputs.ActionGroupsInformationResponseResult ActionGroups;
        /// <summary>
        /// The alert rule description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The alert rule's detector.
        /// </summary>
        public readonly Outputs.DetectorResponseResult Detector;
        /// <summary>
        /// The alert rule frequency in ISO8601 format. The time granularity must be in minutes and minimum value is 5 minutes.
        /// </summary>
        public readonly string Frequency;
        /// <summary>
        /// The alert rule resources scope.
        /// </summary>
        public readonly ImmutableArray<string> Scope;
        /// <summary>
        /// The alert rule severity.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The alert rule state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The alert rule throttling information.
        /// </summary>
        public readonly Outputs.ThrottlingInformationResponseResult? Throttling;

        [OutputConstructor]
        private AlertRulePropertiesResponseResult(
            Outputs.ActionGroupsInformationResponseResult actionGroups,

            string? description,

            Outputs.DetectorResponseResult detector,

            string frequency,

            ImmutableArray<string> scope,

            string severity,

            string state,

            Outputs.ThrottlingInformationResponseResult? throttling)
        {
            ActionGroups = actionGroups;
            Description = description;
            Detector = detector;
            Frequency = frequency;
            Scope = scope;
            Severity = severity;
            State = state;
            Throttling = throttling;
        }
    }
}
