// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20240301Preview.Inputs
{

    /// <summary>
    /// Add logic for alerts correlation.
    /// </summary>
    public sealed class CorrelateAlertsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action that should be applied.
        /// Expected value is 'CorrelateAlerts'.
        /// </summary>
        [Input("actionType", required: true)]
        public Input<string> ActionType { get; set; } = null!;

        [Input("correlateBy", required: true)]
        private InputList<Inputs.CorrelateByArgs>? _correlateBy;

        /// <summary>
        /// The list of conditions for the alerts correlations.
        /// </summary>
        public InputList<Inputs.CorrelateByArgs> CorrelateBy
        {
            get => _correlateBy ?? (_correlateBy = new InputList<Inputs.CorrelateByArgs>());
            set => _correlateBy = value;
        }

        /// <summary>
        /// The required duration (in ISO8601 format) for the alerts correlation.
        /// </summary>
        [Input("correlationInterval", required: true)]
        public Input<string> CorrelationInterval { get; set; } = null!;

        /// <summary>
        /// Defines the updates to be applied for correlation.
        /// </summary>
        [Input("correlationUpdates")]
        public Input<Inputs.CorrelationUpdatesArgs>? CorrelationUpdates { get; set; }

        /// <summary>
        /// Indicates how to handle child alerts notifications.
        /// </summary>
        [Input("notificationsForCorrelatedAlerts")]
        public InputUnion<string, Pulumi.AzureNative.AlertsManagement.V20240301Preview.NotificationsForCorrelatedAlerts>? NotificationsForCorrelatedAlerts { get; set; }

        /// <summary>
        /// The priority of this correlation.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        public CorrelateAlertsArgs()
        {
            NotificationsForCorrelatedAlerts = "SuppressAlways";
        }
        public static new CorrelateAlertsArgs Empty => new CorrelateAlertsArgs();
    }
}
