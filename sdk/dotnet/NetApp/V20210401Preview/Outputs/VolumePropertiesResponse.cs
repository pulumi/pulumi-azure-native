// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20210401Preview.Outputs
{

    /// <summary>
    /// Volume properties
    /// </summary>
    [OutputType]
    public sealed class VolumePropertiesResponse
    {
        /// <summary>
        /// UUID v4 or resource identifier used to identify the Backup.
        /// </summary>
        public readonly string? BackupId;
        /// <summary>
        /// Unique Baremetal Tenant Identifier.
        /// </summary>
        public readonly string BaremetalTenantId;
        /// <summary>
        /// A unique file path for the volume. Used when creating mount targets
        /// </summary>
        public readonly string CreationToken;
        /// <summary>
        /// DataProtection type volumes include an object containing details of the replication
        /// </summary>
        public readonly Outputs.VolumePropertiesResponseDataProtection? DataProtection;
        /// <summary>
        /// Encryption Key Source. Possible values are: 'Microsoft.NetApp'
        /// </summary>
        public readonly string? EncryptionKeySource;
        /// <summary>
        /// Set of export policy rules
        /// </summary>
        public readonly Outputs.VolumePropertiesResponseExportPolicy? ExportPolicy;
        /// <summary>
        /// Unique FileSystem Identifier.
        /// </summary>
        public readonly string FileSystemId;
        /// <summary>
        /// Restoring
        /// </summary>
        public readonly bool? IsRestoring;
        /// <summary>
        /// Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later
        /// </summary>
        public readonly bool? KerberosEnabled;
        /// <summary>
        /// Specifies whether LDAP is enabled or not for a given NFS volume.
        /// </summary>
        public readonly bool? LdapEnabled;
        /// <summary>
        /// List of mount targets
        /// </summary>
        public readonly ImmutableArray<Outputs.MountTargetPropertiesResponse> MountTargets;
        /// <summary>
        /// Basic network, or Standard features available to the volume.
        /// </summary>
        public readonly string? NetworkFeatures;
        /// <summary>
        /// Network Sibling Set ID for the the group of volumes sharing networking resources.
        /// </summary>
        public readonly string NetworkSiblingSetId;
        /// <summary>
        /// Set of protocol types, default NFSv3, CIFS for SMB protocol
        /// </summary>
        public readonly ImmutableArray<string> ProtocolTypes;
        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
        /// </summary>
        public readonly string? SecurityStyle;
        /// <summary>
        /// The service level of the file system
        /// </summary>
        public readonly string? ServiceLevel;
        /// <summary>
        /// Enables continuously available share property for smb volume. Only applicable for SMB volume
        /// </summary>
        public readonly bool? SmbContinuouslyAvailable;
        /// <summary>
        /// Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later
        /// </summary>
        public readonly bool? SmbEncryption;
        /// <summary>
        /// If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).
        /// </summary>
        public readonly bool? SnapshotDirectoryVisible;
        /// <summary>
        /// UUID v4 or resource identifier used to identify the Snapshot.
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// Provides storage to network proximity information for the volume.
        /// </summary>
        public readonly string StorageToNetworkProximity;
        /// <summary>
        /// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
        /// </summary>
        public readonly string SubnetId;
        public readonly double? ThroughputMibps;
        /// <summary>
        /// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
        /// </summary>
        public readonly double UsageThreshold;
        /// <summary>
        /// What type of volume is this
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private VolumePropertiesResponse(
            string? backupId,

            string baremetalTenantId,

            string creationToken,

            Outputs.VolumePropertiesResponseDataProtection? dataProtection,

            string? encryptionKeySource,

            Outputs.VolumePropertiesResponseExportPolicy? exportPolicy,

            string fileSystemId,

            bool? isRestoring,

            bool? kerberosEnabled,

            bool? ldapEnabled,

            ImmutableArray<Outputs.MountTargetPropertiesResponse> mountTargets,

            string? networkFeatures,

            string networkSiblingSetId,

            ImmutableArray<string> protocolTypes,

            string provisioningState,

            string? securityStyle,

            string? serviceLevel,

            bool? smbContinuouslyAvailable,

            bool? smbEncryption,

            bool? snapshotDirectoryVisible,

            string? snapshotId,

            string storageToNetworkProximity,

            string subnetId,

            double? throughputMibps,

            double usageThreshold,

            string? volumeType)
        {
            BackupId = backupId;
            BaremetalTenantId = baremetalTenantId;
            CreationToken = creationToken;
            DataProtection = dataProtection;
            EncryptionKeySource = encryptionKeySource;
            ExportPolicy = exportPolicy;
            FileSystemId = fileSystemId;
            IsRestoring = isRestoring;
            KerberosEnabled = kerberosEnabled;
            LdapEnabled = ldapEnabled;
            MountTargets = mountTargets;
            NetworkFeatures = networkFeatures;
            NetworkSiblingSetId = networkSiblingSetId;
            ProtocolTypes = protocolTypes;
            ProvisioningState = provisioningState;
            SecurityStyle = securityStyle;
            ServiceLevel = serviceLevel;
            SmbContinuouslyAvailable = smbContinuouslyAvailable;
            SmbEncryption = smbEncryption;
            SnapshotDirectoryVisible = snapshotDirectoryVisible;
            SnapshotId = snapshotId;
            StorageToNetworkProximity = storageToNetworkProximity;
            SubnetId = subnetId;
            ThroughputMibps = throughputMibps;
            UsageThreshold = usageThreshold;
            VolumeType = volumeType;
        }
    }
}
