// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20240501
{
    public static class GetVolumeQuotaRule
    {
        /// <summary>
        /// Get details of the specified quota rule
        /// </summary>
        public static Task<GetVolumeQuotaRuleResult> InvokeAsync(GetVolumeQuotaRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeQuotaRuleResult>("azure-native:netapp/v20240501:getVolumeQuotaRule", args ?? new GetVolumeQuotaRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Get details of the specified quota rule
        /// </summary>
        public static Output<GetVolumeQuotaRuleResult> Invoke(GetVolumeQuotaRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeQuotaRuleResult>("azure-native:netapp/v20240501:getVolumeQuotaRule", args ?? new GetVolumeQuotaRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeQuotaRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public string VolumeName { get; set; } = null!;

        /// <summary>
        /// The name of volume quota rule
        /// </summary>
        [Input("volumeQuotaRuleName", required: true)]
        public string VolumeQuotaRuleName { get; set; } = null!;

        public GetVolumeQuotaRuleArgs()
        {
        }
        public static new GetVolumeQuotaRuleArgs Empty => new GetVolumeQuotaRuleArgs();
    }

    public sealed class GetVolumeQuotaRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        /// <summary>
        /// The name of volume quota rule
        /// </summary>
        [Input("volumeQuotaRuleName", required: true)]
        public Input<string> VolumeQuotaRuleName { get; set; } = null!;

        public GetVolumeQuotaRuleInvokeArgs()
        {
        }
        public static new GetVolumeQuotaRuleInvokeArgs Empty => new GetVolumeQuotaRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeQuotaRuleResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the status of the VolumeQuotaRule at the time the operation was called.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Size of quota
        /// </summary>
        public readonly double? QuotaSizeInKiBs;
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running &lt;wmic useraccount where name='user-name' get sid&gt;
        /// </summary>
        public readonly string? QuotaTarget;
        /// <summary>
        /// Type of quota
        /// </summary>
        public readonly string? QuotaType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVolumeQuotaRuleResult(
            string id,

            string location,

            string name,

            string provisioningState,

            double? quotaSizeInKiBs,

            string? quotaTarget,

            string? quotaType,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            QuotaSizeInKiBs = quotaSizeInKiBs;
            QuotaTarget = quotaTarget;
            QuotaType = quotaType;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
