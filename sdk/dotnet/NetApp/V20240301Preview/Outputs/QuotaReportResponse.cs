// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20240301Preview.Outputs
{

    /// <summary>
    /// Quota report record properties
    /// </summary>
    [OutputType]
    public sealed class QuotaReportResponse
    {
        /// <summary>
        /// Flag to indicate whether the quota is derived from default quota.
        /// </summary>
        public readonly bool? IsDerivedQuota;
        /// <summary>
        /// Percentage of used size compared to total size.
        /// </summary>
        public readonly double? PercentageUsed;
        /// <summary>
        /// Specifies the total size limit in kibibytes for the user/group quota.
        /// </summary>
        public readonly double? QuotaLimitTotalInKiBs;
        /// <summary>
        /// Specifies the current usage in kibibytes for the user/group quota.
        /// </summary>
        public readonly double? QuotaLimitUsedInKiBs;
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running &lt;wmic useraccount where name='user-name' get sid&gt;
        /// </summary>
        public readonly string? QuotaTarget;
        /// <summary>
        /// Type of quota
        /// </summary>
        public readonly string? QuotaType;

        [OutputConstructor]
        private QuotaReportResponse(
            bool? isDerivedQuota,

            double? percentageUsed,

            double? quotaLimitTotalInKiBs,

            double? quotaLimitUsedInKiBs,

            string? quotaTarget,

            string? quotaType)
        {
            IsDerivedQuota = isDerivedQuota;
            PercentageUsed = percentageUsed;
            QuotaLimitTotalInKiBs = quotaLimitTotalInKiBs;
            QuotaLimitUsedInKiBs = quotaLimitUsedInKiBs;
            QuotaTarget = quotaTarget;
            QuotaType = quotaType;
        }
    }
}
