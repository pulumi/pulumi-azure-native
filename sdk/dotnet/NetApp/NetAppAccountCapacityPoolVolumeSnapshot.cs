// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.NetApp
{
    /// <summary>
    /// Snapshot of a Volume
    /// </summary>
    public partial class NetAppAccountCapacityPoolVolumeSnapshot : Pulumi.CustomResource
    {
        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Snapshot Properties
        /// </summary>
        [Output("properties")]
        public Output<Outputs.SnapshotPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NetAppAccountCapacityPoolVolumeSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetAppAccountCapacityPoolVolumeSnapshot(string name, NetAppAccountCapacityPoolVolumeSnapshotArgs args, CustomResourceOptions? options = null)
            : base("azurerm:netapp:NetAppAccountCapacityPoolVolumeSnapshot", name, args ?? new NetAppAccountCapacityPoolVolumeSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetAppAccountCapacityPoolVolumeSnapshot(string name, Input<string> id, NetAppAccountCapacityPoolVolumeSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("azurerm:netapp:NetAppAccountCapacityPoolVolumeSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetAppAccountCapacityPoolVolumeSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetAppAccountCapacityPoolVolumeSnapshot Get(string name, Input<string> id, NetAppAccountCapacityPoolVolumeSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new NetAppAccountCapacityPoolVolumeSnapshot(name, id, state, options);
        }
    }

    public sealed class NetAppAccountCapacityPoolVolumeSnapshotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the mount target
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// Snapshot Properties
        /// </summary>
        [Input("properties")]
        public Input<Inputs.SnapshotPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        public NetAppAccountCapacityPoolVolumeSnapshotArgs()
        {
        }
    }

    public sealed class NetAppAccountCapacityPoolVolumeSnapshotState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Snapshot Properties
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.SnapshotPropertiesResponseGetArgs> Properties { get; set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public NetAppAccountCapacityPoolVolumeSnapshotState()
        {
        }
    }
}
