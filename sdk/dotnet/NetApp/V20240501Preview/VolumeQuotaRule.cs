// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20240501Preview
{
    /// <summary>
    /// Quota Rule of a Volume
    /// </summary>
    [AzureNativeResourceType("azure-native:netapp/v20240501preview:VolumeQuotaRule")]
    public partial class VolumeQuotaRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets the status of the VolumeQuotaRule at the time the operation was called.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Size of quota
        /// </summary>
        [Output("quotaSizeInKiBs")]
        public Output<double?> QuotaSizeInKiBs { get; private set; } = null!;

        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running &lt;wmic useraccount where name='user-name' get sid&gt;
        /// </summary>
        [Output("quotaTarget")]
        public Output<string?> QuotaTarget { get; private set; } = null!;

        /// <summary>
        /// Type of quota
        /// </summary>
        [Output("quotaType")]
        public Output<string?> QuotaType { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeQuotaRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeQuotaRule(string name, VolumeQuotaRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20240501preview:VolumeQuotaRule", name, args ?? new VolumeQuotaRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeQuotaRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20240501preview:VolumeQuotaRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:netapp:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220101:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220301:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220501:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220901:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101preview:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501preview:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701preview:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101preview:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240101:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301preview:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240501:VolumeQuotaRule" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240701:VolumeQuotaRule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeQuotaRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeQuotaRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VolumeQuotaRule(name, id, options);
        }
    }

    public sealed class VolumeQuotaRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// Size of quota
        /// </summary>
        [Input("quotaSizeInKiBs")]
        public Input<double>? QuotaSizeInKiBs { get; set; }

        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running &lt;wmic useraccount where name='user-name' get sid&gt;
        /// </summary>
        [Input("quotaTarget")]
        public Input<string>? QuotaTarget { get; set; }

        /// <summary>
        /// Type of quota
        /// </summary>
        [Input("quotaType")]
        public InputUnion<string, Pulumi.AzureNative.NetApp.V20240501Preview.Type>? QuotaType { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        /// <summary>
        /// The name of volume quota rule
        /// </summary>
        [Input("volumeQuotaRuleName")]
        public Input<string>? VolumeQuotaRuleName { get; set; }

        public VolumeQuotaRuleArgs()
        {
        }
        public static new VolumeQuotaRuleArgs Empty => new VolumeQuotaRuleArgs();
    }
}
