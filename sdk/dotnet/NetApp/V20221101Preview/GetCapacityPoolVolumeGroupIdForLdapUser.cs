// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20221101Preview
{
    public static class GetCapacityPoolVolumeGroupIdForLdapUser
    {
        /// <summary>
        /// Returns the list of group Ids for a specific LDAP User
        /// </summary>
        public static Task<GetCapacityPoolVolumeGroupIdForLdapUserResult> InvokeAsync(GetCapacityPoolVolumeGroupIdForLdapUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCapacityPoolVolumeGroupIdForLdapUserResult>("azure-native:netapp/v20221101preview:getCapacityPoolVolumeGroupIdForLdapUser", args ?? new GetCapacityPoolVolumeGroupIdForLdapUserArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the list of group Ids for a specific LDAP User
        /// </summary>
        public static Output<GetCapacityPoolVolumeGroupIdForLdapUserResult> Invoke(GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityPoolVolumeGroupIdForLdapUserResult>("azure-native:netapp/v20221101preview:getCapacityPoolVolumeGroupIdForLdapUser", args ?? new GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the list of group Ids for a specific LDAP User
        /// </summary>
        public static Output<GetCapacityPoolVolumeGroupIdForLdapUserResult> Invoke(GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityPoolVolumeGroupIdForLdapUserResult>("azure-native:netapp/v20221101preview:getCapacityPoolVolumeGroupIdForLdapUser", args ?? new GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapacityPoolVolumeGroupIdForLdapUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// username is required to fetch the group to which user is part of
        /// </summary>
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public string VolumeName { get; set; } = null!;

        public GetCapacityPoolVolumeGroupIdForLdapUserArgs()
        {
        }
        public static new GetCapacityPoolVolumeGroupIdForLdapUserArgs Empty => new GetCapacityPoolVolumeGroupIdForLdapUserArgs();
    }

    public sealed class GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// username is required to fetch the group to which user is part of
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        public GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs()
        {
        }
        public static new GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs Empty => new GetCapacityPoolVolumeGroupIdForLdapUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetCapacityPoolVolumeGroupIdForLdapUserResult
    {
        /// <summary>
        /// Group Id list
        /// </summary>
        public readonly ImmutableArray<string> GroupIdsForLdapUser;

        [OutputConstructor]
        private GetCapacityPoolVolumeGroupIdForLdapUserResult(ImmutableArray<string> groupIdsForLdapUser)
        {
            GroupIdsForLdapUser = groupIdsForLdapUser;
        }
    }
}
