// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20230701
{
    /// <summary>
    /// Snapshot policy information
    /// </summary>
    [AzureNativeResourceType("azure-native:netapp/v20230701:SnapshotPolicy")]
    public partial class SnapshotPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Schedule for daily snapshots
        /// </summary>
        [Output("dailySchedule")]
        public Output<Outputs.DailyScheduleResponse?> DailySchedule { get; private set; } = null!;

        /// <summary>
        /// The property to decide policy is enabled or not
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Schedule for hourly snapshots
        /// </summary>
        [Output("hourlySchedule")]
        public Output<Outputs.HourlyScheduleResponse?> HourlySchedule { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Schedule for monthly snapshots
        /// </summary>
        [Output("monthlySchedule")]
        public Output<Outputs.MonthlyScheduleResponse?> MonthlySchedule { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Schedule for weekly snapshots
        /// </summary>
        [Output("weeklySchedule")]
        public Output<Outputs.WeeklyScheduleResponse?> WeeklySchedule { get; private set; } = null!;


        /// <summary>
        /// Create a SnapshotPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SnapshotPolicy(string name, SnapshotPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230701:SnapshotPolicy", name, args ?? new SnapshotPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SnapshotPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230701:SnapshotPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:netapp:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200501:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200601:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200701:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200801:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200901:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20201101:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20201201:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210201:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210401:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210401preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210601:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210801:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20211001:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220101:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220301:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220501:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220901:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240101:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240501:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240501preview:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240701:SnapshotPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240701preview:SnapshotPolicy" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SnapshotPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SnapshotPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SnapshotPolicy(name, id, options);
        }
    }

    public sealed class SnapshotPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Schedule for daily snapshots
        /// </summary>
        [Input("dailySchedule")]
        public Input<Inputs.DailyScheduleArgs>? DailySchedule { get; set; }

        /// <summary>
        /// The property to decide policy is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Schedule for hourly snapshots
        /// </summary>
        [Input("hourlySchedule")]
        public Input<Inputs.HourlyScheduleArgs>? HourlySchedule { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Schedule for monthly snapshots
        /// </summary>
        [Input("monthlySchedule")]
        public Input<Inputs.MonthlyScheduleArgs>? MonthlySchedule { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the snapshot policy
        /// </summary>
        [Input("snapshotPolicyName")]
        public Input<string>? SnapshotPolicyName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Schedule for weekly snapshots
        /// </summary>
        [Input("weeklySchedule")]
        public Input<Inputs.WeeklyScheduleArgs>? WeeklySchedule { get; set; }

        public SnapshotPolicyArgs()
        {
        }
        public static new SnapshotPolicyArgs Empty => new SnapshotPolicyArgs();
    }
}
