// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20230501
{
    /// <summary>
    /// Subvolume Information properties
    /// </summary>
    [AzureNativeResourceType("azure-native:netapp/v20230501:Subvolume")]
    public partial class Subvolume : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// parent path to the subvolume
        /// </summary>
        [Output("parentPath")]
        public Output<string?> ParentPath { get; private set; } = null!;

        /// <summary>
        /// Path to the subvolume
        /// </summary>
        [Output("path")]
        public Output<string?> Path { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Subvolume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Subvolume(string name, SubvolumeArgs args, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230501:Subvolume", name, args ?? new SubvolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Subvolume(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230501:Subvolume", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:netapp:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20211001:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220101:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220301:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220501:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220901:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240101:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240501:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240501preview:Subvolume" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240701:Subvolume" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Subvolume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Subvolume Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Subvolume(name, id, options);
        }
    }

    public sealed class SubvolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// parent path to the subvolume
        /// </summary>
        [Input("parentPath")]
        public Input<string>? ParentPath { get; set; }

        /// <summary>
        /// Path to the subvolume
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Truncate subvolume to the provided size in bytes
        /// </summary>
        [Input("size")]
        public Input<double>? Size { get; set; }

        /// <summary>
        /// The name of the subvolume.
        /// </summary>
        [Input("subvolumeName")]
        public Input<string>? SubvolumeName { get; set; }

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        public SubvolumeArgs()
        {
        }
        public static new SubvolumeArgs Empty => new SubvolumeArgs();
    }
}
