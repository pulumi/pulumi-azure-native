// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20230501
{
    /// <summary>
    /// Backup policy information
    /// </summary>
    [AzureNativeResourceType("azure-native:netapp/v20230501:BackupPolicy")]
    public partial class BackupPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Backup Policy Resource ID
        /// </summary>
        [Output("backupPolicyId")]
        public Output<string> BackupPolicyId { get; private set; } = null!;

        /// <summary>
        /// Daily backups count to keep
        /// </summary>
        [Output("dailyBackupsToKeep")]
        public Output<int?> DailyBackupsToKeep { get; private set; } = null!;

        /// <summary>
        /// The property to decide policy is enabled or not
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Monthly backups count to keep
        /// </summary>
        [Output("monthlyBackupsToKeep")]
        public Output<int?> MonthlyBackupsToKeep { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// A list of volumes assigned to this policy
        /// </summary>
        [Output("volumeBackups")]
        public Output<ImmutableArray<Outputs.VolumeBackupsResponse>> VolumeBackups { get; private set; } = null!;

        /// <summary>
        /// Volumes using current backup policy
        /// </summary>
        [Output("volumesAssigned")]
        public Output<int> VolumesAssigned { get; private set; } = null!;

        /// <summary>
        /// Weekly backups count to keep
        /// </summary>
        [Output("weeklyBackupsToKeep")]
        public Output<int?> WeeklyBackupsToKeep { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPolicy(string name, BackupPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230501:BackupPolicy", name, args ?? new BackupPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20230501:BackupPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:netapp:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200501:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200601:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200701:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200801:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20200901:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20201101:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20201201:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210201:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210401:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210401preview:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210601:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210801:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20211001:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220101:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220301:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220501:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220901:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20221101preview:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230501preview:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20230701preview:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20231101preview:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240101:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301:BackupPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20240301preview:BackupPolicy" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BackupPolicy(name, id, options);
        }
    }

    public sealed class BackupPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Backup policy Name which uniquely identify backup policy.
        /// </summary>
        [Input("backupPolicyName")]
        public Input<string>? BackupPolicyName { get; set; }

        /// <summary>
        /// Daily backups count to keep
        /// </summary>
        [Input("dailyBackupsToKeep")]
        public Input<int>? DailyBackupsToKeep { get; set; }

        /// <summary>
        /// The property to decide policy is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Monthly backups count to keep
        /// </summary>
        [Input("monthlyBackupsToKeep")]
        public Input<int>? MonthlyBackupsToKeep { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Weekly backups count to keep
        /// </summary>
        [Input("weeklyBackupsToKeep")]
        public Input<int>? WeeklyBackupsToKeep { get; set; }

        public BackupPolicyArgs()
        {
        }
        public static new BackupPolicyArgs Empty => new BackupPolicyArgs();
    }
}
