// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20170815.Inputs
{

    /// <summary>
    /// Volume properties
    /// </summary>
    public sealed class VolumePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A unique file path for the volume. Used when creating mount targets
        /// </summary>
        [Input("creationToken", required: true)]
        public Input<string> CreationToken { get; set; } = null!;

        /// <summary>
        /// Export policy rule
        /// </summary>
        [Input("exportPolicy")]
        public Input<Inputs.VolumePropertiesExportPolicyArgs>? ExportPolicy { get; set; }

        /// <summary>
        /// The service level of the file system
        /// </summary>
        [Input("serviceLevel", required: true)]
        public InputUnion<string, Pulumi.AzureNative.NetApp.V20170815.ServiceLevel> ServiceLevel { get; set; } = null!;

        /// <summary>
        /// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB.
        /// </summary>
        [Input("usageThreshold")]
        public Input<double>? UsageThreshold { get; set; }

        public VolumePropertiesArgs()
        {
            ServiceLevel = "Premium";
            UsageThreshold = 107374182400;
        }
        public static new VolumePropertiesArgs Empty => new VolumePropertiesArgs();
    }
}
