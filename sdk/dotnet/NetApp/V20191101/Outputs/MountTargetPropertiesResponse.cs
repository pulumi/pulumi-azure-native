// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.NetApp.V20191101.Outputs
{

    [OutputType]
    public sealed class MountTargetPropertiesResponse
    {
        /// <summary>
        /// The end of IPv4 address range to use when creating a new mount target
        /// </summary>
        public readonly string? EndIp;
        /// <summary>
        /// UUID v4 used to identify the MountTarget
        /// </summary>
        public readonly string FileSystemId;
        /// <summary>
        /// The gateway of the IPv4 address range to use when creating a new mount target
        /// </summary>
        public readonly string? Gateway;
        /// <summary>
        /// The mount target's IPv4 address
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// UUID v4 used to identify the MountTarget
        /// </summary>
        public readonly string MountTargetId;
        /// <summary>
        /// The netmask of the IPv4 address range to use when creating a new mount target
        /// </summary>
        public readonly string? Netmask;
        /// <summary>
        /// The SMB server's Fully Qualified Domain Name, FQDN
        /// </summary>
        public readonly string? SmbServerFqdn;
        /// <summary>
        /// The start of IPv4 address range to use when creating a new mount target
        /// </summary>
        public readonly string? StartIp;
        /// <summary>
        /// The subnet
        /// </summary>
        public readonly string? Subnet;

        [OutputConstructor]
        private MountTargetPropertiesResponse(
            string? endIp,

            string fileSystemId,

            string? gateway,

            string ipAddress,

            string mountTargetId,

            string? netmask,

            string? smbServerFqdn,

            string? startIp,

            string? subnet)
        {
            EndIp = endIp;
            FileSystemId = fileSystemId;
            Gateway = gateway;
            IpAddress = ipAddress;
            MountTargetId = mountTargetId;
            Netmask = netmask;
            SmbServerFqdn = smbServerFqdn;
            StartIp = startIp;
            Subnet = subnet;
        }
    }
}
