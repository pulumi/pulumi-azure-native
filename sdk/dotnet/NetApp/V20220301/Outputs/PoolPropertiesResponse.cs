// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20220301.Outputs
{

    /// <summary>
    /// Pool properties
    /// </summary>
    [OutputType]
    public sealed class PoolPropertiesResponse
    {
        /// <summary>
        /// If enabled (true) the pool can contain cool Access enabled volumes.
        /// </summary>
        public readonly bool? CoolAccess;
        /// <summary>
        /// Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.
        /// </summary>
        public readonly string? EncryptionType;
        /// <summary>
        /// UUID v4 used to identify the Pool
        /// </summary>
        public readonly string PoolId;
        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The qos type of the pool
        /// </summary>
        public readonly string? QosType;
        /// <summary>
        /// The service level of the file system
        /// </summary>
        public readonly string ServiceLevel;
        /// <summary>
        /// Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104).
        /// </summary>
        public readonly double Size;
        /// <summary>
        /// Total throughput of pool in MiB/s
        /// </summary>
        public readonly double TotalThroughputMibps;
        /// <summary>
        /// Utilized throughput of pool in MiB/s
        /// </summary>
        public readonly double UtilizedThroughputMibps;

        [OutputConstructor]
        private PoolPropertiesResponse(
            bool? coolAccess,

            string? encryptionType,

            string poolId,

            string provisioningState,

            string? qosType,

            string serviceLevel,

            double size,

            double totalThroughputMibps,

            double utilizedThroughputMibps)
        {
            CoolAccess = coolAccess;
            EncryptionType = encryptionType;
            PoolId = poolId;
            ProvisioningState = provisioningState;
            QosType = qosType;
            ServiceLevel = serviceLevel;
            Size = size;
            TotalThroughputMibps = totalThroughputMibps;
            UtilizedThroughputMibps = utilizedThroughputMibps;
        }
    }
}
