// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20220101
{
    public static class GetCapacityPoolSubvolume
    {
        /// <summary>
        /// Returns the path associated with the subvolumeName provided
        /// </summary>
        public static Task<GetCapacityPoolSubvolumeResult> InvokeAsync(GetCapacityPoolSubvolumeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCapacityPoolSubvolumeResult>("azure-native:netapp/v20220101:getCapacityPoolSubvolume", args ?? new GetCapacityPoolSubvolumeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the path associated with the subvolumeName provided
        /// </summary>
        public static Output<GetCapacityPoolSubvolumeResult> Invoke(GetCapacityPoolSubvolumeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityPoolSubvolumeResult>("azure-native:netapp/v20220101:getCapacityPoolSubvolume", args ?? new GetCapacityPoolSubvolumeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the path associated with the subvolumeName provided
        /// </summary>
        public static Output<GetCapacityPoolSubvolumeResult> Invoke(GetCapacityPoolSubvolumeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityPoolSubvolumeResult>("azure-native:netapp/v20220101:getCapacityPoolSubvolume", args ?? new GetCapacityPoolSubvolumeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapacityPoolSubvolumeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the subvolume.
        /// </summary>
        [Input("subvolumeName", required: true)]
        public string SubvolumeName { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public string VolumeName { get; set; } = null!;

        public GetCapacityPoolSubvolumeArgs()
        {
        }
        public static new GetCapacityPoolSubvolumeArgs Empty => new GetCapacityPoolSubvolumeArgs();
    }

    public sealed class GetCapacityPoolSubvolumeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the capacity pool
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the subvolume.
        /// </summary>
        [Input("subvolumeName", required: true)]
        public Input<string> SubvolumeName { get; set; } = null!;

        /// <summary>
        /// The name of the volume
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        public GetCapacityPoolSubvolumeInvokeArgs()
        {
        }
        public static new GetCapacityPoolSubvolumeInvokeArgs Empty => new GetCapacityPoolSubvolumeInvokeArgs();
    }


    [OutputType]
    public sealed class GetCapacityPoolSubvolumeResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// parent path to the subvolume
        /// </summary>
        public readonly string? ParentPath;
        /// <summary>
        /// Path to the subvolume
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCapacityPoolSubvolumeResult(
            string id,

            string name,

            string? parentPath,

            string? path,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ParentPath = parentPath;
            Path = path;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
