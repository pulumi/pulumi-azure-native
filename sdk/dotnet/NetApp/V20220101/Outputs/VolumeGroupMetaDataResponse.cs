// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20220101.Outputs
{

    /// <summary>
    /// Volume group properties
    /// </summary>
    [OutputType]
    public sealed class VolumeGroupMetaDataResponse
    {
        /// <summary>
        /// Application specific identifier
        /// </summary>
        public readonly string? ApplicationIdentifier;
        /// <summary>
        /// Application Type
        /// </summary>
        public readonly string? ApplicationType;
        /// <summary>
        /// Application specific identifier of deployment rules for the volume group
        /// </summary>
        public readonly string? DeploymentSpecId;
        /// <summary>
        /// Application specific placement rules for the volume group
        /// </summary>
        public readonly ImmutableArray<Outputs.PlacementKeyValuePairsResponse> GlobalPlacementRules;
        /// <summary>
        /// Group Description
        /// </summary>
        public readonly string? GroupDescription;
        /// <summary>
        /// Number of volumes in volume group
        /// </summary>
        public readonly double VolumesCount;

        [OutputConstructor]
        private VolumeGroupMetaDataResponse(
            string? applicationIdentifier,

            string? applicationType,

            string? deploymentSpecId,

            ImmutableArray<Outputs.PlacementKeyValuePairsResponse> globalPlacementRules,

            string? groupDescription,

            double volumesCount)
        {
            ApplicationIdentifier = applicationIdentifier;
            ApplicationType = applicationType;
            DeploymentSpecId = deploymentSpecId;
            GlobalPlacementRules = globalPlacementRules;
            GroupDescription = groupDescription;
            VolumesCount = volumesCount;
        }
    }
}
