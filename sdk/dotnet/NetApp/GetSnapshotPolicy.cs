// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp
{
    public static class GetSnapshotPolicy
    {
        /// <summary>
        /// Get a snapshot Policy
        /// API Version: 2020-12-01.
        /// </summary>
        public static Task<GetSnapshotPolicyResult> InvokeAsync(GetSnapshotPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotPolicyResult>("azure-native:netapp:getSnapshotPolicy", args ?? new GetSnapshotPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Get a snapshot Policy
        /// API Version: 2020-12-01.
        /// </summary>
        public static Output<GetSnapshotPolicyResult> Invoke(GetSnapshotPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotPolicyResult>("azure-native:netapp:getSnapshotPolicy", args ?? new GetSnapshotPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the snapshot policy
        /// </summary>
        [Input("snapshotPolicyName", required: true)]
        public string SnapshotPolicyName { get; set; } = null!;

        public GetSnapshotPolicyArgs()
        {
        }
        public static new GetSnapshotPolicyArgs Empty => new GetSnapshotPolicyArgs();
    }

    public sealed class GetSnapshotPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the snapshot policy
        /// </summary>
        [Input("snapshotPolicyName", required: true)]
        public Input<string> SnapshotPolicyName { get; set; } = null!;

        public GetSnapshotPolicyInvokeArgs()
        {
        }
        public static new GetSnapshotPolicyInvokeArgs Empty => new GetSnapshotPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotPolicyResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Snapshot policy Properties
        /// </summary>
        public readonly Outputs.SnapshotPolicyPropertiesResponse Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSnapshotPolicyResult(
            string id,

            string location,

            string name,

            Outputs.SnapshotPolicyPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
