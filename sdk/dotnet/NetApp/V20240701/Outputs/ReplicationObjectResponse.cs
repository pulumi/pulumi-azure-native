// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20240701.Outputs
{

    /// <summary>
    /// Replication properties
    /// </summary>
    [OutputType]
    public sealed class ReplicationObjectResponse
    {
        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        public readonly string? EndpointType;
        /// <summary>
        /// The full path to a volume that is to be migrated into ANF. Required for Migration volumes
        /// </summary>
        public readonly Outputs.RemotePathResponse? RemotePath;
        /// <summary>
        /// The remote region for the other end of the Volume Replication.
        /// </summary>
        public readonly string? RemoteVolumeRegion;
        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        public readonly string? RemoteVolumeResourceId;
        /// <summary>
        /// Id
        /// </summary>
        public readonly string ReplicationId;
        /// <summary>
        /// Schedule
        /// </summary>
        public readonly string? ReplicationSchedule;

        [OutputConstructor]
        private ReplicationObjectResponse(
            string? endpointType,

            Outputs.RemotePathResponse? remotePath,

            string? remoteVolumeRegion,

            string? remoteVolumeResourceId,

            string replicationId,

            string? replicationSchedule)
        {
            EndpointType = endpointType;
            RemotePath = remotePath;
            RemoteVolumeRegion = remoteVolumeRegion;
            RemoteVolumeResourceId = remoteVolumeResourceId;
            ReplicationId = replicationId;
            ReplicationSchedule = replicationSchedule;
        }
    }
}
