// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.NetApp.Preview
{
    public static class GetsnapshotPolicy
    {
        public static Task<GetsnapshotPolicyResult> InvokeAsync(GetsnapshotPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetsnapshotPolicyResult>("azurerm:netapp/preview:getsnapshotPolicy", args ?? new GetsnapshotPolicyArgs(), options.WithVersion());
    }


    public sealed class GetsnapshotPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the snapshot policy target
        /// </summary>
        [Input("snapshotPolicyName", required: true)]
        public string SnapshotPolicyName { get; set; } = null!;

        public GetsnapshotPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetsnapshotPolicyResult
    {
        /// <summary>
        /// Schedule for daily snapshots
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DailySchedule;
        /// <summary>
        /// The property to decide policy is enabled or not
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Schedule for hourly snapshots
        /// </summary>
        public readonly ImmutableDictionary<string, object>? HourlySchedule;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Schedule for monthly snapshots
        /// </summary>
        public readonly ImmutableDictionary<string, object>? MonthlySchedule;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Schedule for weekly snapshots
        /// </summary>
        public readonly ImmutableDictionary<string, object>? WeeklySchedule;

        [OutputConstructor]
        private GetsnapshotPolicyResult(
            ImmutableDictionary<string, object>? dailySchedule,

            bool? enabled,

            ImmutableDictionary<string, object>? hourlySchedule,

            string location,

            ImmutableDictionary<string, object>? monthlySchedule,

            string name,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableDictionary<string, object>? weeklySchedule)
        {
            DailySchedule = dailySchedule;
            Enabled = enabled;
            HourlySchedule = hourlySchedule;
            Location = location;
            MonthlySchedule = monthlySchedule;
            Name = name;
            Tags = tags;
            Type = type;
            WeeklySchedule = weeklySchedule;
        }
    }
}
