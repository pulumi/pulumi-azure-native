// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20220501
{
    /// <summary>
    /// Volume group resource for create
    /// </summary>
    [AzureNativeResourceType("azure-native:netapp/v20220501:VolumeGroup")]
    public partial class VolumeGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Volume group details
        /// </summary>
        [Output("groupMetaData")]
        public Output<Outputs.VolumeGroupMetaDataResponse?> GroupMetaData { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// List of volumes from group
        /// </summary>
        [Output("volumes")]
        public Output<ImmutableArray<Outputs.VolumeGroupVolumePropertiesResponse>> Volumes { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeGroup(string name, VolumeGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20220501:VolumeGroup", name, args ?? new VolumeGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:netapp/v20220501:VolumeGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:netapp:VolumeGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20210801:VolumeGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20211001:VolumeGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220101:VolumeGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220301:VolumeGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:netapp/v20220901:VolumeGroup"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VolumeGroup(name, id, options);
        }
    }

    public sealed class VolumeGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the NetApp account
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Volume group details
        /// </summary>
        [Input("groupMetaData")]
        public Input<Inputs.VolumeGroupMetaDataArgs>? GroupMetaData { get; set; }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the volumeGroup
        /// </summary>
        [Input("volumeGroupName")]
        public Input<string>? VolumeGroupName { get; set; }

        [Input("volumes")]
        private InputList<Inputs.VolumeGroupVolumePropertiesArgs>? _volumes;

        /// <summary>
        /// List of volumes from group
        /// </summary>
        public InputList<Inputs.VolumeGroupVolumePropertiesArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.VolumeGroupVolumePropertiesArgs>());
            set => _volumes = value;
        }

        public VolumeGroupArgs()
        {
        }
        public static new VolumeGroupArgs Empty => new VolumeGroupArgs();
    }
}
