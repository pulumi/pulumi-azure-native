// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetApp.V20220901.Outputs
{

    /// <summary>
    /// Backup properties
    /// </summary>
    [OutputType]
    public sealed class BackupPropertiesResponse
    {
        /// <summary>
        /// UUID v4 used to identify the Backup
        /// </summary>
        public readonly string BackupId;
        /// <summary>
        /// Type of backup Manual or Scheduled
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// The creation date of the backup
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// Failure reason
        /// </summary>
        public readonly string FailureReason;
        /// <summary>
        /// Label for backup
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Size of backup
        /// </summary>
        public readonly double Size;
        /// <summary>
        /// Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups
        /// </summary>
        public readonly bool? UseExistingSnapshot;
        /// <summary>
        /// Volume name
        /// </summary>
        public readonly string VolumeName;

        [OutputConstructor]
        private BackupPropertiesResponse(
            string backupId,

            string backupType,

            string creationDate,

            string failureReason,

            string? label,

            string provisioningState,

            double size,

            bool? useExistingSnapshot,

            string volumeName)
        {
            BackupId = backupId;
            BackupType = backupType;
            CreationDate = creationDate;
            FailureReason = failureReason;
            Label = label;
            ProvisioningState = provisioningState;
            Size = size;
            UseExistingSnapshot = useExistingSnapshot;
            VolumeName = volumeName;
        }
    }
}
