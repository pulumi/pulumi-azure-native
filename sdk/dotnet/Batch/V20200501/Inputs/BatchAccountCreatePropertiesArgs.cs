// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Batch.V20200501.Inputs
{

    /// <summary>
    /// The properties of a Batch account.
    /// </summary>
    public sealed class BatchAccountCreatePropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The properties related to the auto-storage account.
        /// </summary>
        [Input("autoStorage")]
        public Input<Inputs.AutoStorageBasePropertiesArgs>? AutoStorage { get; set; }

        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionPropertiesArgs>? Encryption { get; set; }

        /// <summary>
        /// A reference to the Azure key vault associated with the Batch account.
        /// </summary>
        [Input("keyVaultReference")]
        public Input<Inputs.KeyVaultReferenceArgs>? KeyVaultReference { get; set; }

        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
        /// </summary>
        [Input("poolAllocationMode")]
        public Input<string>? PoolAllocationMode { get; set; }

        /// <summary>
        /// If not specified, the default value is 'enabled'.
        /// </summary>
        [Input("publicNetworkAccess")]
        public Input<string>? PublicNetworkAccess { get; set; }

        public BatchAccountCreatePropertiesArgs()
        {
        }
    }
}
