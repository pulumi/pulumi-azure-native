// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Batch.V20240701.Inputs
{

    /// <summary>
    /// The configuration parameters used for performing automatic OS upgrade.
    /// </summary>
    public sealed class AutomaticOSUpgradePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether OS image rollback feature should be disabled.
        /// </summary>
        [Input("disableAutomaticRollback")]
        public Input<bool>? DisableAutomaticRollback { get; set; }

        /// <summary>
        /// Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. &lt;br /&gt;&lt;br /&gt; If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/en-us/rest/api/batchmanagement/pool/create?tabs=HTTP#windowsconfiguration) cannot be set to true.
        /// </summary>
        [Input("enableAutomaticOSUpgrade")]
        public Input<bool>? EnableAutomaticOSUpgrade { get; set; }

        /// <summary>
        /// Defer OS upgrades on the TVMs if they are running tasks.
        /// </summary>
        [Input("osRollingUpgradeDeferral")]
        public Input<bool>? OsRollingUpgradeDeferral { get; set; }

        /// <summary>
        /// Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
        /// </summary>
        [Input("useRollingUpgradePolicy")]
        public Input<bool>? UseRollingUpgradePolicy { get; set; }

        public AutomaticOSUpgradePolicyArgs()
        {
        }
        public static new AutomaticOSUpgradePolicyArgs Empty => new AutomaticOSUpgradePolicyArgs();
    }
}
