// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CertificateRegistration.V20150801
{
    /// <summary>
    /// Key Vault container ARM resource for a certificate that is purchased through Azure.
    /// </summary>
    public partial class AppServiceCertificateOrderCertificate : Pulumi.CustomResource
    {
        /// <summary>
        /// Key Vault resource Id.
        /// </summary>
        [Output("keyVaultId")]
        public Output<string?> KeyVaultId { get; private set; } = null!;

        /// <summary>
        /// Key Vault secret name.
        /// </summary>
        [Output("keyVaultSecretName")]
        public Output<string?> KeyVaultSecretName { get; private set; } = null!;

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Status of the Key Vault secret.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AppServiceCertificateOrderCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppServiceCertificateOrderCertificate(string name, AppServiceCertificateOrderCertificateArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:certificateregistration/v20150801:AppServiceCertificateOrderCertificate", name, args ?? new AppServiceCertificateOrderCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppServiceCertificateOrderCertificate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:certificateregistration/v20150801:AppServiceCertificateOrderCertificate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:certificateregistration/latest:AppServiceCertificateOrderCertificate"},
                    new Pulumi.Alias { Type = "azure-nextgen:certificateregistration/v20180201:AppServiceCertificateOrderCertificate"},
                    new Pulumi.Alias { Type = "azure-nextgen:certificateregistration/v20190801:AppServiceCertificateOrderCertificate"},
                    new Pulumi.Alias { Type = "azure-nextgen:certificateregistration/v20200601:AppServiceCertificateOrderCertificate"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppServiceCertificateOrderCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppServiceCertificateOrderCertificate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AppServiceCertificateOrderCertificate(name, id, options);
        }
    }

    public sealed class AppServiceCertificateOrderCertificateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the certificate order.
        /// </summary>
        [Input("certificateOrderName", required: true)]
        public Input<string> CertificateOrderName { get; set; } = null!;

        /// <summary>
        /// Key Vault resource Id.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Key Vault secret name.
        /// </summary>
        [Input("keyVaultSecretName")]
        public Input<string>? KeyVaultSecretName { get; set; }

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Name of the certificate.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AppServiceCertificateOrderCertificateArgs()
        {
        }
    }
}
