// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CertificateRegistration.V20150801.Inputs
{

    public sealed class CertificateOrderPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto renew
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        [Input("certificates")]
        private InputMap<string>? _certificates;

        /// <summary>
        /// State of the Key Vault secret
        /// </summary>
        public InputMap<string> Certificates
        {
            get => _certificates ?? (_certificates = new InputMap<string>());
            set => _certificates = value;
        }

        /// <summary>
        /// Last CSR that was created for this order
        /// </summary>
        [Input("csr")]
        public Input<string>? Csr { get; set; }

        /// <summary>
        /// Certificate distinguished name
        /// </summary>
        [Input("distinguishedName")]
        public Input<string>? DistinguishedName { get; set; }

        /// <summary>
        /// Domain Verification Token
        /// </summary>
        [Input("domainVerificationToken")]
        public Input<string>? DomainVerificationToken { get; set; }

        /// <summary>
        /// Certificate expiration time
        /// </summary>
        [Input("expirationTime")]
        public Input<string>? ExpirationTime { get; set; }

        /// <summary>
        /// Intermediate certificate
        /// </summary>
        [Input("intermediate")]
        public Input<Inputs.CertificateDetailsArgs>? Intermediate { get; set; }

        /// <summary>
        /// Certificate Key Size
        /// </summary>
        [Input("keySize")]
        public Input<int>? KeySize { get; set; }

        /// <summary>
        /// Certificate last issuance time
        /// </summary>
        [Input("lastCertificateIssuanceTime")]
        public Input<string>? LastCertificateIssuanceTime { get; set; }

        /// <summary>
        /// Certificate product type
        /// </summary>
        [Input("productType")]
        public Input<string>? ProductType { get; set; }

        /// <summary>
        /// Status of certificate order
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// Root certificate
        /// </summary>
        [Input("root")]
        public Input<Inputs.CertificateDetailsArgs>? Root { get; set; }

        /// <summary>
        /// Current serial number of the certificate
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// Signed certificate
        /// </summary>
        [Input("signedCertificate")]
        public Input<Inputs.CertificateDetailsArgs>? SignedCertificate { get; set; }

        /// <summary>
        /// Current order status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Duration in years (must be between 1 and 3)
        /// </summary>
        [Input("validityInYears")]
        public Input<int>? ValidityInYears { get; set; }

        public CertificateOrderPropertiesArgs()
        {
        }
    }
}
