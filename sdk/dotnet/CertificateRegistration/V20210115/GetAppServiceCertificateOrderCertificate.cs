// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CertificateRegistration.V20210115
{
    public static class GetAppServiceCertificateOrderCertificate
    {
        /// <summary>
        /// Get the certificate associated with a certificate order.
        /// </summary>
        public static Task<GetAppServiceCertificateOrderCertificateResult> InvokeAsync(GetAppServiceCertificateOrderCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppServiceCertificateOrderCertificateResult>("azure-native:certificateregistration/v20210115:getAppServiceCertificateOrderCertificate", args ?? new GetAppServiceCertificateOrderCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Get the certificate associated with a certificate order.
        /// </summary>
        public static Output<GetAppServiceCertificateOrderCertificateResult> Invoke(GetAppServiceCertificateOrderCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppServiceCertificateOrderCertificateResult>("azure-native:certificateregistration/v20210115:getAppServiceCertificateOrderCertificate", args ?? new GetAppServiceCertificateOrderCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppServiceCertificateOrderCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the certificate order.
        /// </summary>
        [Input("certificateOrderName", required: true)]
        public string CertificateOrderName { get; set; } = null!;

        /// <summary>
        /// Name of the certificate.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAppServiceCertificateOrderCertificateArgs()
        {
        }
        public static new GetAppServiceCertificateOrderCertificateArgs Empty => new GetAppServiceCertificateOrderCertificateArgs();
    }

    public sealed class GetAppServiceCertificateOrderCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the certificate order.
        /// </summary>
        [Input("certificateOrderName", required: true)]
        public Input<string> CertificateOrderName { get; set; } = null!;

        /// <summary>
        /// Name of the certificate.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAppServiceCertificateOrderCertificateInvokeArgs()
        {
        }
        public static new GetAppServiceCertificateOrderCertificateInvokeArgs Empty => new GetAppServiceCertificateOrderCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppServiceCertificateOrderCertificateResult
    {
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key Vault resource Id.
        /// </summary>
        public readonly string? KeyVaultId;
        /// <summary>
        /// Key Vault secret name.
        /// </summary>
        public readonly string? KeyVaultSecretName;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status of the Key Vault secret.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAppServiceCertificateOrderCertificateResult(
            string id,

            string? keyVaultId,

            string? keyVaultSecretName,

            string? kind,

            string location,

            string name,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            KeyVaultId = keyVaultId;
            KeyVaultSecretName = keyVaultSecretName;
            Kind = kind;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
        }
    }
}
