// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridData
{
    public static class GetDataStore
    {
        /// <summary>
        /// This method gets the data store/repository by name.
        /// API Version: 2019-06-01.
        /// </summary>
        public static Task<GetDataStoreResult> InvokeAsync(GetDataStoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataStoreResult>("azure-native:hybriddata:getDataStore", args ?? new GetDataStoreArgs(), options.WithDefaults());

        /// <summary>
        /// This method gets the data store/repository by name.
        /// API Version: 2019-06-01.
        /// </summary>
        public static Output<GetDataStoreResult> Invoke(GetDataStoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataStoreResult>("azure-native:hybriddata:getDataStore", args ?? new GetDataStoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataStoreArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
        /// </summary>
        [Input("dataManagerName", required: true)]
        public string DataManagerName { get; set; } = null!;

        /// <summary>
        /// The data store/repository name queried.
        /// </summary>
        [Input("dataStoreName", required: true)]
        public string DataStoreName { get; set; } = null!;

        /// <summary>
        /// The Resource Group Name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDataStoreArgs()
        {
        }
        public static new GetDataStoreArgs Empty => new GetDataStoreArgs();
    }

    public sealed class GetDataStoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
        /// </summary>
        [Input("dataManagerName", required: true)]
        public Input<string> DataManagerName { get; set; } = null!;

        /// <summary>
        /// The data store/repository name queried.
        /// </summary>
        [Input("dataStoreName", required: true)]
        public Input<string> DataStoreName { get; set; } = null!;

        /// <summary>
        /// The Resource Group Name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDataStoreInvokeArgs()
        {
        }
        public static new GetDataStoreInvokeArgs Empty => new GetDataStoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataStoreResult
    {
        /// <summary>
        /// Id of the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// DataStore properties.
        /// </summary>
        public readonly Outputs.DataStorePropertiesResponse Properties;
        /// <summary>
        /// Type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDataStoreResult(
            string id,

            string name,

            Outputs.DataStorePropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
