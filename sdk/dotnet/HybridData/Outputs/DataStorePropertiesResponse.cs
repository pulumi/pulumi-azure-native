// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.HybridData.Outputs
{

    [OutputType]
    public sealed class DataStorePropertiesResponse
    {
        /// <summary>
        /// List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomerSecretResponse> CustomerSecrets;
        /// <summary>
        /// The arm id of the data store type.
        /// </summary>
        public readonly string DataStoreTypeId;
        /// <summary>
        /// A generic json used differently by each data source type.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ExtendedProperties;
        /// <summary>
        /// Arm Id for the manager resource to which the data source is associated. This is optional.
        /// </summary>
        public readonly string? RepositoryId;
        /// <summary>
        /// State of the data source.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private DataStorePropertiesResponse(
            ImmutableArray<Outputs.CustomerSecretResponse> customerSecrets,

            string dataStoreTypeId,

            ImmutableDictionary<string, string>? extendedProperties,

            string? repositoryId,

            string state)
        {
            CustomerSecrets = customerSecrets;
            DataStoreTypeId = dataStoreTypeId;
            ExtendedProperties = extendedProperties;
            RepositoryId = repositoryId;
            State = state;
        }
    }
}
