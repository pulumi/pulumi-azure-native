// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OffAzureSpringBoot
{
    public static class GetSpringbootserver
    {
        /// <summary>
        /// List springbootservers resource.
        /// Azure REST API version: 2023-01-01-preview.
        /// </summary>
        public static Task<GetSpringbootserverResult> InvokeAsync(GetSpringbootserverArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpringbootserverResult>("azure-native:offazurespringboot:getSpringbootserver", args ?? new GetSpringbootserverArgs(), options.WithDefaults());

        /// <summary>
        /// List springbootservers resource.
        /// Azure REST API version: 2023-01-01-preview.
        /// </summary>
        public static Output<GetSpringbootserverResult> Invoke(GetSpringbootserverInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpringbootserverResult>("azure-native:offazurespringboot:getSpringbootserver", args ?? new GetSpringbootserverInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpringbootserverArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The springbootsites name.
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        /// <summary>
        /// The springbootservers name.
        /// </summary>
        [Input("springbootserversName", required: true)]
        public string SpringbootserversName { get; set; } = null!;

        public GetSpringbootserverArgs()
        {
        }
        public static new GetSpringbootserverArgs Empty => new GetSpringbootserverArgs();
    }

    public sealed class GetSpringbootserverInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The springbootsites name.
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// The springbootservers name.
        /// </summary>
        [Input("springbootserversName", required: true)]
        public Input<string> SpringbootserversName { get; set; } = null!;

        public GetSpringbootserverInvokeArgs()
        {
        }
        public static new GetSpringbootserverInvokeArgs Empty => new GetSpringbootserverInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpringbootserverResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The springbootservers resource definition.
        /// </summary>
        public readonly Outputs.SpringbootserversPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSpringbootserverResult(
            string id,

            string name,

            Outputs.SpringbootserversPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
