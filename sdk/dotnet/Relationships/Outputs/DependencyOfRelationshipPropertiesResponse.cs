// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Relationships.Outputs
{

    /// <summary>
    /// dependencyOf relationship properties.
    /// </summary>
    [OutputType]
    public sealed class DependencyOfRelationshipPropertiesResponse
    {
        /// <summary>
        /// Metadata about the relationship.
        /// </summary>
        public readonly Outputs.RelationshipMetadataResponse Metadata;
        /// <summary>
        /// Information about the origin of the relationship.
        /// </summary>
        public readonly Outputs.RelationshipOriginInformationResponse OriginInformation;
        /// <summary>
        /// The provisioning state of the relationship.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The relationship source resource id.
        /// </summary>
        public readonly string SourceId;
        /// <summary>
        /// The relationship target resource id.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The relationship target tenant id.
        /// </summary>
        public readonly string? TargetTenant;

        [OutputConstructor]
        private DependencyOfRelationshipPropertiesResponse(
            Outputs.RelationshipMetadataResponse metadata,

            Outputs.RelationshipOriginInformationResponse originInformation,

            string provisioningState,

            string sourceId,

            string targetId,

            string? targetTenant)
        {
            Metadata = metadata;
            OriginInformation = originInformation;
            ProvisioningState = provisioningState;
            SourceId = sourceId;
            TargetId = targetId;
            TargetTenant = targetTenant;
        }
    }
}
