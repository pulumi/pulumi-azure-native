// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.PolicyInsights.V20211001
{
    public static class ListRemediationDeploymentsAtManagementGroup
    {
        /// <summary>
        /// List of deployments for a remediation.
        /// </summary>
        public static Task<ListRemediationDeploymentsAtManagementGroupResult> InvokeAsync(ListRemediationDeploymentsAtManagementGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListRemediationDeploymentsAtManagementGroupResult>("azure-native:policyinsights/v20211001:listRemediationDeploymentsAtManagementGroup", args ?? new ListRemediationDeploymentsAtManagementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// List of deployments for a remediation.
        /// </summary>
        public static Output<ListRemediationDeploymentsAtManagementGroupResult> Invoke(ListRemediationDeploymentsAtManagementGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListRemediationDeploymentsAtManagementGroupResult>("azure-native:policyinsights/v20211001:listRemediationDeploymentsAtManagementGroup", args ?? new ListRemediationDeploymentsAtManagementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListRemediationDeploymentsAtManagementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Management group ID.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public string ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
        /// </summary>
        [Input("managementGroupsNamespace", required: true)]
        public string ManagementGroupsNamespace { get; set; } = null!;

        /// <summary>
        /// The name of the remediation.
        /// </summary>
        [Input("remediationName", required: true)]
        public string RemediationName { get; set; } = null!;

        /// <summary>
        /// Maximum number of records to return.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListRemediationDeploymentsAtManagementGroupArgs()
        {
        }
        public static new ListRemediationDeploymentsAtManagementGroupArgs Empty => new ListRemediationDeploymentsAtManagementGroupArgs();
    }

    public sealed class ListRemediationDeploymentsAtManagementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Management group ID.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
        /// </summary>
        [Input("managementGroupsNamespace", required: true)]
        public Input<string> ManagementGroupsNamespace { get; set; } = null!;

        /// <summary>
        /// The name of the remediation.
        /// </summary>
        [Input("remediationName", required: true)]
        public Input<string> RemediationName { get; set; } = null!;

        /// <summary>
        /// Maximum number of records to return.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        public ListRemediationDeploymentsAtManagementGroupInvokeArgs()
        {
        }
        public static new ListRemediationDeploymentsAtManagementGroupInvokeArgs Empty => new ListRemediationDeploymentsAtManagementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class ListRemediationDeploymentsAtManagementGroupResult
    {
        /// <summary>
        /// The URL to get the next set of results.
        /// </summary>
        public readonly string NextLink;
        /// <summary>
        /// Array of deployments for the remediation.
        /// </summary>
        public readonly ImmutableArray<Outputs.RemediationDeploymentResponse> Value;

        [OutputConstructor]
        private ListRemediationDeploymentsAtManagementGroupResult(
            string nextLink,

            ImmutableArray<Outputs.RemediationDeploymentResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
