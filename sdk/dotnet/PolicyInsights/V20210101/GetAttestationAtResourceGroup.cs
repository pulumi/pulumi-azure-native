// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.PolicyInsights.V20210101
{
    public static class GetAttestationAtResourceGroup
    {
        /// <summary>
        /// Gets an existing attestation at resource group scope.
        /// </summary>
        public static Task<GetAttestationAtResourceGroupResult> InvokeAsync(GetAttestationAtResourceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttestationAtResourceGroupResult>("azure-native:policyinsights/v20210101:getAttestationAtResourceGroup", args ?? new GetAttestationAtResourceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an existing attestation at resource group scope.
        /// </summary>
        public static Output<GetAttestationAtResourceGroupResult> Invoke(GetAttestationAtResourceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttestationAtResourceGroupResult>("azure-native:policyinsights/v20210101:getAttestationAtResourceGroup", args ?? new GetAttestationAtResourceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttestationAtResourceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the attestation.
        /// </summary>
        [Input("attestationName", required: true)]
        public string AttestationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAttestationAtResourceGroupArgs()
        {
        }
        public static new GetAttestationAtResourceGroupArgs Empty => new GetAttestationAtResourceGroupArgs();
    }

    public sealed class GetAttestationAtResourceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the attestation.
        /// </summary>
        [Input("attestationName", required: true)]
        public Input<string> AttestationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAttestationAtResourceGroupInvokeArgs()
        {
        }
        public static new GetAttestationAtResourceGroupInvokeArgs Empty => new GetAttestationAtResourceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttestationAtResourceGroupResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties for the attestation.
        /// </summary>
        public readonly Outputs.AttestationPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAttestationAtResourceGroupResult(
            string id,

            string name,

            Outputs.AttestationPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
