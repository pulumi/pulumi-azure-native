// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.PolicyInsights.V20210101
{
    /// <summary>
    /// An attestation resource.
    /// </summary>
    [AzureNextGenResourceType("azure-nextgen:policyinsights/v20210101:AttestationAtResourceGroup")]
    public partial class AttestationAtResourceGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// Comments describing why this attestation was created.
        /// </summary>
        [Output("comments")]
        public Output<string?> Comments { get; private set; } = null!;

        /// <summary>
        /// The compliance state that should be set on the resource.
        /// </summary>
        [Output("complianceState")]
        public Output<string?> ComplianceState { get; private set; } = null!;

        /// <summary>
        /// The evidence supporting the compliance state set in this attestation.
        /// </summary>
        [Output("evidence")]
        public Output<ImmutableArray<Outputs.AttestationEvidenceResponse>> Evidence { get; private set; } = null!;

        /// <summary>
        /// The time the compliance state should expire.
        /// </summary>
        [Output("expiresOn")]
        public Output<string?> ExpiresOn { get; private set; } = null!;

        /// <summary>
        /// The time the compliance state was last changed in this attestation.
        /// </summary>
        [Output("lastComplianceStateChangeAt")]
        public Output<string> LastComplianceStateChangeAt { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
        /// </summary>
        [Output("owner")]
        public Output<string?> Owner { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the policy assignment that the attestation is setting the state for.
        /// </summary>
        [Output("policyAssignmentId")]
        public Output<string> PolicyAssignmentId { get; private set; } = null!;

        /// <summary>
        /// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
        /// </summary>
        [Output("policyDefinitionReferenceId")]
        public Output<string?> PolicyDefinitionReferenceId { get; private set; } = null!;

        /// <summary>
        /// The status of the attestation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AttestationAtResourceGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttestationAtResourceGroup(string name, AttestationAtResourceGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:policyinsights/v20210101:AttestationAtResourceGroup", name, args ?? new AttestationAtResourceGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttestationAtResourceGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:policyinsights/v20210101:AttestationAtResourceGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttestationAtResourceGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttestationAtResourceGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AttestationAtResourceGroup(name, id, options);
        }
    }

    public sealed class AttestationAtResourceGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the attestation.
        /// </summary>
        [Input("attestationName")]
        public Input<string>? AttestationName { get; set; }

        /// <summary>
        /// Comments describing why this attestation was created.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// The compliance state that should be set on the resource.
        /// </summary>
        [Input("complianceState")]
        public InputUnion<string, Pulumi.AzureNextGen.PolicyInsights.V20210101.ComplianceState>? ComplianceState { get; set; }

        [Input("evidence")]
        private InputList<Inputs.AttestationEvidenceArgs>? _evidence;

        /// <summary>
        /// The evidence supporting the compliance state set in this attestation.
        /// </summary>
        public InputList<Inputs.AttestationEvidenceArgs> Evidence
        {
            get => _evidence ?? (_evidence = new InputList<Inputs.AttestationEvidenceArgs>());
            set => _evidence = value;
        }

        /// <summary>
        /// The time the compliance state should expire.
        /// </summary>
        [Input("expiresOn")]
        public Input<string>? ExpiresOn { get; set; }

        /// <summary>
        /// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// The resource ID of the policy assignment that the attestation is setting the state for.
        /// </summary>
        [Input("policyAssignmentId", required: true)]
        public Input<string> PolicyAssignmentId { get; set; } = null!;

        /// <summary>
        /// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
        /// </summary>
        [Input("policyDefinitionReferenceId")]
        public Input<string>? PolicyDefinitionReferenceId { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public AttestationAtResourceGroupArgs()
        {
        }
    }
}
