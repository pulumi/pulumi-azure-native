// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.PolicyInsights.V20241001
{
    public static class ListRemediationDeploymentsAtResourceGroup
    {
        /// <summary>
        /// Gets all deployments for a remediation at resource group scope.
        /// </summary>
        public static Task<ListRemediationDeploymentsAtResourceGroupResult> InvokeAsync(ListRemediationDeploymentsAtResourceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListRemediationDeploymentsAtResourceGroupResult>("azure-native:policyinsights/v20241001:listRemediationDeploymentsAtResourceGroup", args ?? new ListRemediationDeploymentsAtResourceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets all deployments for a remediation at resource group scope.
        /// </summary>
        public static Output<ListRemediationDeploymentsAtResourceGroupResult> Invoke(ListRemediationDeploymentsAtResourceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListRemediationDeploymentsAtResourceGroupResult>("azure-native:policyinsights/v20241001:listRemediationDeploymentsAtResourceGroup", args ?? new ListRemediationDeploymentsAtResourceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListRemediationDeploymentsAtResourceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the remediation.
        /// </summary>
        [Input("remediationName", required: true)]
        public string RemediationName { get; set; } = null!;

        /// <summary>
        /// Resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Maximum number of records to return.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListRemediationDeploymentsAtResourceGroupArgs()
        {
        }
        public static new ListRemediationDeploymentsAtResourceGroupArgs Empty => new ListRemediationDeploymentsAtResourceGroupArgs();
    }

    public sealed class ListRemediationDeploymentsAtResourceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the remediation.
        /// </summary>
        [Input("remediationName", required: true)]
        public Input<string> RemediationName { get; set; } = null!;

        /// <summary>
        /// Resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Maximum number of records to return.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        public ListRemediationDeploymentsAtResourceGroupInvokeArgs()
        {
        }
        public static new ListRemediationDeploymentsAtResourceGroupInvokeArgs Empty => new ListRemediationDeploymentsAtResourceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class ListRemediationDeploymentsAtResourceGroupResult
    {
        /// <summary>
        /// The URL to get the next set of results.
        /// </summary>
        public readonly string NextLink;
        /// <summary>
        /// Array of deployments for the remediation.
        /// </summary>
        public readonly ImmutableArray<Outputs.RemediationDeploymentResponse> Value;

        [OutputConstructor]
        private ListRemediationDeploymentsAtResourceGroupResult(
            string nextLink,

            ImmutableArray<Outputs.RemediationDeploymentResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
