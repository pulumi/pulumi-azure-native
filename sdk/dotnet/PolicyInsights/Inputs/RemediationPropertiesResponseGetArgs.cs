// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.PolicyInsights.Inputs
{

    /// <summary>
    /// The remediation properties.
    /// </summary>
    public sealed class RemediationPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time at which the remediation was created.
        /// </summary>
        [Input("createdOn", required: true)]
        public Input<string> CreatedOn { get; set; } = null!;

        /// <summary>
        /// The deployment status summary for all deployments created by the remediation.
        /// </summary>
        [Input("deploymentStatus", required: true)]
        public Input<Inputs.RemediationDeploymentSummaryResponseGetArgs> DeploymentStatus { get; set; } = null!;

        /// <summary>
        /// The filters that will be applied to determine which resources to remediate.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.RemediationFiltersResponseGetArgs>? Filters { get; set; }

        /// <summary>
        /// The time at which the remediation was last updated.
        /// </summary>
        [Input("lastUpdatedOn", required: true)]
        public Input<string> LastUpdatedOn { get; set; } = null!;

        /// <summary>
        /// The resource ID of the policy assignment that should be remediated.
        /// </summary>
        [Input("policyAssignmentId")]
        public Input<string>? PolicyAssignmentId { get; set; }

        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
        /// </summary>
        [Input("policyDefinitionReferenceId")]
        public Input<string>? PolicyDefinitionReferenceId { get; set; }

        /// <summary>
        /// The status of the remediation.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        [Input("resourceDiscoveryMode")]
        public Input<string>? ResourceDiscoveryMode { get; set; }

        public RemediationPropertiesResponseGetArgs()
        {
        }
    }
}
