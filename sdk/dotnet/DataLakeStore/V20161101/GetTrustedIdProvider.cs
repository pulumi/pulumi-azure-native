// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataLakeStore.V20161101
{
    public static class GetTrustedIdProvider
    {
        public static Task<GetTrustedIdProviderResult> InvokeAsync(GetTrustedIdProviderArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTrustedIdProviderResult>("azure-nextgen:datalakestore/v20161101:getTrustedIdProvider", args ?? new GetTrustedIdProviderArgs(), options.WithVersion());
    }


    public sealed class GetTrustedIdProviderArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Data Lake Store account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the trusted identity provider to retrieve.
        /// </summary>
        [Input("trustedIdProviderName", required: true)]
        public string TrustedIdProviderName { get; set; } = null!;

        public GetTrustedIdProviderArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTrustedIdProviderResult
    {
        /// <summary>
        /// The URL of this trusted identity provider.
        /// </summary>
        public readonly string IdProvider;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTrustedIdProviderResult(
            string idProvider,

            string name,

            string type)
        {
            IdProvider = idProvider;
            Name = name;
            Type = type;
        }
    }
}
