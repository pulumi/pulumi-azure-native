// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataLakeStore.V20161101
{
    public static class GetAccount
    {
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("azure-nextgen:datalakestore/v20161101:getAccount", args ?? new GetAccountArgs(), options.WithVersion());
    }


    public sealed class GetAccountArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Data Lake Store account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccountArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The unique identifier associated with this Data Lake Store account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The account creation time.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The commitment tier in use for the current month.
        /// </summary>
        public readonly string CurrentTier;
        /// <summary>
        /// The default owner group for all new folders and files created in the Data Lake Store account.
        /// </summary>
        public readonly string DefaultGroup;
        /// <summary>
        /// The Key Vault encryption configuration.
        /// </summary>
        public readonly Outputs.EncryptionConfigResponse EncryptionConfig;
        /// <summary>
        /// The current state of encryption provisioning for this Data Lake Store account.
        /// </summary>
        public readonly string EncryptionProvisioningState;
        /// <summary>
        /// The current state of encryption for this Data Lake Store account.
        /// </summary>
        public readonly string EncryptionState;
        /// <summary>
        /// The full CName endpoint for this account.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        /// </summary>
        public readonly string FirewallAllowAzureIps;
        /// <summary>
        /// The list of firewall rules associated with this Data Lake Store account.
        /// </summary>
        public readonly ImmutableArray<Outputs.FirewallRuleResponse> FirewallRules;
        /// <summary>
        /// The current state of the IP address firewall for this Data Lake Store account.
        /// </summary>
        public readonly string FirewallState;
        /// <summary>
        /// The Key Vault encryption identity, if any.
        /// </summary>
        public readonly Outputs.EncryptionIdentityResponse Identity;
        /// <summary>
        /// The account last modified time.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The commitment tier to use for next month.
        /// </summary>
        public readonly string NewTier;
        /// <summary>
        /// The provisioning status of the Data Lake Store account.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The state of the Data Lake Store account.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The current state of the trusted identity provider feature for this Data Lake Store account.
        /// </summary>
        public readonly string TrustedIdProviderState;
        /// <summary>
        /// The list of trusted identity providers associated with this Data Lake Store account.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrustedIdProviderResponse> TrustedIdProviders;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The list of virtual network rules associated with this Data Lake Store account.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualNetworkRuleResponse> VirtualNetworkRules;

        [OutputConstructor]
        private GetAccountResult(
            string accountId,

            string creationTime,

            string currentTier,

            string defaultGroup,

            Outputs.EncryptionConfigResponse encryptionConfig,

            string encryptionProvisioningState,

            string encryptionState,

            string endpoint,

            string firewallAllowAzureIps,

            ImmutableArray<Outputs.FirewallRuleResponse> firewallRules,

            string firewallState,

            Outputs.EncryptionIdentityResponse identity,

            string lastModifiedTime,

            string location,

            string name,

            string newTier,

            string provisioningState,

            string state,

            ImmutableDictionary<string, string> tags,

            string trustedIdProviderState,

            ImmutableArray<Outputs.TrustedIdProviderResponse> trustedIdProviders,

            string type,

            ImmutableArray<Outputs.VirtualNetworkRuleResponse> virtualNetworkRules)
        {
            AccountId = accountId;
            CreationTime = creationTime;
            CurrentTier = currentTier;
            DefaultGroup = defaultGroup;
            EncryptionConfig = encryptionConfig;
            EncryptionProvisioningState = encryptionProvisioningState;
            EncryptionState = encryptionState;
            Endpoint = endpoint;
            FirewallAllowAzureIps = firewallAllowAzureIps;
            FirewallRules = firewallRules;
            FirewallState = firewallState;
            Identity = identity;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            Name = name;
            NewTier = newTier;
            ProvisioningState = provisioningState;
            State = state;
            Tags = tags;
            TrustedIdProviderState = trustedIdProviderState;
            TrustedIdProviders = trustedIdProviders;
            Type = type;
            VirtualNetworkRules = virtualNetworkRules;
        }
    }
}
