// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataLakeStore.Inputs
{

    /// <summary>
    /// Data Lake Store account properties information.
    /// </summary>
    public sealed class DataLakeStoreAccountPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier associated with this Data Lake Store account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The account creation time.
        /// </summary>
        [Input("creationTime", required: true)]
        public Input<string> CreationTime { get; set; } = null!;

        /// <summary>
        /// The commitment tier in use for the current month.
        /// </summary>
        [Input("currentTier", required: true)]
        public Input<string> CurrentTier { get; set; } = null!;

        /// <summary>
        /// The default owner group for all new folders and files created in the Data Lake Store account.
        /// </summary>
        [Input("defaultGroup", required: true)]
        public Input<string> DefaultGroup { get; set; } = null!;

        /// <summary>
        /// The Key Vault encryption configuration.
        /// </summary>
        [Input("encryptionConfig", required: true)]
        public Input<Inputs.EncryptionConfigResponseGetArgs> EncryptionConfig { get; set; } = null!;

        /// <summary>
        /// The current state of encryption provisioning for this Data Lake Store account.
        /// </summary>
        [Input("encryptionProvisioningState", required: true)]
        public Input<string> EncryptionProvisioningState { get; set; } = null!;

        /// <summary>
        /// The current state of encryption for this Data Lake Store account.
        /// </summary>
        [Input("encryptionState", required: true)]
        public Input<string> EncryptionState { get; set; } = null!;

        /// <summary>
        /// The full CName endpoint for this account.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        /// </summary>
        [Input("firewallAllowAzureIps", required: true)]
        public Input<string> FirewallAllowAzureIps { get; set; } = null!;

        [Input("firewallRules", required: true)]
        private InputList<Inputs.FirewallRuleResponseGetArgs>? _firewallRules;

        /// <summary>
        /// The list of firewall rules associated with this Data Lake Store account.
        /// </summary>
        public InputList<Inputs.FirewallRuleResponseGetArgs> FirewallRules
        {
            get => _firewallRules ?? (_firewallRules = new InputList<Inputs.FirewallRuleResponseGetArgs>());
            set => _firewallRules = value;
        }

        /// <summary>
        /// The current state of the IP address firewall for this Data Lake Store account.
        /// </summary>
        [Input("firewallState", required: true)]
        public Input<string> FirewallState { get; set; } = null!;

        /// <summary>
        /// The account last modified time.
        /// </summary>
        [Input("lastModifiedTime", required: true)]
        public Input<string> LastModifiedTime { get; set; } = null!;

        /// <summary>
        /// The commitment tier to use for next month.
        /// </summary>
        [Input("newTier", required: true)]
        public Input<string> NewTier { get; set; } = null!;

        /// <summary>
        /// The provisioning status of the Data Lake Store account.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The state of the Data Lake Store account.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The current state of the trusted identity provider feature for this Data Lake Store account.
        /// </summary>
        [Input("trustedIdProviderState", required: true)]
        public Input<string> TrustedIdProviderState { get; set; } = null!;

        [Input("trustedIdProviders", required: true)]
        private InputList<Inputs.TrustedIdProviderResponseGetArgs>? _trustedIdProviders;

        /// <summary>
        /// The list of trusted identity providers associated with this Data Lake Store account.
        /// </summary>
        public InputList<Inputs.TrustedIdProviderResponseGetArgs> TrustedIdProviders
        {
            get => _trustedIdProviders ?? (_trustedIdProviders = new InputList<Inputs.TrustedIdProviderResponseGetArgs>());
            set => _trustedIdProviders = value;
        }

        [Input("virtualNetworkRules", required: true)]
        private InputList<Inputs.VirtualNetworkRuleResponseGetArgs>? _virtualNetworkRules;

        /// <summary>
        /// The list of virtual network rules associated with this Data Lake Store account.
        /// </summary>
        public InputList<Inputs.VirtualNetworkRuleResponseGetArgs> VirtualNetworkRules
        {
            get => _virtualNetworkRules ?? (_virtualNetworkRules = new InputList<Inputs.VirtualNetworkRuleResponseGetArgs>());
            set => _virtualNetworkRules = value;
        }

        public DataLakeStoreAccountPropertiesResponseGetArgs()
        {
        }
    }
}
