// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class ListIngestionSettingConnectionStrings
    {
        /// <summary>
        /// Connection string for ingesting security data and logs
        /// API Version: 2021-01-15-preview.
        /// </summary>
        public static Task<ListIngestionSettingConnectionStringsResult> InvokeAsync(ListIngestionSettingConnectionStringsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListIngestionSettingConnectionStringsResult>("azure-native:security:listIngestionSettingConnectionStrings", args ?? new ListIngestionSettingConnectionStringsArgs(), options.WithDefaults());

        /// <summary>
        /// Connection string for ingesting security data and logs
        /// API Version: 2021-01-15-preview.
        /// </summary>
        public static Output<ListIngestionSettingConnectionStringsResult> Invoke(ListIngestionSettingConnectionStringsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListIngestionSettingConnectionStringsResult>("azure-native:security:listIngestionSettingConnectionStrings", args ?? new ListIngestionSettingConnectionStringsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListIngestionSettingConnectionStringsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the ingestion setting
        /// </summary>
        [Input("ingestionSettingName", required: true)]
        public string IngestionSettingName { get; set; } = null!;

        public ListIngestionSettingConnectionStringsArgs()
        {
        }
    }

    public sealed class ListIngestionSettingConnectionStringsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the ingestion setting
        /// </summary>
        [Input("ingestionSettingName", required: true)]
        public Input<string> IngestionSettingName { get; set; } = null!;

        public ListIngestionSettingConnectionStringsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListIngestionSettingConnectionStringsResult
    {
        /// <summary>
        /// Connection strings
        /// </summary>
        public readonly ImmutableArray<Outputs.IngestionConnectionStringResponse> Value;

        [OutputConstructor]
        private ListIngestionSettingConnectionStringsResult(ImmutableArray<Outputs.IngestionConnectionStringResponse> value)
        {
            Value = value;
        }
    }
}
