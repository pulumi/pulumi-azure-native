// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20240701Preview.Outputs
{

    /// <summary>
    /// The containers GCP offering
    /// </summary>
    [OutputType]
    public sealed class DefenderForContainersGcpOfferingResponse
    {
        /// <summary>
        /// The native cloud connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection? DataPipelineNativeCloudConnection;
        /// <summary>
        /// The offering description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Is audit logs data collection enabled
        /// </summary>
        public readonly bool? EnableAuditLogsAutoProvisioning;
        /// <summary>
        /// Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
        /// </summary>
        public readonly bool? EnableDefenderAgentAutoProvisioning;
        /// <summary>
        /// Is Policy Kubernetes agent auto provisioning enabled
        /// </summary>
        public readonly bool? EnablePolicyAgentAutoProvisioning;
        /// <summary>
        /// The Microsoft Defender Container agentless discovery configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersGcpOfferingResponseMdcContainersAgentlessDiscoveryK8s? MdcContainersAgentlessDiscoveryK8s;
        /// <summary>
        /// The Microsoft Defender Container image assessment configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersGcpOfferingResponseMdcContainersImageAssessment? MdcContainersImageAssessment;
        /// <summary>
        /// The native cloud connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersGcpOfferingResponseNativeCloudConnection? NativeCloudConnection;
        /// <summary>
        /// The type of the security offering.
        /// Expected value is 'DefenderForContainersGcp'.
        /// </summary>
        public readonly string OfferingType;
        /// <summary>
        /// The Microsoft Defender for Container K8s VM host scanning configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersGcpOfferingResponseVmScanners? VmScanners;

        [OutputConstructor]
        private DefenderForContainersGcpOfferingResponse(
            Outputs.DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection? dataPipelineNativeCloudConnection,

            string description,

            bool? enableAuditLogsAutoProvisioning,

            bool? enableDefenderAgentAutoProvisioning,

            bool? enablePolicyAgentAutoProvisioning,

            Outputs.DefenderForContainersGcpOfferingResponseMdcContainersAgentlessDiscoveryK8s? mdcContainersAgentlessDiscoveryK8s,

            Outputs.DefenderForContainersGcpOfferingResponseMdcContainersImageAssessment? mdcContainersImageAssessment,

            Outputs.DefenderForContainersGcpOfferingResponseNativeCloudConnection? nativeCloudConnection,

            string offeringType,

            Outputs.DefenderForContainersGcpOfferingResponseVmScanners? vmScanners)
        {
            DataPipelineNativeCloudConnection = dataPipelineNativeCloudConnection;
            Description = description;
            EnableAuditLogsAutoProvisioning = enableAuditLogsAutoProvisioning;
            EnableDefenderAgentAutoProvisioning = enableDefenderAgentAutoProvisioning;
            EnablePolicyAgentAutoProvisioning = enablePolicyAgentAutoProvisioning;
            MdcContainersAgentlessDiscoveryK8s = mdcContainersAgentlessDiscoveryK8s;
            MdcContainersImageAssessment = mdcContainersImageAssessment;
            NativeCloudConnection = nativeCloudConnection;
            OfferingType = offeringType;
            VmScanners = vmScanners;
        }
    }
}
