// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20231001Preview
{
    /// <summary>
    /// The security connector resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:security/v20231001preview:SecurityConnector")]
    public partial class SecurityConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The security connector environment data.
        /// </summary>
        [Output("environmentData")]
        public Output<object?> EnvironmentData { get; private set; } = null!;

        /// <summary>
        /// The multi cloud resource's cloud name.
        /// </summary>
        [Output("environmentName")]
        public Output<string?> EnvironmentName { get; private set; } = null!;

        /// <summary>
        /// Entity tag is used for comparing two or more entities from the same requested resource.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector).
        /// </summary>
        [Output("hierarchyIdentifier")]
        public Output<string?> HierarchyIdentifier { get; private set; } = null!;

        /// <summary>
        /// The date on which the trial period will end, if applicable. Trial period exists for 30 days after upgrading to payed offerings.
        /// </summary>
        [Output("hierarchyIdentifierTrialEndDate")]
        public Output<string> HierarchyIdentifierTrialEndDate { get; private set; } = null!;

        /// <summary>
        /// Kind of the resource
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Location where the resource is stored
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A collection of offerings for the security connector.
        /// </summary>
        [Output("offerings")]
        public Output<ImmutableArray<object>> Offerings { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// A list of key value pairs that describe the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityConnector(string name, SecurityConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:security/v20231001preview:SecurityConnector", name, args ?? new SecurityConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityConnector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:security/v20231001preview:SecurityConnector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:security:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20210701preview:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20211201preview:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20220501preview:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20220801preview:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20230301preview:SecurityConnector" },
                    new global::Pulumi.Alias { Type = "azure-native:security/v20240301preview:SecurityConnector" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityConnector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SecurityConnector(name, id, options);
        }
    }

    public sealed class SecurityConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The security connector environment data.
        /// </summary>
        [Input("environmentData")]
        public object? EnvironmentData { get; set; }

        /// <summary>
        /// The multi cloud resource's cloud name.
        /// </summary>
        [Input("environmentName")]
        public InputUnion<string, Pulumi.AzureNative.Security.V20231001Preview.CloudName>? EnvironmentName { get; set; }

        /// <summary>
        /// The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector).
        /// </summary>
        [Input("hierarchyIdentifier")]
        public Input<string>? HierarchyIdentifier { get; set; }

        /// <summary>
        /// Kind of the resource
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Location where the resource is stored
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("offerings")]
        private InputList<object>? _offerings;

        /// <summary>
        /// A collection of offerings for the security connector.
        /// </summary>
        public InputList<object> Offerings
        {
            get => _offerings ?? (_offerings = new InputList<object>());
            set => _offerings = value;
        }

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The security connector name.
        /// </summary>
        [Input("securityConnectorName")]
        public Input<string>? SecurityConnectorName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A list of key value pairs that describe the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SecurityConnectorArgs()
        {
        }
        public static new SecurityConnectorArgs Empty => new SecurityConnectorArgs();
    }
}
