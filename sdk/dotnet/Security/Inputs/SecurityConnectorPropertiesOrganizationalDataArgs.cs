// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.Inputs
{

    /// <summary>
    /// The multi cloud account's organizational data
    /// </summary>
    public sealed class SecurityConnectorPropertiesOrganizationalDataArgs : Pulumi.ResourceArgs
    {
        [Input("excludedAccountId")]
        private InputList<string>? _excludedAccountId;

        /// <summary>
        /// If the multi cloud account is of membership type organization, list of accounts excluded from offering
        /// </summary>
        public InputList<string> ExcludedAccountId
        {
            get => _excludedAccountId ?? (_excludedAccountId = new InputList<string>());
            set => _excludedAccountId = value;
        }

        /// <summary>
        /// The multi cloud account's membership type in the organization
        /// </summary>
        [Input("organizationMembershipType")]
        public InputUnion<string, Pulumi.AzureNative.Security.OrganizationMembershipType>? OrganizationMembershipType { get; set; }

        /// <summary>
        /// If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
        /// </summary>
        [Input("parentHierarchyId")]
        public Input<string>? ParentHierarchyId { get; set; }

        /// <summary>
        /// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
        /// </summary>
        [Input("stacksetName")]
        public Input<string>? StacksetName { get; set; }

        public SecurityConnectorPropertiesOrganizationalDataArgs()
        {
        }
    }
}
