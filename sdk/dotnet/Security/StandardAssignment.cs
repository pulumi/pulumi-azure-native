// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    /// <summary>
    /// Security Assignment on a resource group over a given scope
    /// Azure REST API version: 2024-08-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:security:StandardAssignment")]
    public partial class StandardAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Standard item with key as applied to this standard assignment over the given scope
        /// </summary>
        [Output("assignedStandard")]
        public Output<Outputs.AssignedStandardItemResponse?> AssignedStandard { get; private set; } = null!;

        /// <summary>
        /// Additional data about assignment that has Attest effect
        /// </summary>
        [Output("attestationData")]
        public Output<Outputs.StandardAssignmentPropertiesResponseAttestationData?> AttestationData { get; private set; } = null!;

        /// <summary>
        /// Description of the standardAssignment
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Display name of the standardAssignment
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Expected effect of this assignment (Audit/Exempt/Attest)
        /// </summary>
        [Output("effect")]
        public Output<string?> Effect { get; private set; } = null!;

        /// <summary>
        /// Excluded scopes, filter out the descendants of the scope (on management scopes)
        /// </summary>
        [Output("excludedScopes")]
        public Output<ImmutableArray<string>> ExcludedScopes { get; private set; } = null!;

        /// <summary>
        /// Additional data about assignment that has Exempt effect
        /// </summary>
        [Output("exemptionData")]
        public Output<Outputs.StandardAssignmentPropertiesResponseExemptionData?> ExemptionData { get; private set; } = null!;

        /// <summary>
        /// Expiration date of this assignment as a full ISO date
        /// </summary>
        [Output("expiresOn")]
        public Output<string?> ExpiresOn { get; private set; } = null!;

        /// <summary>
        /// The standard assignment metadata.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.StandardAssignmentMetadataResponse?> Metadata { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a StandardAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StandardAssignment(string name, StandardAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:security:StandardAssignment", name, args ?? new StandardAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StandardAssignment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:security:StandardAssignment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:security/v20240801:StandardAssignment" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StandardAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StandardAssignment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StandardAssignment(name, id, options);
        }
    }

    public sealed class StandardAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Standard item with key as applied to this standard assignment over the given scope
        /// </summary>
        [Input("assignedStandard")]
        public Input<Inputs.AssignedStandardItemArgs>? AssignedStandard { get; set; }

        /// <summary>
        /// Additional data about assignment that has Attest effect
        /// </summary>
        [Input("attestationData")]
        public Input<Inputs.StandardAssignmentPropertiesAttestationDataArgs>? AttestationData { get; set; }

        /// <summary>
        /// Description of the standardAssignment
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of the standardAssignment
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Expected effect of this assignment (Audit/Exempt/Attest)
        /// </summary>
        [Input("effect")]
        public InputUnion<string, Pulumi.AzureNative.Security.Effect>? Effect { get; set; }

        [Input("excludedScopes")]
        private InputList<string>? _excludedScopes;

        /// <summary>
        /// Excluded scopes, filter out the descendants of the scope (on management scopes)
        /// </summary>
        public InputList<string> ExcludedScopes
        {
            get => _excludedScopes ?? (_excludedScopes = new InputList<string>());
            set => _excludedScopes = value;
        }

        /// <summary>
        /// Additional data about assignment that has Exempt effect
        /// </summary>
        [Input("exemptionData")]
        public Input<Inputs.StandardAssignmentPropertiesExemptionDataArgs>? ExemptionData { get; set; }

        /// <summary>
        /// Expiration date of this assignment as a full ISO date
        /// </summary>
        [Input("expiresOn")]
        public Input<string>? ExpiresOn { get; set; }

        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// The standard assignments assignment key - unique key for the standard assignment
        /// </summary>
        [Input("standardAssignmentName")]
        public Input<string>? StandardAssignmentName { get; set; }

        public StandardAssignmentArgs()
        {
        }
        public static new StandardAssignmentArgs Empty => new StandardAssignmentArgs();
    }
}
