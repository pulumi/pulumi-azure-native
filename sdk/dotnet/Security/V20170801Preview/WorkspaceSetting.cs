// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Security.V20170801Preview
{
    /// <summary>
    /// Configures where to store the OMS agent data for workspaces under a scope
    /// </summary>
    public partial class WorkspaceSetting : Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The full Azure ID of the workspace to save the data in
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceSetting(string name, WorkspaceSettingArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:security/v20170801preview:WorkspaceSetting", name, args ?? new WorkspaceSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceSetting(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:security/v20170801preview:WorkspaceSetting", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceSetting Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WorkspaceSetting(name, id, options);
        }
    }

    public sealed class WorkspaceSettingArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// The full Azure ID of the workspace to save the data in
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        /// <summary>
        /// Name of the security setting
        /// </summary>
        [Input("workspaceSettingName", required: true)]
        public Input<string> WorkspaceSettingName { get; set; } = null!;

        public WorkspaceSettingArgs()
        {
        }
    }
}
