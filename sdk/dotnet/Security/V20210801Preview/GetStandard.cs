// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20210801Preview
{
    public static class GetStandard
    {
        /// <summary>
        /// Security Standard on a resource
        /// </summary>
        public static Task<GetStandardResult> InvokeAsync(GetStandardArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStandardResult>("azure-native:security/v20210801preview:getStandard", args ?? new GetStandardArgs(), options.WithDefaults());

        /// <summary>
        /// Security Standard on a resource
        /// </summary>
        public static Output<GetStandardResult> Invoke(GetStandardInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStandardResult>("azure-native:security/v20210801preview:getStandard", args ?? new GetStandardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStandardArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Security Standard key - unique key for the standard type
        /// </summary>
        [Input("standardId", required: true)]
        public string StandardId { get; set; } = null!;

        public GetStandardArgs()
        {
        }
        public static new GetStandardArgs Empty => new GetStandardArgs();
    }

    public sealed class GetStandardInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Security Standard key - unique key for the standard type
        /// </summary>
        [Input("standardId", required: true)]
        public Input<string> StandardId { get; set; } = null!;

        public GetStandardInvokeArgs()
        {
        }
        public static new GetStandardInvokeArgs Empty => new GetStandardInvokeArgs();
    }


    [OutputType]
    public sealed class GetStandardResult
    {
        /// <summary>
        /// category of the standard provided
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// List of component objects containing component unique keys (such as assessment keys) to apply to standard scope.  Currently only supports assessment keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.StandardComponentPropertiesResponse> Components;
        /// <summary>
        /// description of the standard
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// display name of the standard, equivalent to the standardId
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Entity tag is used for comparing two or more entities from the same requested resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of the resource
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Location where the resource is stored
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// standard type (Custom or BuiltIn only currently)
        /// </summary>
        public readonly string StandardType;
        /// <summary>
        /// List of all standard supported clouds.
        /// </summary>
        public readonly ImmutableArray<string> SupportedClouds;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// A list of key value pairs that describe the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStandardResult(
            string? category,

            ImmutableArray<Outputs.StandardComponentPropertiesResponse> components,

            string? description,

            string? displayName,

            string? etag,

            string id,

            string? kind,

            string? location,

            string name,

            string standardType,

            ImmutableArray<string> supportedClouds,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Category = category;
            Components = components;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            StandardType = standardType;
            SupportedClouds = supportedClouds;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
