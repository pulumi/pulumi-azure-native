// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Security.V20220101Preview
{
    /// <summary>
    /// The owner type for the governance rule owner source
    /// </summary>
    [EnumType]
    public readonly struct GovernanceRuleOwnerSourceType : IEquatable<GovernanceRuleOwnerSourceType>
    {
        private readonly string _value;

        private GovernanceRuleOwnerSourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The rule source type defined using resource tag
        /// </summary>
        public static GovernanceRuleOwnerSourceType ByTag { get; } = new GovernanceRuleOwnerSourceType("ByTag");
        /// <summary>
        /// The rule source type defined manually
        /// </summary>
        public static GovernanceRuleOwnerSourceType Manually { get; } = new GovernanceRuleOwnerSourceType("Manually");

        public static bool operator ==(GovernanceRuleOwnerSourceType left, GovernanceRuleOwnerSourceType right) => left.Equals(right);
        public static bool operator !=(GovernanceRuleOwnerSourceType left, GovernanceRuleOwnerSourceType right) => !left.Equals(right);

        public static explicit operator string(GovernanceRuleOwnerSourceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GovernanceRuleOwnerSourceType other && Equals(other);
        public bool Equals(GovernanceRuleOwnerSourceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The governance rule source, what the rule affects, e.g. Assessments
    /// </summary>
    [EnumType]
    public readonly struct GovernanceRuleSourceResourceType : IEquatable<GovernanceRuleSourceResourceType>
    {
        private readonly string _value;

        private GovernanceRuleSourceResourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The source of the governance rule is assessments
        /// </summary>
        public static GovernanceRuleSourceResourceType Assessments { get; } = new GovernanceRuleSourceResourceType("Assessments");

        public static bool operator ==(GovernanceRuleSourceResourceType left, GovernanceRuleSourceResourceType right) => left.Equals(right);
        public static bool operator !=(GovernanceRuleSourceResourceType left, GovernanceRuleSourceResourceType right) => !left.Equals(right);

        public static explicit operator string(GovernanceRuleSourceResourceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GovernanceRuleSourceResourceType other && Equals(other);
        public bool Equals(GovernanceRuleSourceResourceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The rule type of the governance rule, defines the source of the rule e.g. Integrated
    /// </summary>
    [EnumType]
    public readonly struct GovernanceRuleType : IEquatable<GovernanceRuleType>
    {
        private readonly string _value;

        private GovernanceRuleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The source of the rule type definition is integrated
        /// </summary>
        public static GovernanceRuleType Integrated { get; } = new GovernanceRuleType("Integrated");
        /// <summary>
        /// The source of the rule type definition is ServiceNow
        /// </summary>
        public static GovernanceRuleType ServiceNow { get; } = new GovernanceRuleType("ServiceNow");

        public static bool operator ==(GovernanceRuleType left, GovernanceRuleType right) => left.Equals(right);
        public static bool operator !=(GovernanceRuleType left, GovernanceRuleType right) => !left.Equals(right);

        public static explicit operator string(GovernanceRuleType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GovernanceRuleType other && Equals(other);
        public bool Equals(GovernanceRuleType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
