// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Security.Preview
{
    public static class GetAdaptiveApplicationControl
    {
        public static Task<GetAdaptiveApplicationControlResult> InvokeAsync(GetAdaptiveApplicationControlArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAdaptiveApplicationControlResult>("azurerm:security/preview:getAdaptiveApplicationControl", args ?? new GetAdaptiveApplicationControlArgs(), options.WithVersion());
    }


    public sealed class GetAdaptiveApplicationControlArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location where ASC stores the data of the subscription. can be retrieved from Get locations
        /// </summary>
        [Input("ascLocation", required: true)]
        public string AscLocation { get; set; } = null!;

        /// <summary>
        /// Name of an application control machine group
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        public GetAdaptiveApplicationControlArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAdaptiveApplicationControlResult
    {
        /// <summary>
        /// The configuration status of the machines group or machine or rule
        /// </summary>
        public readonly string ConfigurationStatus;
        /// <summary>
        /// The application control policy enforcement/protection mode of the machine group
        /// </summary>
        public readonly string? EnforcementMode;
        public readonly ImmutableArray<Outputs.AdaptiveApplicationControlIssueSummaryResponseResult> Issues;
        /// <summary>
        /// Location where the resource is stored
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.PathRecommendationResponseResult> PathRecommendations;
        /// <summary>
        /// The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
        /// </summary>
        public readonly Outputs.ProtectionModeResponseResult? ProtectionMode;
        /// <summary>
        /// The initial recommendation status of the machine group or machine
        /// </summary>
        public readonly string RecommendationStatus;
        /// <summary>
        /// The source type of the machine group
        /// </summary>
        public readonly string SourceSystem;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        public readonly ImmutableArray<Outputs.VmRecommendationResponseResult> VmRecommendations;

        [OutputConstructor]
        private GetAdaptiveApplicationControlResult(
            string configurationStatus,

            string? enforcementMode,

            ImmutableArray<Outputs.AdaptiveApplicationControlIssueSummaryResponseResult> issues,

            string location,

            string name,

            ImmutableArray<Outputs.PathRecommendationResponseResult> pathRecommendations,

            Outputs.ProtectionModeResponseResult? protectionMode,

            string recommendationStatus,

            string sourceSystem,

            string type,

            ImmutableArray<Outputs.VmRecommendationResponseResult> vmRecommendations)
        {
            ConfigurationStatus = configurationStatus;
            EnforcementMode = enforcementMode;
            Issues = issues;
            Location = location;
            Name = name;
            PathRecommendations = pathRecommendations;
            ProtectionMode = protectionMode;
            RecommendationStatus = recommendationStatus;
            SourceSystem = sourceSystem;
            Type = type;
            VmRecommendations = vmRecommendations;
        }
    }
}
