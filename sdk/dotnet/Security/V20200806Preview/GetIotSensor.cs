// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Security.V20200806Preview
{
    public static class GetIotSensor
    {
        public static Task<GetIotSensorResult> InvokeAsync(GetIotSensorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIotSensorResult>("azure-nextgen:security/v20200806preview:getIotSensor", args ?? new GetIotSensorArgs(), options.WithVersion());
    }


    public sealed class GetIotSensorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the IoT sensor
        /// </summary>
        [Input("iotSensorName", required: true)]
        public string IotSensorName { get; set; } = null!;

        /// <summary>
        /// Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetIotSensorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIotSensorResult
    {
        /// <summary>
        /// Last connectivity time of the IoT sensor
        /// </summary>
        public readonly string ConnectivityTime;
        /// <summary>
        /// Creation time of the IoT sensor
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Dynamic mode status of the IoT sensor
        /// </summary>
        public readonly bool DynamicLearning;
        /// <summary>
        /// Learning mode status of the IoT sensor
        /// </summary>
        public readonly bool LearningMode;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status of the IoT sensor
        /// </summary>
        public readonly string SensorStatus;
        /// <summary>
        /// Version of the IoT sensor
        /// </summary>
        public readonly string SensorVersion;
        /// <summary>
        /// TI Automatic mode status of the IoT sensor
        /// </summary>
        public readonly bool? TiAutomaticUpdates;
        /// <summary>
        /// TI Status of the IoT sensor
        /// </summary>
        public readonly string TiStatus;
        /// <summary>
        /// TI Version of the IoT sensor
        /// </summary>
        public readonly string TiVersion;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Zone of the IoT sensor
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private GetIotSensorResult(
            string connectivityTime,

            string creationTime,

            bool dynamicLearning,

            bool learningMode,

            string name,

            string sensorStatus,

            string sensorVersion,

            bool? tiAutomaticUpdates,

            string tiStatus,

            string tiVersion,

            string type,

            string? zone)
        {
            ConnectivityTime = connectivityTime;
            CreationTime = creationTime;
            DynamicLearning = dynamicLearning;
            LearningMode = learningMode;
            Name = name;
            SensorStatus = sensorStatus;
            SensorVersion = sensorVersion;
            TiAutomaticUpdates = tiAutomaticUpdates;
            TiStatus = tiStatus;
            TiVersion = tiVersion;
            Type = type;
            Zone = zone;
        }
    }
}
