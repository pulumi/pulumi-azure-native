// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Security.V20200806Preview
{
    /// <summary>
    /// IoT sensor model
    /// </summary>
    public partial class IotSensor : Pulumi.CustomResource
    {
        /// <summary>
        /// Last connectivity time of the IoT sensor
        /// </summary>
        [Output("connectivityTime")]
        public Output<string> ConnectivityTime { get; private set; } = null!;

        /// <summary>
        /// Creation time of the IoT sensor
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Dynamic mode status of the IoT sensor
        /// </summary>
        [Output("dynamicLearning")]
        public Output<bool> DynamicLearning { get; private set; } = null!;

        /// <summary>
        /// Learning mode status of the IoT sensor
        /// </summary>
        [Output("learningMode")]
        public Output<bool> LearningMode { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Status of the IoT sensor
        /// </summary>
        [Output("sensorStatus")]
        public Output<string> SensorStatus { get; private set; } = null!;

        /// <summary>
        /// Version of the IoT sensor
        /// </summary>
        [Output("sensorVersion")]
        public Output<string> SensorVersion { get; private set; } = null!;

        /// <summary>
        /// TI Automatic mode status of the IoT sensor
        /// </summary>
        [Output("tiAutomaticUpdates")]
        public Output<bool?> TiAutomaticUpdates { get; private set; } = null!;

        /// <summary>
        /// TI Status of the IoT sensor
        /// </summary>
        [Output("tiStatus")]
        public Output<string> TiStatus { get; private set; } = null!;

        /// <summary>
        /// TI Version of the IoT sensor
        /// </summary>
        [Output("tiVersion")]
        public Output<string> TiVersion { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Zone of the IoT sensor
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a IotSensor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IotSensor(string name, IotSensorArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:security/v20200806preview:IotSensor", name, args ?? new IotSensorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IotSensor(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:security/v20200806preview:IotSensor", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IotSensor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IotSensor Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IotSensor(name, id, options);
        }
    }

    public sealed class IotSensorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the IoT sensor
        /// </summary>
        [Input("iotSensorName", required: true)]
        public Input<string> IotSensorName { get; set; } = null!;

        /// <summary>
        /// Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// TI Automatic mode status of the IoT sensor
        /// </summary>
        [Input("tiAutomaticUpdates")]
        public Input<bool>? TiAutomaticUpdates { get; set; }

        /// <summary>
        /// Zone of the IoT sensor
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public IotSensorArgs()
        {
        }
    }
}
