// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Security.V20200101Preview
{
    /// <summary>
    /// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
    /// </summary>
    [EnumType]
    public readonly struct AuthenticationType : IEquatable<AuthenticationType>
    {
        private readonly string _value;

        private AuthenticationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// AWS cloud account connector user credentials authentication
        /// </summary>
        public static AuthenticationType AwsCreds { get; } = new AuthenticationType("awsCreds");
        /// <summary>
        /// AWS account connector assume role authentication
        /// </summary>
        public static AuthenticationType AwsAssumeRole { get; } = new AuthenticationType("awsAssumeRole");
        /// <summary>
        /// GCP account connector service to service authentication
        /// </summary>
        public static AuthenticationType GcpCredentials { get; } = new AuthenticationType("gcpCredentials");

        public static bool operator ==(AuthenticationType left, AuthenticationType right) => left.Equals(right);
        public static bool operator !=(AuthenticationType left, AuthenticationType right) => !left.Equals(right);

        public static explicit operator string(AuthenticationType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuthenticationType other && Equals(other);
        public bool Equals(AuthenticationType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
    /// </summary>
    [EnumType]
    public readonly struct AutoProvision : IEquatable<AutoProvision>
    {
        private readonly string _value;

        private AutoProvision(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Install missing Azure Arc agents on machines automatically
        /// </summary>
        public static AutoProvision On { get; } = new AutoProvision("On");
        /// <summary>
        /// Do not install Azure Arc agent on the machines automatically
        /// </summary>
        public static AutoProvision Off { get; } = new AutoProvision("Off");

        public static bool operator ==(AutoProvision left, AutoProvision right) => left.Equals(right);
        public static bool operator !=(AutoProvision left, AutoProvision right) => !left.Equals(right);

        public static explicit operator string(AutoProvision value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AutoProvision other && Equals(other);
        public bool Equals(AutoProvision other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
