// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20220701Preview
{
    public static class GetSecurityConnectorApplication
    {
        /// <summary>
        /// Security Application over a given scope
        /// </summary>
        public static Task<GetSecurityConnectorApplicationResult> InvokeAsync(GetSecurityConnectorApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityConnectorApplicationResult>("azure-native:security/v20220701preview:getSecurityConnectorApplication", args ?? new GetSecurityConnectorApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Security Application over a given scope
        /// </summary>
        public static Output<GetSecurityConnectorApplicationResult> Invoke(GetSecurityConnectorApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityConnectorApplicationResult>("azure-native:security/v20220701preview:getSecurityConnectorApplication", args ?? new GetSecurityConnectorApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityConnectorApplicationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The security Application key - unique key for the standard application
        /// </summary>
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The security connector name.
        /// </summary>
        [Input("securityConnectorName", required: true)]
        public string SecurityConnectorName { get; set; } = null!;

        public GetSecurityConnectorApplicationArgs()
        {
        }
    }

    public sealed class GetSecurityConnectorApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The security Application key - unique key for the standard application
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The security connector name.
        /// </summary>
        [Input("securityConnectorName", required: true)]
        public Input<string> SecurityConnectorName { get; set; } = null!;

        public GetSecurityConnectorApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityConnectorApplicationResult
    {
        /// <summary>
        /// description of the application
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// display name of the application
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The application source, what it affects, e.g. Assessments
        /// </summary>
        public readonly string SourceResourceType;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSecurityConnectorApplicationResult(
            string? description,

            string? displayName,

            string id,

            string name,

            string sourceResourceType,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            Id = id;
            Name = name;
            SourceResourceType = sourceResourceType;
            Type = type;
        }
    }
}
