// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20230301Preview.Outputs
{

    /// <summary>
    /// The gcpOrganization data for the parent account
    /// </summary>
    [OutputType]
    public sealed class GcpOrganizationalDataOrganizationResponse
    {
        /// <summary>
        /// If the multi cloud account is of membership type organization, list of accounts excluded from offering
        /// </summary>
        public readonly ImmutableArray<string> ExcludedProjectNumbers;
        /// <summary>
        /// The multi cloud account's membership type in the organization
        /// Expected value is 'Organization'.
        /// </summary>
        public readonly string OrganizationMembershipType;
        /// <summary>
        /// GCP organization name
        /// </summary>
        public readonly string OrganizationName;
        /// <summary>
        /// The service account email address which represents the organization level permissions container.
        /// </summary>
        public readonly string? ServiceAccountEmailAddress;
        /// <summary>
        /// The GCP workload identity provider id which represents the permissions required to auto provision security connectors
        /// </summary>
        public readonly string? WorkloadIdentityProviderId;

        [OutputConstructor]
        private GcpOrganizationalDataOrganizationResponse(
            ImmutableArray<string> excludedProjectNumbers,

            string organizationMembershipType,

            string organizationName,

            string? serviceAccountEmailAddress,

            string? workloadIdentityProviderId)
        {
            ExcludedProjectNumbers = excludedProjectNumbers;
            OrganizationMembershipType = organizationMembershipType;
            OrganizationName = organizationName;
            ServiceAccountEmailAddress = serviceAccountEmailAddress;
            WorkloadIdentityProviderId = workloadIdentityProviderId;
        }
    }
}
