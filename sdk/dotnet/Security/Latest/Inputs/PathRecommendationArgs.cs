// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Security.Latest.Inputs
{

    /// <summary>
    /// Represents a path that is recommended to be allowed and its properties
    /// </summary>
    public sealed class PathRecommendationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The recommendation action of the machine or rule
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Whether the application is commonly run on the machine
        /// </summary>
        [Input("common")]
        public Input<bool>? Common { get; set; }

        /// <summary>
        /// The configuration status of the machines group or machine or rule
        /// </summary>
        [Input("configurationStatus")]
        public Input<string>? ConfigurationStatus { get; set; }

        /// <summary>
        /// The type of the file (for Linux files - Executable is used)
        /// </summary>
        [Input("fileType")]
        public Input<string>? FileType { get; set; }

        /// <summary>
        /// The full path of the file, or an identifier of the application
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Represents the publisher information of a process/rule
        /// </summary>
        [Input("publisherInfo")]
        public Input<Inputs.PublisherInfoArgs>? PublisherInfo { get; set; }

        /// <summary>
        /// The type of the rule to be allowed
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("userSids")]
        private InputList<string>? _userSids;
        public InputList<string> UserSids
        {
            get => _userSids ?? (_userSids = new InputList<string>());
            set => _userSids = value;
        }

        [Input("usernames")]
        private InputList<Inputs.UserRecommendationArgs>? _usernames;
        public InputList<Inputs.UserRecommendationArgs> Usernames
        {
            get => _usernames ?? (_usernames = new InputList<Inputs.UserRecommendationArgs>());
            set => _usernames = value;
        }

        public PathRecommendationArgs()
        {
        }
    }
}
