// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.Outputs
{

    /// <summary>
    /// The CSPM P1 for AWS offering
    /// </summary>
    [OutputType]
    public sealed class DefenderCspmAwsOfferingResponse
    {
        /// <summary>
        /// The Microsoft Defender Data Sensitivity discovery configuration
        /// </summary>
        public readonly Outputs.DefenderCspmAwsOfferingResponseDataSensitivityDiscovery? DataSensitivityDiscovery;
        /// <summary>
        /// The databases DSPM configuration
        /// </summary>
        public readonly Outputs.DefenderCspmAwsOfferingResponseDatabasesDspm? DatabasesDspm;
        /// <summary>
        /// The offering description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The type of the security offering.
        /// Expected value is 'DefenderCspmAws'.
        /// </summary>
        public readonly string OfferingType;
        /// <summary>
        /// The Microsoft Defender for Server VM scanning configuration
        /// </summary>
        public readonly Outputs.DefenderCspmAwsOfferingResponseVmScanners? VmScanners;

        [OutputConstructor]
        private DefenderCspmAwsOfferingResponse(
            Outputs.DefenderCspmAwsOfferingResponseDataSensitivityDiscovery? dataSensitivityDiscovery,

            Outputs.DefenderCspmAwsOfferingResponseDatabasesDspm? databasesDspm,

            string description,

            string offeringType,

            Outputs.DefenderCspmAwsOfferingResponseVmScanners? vmScanners)
        {
            DataSensitivityDiscovery = dataSensitivityDiscovery;
            DatabasesDspm = databasesDspm;
            Description = description;
            OfferingType = offeringType;
            VmScanners = vmScanners;
        }
    }
}
