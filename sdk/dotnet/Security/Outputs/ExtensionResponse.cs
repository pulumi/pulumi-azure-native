// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.Outputs
{

    /// <summary>
    /// A plan's extension properties
    /// </summary>
    [OutputType]
    public sealed class ExtensionResponse
    {
        /// <summary>
        /// Property values associated with the extension.
        /// </summary>
        public readonly object? AdditionalExtensionProperties;
        /// <summary>
        /// Indicates whether the extension is enabled.
        /// </summary>
        public readonly string IsEnabled;
        /// <summary>
        /// The extension name. Supported values are: &lt;br&gt;&lt;br&gt;**AgentlessDiscoveryForKubernetes** - API-based discovery of information about Kubernetes cluster architecture, workload objects, and setup. Required for Kubernetes inventory, identity and network exposure detection, attack path analysis and risk hunting as part of the cloud security explorer.
        /// Available for CloudPosture plan.&lt;br&gt;&lt;br&gt;**OnUploadMalwareScanning** - Limits the GB to be scanned per month for each storage account within the subscription. Once this limit reached on a given storage account, Blobs won't be scanned during current calendar month.
        /// Available for StorageAccounts plan.&lt;br&gt;&lt;br&gt;**SensitiveDataDiscovery** - Sensitive data discovery identifies Blob storage container with sensitive data such as credentials, credit cards, and more, to help prioritize and investigate security events.
        /// Available for StorageAccounts and CloudPosture plans.&lt;br&gt;&lt;br&gt;**ContainerRegistriesVulnerabilityAssessments** - Provides vulnerability management for images stored in your container registries.
        /// Available for CloudPosture and Containers plans.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. A status describing the success/failure of the extension's enablement/disablement operation.
        /// </summary>
        public readonly Outputs.OperationStatusResponse OperationStatus;

        [OutputConstructor]
        private ExtensionResponse(
            object? additionalExtensionProperties,

            string isEnabled,

            string name,

            Outputs.OperationStatusResponse operationStatus)
        {
            AdditionalExtensionProperties = additionalExtensionProperties;
            IsEnabled = isEnabled;
            Name = name;
            OperationStatus = operationStatus;
        }
    }
}
