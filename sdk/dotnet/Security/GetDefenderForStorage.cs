// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class GetDefenderForStorage
    {
        /// <summary>
        /// Gets the Defender for Storage settings for the specified storage account.
        /// Azure REST API version: 2022-12-01-preview.
        /// </summary>
        public static Task<GetDefenderForStorageResult> InvokeAsync(GetDefenderForStorageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDefenderForStorageResult>("azure-native:security:getDefenderForStorage", args ?? new GetDefenderForStorageArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Defender for Storage settings for the specified storage account.
        /// Azure REST API version: 2022-12-01-preview.
        /// </summary>
        public static Output<GetDefenderForStorageResult> Invoke(GetDefenderForStorageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDefenderForStorageResult>("azure-native:security:getDefenderForStorage", args ?? new GetDefenderForStorageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDefenderForStorageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        /// <summary>
        /// Defender for Storage setting name.
        /// </summary>
        [Input("settingName", required: true)]
        public string SettingName { get; set; } = null!;

        public GetDefenderForStorageArgs()
        {
        }
        public static new GetDefenderForStorageArgs Empty => new GetDefenderForStorageArgs();
    }

    public sealed class GetDefenderForStorageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// Defender for Storage setting name.
        /// </summary>
        [Input("settingName", required: true)]
        public Input<string> SettingName { get; set; } = null!;

        public GetDefenderForStorageInvokeArgs()
        {
        }
        public static new GetDefenderForStorageInvokeArgs Empty => new GetDefenderForStorageInvokeArgs();
    }


    [OutputType]
    public sealed class GetDefenderForStorageResult
    {
        /// <summary>
        /// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
        /// </summary>
        public readonly int? CapGBPerMonth;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether Sensitive Data Discovery should be enabled.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
        /// </summary>
        public readonly Outputs.OperationStatusResponse OperationStatus;
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        public readonly bool? OverrideSubscriptionLevelSettings;
        /// <summary>
        /// Optional. Resource id of an Event Grid Topic to send scan results to.
        /// </summary>
        public readonly string? ScanResultsEventGridTopicResourceId;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDefenderForStorageResult(
            int? capGBPerMonth,

            string id,

            bool? isEnabled,

            string name,

            Outputs.OperationStatusResponse operationStatus,

            bool? overrideSubscriptionLevelSettings,

            string? scanResultsEventGridTopicResourceId,

            string type)
        {
            CapGBPerMonth = capGBPerMonth;
            Id = id;
            IsEnabled = isEnabled;
            Name = name;
            OperationStatus = operationStatus;
            OverrideSubscriptionLevelSettings = overrideSubscriptionLevelSettings;
            ScanResultsEventGridTopicResourceId = scanResultsEventGridTopicResourceId;
            Type = type;
        }
    }
}
