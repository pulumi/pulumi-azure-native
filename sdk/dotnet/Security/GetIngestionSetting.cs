// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class GetIngestionSetting
    {
        /// <summary>
        /// Configures how to correlate scan data and logs with resources associated with the subscription.
        /// API Version: 2021-01-15-preview.
        /// </summary>
        public static Task<GetIngestionSettingResult> InvokeAsync(GetIngestionSettingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIngestionSettingResult>("azure-native:security:getIngestionSetting", args ?? new GetIngestionSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Configures how to correlate scan data and logs with resources associated with the subscription.
        /// API Version: 2021-01-15-preview.
        /// </summary>
        public static Output<GetIngestionSettingResult> Invoke(GetIngestionSettingInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIngestionSettingResult>("azure-native:security:getIngestionSetting", args ?? new GetIngestionSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIngestionSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the ingestion setting
        /// </summary>
        [Input("ingestionSettingName", required: true)]
        public string IngestionSettingName { get; set; } = null!;

        public GetIngestionSettingArgs()
        {
        }
        public static new GetIngestionSettingArgs Empty => new GetIngestionSettingArgs();
    }

    public sealed class GetIngestionSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the ingestion setting
        /// </summary>
        [Input("ingestionSettingName", required: true)]
        public Input<string> IngestionSettingName { get; set; } = null!;

        public GetIngestionSettingInvokeArgs()
        {
        }
        public static new GetIngestionSettingInvokeArgs Empty => new GetIngestionSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetIngestionSettingResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIngestionSettingResult(
            string id,

            string name,

            string type)
        {
            Id = id;
            Name = name;
            Type = type;
        }
    }
}
