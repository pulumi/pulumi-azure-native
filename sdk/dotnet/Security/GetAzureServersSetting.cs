// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class GetAzureServersSetting
    {
        /// <summary>
        /// Get a server vulnerability assessments setting of the requested kind, that is set on the subscription
        /// Azure REST API version: 2023-05-01.
        /// </summary>
        public static Task<GetAzureServersSettingResult> InvokeAsync(GetAzureServersSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureServersSettingResult>("azure-native:security:getAzureServersSetting", args ?? new GetAzureServersSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a server vulnerability assessments setting of the requested kind, that is set on the subscription
        /// Azure REST API version: 2023-05-01.
        /// </summary>
        public static Output<GetAzureServersSettingResult> Invoke(GetAzureServersSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureServersSettingResult>("azure-native:security:getAzureServersSetting", args ?? new GetAzureServersSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureServersSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The kind of the server vulnerability assessments setting
        /// </summary>
        [Input("settingKind", required: true)]
        public string SettingKind { get; set; } = null!;

        public GetAzureServersSettingArgs()
        {
        }
        public static new GetAzureServersSettingArgs Empty => new GetAzureServersSettingArgs();
    }

    public sealed class GetAzureServersSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The kind of the server vulnerability assessments setting
        /// </summary>
        [Input("settingKind", required: true)]
        public Input<string> SettingKind { get; set; } = null!;

        public GetAzureServersSettingInvokeArgs()
        {
        }
        public static new GetAzureServersSettingInvokeArgs Empty => new GetAzureServersSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureServersSettingResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the server vulnerability assessments setting
        /// Expected value is 'AzureServersSetting'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The selected vulnerability assessments provider on Azure servers in the defined scope.
        /// </summary>
        public readonly string SelectedProvider;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureServersSettingResult(
            string id,

            string kind,

            string name,

            string selectedProvider,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            SelectedProvider = selectedProvider;
            SystemData = systemData;
            Type = type;
        }
    }
}
