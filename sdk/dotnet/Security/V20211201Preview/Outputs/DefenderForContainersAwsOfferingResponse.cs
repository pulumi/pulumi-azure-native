// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20211201Preview.Outputs
{

    /// <summary>
    /// The Defender for Containers AWS offering
    /// </summary>
    [OutputType]
    public sealed class DefenderForContainersAwsOfferingResponse
    {
        /// <summary>
        /// The cloudwatch to kinesis connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersAwsOfferingResponseCloudWatchToKinesis? CloudWatchToKinesis;
        /// <summary>
        /// The offering description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The kinesis to s3 connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersAwsOfferingResponseKinesisToS3? KinesisToS3;
        /// <summary>
        /// The kubernetes to scuba connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersAwsOfferingResponseKubernetesScubaReader? KubernetesScubaReader;
        /// <summary>
        /// The kubernetes service connection configuration
        /// </summary>
        public readonly Outputs.DefenderForContainersAwsOfferingResponseKubernetesService? KubernetesService;
        /// <summary>
        /// The type of the security offering.
        /// Expected value is 'DefenderForContainersAws'.
        /// </summary>
        public readonly string OfferingType;

        [OutputConstructor]
        private DefenderForContainersAwsOfferingResponse(
            Outputs.DefenderForContainersAwsOfferingResponseCloudWatchToKinesis? cloudWatchToKinesis,

            string description,

            Outputs.DefenderForContainersAwsOfferingResponseKinesisToS3? kinesisToS3,

            Outputs.DefenderForContainersAwsOfferingResponseKubernetesScubaReader? kubernetesScubaReader,

            Outputs.DefenderForContainersAwsOfferingResponseKubernetesService? kubernetesService,

            string offeringType)
        {
            CloudWatchToKinesis = cloudWatchToKinesis;
            Description = description;
            KinesisToS3 = kinesisToS3;
            KubernetesScubaReader = kubernetesScubaReader;
            KubernetesService = kubernetesService;
            OfferingType = offeringType;
        }
    }
}
