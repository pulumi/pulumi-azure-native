// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class GetCustomEntityStoreAssignment
    {
        /// <summary>
        /// Custom entity store assignment
        /// API Version: 2021-07-01-preview.
        /// </summary>
        public static Task<GetCustomEntityStoreAssignmentResult> InvokeAsync(GetCustomEntityStoreAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCustomEntityStoreAssignmentResult>("azure-native:security:getCustomEntityStoreAssignment", args ?? new GetCustomEntityStoreAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Custom entity store assignment
        /// API Version: 2021-07-01-preview.
        /// </summary>
        public static Output<GetCustomEntityStoreAssignmentResult> Invoke(GetCustomEntityStoreAssignmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCustomEntityStoreAssignmentResult>("azure-native:security:getCustomEntityStoreAssignment", args ?? new GetCustomEntityStoreAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomEntityStoreAssignmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the custom entity store assignment. Generated name is GUID.
        /// </summary>
        [Input("customEntityStoreAssignmentName", required: true)]
        public string CustomEntityStoreAssignmentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCustomEntityStoreAssignmentArgs()
        {
        }
    }

    public sealed class GetCustomEntityStoreAssignmentInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the custom entity store assignment. Generated name is GUID.
        /// </summary>
        [Input("customEntityStoreAssignmentName", required: true)]
        public Input<string> CustomEntityStoreAssignmentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCustomEntityStoreAssignmentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCustomEntityStoreAssignmentResult
    {
        /// <summary>
        /// The link to entity store database.
        /// </summary>
        public readonly string? EntityStoreDatabaseLink;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The principal assigned with entity store. Format of principal is: [AAD type]=[PrincipalObjectId];[TenantId]
        /// </summary>
        public readonly string? Principal;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCustomEntityStoreAssignmentResult(
            string? entityStoreDatabaseLink,

            string id,

            string name,

            string? principal,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            EntityStoreDatabaseLink = entityStoreDatabaseLink;
            Id = id;
            Name = name;
            Principal = principal;
            SystemData = systemData;
            Type = type;
        }
    }
}
