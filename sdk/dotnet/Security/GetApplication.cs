// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security
{
    public static class GetApplication
    {
        /// <summary>
        /// Security Application over a given scope
        /// API Version: 2022-07-01-preview.
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("azure-native:security:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Security Application over a given scope
        /// API Version: 2022-07-01-preview.
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("azure-native:security:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The security Application key - unique key for the standard application
        /// </summary>
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }

    public sealed class GetApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The security Application key - unique key for the standard application
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// description of the application
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// display name of the application
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The application source, what it affects, e.g. Assessments
        /// </summary>
        public readonly string SourceResourceType;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApplicationResult(
            string? description,

            string? displayName,

            string id,

            string name,

            string sourceResourceType,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            Id = id;
            Name = name;
            SourceResourceType = sourceResourceType;
            Type = type;
        }
    }
}
