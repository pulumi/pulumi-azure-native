// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecretSyncController.V20240821Preview
{
    public static class GetSecretSync
    {
        /// <summary>
        /// Gets the properties of a SecretSync instance.
        /// </summary>
        public static Task<GetSecretSyncResult> InvokeAsync(GetSecretSyncArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretSyncResult>("azure-native:secretsynccontroller/v20240821preview:getSecretSync", args ?? new GetSecretSyncArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the properties of a SecretSync instance.
        /// </summary>
        public static Output<GetSecretSyncResult> Invoke(GetSecretSyncInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretSyncResult>("azure-native:secretsynccontroller/v20240821preview:getSecretSync", args ?? new GetSecretSyncInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretSyncArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SecretSync
        /// </summary>
        [Input("secretSyncName", required: true)]
        public string SecretSyncName { get; set; } = null!;

        public GetSecretSyncArgs()
        {
        }
        public static new GetSecretSyncArgs Empty => new GetSecretSyncArgs();
    }

    public sealed class GetSecretSyncInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SecretSync
        /// </summary>
        [Input("secretSyncName", required: true)]
        public Input<string> SecretSyncName { get; set; } = null!;

        public GetSecretSyncInvokeArgs()
        {
        }
        public static new GetSecretSyncInvokeArgs Empty => new GetSecretSyncInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretSyncResult
    {
        /// <summary>
        /// The complex type of the extended location.
        /// </summary>
        public readonly Outputs.AzureResourceManagerCommonTypesExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// ForceSynchronization can be used to force the secret synchronization. The secret synchronization is triggered by changing the value in this field. This field is not used to resolve synchronization conflicts.
        /// </summary>
        public readonly string? ForceSynchronization;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Type specifies the type of the Kubernetes secret object, e.g. "Opaque" or"kubernetes.io/tls". The controller must have permission to create secrets of the specified type.
        /// </summary>
        public readonly string KubernetesSecretType;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An array of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret. Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret.
        /// </summary>
        public readonly ImmutableArray<Outputs.KubernetesSecretObjectMappingResponse> ObjectSecretMapping;
        /// <summary>
        /// Provisioning state of the SecretSync instance.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// SecretProviderClassName specifies the name of the SecretProviderClass resource, which contains the information needed to access the cloud provider secret store.
        /// </summary>
        public readonly string SecretProviderClassName;
        /// <summary>
        /// ServiceAccountName specifies the name of the service account used to access the cloud provider secret store. The audience field in the service account token must be passed as parameter in the controller configuration. The audience is used when requesting a token from the API server for the service account; the supported audiences are defined by each provider.
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// SecretSyncStatus defines the observed state of the secret synchronization process.
        /// </summary>
        public readonly Outputs.SecretSyncStatusResponse Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSecretSyncResult(
            Outputs.AzureResourceManagerCommonTypesExtendedLocationResponse? extendedLocation,

            string? forceSynchronization,

            string id,

            string kubernetesSecretType,

            string location,

            string name,

            ImmutableArray<Outputs.KubernetesSecretObjectMappingResponse> objectSecretMapping,

            string provisioningState,

            string secretProviderClassName,

            string serviceAccountName,

            Outputs.SecretSyncStatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            ForceSynchronization = forceSynchronization;
            Id = id;
            KubernetesSecretType = kubernetesSecretType;
            Location = location;
            Name = name;
            ObjectSecretMapping = objectSecretMapping;
            ProvisioningState = provisioningState;
            SecretProviderClassName = secretProviderClassName;
            ServiceAccountName = serviceAccountName;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
