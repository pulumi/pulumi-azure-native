// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.Outputs
{

    /// <summary>
    /// The live event ingestion telemetry data.
    /// </summary>
    [OutputType]
    public sealed class LiveEventIngestionResponse
    {
        /// <summary>
        /// Ingestion begin time in UTC.
        /// </summary>
        public readonly string? Begin;
        /// <summary>
        /// Ingestion end time in UTC. Empty if it's not stopped yet.
        /// </summary>
        public readonly string? End;
        /// <summary>
        /// Reason why ingestion stops. Empty if it's not stopped yet. E.g) Service Stopped. No Ingestion.
        /// </summary>
        public readonly string? EndReason;
        /// <summary>
        /// IngestInterruption entry list.
        /// </summary>
        public readonly ImmutableArray<Outputs.LiveEventIngestInterruptionResponse> IngestInterruptions;
        /// <summary>
        /// Ingestion stream name.
        /// </summary>
        public readonly string? StreamName;

        [OutputConstructor]
        private LiveEventIngestionResponse(
            string? begin,

            string? end,

            string? endReason,

            ImmutableArray<Outputs.LiveEventIngestInterruptionResponse> ingestInterruptions,

            string? streamName)
        {
            Begin = begin;
            End = end;
            EndReason = endReason;
            IngestInterruptions = ingestInterruptions;
            StreamName = streamName;
        }
    }
}
