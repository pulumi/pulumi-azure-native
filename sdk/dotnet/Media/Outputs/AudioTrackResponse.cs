// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.Outputs
{

    /// <summary>
    /// Represents an audio track in the asset.
    /// </summary>
    [OutputType]
    public sealed class AudioTrackResponse
    {
        /// <summary>
        /// The stream bit rate for the audio track.
        /// </summary>
        public readonly int BitRate;
        /// <summary>
        /// The DASH specific setting for the audio track.
        /// </summary>
        public readonly Outputs.DashSettingsResponse? DashSettings;
        /// <summary>
        /// The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The file name to the source file. This file is located in the storage container of the asset.
        /// </summary>
        public readonly string? FileName;
        /// <summary>
        /// The HLS specific setting for the audio track.
        /// </summary>
        public readonly Outputs.HlsSettingsResponse? HlsSettings;
        /// <summary>
        /// The RFC5646 language code for the audio track.
        /// </summary>
        public readonly string? LanguageCode;
        /// <summary>
        /// The MPEG-4 audio track ID for the audio track.
        /// </summary>
        public readonly int? Mpeg4TrackId;
        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.Media.AudioTrack'.
        /// </summary>
        public readonly string OdataType;

        [OutputConstructor]
        private AudioTrackResponse(
            int bitRate,

            Outputs.DashSettingsResponse? dashSettings,

            string? displayName,

            string? fileName,

            Outputs.HlsSettingsResponse? hlsSettings,

            string? languageCode,

            int? mpeg4TrackId,

            string odataType)
        {
            BitRate = bitRate;
            DashSettings = dashSettings;
            DisplayName = displayName;
            FileName = fileName;
            HlsSettings = hlsSettings;
            LanguageCode = languageCode;
            Mpeg4TrackId = mpeg4TrackId;
            OdataType = odataType;
        }
    }
}
