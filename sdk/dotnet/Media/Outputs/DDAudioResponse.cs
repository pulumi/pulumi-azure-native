// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.Outputs
{

    /// <summary>
    /// Describes Dolby Digital Audio Codec (AC3) audio encoding settings. The current implementation for Dolby Digital Audio support are: Audio channel numbers at 1((mono), 2(stereo), 6(5.1side); Audio sampling frequency rates at: 32K/44.1K/48K Hz; Audio bitrate values as AC3 specification supports: 32000, 40000, 48000, 56000, 64000, 80000, 96000, 112000, 128000, 160000, 192000, 224000, 256000, 320000, 384000, 448000, 512000, 576000, 640000 bps.
    /// </summary>
    [OutputType]
    public sealed class DDAudioResponse
    {
        /// <summary>
        /// The bitrate, in bits per second, of the output encoded audio.
        /// </summary>
        public readonly int? Bitrate;
        /// <summary>
        /// The number of channels in the audio.
        /// </summary>
        public readonly int? Channels;
        /// <summary>
        /// An optional label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.Media.DDAudio'.
        /// </summary>
        public readonly string OdataType;
        /// <summary>
        /// The sampling rate to use for encoding in hertz.
        /// </summary>
        public readonly int? SamplingRate;

        [OutputConstructor]
        private DDAudioResponse(
            int? bitrate,

            int? channels,

            string? label,

            string odataType,

            int? samplingRate)
        {
            Bitrate = bitrate;
            Channels = channels;
            Label = label;
            OdataType = odataType;
            SamplingRate = samplingRate;
        }
    }
}
