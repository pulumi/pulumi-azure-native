// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media
{
    public static class ListMediaServiceStreamingLocatorContentKeys
    {
        public static Task<ListMediaServiceStreamingLocatorContentKeysResult> InvokeAsync(ListMediaServiceStreamingLocatorContentKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListMediaServiceStreamingLocatorContentKeysResult>("azurerm:media:listMediaServiceStreamingLocatorContentKeys", args ?? new ListMediaServiceStreamingLocatorContentKeysArgs(), options.WithVersion());
    }


    public sealed class ListMediaServiceStreamingLocatorContentKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Streaming Locator name.
        /// </summary>
        [Input("streamingLocatorName", required: true)]
        public string StreamingLocatorName { get; set; } = null!;

        public ListMediaServiceStreamingLocatorContentKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListMediaServiceStreamingLocatorContentKeysResult
    {
        /// <summary>
        /// ContentKeys used by current Streaming Locator
        /// </summary>
        public readonly ImmutableArray<Outputs.StreamingLocatorContentKeyResponseResult> ContentKeys;

        [OutputConstructor]
        private ListMediaServiceStreamingLocatorContentKeysResult(ImmutableArray<Outputs.StreamingLocatorContentKeyResponseResult> contentKeys)
        {
            ContentKeys = contentKeys;
        }
    }
}
