// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media
{
    public static class GetContentKeyPolicy
    {
        /// <summary>
        /// Get the details of a Content Key Policy in the Media Services account
        /// 
        /// Uses Azure REST API version 2023-01-01.
        /// 
        /// Other available API versions: 2018-03-30-preview, 2018-06-01-preview, 2018-07-01, 2020-05-01, 2021-06-01, 2021-11-01, 2022-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native media [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetContentKeyPolicyResult> InvokeAsync(GetContentKeyPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContentKeyPolicyResult>("azure-native:media:getContentKeyPolicy", args ?? new GetContentKeyPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of a Content Key Policy in the Media Services account
        /// 
        /// Uses Azure REST API version 2023-01-01.
        /// 
        /// Other available API versions: 2018-03-30-preview, 2018-06-01-preview, 2018-07-01, 2020-05-01, 2021-06-01, 2021-11-01, 2022-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native media [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetContentKeyPolicyResult> Invoke(GetContentKeyPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentKeyPolicyResult>("azure-native:media:getContentKeyPolicy", args ?? new GetContentKeyPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of a Content Key Policy in the Media Services account
        /// 
        /// Uses Azure REST API version 2023-01-01.
        /// 
        /// Other available API versions: 2018-03-30-preview, 2018-06-01-preview, 2018-07-01, 2020-05-01, 2021-06-01, 2021-11-01, 2022-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native media [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetContentKeyPolicyResult> Invoke(GetContentKeyPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentKeyPolicyResult>("azure-native:media:getContentKeyPolicy", args ?? new GetContentKeyPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContentKeyPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Content Key Policy name.
        /// </summary>
        [Input("contentKeyPolicyName", required: true)]
        public string ContentKeyPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetContentKeyPolicyArgs()
        {
        }
        public static new GetContentKeyPolicyArgs Empty => new GetContentKeyPolicyArgs();
    }

    public sealed class GetContentKeyPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Content Key Policy name.
        /// </summary>
        [Input("contentKeyPolicyName", required: true)]
        public Input<string> ContentKeyPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetContentKeyPolicyInvokeArgs()
        {
        }
        public static new GetContentKeyPolicyInvokeArgs Empty => new GetContentKeyPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetContentKeyPolicyResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The creation date of the Policy
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// A description for the Policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last modified date of the Policy
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Key Policy options.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContentKeyPolicyOptionResponse> Options;
        /// <summary>
        /// The legacy Policy ID.
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContentKeyPolicyResult(
            string azureApiVersion,

            string created,

            string? description,

            string id,

            string lastModified,

            string name,

            ImmutableArray<Outputs.ContentKeyPolicyOptionResponse> options,

            string policyId,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Created = created;
            Description = description;
            Id = id;
            LastModified = lastModified;
            Name = name;
            Options = options;
            PolicyId = policyId;
            SystemData = systemData;
            Type = type;
        }
    }
}
