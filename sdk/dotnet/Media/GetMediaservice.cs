// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media
{
    public static class GetMediaservice
    {
        public static Task<GetMediaserviceResult> InvokeAsync(GetMediaserviceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMediaserviceResult>("azurerm:media:getMediaservice", args ?? new GetMediaserviceArgs(), options.WithVersion());
    }


    public sealed class GetMediaserviceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMediaserviceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMediaserviceResult
    {
        /// <summary>
        /// The Managed Identity for the Media Services account.
        /// </summary>
        public readonly Outputs.MediaServiceIdentityResponseResult? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource properties.
        /// </summary>
        public readonly Outputs.MediaServicePropertiesResponseResult Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMediaserviceResult(
            Outputs.MediaServiceIdentityResponseResult? identity,

            string location,

            string name,

            Outputs.MediaServicePropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
