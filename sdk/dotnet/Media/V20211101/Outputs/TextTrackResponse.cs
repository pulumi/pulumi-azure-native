// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20211101.Outputs
{

    /// <summary>
    /// Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks.
    /// </summary>
    [OutputType]
    public sealed class TextTrackResponse
    {
        /// <summary>
        /// The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The file name to the source file. This file is located in the storage container of the asset.
        /// </summary>
        public readonly string? FileName;
        /// <summary>
        /// The HLS specific setting for the text track.
        /// </summary>
        public readonly Outputs.HlsSettingsResponse? HlsSettings;
        /// <summary>
        /// The RFC5646 language code for the text track.
        /// </summary>
        public readonly string LanguageCode;
        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.Media.TextTrack'.
        /// </summary>
        public readonly string OdataType;
        /// <summary>
        /// When PlayerVisibility is set to "Visible", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to "Hidden", the text will not be available to the client. The default value is "Visible".
        /// </summary>
        public readonly string? PlayerVisibility;

        [OutputConstructor]
        private TextTrackResponse(
            string? displayName,

            string? fileName,

            Outputs.HlsSettingsResponse? hlsSettings,

            string languageCode,

            string odataType,

            string? playerVisibility)
        {
            DisplayName = displayName;
            FileName = fileName;
            HlsSettings = hlsSettings;
            LanguageCode = languageCode;
            OdataType = odataType;
            PlayerVisibility = playerVisibility;
        }
    }
}
