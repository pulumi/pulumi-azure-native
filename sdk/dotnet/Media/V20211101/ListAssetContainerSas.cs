// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20211101
{
    public static class ListAssetContainerSas
    {
        /// <summary>
        /// Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.
        /// </summary>
        public static Task<ListAssetContainerSasResult> InvokeAsync(ListAssetContainerSasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAssetContainerSasResult>("azure-native:media/v20211101:listAssetContainerSas", args ?? new ListAssetContainerSasArgs(), options.WithDefaults());

        /// <summary>
        /// Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.
        /// </summary>
        public static Output<ListAssetContainerSasResult> Invoke(ListAssetContainerSasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAssetContainerSasResult>("azure-native:media/v20211101:listAssetContainerSas", args ?? new ListAssetContainerSasInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAssetContainerSasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Asset name.
        /// </summary>
        [Input("assetName", required: true)]
        public string AssetName { get; set; } = null!;

        /// <summary>
        /// The SAS URL expiration time.  This must be less than 24 hours from the current time.
        /// </summary>
        [Input("expiryTime")]
        public string? ExpiryTime { get; set; }

        /// <summary>
        /// The permissions to set on the SAS URL.
        /// </summary>
        [Input("permissions")]
        public Union<string, Pulumi.AzureNative.Media.V20211101.AssetContainerPermission>? Permissions { get; set; }

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListAssetContainerSasArgs()
        {
        }
        public static new ListAssetContainerSasArgs Empty => new ListAssetContainerSasArgs();
    }

    public sealed class ListAssetContainerSasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Asset name.
        /// </summary>
        [Input("assetName", required: true)]
        public Input<string> AssetName { get; set; } = null!;

        /// <summary>
        /// The SAS URL expiration time.  This must be less than 24 hours from the current time.
        /// </summary>
        [Input("expiryTime")]
        public Input<string>? ExpiryTime { get; set; }

        /// <summary>
        /// The permissions to set on the SAS URL.
        /// </summary>
        [Input("permissions")]
        public InputUnion<string, Pulumi.AzureNative.Media.V20211101.AssetContainerPermission>? Permissions { get; set; }

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListAssetContainerSasInvokeArgs()
        {
        }
        public static new ListAssetContainerSasInvokeArgs Empty => new ListAssetContainerSasInvokeArgs();
    }


    [OutputType]
    public sealed class ListAssetContainerSasResult
    {
        /// <summary>
        /// The list of Asset container SAS URLs.
        /// </summary>
        public readonly ImmutableArray<string> AssetContainerSasUrls;

        [OutputConstructor]
        private ListAssetContainerSasResult(ImmutableArray<string> assetContainerSasUrls)
        {
            AssetContainerSasUrls = assetContainerSasUrls;
        }
    }
}
