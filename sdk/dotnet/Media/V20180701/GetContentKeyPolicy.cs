// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20180701
{
    public static class GetContentKeyPolicy
    {
        /// <summary>
        /// A Content Key Policy resource.
        /// </summary>
        public static Task<GetContentKeyPolicyResult> InvokeAsync(GetContentKeyPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetContentKeyPolicyResult>("azure-native:media/v20180701:getContentKeyPolicy", args ?? new GetContentKeyPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// A Content Key Policy resource.
        /// </summary>
        public static Output<GetContentKeyPolicyResult> Invoke(GetContentKeyPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetContentKeyPolicyResult>("azure-native:media/v20180701:getContentKeyPolicy", args ?? new GetContentKeyPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContentKeyPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Content Key Policy name.
        /// </summary>
        [Input("contentKeyPolicyName", required: true)]
        public string ContentKeyPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetContentKeyPolicyArgs()
        {
        }
        public static new GetContentKeyPolicyArgs Empty => new GetContentKeyPolicyArgs();
    }

    public sealed class GetContentKeyPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Content Key Policy name.
        /// </summary>
        [Input("contentKeyPolicyName", required: true)]
        public Input<string> ContentKeyPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetContentKeyPolicyInvokeArgs()
        {
        }
        public static new GetContentKeyPolicyInvokeArgs Empty => new GetContentKeyPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetContentKeyPolicyResult
    {
        /// <summary>
        /// The creation date of the Policy
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// A description for the Policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last modified date of the Policy
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Key Policy options.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContentKeyPolicyOptionResponse> Options;
        /// <summary>
        /// The legacy Policy ID.
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContentKeyPolicyResult(
            string created,

            string? description,

            string id,

            string lastModified,

            string name,

            ImmutableArray<Outputs.ContentKeyPolicyOptionResponse> options,

            string policyId,

            string type)
        {
            Created = created;
            Description = description;
            Id = id;
            LastModified = lastModified;
            Name = name;
            Options = options;
            PolicyId = policyId;
            Type = type;
        }
    }
}
