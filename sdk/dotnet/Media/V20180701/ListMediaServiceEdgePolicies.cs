// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20180701
{
    public static class ListMediaServiceEdgePolicies
    {
        public static Task<ListMediaServiceEdgePoliciesResult> InvokeAsync(ListMediaServiceEdgePoliciesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListMediaServiceEdgePoliciesResult>("azure-native:media/v20180701:listMediaServiceEdgePolicies", args ?? new ListMediaServiceEdgePoliciesArgs(), options.WithDefaults());

        public static Output<ListMediaServiceEdgePoliciesResult> Invoke(ListMediaServiceEdgePoliciesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListMediaServiceEdgePoliciesResult>("azure-native:media/v20180701:listMediaServiceEdgePolicies", args ?? new ListMediaServiceEdgePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListMediaServiceEdgePoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the edge device.
        /// </summary>
        [Input("deviceId")]
        public string? DeviceId { get; set; }

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListMediaServiceEdgePoliciesArgs()
        {
        }
        public static new ListMediaServiceEdgePoliciesArgs Empty => new ListMediaServiceEdgePoliciesArgs();
    }

    public sealed class ListMediaServiceEdgePoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the edge device.
        /// </summary>
        [Input("deviceId")]
        public Input<string>? DeviceId { get; set; }

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListMediaServiceEdgePoliciesInvokeArgs()
        {
        }
        public static new ListMediaServiceEdgePoliciesInvokeArgs Empty => new ListMediaServiceEdgePoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class ListMediaServiceEdgePoliciesResult
    {
        public readonly Outputs.EdgeUsageDataCollectionPolicyResponse? UsageDataCollectionPolicy;

        [OutputConstructor]
        private ListMediaServiceEdgePoliciesResult(Outputs.EdgeUsageDataCollectionPolicyResponse? usageDataCollectionPolicy)
        {
            UsageDataCollectionPolicy = usageDataCollectionPolicy;
        }
    }
}
