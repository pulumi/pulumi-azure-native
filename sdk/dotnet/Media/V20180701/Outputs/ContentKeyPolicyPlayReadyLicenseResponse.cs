// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Media.V20180701.Outputs
{

    [OutputType]
    public sealed class ContentKeyPolicyPlayReadyLicenseResponse
    {
        /// <summary>
        /// A flag indicating whether test devices can use the license.
        /// </summary>
        public readonly bool AllowTestDevices;
        /// <summary>
        /// The begin date of license
        /// </summary>
        public readonly string? BeginDate;
        /// <summary>
        /// The content key location.
        /// </summary>
        public readonly Union<Outputs.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeaderResponse, Outputs.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifierResponse> ContentKeyLocation;
        /// <summary>
        /// The PlayReady content type.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// The expiration date of license.
        /// </summary>
        public readonly string? ExpirationDate;
        /// <summary>
        /// The grace period of license.
        /// </summary>
        public readonly string? GracePeriod;
        /// <summary>
        /// The license type.
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// The license PlayRight
        /// </summary>
        public readonly Outputs.ContentKeyPolicyPlayReadyPlayRightResponse? PlayRight;
        /// <summary>
        /// The relative begin date of license.
        /// </summary>
        public readonly string? RelativeBeginDate;
        /// <summary>
        /// The relative expiration date of license.
        /// </summary>
        public readonly string? RelativeExpirationDate;

        [OutputConstructor]
        private ContentKeyPolicyPlayReadyLicenseResponse(
            bool allowTestDevices,

            string? beginDate,

            Union<Outputs.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeaderResponse, Outputs.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifierResponse> contentKeyLocation,

            string contentType,

            string? expirationDate,

            string? gracePeriod,

            string licenseType,

            Outputs.ContentKeyPolicyPlayReadyPlayRightResponse? playRight,

            string? relativeBeginDate,

            string? relativeExpirationDate)
        {
            AllowTestDevices = allowTestDevices;
            BeginDate = beginDate;
            ContentKeyLocation = contentKeyLocation;
            ContentType = contentType;
            ExpirationDate = expirationDate;
            GracePeriod = gracePeriod;
            LicenseType = licenseType;
            PlayRight = playRight;
            RelativeBeginDate = relativeBeginDate;
            RelativeExpirationDate = relativeExpirationDate;
        }
    }
}
