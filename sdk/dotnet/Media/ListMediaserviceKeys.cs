// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media
{
    public static class ListMediaserviceKeys
    {
        public static Task<ListMediaserviceKeysResult> InvokeAsync(ListMediaserviceKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListMediaserviceKeysResult>("azurerm:media:listMediaserviceKeys", args ?? new ListMediaserviceKeysArgs(), options.WithVersion());
    }


    public sealed class ListMediaserviceKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Media Service.
        /// </summary>
        [Input("mediaServiceName", required: true)]
        public string MediaServiceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListMediaserviceKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListMediaserviceKeysResult
    {
        /// <summary>
        /// The primary authorization endpoint.
        /// </summary>
        public readonly string? PrimaryAuthEndpoint;
        /// <summary>
        /// The primary key for the Media Service resource.
        /// </summary>
        public readonly string? PrimaryKey;
        /// <summary>
        /// The authorization scope.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The secondary authorization endpoint.
        /// </summary>
        public readonly string? SecondaryAuthEndpoint;
        /// <summary>
        /// The secondary key for the Media Service resource.
        /// </summary>
        public readonly string? SecondaryKey;

        [OutputConstructor]
        private ListMediaserviceKeysResult(
            string? primaryAuthEndpoint,

            string? primaryKey,

            string? scope,

            string? secondaryAuthEndpoint,

            string? secondaryKey)
        {
            PrimaryAuthEndpoint = primaryAuthEndpoint;
            PrimaryKey = primaryKey;
            Scope = scope;
            SecondaryAuthEndpoint = secondaryAuthEndpoint;
            SecondaryKey = secondaryKey;
        }
    }
}
