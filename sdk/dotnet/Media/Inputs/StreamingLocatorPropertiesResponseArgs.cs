// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media.Inputs
{

    /// <summary>
    /// Properties of the Streaming Locator.
    /// </summary>
    public sealed class StreamingLocatorPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alternative Media ID of this Streaming Locator
        /// </summary>
        [Input("alternativeMediaId")]
        public Input<string>? AlternativeMediaId { get; set; }

        /// <summary>
        /// Asset Name
        /// </summary>
        [Input("assetName", required: true)]
        public Input<string> AssetName { get; set; } = null!;

        [Input("contentKeys")]
        private InputList<Inputs.StreamingLocatorContentKeyResponseArgs>? _contentKeys;

        /// <summary>
        /// The ContentKeys used by this Streaming Locator.
        /// </summary>
        public InputList<Inputs.StreamingLocatorContentKeyResponseArgs> ContentKeys
        {
            get => _contentKeys ?? (_contentKeys = new InputList<Inputs.StreamingLocatorContentKeyResponseArgs>());
            set => _contentKeys = value;
        }

        /// <summary>
        /// The creation time of the Streaming Locator.
        /// </summary>
        [Input("created", required: true)]
        public Input<string> Created { get; set; } = null!;

        /// <summary>
        /// Name of the default ContentKeyPolicy used by this Streaming Locator.
        /// </summary>
        [Input("defaultContentKeyPolicyName")]
        public Input<string>? DefaultContentKeyPolicyName { get; set; }

        /// <summary>
        /// The end time of the Streaming Locator.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("filters")]
        private InputList<string>? _filters;

        /// <summary>
        /// A list of asset or account filters which apply to this streaming locator
        /// </summary>
        public InputList<string> Filters
        {
            get => _filters ?? (_filters = new InputList<string>());
            set => _filters = value;
        }

        /// <summary>
        /// The start time of the Streaming Locator.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The StreamingLocatorId of the Streaming Locator.
        /// </summary>
        [Input("streamingLocatorId")]
        public Input<string>? StreamingLocatorId { get; set; }

        /// <summary>
        /// Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
        /// </summary>
        [Input("streamingPolicyName", required: true)]
        public Input<string> StreamingPolicyName { get; set; } = null!;

        public StreamingLocatorPropertiesResponseArgs()
        {
        }
    }
}
