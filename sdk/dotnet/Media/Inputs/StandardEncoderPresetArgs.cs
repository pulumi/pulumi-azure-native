// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.Inputs
{

    /// <summary>
    /// Describes all the settings to be used when encoding the input video with the Standard Encoder.
    /// </summary>
    public sealed class StandardEncoderPresetArgs : global::Pulumi.ResourceArgs
    {
        [Input("codecs", required: true)]
        private InputList<object>? _codecs;

        /// <summary>
        /// The list of codecs to be used when encoding the input video.
        /// </summary>
        public InputList<object> Codecs
        {
            get => _codecs ?? (_codecs = new InputList<object>());
            set => _codecs = value;
        }

        [Input("experimentalOptions")]
        private InputMap<string>? _experimentalOptions;

        /// <summary>
        /// Dictionary containing key value pairs for parameters not exposed in the preset itself
        /// </summary>
        public InputMap<string> ExperimentalOptions
        {
            get => _experimentalOptions ?? (_experimentalOptions = new InputMap<string>());
            set => _experimentalOptions = value;
        }

        /// <summary>
        /// One or more filtering operations that are applied to the input media before encoding.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.FiltersArgs>? Filters { get; set; }

        [Input("formats", required: true)]
        private InputList<object>? _formats;

        /// <summary>
        /// The list of outputs to be produced by the encoder.
        /// </summary>
        public InputList<object> Formats
        {
            get => _formats ?? (_formats = new InputList<object>());
            set => _formats = value;
        }

        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.Media.StandardEncoderPreset'.
        /// </summary>
        [Input("odataType", required: true)]
        public Input<string> OdataType { get; set; } = null!;

        public StandardEncoderPresetArgs()
        {
        }
        public static new StandardEncoderPresetArgs Empty => new StandardEncoderPresetArgs();
    }
}
