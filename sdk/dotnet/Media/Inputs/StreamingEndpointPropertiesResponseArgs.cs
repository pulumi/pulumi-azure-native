// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media.Inputs
{

    /// <summary>
    /// The StreamingEndpoint properties.
    /// </summary>
    public sealed class StreamingEndpointPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access control definition of the StreamingEndpoint.
        /// </summary>
        [Input("accessControl")]
        public Input<Inputs.StreamingEndpointAccessControlResponseArgs>? AccessControl { get; set; }

        /// <summary>
        /// The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time.
        /// </summary>
        [Input("availabilitySetName")]
        public Input<string>? AvailabilitySetName { get; set; }

        /// <summary>
        /// The CDN enabled flag.
        /// </summary>
        [Input("cdnEnabled")]
        public Input<bool>? CdnEnabled { get; set; }

        /// <summary>
        /// The CDN profile name.
        /// </summary>
        [Input("cdnProfile")]
        public Input<string>? CdnProfile { get; set; }

        /// <summary>
        /// The CDN provider name.
        /// </summary>
        [Input("cdnProvider")]
        public Input<string>? CdnProvider { get; set; }

        /// <summary>
        /// The exact time the StreamingEndpoint was created.
        /// </summary>
        [Input("created", required: true)]
        public Input<string> Created { get; set; } = null!;

        /// <summary>
        /// The StreamingEndpoint access policies.
        /// </summary>
        [Input("crossSiteAccessPolicies")]
        public Input<Inputs.CrossSiteAccessPoliciesResponseArgs>? CrossSiteAccessPolicies { get; set; }

        [Input("customHostNames")]
        private InputList<string>? _customHostNames;

        /// <summary>
        /// The custom host names of the StreamingEndpoint
        /// </summary>
        public InputList<string> CustomHostNames
        {
            get => _customHostNames ?? (_customHostNames = new InputList<string>());
            set => _customHostNames = value;
        }

        /// <summary>
        /// The StreamingEndpoint description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The free trial expiration time.
        /// </summary>
        [Input("freeTrialEndTime", required: true)]
        public Input<string> FreeTrialEndTime { get; set; } = null!;

        /// <summary>
        /// The StreamingEndpoint host name.
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        /// <summary>
        /// The exact time the StreamingEndpoint was last modified.
        /// </summary>
        [Input("lastModified", required: true)]
        public Input<string> LastModified { get; set; } = null!;

        /// <summary>
        /// Max cache age
        /// </summary>
        [Input("maxCacheAge")]
        public Input<int>? MaxCacheAge { get; set; }

        /// <summary>
        /// The provisioning state of the StreamingEndpoint.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The resource state of the StreamingEndpoint.
        /// </summary>
        [Input("resourceState", required: true)]
        public Input<string> ResourceState { get; set; } = null!;

        /// <summary>
        /// The number of scale units.  Use the Scale operation to adjust this value.
        /// </summary>
        [Input("scaleUnits", required: true)]
        public Input<int> ScaleUnits { get; set; } = null!;

        public StreamingEndpointPropertiesResponseArgs()
        {
        }
    }
}
