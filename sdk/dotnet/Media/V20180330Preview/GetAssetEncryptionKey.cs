// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Media.V20180330Preview
{
    public static class GetAssetEncryptionKey
    {
        public static Task<GetAssetEncryptionKeyResult> InvokeAsync(GetAssetEncryptionKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAssetEncryptionKeyResult>("azure-nextgen:media/v20180330preview:getAssetEncryptionKey", args ?? new GetAssetEncryptionKeyArgs(), options.WithVersion());
    }


    public sealed class GetAssetEncryptionKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Asset name.
        /// </summary>
        [Input("assetName", required: true)]
        public string AssetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAssetEncryptionKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAssetEncryptionKeyResult
    {
        /// <summary>
        /// The Asset storage encryption key.
        /// </summary>
        public readonly string? StorageEncryptionKey;

        [OutputConstructor]
        private GetAssetEncryptionKeyResult(string? storageEncryptionKey)
        {
            StorageEncryptionKey = storageEncryptionKey;
        }
    }
}
