// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Media.V20180601Preview.Outputs
{

    [OutputType]
    public sealed class LiveEventPreviewResponseResult
    {
        /// <summary>
        /// The access control for LiveEvent preview.
        /// </summary>
        public readonly Outputs.LiveEventPreviewAccessControlResponseResult? AccessControl;
        /// <summary>
        /// An Alternative Media Identifier associated with the preview url.  This identifier can be used to distinguish the preview of different live events for authorization purposes in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.
        /// </summary>
        public readonly string? AlternativeMediaId;
        /// <summary>
        /// The endpoints for preview.
        /// </summary>
        public readonly ImmutableArray<Outputs.LiveEventEndpointResponseResult> Endpoints;
        /// <summary>
        /// The preview locator Guid.
        /// </summary>
        public readonly string? PreviewLocator;
        /// <summary>
        /// The name of streaming policy used for LiveEvent preview
        /// </summary>
        public readonly string? StreamingPolicyName;

        [OutputConstructor]
        private LiveEventPreviewResponseResult(
            Outputs.LiveEventPreviewAccessControlResponseResult? accessControl,

            string? alternativeMediaId,

            ImmutableArray<Outputs.LiveEventEndpointResponseResult> endpoints,

            string? previewLocator,

            string? streamingPolicyName)
        {
            AccessControl = accessControl;
            AlternativeMediaId = alternativeMediaId;
            Endpoints = endpoints;
            PreviewLocator = previewLocator;
            StreamingPolicyName = streamingPolicyName;
        }
    }
}
