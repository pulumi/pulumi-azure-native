// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20190901Preview
{
    public static class GetMediaGraph
    {
        /// <summary>
        /// The Media Graph.
        /// </summary>
        public static Task<GetMediaGraphResult> InvokeAsync(GetMediaGraphArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMediaGraphResult>("azure-native:media/v20190901preview:getMediaGraph", args ?? new GetMediaGraphArgs(), options.WithDefaults());

        /// <summary>
        /// The Media Graph.
        /// </summary>
        public static Output<GetMediaGraphResult> Invoke(GetMediaGraphInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMediaGraphResult>("azure-native:media/v20190901preview:getMediaGraph", args ?? new GetMediaGraphInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMediaGraphArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Media Graph name.
        /// </summary>
        [Input("mediaGraphName", required: true)]
        public string MediaGraphName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMediaGraphArgs()
        {
        }
        public static new GetMediaGraphArgs Empty => new GetMediaGraphArgs();
    }

    public sealed class GetMediaGraphInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Media Graph name.
        /// </summary>
        [Input("mediaGraphName", required: true)]
        public Input<string> MediaGraphName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMediaGraphInvokeArgs()
        {
        }
        public static new GetMediaGraphInvokeArgs Empty => new GetMediaGraphInvokeArgs();
    }


    [OutputType]
    public sealed class GetMediaGraphResult
    {
        /// <summary>
        /// Date the Media Graph was created
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Media Graph  description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Date the Media Graph was last modified
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Media Graph sinks
        /// </summary>
        public readonly ImmutableArray<Outputs.MediaGraphAssetSinkResponse> Sinks;
        /// <summary>
        /// Media Graph sources
        /// </summary>
        public readonly ImmutableArray<Outputs.MediaGraphRtspSourceResponse> Sources;
        /// <summary>
        /// Media Graph state
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMediaGraphResult(
            string created,

            string? description,

            string id,

            string lastModified,

            string name,

            ImmutableArray<Outputs.MediaGraphAssetSinkResponse> sinks,

            ImmutableArray<Outputs.MediaGraphRtspSourceResponse> sources,

            string state,

            string type)
        {
            Created = created;
            Description = description;
            Id = id;
            LastModified = lastModified;
            Name = name;
            Sinks = sinks;
            Sources = sources;
            State = state;
            Type = type;
        }
    }
}
