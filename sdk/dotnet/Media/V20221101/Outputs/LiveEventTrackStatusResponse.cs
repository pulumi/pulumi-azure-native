// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20221101.Outputs
{

    /// <summary>
    /// The live event track status.
    /// </summary>
    [OutputType]
    public sealed class LiveEventTrackStatusResponse
    {
        /// <summary>
        /// Expected bitrate for this track.
        /// </summary>
        public readonly double? ExpectedBitrate;
        /// <summary>
        /// Average incoming bitrate for last 20 seconds when live event is running.
        /// </summary>
        public readonly double? IncomingBitrate;
        /// <summary>
        /// Current ingest drift value in seconds for last 1 minute.
        /// </summary>
        public readonly string? IngestDrift;
        /// <summary>
        /// Total number of timed metadata request received.
        /// </summary>
        public readonly double? RequestReceived;
        /// <summary>
        /// Total number of successful timed metadata request received.
        /// </summary>
        public readonly double? RequestSucceeded;
        /// <summary>
        /// Track Id.
        /// </summary>
        public readonly string? TrackId;

        [OutputConstructor]
        private LiveEventTrackStatusResponse(
            double? expectedBitrate,

            double? incomingBitrate,

            string? ingestDrift,

            double? requestReceived,

            double? requestSucceeded,

            string? trackId)
        {
            ExpectedBitrate = expectedBitrate;
            IncomingBitrate = incomingBitrate;
            IngestDrift = ingestDrift;
            RequestReceived = requestReceived;
            RequestSucceeded = requestSucceeded;
            TrackId = trackId;
        }
    }
}
