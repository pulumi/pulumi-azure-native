// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Media.V20221101.Outputs
{

    /// <summary>
    /// The live event stream event.
    /// </summary>
    [OutputType]
    public sealed class LiveEventStreamEventResponse
    {
        /// <summary>
        /// Event data based on event type.
        /// </summary>
        public readonly Outputs.LiveEventStreamEventDataResponse? Data;
        /// <summary>
        /// Event level.
        /// </summary>
        public readonly string? EventLevel;
        /// <summary>
        /// The time event raised.
        /// </summary>
        public readonly string? EventTime;
        /// <summary>
        /// The type of the stream event. Format: StreamEvent/{eventType}
        /// </summary>
        public readonly string? EventType;

        [OutputConstructor]
        private LiveEventStreamEventResponse(
            Outputs.LiveEventStreamEventDataResponse? data,

            string? eventLevel,

            string? eventTime,

            string? eventType)
        {
            Data = data;
            EventLevel = eventLevel;
            EventTime = eventTime;
            EventType = eventType;
        }
    }
}
