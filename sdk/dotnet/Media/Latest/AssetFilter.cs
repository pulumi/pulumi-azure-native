// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Media.Latest
{
    /// <summary>
    /// An Asset Filter.
    /// </summary>
    public partial class AssetFilter : Pulumi.CustomResource
    {
        /// <summary>
        /// The first quality.
        /// </summary>
        [Output("firstQuality")]
        public Output<Outputs.FirstQualityResponse?> FirstQuality { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The presentation time range.
        /// </summary>
        [Output("presentationTimeRange")]
        public Output<Outputs.PresentationTimeRangeResponse?> PresentationTimeRange { get; private set; } = null!;

        /// <summary>
        /// The tracks selection conditions.
        /// </summary>
        [Output("tracks")]
        public Output<ImmutableArray<Outputs.FilterTrackSelectionResponse>> Tracks { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AssetFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssetFilter(string name, AssetFilterArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:media/latest:AssetFilter", name, args ?? new AssetFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssetFilter(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:media/latest:AssetFilter", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:media/v20180701:AssetFilter"},
                    new Pulumi.Alias { Type = "azure-nextgen:media/v20200501:AssetFilter"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssetFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssetFilter Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AssetFilter(name, id, options);
        }
    }

    public sealed class AssetFilterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Media Services account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Asset name.
        /// </summary>
        [Input("assetName", required: true)]
        public Input<string> AssetName { get; set; } = null!;

        /// <summary>
        /// The Asset Filter name
        /// </summary>
        [Input("filterName", required: true)]
        public Input<string> FilterName { get; set; } = null!;

        /// <summary>
        /// The first quality.
        /// </summary>
        [Input("firstQuality")]
        public Input<Inputs.FirstQualityArgs>? FirstQuality { get; set; }

        /// <summary>
        /// The presentation time range.
        /// </summary>
        [Input("presentationTimeRange")]
        public Input<Inputs.PresentationTimeRangeArgs>? PresentationTimeRange { get; set; }

        /// <summary>
        /// The name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tracks")]
        private InputList<Inputs.FilterTrackSelectionArgs>? _tracks;

        /// <summary>
        /// The tracks selection conditions.
        /// </summary>
        public InputList<Inputs.FilterTrackSelectionArgs> Tracks
        {
            get => _tracks ?? (_tracks = new InputList<Inputs.FilterTrackSelectionArgs>());
            set => _tracks = value;
        }

        public AssetFilterArgs()
        {
        }
    }
}
