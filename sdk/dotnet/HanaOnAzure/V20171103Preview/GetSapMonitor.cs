// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HanaOnAzure.V20171103Preview
{
    public static class GetSapMonitor
    {
        public static Task<GetSapMonitorResult> InvokeAsync(GetSapMonitorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSapMonitorResult>("azure-nextgen:hanaonazure/v20171103preview:getSapMonitor", args ?? new GetSapMonitorArgs(), options.WithVersion());
    }


    public sealed class GetSapMonitorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("sapMonitorName", required: true)]
        public string SapMonitorName { get; set; } = null!;

        public GetSapMonitorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSapMonitorResult
    {
        /// <summary>
        /// The value indicating whether to send analytics to Microsoft
        /// </summary>
        public readonly bool? EnableCustomerAnalytics;
        /// <summary>
        /// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
        /// </summary>
        public readonly string? HanaDbCredentialsMsiId;
        /// <summary>
        /// Database name of the HANA instance.
        /// </summary>
        public readonly string? HanaDbName;
        /// <summary>
        /// Database password of the HANA instance.
        /// </summary>
        public readonly string? HanaDbPassword;
        /// <summary>
        /// KeyVault URL link to the password for the HANA database.
        /// </summary>
        public readonly string? HanaDbPasswordKeyVaultUrl;
        /// <summary>
        /// Database port of the HANA instance.
        /// </summary>
        public readonly int? HanaDbSqlPort;
        /// <summary>
        /// Database username of the HANA instance.
        /// </summary>
        public readonly string? HanaDbUsername;
        /// <summary>
        /// Hostname of the HANA instance.
        /// </summary>
        public readonly string? HanaHostname;
        /// <summary>
        /// Specifies the SAP monitor unique ID.
        /// </summary>
        public readonly string? HanaSubnet;
        /// <summary>
        /// Key Vault ID containing customer's HANA credentials.
        /// </summary>
        public readonly string? KeyVaultId;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The ARM ID of the Log Analytics Workspace that is used for monitoring
        /// </summary>
        public readonly string? LogAnalyticsWorkspaceArmId;
        /// <summary>
        /// The workspace ID of the log analytics workspace to be used for monitoring
        /// </summary>
        public readonly string? LogAnalyticsWorkspaceId;
        /// <summary>
        /// The shared key of the log analytics workspace that is used for monitoring
        /// </summary>
        public readonly string? LogAnalyticsWorkspaceSharedKey;
        /// <summary>
        /// The name of the resource group the SAP Monitor resources get deployed into.
        /// </summary>
        public readonly string ManagedResourceGroupName;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of provisioning of the HanaInstance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSapMonitorResult(
            bool? enableCustomerAnalytics,

            string? hanaDbCredentialsMsiId,

            string? hanaDbName,

            string? hanaDbPassword,

            string? hanaDbPasswordKeyVaultUrl,

            int? hanaDbSqlPort,

            string? hanaDbUsername,

            string? hanaHostname,

            string? hanaSubnet,

            string? keyVaultId,

            string? location,

            string? logAnalyticsWorkspaceArmId,

            string? logAnalyticsWorkspaceId,

            string? logAnalyticsWorkspaceSharedKey,

            string managedResourceGroupName,

            string name,

            string provisioningState,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            EnableCustomerAnalytics = enableCustomerAnalytics;
            HanaDbCredentialsMsiId = hanaDbCredentialsMsiId;
            HanaDbName = hanaDbName;
            HanaDbPassword = hanaDbPassword;
            HanaDbPasswordKeyVaultUrl = hanaDbPasswordKeyVaultUrl;
            HanaDbSqlPort = hanaDbSqlPort;
            HanaDbUsername = hanaDbUsername;
            HanaHostname = hanaHostname;
            HanaSubnet = hanaSubnet;
            KeyVaultId = keyVaultId;
            Location = location;
            LogAnalyticsWorkspaceArmId = logAnalyticsWorkspaceArmId;
            LogAnalyticsWorkspaceId = logAnalyticsWorkspaceId;
            LogAnalyticsWorkspaceSharedKey = logAnalyticsWorkspaceSharedKey;
            ManagedResourceGroupName = managedResourceGroupName;
            Name = name;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
        }
    }
}
