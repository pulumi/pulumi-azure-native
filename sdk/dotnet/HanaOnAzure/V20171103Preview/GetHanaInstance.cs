// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HanaOnAzure.V20171103Preview
{
    public static class GetHanaInstance
    {
        public static Task<GetHanaInstanceResult> InvokeAsync(GetHanaInstanceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHanaInstanceResult>("azure-nextgen:hanaonazure/v20171103preview:getHanaInstance", args ?? new GetHanaInstanceArgs(), options.WithVersion());
    }


    public sealed class GetHanaInstanceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SAP HANA on Azure instance.
        /// </summary>
        [Input("hanaInstanceName", required: true)]
        public string HanaInstanceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHanaInstanceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHanaInstanceResult
    {
        /// <summary>
        /// Specifies the HANA instance unique ID.
        /// </summary>
        public readonly string HanaInstanceId;
        /// <summary>
        /// Specifies the hardware settings for the HANA instance.
        /// </summary>
        public readonly Outputs.HardwareProfileResponse? HardwareProfile;
        /// <summary>
        /// Hardware revision of a HANA instance
        /// </summary>
        public readonly string HwRevision;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the network settings for the HANA instance.
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// Specifies the operating system settings for the HANA instance.
        /// </summary>
        public readonly Outputs.OSProfileResponse? OsProfile;
        /// <summary>
        /// ARM ID of another HanaInstance that will share a network with this HanaInstance
        /// </summary>
        public readonly string? PartnerNodeId;
        /// <summary>
        /// Resource power state
        /// </summary>
        public readonly string PowerState;
        /// <summary>
        /// State of provisioning of the HanaInstance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource proximity placement group
        /// </summary>
        public readonly string ProximityPlacementGroup;
        /// <summary>
        /// Specifies the storage settings for the HANA instance disks.
        /// </summary>
        public readonly Outputs.StorageProfileResponse? StorageProfile;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHanaInstanceResult(
            string hanaInstanceId,

            Outputs.HardwareProfileResponse? hardwareProfile,

            string hwRevision,

            string? location,

            string name,

            Outputs.NetworkProfileResponse? networkProfile,

            Outputs.OSProfileResponse? osProfile,

            string? partnerNodeId,

            string powerState,

            string provisioningState,

            string proximityPlacementGroup,

            Outputs.StorageProfileResponse? storageProfile,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            HanaInstanceId = hanaInstanceId;
            HardwareProfile = hardwareProfile;
            HwRevision = hwRevision;
            Location = location;
            Name = name;
            NetworkProfile = networkProfile;
            OsProfile = osProfile;
            PartnerNodeId = partnerNodeId;
            PowerState = powerState;
            ProvisioningState = provisioningState;
            ProximityPlacementGroup = proximityPlacementGroup;
            StorageProfile = storageProfile;
            Tags = tags;
            Type = type;
        }
    }
}
