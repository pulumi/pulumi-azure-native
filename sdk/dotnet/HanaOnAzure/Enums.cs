// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.HanaOnAzure
{
    /// <summary>
    /// Name of the hardware type (vendor and/or their product name)
    /// </summary>
    [EnumType]
    public readonly struct HanaHardwareTypeNamesEnum : IEquatable<HanaHardwareTypeNamesEnum>
    {
        private readonly string _value;

        private HanaHardwareTypeNamesEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static HanaHardwareTypeNamesEnum Cisco_UCS { get; } = new HanaHardwareTypeNamesEnum("Cisco_UCS");
        public static HanaHardwareTypeNamesEnum HPE { get; } = new HanaHardwareTypeNamesEnum("HPE");

        public static bool operator ==(HanaHardwareTypeNamesEnum left, HanaHardwareTypeNamesEnum right) => left.Equals(right);
        public static bool operator !=(HanaHardwareTypeNamesEnum left, HanaHardwareTypeNamesEnum right) => !left.Equals(right);

        public static explicit operator string(HanaHardwareTypeNamesEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is HanaHardwareTypeNamesEnum other && Equals(other);
        public bool Equals(HanaHardwareTypeNamesEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Resource power state
    /// </summary>
    [EnumType]
    public readonly struct HanaInstancePowerStateEnum : IEquatable<HanaInstancePowerStateEnum>
    {
        private readonly string _value;

        private HanaInstancePowerStateEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static HanaInstancePowerStateEnum Starting { get; } = new HanaInstancePowerStateEnum("starting");
        public static HanaInstancePowerStateEnum Started { get; } = new HanaInstancePowerStateEnum("started");
        public static HanaInstancePowerStateEnum Stopping { get; } = new HanaInstancePowerStateEnum("stopping");
        public static HanaInstancePowerStateEnum Stopped { get; } = new HanaInstancePowerStateEnum("stopped");
        public static HanaInstancePowerStateEnum Restarting { get; } = new HanaInstancePowerStateEnum("restarting");
        public static HanaInstancePowerStateEnum Unknown { get; } = new HanaInstancePowerStateEnum("unknown");

        public static bool operator ==(HanaInstancePowerStateEnum left, HanaInstancePowerStateEnum right) => left.Equals(right);
        public static bool operator !=(HanaInstancePowerStateEnum left, HanaInstancePowerStateEnum right) => !left.Equals(right);

        public static explicit operator string(HanaInstancePowerStateEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is HanaInstancePowerStateEnum other && Equals(other);
        public bool Equals(HanaInstancePowerStateEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the HANA instance SKU.
    /// </summary>
    [EnumType]
    public readonly struct HanaInstanceSizeNamesEnum : IEquatable<HanaInstanceSizeNamesEnum>
    {
        private readonly string _value;

        private HanaInstanceSizeNamesEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static HanaInstanceSizeNamesEnum S72m { get; } = new HanaInstanceSizeNamesEnum("S72m");
        public static HanaInstanceSizeNamesEnum S144m { get; } = new HanaInstanceSizeNamesEnum("S144m");
        public static HanaInstanceSizeNamesEnum S72 { get; } = new HanaInstanceSizeNamesEnum("S72");
        public static HanaInstanceSizeNamesEnum S144 { get; } = new HanaInstanceSizeNamesEnum("S144");
        public static HanaInstanceSizeNamesEnum S192 { get; } = new HanaInstanceSizeNamesEnum("S192");
        public static HanaInstanceSizeNamesEnum S192m { get; } = new HanaInstanceSizeNamesEnum("S192m");
        public static HanaInstanceSizeNamesEnum S192xm { get; } = new HanaInstanceSizeNamesEnum("S192xm");
        public static HanaInstanceSizeNamesEnum S96 { get; } = new HanaInstanceSizeNamesEnum("S96");
        public static HanaInstanceSizeNamesEnum S112 { get; } = new HanaInstanceSizeNamesEnum("S112");
        public static HanaInstanceSizeNamesEnum S224 { get; } = new HanaInstanceSizeNamesEnum("S224");
        public static HanaInstanceSizeNamesEnum S224m { get; } = new HanaInstanceSizeNamesEnum("S224m");
        public static HanaInstanceSizeNamesEnum S224om { get; } = new HanaInstanceSizeNamesEnum("S224om");
        public static HanaInstanceSizeNamesEnum S224oo { get; } = new HanaInstanceSizeNamesEnum("S224oo");
        public static HanaInstanceSizeNamesEnum S224oom { get; } = new HanaInstanceSizeNamesEnum("S224oom");
        public static HanaInstanceSizeNamesEnum S224ooo { get; } = new HanaInstanceSizeNamesEnum("S224ooo");
        public static HanaInstanceSizeNamesEnum S384 { get; } = new HanaInstanceSizeNamesEnum("S384");
        public static HanaInstanceSizeNamesEnum S384m { get; } = new HanaInstanceSizeNamesEnum("S384m");
        public static HanaInstanceSizeNamesEnum S384xm { get; } = new HanaInstanceSizeNamesEnum("S384xm");
        public static HanaInstanceSizeNamesEnum S384xxm { get; } = new HanaInstanceSizeNamesEnum("S384xxm");
        public static HanaInstanceSizeNamesEnum S448 { get; } = new HanaInstanceSizeNamesEnum("S448");
        public static HanaInstanceSizeNamesEnum S448m { get; } = new HanaInstanceSizeNamesEnum("S448m");
        public static HanaInstanceSizeNamesEnum S448om { get; } = new HanaInstanceSizeNamesEnum("S448om");
        public static HanaInstanceSizeNamesEnum S448oo { get; } = new HanaInstanceSizeNamesEnum("S448oo");
        public static HanaInstanceSizeNamesEnum S448oom { get; } = new HanaInstanceSizeNamesEnum("S448oom");
        public static HanaInstanceSizeNamesEnum S448ooo { get; } = new HanaInstanceSizeNamesEnum("S448ooo");
        public static HanaInstanceSizeNamesEnum S576m { get; } = new HanaInstanceSizeNamesEnum("S576m");
        public static HanaInstanceSizeNamesEnum S576xm { get; } = new HanaInstanceSizeNamesEnum("S576xm");
        public static HanaInstanceSizeNamesEnum S672 { get; } = new HanaInstanceSizeNamesEnum("S672");
        public static HanaInstanceSizeNamesEnum S672m { get; } = new HanaInstanceSizeNamesEnum("S672m");
        public static HanaInstanceSizeNamesEnum S672om { get; } = new HanaInstanceSizeNamesEnum("S672om");
        public static HanaInstanceSizeNamesEnum S672oo { get; } = new HanaInstanceSizeNamesEnum("S672oo");
        public static HanaInstanceSizeNamesEnum S672oom { get; } = new HanaInstanceSizeNamesEnum("S672oom");
        public static HanaInstanceSizeNamesEnum S672ooo { get; } = new HanaInstanceSizeNamesEnum("S672ooo");
        public static HanaInstanceSizeNamesEnum S768 { get; } = new HanaInstanceSizeNamesEnum("S768");
        public static HanaInstanceSizeNamesEnum S768m { get; } = new HanaInstanceSizeNamesEnum("S768m");
        public static HanaInstanceSizeNamesEnum S768xm { get; } = new HanaInstanceSizeNamesEnum("S768xm");
        public static HanaInstanceSizeNamesEnum S896 { get; } = new HanaInstanceSizeNamesEnum("S896");
        public static HanaInstanceSizeNamesEnum S896m { get; } = new HanaInstanceSizeNamesEnum("S896m");
        public static HanaInstanceSizeNamesEnum S896om { get; } = new HanaInstanceSizeNamesEnum("S896om");
        public static HanaInstanceSizeNamesEnum S896oo { get; } = new HanaInstanceSizeNamesEnum("S896oo");
        public static HanaInstanceSizeNamesEnum S896oom { get; } = new HanaInstanceSizeNamesEnum("S896oom");
        public static HanaInstanceSizeNamesEnum S896ooo { get; } = new HanaInstanceSizeNamesEnum("S896ooo");
        public static HanaInstanceSizeNamesEnum S960m { get; } = new HanaInstanceSizeNamesEnum("S960m");

        public static bool operator ==(HanaInstanceSizeNamesEnum left, HanaInstanceSizeNamesEnum right) => left.Equals(right);
        public static bool operator !=(HanaInstanceSizeNamesEnum left, HanaInstanceSizeNamesEnum right) => !left.Equals(right);

        public static explicit operator string(HanaInstanceSizeNamesEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is HanaInstanceSizeNamesEnum other && Equals(other);
        public bool Equals(HanaInstanceSizeNamesEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// State of provisioning of the HanaInstance
    /// </summary>
    [EnumType]
    public readonly struct HanaProvisioningStatesEnum : IEquatable<HanaProvisioningStatesEnum>
    {
        private readonly string _value;

        private HanaProvisioningStatesEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static HanaProvisioningStatesEnum Accepted { get; } = new HanaProvisioningStatesEnum("Accepted");
        public static HanaProvisioningStatesEnum Creating { get; } = new HanaProvisioningStatesEnum("Creating");
        public static HanaProvisioningStatesEnum Updating { get; } = new HanaProvisioningStatesEnum("Updating");
        public static HanaProvisioningStatesEnum Failed { get; } = new HanaProvisioningStatesEnum("Failed");
        public static HanaProvisioningStatesEnum Succeeded { get; } = new HanaProvisioningStatesEnum("Succeeded");
        public static HanaProvisioningStatesEnum Deleting { get; } = new HanaProvisioningStatesEnum("Deleting");
        public static HanaProvisioningStatesEnum Migrating { get; } = new HanaProvisioningStatesEnum("Migrating");

        public static bool operator ==(HanaProvisioningStatesEnum left, HanaProvisioningStatesEnum right) => left.Equals(right);
        public static bool operator !=(HanaProvisioningStatesEnum left, HanaProvisioningStatesEnum right) => !left.Equals(right);

        public static explicit operator string(HanaProvisioningStatesEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is HanaProvisioningStatesEnum other && Equals(other);
        public bool Equals(HanaProvisioningStatesEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
