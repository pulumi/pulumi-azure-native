// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CosmosDB
{
    public static class GetTableResourceTableRoleAssignment
    {
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Table Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetTableResourceTableRoleAssignmentResult> InvokeAsync(GetTableResourceTableRoleAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResourceTableRoleAssignmentResult>("azure-native:cosmosdb:getTableResourceTableRoleAssignment", args ?? new GetTableResourceTableRoleAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Table Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetTableResourceTableRoleAssignmentResult> Invoke(GetTableResourceTableRoleAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResourceTableRoleAssignmentResult>("azure-native:cosmosdb:getTableResourceTableRoleAssignment", args ?? new GetTableResourceTableRoleAssignmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Table Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetTableResourceTableRoleAssignmentResult> Invoke(GetTableResourceTableRoleAssignmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResourceTableRoleAssignmentResult>("azure-native:cosmosdb:getTableResourceTableRoleAssignment", args ?? new GetTableResourceTableRoleAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableResourceTableRoleAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Assignment.
        /// </summary>
        [Input("roleAssignmentId", required: true)]
        public string RoleAssignmentId { get; set; } = null!;

        public GetTableResourceTableRoleAssignmentArgs()
        {
        }
        public static new GetTableResourceTableRoleAssignmentArgs Empty => new GetTableResourceTableRoleAssignmentArgs();
    }

    public sealed class GetTableResourceTableRoleAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Assignment.
        /// </summary>
        [Input("roleAssignmentId", required: true)]
        public Input<string> RoleAssignmentId { get; set; } = null!;

        public GetTableResourceTableRoleAssignmentInvokeArgs()
        {
        }
        public static new GetTableResourceTableRoleAssignmentInvokeArgs Empty => new GetTableResourceTableRoleAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResourceTableRoleAssignmentResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Table Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The unique identifier for the associated Role Definition.
        /// </summary>
        public readonly string? RoleDefinitionId;
        /// <summary>
        /// The data plane resource path for which access is being granted through this Table Role Assignment.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTableResourceTableRoleAssignmentResult(
            string azureApiVersion,

            string id,

            string name,

            string? principalId,

            string provisioningState,

            string? roleDefinitionId,

            string? scope,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            PrincipalId = principalId;
            ProvisioningState = provisioningState;
            RoleDefinitionId = roleDefinitionId;
            Scope = scope;
            SystemData = systemData;
            Type = type;
        }
    }
}
