// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CosmosDB
{
    public static class GetCassandraResourceCassandraRoleAssignment
    {
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Task<GetCassandraResourceCassandraRoleAssignmentResult> InvokeAsync(GetCassandraResourceCassandraRoleAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCassandraResourceCassandraRoleAssignmentResult>("azure-native:cosmosdb:getCassandraResourceCassandraRoleAssignment", args ?? new GetCassandraResourceCassandraRoleAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Output<GetCassandraResourceCassandraRoleAssignmentResult> Invoke(GetCassandraResourceCassandraRoleAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCassandraResourceCassandraRoleAssignmentResult>("azure-native:cosmosdb:getCassandraResourceCassandraRoleAssignment", args ?? new GetCassandraResourceCassandraRoleAssignmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Assignment with the given Id.
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Output<GetCassandraResourceCassandraRoleAssignmentResult> Invoke(GetCassandraResourceCassandraRoleAssignmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCassandraResourceCassandraRoleAssignmentResult>("azure-native:cosmosdb:getCassandraResourceCassandraRoleAssignment", args ?? new GetCassandraResourceCassandraRoleAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCassandraResourceCassandraRoleAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Assignment.
        /// </summary>
        [Input("roleAssignmentId", required: true)]
        public string RoleAssignmentId { get; set; } = null!;

        public GetCassandraResourceCassandraRoleAssignmentArgs()
        {
        }
        public static new GetCassandraResourceCassandraRoleAssignmentArgs Empty => new GetCassandraResourceCassandraRoleAssignmentArgs();
    }

    public sealed class GetCassandraResourceCassandraRoleAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Assignment.
        /// </summary>
        [Input("roleAssignmentId", required: true)]
        public Input<string> RoleAssignmentId { get; set; } = null!;

        public GetCassandraResourceCassandraRoleAssignmentInvokeArgs()
        {
        }
        public static new GetCassandraResourceCassandraRoleAssignmentInvokeArgs Empty => new GetCassandraResourceCassandraRoleAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetCassandraResourceCassandraRoleAssignmentResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The unique identifier for the associated Role Definition.
        /// </summary>
        public readonly string? RoleDefinitionId;
        /// <summary>
        /// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCassandraResourceCassandraRoleAssignmentResult(
            string azureApiVersion,

            string id,

            string name,

            string? principalId,

            string provisioningState,

            string? roleDefinitionId,

            string? scope,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            PrincipalId = principalId;
            ProvisioningState = provisioningState;
            RoleDefinitionId = roleDefinitionId;
            Scope = scope;
            SystemData = systemData;
            Type = type;
        }
    }
}
