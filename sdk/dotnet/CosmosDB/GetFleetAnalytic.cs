// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CosmosDB
{
    public static class GetFleetAnalytic
    {
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics under a fleet
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Task<GetFleetAnalyticResult> InvokeAsync(GetFleetAnalyticArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetAnalyticResult>("azure-native:cosmosdb:getFleetAnalytic", args ?? new GetFleetAnalyticArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics under a fleet
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Output<GetFleetAnalyticResult> Invoke(GetFleetAnalyticInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetAnalyticResult>("azure-native:cosmosdb:getFleetAnalytic", args ?? new GetFleetAnalyticInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics under a fleet
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// </summary>
        public static Output<GetFleetAnalyticResult> Invoke(GetFleetAnalyticInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetAnalyticResult>("azure-native:cosmosdb:getFleetAnalytic", args ?? new GetFleetAnalyticInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetAnalyticArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB fleetAnalytics name.
        /// </summary>
        [Input("fleetAnalyticsName", required: true)]
        public string FleetAnalyticsName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </summary>
        [Input("fleetName", required: true)]
        public string FleetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFleetAnalyticArgs()
        {
        }
        public static new GetFleetAnalyticArgs Empty => new GetFleetAnalyticArgs();
    }

    public sealed class GetFleetAnalyticInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB fleetAnalytics name.
        /// </summary>
        [Input("fleetAnalyticsName", required: true)]
        public Input<string> FleetAnalyticsName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </summary>
        [Input("fleetName", required: true)]
        public Input<string> FleetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFleetAnalyticInvokeArgs()
        {
        }
        public static new GetFleetAnalyticInvokeArgs Empty => new GetFleetAnalyticInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetAnalyticResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A provisioning state of the FleetAnalytics.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the fleet analytics resource.
        /// </summary>
        public readonly string? StorageLocationType;
        /// <summary>
        /// The unique identifier of the fleet analytics resource.
        /// </summary>
        public readonly string? StorageLocationUri;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFleetAnalyticResult(
            string azureApiVersion,

            string id,

            string name,

            string provisioningState,

            string? storageLocationType,

            string? storageLocationUri,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            StorageLocationType = storageLocationType;
            StorageLocationUri = storageLocationUri;
            SystemData = systemData;
            Type = type;
        }
    }
}
