// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.AutonomousDevelopmentPlatform.V20211101Preview
{
    /// <summary>
    /// The SKU name
    /// </summary>
    [EnumType]
    public readonly struct StorageSkuName : IEquatable<StorageSkuName>
    {
        private readonly string _value;

        private StorageSkuName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static StorageSkuName Standard_LRS { get; } = new StorageSkuName("Standard_LRS");
        public static StorageSkuName Standard_GRS { get; } = new StorageSkuName("Standard_GRS");
        public static StorageSkuName Standard_Ragrs { get; } = new StorageSkuName("Standard_Ragrs");
        public static StorageSkuName Standard_ZRS { get; } = new StorageSkuName("Standard_ZRS");
        public static StorageSkuName Premium_LRS { get; } = new StorageSkuName("Premium_LRS");
        public static StorageSkuName Premium_ZRS { get; } = new StorageSkuName("Premium_ZRS");
        public static StorageSkuName Standard_Gzrs { get; } = new StorageSkuName("Standard_Gzrs");
        public static StorageSkuName Standard_Ragzrs { get; } = new StorageSkuName("Standard_Ragzrs");

        public static bool operator ==(StorageSkuName left, StorageSkuName right) => left.Equals(right);
        public static bool operator !=(StorageSkuName left, StorageSkuName right) => !left.Equals(right);

        public static explicit operator string(StorageSkuName value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is StorageSkuName other && Equals(other);
        public bool Equals(StorageSkuName other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
