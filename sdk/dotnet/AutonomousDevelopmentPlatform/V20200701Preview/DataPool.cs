// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AutonomousDevelopmentPlatform.V20200701Preview
{
    /// <summary>
    /// An ADP Data Pool.
    /// </summary>
    public partial class DataPool : Pulumi.CustomResource
    {
        /// <summary>
        /// The Data Pool's data-plane ID
        /// </summary>
        [Output("dataPoolId")]
        public Output<string> DataPoolId { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the collection of locations where Data Pool resources should be created.
        /// </summary>
        [Output("locations")]
        public Output<ImmutableArray<Outputs.DataPoolLocationResponse>> Locations { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets the status of the data pool at the time the operation was called.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DataPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataPool(string name, DataPoolArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:autonomousdevelopmentplatform/v20200701preview:DataPool", name, args ?? new DataPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataPool(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:autonomousdevelopmentplatform/v20200701preview:DataPool", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataPool Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataPool(name, id, options);
        }
    }

    public sealed class DataPoolArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the ADP account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Data Pool.
        /// </summary>
        [Input("dataPoolName", required: true)]
        public Input<string> DataPoolName { get; set; } = null!;

        [Input("locations", required: true)]
        private InputList<Inputs.DataPoolLocationArgs>? _locations;

        /// <summary>
        /// Gets or sets the collection of locations where Data Pool resources should be created.
        /// </summary>
        public InputList<Inputs.DataPoolLocationArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.DataPoolLocationArgs>());
            set => _locations = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public DataPoolArgs()
        {
        }
    }
}
