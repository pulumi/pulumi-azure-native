// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ServiceFabricMesh.V20180701Preview.Inputs
{

    /// <summary>
    /// This type describes a service resource.
    /// </summary>
    public sealed class ServiceResourceDescriptionArgs : Pulumi.ResourceArgs
    {
        [Input("codePackages", required: true)]
        private InputList<Inputs.ContainerCodePackagePropertiesArgs>? _codePackages;

        /// <summary>
        /// Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
        /// </summary>
        public InputList<Inputs.ContainerCodePackagePropertiesArgs> CodePackages
        {
            get => _codePackages ?? (_codePackages = new InputList<Inputs.ContainerCodePackagePropertiesArgs>());
            set => _codePackages = value;
        }

        /// <summary>
        /// User readable description of the service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Reference to sinks in DiagnosticsDescription.
        /// </summary>
        [Input("diagnostics")]
        public Input<Inputs.DiagnosticsRefArgs>? Diagnostics { get; set; }

        /// <summary>
        /// The health state of a resource such as Application, Service, or Network.
        /// </summary>
        [Input("healthState")]
        public Input<string>? HealthState { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkRefs")]
        private InputList<Inputs.NetworkRefArgs>? _networkRefs;

        /// <summary>
        /// The names of the private networks that this service needs to be part of.
        /// </summary>
        public InputList<Inputs.NetworkRefArgs> NetworkRefs
        {
            get => _networkRefs ?? (_networkRefs = new InputList<Inputs.NetworkRefArgs>());
            set => _networkRefs = value;
        }

        /// <summary>
        /// The Operating system type required by the code in service.
        /// </summary>
        [Input("osType", required: true)]
        public Input<string> OsType { get; set; } = null!;

        /// <summary>
        /// The number of replicas of the service to create. Defaults to 1 if not specified.
        /// </summary>
        [Input("replicaCount")]
        public Input<int>? ReplicaCount { get; set; }

        public ServiceResourceDescriptionArgs()
        {
        }
    }
}
