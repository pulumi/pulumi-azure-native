// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceFabricMesh
{
    public static class GetGateway
    {
        /// <summary>
        /// Gets the information about the gateway resource with the given name. The information include the description and other properties of the gateway.
        /// API Version: 2018-09-01-preview.
        /// </summary>
        public static Task<GetGatewayResult> InvokeAsync(GetGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayResult>("azure-native:servicefabricmesh:getGateway", args ?? new GetGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the information about the gateway resource with the given name. The information include the description and other properties of the gateway.
        /// API Version: 2018-09-01-preview.
        /// </summary>
        public static Output<GetGatewayResult> Invoke(GetGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayResult>("azure-native:servicefabricmesh:getGateway", args ?? new GetGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identity of the gateway.
        /// </summary>
        [Input("gatewayResourceName", required: true)]
        public string GatewayResourceName { get; set; } = null!;

        /// <summary>
        /// Azure resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGatewayArgs()
        {
        }
        public static new GetGatewayArgs Empty => new GetGatewayArgs();
    }

    public sealed class GetGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identity of the gateway.
        /// </summary>
        [Input("gatewayResourceName", required: true)]
        public Input<string> GatewayResourceName { get; set; } = null!;

        /// <summary>
        /// Azure resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGatewayInvokeArgs()
        {
        }
        public static new GetGatewayInvokeArgs Empty => new GetGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayResult
    {
        /// <summary>
        /// Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// This type describes properties of a gateway resource.
        /// </summary>
        public readonly Outputs.GatewayResourcePropertiesResponse Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGatewayResult(
            string id,

            string location,

            string name,

            Outputs.GatewayResourcePropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
