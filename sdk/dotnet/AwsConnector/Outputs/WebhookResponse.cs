// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of Webhook
    /// </summary>
    [OutputType]
    public sealed class WebhookResponse
    {
        /// <summary>
        /// &lt;p&gt;A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If &lt;code&gt;branchFilter&lt;/code&gt; is empty, then all branches are built.&lt;/p&gt; &lt;note&gt; &lt;p&gt;It is recommended that you use &lt;code&gt;filterGroups&lt;/code&gt; instead of &lt;code&gt;branchFilter&lt;/code&gt;. &lt;/p&gt; &lt;/note&gt;
        /// </summary>
        public readonly string? BranchFilter;
        /// <summary>
        /// &lt;p&gt;Specifies the type of build this webhook will trigger.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.WebhookBuildTypeEnumValueResponse? BuildType;
        /// <summary>
        /// &lt;p&gt;An array of arrays of &lt;code&gt;WebhookFilter&lt;/code&gt; objects used to determine which webhooks are triggered. At least one &lt;code&gt;WebhookFilter&lt;/code&gt; in the array must specify &lt;code&gt;EVENT&lt;/code&gt; as its &lt;code&gt;type&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;For a build to be triggered, at least one filter group in the &lt;code&gt;filterGroups&lt;/code&gt; array must pass. For a filter group to pass, each of its filters must pass. &lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.FilterGroupResponse> FilterGroups;
        /// <summary>
        /// &lt;p&gt;A timestamp that indicates the last time a repository's secret token was modified. &lt;/p&gt;
        /// </summary>
        public readonly string? LastModifiedSecret;
        /// <summary>
        /// &lt;p&gt;The CodeBuild endpoint where webhook events are sent.&lt;/p&gt;
        /// </summary>
        public readonly string? PayloadUrl;
        /// <summary>
        /// &lt;p&gt;The secret token of the associated repository. &lt;/p&gt; &lt;note&gt; &lt;p&gt;A Bitbucket webhook does not support &lt;code&gt;secret&lt;/code&gt;. &lt;/p&gt; &lt;/note&gt;
        /// </summary>
        public readonly string? Secret;
        /// <summary>
        /// &lt;p&gt;The URL to the webhook.&lt;/p&gt;
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private WebhookResponse(
            string? branchFilter,

            Outputs.WebhookBuildTypeEnumValueResponse? buildType,

            ImmutableArray<Outputs.FilterGroupResponse> filterGroups,

            string? lastModifiedSecret,

            string? payloadUrl,

            string? secret,

            string? url)
        {
            BranchFilter = branchFilter;
            BuildType = buildType;
            FilterGroups = filterGroups;
            LastModifiedSecret = lastModifiedSecret;
            PayloadUrl = payloadUrl;
            Secret = secret;
            Url = url;
        }
    }
}
