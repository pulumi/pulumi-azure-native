// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of EnhancedMetricsConfig
    /// </summary>
    [OutputType]
    public sealed class EnhancedMetricsConfigResponse
    {
        /// <summary>
        /// &lt;p&gt;Controls how data source metrics will be emitted to CloudWatch. Data source metrics include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Requests: The number of invocations that occured during a request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Latency: The time to complete a data source invocation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors: The number of errors that occurred during a data source invocation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These metrics can be emitted to CloudWatch per data source or for all data sources in the request. Metrics will be recorded by API ID and data source name. &lt;code&gt;dataSourceLevelMetricsBehavior&lt;/code&gt; accepts one of these values at a time:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FULL_REQUEST_DATA_SOURCE_METRICS&lt;/code&gt;: Records and emits metric data for all data sources in the request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PER_DATA_SOURCE_METRICS&lt;/code&gt;: Records and emits metric data for data sources that have the &lt;code&gt;metricsConfig&lt;/code&gt; value set to &lt;code&gt;ENABLED&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public readonly Outputs.DataSourceLevelMetricsBehaviorEnumValueResponse? DataSourceLevelMetricsBehavior;
        /// <summary>
        /// &lt;p&gt; Controls how operation metrics will be emitted to CloudWatch. Operation metrics include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Requests: The number of times a specified GraphQL operation was called.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;GraphQL errors: The number of GraphQL errors that occurred during a specified GraphQL operation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Metrics will be recorded by API ID and operation name. You can set the value to &lt;code&gt;ENABLED&lt;/code&gt; or &lt;code&gt;DISABLED&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.OperationLevelMetricsConfigEnumValueResponse? OperationLevelMetricsConfig;
        /// <summary>
        /// &lt;p&gt;Controls how resolver metrics will be emitted to CloudWatch. Resolver metrics include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;GraphQL errors: The number of GraphQL errors that occurred.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Requests: The number of invocations that occurred during a request. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Latency: The time to complete a resolver invocation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cache hits: The number of cache hits during a request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cache misses: The number of cache misses during a request.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These metrics can be emitted to CloudWatch per resolver or for all resolvers in the request. Metrics will be recorded by API ID and resolver name. &lt;code&gt;resolverLevelMetricsBehavior&lt;/code&gt; accepts one of these values at a time:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FULL_REQUEST_RESOLVER_METRICS&lt;/code&gt;: Records and emits metric data for all resolvers in the request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PER_RESOLVER_METRICS&lt;/code&gt;: Records and emits metric data for resolvers that have the &lt;code&gt;metricsConfig&lt;/code&gt; value set to &lt;code&gt;ENABLED&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public readonly Outputs.ResolverLevelMetricsBehaviorEnumValueResponse? ResolverLevelMetricsBehavior;

        [OutputConstructor]
        private EnhancedMetricsConfigResponse(
            Outputs.DataSourceLevelMetricsBehaviorEnumValueResponse? dataSourceLevelMetricsBehavior,

            Outputs.OperationLevelMetricsConfigEnumValueResponse? operationLevelMetricsConfig,

            Outputs.ResolverLevelMetricsBehaviorEnumValueResponse? resolverLevelMetricsBehavior)
        {
            DataSourceLevelMetricsBehavior = dataSourceLevelMetricsBehavior;
            OperationLevelMetricsConfig = operationLevelMetricsConfig;
            ResolverLevelMetricsBehavior = resolverLevelMetricsBehavior;
        }
    }
}
