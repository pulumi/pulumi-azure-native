// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of RedirectConfig
    /// </summary>
    [OutputType]
    public sealed class RedirectConfigResponse
    {
        /// <summary>
        /// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// The port. You can specify a value from 1 to 65535 or #{port}.
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically added. You can specify any of the reserved keywords.
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
        /// </summary>
        public readonly string? StatusCode;

        [OutputConstructor]
        private RedirectConfigResponse(
            string? host,

            string? path,

            string? port,

            string? protocol,

            string? query,

            string? statusCode)
        {
            Host = host;
            Path = path;
            Port = port;
            Protocol = protocol;
            Query = query;
            StatusCode = statusCode;
        }
    }
}
