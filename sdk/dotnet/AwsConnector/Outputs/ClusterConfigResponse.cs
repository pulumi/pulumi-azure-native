// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of ClusterConfig
    /// </summary>
    [OutputType]
    public sealed class ClusterConfigResponse
    {
        /// <summary>
        /// &lt;p&gt;Container for cold storage configuration options.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ColdStorageOptionsResponse? ColdStorageOptions;
        /// <summary>
        /// &lt;p&gt;Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive a validation exception.&lt;/p&gt;
        /// </summary>
        public readonly int? DedicatedMasterCount;
        /// <summary>
        /// &lt;p&gt;Indicates whether dedicated master nodes are enabled for the cluster.&lt;code&gt;True&lt;/code&gt; if the cluster will use a dedicated master node.&lt;code&gt;False&lt;/code&gt; if the cluster will not.&lt;/p&gt;
        /// </summary>
        public readonly bool? DedicatedMasterEnabled;
        /// <summary>
        /// &lt;p&gt;OpenSearch Service instance type of the dedicated master nodes in the cluster.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.OpenSearchPartitionInstanceTypeEnumValueResponse? DedicatedMasterType;
        /// <summary>
        /// &lt;p&gt;Number of data nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.&lt;/p&gt;
        /// </summary>
        public readonly int? InstanceCount;
        /// <summary>
        /// &lt;p&gt;Instance type of data nodes in the cluster.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.OpenSearchPartitionInstanceTypeEnumValueResponse? InstanceType;
        /// <summary>
        /// &lt;p&gt;A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see &lt;a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'&gt;Configuring a multi-AZ domain in Amazon OpenSearch Service&lt;/a&gt;. &lt;/p&gt;
        /// </summary>
        public readonly bool? MultiAZWithStandbyEnabled;
        /// <summary>
        /// &lt;p&gt;The number of warm nodes in the cluster.&lt;/p&gt;
        /// </summary>
        public readonly int? WarmCount;
        /// <summary>
        /// &lt;p&gt;Whether to enable warm storage for the cluster.&lt;/p&gt;
        /// </summary>
        public readonly bool? WarmEnabled;
        /// <summary>
        /// &lt;p&gt;The instance type for the cluster's warm nodes.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.OpenSearchWarmPartitionInstanceTypeEnumValueResponse? WarmType;
        /// <summary>
        /// &lt;p&gt;Container for zone awareness configuration options. Only required if &lt;code&gt;ZoneAwarenessEnabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ZoneAwarenessConfigResponse? ZoneAwarenessConfig;
        /// <summary>
        /// &lt;p&gt;Indicates whether multiple Availability Zones are enabled. For more information, see &lt;a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'&gt;Configuring a multi-AZ domain in Amazon OpenSearch Service&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        public readonly bool? ZoneAwarenessEnabled;

        [OutputConstructor]
        private ClusterConfigResponse(
            Outputs.ColdStorageOptionsResponse? coldStorageOptions,

            int? dedicatedMasterCount,

            bool? dedicatedMasterEnabled,

            Outputs.OpenSearchPartitionInstanceTypeEnumValueResponse? dedicatedMasterType,

            int? instanceCount,

            Outputs.OpenSearchPartitionInstanceTypeEnumValueResponse? instanceType,

            bool? multiAZWithStandbyEnabled,

            int? warmCount,

            bool? warmEnabled,

            Outputs.OpenSearchWarmPartitionInstanceTypeEnumValueResponse? warmType,

            Outputs.ZoneAwarenessConfigResponse? zoneAwarenessConfig,

            bool? zoneAwarenessEnabled)
        {
            ColdStorageOptions = coldStorageOptions;
            DedicatedMasterCount = dedicatedMasterCount;
            DedicatedMasterEnabled = dedicatedMasterEnabled;
            DedicatedMasterType = dedicatedMasterType;
            InstanceCount = instanceCount;
            InstanceType = instanceType;
            MultiAZWithStandbyEnabled = multiAZWithStandbyEnabled;
            WarmCount = warmCount;
            WarmEnabled = warmEnabled;
            WarmType = warmType;
            ZoneAwarenessConfig = zoneAwarenessConfig;
            ZoneAwarenessEnabled = zoneAwarenessEnabled;
        }
    }
}
