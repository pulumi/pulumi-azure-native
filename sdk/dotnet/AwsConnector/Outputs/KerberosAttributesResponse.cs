// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of KerberosAttributes
    /// </summary>
    [OutputType]
    public sealed class KerberosAttributesResponse
    {
        /// <summary>
        /// &lt;p&gt;The Active Directory password for &lt;code&gt;ADDomainJoinUser&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? AdDomainJoinPassword;
        /// <summary>
        /// &lt;p&gt;Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain.&lt;/p&gt;
        /// </summary>
        public readonly string? AdDomainJoinUser;
        /// <summary>
        /// &lt;p&gt;Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms.&lt;/p&gt;
        /// </summary>
        public readonly string? CrossRealmTrustPrincipalPassword;
        /// <summary>
        /// &lt;p&gt;The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster.&lt;/p&gt;
        /// </summary>
        public readonly string? KdcAdminPassword;
        /// <summary>
        /// &lt;p&gt;The name of the Kerberos realm to which all nodes in a cluster belong. For example, &lt;code&gt;EC2.INTERNAL&lt;/code&gt;. &lt;/p&gt;
        /// </summary>
        public readonly string? Realm;

        [OutputConstructor]
        private KerberosAttributesResponse(
            string? adDomainJoinPassword,

            string? adDomainJoinUser,

            string? crossRealmTrustPrincipalPassword,

            string? kdcAdminPassword,

            string? realm)
        {
            AdDomainJoinPassword = adDomainJoinPassword;
            AdDomainJoinUser = adDomainJoinUser;
            CrossRealmTrustPrincipalPassword = crossRealmTrustPrincipalPassword;
            KdcAdminPassword = kdcAdminPassword;
            Realm = realm;
        }
    }
}
