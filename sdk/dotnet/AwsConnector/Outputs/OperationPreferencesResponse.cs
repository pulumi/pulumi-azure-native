// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of OperationPreferences
    /// </summary>
    [OutputType]
    public sealed class OperationPreferencesResponse
    {
        /// <summary>
        /// Property failureToleranceCount
        /// </summary>
        public readonly int? FailureToleranceCount;
        /// <summary>
        /// Property failureTolerancePercentage
        /// </summary>
        public readonly int? FailureTolerancePercentage;
        /// <summary>
        /// Property maxConcurrentCount
        /// </summary>
        public readonly int? MaxConcurrentCount;
        /// <summary>
        /// Property maxConcurrentPercentage
        /// </summary>
        public readonly int? MaxConcurrentPercentage;
        /// <summary>
        /// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
        /// </summary>
        public readonly string? RegionConcurrencyType;
        /// <summary>
        /// Property regionOrder
        /// </summary>
        public readonly ImmutableArray<string> RegionOrder;

        [OutputConstructor]
        private OperationPreferencesResponse(
            int? failureToleranceCount,

            int? failureTolerancePercentage,

            int? maxConcurrentCount,

            int? maxConcurrentPercentage,

            string? regionConcurrencyType,

            ImmutableArray<string> regionOrder)
        {
            FailureToleranceCount = failureToleranceCount;
            FailureTolerancePercentage = failureTolerancePercentage;
            MaxConcurrentCount = maxConcurrentCount;
            MaxConcurrentPercentage = maxConcurrentPercentage;
            RegionConcurrencyType = regionConcurrencyType;
            RegionOrder = regionOrder;
        }
    }
}
