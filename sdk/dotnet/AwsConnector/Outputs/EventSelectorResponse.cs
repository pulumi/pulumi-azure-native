// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of EventSelector
    /// </summary>
    [OutputType]
    public sealed class EventSelectorResponse
    {
        /// <summary>
        /// Property dataResources
        /// </summary>
        public readonly ImmutableArray<Outputs.DataResourceResponse> DataResources;
        /// <summary>
        /// An optional list of service event sources from which you do not want management events to be logged on your trail. In this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing 'kms.amazonaws.com'. By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that are logged to your trail.
        /// </summary>
        public readonly ImmutableArray<string> ExcludeManagementEventSources;
        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        public readonly bool? IncludeManagementEvents;
        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.
        /// </summary>
        public readonly string? ReadWriteType;

        [OutputConstructor]
        private EventSelectorResponse(
            ImmutableArray<Outputs.DataResourceResponse> dataResources,

            ImmutableArray<string> excludeManagementEventSources,

            bool? includeManagementEvents,

            string? readWriteType)
        {
            DataResources = dataResources;
            ExcludeManagementEventSources = excludeManagementEventSources;
            IncludeManagementEvents = includeManagementEvents;
            ReadWriteType = readWriteType;
        }
    }
}
