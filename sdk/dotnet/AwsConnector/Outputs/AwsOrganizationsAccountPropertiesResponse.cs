// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of awsOrganizationsAccount
    /// </summary>
    [OutputType]
    public sealed class AwsOrganizationsAccountPropertiesResponse
    {
        /// <summary>
        /// If the account was created successfully, the unique identifier (ID) of the new account.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The friendly name of the member account.
        /// </summary>
        public readonly string? AccountName;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the account.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The email address of the owner to assign to the new member account.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The method by which the account joined the organization.
        /// </summary>
        public readonly string? JoinedMethod;
        /// <summary>
        /// The date the account became a part of the organization.
        /// </summary>
        public readonly string? JoinedTimestamp;
        /// <summary>
        /// List of parent nodes for the member account. Currently only one parent at a time is supported. Default is root.
        /// </summary>
        public readonly ImmutableArray<string> ParentIds;
        /// <summary>
        /// The name of an IAM role that AWS Organizations automatically preconfigures in the new member account. Default name is OrganizationAccountAccessRole if not specified.
        /// </summary>
        public readonly string? RoleName;
        /// <summary>
        /// The status of the account in the organization.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// A list of tags that you want to attach to the newly created account. For each tag in the list, you must specify both a tag key and a value.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;

        [OutputConstructor]
        private AwsOrganizationsAccountPropertiesResponse(
            string? accountId,

            string? accountName,

            string? arn,

            string? email,

            string? joinedMethod,

            string? joinedTimestamp,

            ImmutableArray<string> parentIds,

            string? roleName,

            string? status,

            ImmutableArray<Outputs.TagResponse> tags)
        {
            AccountId = accountId;
            AccountName = accountName;
            Arn = arn;
            Email = email;
            JoinedMethod = joinedMethod;
            JoinedTimestamp = joinedTimestamp;
            ParentIds = parentIds;
            RoleName = roleName;
            Status = status;
            Tags = tags;
        }
    }
}
