// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of awsElasticBeanstalkEnvironment
    /// </summary>
    [OutputType]
    public sealed class AwsElasticBeanstalkEnvironmentPropertiesResponse
    {
        /// <summary>
        /// The name of the application that is associated with this environment.
        /// </summary>
        public readonly string? ApplicationName;
        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
        /// </summary>
        public readonly string? CnamePrefix;
        /// <summary>
        /// Your description for this environment.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Property endpointURL
        /// </summary>
        public readonly string? EndpointURL;
        /// <summary>
        /// A unique name for the environment.
        /// </summary>
        public readonly string? EnvironmentName;
        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        public readonly string? OperationsRole;
        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        public readonly ImmutableArray<Outputs.OptionSettingResponse> OptionSettings;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        public readonly string? PlatformArn;
        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        public readonly string? SolutionStackName;
        /// <summary>
        /// Specifies the tags applied to resources in the environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        public readonly string? TemplateName;
        /// <summary>
        /// Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
        /// </summary>
        public readonly Outputs.TierResponse? Tier;
        /// <summary>
        /// The name of the application version to deploy.
        /// </summary>
        public readonly string? VersionLabel;

        [OutputConstructor]
        private AwsElasticBeanstalkEnvironmentPropertiesResponse(
            string? applicationName,

            string? cnamePrefix,

            string? description,

            string? endpointURL,

            string? environmentName,

            string? operationsRole,

            ImmutableArray<Outputs.OptionSettingResponse> optionSettings,

            string? platformArn,

            string? solutionStackName,

            ImmutableArray<Outputs.TagResponse> tags,

            string? templateName,

            Outputs.TierResponse? tier,

            string? versionLabel)
        {
            ApplicationName = applicationName;
            CnamePrefix = cnamePrefix;
            Description = description;
            EndpointURL = endpointURL;
            EnvironmentName = environmentName;
            OperationsRole = operationsRole;
            OptionSettings = optionSettings;
            PlatformArn = platformArn;
            SolutionStackName = solutionStackName;
            Tags = tags;
            TemplateName = templateName;
            Tier = tier;
            VersionLabel = versionLabel;
        }
    }
}
