// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of awsCodeBuildProject
    /// </summary>
    [OutputType]
    public sealed class AwsCodeBuildProjectPropertiesResponse
    {
        /// <summary>
        /// &lt;p&gt;The Amazon Resource Name (ARN) of the build project.&lt;/p&gt;
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// &lt;p&gt;Information about the build output artifacts for the build project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectArtifactsResponse? Artifacts;
        /// <summary>
        /// &lt;p&gt;Information about the build badge for the build project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectBadgeResponse? Badge;
        /// <summary>
        /// &lt;p&gt;A &lt;a&gt;ProjectBuildBatchConfig&lt;/a&gt; object that defines the batch build options for the project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectBuildBatchConfigResponse? BuildBatchConfig;
        /// <summary>
        /// &lt;p&gt;Information about the cache for the build project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectCacheResponse? Cache;
        /// <summary>
        /// &lt;p&gt;The maximum number of concurrent builds that are allowed for this project.&lt;/p&gt; &lt;p&gt;New builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.&lt;/p&gt;
        /// </summary>
        public readonly int? ConcurrentBuildLimit;
        /// <summary>
        /// &lt;p&gt;When the build project was created, expressed in Unix time format.&lt;/p&gt;
        /// </summary>
        public readonly string? Created;
        /// <summary>
        /// &lt;p&gt;A description that makes the build project easy to identify.&lt;/p&gt;
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// &lt;p&gt;The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format &lt;code&gt;alias/&amp;lt;alias-name&amp;gt;&lt;/code&gt;). If you don't specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3). &lt;/p&gt;
        /// </summary>
        public readonly string? EncryptionKey;
        /// <summary>
        /// &lt;p&gt;Information about the build environment for this build project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectEnvironmentResponse? Environment;
        /// <summary>
        /// &lt;p&gt; An array of &lt;code&gt;ProjectFileSystemLocation&lt;/code&gt; objects for a CodeBuild build project. A &lt;code&gt;ProjectFileSystemLocation&lt;/code&gt; object specifies the &lt;code&gt;identifier&lt;/code&gt;, &lt;code&gt;location&lt;/code&gt;, &lt;code&gt;mountOptions&lt;/code&gt;, &lt;code&gt;mountPoint&lt;/code&gt;, and &lt;code&gt;type&lt;/code&gt; of a file system created using Amazon Elastic File System. &lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectFileSystemLocationResponse> FileSystemLocations;
        /// <summary>
        /// &lt;p&gt;When the build project's settings were last modified, expressed in Unix time format.&lt;/p&gt;
        /// </summary>
        public readonly string? LastModified;
        /// <summary>
        /// &lt;p&gt;Information about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both. &lt;/p&gt;
        /// </summary>
        public readonly Outputs.LogsConfigResponse? LogsConfig;
        /// <summary>
        /// &lt;p&gt;The name of the build project.&lt;/p&gt;
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Property projectVisibility
        /// </summary>
        public readonly Outputs.ProjectVisibilityTypeEnumValueResponse? ProjectVisibility;
        /// <summary>
        /// &lt;p&gt;Contains the project identifier used with the public build APIs. &lt;/p&gt;
        /// </summary>
        public readonly string? PublicProjectAlias;
        /// <summary>
        /// &lt;p&gt;The number of minutes a build is allowed to be queued before it times out. &lt;/p&gt;
        /// </summary>
        public readonly int? QueuedTimeoutInMinutes;
        /// <summary>
        /// &lt;p&gt;The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.&lt;/p&gt;
        /// </summary>
        public readonly string? ResourceAccessRole;
        /// <summary>
        /// &lt;p&gt;An array of &lt;code&gt;ProjectArtifacts&lt;/code&gt; objects. &lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectArtifactsResponse> SecondaryArtifacts;
        /// <summary>
        /// &lt;p&gt;An array of &lt;code&gt;ProjectSourceVersion&lt;/code&gt; objects. If &lt;code&gt;secondarySourceVersions&lt;/code&gt; is specified at the build level, then they take over these &lt;code&gt;secondarySourceVersions&lt;/code&gt; (at the project level). &lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSourceVersionResponse> SecondarySourceVersions;
        /// <summary>
        /// &lt;p&gt;An array of &lt;code&gt;ProjectSource&lt;/code&gt; objects. &lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSourceResponse> SecondarySources;
        /// <summary>
        /// &lt;p&gt;The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.&lt;/p&gt;
        /// </summary>
        public readonly string? ServiceRole;
        /// <summary>
        /// &lt;p&gt;Information about the build input source code for this build project.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ProjectSourceResponse? Source;
        /// <summary>
        /// &lt;p&gt;A version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For CodeCommit: the commit ID, branch, or Git tag to use.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format &lt;code&gt;pr/pull-request-ID&lt;/code&gt; (for example &lt;code&gt;pr/25&lt;/code&gt;). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Amazon S3: the version ID of the object that represents the build input ZIP file to use.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If &lt;code&gt;sourceVersion&lt;/code&gt; is specified at the build level, then that version takes precedence over this &lt;code&gt;sourceVersion&lt;/code&gt; (at the project level). &lt;/p&gt; &lt;p&gt;For more information, see &lt;a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'&gt;Source Version Sample with CodeBuild&lt;/a&gt; in the &lt;i&gt;CodeBuild User Guide&lt;/i&gt;. &lt;/p&gt;
        /// </summary>
        public readonly string? SourceVersion;
        /// <summary>
        /// &lt;p&gt;A list of tag key and value pairs associated with this build project.&lt;/p&gt; &lt;p&gt;These tags are available for use by Amazon Web Services services that support CodeBuild build project tags.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// &lt;p&gt;How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.&lt;/p&gt;
        /// </summary>
        public readonly int? TimeoutInMinutes;
        /// <summary>
        /// &lt;p&gt;Information about the VPC configuration that CodeBuild accesses.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.VpcConfigResponse? VpcConfig;
        /// <summary>
        /// &lt;p&gt;Information about a webhook that connects repository events to a build project in CodeBuild.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.WebhookResponse? Webhook;

        [OutputConstructor]
        private AwsCodeBuildProjectPropertiesResponse(
            string? arn,

            Outputs.ProjectArtifactsResponse? artifacts,

            Outputs.ProjectBadgeResponse? badge,

            Outputs.ProjectBuildBatchConfigResponse? buildBatchConfig,

            Outputs.ProjectCacheResponse? cache,

            int? concurrentBuildLimit,

            string? created,

            string? description,

            string? encryptionKey,

            Outputs.ProjectEnvironmentResponse? environment,

            ImmutableArray<Outputs.ProjectFileSystemLocationResponse> fileSystemLocations,

            string? lastModified,

            Outputs.LogsConfigResponse? logsConfig,

            string? name,

            Outputs.ProjectVisibilityTypeEnumValueResponse? projectVisibility,

            string? publicProjectAlias,

            int? queuedTimeoutInMinutes,

            string? resourceAccessRole,

            ImmutableArray<Outputs.ProjectArtifactsResponse> secondaryArtifacts,

            ImmutableArray<Outputs.ProjectSourceVersionResponse> secondarySourceVersions,

            ImmutableArray<Outputs.ProjectSourceResponse> secondarySources,

            string? serviceRole,

            Outputs.ProjectSourceResponse? source,

            string? sourceVersion,

            ImmutableArray<Outputs.TagResponse> tags,

            int? timeoutInMinutes,

            Outputs.VpcConfigResponse? vpcConfig,

            Outputs.WebhookResponse? webhook)
        {
            Arn = arn;
            Artifacts = artifacts;
            Badge = badge;
            BuildBatchConfig = buildBatchConfig;
            Cache = cache;
            ConcurrentBuildLimit = concurrentBuildLimit;
            Created = created;
            Description = description;
            EncryptionKey = encryptionKey;
            Environment = environment;
            FileSystemLocations = fileSystemLocations;
            LastModified = lastModified;
            LogsConfig = logsConfig;
            Name = name;
            ProjectVisibility = projectVisibility;
            PublicProjectAlias = publicProjectAlias;
            QueuedTimeoutInMinutes = queuedTimeoutInMinutes;
            ResourceAccessRole = resourceAccessRole;
            SecondaryArtifacts = secondaryArtifacts;
            SecondarySourceVersions = secondarySourceVersions;
            SecondarySources = secondarySources;
            ServiceRole = serviceRole;
            Source = source;
            SourceVersion = sourceVersion;
            Tags = tags;
            TimeoutInMinutes = timeoutInMinutes;
            VpcConfig = vpcConfig;
            Webhook = webhook;
        }
    }
}
