// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of OpenIDConnectConfig
    /// </summary>
    [OutputType]
    public sealed class OpenIDConnectConfigResponse
    {
        /// <summary>
        /// &lt;p&gt;The number of milliseconds that a token is valid after being authenticated.&lt;/p&gt;
        /// </summary>
        public readonly double? AuthTTL;
        /// <summary>
        /// &lt;p&gt;The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.&lt;/p&gt;
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// &lt;p&gt;The number of milliseconds that a token is valid after it's issued to a user.&lt;/p&gt;
        /// </summary>
        public readonly double? IatTTL;
        /// <summary>
        /// &lt;p&gt;The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of &lt;code&gt;iss&lt;/code&gt; in the ID token.&lt;/p&gt;
        /// </summary>
        public readonly string? Issuer;

        [OutputConstructor]
        private OpenIDConnectConfigResponse(
            double? authTTL,

            string? clientId,

            double? iatTTL,

            string? issuer)
        {
            AuthTTL = authTTL;
            ClientId = clientId;
            IatTTL = iatTTL;
            Issuer = issuer;
        }
    }
}
