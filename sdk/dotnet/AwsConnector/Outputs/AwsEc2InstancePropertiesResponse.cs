// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of awsEc2Instance
    /// </summary>
    [OutputType]
    public sealed class AwsEc2InstancePropertiesResponse
    {
        /// <summary>
        /// &lt;p&gt;The AMI launch index, which can be used to find this instance in the launch group.&lt;/p&gt;
        /// </summary>
        public readonly int? AmiLaunchIndex;
        /// <summary>
        /// &lt;p&gt;The architecture of the image.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.ArchitectureValuesEnumValueResponse? Architecture;
        /// <summary>
        /// &lt;p&gt;Any block device mapping entries for the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceBlockDeviceMappingResponse> BlockDeviceMappings;
        /// <summary>
        /// &lt;p&gt;The boot mode that was specified by the AMI. If the value is &lt;code&gt;uefi-preferred&lt;/code&gt;, the AMI supports both UEFI and Legacy BIOS. The &lt;code&gt;currentInstanceBootMode&lt;/code&gt; parameter is the boot mode that is used to boot the instance at launch or start.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The operating system contained in the AMI must be configured to support the specified boot mode.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;For more information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'&gt;Boot modes&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.BootModeValuesEnumValueResponse? BootMode;
        /// <summary>
        /// &lt;p&gt;The ID of the Capacity Reservation.&lt;/p&gt;
        /// </summary>
        public readonly string? CapacityReservationId;
        /// <summary>
        /// &lt;p&gt;Information about the Capacity Reservation targeting option.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.CapacityReservationSpecificationResponseResponse? CapacityReservationSpecification;
        /// <summary>
        /// &lt;p&gt;The idempotency token you provided when you launched the instance, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly string? ClientToken;
        /// <summary>
        /// &lt;p&gt;The CPU options for the instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.CpuOptionsResponse? CpuOptions;
        /// <summary>
        /// &lt;p&gt;The boot mode that is used to boot the instance at launch or start. For more information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'&gt;Boot modes&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceBootModeValuesEnumValueResponse? CurrentInstanceBootMode;
        /// <summary>
        /// &lt;p&gt;Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;
        /// </summary>
        public readonly bool? EbsOptimized;
        /// <summary>
        /// &lt;p&gt;Deprecated.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Amazon Elastic Graphics reached end of life on January 8, 2024. For workloads that require graphics acceleration, we recommend that you use Amazon EC2 G4ad, G4dn, or G5 instances.&lt;/p&gt; &lt;/note&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ElasticGpuAssociationResponse> ElasticGpuAssociations;
        /// <summary>
        /// &lt;p&gt;The elastic inference accelerator associated with the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ElasticInferenceAcceleratorAssociationResponse> ElasticInferenceAcceleratorAssociations;
        /// <summary>
        /// &lt;p&gt;Specifies whether enhanced networking with ENA is enabled.&lt;/p&gt;
        /// </summary>
        public readonly bool? EnaSupport;
        /// <summary>
        /// &lt;p&gt;Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.EnclaveOptionsResponse? EnclaveOptions;
        /// <summary>
        /// &lt;p&gt;Indicates whether the instance is enabled for hibernation.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.HibernationOptionsResponse? HibernationOptions;
        /// <summary>
        /// &lt;p&gt;The hypervisor type of the instance. The value &lt;code&gt;xen&lt;/code&gt; is used for both Xen and Nitro hypervisors.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.HypervisorTypeEnumValueResponse? Hypervisor;
        /// <summary>
        /// &lt;p&gt;The IAM instance profile associated with the instance, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.IamInstanceProfileResponse? IamInstanceProfile;
        /// <summary>
        /// &lt;p&gt;The ID of the AMI used to launch the instance.&lt;/p&gt;
        /// </summary>
        public readonly string? ImageId;
        /// <summary>
        /// &lt;p&gt;The ID of the instance.&lt;/p&gt;
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// &lt;p&gt;Indicates whether this is a Spot Instance or a Scheduled Instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceLifecycleTypeEnumValueResponse? InstanceLifecycle;
        /// <summary>
        /// &lt;p&gt;The instance type.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceTypeEnumValueResponse? InstanceType;
        /// <summary>
        /// &lt;p&gt;The IPv6 address assigned to the instance.&lt;/p&gt;
        /// </summary>
        public readonly string? Ipv6Address;
        /// <summary>
        /// &lt;p&gt;The kernel associated with this instance, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly string? KernelId;
        /// <summary>
        /// &lt;p&gt;The name of the key pair, if this instance was launched with an associated key pair.&lt;/p&gt;
        /// </summary>
        public readonly string? KeyName;
        /// <summary>
        /// &lt;p&gt;The time the instance was launched.&lt;/p&gt;
        /// </summary>
        public readonly string? LaunchTime;
        /// <summary>
        /// &lt;p&gt;The license configurations for the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.LicenseConfigurationResponse> Licenses;
        /// <summary>
        /// &lt;p&gt;Provides information on the recovery and maintenance options of your instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceMaintenanceOptionsResponse? MaintenanceOptions;
        /// <summary>
        /// &lt;p&gt;The metadata options for the instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceMetadataOptionsResponseResponse? MetadataOptions;
        /// <summary>
        /// &lt;p&gt;The monitoring for the instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.MonitoringResponse? Monitoring;
        /// <summary>
        /// &lt;p&gt;The network interfaces for the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceNetworkInterfaceResponse> NetworkInterfaces;
        /// <summary>
        /// &lt;p&gt;The Amazon Resource Name (ARN) of the Outpost.&lt;/p&gt;
        /// </summary>
        public readonly string? OutpostArn;
        /// <summary>
        /// &lt;p&gt;The location where the instance launched, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.PlacementResponse? Placement;
        /// <summary>
        /// &lt;p&gt;The platform. This value is &lt;code&gt;windows&lt;/code&gt; for Windows instances; otherwise, it is empty.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.PlatformValuesEnumValueResponse? Platform;
        /// <summary>
        /// &lt;p&gt;The platform details value for the instance. For more information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'&gt;AMI billing information fields&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? PlatformDetails;
        /// <summary>
        /// &lt;p&gt;[IPv4 only] The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. &lt;/p&gt; &lt;p&gt;The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.&lt;/p&gt;
        /// </summary>
        public readonly string? PrivateDnsName;
        /// <summary>
        /// &lt;p&gt;The options for the instance hostname.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.PrivateDnsNameOptionsResponseResponse? PrivateDnsNameOptions;
        /// <summary>
        /// &lt;p&gt;The private IPv4 address assigned to the instance.&lt;/p&gt;
        /// </summary>
        public readonly string? PrivateIpAddress;
        /// <summary>
        /// &lt;p&gt;The product codes attached to this instance, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.ProductCodeResponse> ProductCodes;
        /// <summary>
        /// &lt;p&gt;[IPv4 only] The public DNS name assigned to the instance. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. This name is only available if you've enabled DNS hostnames for your VPC.&lt;/p&gt;
        /// </summary>
        public readonly string? PublicDnsName;
        /// <summary>
        /// &lt;p&gt;The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.&lt;/p&gt; &lt;p&gt;A Carrier IP address only applies to an instance launched in a subnet associated with a Wavelength Zone.&lt;/p&gt;
        /// </summary>
        public readonly string? PublicIpAddress;
        /// <summary>
        /// &lt;p&gt;The RAM disk associated with this instance, if applicable.&lt;/p&gt;
        /// </summary>
        public readonly string? RamdiskId;
        /// <summary>
        /// &lt;p&gt;The device name of the root device volume (for example, &lt;code&gt;/dev/sda1&lt;/code&gt;).&lt;/p&gt;
        /// </summary>
        public readonly string? RootDeviceName;
        /// <summary>
        /// &lt;p&gt;The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.DeviceTypeEnumValueResponse? RootDeviceType;
        /// <summary>
        /// &lt;p&gt;The security groups for the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupIdentifierResponse> SecurityGroups;
        /// <summary>
        /// &lt;p&gt;Indicates whether source/destination checking is enabled.&lt;/p&gt;
        /// </summary>
        public readonly bool? SourceDestCheck;
        /// <summary>
        /// &lt;p&gt;If the request is a Spot Instance request, the ID of the request.&lt;/p&gt;
        /// </summary>
        public readonly string? SpotInstanceRequestId;
        /// <summary>
        /// &lt;p&gt;Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.&lt;/p&gt;
        /// </summary>
        public readonly string? SriovNetSupport;
        /// <summary>
        /// &lt;p&gt;The current state of the instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceStateResponse? State;
        /// <summary>
        /// &lt;p&gt;The reason for the most recent state transition.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.StateReasonResponse? StateReason;
        /// <summary>
        /// &lt;p&gt;The reason for the most recent state transition. This might be an empty string.&lt;/p&gt;
        /// </summary>
        public readonly string? StateTransitionReason;
        /// <summary>
        /// &lt;p&gt;The ID of the subnet in which the instance is running.&lt;/p&gt;
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// &lt;p&gt;Any tags assigned to the instance.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// &lt;p&gt;If the instance is configured for NitroTPM support, the value is &lt;code&gt;v2.0&lt;/code&gt;. For more information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'&gt;NitroTPM&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? TpmSupport;
        /// <summary>
        /// &lt;p&gt;The usage operation value for the instance. For more information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'&gt;AMI billing information fields&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? UsageOperation;
        /// <summary>
        /// &lt;p&gt;The time that the usage operation was last updated.&lt;/p&gt;
        /// </summary>
        public readonly string? UsageOperationUpdateTime;
        /// <summary>
        /// &lt;p&gt;The virtualization type of the instance.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.VirtualizationTypeEnumValueResponse? VirtualizationType;
        /// <summary>
        /// &lt;p&gt;The ID of the VPC in which the instance is running.&lt;/p&gt;
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private AwsEc2InstancePropertiesResponse(
            int? amiLaunchIndex,

            Outputs.ArchitectureValuesEnumValueResponse? architecture,

            ImmutableArray<Outputs.InstanceBlockDeviceMappingResponse> blockDeviceMappings,

            Outputs.BootModeValuesEnumValueResponse? bootMode,

            string? capacityReservationId,

            Outputs.CapacityReservationSpecificationResponseResponse? capacityReservationSpecification,

            string? clientToken,

            Outputs.CpuOptionsResponse? cpuOptions,

            Outputs.InstanceBootModeValuesEnumValueResponse? currentInstanceBootMode,

            bool? ebsOptimized,

            ImmutableArray<Outputs.ElasticGpuAssociationResponse> elasticGpuAssociations,

            ImmutableArray<Outputs.ElasticInferenceAcceleratorAssociationResponse> elasticInferenceAcceleratorAssociations,

            bool? enaSupport,

            Outputs.EnclaveOptionsResponse? enclaveOptions,

            Outputs.HibernationOptionsResponse? hibernationOptions,

            Outputs.HypervisorTypeEnumValueResponse? hypervisor,

            Outputs.IamInstanceProfileResponse? iamInstanceProfile,

            string? imageId,

            string? instanceId,

            Outputs.InstanceLifecycleTypeEnumValueResponse? instanceLifecycle,

            Outputs.InstanceTypeEnumValueResponse? instanceType,

            string? ipv6Address,

            string? kernelId,

            string? keyName,

            string? launchTime,

            ImmutableArray<Outputs.LicenseConfigurationResponse> licenses,

            Outputs.InstanceMaintenanceOptionsResponse? maintenanceOptions,

            Outputs.InstanceMetadataOptionsResponseResponse? metadataOptions,

            Outputs.MonitoringResponse? monitoring,

            ImmutableArray<Outputs.InstanceNetworkInterfaceResponse> networkInterfaces,

            string? outpostArn,

            Outputs.PlacementResponse? placement,

            Outputs.PlatformValuesEnumValueResponse? platform,

            string? platformDetails,

            string? privateDnsName,

            Outputs.PrivateDnsNameOptionsResponseResponse? privateDnsNameOptions,

            string? privateIpAddress,

            ImmutableArray<Outputs.ProductCodeResponse> productCodes,

            string? publicDnsName,

            string? publicIpAddress,

            string? ramdiskId,

            string? rootDeviceName,

            Outputs.DeviceTypeEnumValueResponse? rootDeviceType,

            ImmutableArray<Outputs.GroupIdentifierResponse> securityGroups,

            bool? sourceDestCheck,

            string? spotInstanceRequestId,

            string? sriovNetSupport,

            Outputs.InstanceStateResponse? state,

            Outputs.StateReasonResponse? stateReason,

            string? stateTransitionReason,

            string? subnetId,

            ImmutableArray<Outputs.TagResponse> tags,

            string? tpmSupport,

            string? usageOperation,

            string? usageOperationUpdateTime,

            Outputs.VirtualizationTypeEnumValueResponse? virtualizationType,

            string? vpcId)
        {
            AmiLaunchIndex = amiLaunchIndex;
            Architecture = architecture;
            BlockDeviceMappings = blockDeviceMappings;
            BootMode = bootMode;
            CapacityReservationId = capacityReservationId;
            CapacityReservationSpecification = capacityReservationSpecification;
            ClientToken = clientToken;
            CpuOptions = cpuOptions;
            CurrentInstanceBootMode = currentInstanceBootMode;
            EbsOptimized = ebsOptimized;
            ElasticGpuAssociations = elasticGpuAssociations;
            ElasticInferenceAcceleratorAssociations = elasticInferenceAcceleratorAssociations;
            EnaSupport = enaSupport;
            EnclaveOptions = enclaveOptions;
            HibernationOptions = hibernationOptions;
            Hypervisor = hypervisor;
            IamInstanceProfile = iamInstanceProfile;
            ImageId = imageId;
            InstanceId = instanceId;
            InstanceLifecycle = instanceLifecycle;
            InstanceType = instanceType;
            Ipv6Address = ipv6Address;
            KernelId = kernelId;
            KeyName = keyName;
            LaunchTime = launchTime;
            Licenses = licenses;
            MaintenanceOptions = maintenanceOptions;
            MetadataOptions = metadataOptions;
            Monitoring = monitoring;
            NetworkInterfaces = networkInterfaces;
            OutpostArn = outpostArn;
            Placement = placement;
            Platform = platform;
            PlatformDetails = platformDetails;
            PrivateDnsName = privateDnsName;
            PrivateDnsNameOptions = privateDnsNameOptions;
            PrivateIpAddress = privateIpAddress;
            ProductCodes = productCodes;
            PublicDnsName = publicDnsName;
            PublicIpAddress = publicIpAddress;
            RamdiskId = ramdiskId;
            RootDeviceName = rootDeviceName;
            RootDeviceType = rootDeviceType;
            SecurityGroups = securityGroups;
            SourceDestCheck = sourceDestCheck;
            SpotInstanceRequestId = spotInstanceRequestId;
            SriovNetSupport = sriovNetSupport;
            State = state;
            StateReason = stateReason;
            StateTransitionReason = stateTransitionReason;
            SubnetId = subnetId;
            Tags = tags;
            TpmSupport = tpmSupport;
            UsageOperation = usageOperation;
            UsageOperationUpdateTime = usageOperationUpdateTime;
            VirtualizationType = virtualizationType;
            VpcId = vpcId;
        }
    }
}
