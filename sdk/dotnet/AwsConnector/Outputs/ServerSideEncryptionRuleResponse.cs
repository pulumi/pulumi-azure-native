// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Outputs
{

    /// <summary>
    /// Definition of ServerSideEncryptionRule
    /// </summary>
    [OutputType]
    public sealed class ServerSideEncryptionRuleResponse
    {
        /// <summary>
        /// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
        /// </summary>
        public readonly bool? BucketKeyEnabled;
        /// <summary>
        /// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
        /// </summary>
        public readonly Outputs.ServerSideEncryptionByDefaultResponse? ServerSideEncryptionByDefault;

        [OutputConstructor]
        private ServerSideEncryptionRuleResponse(
            bool? bucketKeyEnabled,

            Outputs.ServerSideEncryptionByDefaultResponse? serverSideEncryptionByDefault)
        {
            BucketKeyEnabled = bucketKeyEnabled;
            ServerSideEncryptionByDefault = serverSideEncryptionByDefault;
        }
    }
}
