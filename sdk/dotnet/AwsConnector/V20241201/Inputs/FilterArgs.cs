// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of Filter
    /// </summary>
    public sealed class FilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How to handle logs that satisfy the filter's conditions and requirement.
        /// </summary>
        [Input("behavior")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.FilterBehavior>? Behavior { get; set; }

        [Input("conditions")]
        private InputList<Inputs.ConditionArgs>? _conditions;

        /// <summary>
        /// Match conditions for the filter.
        /// </summary>
        public InputList<Inputs.ConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.ConditionArgs>());
            set => _conditions = value;
        }

        [Input("contains")]
        private InputList<string>? _contains;

        /// <summary>
        /// Property contains
        /// </summary>
        public InputList<string> Contains
        {
            get => _contains ?? (_contains = new InputList<string>());
            set => _contains = value;
        }

        [Input("eq")]
        private InputList<string>? _eq;

        /// <summary>
        /// Property eq
        /// </summary>
        public InputList<string> Eq
        {
            get => _eq ?? (_eq = new InputList<string>());
            set => _eq = value;
        }

        /// <summary>
        /// Property exists
        /// </summary>
        [Input("exists")]
        public Input<bool>? Exists { get; set; }

        [Input("neq")]
        private InputList<string>? _neq;

        /// <summary>
        /// Property neq
        /// </summary>
        public InputList<string> Neq
        {
            get => _neq ?? (_neq = new InputList<string>());
            set => _neq = value;
        }

        /// <summary>
        /// Property property
        /// </summary>
        [Input("property")]
        public Input<string>? Property { get; set; }

        /// <summary>
        /// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
        /// </summary>
        [Input("requirement")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.FilterRequirement>? Requirement { get; set; }

        public FilterArgs()
        {
        }
        public static new FilterArgs Empty => new FilterArgs();
    }
}
