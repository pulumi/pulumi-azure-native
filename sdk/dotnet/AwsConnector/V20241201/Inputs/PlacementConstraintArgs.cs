// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of PlacementConstraint
    /// </summary>
    public sealed class PlacementConstraintArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.PlacementConstraintType>? Type { get; set; }

        public PlacementConstraintArgs()
        {
        }
        public static new PlacementConstraintArgs Empty => new PlacementConstraintArgs();
    }
}
