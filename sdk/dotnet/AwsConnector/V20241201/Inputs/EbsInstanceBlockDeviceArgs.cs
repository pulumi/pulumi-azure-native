// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of EbsInstanceBlockDevice
    /// </summary>
    public sealed class EbsInstanceBlockDeviceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;p&gt;The ARN of the Amazon ECS or Fargate task to which the volume is attached.&lt;/p&gt;
        /// </summary>
        [Input("associatedResource")]
        public Input<string>? AssociatedResource { get; set; }

        /// <summary>
        /// &lt;p&gt;The time stamp when the attachment initiated.&lt;/p&gt;
        /// </summary>
        [Input("attachTime")]
        public Input<string>? AttachTime { get; set; }

        /// <summary>
        /// &lt;p&gt;Indicates whether the volume is deleted on instance termination.&lt;/p&gt;
        /// </summary>
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// &lt;p&gt;The attachment state.&lt;/p&gt;
        /// </summary>
        [Input("status")]
        public Input<Inputs.AttachmentStatusEnumValueArgs>? Status { get; set; }

        /// <summary>
        /// &lt;p&gt;The ID of the EBS volume.&lt;/p&gt;
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        /// <summary>
        /// &lt;p&gt;The ID of the Amazon Web Services account that owns the volume.&lt;/p&gt; &lt;p&gt;This parameter is returned only for volumes that are attached to Fargate tasks.&lt;/p&gt;
        /// </summary>
        [Input("volumeOwnerId")]
        public Input<string>? VolumeOwnerId { get; set; }

        public EbsInstanceBlockDeviceArgs()
        {
        }
        public static new EbsInstanceBlockDeviceArgs Empty => new EbsInstanceBlockDeviceArgs();
    }
}
