// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of NotificationConfiguration
    /// </summary>
    public sealed class NotificationConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
        /// </summary>
        [Input("eventBridgeConfiguration")]
        public Input<Inputs.EventBridgeConfigurationArgs>? EventBridgeConfiguration { get; set; }

        [Input("lambdaConfigurations")]
        private InputList<Inputs.LambdaConfigurationArgs>? _lambdaConfigurations;

        /// <summary>
        /// Describes the LAMlong functions to invoke and the events for which to invoke them.
        /// </summary>
        public InputList<Inputs.LambdaConfigurationArgs> LambdaConfigurations
        {
            get => _lambdaConfigurations ?? (_lambdaConfigurations = new InputList<Inputs.LambdaConfigurationArgs>());
            set => _lambdaConfigurations = value;
        }

        [Input("queueConfigurations")]
        private InputList<Inputs.QueueConfigurationArgs>? _queueConfigurations;

        /// <summary>
        /// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
        /// </summary>
        public InputList<Inputs.QueueConfigurationArgs> QueueConfigurations
        {
            get => _queueConfigurations ?? (_queueConfigurations = new InputList<Inputs.QueueConfigurationArgs>());
            set => _queueConfigurations = value;
        }

        [Input("topicConfigurations")]
        private InputList<Inputs.TopicConfigurationArgs>? _topicConfigurations;

        /// <summary>
        /// The topic to which notifications are sent and the events for which notifications are generated.
        /// </summary>
        public InputList<Inputs.TopicConfigurationArgs> TopicConfigurations
        {
            get => _topicConfigurations ?? (_topicConfigurations = new InputList<Inputs.TopicConfigurationArgs>());
            set => _topicConfigurations = value;
        }

        public NotificationConfigurationArgs()
        {
        }
        public static new NotificationConfigurationArgs Empty => new NotificationConfigurationArgs();
    }
}
