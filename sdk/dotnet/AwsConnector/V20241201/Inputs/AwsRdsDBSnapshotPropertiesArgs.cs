// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of awsRdsDBSnapshot
    /// </summary>
    public sealed class AwsRdsDBSnapshotPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;p&gt;Specifies the allocated storage size in gibibytes (GiB).&lt;/p&gt;
        /// </summary>
        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the DB instance identifier of the DB instance this DB snapshot was created from.&lt;/p&gt;
        /// </summary>
        [Input("dbInstanceIdentifier")]
        public Input<string>? DbInstanceIdentifier { get; set; }

        /// <summary>
        /// &lt;p&gt;The Amazon Resource Name (ARN) for the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("dbSnapshotArn")]
        public Input<string>? DbSnapshotArn { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the identifier for the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("dbSnapshotIdentifier")]
        public Input<string>? DbSnapshotIdentifier { get; set; }

        /// <summary>
        /// &lt;p&gt;The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files. The Oracle SID is also the name of your CDB.&lt;/p&gt;
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        /// <summary>
        /// &lt;p&gt;The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.&lt;/p&gt;
        /// </summary>
        [Input("dbiResourceId")]
        public Input<string>? DbiResourceId { get; set; }

        /// <summary>
        /// &lt;p&gt;Indicates whether the DB instance has a dedicated log volume (DLV) enabled.&lt;/p&gt;
        /// </summary>
        [Input("dedicatedLogVolume")]
        public Input<bool>? DedicatedLogVolume { get; set; }

        /// <summary>
        /// &lt;p&gt;Indicates whether the DB snapshot is encrypted.&lt;/p&gt;
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the name of the database engine.&lt;/p&gt;
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the version of the database engine.&lt;/p&gt;
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// &lt;p&gt;Indicates whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled.&lt;/p&gt;
        /// </summary>
        [Input("iamDatabaseAuthenticationEnabled")]
        public Input<bool>? IamDatabaseAuthenticationEnabled { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was created.&lt;/p&gt;
        /// </summary>
        [Input("instanceCreateTime")]
        public Input<string>? InstanceCreateTime { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.&lt;/p&gt;
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// &lt;p&gt;If &lt;code&gt;Encrypted&lt;/code&gt; is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot.&lt;/p&gt; &lt;p&gt;The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.&lt;/p&gt;
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// &lt;p&gt;License model information for the restored DB instance.&lt;/p&gt;
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        /// <summary>
        /// &lt;p&gt;Provides the master username for the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        /// <summary>
        /// &lt;p&gt;Indicates whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant configuration (FALSE).&lt;/p&gt;
        /// </summary>
        [Input("multiTenant")]
        public Input<bool>? MultiTenant { get; set; }

        /// <summary>
        /// &lt;p&gt;Provides the option group name for the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("optionGroupName")]
        public Input<string>? OptionGroupName { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot is copied.&lt;/p&gt;
        /// </summary>
        [Input("originalSnapshotCreateTime")]
        public Input<string>? OriginalSnapshotCreateTime { get; set; }

        /// <summary>
        /// &lt;p&gt;The percentage of the estimated data that has been transferred.&lt;/p&gt;
        /// </summary>
        [Input("percentProgress")]
        public Input<int>? PercentProgress { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the port that the database engine was listening on at the time of the snapshot.&lt;/p&gt;
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("processorFeatures")]
        private InputList<Inputs.ProcessorFeatureArgs>? _processorFeatures;

        /// <summary>
        /// &lt;p&gt;The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.&lt;/p&gt;
        /// </summary>
        public InputList<Inputs.ProcessorFeatureArgs> ProcessorFeatures
        {
            get => _processorFeatures ?? (_processorFeatures = new InputList<Inputs.ProcessorFeatureArgs>());
            set => _processorFeatures = value;
        }

        /// <summary>
        /// &lt;p&gt;Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is copied.&lt;/p&gt;
        /// </summary>
        [Input("snapshotCreateTime")]
        public Input<string>? SnapshotCreateTime { get; set; }

        /// <summary>
        /// &lt;p&gt;The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime specifies the system time that the snapshot completed.&lt;/p&gt; &lt;p&gt;If you back up a read replica, you can determine the replica lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two hours later than SnapshotDatabaseTime, then the replica lag is two hours.&lt;/p&gt;
        /// </summary>
        [Input("snapshotDatabaseTime")]
        public Input<string>? SnapshotDatabaseTime { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.&lt;/p&gt;
        /// </summary>
        [Input("snapshotTarget")]
        public Input<string>? SnapshotTarget { get; set; }

        /// <summary>
        /// &lt;p&gt;Provides the type of the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("snapshotType")]
        public Input<string>? SnapshotType { get; set; }

        /// <summary>
        /// &lt;p&gt;The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of a cross-account or cross-Region copy.&lt;/p&gt;
        /// </summary>
        [Input("sourceDBSnapshotIdentifier")]
        public Input<string>? SourceDBSnapshotIdentifier { get; set; }

        /// <summary>
        /// &lt;p&gt;The Amazon Web Services Region that the DB snapshot was created in or copied from.&lt;/p&gt;
        /// </summary>
        [Input("sourceRegion")]
        public Input<string>? SourceRegion { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the status of this DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the storage throughput for the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("storageThroughput")]
        public Input<int>? StorageThroughput { get; set; }

        /// <summary>
        /// &lt;p&gt;Specifies the storage type associated with DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("tagList")]
        private InputList<Inputs.TagArgs>? _tagList;

        /// <summary>
        /// Property tagList
        /// </summary>
        public InputList<Inputs.TagArgs> TagList
        {
            get => _tagList ?? (_tagList = new InputList<Inputs.TagArgs>());
            set => _tagList = value;
        }

        /// <summary>
        /// &lt;p&gt;The ARN from the key store with which to associate the instance for TDE encryption.&lt;/p&gt;
        /// </summary>
        [Input("tdeCredentialArn")]
        public Input<string>? TdeCredentialArn { get; set; }

        /// <summary>
        /// &lt;p&gt;The time zone of the DB snapshot. In most cases, the &lt;code&gt;Timezone&lt;/code&gt; element is empty. &lt;code&gt;Timezone&lt;/code&gt; content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.&lt;/p&gt;
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// &lt;p&gt;Provides the VPC ID associated with the DB snapshot.&lt;/p&gt;
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public AwsRdsDBSnapshotPropertiesArgs()
        {
        }
        public static new AwsRdsDBSnapshotPropertiesArgs Empty => new AwsRdsDBSnapshotPropertiesArgs();
    }
}
