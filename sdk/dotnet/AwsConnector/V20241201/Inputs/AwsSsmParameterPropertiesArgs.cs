// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of awsSsmParameter
    /// </summary>
    public sealed class AwsSsmParameterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        [Input("allowedPattern")]
        public Input<string>? AllowedPattern { get; set; }

        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        [Input("dataType")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.DataType>? DataType { get; set; }

        /// <summary>
        /// Information about the parameter.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the parameter.  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Information about the policies assigned to a parameter.  [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.
        /// </summary>
        [Input("policies")]
        public Input<string>? Policies { get; set; }

        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.
        /// </summary>
        [Input("tags")]
        public Input<object>? Tags { get; set; }

        /// <summary>
        /// The parameter tier.
        /// </summary>
        [Input("tier")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.Tier>? Tier { get; set; }

        /// <summary>
        /// The type of parameter.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.Type>? Type { get; set; }

        /// <summary>
        /// The parameter value.  If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public AwsSsmParameterPropertiesArgs()
        {
        }
        public static new AwsSsmParameterPropertiesArgs Empty => new AwsSsmParameterPropertiesArgs();
    }
}
