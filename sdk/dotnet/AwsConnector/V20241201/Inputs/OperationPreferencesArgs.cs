// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of OperationPreferences
    /// </summary>
    public sealed class OperationPreferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Property failureToleranceCount
        /// </summary>
        [Input("failureToleranceCount")]
        public Input<int>? FailureToleranceCount { get; set; }

        /// <summary>
        /// Property failureTolerancePercentage
        /// </summary>
        [Input("failureTolerancePercentage")]
        public Input<int>? FailureTolerancePercentage { get; set; }

        /// <summary>
        /// Property maxConcurrentCount
        /// </summary>
        [Input("maxConcurrentCount")]
        public Input<int>? MaxConcurrentCount { get; set; }

        /// <summary>
        /// Property maxConcurrentPercentage
        /// </summary>
        [Input("maxConcurrentPercentage")]
        public Input<int>? MaxConcurrentPercentage { get; set; }

        /// <summary>
        /// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
        /// </summary>
        [Input("regionConcurrencyType")]
        public InputUnion<string, Pulumi.AzureNative.AwsConnector.V20241201.OperationPreferencesRegionConcurrencyType>? RegionConcurrencyType { get; set; }

        [Input("regionOrder")]
        private InputList<string>? _regionOrder;

        /// <summary>
        /// Property regionOrder
        /// </summary>
        public InputList<string> RegionOrder
        {
            get => _regionOrder ?? (_regionOrder = new InputList<string>());
            set => _regionOrder = value;
        }

        public OperationPreferencesArgs()
        {
        }
        public static new OperationPreferencesArgs Empty => new OperationPreferencesArgs();
    }
}
