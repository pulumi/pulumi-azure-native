// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of RecordingMode
    /// </summary>
    public sealed class RecordingModeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;p&gt;The default recording frequency that Config uses to record configuration changes.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Daily recording is not supported for the following resource types:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;AWS::Config::ResourceCompliance&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;AWS::Config::ConformancePackCompliance&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;AWS::Config::ConfigurationRecorder&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For the &lt;b&gt;allSupported&lt;/b&gt; (&lt;code&gt;ALL_SUPPORTED_RESOURCE_TYPES&lt;/code&gt;) recording strategy, these resource types will be set to Continuous recording.&lt;/p&gt; &lt;/important&gt;
        /// </summary>
        [Input("recordingFrequency")]
        public Input<Inputs.RecordingFrequencyEnumValueArgs>? RecordingFrequency { get; set; }

        [Input("recordingModeOverrides")]
        private InputList<Inputs.RecordingModeOverrideArgs>? _recordingModeOverrides;

        /// <summary>
        /// &lt;p&gt;An array of &lt;code&gt;recordingModeOverride&lt;/code&gt; objects for you to specify your overrides for the recording mode. The &lt;code&gt;recordingModeOverride&lt;/code&gt; object in the &lt;code&gt;recordingModeOverrides&lt;/code&gt; array consists of three fields: a &lt;code&gt;description&lt;/code&gt;, the new &lt;code&gt;recordingFrequency&lt;/code&gt;, and an array of &lt;code&gt;resourceTypes&lt;/code&gt; to override.&lt;/p&gt;
        /// </summary>
        public InputList<Inputs.RecordingModeOverrideArgs> RecordingModeOverrides
        {
            get => _recordingModeOverrides ?? (_recordingModeOverrides = new InputList<Inputs.RecordingModeOverrideArgs>());
            set => _recordingModeOverrides = value;
        }

        public RecordingModeArgs()
        {
        }
        public static new RecordingModeArgs Empty => new RecordingModeArgs();
    }
}
