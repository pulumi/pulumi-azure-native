// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Inputs
{

    /// <summary>
    /// Definition of awsApiGatewayStage
    /// </summary>
    public sealed class AwsApiGatewayStagePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access log settings, including the access log format and access log destination ARN. The ``AccessLogSetting`` property type specifies settings for logging access in this stage.  ``AccessLogSetting`` is a property of the [AWS::ApiGateway::Stage](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html) resource.
        /// </summary>
        [Input("accessLogSetting")]
        public Input<Inputs.AccessLogSettingArgs>? AccessLogSetting { get; set; }

        /// <summary>
        /// Specifies whether a cache cluster is enabled for the stage.
        /// </summary>
        [Input("cacheClusterEnabled")]
        public Input<bool>? CacheClusterEnabled { get; set; }

        /// <summary>
        /// The stage's cache capacity in GB. For more information about choosing a cache size, see [Enabling API caching to enhance responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html).
        /// </summary>
        [Input("cacheClusterSize")]
        public Input<string>? CacheClusterSize { get; set; }

        /// <summary>
        /// Settings for the canary deployment in this stage. Configuration settings of a canary deployment.
        /// </summary>
        [Input("canarySetting")]
        public Input<Inputs.CanarySettingArgs>? CanarySetting { get; set; }

        /// <summary>
        /// The identifier of a client certificate for an API stage.
        /// </summary>
        [Input("clientCertificateId")]
        public Input<string>? ClientCertificateId { get; set; }

        /// <summary>
        /// The identifier of the Deployment that the stage points to.
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        /// <summary>
        /// The stage's description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The version of the associated API documentation.
        /// </summary>
        [Input("documentationVersion")]
        public Input<string>? DocumentationVersion { get; set; }

        [Input("methodSettings")]
        private InputList<Inputs.MethodSettingArgs>? _methodSettings;

        /// <summary>
        /// A map that defines the method settings for a Stage resource. Keys (designated as ``/{method_setting_key`` below) are method paths defined as ``{resource_path}/{http_method}`` for an individual method override, or ``/\*/\*`` for overriding all methods in the stage.
        /// </summary>
        public InputList<Inputs.MethodSettingArgs> MethodSettings
        {
            get => _methodSettings ?? (_methodSettings = new InputList<Inputs.MethodSettingArgs>());
            set => _methodSettings = value;
        }

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId")]
        public Input<string>? RestApiId { get; set; }

        /// <summary>
        /// The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
        /// </summary>
        [Input("stageName")]
        public Input<string>? StageName { get; set; }

        [Input("tags")]
        private InputList<Inputs.TagArgs>? _tags;

        /// <summary>
        /// The collection of tags. Each tag element is associated with a given resource.
        /// </summary>
        public InputList<Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies whether active tracing with X-ray is enabled for the Stage.
        /// </summary>
        [Input("tracingEnabled")]
        public Input<bool>? TracingEnabled { get; set; }

        [Input("variables")]
        private InputMap<string>? _variables;

        /// <summary>
        /// A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&amp;=,]+``.
        /// </summary>
        public InputMap<string> Variables
        {
            get => _variables ?? (_variables = new InputMap<string>());
            set => _variables = value;
        }

        public AwsApiGatewayStagePropertiesArgs()
        {
        }
        public static new AwsApiGatewayStagePropertiesArgs Empty => new AwsApiGatewayStagePropertiesArgs();
    }
}
