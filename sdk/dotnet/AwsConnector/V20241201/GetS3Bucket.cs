// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201
{
    public static class GetS3Bucket
    {
        /// <summary>
        /// Get a S3Bucket
        /// </summary>
        public static Task<GetS3BucketResult> InvokeAsync(GetS3BucketArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetS3BucketResult>("azure-native:awsconnector/v20241201:getS3Bucket", args ?? new GetS3BucketArgs(), options.WithDefaults());

        /// <summary>
        /// Get a S3Bucket
        /// </summary>
        public static Output<GetS3BucketResult> Invoke(GetS3BucketInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetS3BucketResult>("azure-native:awsconnector/v20241201:getS3Bucket", args ?? new GetS3BucketInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetS3BucketArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of S3Bucket
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetS3BucketArgs()
        {
        }
        public static new GetS3BucketArgs Empty => new GetS3BucketArgs();
    }

    public sealed class GetS3BucketInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of S3Bucket
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetS3BucketInvokeArgs()
        {
        }
        public static new GetS3BucketInvokeArgs Empty => new GetS3BucketInvokeArgs();
    }


    [OutputType]
    public sealed class GetS3BucketResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.S3BucketPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetS3BucketResult(
            string id,

            string location,

            string name,

            Outputs.S3BucketPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
