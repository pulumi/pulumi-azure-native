// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201
{
    public static class GetEc2Instance
    {
        /// <summary>
        /// Get a Ec2Instance
        /// </summary>
        public static Task<GetEc2InstanceResult> InvokeAsync(GetEc2InstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEc2InstanceResult>("azure-native:awsconnector/v20241201:getEc2Instance", args ?? new GetEc2InstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Ec2Instance
        /// </summary>
        public static Output<GetEc2InstanceResult> Invoke(GetEc2InstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEc2InstanceResult>("azure-native:awsconnector/v20241201:getEc2Instance", args ?? new GetEc2InstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEc2InstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetEc2InstanceArgs()
        {
        }
        public static new GetEc2InstanceArgs Empty => new GetEc2InstanceArgs();
    }

    public sealed class GetEc2InstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetEc2InstanceInvokeArgs()
        {
        }
        public static new GetEc2InstanceInvokeArgs Empty => new GetEc2InstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetEc2InstanceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.Ec2InstancePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEc2InstanceResult(
            string id,

            string name,

            Outputs.Ec2InstancePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
