// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsEc2Address
    /// </summary>
    [OutputType]
    public sealed class AwsEc2AddressPropertiesResponse
    {
        /// <summary>
        /// &lt;p&gt;The ID representing the allocation of the address.&lt;/p&gt;
        /// </summary>
        public readonly string? AllocationId;
        /// <summary>
        /// &lt;p&gt;The ID representing the association of the address with an instance.&lt;/p&gt;
        /// </summary>
        public readonly string? AssociationId;
        /// <summary>
        /// &lt;p&gt;The carrier IP address associated. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance). &lt;/p&gt;
        /// </summary>
        public readonly string? CarrierIp;
        /// <summary>
        /// &lt;p&gt;The customer-owned IP address.&lt;/p&gt;
        /// </summary>
        public readonly string? CustomerOwnedIp;
        /// <summary>
        /// &lt;p&gt;The ID of the customer-owned address pool.&lt;/p&gt;
        /// </summary>
        public readonly string? CustomerOwnedIpv4Pool;
        /// <summary>
        /// &lt;p&gt;The network (&lt;code&gt;vpc&lt;/code&gt;).&lt;/p&gt;
        /// </summary>
        public readonly Outputs.DomainTypeEnumValueResponse? Domain;
        /// <summary>
        /// &lt;p&gt;The ID of the instance that the address is associated with (if any).&lt;/p&gt;
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// &lt;p&gt;The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.&lt;/p&gt;
        /// </summary>
        public readonly string? NetworkBorderGroup;
        /// <summary>
        /// &lt;p&gt;The ID of the network interface.&lt;/p&gt;
        /// </summary>
        public readonly string? NetworkInterfaceId;
        /// <summary>
        /// &lt;p&gt;The ID of the Amazon Web Services account that owns the network interface.&lt;/p&gt;
        /// </summary>
        public readonly string? NetworkInterfaceOwnerId;
        /// <summary>
        /// &lt;p&gt;The private IP address associated with the Elastic IP address.&lt;/p&gt;
        /// </summary>
        public readonly string? PrivateIpAddress;
        /// <summary>
        /// &lt;p&gt;The Elastic IP address.&lt;/p&gt;
        /// </summary>
        public readonly string? PublicIp;
        /// <summary>
        /// &lt;p&gt;The ID of an address pool.&lt;/p&gt;
        /// </summary>
        public readonly string? PublicIpv4Pool;
        /// <summary>
        /// &lt;p&gt;Any tags assigned to the Elastic IP address.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;

        [OutputConstructor]
        private AwsEc2AddressPropertiesResponse(
            string? allocationId,

            string? associationId,

            string? carrierIp,

            string? customerOwnedIp,

            string? customerOwnedIpv4Pool,

            Outputs.DomainTypeEnumValueResponse? domain,

            string? instanceId,

            string? networkBorderGroup,

            string? networkInterfaceId,

            string? networkInterfaceOwnerId,

            string? privateIpAddress,

            string? publicIp,

            string? publicIpv4Pool,

            ImmutableArray<Outputs.TagResponse> tags)
        {
            AllocationId = allocationId;
            AssociationId = associationId;
            CarrierIp = carrierIp;
            CustomerOwnedIp = customerOwnedIp;
            CustomerOwnedIpv4Pool = customerOwnedIpv4Pool;
            Domain = domain;
            InstanceId = instanceId;
            NetworkBorderGroup = networkBorderGroup;
            NetworkInterfaceId = networkInterfaceId;
            NetworkInterfaceOwnerId = networkInterfaceOwnerId;
            PrivateIpAddress = privateIpAddress;
            PublicIp = publicIp;
            PublicIpv4Pool = publicIpv4Pool;
            Tags = tags;
        }
    }
}
