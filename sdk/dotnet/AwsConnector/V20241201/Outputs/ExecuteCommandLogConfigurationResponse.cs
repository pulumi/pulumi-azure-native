// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of ExecuteCommandLogConfiguration
    /// </summary>
    [OutputType]
    public sealed class ExecuteCommandLogConfigurationResponse
    {
        /// <summary>
        /// Determines whether to use encryption on the CloudWatch logs. If not specified, encryption will be off.
        /// </summary>
        public readonly bool? CloudWatchEncryptionEnabled;
        /// <summary>
        /// The name of the CloudWatch log group to send logs to.  The CloudWatch log group must already be created.
        /// </summary>
        public readonly string? CloudWatchLogGroupName;
        /// <summary>
        /// The name of the S3 bucket to send logs to.  The S3 bucket must already be created.
        /// </summary>
        public readonly string? S3BucketName;
        /// <summary>
        /// Determines whether to use encryption on the S3 logs. If not specified, encryption is not used.
        /// </summary>
        public readonly bool? S3EncryptionEnabled;
        /// <summary>
        /// An optional folder in the S3 bucket to place logs in.
        /// </summary>
        public readonly string? S3KeyPrefix;

        [OutputConstructor]
        private ExecuteCommandLogConfigurationResponse(
            bool? cloudWatchEncryptionEnabled,

            string? cloudWatchLogGroupName,

            string? s3BucketName,

            bool? s3EncryptionEnabled,

            string? s3KeyPrefix)
        {
            CloudWatchEncryptionEnabled = cloudWatchEncryptionEnabled;
            CloudWatchLogGroupName = cloudWatchLogGroupName;
            S3BucketName = s3BucketName;
            S3EncryptionEnabled = s3EncryptionEnabled;
            S3KeyPrefix = s3KeyPrefix;
        }
    }
}
