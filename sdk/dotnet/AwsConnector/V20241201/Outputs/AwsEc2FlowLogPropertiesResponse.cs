// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsEc2FlowLog
    /// </summary>
    [OutputType]
    public sealed class AwsEc2FlowLogPropertiesResponse
    {
        /// <summary>
        /// The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
        /// </summary>
        public readonly string? DeliverCrossAccountRole;
        /// <summary>
        /// The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        public readonly string? DeliverLogsPermissionArn;
        /// <summary>
        /// Property destinationOptions
        /// </summary>
        public readonly Outputs.DestinationOptionsModelPropertiesResponse? DestinationOptions;
        /// <summary>
        /// The Flow Log ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the value specified for LogDestinationType.
        /// </summary>
        public readonly string? LogDestination;
        /// <summary>
        /// Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3.
        /// </summary>
        public readonly string? LogDestinationType;
        /// <summary>
        /// The fields to include in the flow log record, in the order in which they should appear.
        /// </summary>
        public readonly string? LogFormat;
        /// <summary>
        /// The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        public readonly string? LogGroupName;
        /// <summary>
        /// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).
        /// </summary>
        public readonly int? MaxAggregationInterval;
        /// <summary>
        /// The ID of the subnet, network interface, or VPC for which you want to create a flow log.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The tags to apply to the flow logs.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;
        /// <summary>
        /// The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
        /// </summary>
        public readonly string? TrafficType;

        [OutputConstructor]
        private AwsEc2FlowLogPropertiesResponse(
            string? deliverCrossAccountRole,

            string? deliverLogsPermissionArn,

            Outputs.DestinationOptionsModelPropertiesResponse? destinationOptions,

            string? id,

            string? logDestination,

            string? logDestinationType,

            string? logFormat,

            string? logGroupName,

            int? maxAggregationInterval,

            string? resourceId,

            string? resourceType,

            ImmutableArray<Outputs.TagResponse> tags,

            string? trafficType)
        {
            DeliverCrossAccountRole = deliverCrossAccountRole;
            DeliverLogsPermissionArn = deliverLogsPermissionArn;
            DestinationOptions = destinationOptions;
            Id = id;
            LogDestination = logDestination;
            LogDestinationType = logDestinationType;
            LogFormat = logFormat;
            LogGroupName = logGroupName;
            MaxAggregationInterval = maxAggregationInterval;
            ResourceId = resourceId;
            ResourceType = resourceType;
            Tags = tags;
            TrafficType = trafficType;
        }
    }
}
