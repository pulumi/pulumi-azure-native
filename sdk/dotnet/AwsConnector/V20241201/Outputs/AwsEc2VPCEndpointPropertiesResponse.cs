// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsEc2VPCEndpoint
    /// </summary>
    [OutputType]
    public sealed class AwsEc2VPCEndpointPropertiesResponse
    {
        /// <summary>
        /// Property creationTimestamp
        /// </summary>
        public readonly string? CreationTimestamp;
        /// <summary>
        /// Property dnsEntries
        /// </summary>
        public readonly ImmutableArray<string> DnsEntries;
        /// <summary>
        /// Property id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Property networkInterfaceIds
        /// </summary>
        public readonly ImmutableArray<string> NetworkInterfaceIds;
        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.
        /// </summary>
        public readonly object? PolicyDocument;
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        public readonly bool? PrivateDnsEnabled;
        /// <summary>
        /// The IDs of the route tables. Routing is supported only for gateway endpoints.
        /// </summary>
        public readonly ImmutableArray<string> RouteTableIds;
        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// The name of the endpoint service.
        /// </summary>
        public readonly string? ServiceName;
        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// The type of endpoint. Default: Gateway
        /// </summary>
        public readonly string? VpcEndpointType;
        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private AwsEc2VPCEndpointPropertiesResponse(
            string? creationTimestamp,

            ImmutableArray<string> dnsEntries,

            string? id,

            ImmutableArray<string> networkInterfaceIds,

            object? policyDocument,

            bool? privateDnsEnabled,

            ImmutableArray<string> routeTableIds,

            ImmutableArray<string> securityGroupIds,

            string? serviceName,

            ImmutableArray<string> subnetIds,

            string? vpcEndpointType,

            string? vpcId)
        {
            CreationTimestamp = creationTimestamp;
            DnsEntries = dnsEntries;
            Id = id;
            NetworkInterfaceIds = networkInterfaceIds;
            PolicyDocument = policyDocument;
            PrivateDnsEnabled = privateDnsEnabled;
            RouteTableIds = routeTableIds;
            SecurityGroupIds = securityGroupIds;
            ServiceName = serviceName;
            SubnetIds = subnetIds;
            VpcEndpointType = vpcEndpointType;
            VpcId = vpcId;
        }
    }
}
