// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsRedshiftClusterParameterGroup
    /// </summary>
    [OutputType]
    public sealed class AwsRedshiftClusterParameterGroupPropertiesResponse
    {
        /// <summary>
        /// A description of the parameter group.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines the set of parameters.
        /// </summary>
        public readonly string? ParameterGroupFamily;
        /// <summary>
        /// The name of the cluster parameter group.
        /// </summary>
        public readonly string? ParameterGroupName;
        /// <summary>
        /// An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
        /// </summary>
        public readonly ImmutableArray<Outputs.ParameterResponse> Parameters;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.TagResponse> Tags;

        [OutputConstructor]
        private AwsRedshiftClusterParameterGroupPropertiesResponse(
            string? description,

            string? parameterGroupFamily,

            string? parameterGroupName,

            ImmutableArray<Outputs.ParameterResponse> parameters,

            ImmutableArray<Outputs.TagResponse> tags)
        {
            Description = description;
            ParameterGroupFamily = parameterGroupFamily;
            ParameterGroupName = parameterGroupName;
            Parameters = parameters;
            Tags = tags;
        }
    }
}
