// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of NoncurrentVersionTransition
    /// </summary>
    [OutputType]
    public sealed class NoncurrentVersionTransitionResponse
    {
        /// <summary>
        /// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
        /// </summary>
        public readonly int? NewerNoncurrentVersions;
        /// <summary>
        /// The class of storage used to store the object.
        /// </summary>
        public readonly string? StorageClass;
        /// <summary>
        /// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
        /// </summary>
        public readonly int? TransitionInDays;

        [OutputConstructor]
        private NoncurrentVersionTransitionResponse(
            int? newerNoncurrentVersions,

            string? storageClass,

            int? transitionInDays)
        {
            NewerNoncurrentVersions = newerNoncurrentVersions;
            StorageClass = storageClass;
            TransitionInDays = transitionInDays;
        }
    }
}
