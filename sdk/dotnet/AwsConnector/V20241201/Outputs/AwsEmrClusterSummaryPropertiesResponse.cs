// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsEmrClusterSummary
    /// </summary>
    [OutputType]
    public sealed class AwsEmrClusterSummaryPropertiesResponse
    {
        /// <summary>
        /// &lt;p&gt;The Amazon Resource Name of the cluster.&lt;/p&gt;
        /// </summary>
        public readonly string? ClusterArn;
        /// <summary>
        /// &lt;p&gt;The unique identifier for the cluster.&lt;/p&gt;
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// &lt;p&gt;The name of the cluster.&lt;/p&gt;
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// &lt;p&gt;An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is roughly four times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation and does not reflect the actual billing rate.&lt;/p&gt;
        /// </summary>
        public readonly int? NormalizedInstanceHours;
        /// <summary>
        /// &lt;p&gt; The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. &lt;/p&gt;
        /// </summary>
        public readonly string? OutpostArn;
        /// <summary>
        /// &lt;p&gt;The details about the current status of the cluster.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.EmrClusterStatusResponse? Status;

        [OutputConstructor]
        private AwsEmrClusterSummaryPropertiesResponse(
            string? clusterArn,

            string? id,

            string? name,

            int? normalizedInstanceHours,

            string? outpostArn,

            Outputs.EmrClusterStatusResponse? status)
        {
            ClusterArn = clusterArn;
            Id = id;
            Name = name;
            NormalizedInstanceHours = normalizedInstanceHours;
            OutpostArn = outpostArn;
            Status = status;
        }
    }
}
