// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.V20241201.Outputs
{

    /// <summary>
    /// Definition of awsSsmInstanceInformation
    /// </summary>
    [OutputType]
    public sealed class AwsSsmInstanceInformationPropertiesResponse
    {
        /// <summary>
        /// &lt;p&gt;The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.&lt;/p&gt;
        /// </summary>
        public readonly string? ActivationId;
        /// <summary>
        /// &lt;p&gt;The version of SSM Agent running on your Linux managed node. &lt;/p&gt;
        /// </summary>
        public readonly string? AgentVersion;
        /// <summary>
        /// &lt;p&gt;Information about the association.&lt;/p&gt;
        /// </summary>
        public readonly Outputs.InstanceAggregatedAssociationOverviewResponse? AssociationOverview;
        /// <summary>
        /// &lt;p&gt;The status of the association.&lt;/p&gt;
        /// </summary>
        public readonly string? AssociationStatus;
        /// <summary>
        /// &lt;p&gt;The fully qualified host name of the managed node.&lt;/p&gt;
        /// </summary>
        public readonly string? ComputerName;
        /// <summary>
        /// &lt;p&gt;The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance, use the Amazon EC2 &lt;code&gt;DescribeInstances&lt;/code&gt; operation. For information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'&gt;DescribeInstances&lt;/a&gt; in the &lt;i&gt;Amazon EC2 API Reference&lt;/i&gt; or &lt;a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'&gt;describe-instances&lt;/a&gt; in the &lt;i&gt;Amazon Web Services CLI Command Reference&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? IamRole;
        /// <summary>
        /// &lt;p&gt;The managed node ID. &lt;/p&gt;
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// &lt;p&gt;The IP address of the managed node.&lt;/p&gt;
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// &lt;p&gt;Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server use the EC2Config service to process Systems Manager requests.&lt;/p&gt;
        /// </summary>
        public readonly bool? IsLatestVersion;
        /// <summary>
        /// &lt;p&gt;The date the association was last run.&lt;/p&gt;
        /// </summary>
        public readonly string? LastAssociationExecutionDate;
        /// <summary>
        /// &lt;p&gt;The date and time when the agent last pinged the Systems Manager service. &lt;/p&gt;
        /// </summary>
        public readonly string? LastPingDateTime;
        /// <summary>
        /// &lt;p&gt;The last date the association was successfully run.&lt;/p&gt;
        /// </summary>
        public readonly string? LastSuccessfulAssociationExecutionDate;
        /// <summary>
        /// &lt;p&gt;The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems Manager managed node. The name is specified as the &lt;code&gt;DefaultInstanceName&lt;/code&gt; property using the &lt;a&gt;CreateActivation&lt;/a&gt; command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent on the node, as explained in &lt;a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html'&gt;Install SSM Agent for a hybrid and multicloud environment (Linux)&lt;/a&gt; and &lt;a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html'&gt;Install SSM Agent for a hybrid and multicloud environment (Windows)&lt;/a&gt;. To retrieve the &lt;code&gt;Name&lt;/code&gt; tag of an EC2 instance, use the Amazon EC2 &lt;code&gt;DescribeInstances&lt;/code&gt; operation. For information, see &lt;a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'&gt;DescribeInstances&lt;/a&gt; in the &lt;i&gt;Amazon EC2 API Reference&lt;/i&gt; or &lt;a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'&gt;describe-instances&lt;/a&gt; in the &lt;i&gt;Amazon Web Services CLI Command Reference&lt;/i&gt;.&lt;/p&gt;
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// &lt;p&gt;Connection status of SSM Agent. &lt;/p&gt; &lt;note&gt; &lt;p&gt;The status &lt;code&gt;Inactive&lt;/code&gt; has been deprecated and is no longer in use.&lt;/p&gt; &lt;/note&gt;
        /// </summary>
        public readonly Outputs.PingStatusEnumValueResponse? PingStatus;
        /// <summary>
        /// &lt;p&gt;The name of the operating system platform running on your managed node. &lt;/p&gt;
        /// </summary>
        public readonly string? PlatformName;
        /// <summary>
        /// &lt;p&gt;The operating system platform type. &lt;/p&gt;
        /// </summary>
        public readonly Outputs.PlatformTypeEnumValueResponse? PlatformType;
        /// <summary>
        /// &lt;p&gt;The version of the OS platform running on your managed node. &lt;/p&gt;
        /// </summary>
        public readonly string? PlatformVersion;
        /// <summary>
        /// &lt;p&gt;The date the server or VM was registered with Amazon Web Services as a managed node.&lt;/p&gt;
        /// </summary>
        public readonly string? RegistrationDate;
        /// <summary>
        /// &lt;p&gt;The type of instance. Instances are either EC2 instances or managed instances. &lt;/p&gt;
        /// </summary>
        public readonly Outputs.ResourceTypeEnumValueResponse? ResourceType;
        /// <summary>
        /// &lt;p&gt;The ID of the source resource. For IoT Greengrass devices, &lt;code&gt;SourceId&lt;/code&gt; is the Thing name. &lt;/p&gt;
        /// </summary>
        public readonly string? SourceId;
        /// <summary>
        /// &lt;p&gt;The type of the source resource. For IoT Greengrass devices, &lt;code&gt;SourceType&lt;/code&gt; is &lt;code&gt;AWS::IoT::Thing&lt;/code&gt;. &lt;/p&gt;
        /// </summary>
        public readonly Outputs.SourceTypeEnumValueResponse? SourceType;

        [OutputConstructor]
        private AwsSsmInstanceInformationPropertiesResponse(
            string? activationId,

            string? agentVersion,

            Outputs.InstanceAggregatedAssociationOverviewResponse? associationOverview,

            string? associationStatus,

            string? computerName,

            string? iamRole,

            string? instanceId,

            string? ipAddress,

            bool? isLatestVersion,

            string? lastAssociationExecutionDate,

            string? lastPingDateTime,

            string? lastSuccessfulAssociationExecutionDate,

            string? name,

            Outputs.PingStatusEnumValueResponse? pingStatus,

            string? platformName,

            Outputs.PlatformTypeEnumValueResponse? platformType,

            string? platformVersion,

            string? registrationDate,

            Outputs.ResourceTypeEnumValueResponse? resourceType,

            string? sourceId,

            Outputs.SourceTypeEnumValueResponse? sourceType)
        {
            ActivationId = activationId;
            AgentVersion = agentVersion;
            AssociationOverview = associationOverview;
            AssociationStatus = associationStatus;
            ComputerName = computerName;
            IamRole = iamRole;
            InstanceId = instanceId;
            IpAddress = ipAddress;
            IsLatestVersion = isLatestVersion;
            LastAssociationExecutionDate = lastAssociationExecutionDate;
            LastPingDateTime = lastPingDateTime;
            LastSuccessfulAssociationExecutionDate = lastSuccessfulAssociationExecutionDate;
            Name = name;
            PingStatus = pingStatus;
            PlatformName = platformName;
            PlatformType = platformType;
            PlatformVersion = platformVersion;
            RegistrationDate = registrationDate;
            ResourceType = resourceType;
            SourceId = sourceId;
            SourceType = sourceType;
        }
    }
}
