// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of InstanceRequirements
    /// </summary>
    public sealed class InstanceRequirementsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) for an instance type. To exclude accelerator-enabled instance types, set ``Max`` to ``0``. Default: No minimum or maximum limits ``AcceleratorCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of accelerators for an instance type.
        /// </summary>
        [Input("acceleratorCount")]
        public Input<Inputs.AcceleratorCountRequestArgs>? AcceleratorCount { get; set; }

        [Input("acceleratorManufacturers")]
        private InputList<string>? _acceleratorManufacturers;

        /// <summary>
        /// Indicates whether instance types must have accelerators by specific manufacturers.  +  For instance types with NVIDIA devices, specify ``nvidia``.  +  For instance types with AMD devices, specify ``amd``.  +  For instance types with AWS devices, specify ``amazon-web-services``.  +  For instance types with Xilinx devices, specify ``xilinx``.   Default: Any manufacturer
        /// </summary>
        public InputList<string> AcceleratorManufacturers
        {
            get => _acceleratorManufacturers ?? (_acceleratorManufacturers = new InputList<string>());
            set => _acceleratorManufacturers = value;
        }

        [Input("acceleratorNames")]
        private InputList<string>? _acceleratorNames;

        /// <summary>
        /// Lists the accelerators that must be on an instance type.  +  For instance types with NVIDIA A100 GPUs, specify ``a100``.  +  For instance types with NVIDIA V100 GPUs, specify ``v100``.  +  For instance types with NVIDIA K80 GPUs, specify ``k80``.  +  For instance types with NVIDIA T4 GPUs, specify ``t4``.  +  For instance types with NVIDIA M60 GPUs, specify ``m60``.  +  For instance types with AMD Radeon Pro V520 GPUs, specify ``radeon-pro-v520``.  +  For instance types with Xilinx VU9P FPGAs, specify ``vu9p``.   Default: Any accelerator
        /// </summary>
        public InputList<string> AcceleratorNames
        {
            get => _acceleratorNames ?? (_acceleratorNames = new InputList<string>());
            set => _acceleratorNames = value;
        }

        /// <summary>
        /// The minimum and maximum total memory size for the accelerators on an instance type, in MiB. Default: No minimum or maximum limits ``AcceleratorTotalMemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total memory size for the accelerators for an instance type, in MiB.
        /// </summary>
        [Input("acceleratorTotalMemoryMiB")]
        public Input<Inputs.AcceleratorTotalMemoryMiBRequestArgs>? AcceleratorTotalMemoryMiB { get; set; }

        [Input("acceleratorTypes")]
        private InputList<string>? _acceleratorTypes;

        /// <summary>
        /// Lists the accelerator types that must be on an instance type.  +  For instance types with GPU accelerators, specify ``gpu``.  +  For instance types with FPGA accelerators, specify ``fpga``.  +  For instance types with inference accelerators, specify ``inference``.   Default: Any accelerator type
        /// </summary>
        public InputList<string> AcceleratorTypes
        {
            get => _acceleratorTypes ?? (_acceleratorTypes = new InputList<string>());
            set => _acceleratorTypes = value;
        }

        [Input("allowedInstanceTypes")]
        private InputList<string>? _allowedInstanceTypes;

        /// <summary>
        /// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (``*``), to allow an instance type, size, or generation. The following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify ``c5*``, Amazon EC2 Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.  If you specify ``AllowedInstanceTypes``, you can't specify ``ExcludedInstanceTypes``.  Default: All instance types
        /// </summary>
        public InputList<string> AllowedInstanceTypes
        {
            get => _allowedInstanceTypes ?? (_allowedInstanceTypes = new InputList<string>());
            set => _allowedInstanceTypes = value;
        }

        /// <summary>
        /// Indicates whether bare metal instance types are included, excluded, or required. Default: ``excluded``
        /// </summary>
        [Input("bareMetal")]
        public Input<string>? BareMetal { get; set; }

        /// <summary>
        /// The minimum and maximum baseline bandwidth performance for an instance type, in Mbps. For more information, see [Amazon EBSâ€“optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide for Linux Instances*. Default: No minimum or maximum limits ``BaselineEbsBandwidthMbpsRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum baseline bandwidth performance for an instance type, in Mbps.
        /// </summary>
        [Input("baselineEbsBandwidthMbps")]
        public Input<Inputs.BaselineEbsBandwidthMbpsRequestArgs>? BaselineEbsBandwidthMbps { get; set; }

        /// <summary>
        /// Indicates whether burstable performance instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide for Linux Instances*. Default: ``excluded``
        /// </summary>
        [Input("burstablePerformance")]
        public Input<string>? BurstablePerformance { get; set; }

        [Input("cpuManufacturers")]
        private InputList<string>? _cpuManufacturers;

        /// <summary>
        /// Lists which specific CPU manufacturers to include.  +  For instance types with Intel CPUs, specify ``intel``.  +  For instance types with AMD CPUs, specify ``amd``.  +  For instance types with AWS CPUs, specify ``amazon-web-services``.    Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.   Default: Any manufacturer
        /// </summary>
        public InputList<string> CpuManufacturers
        {
            get => _cpuManufacturers ?? (_cpuManufacturers = new InputList<string>());
            set => _cpuManufacturers = value;
        }

        [Input("excludedInstanceTypes")]
        private InputList<string>? _excludedInstanceTypes;

        /// <summary>
        /// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (``*``), to exclude an instance family, type, size, or generation. The following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``.  For example, if you specify ``c5*``, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance types.  If you specify ``ExcludedInstanceTypes``, you can't specify ``AllowedInstanceTypes``.  Default: No excluded instance types
        /// </summary>
        public InputList<string> ExcludedInstanceTypes
        {
            get => _excludedInstanceTypes ?? (_excludedInstanceTypes = new InputList<string>());
            set => _excludedInstanceTypes = value;
        }

        [Input("instanceGenerations")]
        private InputList<string>? _instanceGenerations;

        /// <summary>
        /// Indicates whether current or previous generation instance types are included.  +  For current generation instance types, specify ``current``. The current generation includes EC2 instance types currently recommended for use. This typically includes the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for Linux Instances*.  +  For previous generation instance types, specify ``previous``.   Default: Any current or previous generation
        /// </summary>
        public InputList<string> InstanceGenerations
        {
            get => _instanceGenerations ?? (_instanceGenerations = new InputList<string>());
            set => _instanceGenerations = value;
        }

        /// <summary>
        /// Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, see [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide for Linux Instances*. Default: ``included``
        /// </summary>
        [Input("localStorage")]
        public Input<string>? LocalStorage { get; set; }

        [Input("localStorageTypes")]
        private InputList<string>? _localStorageTypes;

        /// <summary>
        /// Indicates the type of local storage that is required.  +  For instance types with hard disk drive (HDD) storage, specify ``hdd``.  +  For instance types with solid state drive (SSD) storage, specify ``ssd``.   Default: Any local storage type
        /// </summary>
        public InputList<string> LocalStorageTypes
        {
            get => _localStorageTypes ?? (_localStorageTypes = new InputList<string>());
            set => _localStorageTypes = value;
        }

        /// <summary>
        /// [Price protection] The price protection threshold for Spot Instances, as a percentage of an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous generation instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To indicate no price protection threshold, specify a high value, such as ``999999``.  If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is based on the per-vCPU or per-memory price instead of the per instance price.   Only one of ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified. If you don't specify either, then ``SpotMaxPricePercentageOverLowestPrice`` is used and the value for that parameter defaults to ``100``.
        /// </summary>
        [Input("maxSpotPriceAsPercentageOfOptimalOnDemandPrice")]
        public Input<int>? MaxSpotPriceAsPercentageOfOptimalOnDemandPrice { get; set; }

        /// <summary>
        /// The minimum and maximum amount of memory per vCPU for an instance type, in GiB. Default: No minimum or maximum limits ``MemoryGiBPerVCpuRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum amount of memory per vCPU for an instance type, in GiB.
        /// </summary>
        [Input("memoryGiBPerVCpu")]
        public Input<Inputs.MemoryGiBPerVCpuRequestArgs>? MemoryGiBPerVCpu { get; set; }

        /// <summary>
        /// The minimum and maximum instance memory size for an instance type, in MiB. ``MemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum instance memory size for an instance type, in MiB.
        /// </summary>
        [Input("memoryMiB")]
        public Input<Inputs.MemoryMiBRequestArgs>? MemoryMiB { get; set; }

        /// <summary>
        /// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default: No minimum or maximum limits ``NetworkBandwidthGbpsRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum network bandwidth for an instance type, in Gbps.  Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see [Available instance bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth) in the *Amazon EC2 User Guide for Linux Instances*.
        /// </summary>
        [Input("networkBandwidthGbps")]
        public Input<Inputs.NetworkBandwidthGbpsRequestArgs>? NetworkBandwidthGbps { get; set; }

        /// <summary>
        /// The minimum and maximum number of network interfaces for an instance type. Default: No minimum or maximum limits ``NetworkInterfaceCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of network interfaces for an instance type.
        /// </summary>
        [Input("networkInterfaceCount")]
        public Input<Inputs.NetworkInterfaceCountRequestArgs>? NetworkInterfaceCount { get; set; }

        /// <summary>
        /// [Price protection] The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous generation instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold.  The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as ``999999``.  If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per instance price.  Default: ``20``
        /// </summary>
        [Input("onDemandMaxPricePercentageOverLowestPrice")]
        public Input<int>? OnDemandMaxPricePercentageOverLowestPrice { get; set; }

        /// <summary>
        /// Indicates whether instance types must provide On-Demand Instance hibernation support. Default: ``false``
        /// </summary>
        [Input("requireHibernateSupport")]
        public Input<bool>? RequireHibernateSupport { get; set; }

        /// <summary>
        /// [Price protection] The price protection threshold for Spot Instances, as a percentage higher than an identified Spot price. The identified Spot price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous generation instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as ``999999``.  If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is based on the per-vCPU or per-memory price instead of the per instance price.   Only one of ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified.  Default: ``100``
        /// </summary>
        [Input("spotMaxPricePercentageOverLowestPrice")]
        public Input<int>? SpotMaxPricePercentageOverLowestPrice { get; set; }

        /// <summary>
        /// The minimum and maximum total local storage size for an instance type, in GB. Default: No minimum or maximum limits ``TotalLocalStorageGBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total local storage size for an instance type, in GB.
        /// </summary>
        [Input("totalLocalStorageGB")]
        public Input<Inputs.TotalLocalStorageGBRequestArgs>? TotalLocalStorageGB { get; set; }

        /// <summary>
        /// The minimum and maximum number of vCPUs for an instance type. ``VCpuCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of vCPUs for an instance type.
        /// </summary>
        [Input("vCpuCount")]
        public Input<Inputs.VCpuCountRequestArgs>? VCpuCount { get; set; }

        public InstanceRequirementsArgs()
        {
        }
        public static new InstanceRequirementsArgs Empty => new InstanceRequirementsArgs();
    }
}
