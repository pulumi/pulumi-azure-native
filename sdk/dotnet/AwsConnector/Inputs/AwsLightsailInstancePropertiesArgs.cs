// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of awsLightsailInstance
    /// </summary>
    public sealed class AwsLightsailInstancePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("addOns")]
        private InputList<Inputs.AddOnArgs>? _addOns;

        /// <summary>
        /// An array of objects representing the add-ons to enable for the new instance.
        /// </summary>
        public InputList<Inputs.AddOnArgs> AddOns
        {
            get => _addOns ?? (_addOns = new InputList<Inputs.AddOnArgs>());
            set => _addOns = value;
        }

        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation to return a list of available images (or blueprints ).
        /// </summary>
        [Input("blueprintId")]
        public Input<string>? BlueprintId { get; set; }

        /// <summary>
        /// The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g., micro_1_0 ).
        /// </summary>
        [Input("bundleId")]
        public Input<string>? BundleId { get; set; }

        /// <summary>
        /// Hardware of the Instance.
        /// </summary>
        [Input("hardware")]
        public Input<Inputs.HardwareArgs>? Hardware { get; set; }

        /// <summary>
        /// Property instanceArn
        /// </summary>
        [Input("instanceArn")]
        public Input<string>? InstanceArn { get; set; }

        /// <summary>
        /// The names to use for your new Lightsail instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Is the IP Address of the Instance is the static IP
        /// </summary>
        [Input("isStaticIp")]
        public Input<bool>? IsStaticIp { get; set; }

        /// <summary>
        /// The name of your key pair.
        /// </summary>
        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        /// <summary>
        /// Location of a resource.
        /// </summary>
        [Input("location")]
        public Input<Inputs.LocationArgs>? Location { get; set; }

        /// <summary>
        /// Networking of the Instance.
        /// </summary>
        [Input("networking")]
        public Input<Inputs.NetworkingArgs>? Networking { get; set; }

        /// <summary>
        /// Private IP Address of the Instance
        /// </summary>
        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        /// <summary>
        /// Public IP Address of the Instance
        /// </summary>
        [Input("publicIpAddress")]
        public Input<string>? PublicIpAddress { get; set; }

        /// <summary>
        /// Resource type of Lightsail instance.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// SSH Key Name of the  Lightsail instance.
        /// </summary>
        [Input("sshKeyName")]
        public Input<string>? SshKeyName { get; set; }

        /// <summary>
        /// Current State of the Instance.
        /// </summary>
        [Input("state")]
        public Input<Inputs.StateArgs>? State { get; set; }

        /// <summary>
        /// Support code to help identify any issues
        /// </summary>
        [Input("supportCode")]
        public Input<string>? SupportCode { get; set; }

        [Input("tags")]
        private InputList<Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Username of the  Lightsail instance.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public AwsLightsailInstancePropertiesArgs()
        {
        }
        public static new AwsLightsailInstancePropertiesArgs Empty => new AwsLightsailInstancePropertiesArgs();
    }
}
