// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of Node
    /// </summary>
    public sealed class NodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;p&gt;The Availability Zone (AZ) in which the node has been deployed.&lt;/p&gt;
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// &lt;p&gt;The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.&lt;/p&gt;
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.DaxClusterEndpointArgs>? Endpoint { get; set; }

        /// <summary>
        /// &lt;p&gt;The date and time (in UNIX epoch format) when the node was launched.&lt;/p&gt;
        /// </summary>
        [Input("nodeCreateTime")]
        public Input<string>? NodeCreateTime { get; set; }

        /// <summary>
        /// &lt;p&gt;A system-generated identifier for the node.&lt;/p&gt;
        /// </summary>
        [Input("nodeId")]
        public Input<string>? NodeId { get; set; }

        /// <summary>
        /// &lt;p&gt;The current status of the node. For example: &lt;code&gt;available&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        [Input("nodeStatus")]
        public Input<string>? NodeStatus { get; set; }

        /// <summary>
        /// &lt;p&gt;The status of the parameter group associated with this node. For example, &lt;code&gt;in-sync&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        [Input("parameterGroupStatus")]
        public Input<string>? ParameterGroupStatus { get; set; }

        public NodeArgs()
        {
        }
        public static new NodeArgs Empty => new NodeArgs();
    }
}
