// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of awsEfsMountTarget
    /// </summary>
    public sealed class AwsEfsMountTargetPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the file system for which to create the mount target.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// Property id
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Valid IPv4 address within the address range of the specified subnet.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// Up to five VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as subnet specified.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the file system's Availability Zone.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public AwsEfsMountTargetPropertiesArgs()
        {
        }
        public static new AwsEfsMountTargetPropertiesArgs Empty => new AwsEfsMountTargetPropertiesArgs();
    }
}
