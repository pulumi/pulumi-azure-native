// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of ExecuteCommandConfiguration
    /// </summary>
    public sealed class ExecuteCommandConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify an KMSlong key ID to encrypt the data between the local client and the container.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket. When ``logging=OVERRIDE`` is specified, a ``logConfiguration`` must be provided. The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket.
        /// </summary>
        [Input("logConfiguration")]
        public Input<Inputs.ExecuteCommandLogConfigurationArgs>? LogConfiguration { get; set; }

        /// <summary>
        /// The log setting to use for redirecting logs for your execute command results. The following log settings are available.  +   ``NONE``: The execute command session is not logged.  +   ``DEFAULT``: The ``awslogs`` configuration in the task definition is used. If no logging parameter is specified, it defaults to this value. If no ``awslogs`` log driver is configured in the task definition, the output won't be logged.  +   ``OVERRIDE``: Specify the logging details as a part of ``logConfiguration``. If the ``OVERRIDE`` logging option is specified, the ``logConfiguration`` is required.
        /// </summary>
        [Input("logging")]
        public Input<string>? Logging { get; set; }

        public ExecuteCommandConfigurationArgs()
        {
        }
        public static new ExecuteCommandConfigurationArgs Empty => new ExecuteCommandConfigurationArgs();
    }
}
