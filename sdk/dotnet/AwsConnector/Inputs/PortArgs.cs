// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of Port
    /// </summary>
    public sealed class PortArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access Direction for Protocol of the Instance(inbound/outbound).
        /// </summary>
        [Input("accessDirection")]
        public Input<string>? AccessDirection { get; set; }

        /// <summary>
        /// Access From Protocol of the Instance.
        /// </summary>
        [Input("accessFrom")]
        public Input<string>? AccessFrom { get; set; }

        /// <summary>
        /// Access Type Protocol of the Instance.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        [Input("cidrListAliases")]
        private InputList<string>? _cidrListAliases;

        /// <summary>
        /// cidr List Aliases
        /// </summary>
        public InputList<string> CidrListAliases
        {
            get => _cidrListAliases ?? (_cidrListAliases = new InputList<string>());
            set => _cidrListAliases = value;
        }

        [Input("cidrs")]
        private InputList<string>? _cidrs;

        /// <summary>
        /// Property cidrs
        /// </summary>
        public InputList<string> Cidrs
        {
            get => _cidrs ?? (_cidrs = new InputList<string>());
            set => _cidrs = value;
        }

        /// <summary>
        /// CommonName for Protocol of the Instance.
        /// </summary>
        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        /// <summary>
        /// From Port of the Instance.
        /// </summary>
        [Input("fromPort")]
        public Input<int>? FromPort { get; set; }

        [Input("ipv6Cidrs")]
        private InputList<string>? _ipv6Cidrs;

        /// <summary>
        /// IPv6 Cidrs
        /// </summary>
        public InputList<string> Ipv6Cidrs
        {
            get => _ipv6Cidrs ?? (_ipv6Cidrs = new InputList<string>());
            set => _ipv6Cidrs = value;
        }

        /// <summary>
        /// Port Protocol of the Instance.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// To Port of the Instance.
        /// </summary>
        [Input("toPort")]
        public Input<int>? ToPort { get; set; }

        public PortArgs()
        {
        }
        public static new PortArgs Empty => new PortArgs();
    }
}
