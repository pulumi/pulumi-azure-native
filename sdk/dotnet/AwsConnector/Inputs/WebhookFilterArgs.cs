// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AwsConnector.Inputs
{

    /// <summary>
    /// Definition of WebhookFilter
    /// </summary>
    public sealed class WebhookFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;p&gt; Used to indicate that the &lt;code&gt;pattern&lt;/code&gt; determines which webhook events do not trigger a build. If true, then a webhook event that does not match the &lt;code&gt;pattern&lt;/code&gt; triggers a build. If false, then a webhook event that matches the &lt;code&gt;pattern&lt;/code&gt; triggers a build. &lt;/p&gt;
        /// </summary>
        [Input("excludeMatchedPattern")]
        public Input<bool>? ExcludeMatchedPattern { get; set; }

        /// <summary>
        /// &lt;p&gt; For a &lt;code&gt;WebHookFilter&lt;/code&gt; that uses &lt;code&gt;EVENT&lt;/code&gt; type, a comma-separated string that specifies one or more events. For example, the webhook filter &lt;code&gt;PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED&lt;/code&gt; allows all push, pull request created, and pull request updated events to trigger a build. &lt;/p&gt; &lt;p&gt; For a &lt;code&gt;WebHookFilter&lt;/code&gt; that uses any of the other filter types, a regular expression pattern. For example, a &lt;code&gt;WebHookFilter&lt;/code&gt; that uses &lt;code&gt;HEAD_REF&lt;/code&gt; for its &lt;code&gt;type&lt;/code&gt; and the pattern &lt;code&gt;^refs/heads/&lt;/code&gt; triggers a build when the head reference is a branch with a reference name &lt;code&gt;refs/heads/branch-name&lt;/code&gt;. &lt;/p&gt;
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// &lt;p&gt; The type of webhook filter. There are nine webhook filter types: &lt;code&gt;EVENT&lt;/code&gt;, &lt;code&gt;ACTOR_ACCOUNT_ID&lt;/code&gt;, &lt;code&gt;HEAD_REF&lt;/code&gt;, &lt;code&gt;BASE_REF&lt;/code&gt;, &lt;code&gt;FILE_PATH&lt;/code&gt;, &lt;code&gt;COMMIT_MESSAGE&lt;/code&gt;, &lt;code&gt;TAG_NAME&lt;/code&gt;, &lt;code&gt;RELEASE_NAME&lt;/code&gt;, and &lt;code&gt;WORKFLOW_NAME&lt;/code&gt;. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; EVENT &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; A webhook event triggers a build when the provided &lt;code&gt;pattern&lt;/code&gt; matches one of nine event types: &lt;code&gt;PUSH&lt;/code&gt;, &lt;code&gt;PULL_REQUEST_CREATED&lt;/code&gt;, &lt;code&gt;PULL_REQUEST_UPDATED&lt;/code&gt;, &lt;code&gt;PULL_REQUEST_CLOSED&lt;/code&gt;, &lt;code&gt;PULL_REQUEST_REOPENED&lt;/code&gt;, &lt;code&gt;PULL_REQUEST_MERGED&lt;/code&gt;, &lt;code&gt;RELEASED&lt;/code&gt;, &lt;code&gt;PRERELEASED&lt;/code&gt;, and &lt;code&gt;WORKFLOW_JOB_QUEUED&lt;/code&gt;. The &lt;code&gt;EVENT&lt;/code&gt; patterns are specified as a comma-separated string. For example, &lt;code&gt;PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED&lt;/code&gt; filters all push, pull request created, and pull request updated events. &lt;/p&gt; &lt;note&gt; &lt;p&gt; The &lt;code&gt;PULL_REQUEST_REOPENED&lt;/code&gt; works with GitHub and GitHub Enterprise only. The &lt;code&gt;RELEASED&lt;/code&gt;, &lt;code&gt;PRERELEASED&lt;/code&gt;, and &lt;code&gt;WORKFLOW_JOB_QUEUED&lt;/code&gt; work with GitHub only.&lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ACTOR_ACCOUNT_ID&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression &lt;code&gt;pattern&lt;/code&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;HEAD_REF&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; A webhook event triggers a build when the head reference matches the regular expression &lt;code&gt;pattern&lt;/code&gt;. For example, &lt;code&gt;refs/heads/branch-name&lt;/code&gt; and &lt;code&gt;refs/tags/tag-name&lt;/code&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.&lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;BASE_REF&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; A webhook event triggers a build when the base reference matches the regular expression &lt;code&gt;pattern&lt;/code&gt;. For example, &lt;code&gt;refs/heads/branch-name&lt;/code&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with pull request events only. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;FILE_PATH&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; A webhook triggers a build when the path of a changed file matches the regular expression &lt;code&gt;pattern&lt;/code&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;COMMIT_MESSAGE&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A webhook triggers a build when the head commit message matches the regular expression &lt;code&gt;pattern&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;TAG_NAME&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A webhook triggers a build when the tag name of the release matches the regular expression &lt;code&gt;pattern&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with &lt;code&gt;RELEASED&lt;/code&gt; and &lt;code&gt;PRERELEASED&lt;/code&gt; events only. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;RELEASE_NAME&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A webhook triggers a build when the release name matches the regular expression &lt;code&gt;pattern&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with &lt;code&gt;RELEASED&lt;/code&gt; and &lt;code&gt;PRERELEASED&lt;/code&gt; events only. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;WORKFLOW_NAME&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A webhook triggers a build when the workflow name matches the regular expression &lt;code&gt;pattern&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; Works with &lt;code&gt;WORKFLOW_JOB_QUEUED&lt;/code&gt; events only. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        [Input("type")]
        public Input<Inputs.WebhookFilterTypeEnumValueArgs>? Type { get; set; }

        public WebhookFilterArgs()
        {
        }
        public static new WebhookFilterArgs Empty => new WebhookFilterArgs();
    }
}
