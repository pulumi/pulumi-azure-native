// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProfessionalService.V20230701Preview
{
    public static class GetProfessionalServiceSubscriptionLevel
    {
        /// <summary>
        /// Gets information about the specified Subscription Level ProfessionalService.
        /// </summary>
        public static Task<GetProfessionalServiceSubscriptionLevelResult> InvokeAsync(GetProfessionalServiceSubscriptionLevelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfessionalServiceSubscriptionLevelResult>("azure-native:professionalservice/v20230701preview:getProfessionalServiceSubscriptionLevel", args ?? new GetProfessionalServiceSubscriptionLevelArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about the specified Subscription Level ProfessionalService.
        /// </summary>
        public static Output<GetProfessionalServiceSubscriptionLevelResult> Invoke(GetProfessionalServiceSubscriptionLevelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfessionalServiceSubscriptionLevelResult>("azure-native:professionalservice/v20230701preview:getProfessionalServiceSubscriptionLevel", args ?? new GetProfessionalServiceSubscriptionLevelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfessionalServiceSubscriptionLevelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
        /// </summary>
        [Input("subscriptionId")]
        public string? SubscriptionId { get; set; }

        public GetProfessionalServiceSubscriptionLevelArgs()
        {
        }
        public static new GetProfessionalServiceSubscriptionLevelArgs Empty => new GetProfessionalServiceSubscriptionLevelArgs();
    }

    public sealed class GetProfessionalServiceSubscriptionLevelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public GetProfessionalServiceSubscriptionLevelInvokeArgs()
        {
        }
        public static new GetProfessionalServiceSubscriptionLevelInvokeArgs Empty => new GetProfessionalServiceSubscriptionLevelInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfessionalServiceSubscriptionLevelResult
    {
        /// <summary>
        /// The resource uri
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// professionalService properties
        /// </summary>
        public readonly Outputs.ProfessionalServiceResourceResponseProperties Properties;
        /// <summary>
        /// the resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProfessionalServiceSubscriptionLevelResult(
            string id,

            string name,

            Outputs.ProfessionalServiceResourceResponseProperties properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
