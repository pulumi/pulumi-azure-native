// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VisualStudio
{
    public static class GetExtension
    {
        /// <summary>
        /// Gets the details of an extension associated with a Visual Studio Team Services account resource.
        /// API Version: 2014-04-01-preview.
        /// </summary>
        public static Task<GetExtensionResult> InvokeAsync(GetExtensionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionResult>("azure-native:visualstudio:getExtension", args ?? new GetExtensionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of an extension associated with a Visual Studio Team Services account resource.
        /// API Version: 2014-04-01-preview.
        /// </summary>
        public static Output<GetExtensionResult> Invoke(GetExtensionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionResult>("azure-native:visualstudio:getExtension", args ?? new GetExtensionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Visual Studio Team Services account resource.
        /// </summary>
        [Input("accountResourceName", required: true)]
        public string AccountResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the extension.
        /// </summary>
        [Input("extensionResourceName", required: true)]
        public string ExtensionResourceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExtensionArgs()
        {
        }
        public static new GetExtensionArgs Empty => new GetExtensionArgs();
    }

    public sealed class GetExtensionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Visual Studio Team Services account resource.
        /// </summary>
        [Input("accountResourceName", required: true)]
        public Input<string> AccountResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the extension.
        /// </summary>
        [Input("extensionResourceName", required: true)]
        public Input<string> ExtensionResourceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExtensionInvokeArgs()
        {
        }
        public static new GetExtensionInvokeArgs Empty => new GetExtensionInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionResult
    {
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The extension plan that was purchased.
        /// </summary>
        public readonly Outputs.ExtensionResourcePlanResponse? Plan;
        /// <summary>
        /// Resource properties.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Properties;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExtensionResult(
            string id,

            string? location,

            string name,

            Outputs.ExtensionResourcePlanResponse? plan,

            ImmutableDictionary<string, string> properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Plan = plan;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
