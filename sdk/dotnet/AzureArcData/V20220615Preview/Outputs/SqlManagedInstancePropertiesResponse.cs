// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20220615Preview.Outputs
{

    /// <summary>
    /// Properties of sqlManagedInstance.
    /// </summary>
    [OutputType]
    public sealed class SqlManagedInstancePropertiesResponse
    {
        /// <summary>
        /// The instance admin user
        /// </summary>
        public readonly string? Admin;
        /// <summary>
        /// Username and password for basic authentication.
        /// </summary>
        public readonly Outputs.BasicLoginInformationResponse? BasicLoginInformation;
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        /// </summary>
        public readonly string? ClusterId;
        /// <summary>
        /// null
        /// </summary>
        public readonly string? DataControllerId;
        /// <summary>
        /// The instance end time
        /// </summary>
        public readonly string? EndTime;
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
        /// </summary>
        public readonly string? ExtensionId;
        /// <summary>
        /// The raw kubernetes information
        /// </summary>
        public readonly Outputs.SqlManagedInstanceK8sRawResponse? K8sRaw;
        /// <summary>
        /// Last uploaded date from Kubernetes cluster. Defaults to current date time
        /// </summary>
        public readonly string? LastUploadedDate;
        /// <summary>
        /// The license type to apply for this managed instance.
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// The provisioning state of the Arc-enabled SQL Managed Instance resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The instance start time
        /// </summary>
        public readonly string? StartTime;

        [OutputConstructor]
        private SqlManagedInstancePropertiesResponse(
            string? admin,

            Outputs.BasicLoginInformationResponse? basicLoginInformation,

            string? clusterId,

            string? dataControllerId,

            string? endTime,

            string? extensionId,

            Outputs.SqlManagedInstanceK8sRawResponse? k8sRaw,

            string? lastUploadedDate,

            string? licenseType,

            string provisioningState,

            string? startTime)
        {
            Admin = admin;
            BasicLoginInformation = basicLoginInformation;
            ClusterId = clusterId;
            DataControllerId = dataControllerId;
            EndTime = endTime;
            ExtensionId = extensionId;
            K8sRaw = k8sRaw;
            LastUploadedDate = lastUploadedDate;
            LicenseType = licenseType;
            ProvisioningState = provisioningState;
            StartTime = startTime;
        }
    }
}
