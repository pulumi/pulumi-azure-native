// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20240101
{
    public static class GetPostgresInstance
    {
        /// <summary>
        /// Retrieves a postgres Instance resource
        /// </summary>
        public static Task<GetPostgresInstanceResult> InvokeAsync(GetPostgresInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPostgresInstanceResult>("azure-native:azurearcdata/v20240101:getPostgresInstance", args ?? new GetPostgresInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a postgres Instance resource
        /// </summary>
        public static Output<GetPostgresInstanceResult> Invoke(GetPostgresInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPostgresInstanceResult>("azure-native:azurearcdata/v20240101:getPostgresInstance", args ?? new GetPostgresInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPostgresInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Postgres Instance
        /// </summary>
        [Input("postgresInstanceName", required: true)]
        public string PostgresInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPostgresInstanceArgs()
        {
        }
        public static new GetPostgresInstanceArgs Empty => new GetPostgresInstanceArgs();
    }

    public sealed class GetPostgresInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Postgres Instance
        /// </summary>
        [Input("postgresInstanceName", required: true)]
        public Input<string> PostgresInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPostgresInstanceInvokeArgs()
        {
        }
        public static new GetPostgresInstanceInvokeArgs Empty => new GetPostgresInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetPostgresInstanceResult
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// null
        /// </summary>
        public readonly Outputs.PostgresInstancePropertiesResponse Properties;
        /// <summary>
        /// Resource sku.
        /// </summary>
        public readonly Outputs.PostgresInstanceSkuResponse? Sku;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPostgresInstanceResult(
            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string location,

            string name,

            Outputs.PostgresInstancePropertiesResponse properties,

            Outputs.PostgresInstanceSkuResponse? sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
