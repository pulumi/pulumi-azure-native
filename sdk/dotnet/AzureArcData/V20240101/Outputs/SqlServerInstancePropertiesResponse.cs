// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20240101.Outputs
{

    /// <summary>
    /// Properties of SqlServerInstance.
    /// </summary>
    [OutputType]
    public sealed class SqlServerInstancePropertiesResponse
    {
        /// <summary>
        /// The role of the SQL Server, based on availability.
        /// </summary>
        public readonly string AlwaysOnRole;
        /// <summary>
        /// Status of Azure Defender.
        /// </summary>
        public readonly string AzureDefenderStatus;
        /// <summary>
        /// Timestamp of last Azure Defender status update.
        /// </summary>
        public readonly string AzureDefenderStatusLastUpdated;
        /// <summary>
        /// The backup profile for the SQL server.
        /// </summary>
        public readonly Outputs.BackupPolicyResponse? BackupPolicy;
        /// <summary>
        /// SQL Server collation.
        /// </summary>
        public readonly string Collation;
        /// <summary>
        /// ARM Resource id of the container resource (Azure Arc for Servers).
        /// </summary>
        public readonly string ContainerResourceId;
        /// <summary>
        /// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        /// </summary>
        public readonly string? Cores;
        /// <summary>
        /// The time when the resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// SQL Server current version.
        /// </summary>
        public readonly string CurrentVersion;
        /// <summary>
        /// SQL Server edition.
        /// </summary>
        public readonly string? Edition;
        /// <summary>
        /// Failover Cluster Instance properties.
        /// </summary>
        public readonly Outputs.FailoverClusterResponse? FailoverCluster;
        /// <summary>
        /// Type of host for Azure Arc SQL Server
        /// </summary>
        public readonly string? HostType;
        /// <summary>
        /// SQL Server instance name.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The time when last successful inventory upload was performed.
        /// </summary>
        public readonly string LastInventoryUploadTime;
        /// <summary>
        /// The time when last successful usage upload was performed.
        /// </summary>
        public readonly string LastUsageUploadTime;
        /// <summary>
        /// SQL Server license type.
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// The monitoring configuration.
        /// </summary>
        public readonly Outputs.MonitoringResponse? Monitoring;
        /// <summary>
        /// SQL Server update level.
        /// </summary>
        public readonly string PatchLevel;
        /// <summary>
        /// SQL Server product ID.
        /// </summary>
        public readonly string ProductId;
        /// <summary>
        /// The provisioning state of the Arc-enabled SQL Server resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The cloud connectivity status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Dynamic TCP ports used by SQL Server.
        /// </summary>
        public readonly string TcpDynamicPorts;
        /// <summary>
        /// Static TCP ports used by SQL Server.
        /// </summary>
        public readonly string TcpStaticPorts;
        /// <summary>
        /// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
        /// </summary>
        public readonly string? UpgradeLockedUntil;
        /// <summary>
        /// The number of logical processors used by the SQL Server instance.
        /// </summary>
        public readonly string VCore;
        /// <summary>
        /// SQL Server version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private SqlServerInstancePropertiesResponse(
            string alwaysOnRole,

            string azureDefenderStatus,

            string azureDefenderStatusLastUpdated,

            Outputs.BackupPolicyResponse? backupPolicy,

            string collation,

            string containerResourceId,

            string? cores,

            string createTime,

            string currentVersion,

            string? edition,

            Outputs.FailoverClusterResponse? failoverCluster,

            string? hostType,

            string? instanceName,

            string lastInventoryUploadTime,

            string lastUsageUploadTime,

            string licenseType,

            Outputs.MonitoringResponse? monitoring,

            string patchLevel,

            string productId,

            string provisioningState,

            string status,

            string tcpDynamicPorts,

            string tcpStaticPorts,

            string? upgradeLockedUntil,

            string vCore,

            string? version)
        {
            AlwaysOnRole = alwaysOnRole;
            AzureDefenderStatus = azureDefenderStatus;
            AzureDefenderStatusLastUpdated = azureDefenderStatusLastUpdated;
            BackupPolicy = backupPolicy;
            Collation = collation;
            ContainerResourceId = containerResourceId;
            Cores = cores;
            CreateTime = createTime;
            CurrentVersion = currentVersion;
            Edition = edition;
            FailoverCluster = failoverCluster;
            HostType = hostType;
            InstanceName = instanceName;
            LastInventoryUploadTime = lastInventoryUploadTime;
            LastUsageUploadTime = lastUsageUploadTime;
            LicenseType = licenseType;
            Monitoring = monitoring;
            PatchLevel = patchLevel;
            ProductId = productId;
            ProvisioningState = provisioningState;
            Status = status;
            TcpDynamicPorts = tcpDynamicPorts;
            TcpStaticPorts = tcpStaticPorts;
            UpgradeLockedUntil = upgradeLockedUntil;
            VCore = vCore;
            Version = version;
        }
    }
}
