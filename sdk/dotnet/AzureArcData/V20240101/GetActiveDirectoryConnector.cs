// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20240101
{
    public static class GetActiveDirectoryConnector
    {
        /// <summary>
        /// Retrieves an Active Directory connector resource
        /// </summary>
        public static Task<GetActiveDirectoryConnectorResult> InvokeAsync(GetActiveDirectoryConnectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActiveDirectoryConnectorResult>("azure-native:azurearcdata/v20240101:getActiveDirectoryConnector", args ?? new GetActiveDirectoryConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves an Active Directory connector resource
        /// </summary>
        public static Output<GetActiveDirectoryConnectorResult> Invoke(GetActiveDirectoryConnectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActiveDirectoryConnectorResult>("azure-native:azurearcdata/v20240101:getActiveDirectoryConnector", args ?? new GetActiveDirectoryConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActiveDirectoryConnectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Active Directory connector instance
        /// </summary>
        [Input("activeDirectoryConnectorName", required: true)]
        public string ActiveDirectoryConnectorName { get; set; } = null!;

        /// <summary>
        /// The name of the data controller
        /// </summary>
        [Input("dataControllerName", required: true)]
        public string DataControllerName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetActiveDirectoryConnectorArgs()
        {
        }
        public static new GetActiveDirectoryConnectorArgs Empty => new GetActiveDirectoryConnectorArgs();
    }

    public sealed class GetActiveDirectoryConnectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Active Directory connector instance
        /// </summary>
        [Input("activeDirectoryConnectorName", required: true)]
        public Input<string> ActiveDirectoryConnectorName { get; set; } = null!;

        /// <summary>
        /// The name of the data controller
        /// </summary>
        [Input("dataControllerName", required: true)]
        public Input<string> DataControllerName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetActiveDirectoryConnectorInvokeArgs()
        {
        }
        public static new GetActiveDirectoryConnectorInvokeArgs Empty => new GetActiveDirectoryConnectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetActiveDirectoryConnectorResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// null
        /// </summary>
        public readonly Outputs.ActiveDirectoryConnectorPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetActiveDirectoryConnectorResult(
            string id,

            string name,

            Outputs.ActiveDirectoryConnectorPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
