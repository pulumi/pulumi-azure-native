// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.Outputs
{

    /// <summary>
    /// The status of the job running on the SQL Server instance.
    /// </summary>
    [OutputType]
    public sealed class SqlServerInstanceJobStatusResponse
    {
        /// <summary>
        /// The background job details.
        /// </summary>
        public readonly Outputs.BackgroundJobResponse? BackgroundJob;
        /// <summary>
        /// The unique identifier of the job.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the SQL Server instance.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The exception message if the job failed.
        /// </summary>
        public readonly string? JobException;
        /// <summary>
        /// The status of the job.
        /// </summary>
        public readonly string? JobStatus;
        /// <summary>
        /// The list of sequencer actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.SequencerActionResponse> SequencerActions;

        [OutputConstructor]
        private SqlServerInstanceJobStatusResponse(
            Outputs.BackgroundJobResponse? backgroundJob,

            string? id,

            string? instanceName,

            string? jobException,

            string? jobStatus,

            ImmutableArray<Outputs.SequencerActionResponse> sequencerActions)
        {
            BackgroundJob = backgroundJob;
            Id = id;
            InstanceName = instanceName;
            JobException = jobException;
            JobStatus = jobStatus;
            SequencerActions = sequencerActions;
        }
    }
}
