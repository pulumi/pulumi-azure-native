// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20230315Preview.Outputs
{

    /// <summary>
    /// The information about each failover group replica.
    /// </summary>
    [OutputType]
    public sealed class AGReplicasResponse
    {
        /// <summary>
        /// The availability mode of the replica.
        /// </summary>
        public readonly string? AvailabilityMode;
        /// <summary>
        /// The connected state of the replica.
        /// </summary>
        public readonly string? ConnectedState;
        /// <summary>
        /// The health state of the replica.
        /// </summary>
        public readonly string? HealthState;
        /// <summary>
        /// The replica name.
        /// </summary>
        public readonly string? ReplicaName;
        /// <summary>
        /// The role of the replica.
        /// </summary>
        public readonly string? Role;
        /// <summary>
        /// The secondary role allowed connections.
        /// </summary>
        public readonly string? SecondaryRoleAllowConnections;
        /// <summary>
        /// The synchronization state of the availability group replicas.
        /// </summary>
        public readonly string? SynchronizationState;

        [OutputConstructor]
        private AGReplicasResponse(
            string? availabilityMode,

            string? connectedState,

            string? healthState,

            string? replicaName,

            string? role,

            string? secondaryRoleAllowConnections,

            string? synchronizationState)
        {
            AvailabilityMode = availabilityMode;
            ConnectedState = connectedState;
            HealthState = healthState;
            ReplicaName = replicaName;
            Role = role;
            SecondaryRoleAllowConnections = secondaryRoleAllowConnections;
            SynchronizationState = synchronizationState;
        }
    }
}
