// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20230315Preview.Inputs
{

    /// <summary>
    /// The properties of Arc Sql availability group database replica resource
    /// </summary>
    public sealed class SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the database state of the availability replica.
        /// </summary>
        [Input("databaseStateDesc")]
        public Input<string>? DatabaseStateDesc { get; set; }

        /// <summary>
        /// Whether this replica is transaction committer.
        /// </summary>
        [Input("isCommitParticipant")]
        public Input<bool>? IsCommitParticipant { get; set; }

        /// <summary>
        /// Whether the availability database is local.
        /// </summary>
        [Input("isLocal")]
        public Input<bool>? IsLocal { get; set; }

        /// <summary>
        /// Returns 1 if the replica is primary, or 0 if it is a secondary replica.
        /// </summary>
        [Input("isPrimaryReplica")]
        public Input<bool>? IsPrimaryReplica { get; set; }

        /// <summary>
        /// Whether this data movement is suspended.
        /// </summary>
        [Input("isSuspended")]
        public Input<bool>? IsSuspended { get; set; }

        /// <summary>
        /// the database replica name.
        /// </summary>
        [Input("replicaName")]
        public Input<string>? ReplicaName { get; set; }

        /// <summary>
        /// Description of the database suspended state reason.
        /// </summary>
        [Input("suspendReasonDesc")]
        public Input<string>? SuspendReasonDesc { get; set; }

        /// <summary>
        /// Description of the health of database.
        /// </summary>
        [Input("synchronizationHealthDesc")]
        public Input<string>? SynchronizationHealthDesc { get; set; }

        /// <summary>
        /// Description of the data-movement state.
        /// </summary>
        [Input("synchronizationStateDesc")]
        public Input<string>? SynchronizationStateDesc { get; set; }

        public SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs()
        {
        }
        public static new SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs Empty => new SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs();
    }
}
