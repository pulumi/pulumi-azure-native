// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData
{
    public static class GetSqlServerDatabase
    {
        /// <summary>
        /// Retrieves an Arc Sql Server database.
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// 
        /// Other available API versions: 2023-01-15-preview, 2024-01-01, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurearcdata [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetSqlServerDatabaseResult> InvokeAsync(GetSqlServerDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlServerDatabaseResult>("azure-native:azurearcdata:getSqlServerDatabase", args ?? new GetSqlServerDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves an Arc Sql Server database.
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// 
        /// Other available API versions: 2023-01-15-preview, 2024-01-01, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurearcdata [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetSqlServerDatabaseResult> Invoke(GetSqlServerDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlServerDatabaseResult>("azure-native:azurearcdata:getSqlServerDatabase", args ?? new GetSqlServerDatabaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves an Arc Sql Server database.
        /// 
        /// Uses Azure REST API version 2025-03-01-preview.
        /// 
        /// Other available API versions: 2023-01-15-preview, 2024-01-01, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azurearcdata [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetSqlServerDatabaseResult> Invoke(GetSqlServerDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlServerDatabaseResult>("azure-native:azurearcdata:getSqlServerDatabase", args ?? new GetSqlServerDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlServerDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the database
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Server Instance
        /// </summary>
        [Input("sqlServerInstanceName", required: true)]
        public string SqlServerInstanceName { get; set; } = null!;

        public GetSqlServerDatabaseArgs()
        {
        }
        public static new GetSqlServerDatabaseArgs Empty => new GetSqlServerDatabaseArgs();
    }

    public sealed class GetSqlServerDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the database
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Server Instance
        /// </summary>
        [Input("sqlServerInstanceName", required: true)]
        public Input<string> SqlServerInstanceName { get; set; } = null!;

        public GetSqlServerDatabaseInvokeArgs()
        {
        }
        public static new GetSqlServerDatabaseInvokeArgs Empty => new GetSqlServerDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlServerDatabaseResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of Arc Sql Server database
        /// </summary>
        public readonly Outputs.SqlServerDatabaseResourcePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlServerDatabaseResult(
            string azureApiVersion,

            string id,

            string location,

            string name,

            Outputs.SqlServerDatabaseResourcePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
