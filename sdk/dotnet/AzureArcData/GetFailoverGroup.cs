// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData
{
    public static class GetFailoverGroup
    {
        /// <summary>
        /// Retrieves a failover group resource
        /// API Version: 2023-01-15-preview.
        /// </summary>
        public static Task<GetFailoverGroupResult> InvokeAsync(GetFailoverGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFailoverGroupResult>("azure-native:azurearcdata:getFailoverGroup", args ?? new GetFailoverGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a failover group resource
        /// API Version: 2023-01-15-preview.
        /// </summary>
        public static Output<GetFailoverGroupResult> Invoke(GetFailoverGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFailoverGroupResult>("azure-native:azurearcdata:getFailoverGroup", args ?? new GetFailoverGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFailoverGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Failover Group
        /// </summary>
        [Input("failoverGroupName", required: true)]
        public string FailoverGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Managed Instance
        /// </summary>
        [Input("sqlManagedInstanceName", required: true)]
        public string SqlManagedInstanceName { get; set; } = null!;

        public GetFailoverGroupArgs()
        {
        }
        public static new GetFailoverGroupArgs Empty => new GetFailoverGroupArgs();
    }

    public sealed class GetFailoverGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Failover Group
        /// </summary>
        [Input("failoverGroupName", required: true)]
        public Input<string> FailoverGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Managed Instance
        /// </summary>
        [Input("sqlManagedInstanceName", required: true)]
        public Input<string> SqlManagedInstanceName { get; set; } = null!;

        public GetFailoverGroupInvokeArgs()
        {
        }
        public static new GetFailoverGroupInvokeArgs Empty => new GetFailoverGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetFailoverGroupResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// null
        /// </summary>
        public readonly Outputs.FailoverGroupPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFailoverGroupResult(
            string id,

            string name,

            Outputs.FailoverGroupPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
