// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20210701Preview.Outputs
{

    /// <summary>
    /// The data controller properties.
    /// </summary>
    [OutputType]
    public sealed class DataControllerPropertiesResponse
    {
        /// <summary>
        /// Username and password for basic login authentication.
        /// </summary>
        public readonly Outputs.BasicLoginInformationResponse? BasicLoginInformation;
        /// <summary>
        /// The infrastructure the data controller is running on.
        /// </summary>
        public readonly string? Infrastructure;
        /// <summary>
        /// The raw kubernetes information
        /// </summary>
        public readonly object? K8sRaw;
        /// <summary>
        /// Last uploaded date from Kubernetes cluster. Defaults to current date time
        /// </summary>
        public readonly string? LastUploadedDate;
        /// <summary>
        /// Log analytics workspace id and primary key
        /// </summary>
        public readonly Outputs.LogAnalyticsWorkspaceConfigResponse? LogAnalyticsWorkspaceConfig;
        /// <summary>
        /// Properties from the Kubernetes data controller
        /// </summary>
        public readonly Outputs.OnPremisePropertyResponse? OnPremiseProperty;
        public readonly string ProvisioningState;
        /// <summary>
        /// Service principal for uploading billing, metrics and logs.
        /// </summary>
        public readonly Outputs.UploadServicePrincipalResponse? UploadServicePrincipal;
        /// <summary>
        /// Properties on upload watermark.  Mostly timestamp for each upload data type
        /// </summary>
        public readonly Outputs.UploadWatermarkResponse? UploadWatermark;

        [OutputConstructor]
        private DataControllerPropertiesResponse(
            Outputs.BasicLoginInformationResponse? basicLoginInformation,

            string? infrastructure,

            object? k8sRaw,

            string? lastUploadedDate,

            Outputs.LogAnalyticsWorkspaceConfigResponse? logAnalyticsWorkspaceConfig,

            Outputs.OnPremisePropertyResponse? onPremiseProperty,

            string provisioningState,

            Outputs.UploadServicePrincipalResponse? uploadServicePrincipal,

            Outputs.UploadWatermarkResponse? uploadWatermark)
        {
            BasicLoginInformation = basicLoginInformation;
            Infrastructure = infrastructure;
            K8sRaw = k8sRaw;
            LastUploadedDate = lastUploadedDate;
            LogAnalyticsWorkspaceConfig = logAnalyticsWorkspaceConfig;
            OnPremiseProperty = onPremiseProperty;
            ProvisioningState = provisioningState;
            UploadServicePrincipal = uploadServicePrincipal;
            UploadWatermark = uploadWatermark;
        }
    }
}
