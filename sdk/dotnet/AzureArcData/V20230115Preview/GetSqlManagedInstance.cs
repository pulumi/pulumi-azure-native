// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20230115Preview
{
    public static class GetSqlManagedInstance
    {
        /// <summary>
        /// Retrieves a SQL Managed Instance resource
        /// </summary>
        public static Task<GetSqlManagedInstanceResult> InvokeAsync(GetSqlManagedInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlManagedInstanceResult>("azure-native:azurearcdata/v20230115preview:getSqlManagedInstance", args ?? new GetSqlManagedInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a SQL Managed Instance resource
        /// </summary>
        public static Output<GetSqlManagedInstanceResult> Invoke(GetSqlManagedInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlManagedInstanceResult>("azure-native:azurearcdata/v20230115preview:getSqlManagedInstance", args ?? new GetSqlManagedInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlManagedInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Managed Instance
        /// </summary>
        [Input("sqlManagedInstanceName", required: true)]
        public string SqlManagedInstanceName { get; set; } = null!;

        public GetSqlManagedInstanceArgs()
        {
        }
        public static new GetSqlManagedInstanceArgs Empty => new GetSqlManagedInstanceArgs();
    }

    public sealed class GetSqlManagedInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of SQL Managed Instance
        /// </summary>
        [Input("sqlManagedInstanceName", required: true)]
        public Input<string> SqlManagedInstanceName { get; set; } = null!;

        public GetSqlManagedInstanceInvokeArgs()
        {
        }
        public static new GetSqlManagedInstanceInvokeArgs Empty => new GetSqlManagedInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlManagedInstanceResult
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// null
        /// </summary>
        public readonly Outputs.SqlManagedInstancePropertiesResponse Properties;
        /// <summary>
        /// Resource sku.
        /// </summary>
        public readonly Outputs.SqlManagedInstanceSkuResponse? Sku;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlManagedInstanceResult(
            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string location,

            string name,

            Outputs.SqlManagedInstancePropertiesResponse properties,

            Outputs.SqlManagedInstanceSkuResponse? sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
