// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20240501Preview.Inputs
{

    /// <summary>
    /// The specifications of the availability group state
    /// </summary>
    public sealed class AvailabilityGroupInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether this is a basic availability group.
        /// </summary>
        [Input("basicFeatures")]
        public Input<bool>? BasicFeatures { get; set; }

        /// <summary>
        /// Specifies whether the availability group supports failover for database health conditions.
        /// </summary>
        [Input("dbFailover")]
        public Input<bool>? DbFailover { get; set; }

        /// <summary>
        /// Specifies whether DTC support has been enabled for this availability group.
        /// </summary>
        [Input("dtcSupport")]
        public Input<bool>? DtcSupport { get; set; }

        /// <summary>
        /// User-defined failure condition level under which an automatic failover must be triggered.
        /// </summary>
        [Input("failureConditionLevel")]
        public Input<int>? FailureConditionLevel { get; set; }

        /// <summary>
        /// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
        /// </summary>
        [Input("healthCheckTimeout")]
        public Input<int>? HealthCheckTimeout { get; set; }

        /// <summary>
        /// SQL Server availability group contained system databases.
        /// </summary>
        [Input("isContained")]
        public Input<bool>? IsContained { get; set; }

        /// <summary>
        /// Specifies whether this is a distributed availability group.
        /// </summary>
        [Input("isDistributed")]
        public Input<bool>? IsDistributed { get; set; }

        /// <summary>
        /// The listener for the sql server availability group
        /// </summary>
        [Input("listener")]
        public Input<Inputs.SqlAvailabilityGroupStaticIPListenerPropertiesArgs>? Listener { get; set; }

        /// <summary>
        /// The number of secondary replicas that must be in a synchronized state for a commit to complete.
        /// </summary>
        [Input("requiredSynchronizedSecondariesToCommit")]
        public Input<int>? RequiredSynchronizedSecondariesToCommit { get; set; }

        public AvailabilityGroupInfoArgs()
        {
        }
        public static new AvailabilityGroupInfoArgs Empty => new AvailabilityGroupInfoArgs();
    }
}
