// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageDiscovery.Inputs
{

    /// <summary>
    /// Storage Discovery Scope. This had added validations
    /// </summary>
    public sealed class StorageDiscoveryScopeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Display name of the collection
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("resourceTypes", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.StorageDiscovery.StorageDiscoveryResourceType>>? _resourceTypes;

        /// <summary>
        /// Resource types for the collection
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.StorageDiscovery.StorageDiscoveryResourceType>> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<Union<string, Pulumi.AzureNative.StorageDiscovery.StorageDiscoveryResourceType>>());
            set => _resourceTypes = value;
        }

        [Input("tagKeysOnly")]
        private InputList<string>? _tagKeysOnly;

        /// <summary>
        /// The storage account tags keys to filter
        /// </summary>
        public InputList<string> TagKeysOnly
        {
            get => _tagKeysOnly ?? (_tagKeysOnly = new InputList<string>());
            set => _tagKeysOnly = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public StorageDiscoveryScopeArgs()
        {
        }
        public static new StorageDiscoveryScopeArgs Empty => new StorageDiscoveryScopeArgs();
    }
}
