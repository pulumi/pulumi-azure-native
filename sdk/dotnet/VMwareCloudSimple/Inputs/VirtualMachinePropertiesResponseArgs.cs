// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.VMwareCloudSimple.Inputs
{

    /// <summary>
    /// Properties of virtual machine
    /// </summary>
    public sealed class VirtualMachinePropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The amount of memory
        /// </summary>
        [Input("amountOfRam", required: true)]
        public Input<int> AmountOfRam { get; set; } = null!;

        [Input("controllers", required: true)]
        private InputList<Inputs.VirtualDiskControllerResponseArgs>? _controllers;

        /// <summary>
        /// The list of Virtual Disks' Controllers
        /// </summary>
        public InputList<Inputs.VirtualDiskControllerResponseArgs> Controllers
        {
            get => _controllers ?? (_controllers = new InputList<Inputs.VirtualDiskControllerResponseArgs>());
            set => _controllers = value;
        }

        /// <summary>
        /// Virtual machine properties
        /// </summary>
        [Input("customization")]
        public Input<Inputs.GuestOSCustomizationResponseArgs>? Customization { get; set; }

        [Input("disks")]
        private InputList<Inputs.VirtualDiskResponseArgs>? _disks;

        /// <summary>
        /// The list of Virtual Disks
        /// </summary>
        public InputList<Inputs.VirtualDiskResponseArgs> Disks
        {
            get => _disks ?? (_disks = new InputList<Inputs.VirtualDiskResponseArgs>());
            set => _disks = value;
        }

        /// <summary>
        /// The DNS name of Virtual Machine in VCenter
        /// </summary>
        [Input("dnsname", required: true)]
        public Input<string> Dnsname { get; set; } = null!;

        /// <summary>
        /// Expose Guest OS or not
        /// </summary>
        [Input("exposeToGuestVM")]
        public Input<bool>? ExposeToGuestVM { get; set; }

        /// <summary>
        /// The path to virtual machine folder in VCenter
        /// </summary>
        [Input("folder", required: true)]
        public Input<string> Folder { get; set; } = null!;

        /// <summary>
        /// The name of Guest OS
        /// </summary>
        [Input("guestOS", required: true)]
        public Input<string> GuestOS { get; set; } = null!;

        /// <summary>
        /// The Guest OS type
        /// </summary>
        [Input("guestOSType", required: true)]
        public Input<string> GuestOSType { get; set; } = null!;

        [Input("nics")]
        private InputList<Inputs.VirtualNicResponseArgs>? _nics;

        /// <summary>
        /// The list of Virtual NICs
        /// </summary>
        public InputList<Inputs.VirtualNicResponseArgs> Nics
        {
            get => _nics ?? (_nics = new InputList<Inputs.VirtualNicResponseArgs>());
            set => _nics = value;
        }

        /// <summary>
        /// The number of CPU cores
        /// </summary>
        [Input("numberOfCores", required: true)]
        public Input<int> NumberOfCores { get; set; } = null!;

        /// <summary>
        /// Password for login. Deprecated - use customization property
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Private Cloud Id
        /// </summary>
        [Input("privateCloudId", required: true)]
        public Input<string> PrivateCloudId { get; set; } = null!;

        /// <summary>
        /// The provisioning status of the resource
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The public ip of Virtual Machine
        /// </summary>
        [Input("publicIP", required: true)]
        public Input<string> PublicIP { get; set; } = null!;

        /// <summary>
        /// Virtual Machines Resource Pool
        /// </summary>
        [Input("resourcePool")]
        public Input<Inputs.ResourcePoolResponseArgs>? ResourcePool { get; set; }

        /// <summary>
        /// The status of Virtual machine
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// Virtual Machine Template Id
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        /// <summary>
        /// Username for login. Deprecated - use customization property
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vSphereNetworks")]
        private InputList<string>? _vSphereNetworks;

        /// <summary>
        /// The list of Virtual VSphere Networks
        /// </summary>
        public InputList<string> VSphereNetworks
        {
            get => _vSphereNetworks ?? (_vSphereNetworks = new InputList<string>());
            set => _vSphereNetworks = value;
        }

        /// <summary>
        /// The internal id of Virtual Machine in VCenter
        /// </summary>
        [Input("vmId", required: true)]
        public Input<string> VmId { get; set; } = null!;

        /// <summary>
        /// VMware tools version
        /// </summary>
        [Input("vmwaretools", required: true)]
        public Input<string> Vmwaretools { get; set; } = null!;

        public VirtualMachinePropertiesResponseArgs()
        {
        }
    }
}
