// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.VMwareCloudSimple.Latest
{
    public static class GetDedicatedCloudService
    {
        public static Task<GetDedicatedCloudServiceResult> InvokeAsync(GetDedicatedCloudServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedCloudServiceResult>("azure-nextgen:vmwarecloudsimple/latest:getDedicatedCloudService", args ?? new GetDedicatedCloudServiceArgs(), options.WithVersion());
    }


    public sealed class GetDedicatedCloudServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// dedicated cloud Service name
        /// </summary>
        [Input("dedicatedCloudServiceName", required: true)]
        public string DedicatedCloudServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedCloudServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDedicatedCloudServiceResult
    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        public readonly string GatewaySubnet;
        /// <summary>
        /// indicates whether account onboarded or not in a given region
        /// </summary>
        public readonly string IsAccountOnboarded;
        /// <summary>
        /// Azure region
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// {dedicatedCloudServiceName}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// total nodes purchased
        /// </summary>
        public readonly int Nodes;
        /// <summary>
        /// link to a service management web portal
        /// </summary>
        public readonly string ServiceURL;
        /// <summary>
        /// The list of tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// {resourceProviderNamespace}/{resourceType}
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDedicatedCloudServiceResult(
            string gatewaySubnet,

            string isAccountOnboarded,

            string location,

            string name,

            int nodes,

            string serviceURL,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            GatewaySubnet = gatewaySubnet;
            IsAccountOnboarded = isAccountOnboarded;
            Location = location;
            Name = name;
            Nodes = nodes;
            ServiceURL = serviceURL;
            Tags = tags;
            Type = type;
        }
    }
}
