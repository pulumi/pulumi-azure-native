// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.VMwareCloudSimple.V20190401.Outputs
{

    [OutputType]
    public sealed class DedicatedCloudNodePropertiesResponseResult
    {
        /// <summary>
        /// Availability Zone id, e.g. "az1"
        /// </summary>
        public readonly string AvailabilityZoneId;
        /// <summary>
        /// Availability Zone name, e.g. "Availability Zone 1"
        /// </summary>
        public readonly string AvailabilityZoneName;
        /// <summary>
        /// VMWare Cloud Rack Name
        /// </summary>
        public readonly string CloudRackName;
        /// <summary>
        /// date time the resource was created
        /// </summary>
        public readonly ImmutableDictionary<string, string> Created;
        /// <summary>
        /// count of nodes to create
        /// </summary>
        public readonly int NodesCount;
        /// <summary>
        /// Placement Group id, e.g. "n1"
        /// </summary>
        public readonly string PlacementGroupId;
        /// <summary>
        /// Placement Name, e.g. "Placement Group 1"
        /// </summary>
        public readonly string PlacementGroupName;
        /// <summary>
        /// Private Cloud Id
        /// </summary>
        public readonly string PrivateCloudId;
        /// <summary>
        /// Resource Pool Name
        /// </summary>
        public readonly string PrivateCloudName;
        /// <summary>
        /// The provisioning status of the resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// purchase id
        /// </summary>
        public readonly string PurchaseId;
        /// <summary>
        /// Dedicated Cloud Nodes SKU's description
        /// </summary>
        public readonly Outputs.SkuDescriptionResponseResult? SkuDescription;
        /// <summary>
        /// Node status, indicates is private cloud set up on this node or not
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// VMWare Cluster Name
        /// </summary>
        public readonly string VmwareClusterName;

        [OutputConstructor]
        private DedicatedCloudNodePropertiesResponseResult(
            string availabilityZoneId,

            string availabilityZoneName,

            string cloudRackName,

            ImmutableDictionary<string, string> created,

            int nodesCount,

            string placementGroupId,

            string placementGroupName,

            string privateCloudId,

            string privateCloudName,

            string provisioningState,

            string purchaseId,

            Outputs.SkuDescriptionResponseResult? skuDescription,

            string status,

            string vmwareClusterName)
        {
            AvailabilityZoneId = availabilityZoneId;
            AvailabilityZoneName = availabilityZoneName;
            CloudRackName = cloudRackName;
            Created = created;
            NodesCount = nodesCount;
            PlacementGroupId = placementGroupId;
            PlacementGroupName = placementGroupName;
            PrivateCloudId = privateCloudId;
            PrivateCloudName = privateCloudName;
            ProvisioningState = provisioningState;
            PurchaseId = purchaseId;
            SkuDescription = skuDescription;
            Status = status;
            VmwareClusterName = vmwareClusterName;
        }
    }
}
