// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.VMwareCloudSimple.V20190401
{
    /// <summary>
    /// Dedicated cloud service model
    /// </summary>
    public partial class DedicatedCloudService : Pulumi.CustomResource
    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Output("gatewaySubnet")]
        public Output<string> GatewaySubnet { get; private set; } = null!;

        /// <summary>
        /// indicates whether account onboarded or not in a given region
        /// </summary>
        [Output("isAccountOnboarded")]
        public Output<string> IsAccountOnboarded { get; private set; } = null!;

        /// <summary>
        /// Azure region
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// {dedicatedCloudServiceName}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// total nodes purchased
        /// </summary>
        [Output("nodes")]
        public Output<int> Nodes { get; private set; } = null!;

        /// <summary>
        /// link to a service management web portal
        /// </summary>
        [Output("serviceURL")]
        public Output<string> ServiceURL { get; private set; } = null!;

        /// <summary>
        /// The list of tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// {resourceProviderNamespace}/{resourceType}
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DedicatedCloudService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DedicatedCloudService(string name, DedicatedCloudServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:vmwarecloudsimple/v20190401:DedicatedCloudService", name, args ?? new DedicatedCloudServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DedicatedCloudService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:vmwarecloudsimple/v20190401:DedicatedCloudService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:vmwarecloudsimple/latest:DedicatedCloudService"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DedicatedCloudService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DedicatedCloudService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DedicatedCloudService(name, id, options);
        }
    }

    public sealed class DedicatedCloudServiceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// dedicated cloud Service name
        /// </summary>
        [Input("dedicatedCloudServiceName", required: true)]
        public Input<string> DedicatedCloudServiceName { get; set; } = null!;

        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Input("gatewaySubnet", required: true)]
        public Input<string> GatewaySubnet { get; set; } = null!;

        /// <summary>
        /// Azure region
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The list of tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DedicatedCloudServiceArgs()
        {
        }
    }
}
