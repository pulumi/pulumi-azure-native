// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.VMwareCloudSimple.V20190401
{
    /// <summary>
    /// Virtual machine model
    /// </summary>
    public partial class VirtualMachine : Pulumi.CustomResource
    {
        /// <summary>
        /// Azure region
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// {virtualMachineName}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Virtual machine properties
        /// </summary>
        [Output("properties")]
        public Output<Outputs.VirtualMachinePropertiesResponseResult> Properties { get; private set; } = null!;

        /// <summary>
        /// The list of tags
        /// </summary>
        [Output("tags")]
        public Output<Outputs.TagsResponseResult?> Tags { get; private set; } = null!;

        /// <summary>
        /// {resourceProviderNamespace}/{resourceType}
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachine(string name, VirtualMachineArgs args, CustomResourceOptions? options = null)
            : base("azurerm:vmwarecloudsimple/v20190401:VirtualMachine", name, args ?? new VirtualMachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azurerm:vmwarecloudsimple/v20190401:VirtualMachine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualMachine(name, id, options);
        }
    }

    public sealed class VirtualMachineArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// referer url
        /// </summary>
        [Input("Referer", required: true)]
        public Input<string> Referer { get; set; } = null!;

        /// <summary>
        /// The amount of memory
        /// </summary>
        [Input("amountOfRam", required: true)]
        public Input<int> AmountOfRam { get; set; } = null!;

        /// <summary>
        /// Virtual machine properties
        /// </summary>
        [Input("customization")]
        public Input<Inputs.GuestOSCustomizationArgs>? Customization { get; set; }

        [Input("disks")]
        private InputList<Inputs.VirtualDiskArgs>? _disks;

        /// <summary>
        /// The list of Virtual Disks
        /// </summary>
        public InputList<Inputs.VirtualDiskArgs> Disks
        {
            get => _disks ?? (_disks = new InputList<Inputs.VirtualDiskArgs>());
            set => _disks = value;
        }

        /// <summary>
        /// Expose Guest OS or not
        /// </summary>
        [Input("exposeToGuestVM")]
        public Input<bool>? ExposeToGuestVM { get; set; }

        /// <summary>
        /// Azure region
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// virtual machine name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nics")]
        private InputList<Inputs.VirtualNicArgs>? _nics;

        /// <summary>
        /// The list of Virtual NICs
        /// </summary>
        public InputList<Inputs.VirtualNicArgs> Nics
        {
            get => _nics ?? (_nics = new InputList<Inputs.VirtualNicArgs>());
            set => _nics = value;
        }

        /// <summary>
        /// The number of CPU cores
        /// </summary>
        [Input("numberOfCores", required: true)]
        public Input<int> NumberOfCores { get; set; } = null!;

        /// <summary>
        /// Password for login. Deprecated - use customization property
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Private Cloud Id
        /// </summary>
        [Input("privateCloudId", required: true)]
        public Input<string> PrivateCloudId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Virtual Machines Resource Pool
        /// </summary>
        [Input("resourcePool")]
        public Input<Inputs.ResourcePoolArgs>? ResourcePool { get; set; }

        /// <summary>
        /// The list of tags
        /// </summary>
        [Input("tags")]
        public Input<Inputs.TagsArgs>? Tags { get; set; }

        /// <summary>
        /// Virtual Machine Template Id
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        /// <summary>
        /// Username for login. Deprecated - use customization property
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vSphereNetworks")]
        private InputList<string>? _vSphereNetworks;

        /// <summary>
        /// The list of Virtual VSphere Networks
        /// </summary>
        public InputList<string> VSphereNetworks
        {
            get => _vSphereNetworks ?? (_vSphereNetworks = new InputList<string>());
            set => _vSphereNetworks = value;
        }

        public VirtualMachineArgs()
        {
        }
    }
}
