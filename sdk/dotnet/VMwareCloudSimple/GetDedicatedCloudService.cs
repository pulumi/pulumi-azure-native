// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.VMwareCloudSimple
{
    public static class GetDedicatedCloudService
    {
        public static Task<GetDedicatedCloudServiceResult> InvokeAsync(GetDedicatedCloudServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedCloudServiceResult>("azurerm:vmwarecloudsimple:getDedicatedCloudService", args ?? new GetDedicatedCloudServiceArgs(), options.WithVersion());
    }


    public sealed class GetDedicatedCloudServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// dedicated cloud Service name
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedCloudServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDedicatedCloudServiceResult
    {
        /// <summary>
        /// Azure region
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// {dedicatedCloudServiceName}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The properties of Dedicated Node Service
        /// </summary>
        public readonly Outputs.DedicatedCloudServicePropertiesResponseResult Properties;
        /// <summary>
        /// The list of tags
        /// </summary>
        public readonly Outputs.TagsResponseResult? Tags;
        /// <summary>
        /// {resourceProviderNamespace}/{resourceType}
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDedicatedCloudServiceResult(
            string location,

            string name,

            Outputs.DedicatedCloudServicePropertiesResponseResult properties,

            Outputs.TagsResponseResult? tags,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
