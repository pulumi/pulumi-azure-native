// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Portal.V20200901Preview
{
    public static class GetTenantConfiguration
    {
        public static Task<GetTenantConfigurationResult> InvokeAsync(GetTenantConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTenantConfigurationResult>("azure-nextgen:portal/v20200901preview:getTenantConfiguration", args ?? new GetTenantConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetTenantConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The configuration name. Value must be 'default'
        /// </summary>
        [Input("configurationName", required: true)]
        public string ConfigurationName { get; set; } = null!;

        public GetTenantConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTenantConfigurationResult
    {
        /// <summary>
        /// When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.
        /// </summary>
        public readonly bool? EnforcePrivateMarkdownStorage;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTenantConfigurationResult(
            bool? enforcePrivateMarkdownStorage,

            string name,

            string type)
        {
            EnforcePrivateMarkdownStorage = enforcePrivateMarkdownStorage;
            Name = name;
            Type = type;
        }
    }
}
