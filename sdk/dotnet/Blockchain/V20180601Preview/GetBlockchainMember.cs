// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Blockchain.V20180601Preview
{
    public static class GetBlockchainMember
    {
        public static Task<GetBlockchainMemberResult> InvokeAsync(GetBlockchainMemberArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBlockchainMemberResult>("azure-nextgen:blockchain/v20180601preview:getBlockchainMember", args ?? new GetBlockchainMemberArgs(), options.WithVersion());
    }


    public sealed class GetBlockchainMemberArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Blockchain member name.
        /// </summary>
        [Input("blockchainMemberName", required: true)]
        public string BlockchainMemberName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBlockchainMemberArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBlockchainMemberResult
    {
        /// <summary>
        /// Gets or sets the consortium for the blockchain member.
        /// </summary>
        public readonly string? Consortium;
        /// <summary>
        /// Gets the managed consortium management account address.
        /// </summary>
        public readonly string ConsortiumManagementAccountAddress;
        /// <summary>
        /// Sets the managed consortium management account password.
        /// </summary>
        public readonly string? ConsortiumManagementAccountPassword;
        /// <summary>
        /// Gets the display name of the member in the consortium.
        /// </summary>
        public readonly string? ConsortiumMemberDisplayName;
        /// <summary>
        /// Gets the role of the member in the consortium.
        /// </summary>
        public readonly string? ConsortiumRole;
        /// <summary>
        /// Gets the dns endpoint of the blockchain member.
        /// </summary>
        public readonly string Dns;
        /// <summary>
        /// Gets or sets firewall rules
        /// </summary>
        public readonly ImmutableArray<Outputs.FirewallRuleResponse> FirewallRules;
        /// <summary>
        /// The GEO location of the blockchain service.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Sets the basic auth password of the blockchain member.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Gets or sets the blockchain protocol.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Gets or sets the blockchain member provision state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets the public key of the blockchain member (default transaction node).
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// Gets the Ethereum root contract address of the blockchain.
        /// </summary>
        public readonly string RootContractAddress;
        /// <summary>
        /// Gets or sets the blockchain member Sku.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Tags of the service which is a list of key value pairs that describes the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the service - e.g. "Microsoft.Blockchain"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Gets the auth user name of the blockchain member.
        /// </summary>
        public readonly string UserName;
        /// <summary>
        /// Gets or sets the blockchain validator nodes Sku.
        /// </summary>
        public readonly Outputs.BlockchainMemberNodesSkuResponse? ValidatorNodesSku;

        [OutputConstructor]
        private GetBlockchainMemberResult(
            string? consortium,

            string consortiumManagementAccountAddress,

            string? consortiumManagementAccountPassword,

            string? consortiumMemberDisplayName,

            string? consortiumRole,

            string dns,

            ImmutableArray<Outputs.FirewallRuleResponse> firewallRules,

            string? location,

            string name,

            string? password,

            string? protocol,

            string provisioningState,

            string publicKey,

            string rootContractAddress,

            Outputs.SkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string type,

            string userName,

            Outputs.BlockchainMemberNodesSkuResponse? validatorNodesSku)
        {
            Consortium = consortium;
            ConsortiumManagementAccountAddress = consortiumManagementAccountAddress;
            ConsortiumManagementAccountPassword = consortiumManagementAccountPassword;
            ConsortiumMemberDisplayName = consortiumMemberDisplayName;
            ConsortiumRole = consortiumRole;
            Dns = dns;
            FirewallRules = firewallRules;
            Location = location;
            Name = name;
            Password = password;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            PublicKey = publicKey;
            RootContractAddress = rootContractAddress;
            Sku = sku;
            Tags = tags;
            Type = type;
            UserName = userName;
            ValidatorNodesSku = validatorNodesSku;
        }
    }
}
