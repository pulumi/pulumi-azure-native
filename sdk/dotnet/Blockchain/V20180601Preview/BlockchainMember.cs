// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Blockchain.V20180601Preview
{
    /// <summary>
    /// Payload of the blockchain member which is exposed in the request/response of the resource provider.
    /// </summary>
    public partial class BlockchainMember : Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets the consortium for the blockchain member.
        /// </summary>
        [Output("consortium")]
        public Output<string?> Consortium { get; private set; } = null!;

        /// <summary>
        /// Gets the managed consortium management account address.
        /// </summary>
        [Output("consortiumManagementAccountAddress")]
        public Output<string> ConsortiumManagementAccountAddress { get; private set; } = null!;

        /// <summary>
        /// Sets the managed consortium management account password.
        /// </summary>
        [Output("consortiumManagementAccountPassword")]
        public Output<string?> ConsortiumManagementAccountPassword { get; private set; } = null!;

        /// <summary>
        /// Gets the display name of the member in the consortium.
        /// </summary>
        [Output("consortiumMemberDisplayName")]
        public Output<string?> ConsortiumMemberDisplayName { get; private set; } = null!;

        /// <summary>
        /// Gets the role of the member in the consortium.
        /// </summary>
        [Output("consortiumRole")]
        public Output<string?> ConsortiumRole { get; private set; } = null!;

        /// <summary>
        /// Gets the dns endpoint of the blockchain member.
        /// </summary>
        [Output("dns")]
        public Output<string> Dns { get; private set; } = null!;

        /// <summary>
        /// Gets or sets firewall rules
        /// </summary>
        [Output("firewallRules")]
        public Output<ImmutableArray<Outputs.FirewallRuleResponse>> FirewallRules { get; private set; } = null!;

        /// <summary>
        /// The GEO location of the blockchain service.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Sets the basic auth password of the blockchain member.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the blockchain protocol.
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the blockchain member provision state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets the public key of the blockchain member (default transaction node).
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        /// <summary>
        /// Gets the Ethereum root contract address of the blockchain.
        /// </summary>
        [Output("rootContractAddress")]
        public Output<string> RootContractAddress { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the blockchain member Sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Tags of the service which is a list of key value pairs that describes the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the service - e.g. "Microsoft.Blockchain"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Gets the auth user name of the blockchain member.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the blockchain validator nodes Sku.
        /// </summary>
        [Output("validatorNodesSku")]
        public Output<Outputs.BlockchainMemberNodesSkuResponse?> ValidatorNodesSku { get; private set; } = null!;


        /// <summary>
        /// Create a BlockchainMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BlockchainMember(string name, BlockchainMemberArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:blockchain/v20180601preview:BlockchainMember", name, args ?? new BlockchainMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BlockchainMember(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:blockchain/v20180601preview:BlockchainMember", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BlockchainMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BlockchainMember Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BlockchainMember(name, id, options);
        }
    }

    public sealed class BlockchainMemberArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Blockchain member name.
        /// </summary>
        [Input("blockchainMemberName", required: true)]
        public Input<string> BlockchainMemberName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the consortium for the blockchain member.
        /// </summary>
        [Input("consortium")]
        public Input<string>? Consortium { get; set; }

        /// <summary>
        /// Sets the managed consortium management account password.
        /// </summary>
        [Input("consortiumManagementAccountPassword")]
        public Input<string>? ConsortiumManagementAccountPassword { get; set; }

        /// <summary>
        /// Gets the display name of the member in the consortium.
        /// </summary>
        [Input("consortiumMemberDisplayName")]
        public Input<string>? ConsortiumMemberDisplayName { get; set; }

        /// <summary>
        /// Gets the role of the member in the consortium.
        /// </summary>
        [Input("consortiumRole")]
        public Input<string>? ConsortiumRole { get; set; }

        [Input("firewallRules")]
        private InputList<Inputs.FirewallRuleArgs>? _firewallRules;

        /// <summary>
        /// Gets or sets firewall rules
        /// </summary>
        public InputList<Inputs.FirewallRuleArgs> FirewallRules
        {
            get => _firewallRules ?? (_firewallRules = new InputList<Inputs.FirewallRuleArgs>());
            set => _firewallRules = value;
        }

        /// <summary>
        /// The GEO location of the blockchain service.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Sets the basic auth password of the blockchain member.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Gets or sets the blockchain protocol.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the blockchain member Sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags of the service which is a list of key value pairs that describes the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Gets or sets the blockchain validator nodes Sku.
        /// </summary>
        [Input("validatorNodesSku")]
        public Input<Inputs.BlockchainMemberNodesSkuArgs>? ValidatorNodesSku { get; set; }

        public BlockchainMemberArgs()
        {
        }
    }
}
