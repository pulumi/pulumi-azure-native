// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub
{
    public static class GetWorkflow
    {
        /// <summary>
        /// Resource representation of a workflow
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2022-10-11-preview, 2024-05-01-preview, 2024-08-01-preview, 2025-03-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devhub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetWorkflowResult> InvokeAsync(GetWorkflowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowResult>("azure-native:devhub:getWorkflow", args ?? new GetWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// Resource representation of a workflow
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2022-10-11-preview, 2024-05-01-preview, 2024-08-01-preview, 2025-03-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devhub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetWorkflowResult> Invoke(GetWorkflowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowResult>("azure-native:devhub:getWorkflow", args ?? new GetWorkflowInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource representation of a workflow
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2022-10-11-preview, 2024-05-01-preview, 2024-08-01-preview, 2025-03-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native devhub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetWorkflowResult> Invoke(GetWorkflowInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowResult>("azure-native:devhub:getWorkflow", args ?? new GetWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workflow resource.
        /// </summary>
        [Input("workflowName", required: true)]
        public string WorkflowName { get; set; } = null!;

        public GetWorkflowArgs()
        {
        }
        public static new GetWorkflowArgs Empty => new GetWorkflowArgs();
    }

    public sealed class GetWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workflow resource.
        /// </summary>
        [Input("workflowName", required: true)]
        public Input<string> WorkflowName { get; set; } = null!;

        public GetWorkflowInvokeArgs()
        {
        }
        public static new GetWorkflowInvokeArgs Empty => new GetWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkflowResult
    {
        /// <summary>
        /// The name of the app.
        /// </summary>
        public readonly string? AppName;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The version of the language image used for building the code in the generated dockerfile.
        /// </summary>
        public readonly string? BuilderVersion;
        /// <summary>
        /// The mode of generation to be used for generating Dockerfiles.
        /// </summary>
        public readonly string? DockerfileGenerationMode;
        /// <summary>
        /// The directory to output the generated Dockerfile to.
        /// </summary>
        public readonly string? DockerfileOutputDirectory;
        /// <summary>
        /// The programming language used.
        /// </summary>
        public readonly string? GenerationLanguage;
        /// <summary>
        /// Profile of a github workflow.
        /// </summary>
        public readonly Outputs.GitHubWorkflowProfileResponse? GithubWorkflowProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the image to be generated.
        /// </summary>
        public readonly string? ImageName;
        /// <summary>
        /// The tag to apply to the generated image.
        /// </summary>
        public readonly string? ImageTag;
        /// <summary>
        /// The version of the language image used for execution in the generated dockerfile.
        /// </summary>
        public readonly string? LanguageVersion;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The mode of generation to be used for generating Manifest.
        /// </summary>
        public readonly string? ManifestGenerationMode;
        /// <summary>
        /// The directory to output the generated manifests to.
        /// </summary>
        public readonly string? ManifestOutputDirectory;
        /// <summary>
        /// Determines the type of manifests to be generated.
        /// </summary>
        public readonly string? ManifestType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The namespace to deploy the application to.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The port the application is exposed on.
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkflowResult(
            string? appName,

            string azureApiVersion,

            string? builderVersion,

            string? dockerfileGenerationMode,

            string? dockerfileOutputDirectory,

            string? generationLanguage,

            Outputs.GitHubWorkflowProfileResponse? githubWorkflowProfile,

            string id,

            string? imageName,

            string? imageTag,

            string? languageVersion,

            string location,

            string? manifestGenerationMode,

            string? manifestOutputDirectory,

            string? manifestType,

            string name,

            string? @namespace,

            string? port,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AppName = appName;
            AzureApiVersion = azureApiVersion;
            BuilderVersion = builderVersion;
            DockerfileGenerationMode = dockerfileGenerationMode;
            DockerfileOutputDirectory = dockerfileOutputDirectory;
            GenerationLanguage = generationLanguage;
            GithubWorkflowProfile = githubWorkflowProfile;
            Id = id;
            ImageName = imageName;
            ImageTag = imageTag;
            LanguageVersion = languageVersion;
            Location = location;
            ManifestGenerationMode = manifestGenerationMode;
            ManifestOutputDirectory = manifestOutputDirectory;
            ManifestType = manifestType;
            Name = name;
            Namespace = @namespace;
            Port = port;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
