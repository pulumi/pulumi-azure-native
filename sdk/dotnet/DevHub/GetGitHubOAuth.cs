// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub
{
    public static class GetGitHubOAuth
    {
        /// <summary>
        /// URL used to authorize the Developer Hub GitHub App
        /// API Version: 2022-04-01-preview.
        /// </summary>
        public static Task<GetGitHubOAuthResult> InvokeAsync(GetGitHubOAuthArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGitHubOAuthResult>("azure-native:devhub:getGitHubOAuth", args ?? new GetGitHubOAuthArgs(), options.WithDefaults());

        /// <summary>
        /// URL used to authorize the Developer Hub GitHub App
        /// API Version: 2022-04-01-preview.
        /// </summary>
        public static Output<GetGitHubOAuthResult> Invoke(GetGitHubOAuthInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGitHubOAuthResult>("azure-native:devhub:getGitHubOAuth", args ?? new GetGitHubOAuthInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGitHubOAuthArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Azure region.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
        /// </summary>
        [Input("redirectUrl")]
        public string? RedirectUrl { get; set; }

        public GetGitHubOAuthArgs()
        {
        }
    }

    public sealed class GetGitHubOAuthInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Azure region.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        public GetGitHubOAuthInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGitHubOAuthResult
    {
        /// <summary>
        /// URL for authorizing the Developer Hub GitHub App
        /// </summary>
        public readonly string? AuthURL;
        /// <summary>
        /// OAuth token used to make calls to GitHub
        /// </summary>
        public readonly string? Token;

        [OutputConstructor]
        private GetGitHubOAuthResult(
            string? authURL,

            string? token)
        {
            AuthURL = authURL;
            Token = token;
        }
    }
}
