// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub.V20221011Preview.Inputs
{

    /// <summary>
    /// GitHub Workflow Profile
    /// </summary>
    public sealed class GitHubWorkflowProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information on the azure container registry
        /// </summary>
        [Input("acr")]
        public Input<Inputs.ACRArgs>? Acr { get; set; }

        /// <summary>
        /// The Azure Kubernetes Cluster Resource the application will be deployed to.
        /// </summary>
        [Input("aksResourceId")]
        public Input<string>? AksResourceId { get; set; }

        /// <summary>
        /// Repository Branch Name
        /// </summary>
        [Input("branchName")]
        public Input<string>? BranchName { get; set; }

        [Input("deploymentProperties")]
        public Input<Inputs.DeploymentPropertiesArgs>? DeploymentProperties { get; set; }

        /// <summary>
        /// Path to Dockerfile Build Context within the repository.
        /// </summary>
        [Input("dockerBuildContext")]
        public Input<string>? DockerBuildContext { get; set; }

        /// <summary>
        /// Path to the Dockerfile within the repository.
        /// </summary>
        [Input("dockerfile")]
        public Input<string>? Dockerfile { get; set; }

        [Input("lastWorkflowRun")]
        public Input<Inputs.WorkflowRunArgs>? LastWorkflowRun { get; set; }

        /// <summary>
        /// Kubernetes namespace the application is deployed to.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The fields needed for OIDC with GitHub.
        /// </summary>
        [Input("oidcCredentials")]
        public Input<Inputs.GitHubWorkflowProfileOidcCredentialsArgs>? OidcCredentials { get; set; }

        /// <summary>
        /// Repository Name
        /// </summary>
        [Input("repositoryName")]
        public Input<string>? RepositoryName { get; set; }

        /// <summary>
        /// Repository Owner
        /// </summary>
        [Input("repositoryOwner")]
        public Input<string>? RepositoryOwner { get; set; }

        public GitHubWorkflowProfileArgs()
        {
        }
        public static new GitHubWorkflowProfileArgs Empty => new GitHubWorkflowProfileArgs();
    }
}
