// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub.V20221011Preview.Outputs
{

    /// <summary>
    /// GitHub Workflow Profile
    /// </summary>
    [OutputType]
    public sealed class GitHubWorkflowProfileResponse
    {
        /// <summary>
        /// Information on the azure container registry
        /// </summary>
        public readonly Outputs.ACRResponse? Acr;
        /// <summary>
        /// The Azure Kubernetes Cluster Resource the application will be deployed to.
        /// </summary>
        public readonly string? AksResourceId;
        /// <summary>
        /// Determines the authorization status of requests.
        /// </summary>
        public readonly string AuthStatus;
        /// <summary>
        /// Repository Branch Name
        /// </summary>
        public readonly string? BranchName;
        public readonly Outputs.DeploymentPropertiesResponse? DeploymentProperties;
        /// <summary>
        /// Path to Dockerfile Build Context within the repository.
        /// </summary>
        public readonly string? DockerBuildContext;
        /// <summary>
        /// Path to the Dockerfile within the repository.
        /// </summary>
        public readonly string? Dockerfile;
        public readonly Outputs.WorkflowRunResponse? LastWorkflowRun;
        /// <summary>
        /// Kubernetes namespace the application is deployed to.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The fields needed for OIDC with GitHub.
        /// </summary>
        public readonly Outputs.GitHubWorkflowProfileResponseOidcCredentials? OidcCredentials;
        /// <summary>
        /// The status of the Pull Request submitted against the users repository.
        /// </summary>
        public readonly string PrStatus;
        /// <summary>
        /// The URL to the Pull Request submitted against the users repository.
        /// </summary>
        public readonly string PrURL;
        /// <summary>
        /// The number associated with the submitted pull request.
        /// </summary>
        public readonly int PullNumber;
        /// <summary>
        /// Repository Name
        /// </summary>
        public readonly string? RepositoryName;
        /// <summary>
        /// Repository Owner
        /// </summary>
        public readonly string? RepositoryOwner;

        [OutputConstructor]
        private GitHubWorkflowProfileResponse(
            Outputs.ACRResponse? acr,

            string? aksResourceId,

            string authStatus,

            string? branchName,

            Outputs.DeploymentPropertiesResponse? deploymentProperties,

            string? dockerBuildContext,

            string? dockerfile,

            Outputs.WorkflowRunResponse? lastWorkflowRun,

            string? @namespace,

            Outputs.GitHubWorkflowProfileResponseOidcCredentials? oidcCredentials,

            string prStatus,

            string prURL,

            int pullNumber,

            string? repositoryName,

            string? repositoryOwner)
        {
            Acr = acr;
            AksResourceId = aksResourceId;
            AuthStatus = authStatus;
            BranchName = branchName;
            DeploymentProperties = deploymentProperties;
            DockerBuildContext = dockerBuildContext;
            Dockerfile = dockerfile;
            LastWorkflowRun = lastWorkflowRun;
            Namespace = @namespace;
            OidcCredentials = oidcCredentials;
            PrStatus = prStatus;
            PrURL = prURL;
            PullNumber = pullNumber;
            RepositoryName = repositoryName;
            RepositoryOwner = repositoryOwner;
        }
    }
}
