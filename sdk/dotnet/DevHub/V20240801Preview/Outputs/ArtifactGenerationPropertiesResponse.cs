// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub.V20240801Preview.Outputs
{

    /// <summary>
    /// Properties used for generating artifacts such as Dockerfiles and manifests.
    /// </summary>
    [OutputType]
    public sealed class ArtifactGenerationPropertiesResponse
    {
        /// <summary>
        /// The name of the app.
        /// </summary>
        public readonly string? AppName;
        /// <summary>
        /// The version of the language image used for building the code in the generated dockerfile.
        /// </summary>
        public readonly string? BuilderVersion;
        /// <summary>
        /// The mode of generation to be used for generating Dockerfiles.
        /// </summary>
        public readonly string? DockerfileGenerationMode;
        /// <summary>
        /// The directory to output the generated Dockerfile to.
        /// </summary>
        public readonly string? DockerfileOutputDirectory;
        /// <summary>
        /// The programming language used.
        /// </summary>
        public readonly string? GenerationLanguage;
        /// <summary>
        /// The name of the image to be generated.
        /// </summary>
        public readonly string? ImageName;
        /// <summary>
        /// The tag to apply to the generated image.
        /// </summary>
        public readonly string? ImageTag;
        /// <summary>
        /// The version of the language image used for execution in the generated dockerfile.
        /// </summary>
        public readonly string? LanguageVersion;
        /// <summary>
        /// The mode of generation to be used for generating Manifest.
        /// </summary>
        public readonly string? ManifestGenerationMode;
        /// <summary>
        /// The directory to output the generated manifests to.
        /// </summary>
        public readonly string? ManifestOutputDirectory;
        /// <summary>
        /// Determines the type of manifests to be generated.
        /// </summary>
        public readonly string? ManifestType;
        /// <summary>
        /// The namespace to deploy the application to.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The port the application is exposed on.
        /// </summary>
        public readonly string? Port;

        [OutputConstructor]
        private ArtifactGenerationPropertiesResponse(
            string? appName,

            string? builderVersion,

            string? dockerfileGenerationMode,

            string? dockerfileOutputDirectory,

            string? generationLanguage,

            string? imageName,

            string? imageTag,

            string? languageVersion,

            string? manifestGenerationMode,

            string? manifestOutputDirectory,

            string? manifestType,

            string? @namespace,

            string? port)
        {
            AppName = appName;
            BuilderVersion = builderVersion;
            DockerfileGenerationMode = dockerfileGenerationMode;
            DockerfileOutputDirectory = dockerfileOutputDirectory;
            GenerationLanguage = generationLanguage;
            ImageName = imageName;
            ImageTag = imageTag;
            LanguageVersion = languageVersion;
            ManifestGenerationMode = manifestGenerationMode;
            ManifestOutputDirectory = manifestOutputDirectory;
            ManifestType = manifestType;
            Namespace = @namespace;
            Port = port;
        }
    }
}
