// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub.V20240801Preview
{
    /// <summary>
    /// Resource representation of a IacProfile.
    /// </summary>
    [AzureNativeResourceType("azure-native:devhub/v20240801preview:IacProfile")]
    public partial class IacProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Determines the authorization status of requests.
        /// </summary>
        [Output("authStatus")]
        public Output<string> AuthStatus { get; private set; } = null!;

        /// <summary>
        /// Repository Branch Name
        /// </summary>
        [Output("branchName")]
        public Output<string?> BranchName { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the Pull Request submitted against the users repository.
        /// </summary>
        [Output("prStatus")]
        public Output<string> PrStatus { get; private set; } = null!;

        /// <summary>
        /// The number associated with the submitted pull request.
        /// </summary>
        [Output("pullNumber")]
        public Output<int> PullNumber { get; private set; } = null!;

        /// <summary>
        /// Repository Main Branch
        /// </summary>
        [Output("repositoryMainBranch")]
        public Output<string?> RepositoryMainBranch { get; private set; } = null!;

        /// <summary>
        /// Repository Name
        /// </summary>
        [Output("repositoryName")]
        public Output<string?> RepositoryName { get; private set; } = null!;

        /// <summary>
        /// Repository Owner
        /// </summary>
        [Output("repositoryOwner")]
        public Output<string?> RepositoryOwner { get; private set; } = null!;

        [Output("stages")]
        public Output<ImmutableArray<Outputs.StagePropertiesResponse>> Stages { get; private set; } = null!;

        /// <summary>
        /// Terraform Storage Account Name
        /// </summary>
        [Output("storageAccountName")]
        public Output<string?> StorageAccountName { get; private set; } = null!;

        /// <summary>
        /// Terraform Storage Account Resource Group
        /// </summary>
        [Output("storageAccountResourceGroup")]
        public Output<string?> StorageAccountResourceGroup { get; private set; } = null!;

        /// <summary>
        /// Terraform Storage Account Subscription
        /// </summary>
        [Output("storageAccountSubscription")]
        public Output<string?> StorageAccountSubscription { get; private set; } = null!;

        /// <summary>
        /// Terraform Container Name
        /// </summary>
        [Output("storageContainerName")]
        public Output<string?> StorageContainerName { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("templates")]
        public Output<ImmutableArray<Outputs.IacTemplatePropertiesResponse>> Templates { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IacProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IacProfile(string name, IacProfileArgs args, CustomResourceOptions? options = null)
            : base("azure-native:devhub/v20240801preview:IacProfile", name, args ?? new IacProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IacProfile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:devhub/v20240801preview:IacProfile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:devhub:IacProfile" },
                    new global::Pulumi.Alias { Type = "azure-native:devhub/v20240501preview:IacProfile" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IacProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IacProfile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IacProfile(name, id, options);
        }
    }

    public sealed class IacProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Repository Branch Name
        /// </summary>
        [Input("branchName")]
        public Input<string>? BranchName { get; set; }

        /// <summary>
        /// The name of the IacProfile.
        /// </summary>
        [Input("iacProfileName")]
        public Input<string>? IacProfileName { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Repository Main Branch
        /// </summary>
        [Input("repositoryMainBranch")]
        public Input<string>? RepositoryMainBranch { get; set; }

        /// <summary>
        /// Repository Name
        /// </summary>
        [Input("repositoryName")]
        public Input<string>? RepositoryName { get; set; }

        /// <summary>
        /// Repository Owner
        /// </summary>
        [Input("repositoryOwner")]
        public Input<string>? RepositoryOwner { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("stages")]
        private InputList<Inputs.StagePropertiesArgs>? _stages;
        public InputList<Inputs.StagePropertiesArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.StagePropertiesArgs>());
            set => _stages = value;
        }

        /// <summary>
        /// Terraform Storage Account Name
        /// </summary>
        [Input("storageAccountName")]
        public Input<string>? StorageAccountName { get; set; }

        /// <summary>
        /// Terraform Storage Account Resource Group
        /// </summary>
        [Input("storageAccountResourceGroup")]
        public Input<string>? StorageAccountResourceGroup { get; set; }

        /// <summary>
        /// Terraform Storage Account Subscription
        /// </summary>
        [Input("storageAccountSubscription")]
        public Input<string>? StorageAccountSubscription { get; set; }

        /// <summary>
        /// Terraform Container Name
        /// </summary>
        [Input("storageContainerName")]
        public Input<string>? StorageContainerName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("templates")]
        private InputList<Inputs.IacTemplatePropertiesArgs>? _templates;
        public InputList<Inputs.IacTemplatePropertiesArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Inputs.IacTemplatePropertiesArgs>());
            set => _templates = value;
        }

        public IacProfileArgs()
        {
        }
        public static new IacProfileArgs Empty => new IacProfileArgs();
    }
}
