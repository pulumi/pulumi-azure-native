// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DevHub.V20250301Preview.Outputs
{

    /// <summary>
    /// Template Workflow Profile
    /// </summary>
    [OutputType]
    public sealed class TemplateWorkflowProfileResponse
    {
        /// <summary>
        /// Details of the GitHub repository associated with the workflow.
        /// </summary>
        public readonly Outputs.ADOProviderProfileResponse? AdoProviderProfile;
        /// <summary>
        /// Determines the authorization status of requests.
        /// </summary>
        public readonly string AuthStatus;
        /// <summary>
        /// The properties of ADO OAuth.
        /// </summary>
        public readonly Outputs.TemplateReferenceResponse? DeploymentTemplate;
        /// <summary>
        /// The properties of ADO OAuth.
        /// </summary>
        public readonly Outputs.TemplateReferenceResponse? DockerfileTemplate;
        /// <summary>
        /// Details of the GitHub repository and credentials associated with the workflow.
        /// </summary>
        public readonly Outputs.GitHubProviderProfileResponse? GitHubProviderProfile;
        public readonly Outputs.WorkflowRunResponse? LastWorkflowRun;
        public readonly ImmutableArray<Outputs.TemplateReferenceResponse> ManifestTemplates;
        /// <summary>
        /// Details of the pull request containing the workflow.
        /// </summary>
        public readonly Outputs.PullRequestResponse? PullRequest;
        /// <summary>
        /// The status of the Pull Request submitted against the users repository.
        /// </summary>
        public readonly string? RepositoryProvider;
        /// <summary>
        /// The properties of ADO OAuth.
        /// </summary>
        public readonly Outputs.TemplateReferenceResponse? WorkflowTemplate;

        [OutputConstructor]
        private TemplateWorkflowProfileResponse(
            Outputs.ADOProviderProfileResponse? adoProviderProfile,

            string authStatus,

            Outputs.TemplateReferenceResponse? deploymentTemplate,

            Outputs.TemplateReferenceResponse? dockerfileTemplate,

            Outputs.GitHubProviderProfileResponse? gitHubProviderProfile,

            Outputs.WorkflowRunResponse? lastWorkflowRun,

            ImmutableArray<Outputs.TemplateReferenceResponse> manifestTemplates,

            Outputs.PullRequestResponse? pullRequest,

            string? repositoryProvider,

            Outputs.TemplateReferenceResponse? workflowTemplate)
        {
            AdoProviderProfile = adoProviderProfile;
            AuthStatus = authStatus;
            DeploymentTemplate = deploymentTemplate;
            DockerfileTemplate = dockerfileTemplate;
            GitHubProviderProfile = gitHubProviderProfile;
            LastWorkflowRun = lastWorkflowRun;
            ManifestTemplates = manifestTemplates;
            PullRequest = pullRequest;
            RepositoryProvider = repositoryProvider;
            WorkflowTemplate = workflowTemplate;
        }
    }
}
