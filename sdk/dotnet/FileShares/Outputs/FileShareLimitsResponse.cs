// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.FileShares.Outputs
{

    /// <summary>
    /// File share-related limits in the specified subscription/location.
    /// </summary>
    [OutputType]
    public sealed class FileShareLimitsResponse
    {
        /// <summary>
        /// The maximum number of private endpoint connections allowed for a file share.
        /// </summary>
        public readonly int MaxFileSharePrivateEndpointConnections;
        /// <summary>
        /// The maximum number of snapshots allowed per file share.
        /// </summary>
        public readonly int MaxFileShareSnapshots;
        /// <summary>
        /// The maximum number of subnets that can be associated with a file share.
        /// </summary>
        public readonly int MaxFileShareSubnets;
        /// <summary>
        /// The maximum number of file shares that can be created.
        /// </summary>
        public readonly int MaxFileShares;
        /// <summary>
        /// The maximum provisioned IOPS (Input/Output Operations Per Second) for a file share.
        /// </summary>
        public readonly int MaxProvisionedIOPerSec;
        /// <summary>
        /// The maximum provisioned storage in GiB for a file share.
        /// </summary>
        public readonly int MaxProvisionedStorageGiB;
        /// <summary>
        /// The maximum provisioned throughput in MiB/s for a file share.
        /// </summary>
        public readonly int MaxProvisionedThroughputMiBPerSec;
        /// <summary>
        /// The minimum provisioned IOPS (Input/Output Operations Per Second) for a file share.
        /// </summary>
        public readonly int MinProvisionedIOPerSec;
        /// <summary>
        /// The minimum provisioned storage in GiB for a file share.
        /// </summary>
        public readonly int MinProvisionedStorageGiB;
        /// <summary>
        /// The minimum provisioned throughput in MiB/s for a file share.
        /// </summary>
        public readonly int MinProvisionedThroughputMiBPerSec;

        [OutputConstructor]
        private FileShareLimitsResponse(
            int maxFileSharePrivateEndpointConnections,

            int maxFileShareSnapshots,

            int maxFileShareSubnets,

            int maxFileShares,

            int maxProvisionedIOPerSec,

            int maxProvisionedStorageGiB,

            int maxProvisionedThroughputMiBPerSec,

            int minProvisionedIOPerSec,

            int minProvisionedStorageGiB,

            int minProvisionedThroughputMiBPerSec)
        {
            MaxFileSharePrivateEndpointConnections = maxFileSharePrivateEndpointConnections;
            MaxFileShareSnapshots = maxFileShareSnapshots;
            MaxFileShareSubnets = maxFileShareSubnets;
            MaxFileShares = maxFileShares;
            MaxProvisionedIOPerSec = maxProvisionedIOPerSec;
            MaxProvisionedStorageGiB = maxProvisionedStorageGiB;
            MaxProvisionedThroughputMiBPerSec = maxProvisionedThroughputMiBPerSec;
            MinProvisionedIOPerSec = minProvisionedIOPerSec;
            MinProvisionedStorageGiB = minProvisionedStorageGiB;
            MinProvisionedThroughputMiBPerSec = minProvisionedThroughputMiBPerSec;
        }
    }
}
