// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.FileShares.Outputs
{

    /// <summary>
    /// File share provisioning parameters recommendation API result.
    /// </summary>
    [OutputType]
    public sealed class FileShareProvisioningRecommendationOutputResponse
    {
        /// <summary>
        /// Redundancy options for the share.
        /// </summary>
        public readonly ImmutableArray<string> AvailableRedundancyOptions;
        /// <summary>
        /// The recommended value of provisioned IO / sec of the share.
        /// </summary>
        public readonly int ProvisionedIOPerSec;
        /// <summary>
        /// The recommended value of provisioned throughput / sec of the share.
        /// </summary>
        public readonly int ProvisionedThroughputMiBPerSec;

        [OutputConstructor]
        private FileShareProvisioningRecommendationOutputResponse(
            ImmutableArray<string> availableRedundancyOptions,

            int provisionedIOPerSec,

            int provisionedThroughputMiBPerSec)
        {
            AvailableRedundancyOptions = availableRedundancyOptions;
            ProvisionedIOPerSec = provisionedIOPerSec;
            ProvisionedThroughputMiBPerSec = provisionedThroughputMiBPerSec;
        }
    }
}
