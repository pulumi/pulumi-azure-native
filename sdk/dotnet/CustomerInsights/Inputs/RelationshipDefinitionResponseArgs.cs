// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CustomerInsights.Inputs
{

    /// <summary>
    /// The definition of Relationship.
    /// </summary>
    public sealed class RelationshipDefinitionResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Relationship Cardinality.
        /// </summary>
        [Input("cardinality")]
        public Input<string>? Cardinality { get; set; }

        [Input("description")]
        private InputMap<string>? _description;

        /// <summary>
        /// Localized descriptions for the Relationship.
        /// </summary>
        public InputMap<string> Description
        {
            get => _description ?? (_description = new InputMap<string>());
            set => _description = value;
        }

        [Input("displayName")]
        private InputMap<string>? _displayName;

        /// <summary>
        /// Localized display name for the Relationship.
        /// </summary>
        public InputMap<string> DisplayName
        {
            get => _displayName ?? (_displayName = new InputMap<string>());
            set => _displayName = value;
        }

        /// <summary>
        /// The expiry date time in UTC.
        /// </summary>
        [Input("expiryDateTimeUtc")]
        public Input<string>? ExpiryDateTimeUtc { get; set; }

        [Input("fields")]
        private InputList<Inputs.PropertyDefinitionResponseArgs>? _fields;

        /// <summary>
        /// The properties of the Relationship.
        /// </summary>
        public InputList<Inputs.PropertyDefinitionResponseArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.PropertyDefinitionResponseArgs>());
            set => _fields = value;
        }

        [Input("lookupMappings")]
        private InputList<Inputs.RelationshipTypeMappingResponseArgs>? _lookupMappings;

        /// <summary>
        /// Optional property to be used to map fields in profile to their strong ids in related profile.
        /// </summary>
        public InputList<Inputs.RelationshipTypeMappingResponseArgs> LookupMappings
        {
            get => _lookupMappings ?? (_lookupMappings = new InputList<Inputs.RelationshipTypeMappingResponseArgs>());
            set => _lookupMappings = value;
        }

        /// <summary>
        /// Profile type.
        /// </summary>
        [Input("profileType", required: true)]
        public Input<string> ProfileType { get; set; } = null!;

        /// <summary>
        /// Provisioning state.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// Related profile being referenced.
        /// </summary>
        [Input("relatedProfileType", required: true)]
        public Input<string> RelatedProfileType { get; set; } = null!;

        /// <summary>
        /// The relationship guid id.
        /// </summary>
        [Input("relationshipGuidId", required: true)]
        public Input<string> RelationshipGuidId { get; set; } = null!;

        /// <summary>
        /// The Relationship name.
        /// </summary>
        [Input("relationshipName", required: true)]
        public Input<string> RelationshipName { get; set; } = null!;

        /// <summary>
        /// The hub name.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public RelationshipDefinitionResponseArgs()
        {
        }
    }
}
