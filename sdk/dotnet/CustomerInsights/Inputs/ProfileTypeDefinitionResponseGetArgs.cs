// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CustomerInsights.Inputs
{

    /// <summary>
    /// The profile type definition.
    /// </summary>
    public sealed class ProfileTypeDefinitionResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
        /// </summary>
        [Input("apiEntitySetName")]
        public Input<string>? ApiEntitySetName { get; set; }

        [Input("attributes")]
        private InputMap<string>? _attributes;

        /// <summary>
        /// The attributes for the Type.
        /// </summary>
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        [Input("description")]
        private InputMap<string>? _description;

        /// <summary>
        /// Localized descriptions for the property.
        /// </summary>
        public InputMap<string> Description
        {
            get => _description ?? (_description = new InputMap<string>());
            set => _description = value;
        }

        [Input("displayName")]
        private InputMap<string>? _displayName;

        /// <summary>
        /// Localized display names for the property.
        /// </summary>
        public InputMap<string> DisplayName
        {
            get => _displayName ?? (_displayName = new InputMap<string>());
            set => _displayName = value;
        }

        /// <summary>
        /// Type of entity.
        /// </summary>
        [Input("entityType")]
        public Input<string>? EntityType { get; set; }

        [Input("fields")]
        private InputList<Inputs.PropertyDefinitionResponseGetArgs>? _fields;

        /// <summary>
        /// The properties of the Profile.
        /// </summary>
        public InputList<Inputs.PropertyDefinitionResponseGetArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.PropertyDefinitionResponseGetArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// The instance count.
        /// </summary>
        [Input("instancesCount")]
        public Input<int>? InstancesCount { get; set; }

        /// <summary>
        /// Large Image associated with the Property or EntityType.
        /// </summary>
        [Input("largeImage")]
        public Input<string>? LargeImage { get; set; }

        /// <summary>
        /// The last changed time for the type definition.
        /// </summary>
        [Input("lastChangedUtc", required: true)]
        public Input<string> LastChangedUtc { get; set; } = null!;

        [Input("localizedAttributes")]
        private InputMap<string>? _localizedAttributes;

        /// <summary>
        /// Any custom localized attributes for the Type.
        /// </summary>
        public InputMap<string> LocalizedAttributes
        {
            get => _localizedAttributes ?? (_localizedAttributes = new InputMap<string>());
            set => _localizedAttributes = value;
        }

        /// <summary>
        /// Medium Image associated with the Property or EntityType.
        /// </summary>
        [Input("mediumImage")]
        public Input<string>? MediumImage { get; set; }

        /// <summary>
        /// Provisioning state.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The schema org link. This helps ACI identify and suggest semantic models.
        /// </summary>
        [Input("schemaItemTypeLink")]
        public Input<string>? SchemaItemTypeLink { get; set; }

        /// <summary>
        /// Small Image associated with the Property or EntityType.
        /// </summary>
        [Input("smallImage")]
        public Input<string>? SmallImage { get; set; }

        [Input("strongIds")]
        private InputList<Inputs.StrongIdResponseGetArgs>? _strongIds;

        /// <summary>
        /// The strong IDs.
        /// </summary>
        public InputList<Inputs.StrongIdResponseGetArgs> StrongIds
        {
            get => _strongIds ?? (_strongIds = new InputList<Inputs.StrongIdResponseGetArgs>());
            set => _strongIds = value;
        }

        /// <summary>
        /// The hub name.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// The timestamp property name. Represents the time when the interaction or profile update happened.
        /// </summary>
        [Input("timestampFieldName")]
        public Input<string>? TimestampFieldName { get; set; }

        /// <summary>
        /// The name of the entity.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        public ProfileTypeDefinitionResponseGetArgs()
        {
        }
    }
}
