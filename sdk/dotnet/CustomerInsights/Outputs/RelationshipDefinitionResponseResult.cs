// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CustomerInsights.Outputs
{

    [OutputType]
    public sealed class RelationshipDefinitionResponseResult
    {
        /// <summary>
        /// The Relationship Cardinality.
        /// </summary>
        public readonly string? Cardinality;
        /// <summary>
        /// Localized descriptions for the Relationship.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Description;
        /// <summary>
        /// Localized display name for the Relationship.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? DisplayName;
        /// <summary>
        /// The expiry date time in UTC.
        /// </summary>
        public readonly string? ExpiryDateTimeUtc;
        /// <summary>
        /// The properties of the Relationship.
        /// </summary>
        public readonly ImmutableArray<Outputs.PropertyDefinitionResponseResult> Fields;
        /// <summary>
        /// Optional property to be used to map fields in profile to their strong ids in related profile.
        /// </summary>
        public readonly ImmutableArray<Outputs.RelationshipTypeMappingResponseResult> LookupMappings;
        /// <summary>
        /// Profile type.
        /// </summary>
        public readonly string ProfileType;
        /// <summary>
        /// Provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Related profile being referenced.
        /// </summary>
        public readonly string RelatedProfileType;
        /// <summary>
        /// The relationship guid id.
        /// </summary>
        public readonly string RelationshipGuidId;
        /// <summary>
        /// The Relationship name.
        /// </summary>
        public readonly string RelationshipName;
        /// <summary>
        /// The hub name.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private RelationshipDefinitionResponseResult(
            string? cardinality,

            ImmutableDictionary<string, string>? description,

            ImmutableDictionary<string, string>? displayName,

            string? expiryDateTimeUtc,

            ImmutableArray<Outputs.PropertyDefinitionResponseResult> fields,

            ImmutableArray<Outputs.RelationshipTypeMappingResponseResult> lookupMappings,

            string profileType,

            string provisioningState,

            string relatedProfileType,

            string relationshipGuidId,

            string relationshipName,

            string tenantId)
        {
            Cardinality = cardinality;
            Description = description;
            DisplayName = displayName;
            ExpiryDateTimeUtc = expiryDateTimeUtc;
            Fields = fields;
            LookupMappings = lookupMappings;
            ProfileType = profileType;
            ProvisioningState = provisioningState;
            RelatedProfileType = relatedProfileType;
            RelationshipGuidId = relationshipGuidId;
            RelationshipName = relationshipName;
            TenantId = tenantId;
        }
    }
}
