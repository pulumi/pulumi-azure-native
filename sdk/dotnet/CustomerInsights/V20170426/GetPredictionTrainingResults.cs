// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CustomerInsights.V20170426
{
    public static class GetPredictionTrainingResults
    {
        /// <summary>
        /// The training results of the prediction.
        /// </summary>
        public static Task<GetPredictionTrainingResultsResult> InvokeAsync(GetPredictionTrainingResultsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPredictionTrainingResultsResult>("azure-native:customerinsights/v20170426:getPredictionTrainingResults", args ?? new GetPredictionTrainingResultsArgs(), options.WithDefaults());

        /// <summary>
        /// The training results of the prediction.
        /// </summary>
        public static Output<GetPredictionTrainingResultsResult> Invoke(GetPredictionTrainingResultsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPredictionTrainingResultsResult>("azure-native:customerinsights/v20170426:getPredictionTrainingResults", args ?? new GetPredictionTrainingResultsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPredictionTrainingResultsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the hub.
        /// </summary>
        [Input("hubName", required: true)]
        public string HubName { get; set; } = null!;

        /// <summary>
        /// The name of the Prediction.
        /// </summary>
        [Input("predictionName", required: true)]
        public string PredictionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPredictionTrainingResultsArgs()
        {
        }
    }

    public sealed class GetPredictionTrainingResultsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the hub.
        /// </summary>
        [Input("hubName", required: true)]
        public Input<string> HubName { get; set; } = null!;

        /// <summary>
        /// The name of the Prediction.
        /// </summary>
        [Input("predictionName", required: true)]
        public Input<string> PredictionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPredictionTrainingResultsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPredictionTrainingResultsResult
    {
        /// <summary>
        /// Canonical profiles.
        /// </summary>
        public readonly ImmutableArray<Outputs.CanonicalProfileDefinitionResponse> CanonicalProfiles;
        /// <summary>
        /// Prediction distribution.
        /// </summary>
        public readonly Outputs.PredictionDistributionDefinitionResponse PredictionDistribution;
        /// <summary>
        /// Instance count of the primary profile.
        /// </summary>
        public readonly double PrimaryProfileInstanceCount;
        /// <summary>
        /// Score name.
        /// </summary>
        public readonly string ScoreName;
        /// <summary>
        /// The hub name.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetPredictionTrainingResultsResult(
            ImmutableArray<Outputs.CanonicalProfileDefinitionResponse> canonicalProfiles,

            Outputs.PredictionDistributionDefinitionResponse predictionDistribution,

            double primaryProfileInstanceCount,

            string scoreName,

            string tenantId)
        {
            CanonicalProfiles = canonicalProfiles;
            PredictionDistribution = predictionDistribution;
            PrimaryProfileInstanceCount = primaryProfileInstanceCount;
            ScoreName = scoreName;
            TenantId = tenantId;
        }
    }
}
