// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CustomerInsights.Latest
{
    public static class GetConnectorMapping
    {
        public static Task<GetConnectorMappingResult> InvokeAsync(GetConnectorMappingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConnectorMappingResult>("azure-nextgen:customerinsights/latest:getConnectorMapping", args ?? new GetConnectorMappingArgs(), options.WithVersion());
    }


    public sealed class GetConnectorMappingArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the connector.
        /// </summary>
        [Input("connectorName", required: true)]
        public string ConnectorName { get; set; } = null!;

        /// <summary>
        /// The name of the hub.
        /// </summary>
        [Input("hubName", required: true)]
        public string HubName { get; set; } = null!;

        /// <summary>
        /// The name of the connector mapping.
        /// </summary>
        [Input("mappingName", required: true)]
        public string MappingName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConnectorMappingArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConnectorMappingResult
    {
        /// <summary>
        /// The connector mapping name
        /// </summary>
        public readonly string ConnectorMappingName;
        /// <summary>
        /// The connector name.
        /// </summary>
        public readonly string ConnectorName;
        /// <summary>
        /// Type of connector.
        /// </summary>
        public readonly string? ConnectorType;
        /// <summary>
        /// The created time.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// The DataFormat ID.
        /// </summary>
        public readonly string DataFormatId;
        /// <summary>
        /// The description of the connector mapping.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Display name for the connector mapping.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Defines which entity type the file should map to.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// The mapping entity name.
        /// </summary>
        public readonly string EntityTypeName;
        /// <summary>
        /// The last modified time.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The properties of the mapping.
        /// </summary>
        public readonly Outputs.ConnectorMappingPropertiesResponse MappingProperties;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The next run time based on customer's settings.
        /// </summary>
        public readonly string NextRunTime;
        /// <summary>
        /// The RunId.
        /// </summary>
        public readonly string RunId;
        /// <summary>
        /// State of connector mapping.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The hub name.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConnectorMappingResult(
            string connectorMappingName,

            string connectorName,

            string? connectorType,

            string created,

            string dataFormatId,

            string? description,

            string? displayName,

            string entityType,

            string entityTypeName,

            string lastModified,

            Outputs.ConnectorMappingPropertiesResponse mappingProperties,

            string name,

            string nextRunTime,

            string runId,

            string state,

            string tenantId,

            string type)
        {
            ConnectorMappingName = connectorMappingName;
            ConnectorName = connectorName;
            ConnectorType = connectorType;
            Created = created;
            DataFormatId = dataFormatId;
            Description = description;
            DisplayName = displayName;
            EntityType = entityType;
            EntityTypeName = entityTypeName;
            LastModified = lastModified;
            MappingProperties = mappingProperties;
            Name = name;
            NextRunTime = nextRunTime;
            RunId = runId;
            State = state;
            TenantId = tenantId;
            Type = type;
        }
    }
}
