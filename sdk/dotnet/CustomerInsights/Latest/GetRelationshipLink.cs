// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CustomerInsights.Latest
{
    public static class GetRelationshipLink
    {
        public static Task<GetRelationshipLinkResult> InvokeAsync(GetRelationshipLinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRelationshipLinkResult>("azure-nextgen:customerinsights/latest:getRelationshipLink", args ?? new GetRelationshipLinkArgs(), options.WithVersion());
    }


    public sealed class GetRelationshipLinkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the hub.
        /// </summary>
        [Input("hubName", required: true)]
        public string HubName { get; set; } = null!;

        /// <summary>
        /// The name of the relationship link.
        /// </summary>
        [Input("relationshipLinkName", required: true)]
        public string RelationshipLinkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetRelationshipLinkArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRelationshipLinkResult
    {
        /// <summary>
        /// Localized descriptions for the Relationship Link.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Description;
        /// <summary>
        /// Localized display name for the Relationship Link.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? DisplayName;
        /// <summary>
        /// The InteractionType associated with the Relationship Link.
        /// </summary>
        public readonly string InteractionType;
        /// <summary>
        /// The name of the Relationship Link.
        /// </summary>
        public readonly string LinkName;
        /// <summary>
        /// The mappings between Interaction and Relationship fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.RelationshipLinkFieldMappingResponse> Mappings;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The property references for the Profile of the Relationship.
        /// </summary>
        public readonly ImmutableArray<Outputs.ParticipantProfilePropertyReferenceResponse> ProfilePropertyReferences;
        /// <summary>
        /// Provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The property references for the Related Profile of the Relationship.
        /// </summary>
        public readonly ImmutableArray<Outputs.ParticipantProfilePropertyReferenceResponse> RelatedProfilePropertyReferences;
        /// <summary>
        /// The relationship guid id.
        /// </summary>
        public readonly string RelationshipGuidId;
        /// <summary>
        /// The Relationship associated with the Link.
        /// </summary>
        public readonly string RelationshipName;
        /// <summary>
        /// The hub name.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRelationshipLinkResult(
            ImmutableDictionary<string, string>? description,

            ImmutableDictionary<string, string>? displayName,

            string interactionType,

            string linkName,

            ImmutableArray<Outputs.RelationshipLinkFieldMappingResponse> mappings,

            string name,

            ImmutableArray<Outputs.ParticipantProfilePropertyReferenceResponse> profilePropertyReferences,

            string provisioningState,

            ImmutableArray<Outputs.ParticipantProfilePropertyReferenceResponse> relatedProfilePropertyReferences,

            string relationshipGuidId,

            string relationshipName,

            string tenantId,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            InteractionType = interactionType;
            LinkName = linkName;
            Mappings = mappings;
            Name = name;
            ProfilePropertyReferences = profilePropertyReferences;
            ProvisioningState = provisioningState;
            RelatedProfilePropertyReferences = relatedProfilePropertyReferences;
            RelationshipGuidId = relationshipGuidId;
            RelationshipName = relationshipName;
            TenantId = tenantId;
            Type = type;
        }
    }
}
