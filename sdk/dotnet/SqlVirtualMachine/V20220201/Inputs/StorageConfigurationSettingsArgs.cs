// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SqlVirtualMachine.V20220201.Inputs
{

    /// <summary>
    /// Storage Configurations for SQL Data, Log and TempDb.
    /// </summary>
    public sealed class StorageConfigurationSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disk configuration to apply to SQL Server.
        /// </summary>
        [Input("diskConfigurationType")]
        public InputUnion<string, Pulumi.AzureNative.SqlVirtualMachine.V20220201.DiskConfigurationType>? DiskConfigurationType { get; set; }

        /// <summary>
        /// SQL Server Data Storage Settings.
        /// </summary>
        [Input("sqlDataSettings")]
        public Input<Inputs.SQLStorageSettingsArgs>? SqlDataSettings { get; set; }

        /// <summary>
        /// SQL Server Log Storage Settings.
        /// </summary>
        [Input("sqlLogSettings")]
        public Input<Inputs.SQLStorageSettingsArgs>? SqlLogSettings { get; set; }

        /// <summary>
        /// SQL Server SystemDb Storage on DataPool if true.
        /// </summary>
        [Input("sqlSystemDbOnDataDisk")]
        public Input<bool>? SqlSystemDbOnDataDisk { get; set; }

        /// <summary>
        /// SQL Server TempDb Storage Settings.
        /// </summary>
        [Input("sqlTempDbSettings")]
        public Input<Inputs.SQLTempDbSettingsArgs>? SqlTempDbSettings { get; set; }

        /// <summary>
        /// Storage workload type.
        /// </summary>
        [Input("storageWorkloadType")]
        public InputUnion<string, Pulumi.AzureNative.SqlVirtualMachine.V20220201.StorageWorkloadType>? StorageWorkloadType { get; set; }

        public StorageConfigurationSettingsArgs()
        {
        }
        public static new StorageConfigurationSettingsArgs Empty => new StorageConfigurationSettingsArgs();
    }
}
