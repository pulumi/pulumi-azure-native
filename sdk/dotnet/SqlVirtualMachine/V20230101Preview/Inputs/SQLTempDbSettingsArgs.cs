// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SqlVirtualMachine.V20230101Preview.Inputs
{

    /// <summary>
    /// Set tempDb storage settings for SQL Server.
    /// </summary>
    public sealed class SQLTempDbSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// SQL Server tempdb data file count
        /// </summary>
        [Input("dataFileCount")]
        public Input<int>? DataFileCount { get; set; }

        /// <summary>
        /// SQL Server tempdb data file size
        /// </summary>
        [Input("dataFileSize")]
        public Input<int>? DataFileSize { get; set; }

        /// <summary>
        /// SQL Server tempdb data file autoGrowth size
        /// </summary>
        [Input("dataGrowth")]
        public Input<int>? DataGrowth { get; set; }

        /// <summary>
        /// SQL Server default file path
        /// </summary>
        [Input("defaultFilePath")]
        public Input<string>? DefaultFilePath { get; set; }

        /// <summary>
        /// SQL Server tempdb log file size
        /// </summary>
        [Input("logFileSize")]
        public Input<int>? LogFileSize { get; set; }

        /// <summary>
        /// SQL Server tempdb log file autoGrowth size
        /// </summary>
        [Input("logGrowth")]
        public Input<int>? LogGrowth { get; set; }

        [Input("luns")]
        private InputList<int>? _luns;

        /// <summary>
        /// Logical Unit Numbers for the disks.
        /// </summary>
        public InputList<int> Luns
        {
            get => _luns ?? (_luns = new InputList<int>());
            set => _luns = value;
        }

        /// <summary>
        /// SQL Server tempdb persist folder choice
        /// </summary>
        [Input("persistFolder")]
        public Input<bool>? PersistFolder { get; set; }

        /// <summary>
        /// SQL Server tempdb persist folder location
        /// </summary>
        [Input("persistFolderPath")]
        public Input<string>? PersistFolderPath { get; set; }

        /// <summary>
        /// Use storage pool to build a drive if true or not provided
        /// </summary>
        [Input("useStoragePool")]
        public Input<bool>? UseStoragePool { get; set; }

        public SQLTempDbSettingsArgs()
        {
        }
        public static new SQLTempDbSettingsArgs Empty => new SQLTempDbSettingsArgs();
    }
}
