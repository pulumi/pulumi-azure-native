// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.SqlVirtualMachine.V20170301Preview
{
    /// <summary>
    /// A SQL Server availability group listener.
    /// </summary>
    public partial class AvailabilityGroupListener : Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the availability group.
        /// </summary>
        [Output("availabilityGroupName")]
        public Output<string?> AvailabilityGroupName { get; private set; } = null!;

        /// <summary>
        /// Create a default availability group if it does not exist.
        /// </summary>
        [Output("createDefaultAvailabilityGroupIfNotExist")]
        public Output<bool?> CreateDefaultAvailabilityGroupIfNotExist { get; private set; } = null!;

        /// <summary>
        /// List of load balancer configurations for an availability group listener.
        /// </summary>
        [Output("loadBalancerConfigurations")]
        public Output<ImmutableArray<Outputs.LoadBalancerConfigurationResponse>> LoadBalancerConfigurations { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Listener port.
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// Provisioning state to track the async operation status.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AvailabilityGroupListener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AvailabilityGroupListener(string name, AvailabilityGroupListenerArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener", name, args ?? new AvailabilityGroupListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AvailabilityGroupListener(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AvailabilityGroupListener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AvailabilityGroupListener Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AvailabilityGroupListener(name, id, options);
        }
    }

    public sealed class AvailabilityGroupListenerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the availability group listener.
        /// </summary>
        [Input("availabilityGroupListenerName", required: true)]
        public Input<string> AvailabilityGroupListenerName { get; set; } = null!;

        /// <summary>
        /// Name of the availability group.
        /// </summary>
        [Input("availabilityGroupName")]
        public Input<string>? AvailabilityGroupName { get; set; }

        /// <summary>
        /// Create a default availability group if it does not exist.
        /// </summary>
        [Input("createDefaultAvailabilityGroupIfNotExist")]
        public Input<bool>? CreateDefaultAvailabilityGroupIfNotExist { get; set; }

        [Input("loadBalancerConfigurations")]
        private InputList<Inputs.LoadBalancerConfigurationArgs>? _loadBalancerConfigurations;

        /// <summary>
        /// List of load balancer configurations for an availability group listener.
        /// </summary>
        public InputList<Inputs.LoadBalancerConfigurationArgs> LoadBalancerConfigurations
        {
            get => _loadBalancerConfigurations ?? (_loadBalancerConfigurations = new InputList<Inputs.LoadBalancerConfigurationArgs>());
            set => _loadBalancerConfigurations = value;
        }

        /// <summary>
        /// Listener port.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the SQL virtual machine group.
        /// </summary>
        [Input("sqlVirtualMachineGroupName", required: true)]
        public Input<string> SqlVirtualMachineGroupName { get; set; } = null!;

        public AvailabilityGroupListenerArgs()
        {
        }
    }
}
