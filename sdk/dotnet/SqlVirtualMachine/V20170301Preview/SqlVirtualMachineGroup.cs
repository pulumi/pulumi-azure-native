// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.SqlVirtualMachine.V20170301Preview
{
    /// <summary>
    /// A SQL virtual machine group.
    /// </summary>
    public partial class SqlVirtualMachineGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster type.
        /// </summary>
        [Output("clusterConfiguration")]
        public Output<string> ClusterConfiguration { get; private set; } = null!;

        /// <summary>
        /// Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.
        /// </summary>
        [Output("clusterManagerType")]
        public Output<string> ClusterManagerType { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state to track the async operation status.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Scale type.
        /// </summary>
        [Output("scaleType")]
        public Output<string> ScaleType { get; private set; } = null!;

        /// <summary>
        /// SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.
        /// </summary>
        [Output("sqlImageOffer")]
        public Output<string?> SqlImageOffer { get; private set; } = null!;

        /// <summary>
        /// SQL image sku.
        /// </summary>
        [Output("sqlImageSku")]
        public Output<string?> SqlImageSku { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Cluster Active Directory domain profile.
        /// </summary>
        [Output("wsfcDomainProfile")]
        public Output<Outputs.WsfcDomainProfileResponse?> WsfcDomainProfile { get; private set; } = null!;


        /// <summary>
        /// Create a SqlVirtualMachineGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlVirtualMachineGroup(string name, SqlVirtualMachineGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:sqlvirtualmachine/v20170301preview:SqlVirtualMachineGroup", name, args ?? new SqlVirtualMachineGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlVirtualMachineGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:sqlvirtualmachine/v20170301preview:SqlVirtualMachineGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlVirtualMachineGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlVirtualMachineGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SqlVirtualMachineGroup(name, id, options);
        }
    }

    public sealed class SqlVirtualMachineGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.
        /// </summary>
        [Input("sqlImageOffer")]
        public Input<string>? SqlImageOffer { get; set; }

        /// <summary>
        /// SQL image sku.
        /// </summary>
        [Input("sqlImageSku")]
        public Input<string>? SqlImageSku { get; set; }

        /// <summary>
        /// Name of the SQL virtual machine group.
        /// </summary>
        [Input("sqlVirtualMachineGroupName", required: true)]
        public Input<string> SqlVirtualMachineGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Cluster Active Directory domain profile.
        /// </summary>
        [Input("wsfcDomainProfile")]
        public Input<Inputs.WsfcDomainProfileArgs>? WsfcDomainProfile { get; set; }

        public SqlVirtualMachineGroupArgs()
        {
        }
    }
}
