// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.V20241101.Outputs
{

    /// <summary>
    /// Broker Resource properties
    /// </summary>
    [OutputType]
    public sealed class BrokerPropertiesResponse
    {
        /// <summary>
        /// Advanced settings of Broker.
        /// </summary>
        public readonly Outputs.AdvancedSettingsResponse? Advanced;
        /// <summary>
        /// The cardinality details of the broker.
        /// </summary>
        public readonly Outputs.CardinalityResponse? Cardinality;
        /// <summary>
        /// Spec defines the desired identities of Broker diagnostics settings.
        /// </summary>
        public readonly Outputs.BrokerDiagnosticsResponse? Diagnostics;
        /// <summary>
        /// Settings of Disk Backed Message Buffer.
        /// </summary>
        public readonly Outputs.DiskBackedMessageBufferResponse? DiskBackedMessageBuffer;
        /// <summary>
        /// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
        /// </summary>
        public readonly Outputs.GenerateResourceLimitsResponse? GenerateResourceLimits;
        /// <summary>
        /// Memory profile of Broker.
        /// </summary>
        public readonly string? MemoryProfile;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private BrokerPropertiesResponse(
            Outputs.AdvancedSettingsResponse? advanced,

            Outputs.CardinalityResponse? cardinality,

            Outputs.BrokerDiagnosticsResponse? diagnostics,

            Outputs.DiskBackedMessageBufferResponse? diskBackedMessageBuffer,

            Outputs.GenerateResourceLimitsResponse? generateResourceLimits,

            string? memoryProfile,

            string provisioningState)
        {
            Advanced = advanced;
            Cardinality = cardinality;
            Diagnostics = diagnostics;
            DiskBackedMessageBuffer = diskBackedMessageBuffer;
            GenerateResourceLimits = generateResourceLimits;
            MemoryProfile = memoryProfile;
            ProvisioningState = provisioningState;
        }
    }
}
