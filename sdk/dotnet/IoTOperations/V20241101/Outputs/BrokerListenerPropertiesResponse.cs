// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.V20241101.Outputs
{

    /// <summary>
    /// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
    /// </summary>
    [OutputType]
    public sealed class BrokerListenerPropertiesResponse
    {
        /// <summary>
        /// Ports on which this listener accepts client connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.ListenerPortResponse> Ports;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Kubernetes Service name of this listener.
        /// </summary>
        public readonly string? ServiceName;
        /// <summary>
        /// Kubernetes Service type of this listener.
        /// </summary>
        public readonly string? ServiceType;

        [OutputConstructor]
        private BrokerListenerPropertiesResponse(
            ImmutableArray<Outputs.ListenerPortResponse> ports,

            string provisioningState,

            string? serviceName,

            string? serviceType)
        {
            Ports = ports;
            ProvisioningState = provisioningState;
            ServiceName = serviceName;
            ServiceType = serviceType;
        }
    }
}
