// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.V20241101.Inputs
{

    /// <summary>
    /// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
    /// </summary>
    public sealed class TlsCertMethodArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Option 1 - Automatic TLS server certificate management with cert-manager.
        /// </summary>
        [Input("certManagerCertificateSpec")]
        public Input<Inputs.CertManagerCertificateSpecArgs>? CertManagerCertificateSpec { get; set; }

        /// <summary>
        /// Option 2 - Manual TLS server certificate management through a defined secret.
        /// </summary>
        [Input("manual")]
        public Input<Inputs.X509ManualCertificateArgs>? Manual { get; set; }

        /// <summary>
        /// Mode of TLS server certificate management.
        /// </summary>
        [Input("mode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.IoTOperations.V20241101.TlsCertMethodMode> Mode { get; set; } = null!;

        public TlsCertMethodArgs()
        {
        }
        public static new TlsCertMethodArgs Empty => new TlsCertMethodArgs();
    }
}
