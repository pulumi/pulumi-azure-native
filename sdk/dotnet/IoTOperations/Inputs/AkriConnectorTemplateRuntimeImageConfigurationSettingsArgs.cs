// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.Inputs
{

    /// <summary>
    /// AkriConnectorTemplateRuntimeImageConfiguration properties.
    /// </summary>
    public sealed class AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The image name without any registry reference, tag or digest.
        /// </summary>
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        /// <summary>
        /// The pull policy of the image.
        /// </summary>
        [Input("imagePullPolicy")]
        public InputUnion<string, Pulumi.AzureNative.IoTOperations.AkriConnectorsImagePullPolicy>? ImagePullPolicy { get; set; }

        /// <summary>
        /// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
        /// </summary>
        [Input("registrySettings")]
        public InputUnion<Inputs.AkriConnectorsContainerRegistryArgs, Inputs.AkriConnectorsRegistryEndpointRefArgs>? RegistrySettings { get; set; }

        /// <summary>
        /// The number of replicas to be set up.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Optional image tag or digest. If not specified, the default tag is `latest`.
        /// </summary>
        [Input("tagDigestSettings")]
        public InputUnion<Inputs.AkriConnectorsDigestArgs, Inputs.AkriConnectorsTagArgs>? TagDigestSettings { get; set; }

        public AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs()
        {
        }
        public static new AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs Empty => new AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs();
    }
}
