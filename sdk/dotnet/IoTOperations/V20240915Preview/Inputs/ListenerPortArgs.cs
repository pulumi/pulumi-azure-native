// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.V20240915Preview.Inputs
{

    /// <summary>
    /// Defines a TCP port on which a `BrokerListener` listens.
    /// </summary>
    public sealed class ListenerPortArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Reference to client authentication settings. Omit to disable authentication.
        /// </summary>
        [Input("authenticationRef")]
        public Input<string>? AuthenticationRef { get; set; }

        /// <summary>
        /// Reference to client authorization settings. Omit to disable authorization.
        /// </summary>
        [Input("authorizationRef")]
        public Input<string>? AuthorizationRef { get; set; }

        /// <summary>
        /// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
        /// </summary>
        [Input("nodePort")]
        public Input<int>? NodePort { get; set; }

        /// <summary>
        /// TCP port for accepting client connections.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// Protocol to use for client connections.
        /// </summary>
        [Input("protocol")]
        public InputUnion<string, Pulumi.AzureNative.IoTOperations.V20240915Preview.BrokerProtocolType>? Protocol { get; set; }

        /// <summary>
        /// TLS server certificate settings for this port. Omit to disable TLS.
        /// </summary>
        [Input("tls")]
        public Input<Inputs.TlsCertMethodArgs>? Tls { get; set; }

        public ListenerPortArgs()
        {
            Protocol = "Mqtt";
        }
        public static new ListenerPortArgs Empty => new ListenerPortArgs();
    }
}
