// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.Outputs
{

    /// <summary>
    /// AkriConnectorTemplateRuntimeImageConfiguration properties.
    /// </summary>
    [OutputType]
    public sealed class AkriConnectorTemplateRuntimeImageConfigurationResponse
    {
        /// <summary>
        /// Additional configuration for the image of the managed configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? AdditionalConfiguration;
        /// <summary>
        /// Allocation settings for the managed configuration.
        /// </summary>
        public readonly Outputs.AkriConnectorTemplateBucketizedAllocationResponse? Allocation;
        /// <summary>
        /// The image configuration settings.
        /// </summary>
        public readonly Outputs.AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse ImageConfigurationSettings;
        /// <summary>
        /// Managed configuration types.
        /// Expected value is 'ImageConfiguration'.
        /// </summary>
        public readonly string ManagedConfigurationType;
        /// <summary>
        /// The persistent volume claim templates for the managed configuration.
        /// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
        /// </summary>
        public readonly ImmutableArray<object> PersistentVolumeClaimTemplates;
        /// <summary>
        /// The persistent volume claims for the managed configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.AkriConnectorTemplatePersistentVolumeClaimResponse> PersistentVolumeClaims;
        /// <summary>
        /// Connector secrets that will be mounted onto all connector instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.AkriConnectorsSecretResponse> Secrets;
        /// <summary>
        /// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
        /// </summary>
        public readonly Outputs.AkriConnectorTemplateTrustListResponse? TrustSettings;

        [OutputConstructor]
        private AkriConnectorTemplateRuntimeImageConfigurationResponse(
            ImmutableDictionary<string, string>? additionalConfiguration,

            Outputs.AkriConnectorTemplateBucketizedAllocationResponse? allocation,

            Outputs.AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse imageConfigurationSettings,

            string managedConfigurationType,

            ImmutableArray<object> persistentVolumeClaimTemplates,

            ImmutableArray<Outputs.AkriConnectorTemplatePersistentVolumeClaimResponse> persistentVolumeClaims,

            ImmutableArray<Outputs.AkriConnectorsSecretResponse> secrets,

            Outputs.AkriConnectorTemplateTrustListResponse? trustSettings)
        {
            AdditionalConfiguration = additionalConfiguration;
            Allocation = allocation;
            ImageConfigurationSettings = imageConfigurationSettings;
            ManagedConfigurationType = managedConfigurationType;
            PersistentVolumeClaimTemplates = persistentVolumeClaimTemplates;
            PersistentVolumeClaims = persistentVolumeClaims;
            Secrets = secrets;
            TrustSettings = trustSettings;
        }
    }
}
