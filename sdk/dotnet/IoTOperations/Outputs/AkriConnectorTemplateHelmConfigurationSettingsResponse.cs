// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.Outputs
{

    /// <summary>
    /// AkriConnectorTemplateHelmConfiguration properties.
    /// </summary>
    [OutputType]
    public sealed class AkriConnectorTemplateHelmConfigurationSettingsResponse
    {
        /// <summary>
        /// Advanced configuration for the Helm chart.
        /// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
        /// </summary>
        public readonly Outputs.AkriConnectorTemplateHelmAdvancedConfigurationResponse? AdvancedConfiguration;
        /// <summary>
        /// The registry settings for the helm chart to be used.
        /// </summary>
        public readonly Union<Outputs.AkriConnectorTemplateHelmContainerRegistryResponse, Outputs.AkriConnectorTemplateHelmRegistryEndpointRefResponse>? RegistrySettings;
        /// <summary>
        /// The release name of the Helm chart.
        /// </summary>
        public readonly string ReleaseName;
        /// <summary>
        /// The name of the repository
        /// </summary>
        public readonly string RepositoryName;
        /// <summary>
        /// A map of values to pass to the helm chart.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Values;
        /// <summary>
        /// The version of the Helm chart.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private AkriConnectorTemplateHelmConfigurationSettingsResponse(
            Outputs.AkriConnectorTemplateHelmAdvancedConfigurationResponse? advancedConfiguration,

            Union<Outputs.AkriConnectorTemplateHelmContainerRegistryResponse, Outputs.AkriConnectorTemplateHelmRegistryEndpointRefResponse>? registrySettings,

            string releaseName,

            string repositoryName,

            ImmutableDictionary<string, string>? values,

            string version)
        {
            AdvancedConfiguration = advancedConfiguration;
            RegistrySettings = registrySettings;
            ReleaseName = releaseName;
            RepositoryName = repositoryName;
            Values = values;
            Version = version;
        }
    }
}
