// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperations.V20240815Preview.Inputs
{

    /// <summary>
    /// Broker Diagnostic Trace properties
    /// </summary>
    public sealed class TracesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cache size in megabytes.
        /// </summary>
        [Input("cacheSizeMegabytes")]
        public Input<int>? CacheSizeMegabytes { get; set; }

        /// <summary>
        /// The toggle to enable/disable traces.
        /// </summary>
        [Input("mode")]
        public InputUnion<string, Pulumi.AzureNative.IoTOperations.V20240815Preview.OperationalMode>? Mode { get; set; }

        /// <summary>
        /// The open telemetry export configuration.
        /// </summary>
        [Input("opentelemetryExportConfig")]
        public Input<Inputs.OpenTelemetryExportConfigArgs>? OpentelemetryExportConfig { get; set; }

        /// <summary>
        /// The self tracing properties.
        /// </summary>
        [Input("selfTracing")]
        public Input<Inputs.SelfTracingArgs>? SelfTracing { get; set; }

        /// <summary>
        /// The span channel capacity.
        /// </summary>
        [Input("spanChannelCapacity")]
        public Input<int>? SpanChannelCapacity { get; set; }

        public TracesArgs()
        {
            CacheSizeMegabytes = 16;
            Mode = "Enabled";
            SpanChannelCapacity = 1000;
        }
        public static new TracesArgs Empty => new TracesArgs();
    }
}
