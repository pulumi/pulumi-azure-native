// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Management
{
    public static class GetServiceGroup
    {
        /// <summary>
        /// Get the details of the serviceGroup
        /// 
        /// Uses Azure REST API version 2024-02-01-preview.
        /// </summary>
        public static Task<GetServiceGroupResult> InvokeAsync(GetServiceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceGroupResult>("azure-native:management:getServiceGroup", args ?? new GetServiceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of the serviceGroup
        /// 
        /// Uses Azure REST API version 2024-02-01-preview.
        /// </summary>
        public static Output<GetServiceGroupResult> Invoke(GetServiceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceGroupResult>("azure-native:management:getServiceGroup", args ?? new GetServiceGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of the serviceGroup
        /// 
        /// Uses Azure REST API version 2024-02-01-preview.
        /// </summary>
        public static Output<GetServiceGroupResult> Invoke(GetServiceGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceGroupResult>("azure-native:management:getServiceGroup", args ?? new GetServiceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ServiceGroup Name.
        /// </summary>
        [Input("serviceGroupName", required: true)]
        public string ServiceGroupName { get; set; } = null!;

        public GetServiceGroupArgs()
        {
        }
        public static new GetServiceGroupArgs Empty => new GetServiceGroupArgs();
    }

    public sealed class GetServiceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ServiceGroup Name.
        /// </summary>
        [Input("serviceGroupName", required: true)]
        public Input<string> ServiceGroupName { get; set; } = null!;

        public GetServiceGroupInvokeArgs()
        {
        }
        public static new GetServiceGroupInvokeArgs Empty => new GetServiceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceGroupResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the serviceGroup.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ServiceGroup creation request body parameters.
        /// </summary>
        public readonly Outputs.ServiceGroupPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The serviceGroup tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServiceGroupResult(
            string azureApiVersion,

            string id,

            string? kind,

            string name,

            Outputs.ServiceGroupPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Kind = kind;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
