// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Management.Latest
{
    /// <summary>
    /// Settings defined at the Management Group scope.
    /// </summary>
    public partial class HierarchySetting : Pulumi.CustomResource
    {
        /// <summary>
        /// Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
        /// </summary>
        [Output("defaultManagementGroup")]
        public Output<string?> DefaultManagementGroup { get; private set; } = null!;

        /// <summary>
        /// The name of the object. In this case, default.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
        /// </summary>
        [Output("requireAuthorizationForGroupCreation")]
        public Output<bool?> RequireAuthorizationForGroupCreation { get; private set; } = null!;

        /// <summary>
        /// The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
        /// </summary>
        [Output("tenantId")]
        public Output<string?> TenantId { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.  For example, Microsoft.Management/managementGroups/settings.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a HierarchySetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HierarchySetting(string name, HierarchySettingArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:management/latest:HierarchySetting", name, args ?? new HierarchySettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HierarchySetting(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:management/latest:HierarchySetting", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:management/v20200201:HierarchySetting"},
                    new Pulumi.Alias { Type = "azure-nextgen:management/v20200501:HierarchySetting"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HierarchySetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HierarchySetting Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HierarchySetting(name, id, options);
        }
    }

    public sealed class HierarchySettingArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
        /// </summary>
        [Input("defaultManagementGroup")]
        public Input<string>? DefaultManagementGroup { get; set; }

        /// <summary>
        /// Management Group ID.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
        /// </summary>
        [Input("requireAuthorizationForGroupCreation")]
        public Input<bool>? RequireAuthorizationForGroupCreation { get; set; }

        public HierarchySettingArgs()
        {
        }
    }
}
