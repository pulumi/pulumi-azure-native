// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StandbyPool
{
    public static class GetStandbyVirtualMachinePool
    {
        /// <summary>
        /// Get a StandbyVirtualMachinePoolResource
        /// Azure REST API version: 2023-12-01-preview.
        /// 
        /// Other available API versions: 2024-03-01, 2024-03-01-preview.
        /// </summary>
        public static Task<GetStandbyVirtualMachinePoolResult> InvokeAsync(GetStandbyVirtualMachinePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStandbyVirtualMachinePoolResult>("azure-native:standbypool:getStandbyVirtualMachinePool", args ?? new GetStandbyVirtualMachinePoolArgs(), options.WithDefaults());

        /// <summary>
        /// Get a StandbyVirtualMachinePoolResource
        /// Azure REST API version: 2023-12-01-preview.
        /// 
        /// Other available API versions: 2024-03-01, 2024-03-01-preview.
        /// </summary>
        public static Output<GetStandbyVirtualMachinePoolResult> Invoke(GetStandbyVirtualMachinePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStandbyVirtualMachinePoolResult>("azure-native:standbypool:getStandbyVirtualMachinePool", args ?? new GetStandbyVirtualMachinePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStandbyVirtualMachinePoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the standby virtual machine pool
        /// </summary>
        [Input("standbyVirtualMachinePoolName", required: true)]
        public string StandbyVirtualMachinePoolName { get; set; } = null!;

        public GetStandbyVirtualMachinePoolArgs()
        {
        }
        public static new GetStandbyVirtualMachinePoolArgs Empty => new GetStandbyVirtualMachinePoolArgs();
    }

    public sealed class GetStandbyVirtualMachinePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the standby virtual machine pool
        /// </summary>
        [Input("standbyVirtualMachinePoolName", required: true)]
        public Input<string> StandbyVirtualMachinePoolName { get; set; } = null!;

        public GetStandbyVirtualMachinePoolInvokeArgs()
        {
        }
        public static new GetStandbyVirtualMachinePoolInvokeArgs Empty => new GetStandbyVirtualMachinePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetStandbyVirtualMachinePoolResult
    {
        /// <summary>
        /// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
        /// </summary>
        public readonly string? AttachedVirtualMachineScaleSetId;
        /// <summary>
        /// Specifies the elasticity profile of the standby virtual machine pools.
        /// </summary>
        public readonly Outputs.StandbyVirtualMachinePoolElasticityProfileResponse? ElasticityProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the desired state of virtual machines in the pool.
        /// </summary>
        public readonly string VirtualMachineState;

        [OutputConstructor]
        private GetStandbyVirtualMachinePoolResult(
            string? attachedVirtualMachineScaleSetId,

            Outputs.StandbyVirtualMachinePoolElasticityProfileResponse? elasticityProfile,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string virtualMachineState)
        {
            AttachedVirtualMachineScaleSetId = attachedVirtualMachineScaleSetId;
            ElasticityProfile = elasticityProfile;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualMachineState = virtualMachineState;
        }
    }
}
