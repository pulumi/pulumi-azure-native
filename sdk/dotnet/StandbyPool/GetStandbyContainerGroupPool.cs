// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StandbyPool
{
    public static class GetStandbyContainerGroupPool
    {
        /// <summary>
        /// Get a StandbyContainerGroupPoolResource
        /// Azure REST API version: 2023-12-01-preview.
        /// 
        /// Other available API versions: 2024-03-01, 2024-03-01-preview.
        /// </summary>
        public static Task<GetStandbyContainerGroupPoolResult> InvokeAsync(GetStandbyContainerGroupPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStandbyContainerGroupPoolResult>("azure-native:standbypool:getStandbyContainerGroupPool", args ?? new GetStandbyContainerGroupPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Get a StandbyContainerGroupPoolResource
        /// Azure REST API version: 2023-12-01-preview.
        /// 
        /// Other available API versions: 2024-03-01, 2024-03-01-preview.
        /// </summary>
        public static Output<GetStandbyContainerGroupPoolResult> Invoke(GetStandbyContainerGroupPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStandbyContainerGroupPoolResult>("azure-native:standbypool:getStandbyContainerGroupPool", args ?? new GetStandbyContainerGroupPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStandbyContainerGroupPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the standby container group pool
        /// </summary>
        [Input("standbyContainerGroupPoolName", required: true)]
        public string StandbyContainerGroupPoolName { get; set; } = null!;

        public GetStandbyContainerGroupPoolArgs()
        {
        }
        public static new GetStandbyContainerGroupPoolArgs Empty => new GetStandbyContainerGroupPoolArgs();
    }

    public sealed class GetStandbyContainerGroupPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the standby container group pool
        /// </summary>
        [Input("standbyContainerGroupPoolName", required: true)]
        public Input<string> StandbyContainerGroupPoolName { get; set; } = null!;

        public GetStandbyContainerGroupPoolInvokeArgs()
        {
        }
        public static new GetStandbyContainerGroupPoolInvokeArgs Empty => new GetStandbyContainerGroupPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetStandbyContainerGroupPoolResult
    {
        /// <summary>
        /// Specifies container group properties of standby container group pools.
        /// </summary>
        public readonly Outputs.ContainerGroupPropertiesResponse ContainerGroupProperties;
        /// <summary>
        /// Specifies elasticity profile of standby container group pools.
        /// </summary>
        public readonly Outputs.StandbyContainerGroupPoolElasticityProfileResponse ElasticityProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStandbyContainerGroupPoolResult(
            Outputs.ContainerGroupPropertiesResponse containerGroupProperties,

            Outputs.StandbyContainerGroupPoolElasticityProfileResponse elasticityProfile,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ContainerGroupProperties = containerGroupProperties;
            ElasticityProfile = elasticityProfile;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
