// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Insights.Latest.Outputs
{

    [OutputType]
    public sealed class MetricCriteriaResponseResult
    {
        /// <summary>
        /// Specifies the type of threshold criteria
        /// </summary>
        public readonly string CriterionType;
        /// <summary>
        /// List of dimension conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricDimensionResponseResult> Dimensions;
        /// <summary>
        /// Name of the metric.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// Namespace of the metric.
        /// </summary>
        public readonly string? MetricNamespace;
        /// <summary>
        /// Name of the criteria.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// the criteria operator.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// the criteria threshold value that activates the alert.
        /// </summary>
        public readonly double Threshold;
        /// <summary>
        /// the criteria time aggregation types.
        /// </summary>
        public readonly ImmutableDictionary<string, object> TimeAggregation;

        [OutputConstructor]
        private MetricCriteriaResponseResult(
            string criterionType,

            ImmutableArray<Outputs.MetricDimensionResponseResult> dimensions,

            string metricName,

            string? metricNamespace,

            string name,

            string @operator,

            double threshold,

            ImmutableDictionary<string, object> timeAggregation)
        {
            CriterionType = criterionType;
            Dimensions = dimensions;
            MetricName = metricName;
            MetricNamespace = metricNamespace;
            Name = name;
            Operator = @operator;
            Threshold = threshold;
            TimeAggregation = timeAggregation;
        }
    }
}
