// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.Latest
{
    /// <summary>
    /// Properties that define a favorite that is associated to an Application Insights component.
    /// </summary>
    public partial class Favorite : Pulumi.CustomResource
    {
        /// <summary>
        /// Favorite category, as defined by the user at creation time.
        /// </summary>
        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        /// <summary>
        /// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
        /// </summary>
        [Output("config")]
        public Output<string?> Config { get; private set; } = null!;

        /// <summary>
        /// Internally assigned unique id of the favorite definition.
        /// </summary>
        [Output("favoriteId")]
        public Output<string> FavoriteId { get; private set; } = null!;

        /// <summary>
        /// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
        /// </summary>
        [Output("favoriteType")]
        public Output<string?> FavoriteType { get; private set; } = null!;

        /// <summary>
        /// Flag denoting wether or not this favorite was generated from a template.
        /// </summary>
        [Output("isGeneratedFromTemplate")]
        public Output<bool?> IsGeneratedFromTemplate { get; private set; } = null!;

        /// <summary>
        /// The user-defined name of the favorite.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The source of the favorite definition.
        /// </summary>
        [Output("sourceType")]
        public Output<string?> SourceType { get; private set; } = null!;

        /// <summary>
        /// A list of 0 or more tags that are associated with this favorite definition
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Date and time in UTC of the last modification that was made to this favorite definition.
        /// </summary>
        [Output("timeModified")]
        public Output<string> TimeModified { get; private set; } = null!;

        /// <summary>
        /// Unique user id of the specific user that owns this favorite.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        /// <summary>
        /// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Favorite resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Favorite(string name, FavoriteArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/latest:Favorite", name, args ?? new FavoriteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Favorite(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/latest:Favorite", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:insights/v20150501:Favorite"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Favorite resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Favorite Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Favorite(name, id, options);
        }
    }

    public sealed class FavoriteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Favorite category, as defined by the user at creation time.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// The Id of a specific favorite defined in the Application Insights component
        /// </summary>
        [Input("favoriteId", required: true)]
        public Input<string> FavoriteId { get; set; } = null!;

        /// <summary>
        /// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
        /// </summary>
        [Input("favoriteType")]
        public Input<string>? FavoriteType { get; set; }

        /// <summary>
        /// Flag denoting wether or not this favorite was generated from a template.
        /// </summary>
        [Input("isGeneratedFromTemplate")]
        public Input<bool>? IsGeneratedFromTemplate { get; set; }

        /// <summary>
        /// The user-defined name of the favorite.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Application Insights component resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The source of the favorite definition.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of 0 or more tags that are associated with this favorite definition
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FavoriteArgs()
        {
        }
    }
}
