// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Insights
{
    public static class GetWebtest
    {
        public static Task<GetWebtestResult> InvokeAsync(GetWebtestArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWebtestResult>("azurerm:insights:getWebtest", args ?? new GetWebtestArgs(), options.WithVersion());
    }


    public sealed class GetWebtestArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Application Insights webtest resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetWebtestArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWebtestResult
    {
        /// <summary>
        /// The kind of web test that this web test watches. Choices are ping and multistep.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Metadata describing a web test for an Azure resource.
        /// </summary>
        public readonly Outputs.WebTestPropertiesResponseResult Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWebtestResult(
            string? kind,

            string location,

            string name,

            Outputs.WebTestPropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
