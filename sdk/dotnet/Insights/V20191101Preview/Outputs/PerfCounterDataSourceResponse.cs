// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20191101Preview.Outputs
{

    [OutputType]
    public sealed class PerfCounterDataSourceResponse
    {
        /// <summary>
        /// A list of specifier names of the performance counters you want to collect.
        /// Use a wildcard (*) to collect a counter for all instances.
        /// To get a list of performance counters on Windows, run the command 'typeperf'.
        /// </summary>
        public readonly ImmutableArray<string> CounterSpecifiers;
        /// <summary>
        /// A friendly name for the data source. 
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of seconds between consecutive counter measurements (samples).
        /// </summary>
        public readonly int SamplingFrequencyInSeconds;
        /// <summary>
        /// The interval between data uploads (scheduled transfers), rounded up to the nearest minute.
        /// </summary>
        public readonly string ScheduledTransferPeriod;
        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to.
        /// </summary>
        public readonly ImmutableArray<string> Streams;

        [OutputConstructor]
        private PerfCounterDataSourceResponse(
            ImmutableArray<string> counterSpecifiers,

            string name,

            int samplingFrequencyInSeconds,

            string scheduledTransferPeriod,

            ImmutableArray<string> streams)
        {
            CounterSpecifiers = counterSpecifiers;
            Name = name;
            SamplingFrequencyInSeconds = samplingFrequencyInSeconds;
            ScheduledTransferPeriod = scheduledTransferPeriod;
            Streams = streams;
        }
    }
}
