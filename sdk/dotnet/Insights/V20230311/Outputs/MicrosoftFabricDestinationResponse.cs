// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20230311.Outputs
{

    /// <summary>
    /// Microsoft Fabric destination (non-Azure).
    /// </summary>
    [OutputType]
    public sealed class MicrosoftFabricDestinationResponse
    {
        /// <summary>
        /// The artifact id of the Microsoft Fabric resource.
        /// </summary>
        public readonly string? ArtifactId;
        /// <summary>
        /// The name of the database to which data will be ingested.
        /// </summary>
        public readonly string? DatabaseName;
        /// <summary>
        /// The ingestion uri of the Microsoft Fabric resource.
        /// </summary>
        public readonly string? IngestionUri;
        /// <summary>
        /// A friendly name for the destination. 
        /// This name should be unique across all destinations (regardless of type) within the data collection rule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The tenant id of the Microsoft Fabric resource.
        /// </summary>
        public readonly string? TenantId;

        [OutputConstructor]
        private MicrosoftFabricDestinationResponse(
            string? artifactId,

            string? databaseName,

            string? ingestionUri,

            string? name,

            string? tenantId)
        {
            ArtifactId = artifactId;
            DatabaseName = databaseName;
            IngestionUri = ingestionUri;
            Name = name;
            TenantId = tenantId;
        }
    }
}
