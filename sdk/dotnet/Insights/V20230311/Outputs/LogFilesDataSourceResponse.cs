// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20230311.Outputs
{

    /// <summary>
    /// Definition of which custom log files will be collected by this data collection rule
    /// </summary>
    [OutputType]
    public sealed class LogFilesDataSourceResponse
    {
        /// <summary>
        /// File Patterns where the log files are located
        /// </summary>
        public readonly ImmutableArray<string> FilePatterns;
        /// <summary>
        /// The data format of the log files
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The log files specific settings.
        /// </summary>
        public readonly Outputs.LogFilesDataSourceResponseSettings? Settings;
        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data source
        /// </summary>
        public readonly ImmutableArray<string> Streams;
        /// <summary>
        /// The KQL query to transform the data source.
        /// </summary>
        public readonly string? TransformKql;

        [OutputConstructor]
        private LogFilesDataSourceResponse(
            ImmutableArray<string> filePatterns,

            string format,

            string? name,

            Outputs.LogFilesDataSourceResponseSettings? settings,

            ImmutableArray<string> streams,

            string? transformKql)
        {
            FilePatterns = filePatterns;
            Format = format;
            Name = name;
            Settings = settings;
            Streams = streams;
            TransformKql = transformKql;
        }
    }
}
