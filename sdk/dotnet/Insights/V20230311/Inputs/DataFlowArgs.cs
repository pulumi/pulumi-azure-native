// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20230311.Inputs
{

    /// <summary>
    /// Definition of which streams are sent to which destinations.
    /// </summary>
    public sealed class DataFlowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The builtIn transform to transform stream data
        /// </summary>
        [Input("builtInTransform")]
        public Input<string>? BuiltInTransform { get; set; }

        /// <summary>
        /// Flag to enable overflow column in LA destinations
        /// </summary>
        [Input("captureOverflow")]
        public Input<bool>? CaptureOverflow { get; set; }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// List of destinations for this data flow.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// The output stream of the transform. Only required if the transform changes data to a different stream.
        /// </summary>
        [Input("outputStream")]
        public Input<string>? OutputStream { get; set; }

        [Input("streams")]
        private InputList<Union<string, Pulumi.AzureNative.Insights.V20230311.KnownDataFlowStreams>>? _streams;

        /// <summary>
        /// List of streams for this data flow.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Insights.V20230311.KnownDataFlowStreams>> Streams
        {
            get => _streams ?? (_streams = new InputList<Union<string, Pulumi.AzureNative.Insights.V20230311.KnownDataFlowStreams>>());
            set => _streams = value;
        }

        /// <summary>
        /// The KQL query to transform stream data.
        /// </summary>
        [Input("transformKql")]
        public Input<string>? TransformKql { get; set; }

        public DataFlowArgs()
        {
        }
        public static new DataFlowArgs Empty => new DataFlowArgs();
    }
}
