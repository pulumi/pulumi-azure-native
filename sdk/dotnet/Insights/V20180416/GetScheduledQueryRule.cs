// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20180416
{
    public static class GetScheduledQueryRule
    {
        public static Task<GetScheduledQueryRuleResult> InvokeAsync(GetScheduledQueryRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScheduledQueryRuleResult>("azure-nextgen:insights/v20180416:getScheduledQueryRule", args ?? new GetScheduledQueryRuleArgs(), options.WithVersion());
    }


    public sealed class GetScheduledQueryRuleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetScheduledQueryRuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScheduledQueryRuleResult
    {
        /// <summary>
        /// Action needs to be taken on rule execution.
        /// </summary>
        public readonly Union<Outputs.AlertingActionResponse, Outputs.LogToMetricActionResponse> Action;
        /// <summary>
        /// The api-version used when creating this alert rule
        /// </summary>
        public readonly string CreatedWithApiVersion;
        /// <summary>
        /// The description of the Log Search rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the alert rule
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The flag which indicates whether the Log Search rule is enabled. Value should be true or false
        /// </summary>
        public readonly string? Enabled;
        /// <summary>
        /// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// True if alert rule is legacy Log Analytic rule
        /// </summary>
        public readonly bool IsLegacyLogAnalyticsRule;
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Last time the rule was updated in IS08601 format.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the scheduled query rule
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
        /// </summary>
        public readonly Outputs.ScheduleResponse? Schedule;
        /// <summary>
        /// Data Source against which rule will Query Data
        /// </summary>
        public readonly Outputs.SourceResponse Source;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScheduledQueryRuleResult(
            Union<Outputs.AlertingActionResponse, Outputs.LogToMetricActionResponse> action,

            string createdWithApiVersion,

            string? description,

            string? displayName,

            string? enabled,

            string etag,

            string id,

            bool isLegacyLogAnalyticsRule,

            string kind,

            string lastUpdatedTime,

            string location,

            string name,

            string provisioningState,

            Outputs.ScheduleResponse? schedule,

            Outputs.SourceResponse source,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Action = action;
            CreatedWithApiVersion = createdWithApiVersion;
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            Etag = etag;
            Id = id;
            IsLegacyLogAnalyticsRule = isLegacyLogAnalyticsRule;
            Kind = kind;
            LastUpdatedTime = lastUpdatedTime;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Schedule = schedule;
            Source = source;
            Tags = tags;
            Type = type;
        }
    }
}
