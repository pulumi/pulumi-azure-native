// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20230501Preview
{
    public static class GetTenantActionGroup
    {
        /// <summary>
        /// Get a tenant action group.
        /// </summary>
        public static Task<GetTenantActionGroupResult> InvokeAsync(GetTenantActionGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTenantActionGroupResult>("azure-native:insights/v20230501preview:getTenantActionGroup", args ?? new GetTenantActionGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get a tenant action group.
        /// </summary>
        public static Output<GetTenantActionGroupResult> Invoke(GetTenantActionGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTenantActionGroupResult>("azure-native:insights/v20230501preview:getTenantActionGroup", args ?? new GetTenantActionGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTenantActionGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The management group id.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public string ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The name of the action group.
        /// </summary>
        [Input("tenantActionGroupName", required: true)]
        public string TenantActionGroupName { get; set; } = null!;

        public GetTenantActionGroupArgs()
        {
        }
        public static new GetTenantActionGroupArgs Empty => new GetTenantActionGroupArgs();
    }

    public sealed class GetTenantActionGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The management group id.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The name of the action group.
        /// </summary>
        [Input("tenantActionGroupName", required: true)]
        public Input<string> TenantActionGroupName { get; set; } = null!;

        public GetTenantActionGroupInvokeArgs()
        {
        }
        public static new GetTenantActionGroupInvokeArgs Empty => new GetTenantActionGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetTenantActionGroupResult
    {
        /// <summary>
        /// The list of AzureAppPush receivers that are part of this tenant action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.AzureAppPushReceiverResponse> AzureAppPushReceivers;
        /// <summary>
        /// The list of email receivers that are part of this tenant action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.EmailReceiverResponse> EmailReceivers;
        /// <summary>
        /// Indicates whether this tenant action group is enabled. If a tenant action group is not enabled, then none of its receivers will receive communications.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        public readonly string GroupShortName;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of SMS receivers that are part of this tenant action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SmsReceiverResponse> SmsReceivers;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The list of voice receivers that are part of this tenant action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.VoiceReceiverResponse> VoiceReceivers;
        /// <summary>
        /// The list of webhook receivers that are part of this tenant action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebhookReceiverResponse> WebhookReceivers;

        [OutputConstructor]
        private GetTenantActionGroupResult(
            ImmutableArray<Outputs.AzureAppPushReceiverResponse> azureAppPushReceivers,

            ImmutableArray<Outputs.EmailReceiverResponse> emailReceivers,

            bool enabled,

            string groupShortName,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.SmsReceiverResponse> smsReceivers,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.VoiceReceiverResponse> voiceReceivers,

            ImmutableArray<Outputs.WebhookReceiverResponse> webhookReceivers)
        {
            AzureAppPushReceivers = azureAppPushReceivers;
            EmailReceivers = emailReceivers;
            Enabled = enabled;
            GroupShortName = groupShortName;
            Id = id;
            Location = location;
            Name = name;
            SmsReceivers = smsReceivers;
            Tags = tags;
            Type = type;
            VoiceReceivers = voiceReceivers;
            WebhookReceivers = webhookReceivers;
        }
    }
}
