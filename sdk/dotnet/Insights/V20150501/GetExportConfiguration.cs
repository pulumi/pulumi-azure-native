// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20150501
{
    public static class GetExportConfiguration
    {
        public static Task<GetExportConfigurationResult> InvokeAsync(GetExportConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExportConfigurationResult>("azure-nextgen:insights/v20150501:getExportConfiguration", args ?? new GetExportConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetExportConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Continuous Export configuration ID. This is unique within a Application Insights component.
        /// </summary>
        [Input("exportId", required: true)]
        public string ExportId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Application Insights component resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetExportConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExportConfigurationResult
    {
        /// <summary>
        /// The name of the Application Insights component.
        /// </summary>
        public readonly string ApplicationName;
        /// <summary>
        /// The name of the destination storage container.
        /// </summary>
        public readonly string ContainerName;
        /// <summary>
        /// The name of destination account.
        /// </summary>
        public readonly string DestinationAccountId;
        /// <summary>
        /// The destination account location ID.
        /// </summary>
        public readonly string DestinationStorageLocationId;
        /// <summary>
        /// The destination storage account subscription ID.
        /// </summary>
        public readonly string DestinationStorageSubscriptionId;
        /// <summary>
        /// The destination type.
        /// </summary>
        public readonly string DestinationType;
        /// <summary>
        /// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
        /// </summary>
        public readonly string ExportId;
        /// <summary>
        /// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
        /// </summary>
        public readonly string ExportStatus;
        /// <summary>
        /// The instrumentation key of the Application Insights component.
        /// </summary>
        public readonly string InstrumentationKey;
        /// <summary>
        /// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
        /// </summary>
        public readonly string IsUserEnabled;
        /// <summary>
        /// The last time the Continuous Export configuration started failing.
        /// </summary>
        public readonly string LastGapTime;
        /// <summary>
        /// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
        /// </summary>
        public readonly string LastSuccessTime;
        /// <summary>
        /// Last time the Continuous Export configuration was updated.
        /// </summary>
        public readonly string LastUserUpdate;
        /// <summary>
        /// Deprecated
        /// </summary>
        public readonly string? NotificationQueueEnabled;
        /// <summary>
        /// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
        /// </summary>
        public readonly string PermanentErrorReason;
        /// <summary>
        /// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        public readonly string? RecordTypes;
        /// <summary>
        /// The resource group of the Application Insights component.
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// The name of the destination storage account.
        /// </summary>
        public readonly string StorageName;
        /// <summary>
        /// The subscription of the Application Insights component.
        /// </summary>
        public readonly string SubscriptionId;

        [OutputConstructor]
        private GetExportConfigurationResult(
            string applicationName,

            string containerName,

            string destinationAccountId,

            string destinationStorageLocationId,

            string destinationStorageSubscriptionId,

            string destinationType,

            string exportId,

            string exportStatus,

            string instrumentationKey,

            string isUserEnabled,

            string lastGapTime,

            string lastSuccessTime,

            string lastUserUpdate,

            string? notificationQueueEnabled,

            string permanentErrorReason,

            string? recordTypes,

            string resourceGroup,

            string storageName,

            string subscriptionId)
        {
            ApplicationName = applicationName;
            ContainerName = containerName;
            DestinationAccountId = destinationAccountId;
            DestinationStorageLocationId = destinationStorageLocationId;
            DestinationStorageSubscriptionId = destinationStorageSubscriptionId;
            DestinationType = destinationType;
            ExportId = exportId;
            ExportStatus = exportStatus;
            InstrumentationKey = instrumentationKey;
            IsUserEnabled = isUserEnabled;
            LastGapTime = lastGapTime;
            LastSuccessTime = lastSuccessTime;
            LastUserUpdate = lastUserUpdate;
            NotificationQueueEnabled = notificationQueueEnabled;
            PermanentErrorReason = permanentErrorReason;
            RecordTypes = recordTypes;
            ResourceGroup = resourceGroup;
            StorageName = storageName;
            SubscriptionId = subscriptionId;
        }
    }
}
