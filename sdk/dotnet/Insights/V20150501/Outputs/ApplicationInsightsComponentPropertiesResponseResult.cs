// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Insights.V20150501.Outputs
{

    [OutputType]
    public sealed class ApplicationInsightsComponentPropertiesResponseResult
    {
        /// <summary>
        /// Application Insights Unique ID for your Application.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
        /// </summary>
        public readonly string ApplicationId;
        /// <summary>
        /// Type of application being monitored.
        /// </summary>
        public readonly string Application_Type;
        /// <summary>
        /// Application Insights component connection string.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// Creation Date for the Application Insights component, in ISO 8601 format.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// Disable IP masking.
        /// </summary>
        public readonly bool? DisableIpMasking;
        /// <summary>
        /// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
        /// </summary>
        public readonly string? Flow_Type;
        /// <summary>
        /// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
        /// </summary>
        public readonly string? HockeyAppId;
        /// <summary>
        /// Token used to authenticate communications with between Application Insights and HockeyApp.
        /// </summary>
        public readonly string HockeyAppToken;
        /// <summary>
        /// Purge data immediately after 30 days.
        /// </summary>
        public readonly bool? ImmediatePurgeDataOn30Days;
        /// <summary>
        /// Indicates the flow of the ingestion.
        /// </summary>
        public readonly string? IngestionMode;
        /// <summary>
        /// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
        /// </summary>
        public readonly string InstrumentationKey;
        /// <summary>
        /// List of linked private link scope resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkScopedResourceResponseResult> PrivateLinkScopedResources;
        /// <summary>
        /// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
        /// </summary>
        public readonly string? Request_Source;
        /// <summary>
        /// Retention period in days.
        /// </summary>
        public readonly int? RetentionInDays;
        /// <summary>
        /// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
        /// </summary>
        public readonly double? SamplingPercentage;
        /// <summary>
        /// Azure Tenant Id.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private ApplicationInsightsComponentPropertiesResponseResult(
            string AppId,

            string ApplicationId,

            string Application_Type,

            string ConnectionString,

            string CreationDate,

            bool? DisableIpMasking,

            string? Flow_Type,

            string? HockeyAppId,

            string HockeyAppToken,

            bool? ImmediatePurgeDataOn30Days,

            string? IngestionMode,

            string InstrumentationKey,

            ImmutableArray<Outputs.PrivateLinkScopedResourceResponseResult> PrivateLinkScopedResources,

            string? Request_Source,

            int? RetentionInDays,

            double? SamplingPercentage,

            string TenantId,

            string provisioningState)
        {
            this.AppId = AppId;
            this.ApplicationId = ApplicationId;
            this.Application_Type = Application_Type;
            this.ConnectionString = ConnectionString;
            this.CreationDate = CreationDate;
            this.DisableIpMasking = DisableIpMasking;
            this.Flow_Type = Flow_Type;
            this.HockeyAppId = HockeyAppId;
            this.HockeyAppToken = HockeyAppToken;
            this.ImmediatePurgeDataOn30Days = ImmediatePurgeDataOn30Days;
            this.IngestionMode = IngestionMode;
            this.InstrumentationKey = InstrumentationKey;
            this.PrivateLinkScopedResources = PrivateLinkScopedResources;
            this.Request_Source = Request_Source;
            this.RetentionInDays = RetentionInDays;
            this.SamplingPercentage = SamplingPercentage;
            this.TenantId = TenantId;
            ProvisioningState = provisioningState;
        }
    }
}
