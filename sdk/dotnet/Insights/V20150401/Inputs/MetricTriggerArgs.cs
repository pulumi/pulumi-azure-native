// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20150401.Inputs
{

    /// <summary>
    /// The trigger that results in a scaling action.
    /// </summary>
    public sealed class MetricTriggerArgs : Pulumi.ResourceArgs
    {
        [Input("dimensions")]
        private InputList<Inputs.ScaleRuleMetricDimensionArgs>? _dimensions;

        /// <summary>
        /// List of dimension conditions. For example: [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].
        /// </summary>
        public InputList<Inputs.ScaleRuleMetricDimensionArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<Inputs.ScaleRuleMetricDimensionArgs>());
            set => _dimensions = value;
        }

        /// <summary>
        /// the name of the metric that defines what the rule monitors.
        /// </summary>
        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        /// <summary>
        /// the namespace of the metric that defines what the rule monitors.
        /// </summary>
        [Input("metricNamespace")]
        public Input<string>? MetricNamespace { get; set; }

        /// <summary>
        /// the resource identifier of the resource the rule monitors.
        /// </summary>
        [Input("metricResourceUri", required: true)]
        public Input<string> MetricResourceUri { get; set; } = null!;

        /// <summary>
        /// the operator that is used to compare the metric data and the threshold.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// the metric statistic type. How the metrics from multiple instances are combined.
        /// </summary>
        [Input("statistic", required: true)]
        public Input<string> Statistic { get; set; } = null!;

        /// <summary>
        /// the threshold of the metric that triggers the scale action.
        /// </summary>
        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        /// <summary>
        /// time aggregation type. How the data that is collected should be combined over time. The default value is Average.
        /// </summary>
        [Input("timeAggregation", required: true)]
        public Input<string> TimeAggregation { get; set; } = null!;

        /// <summary>
        /// the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute.
        /// </summary>
        [Input("timeGrain", required: true)]
        public Input<string> TimeGrain { get; set; } = null!;

        /// <summary>
        /// the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.
        /// </summary>
        [Input("timeWindow", required: true)]
        public Input<string> TimeWindow { get; set; } = null!;

        public MetricTriggerArgs()
        {
        }
    }
}
