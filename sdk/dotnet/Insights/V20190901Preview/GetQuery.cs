// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20190901Preview
{
    public static class GetQuery
    {
        public static Task<GetQueryResult> InvokeAsync(GetQueryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetQueryResult>("azure-nextgen:insights/v20190901preview:getQuery", args ?? new GetQueryArgs(), options.WithVersion());
    }


    public sealed class GetQueryArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of a specific query defined in the Log Analytics QueryPack
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the Log Analytics QueryPack resource.
        /// </summary>
        [Input("queryPackName", required: true)]
        public string QueryPackName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetQueryArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetQueryResult
    {
        /// <summary>
        /// Object Id of user creating the query.
        /// </summary>
        public readonly string Author;
        /// <summary>
        /// Body of the query.
        /// </summary>
        public readonly string Body;
        /// <summary>
        /// Description of the query.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Unique display name for your query within the Query Pack.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Additional properties that can be set for the query.
        /// </summary>
        public readonly object Properties;
        /// <summary>
        /// The related metadata items for the function.
        /// </summary>
        public readonly Outputs.LogAnalyticsQueryPackQueryPropertiesResponseRelated? Related;
        /// <summary>
        /// Read only system data
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Tags associated with the query.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<string>>? Tags;
        /// <summary>
        /// Creation Date for the Log Analytics Query, in ISO 8601 format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Last modified date of the Log Analytics Query, in ISO 8601 format.
        /// </summary>
        public readonly string TimeModified;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetQueryResult(
            string author,

            string body,

            string? description,

            string displayName,

            string name,

            object properties,

            Outputs.LogAnalyticsQueryPackQueryPropertiesResponseRelated? related,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, ImmutableArray<string>>? tags,

            string timeCreated,

            string timeModified,

            string type)
        {
            Author = author;
            Body = body;
            Description = description;
            DisplayName = displayName;
            Name = name;
            Properties = properties;
            Related = related;
            SystemData = systemData;
            Tags = tags;
            TimeCreated = timeCreated;
            TimeModified = timeModified;
            Type = type;
        }
    }
}
