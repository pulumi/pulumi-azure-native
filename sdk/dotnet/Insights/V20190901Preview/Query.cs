// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20190901Preview
{
    /// <summary>
    /// A Log Analytics QueryPack-Query definition.
    /// </summary>
    public partial class Query : Pulumi.CustomResource
    {
        /// <summary>
        /// Object Id of user creating the query.
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// Body of the query.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// Description of the query.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Unique display name for your query within the Query Pack.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Additional properties that can be set for the query.
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// The related metadata items for the function.
        /// </summary>
        [Output("related")]
        public Output<Outputs.LogAnalyticsQueryPackQueryPropertiesResponseRelated?> Related { get; private set; } = null!;

        /// <summary>
        /// Read only system data
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Tags associated with the query.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, ImmutableArray<string>>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Creation Date for the Log Analytics Query, in ISO 8601 format.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Last modified date of the Log Analytics Query, in ISO 8601 format.
        /// </summary>
        [Output("timeModified")]
        public Output<string> TimeModified { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Query resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Query(string name, QueryArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/v20190901preview:Query", name, args ?? new QueryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Query(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/v20190901preview:Query", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Query resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Query Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Query(name, id, options);
        }
    }

    public sealed class QueryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Body of the query.
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// Description of the query.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique display name for your query within the Query Pack.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The id of a specific query defined in the Log Analytics QueryPack
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Additional properties that can be set for the query.
        /// </summary>
        [Input("properties")]
        public Input<object>? Properties { get; set; }

        /// <summary>
        /// The name of the Log Analytics QueryPack resource.
        /// </summary>
        [Input("queryPackName", required: true)]
        public Input<string> QueryPackName { get; set; } = null!;

        /// <summary>
        /// The related metadata items for the function.
        /// </summary>
        [Input("related")]
        public Input<Inputs.LogAnalyticsQueryPackQueryPropertiesRelatedArgs>? Related { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<ImmutableArray<string>>? _tags;

        /// <summary>
        /// Tags associated with the query.
        /// </summary>
        public InputMap<ImmutableArray<string>> Tags
        {
            get => _tags ?? (_tags = new InputMap<ImmutableArray<string>>());
            set => _tags = value;
        }

        public QueryArgs()
        {
        }
    }
}
