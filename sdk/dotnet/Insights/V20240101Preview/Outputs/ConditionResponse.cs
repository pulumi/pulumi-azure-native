// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20240101Preview.Outputs
{

    /// <summary>
    /// A condition of the scheduled query rule.
    /// </summary>
    [OutputType]
    public sealed class ConditionResponse
    {
        /// <summary>
        /// The extent of deviation required to trigger an alert. Allowed values are 'Low', 'Medium' and 'High'. This will affect how tight the threshold is to the metric series pattern. Relevant and required only for dynamic threshold rules of the kind LogAlert.
        /// </summary>
        public readonly string? AlertSensitivity;
        /// <summary>
        /// Specifies the type of threshold criteria
        /// </summary>
        public readonly string? CriterionType;
        /// <summary>
        /// List of Dimensions conditions
        /// </summary>
        public readonly ImmutableArray<Outputs.DimensionResponse> Dimensions;
        /// <summary>
        /// The minimum number of violations required within the selected lookback time window required to raise an alert. Relevant only for rules of the kind LogAlert.
        /// </summary>
        public readonly Outputs.ConditionResponseFailingPeriods? FailingPeriods;
        /// <summary>
        /// Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format). Relevant only for dynamic threshold rules of the kind LogAlert.
        /// </summary>
        public readonly string? IgnoreDataBefore;
        /// <summary>
        /// The column containing the metric measure number. Relevant only for rules of the kind LogAlert.
        /// </summary>
        public readonly string? MetricMeasureColumn;
        /// <summary>
        /// The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.
        /// </summary>
        public readonly string? MetricName;
        /// <summary>
        /// The criteria operator. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        public readonly string? Operator;
        /// <summary>
        /// Log query alert
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only for rules of the kind LogAlert.
        /// </summary>
        public readonly string? ResourceIdColumn;
        /// <summary>
        /// the criteria threshold value that activates the alert. Relevant and required only for static threshold rules of the kind LogAlert.
        /// </summary>
        public readonly double? Threshold;
        /// <summary>
        /// Aggregation type. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        public readonly string? TimeAggregation;

        [OutputConstructor]
        private ConditionResponse(
            string? alertSensitivity,

            string? criterionType,

            ImmutableArray<Outputs.DimensionResponse> dimensions,

            Outputs.ConditionResponseFailingPeriods? failingPeriods,

            string? ignoreDataBefore,

            string? metricMeasureColumn,

            string? metricName,

            string? @operator,

            string? query,

            string? resourceIdColumn,

            double? threshold,

            string? timeAggregation)
        {
            AlertSensitivity = alertSensitivity;
            CriterionType = criterionType;
            Dimensions = dimensions;
            FailingPeriods = failingPeriods;
            IgnoreDataBefore = ignoreDataBefore;
            MetricMeasureColumn = metricMeasureColumn;
            MetricName = metricName;
            Operator = @operator;
            Query = query;
            ResourceIdColumn = resourceIdColumn;
            Threshold = threshold;
            TimeAggregation = timeAggregation;
        }
    }
}
