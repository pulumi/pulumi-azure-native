// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20180301
{
    public static class GetMetricAlert
    {
        /// <summary>
        /// Retrieve an alert rule definition.
        /// </summary>
        public static Task<GetMetricAlertResult> InvokeAsync(GetMetricAlertArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMetricAlertResult>("azure-native:insights/v20180301:getMetricAlert", args ?? new GetMetricAlertArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve an alert rule definition.
        /// </summary>
        public static Output<GetMetricAlertResult> Invoke(GetMetricAlertInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetricAlertResult>("azure-native:insights/v20180301:getMetricAlert", args ?? new GetMetricAlertInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetricAlertArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public string RuleName { get; set; } = null!;

        public GetMetricAlertArgs()
        {
        }
        public static new GetMetricAlertArgs Empty => new GetMetricAlertArgs();
    }

    public sealed class GetMetricAlertInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public GetMetricAlertInvokeArgs()
        {
        }
        public static new GetMetricAlertInvokeArgs Empty => new GetMetricAlertInvokeArgs();
    }


    [OutputType]
    public sealed class GetMetricAlertResult
    {
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The alert rule properties of the resource.
        /// </summary>
        public readonly Outputs.MetricAlertPropertiesResponse Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMetricAlertResult(
            string id,

            string location,

            string name,

            Outputs.MetricAlertPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
