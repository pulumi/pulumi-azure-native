// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20220801Preview.Inputs
{

    /// <summary>
    /// scheduled query rule Definition
    /// </summary>
    public sealed class ScheduledQueryRulePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Actions to invoke when the alert fires.
        /// </summary>
        [Input("actions")]
        public Input<Inputs.ActionsArgs>? Actions { get; set; }

        /// <summary>
        /// The flag that indicates whether the alert should be automatically resolved or not. The default is true. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("autoMitigate")]
        public Input<bool>? AutoMitigate { get; set; }

        /// <summary>
        /// The flag which indicates whether this scheduled query rule should be stored in the customer's storage. The default is false. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("checkWorkspaceAlertsStorageConfigured")]
        public Input<bool>? CheckWorkspaceAlertsStorageConfigured { get; set; }

        /// <summary>
        /// The rule criteria that defines the conditions of the scheduled query rule.
        /// </summary>
        [Input("criteria", required: true)]
        public Input<Inputs.ScheduledQueryRuleCriteriaArgs> Criteria { get; set; } = null!;

        /// <summary>
        /// The description of the scheduled query rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the alert rule
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The flag which indicates whether this scheduled query rule is enabled. Value should be true or false
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// How often the scheduled query rule is evaluated represented in ISO 8601 duration format. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Input("evaluationFrequency")]
        public Input<string>? EvaluationFrequency { get; set; }

        /// <summary>
        /// Mute actions for the chosen period of time (in ISO 8601 duration format) after the alert is fired. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("muteActionsDuration")]
        public Input<string>? MuteActionsDuration { get; set; }

        /// <summary>
        /// If specified then overrides the query time range (default is WindowSize*NumberOfEvaluationPeriods). Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("overrideQueryTimeRange")]
        public Input<string>? OverrideQueryTimeRange { get; set; }

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// </summary>
        [Input("publicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.Insights.V20220801Preview.PublicNetworkAccess>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// Defines the configuration for resolving fired alerts. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("ruleResolveConfiguration")]
        public Input<Inputs.RuleResolveConfigurationArgs>? RuleResolveConfiguration { get; set; }

        [Input("scopes", required: true)]
        private InputList<string>? _scopes;

        /// <summary>
        /// The list of resource id's that this scheduled query rule is scoped to.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Input("severity")]
        public Input<double>? Severity { get; set; }

        /// <summary>
        /// The flag which indicates whether the provided query should be validated or not. The default is false. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Input("skipQueryValidation")]
        public Input<bool>? SkipQueryValidation { get; set; }

        [Input("targetResourceTypes")]
        private InputList<string>? _targetResourceTypes;

        /// <summary>
        /// List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is Microsoft.Compute/virtualMachines, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria. Relevant only for rules of the kind LogAlert
        /// </summary>
        public InputList<string> TargetResourceTypes
        {
            get => _targetResourceTypes ?? (_targetResourceTypes = new InputList<string>());
            set => _targetResourceTypes = value;
        }

        /// <summary>
        /// The period of time (in ISO 8601 duration format) on which the Alert query will be executed (bin size). Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Input("windowSize")]
        public Input<string>? WindowSize { get; set; }

        public ScheduledQueryRulePropertiesArgs()
        {
            PublicNetworkAccess = "Enabled";
        }
        public static new ScheduledQueryRulePropertiesArgs Empty => new ScheduledQueryRulePropertiesArgs();
    }
}
