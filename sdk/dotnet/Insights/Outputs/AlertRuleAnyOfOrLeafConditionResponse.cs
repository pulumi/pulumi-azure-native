// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.Outputs
{

    [OutputType]
    public sealed class AlertRuleAnyOfOrLeafConditionResponse
    {
        /// <summary>
        /// An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
        /// </summary>
        public readonly ImmutableArray<Outputs.AlertRuleLeafConditionResponse> AnyOf;
        /// <summary>
        /// The value of the event's field will be compared to the values in this array (case-insensitive) to determine if the condition is met.
        /// </summary>
        public readonly ImmutableArray<string> ContainsAny;
        /// <summary>
        /// The value of the event's field will be compared to this value (case-insensitive) to determine if the condition is met.
        /// </summary>
        public readonly string? Equals;
        /// <summary>
        /// The name of the Activity Log event's field that this condition will examine.
        /// The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties'.
        /// </summary>
        public readonly string? Field;

        [OutputConstructor]
        private AlertRuleAnyOfOrLeafConditionResponse(
            ImmutableArray<Outputs.AlertRuleLeafConditionResponse> anyOf,

            ImmutableArray<string> containsAny,

            string? equals,

            string? field)
        {
            AnyOf = anyOf;
            ContainsAny = containsAny;
            Equals = equals;
            Field = field;
        }
    }
}
