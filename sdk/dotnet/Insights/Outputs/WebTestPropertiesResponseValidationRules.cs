// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Outputs
{

    /// <summary>
    /// The collection of validation rule properties
    /// </summary>
    [OutputType]
    public sealed class WebTestPropertiesResponseValidationRules
    {
        /// <summary>
        /// The collection of content validation properties
        /// </summary>
        public readonly Outputs.WebTestPropertiesResponseContentValidation? ContentValidation;
        /// <summary>
        /// Validate that the WebTest returns the http status code provided.
        /// </summary>
        public readonly int? ExpectedHttpStatusCode;
        /// <summary>
        /// When set, validation will ignore the status code.
        /// </summary>
        public readonly bool? IgnoreHttpStatusCode;
        /// <summary>
        /// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
        /// </summary>
        public readonly int? SSLCertRemainingLifetimeCheck;
        /// <summary>
        /// Checks to see if the SSL cert is still valid.
        /// </summary>
        public readonly bool? SSLCheck;

        [OutputConstructor]
        private WebTestPropertiesResponseValidationRules(
            Outputs.WebTestPropertiesResponseContentValidation? contentValidation,

            int? expectedHttpStatusCode,

            bool? ignoreHttpStatusCode,

            int? sSLCertRemainingLifetimeCheck,

            bool? sSLCheck)
        {
            ContentValidation = contentValidation;
            ExpectedHttpStatusCode = expectedHttpStatusCode;
            IgnoreHttpStatusCode = ignoreHttpStatusCode;
            SSLCertRemainingLifetimeCheck = sSLCertRemainingLifetimeCheck;
            SSLCheck = sSLCheck;
        }
    }
}
