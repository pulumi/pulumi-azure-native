// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Outputs
{

    /// <summary>
    /// Log Search Rule Definition
    /// </summary>
    [OutputType]
    public sealed class LogSearchRuleResponse
    {
        /// <summary>
        /// Action needs to be taken on rule execution.
        /// </summary>
        public readonly Union<Outputs.AlertingActionResponse, Outputs.LogToMetricActionResponse> Action;
        /// <summary>
        /// The flag that indicates whether the alert should be automatically resolved or not. The default is false.
        /// </summary>
        public readonly bool? AutoMitigate;
        /// <summary>
        /// The api-version used when creating this alert rule
        /// </summary>
        public readonly string CreatedWithApiVersion;
        /// <summary>
        /// The description of the Log Search rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the alert rule
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The flag which indicates whether the Log Search rule is enabled. Value should be true or false
        /// </summary>
        public readonly string? Enabled;
        /// <summary>
        /// True if alert rule is legacy Log Analytic rule
        /// </summary>
        public readonly bool IsLegacyLogAnalyticsRule;
        /// <summary>
        /// Last time the rule was updated in IS08601 format.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Provisioning state of the scheduled query rule
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
        /// </summary>
        public readonly Outputs.ScheduleResponse? Schedule;
        /// <summary>
        /// Data Source against which rule will Query Data
        /// </summary>
        public readonly Outputs.SourceResponse Source;

        [OutputConstructor]
        private LogSearchRuleResponse(
            Union<Outputs.AlertingActionResponse, Outputs.LogToMetricActionResponse> action,

            bool? autoMitigate,

            string createdWithApiVersion,

            string? description,

            string? displayName,

            string? enabled,

            bool isLegacyLogAnalyticsRule,

            string lastUpdatedTime,

            string provisioningState,

            Outputs.ScheduleResponse? schedule,

            Outputs.SourceResponse source)
        {
            Action = action;
            AutoMitigate = autoMitigate;
            CreatedWithApiVersion = createdWithApiVersion;
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            IsLegacyLogAnalyticsRule = isLegacyLogAnalyticsRule;
            LastUpdatedTime = lastUpdatedTime;
            ProvisioningState = provisioningState;
            Schedule = schedule;
            Source = source;
        }
    }
}
