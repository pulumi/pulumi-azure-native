// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Outputs
{

    /// <summary>
    /// Static definitions of the ProactiveDetection configuration rule (same values for all components).
    /// </summary>
    [OutputType]
    public sealed class ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions
    {
        /// <summary>
        /// The rule description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The rule name as it is displayed in UI
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// URL which displays additional info about the proactive detection rule
        /// </summary>
        public readonly string? HelpUrl;
        /// <summary>
        /// A flag indicating whether the rule is enabled by default
        /// </summary>
        public readonly bool? IsEnabledByDefault;
        /// <summary>
        /// A flag indicating whether the rule is hidden (from the UI)
        /// </summary>
        public readonly bool? IsHidden;
        /// <summary>
        /// A flag indicating whether the rule is in preview
        /// </summary>
        public readonly bool? IsInPreview;
        /// <summary>
        /// The rule name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// A flag indicating whether email notifications are supported for detections for this rule
        /// </summary>
        public readonly bool? SupportsEmailNotifications;

        [OutputConstructor]
        private ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions(
            string? description,

            string? displayName,

            string? helpUrl,

            bool? isEnabledByDefault,

            bool? isHidden,

            bool? isInPreview,

            string? name,

            bool? supportsEmailNotifications)
        {
            Description = description;
            DisplayName = displayName;
            HelpUrl = helpUrl;
            IsEnabledByDefault = isEnabledByDefault;
            IsHidden = isHidden;
            IsInPreview = isInPreview;
            Name = name;
            SupportsEmailNotifications = supportsEmailNotifications;
        }
    }
}
