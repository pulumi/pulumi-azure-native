// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Inputs
{

    /// <summary>
    /// Properties that define the scope private link mode settings.
    /// </summary>
    public sealed class AccessModeSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("exclusions")]
        private InputList<Inputs.AccessModeSettingsExclusionArgs>? _exclusions;

        /// <summary>
        /// List of exclusions that override the default access mode settings for specific private endpoint connections.
        /// </summary>
        public InputList<Inputs.AccessModeSettingsExclusionArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<Inputs.AccessModeSettingsExclusionArgs>());
            set => _exclusions = value;
        }

        /// <summary>
        /// Specifies the default access mode of ingestion through associated private endpoints in scope. If not specified default value is 'Open'. You can override this default setting for a specific private endpoint connection by adding an exclusion in the 'exclusions' array.
        /// </summary>
        [Input("ingestionAccessMode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Insights.AccessMode> IngestionAccessMode { get; set; } = null!;

        /// <summary>
        /// Specifies the default access mode of queries through associated private endpoints in scope. If not specified default value is 'Open'. You can override this default setting for a specific private endpoint connection by adding an exclusion in the 'exclusions' array.
        /// </summary>
        [Input("queryAccessMode", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Insights.AccessMode> QueryAccessMode { get; set; } = null!;

        public AccessModeSettingsArgs()
        {
        }
        public static new AccessModeSettingsArgs Empty => new AccessModeSettingsArgs();
    }
}
