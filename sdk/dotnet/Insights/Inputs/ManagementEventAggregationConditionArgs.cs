// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Inputs
{

    /// <summary>
    /// How the data that is collected should be combined over time.
    /// </summary>
    public sealed class ManagementEventAggregationConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the condition operator.
        /// </summary>
        [Input("operator")]
        public Input<Pulumi.AzureNative.Insights.ConditionOperator>? Operator { get; set; }

        /// <summary>
        /// The threshold value that activates the alert.
        /// </summary>
        [Input("threshold")]
        public Input<double>? Threshold { get; set; }

        /// <summary>
        /// the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.
        /// </summary>
        [Input("windowSize")]
        public Input<string>? WindowSize { get; set; }

        public ManagementEventAggregationConditionArgs()
        {
        }
        public static new ManagementEventAggregationConditionArgs Empty => new ManagementEventAggregationConditionArgs();
    }
}
