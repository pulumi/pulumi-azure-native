// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.Inputs
{

    /// <summary>
    /// Definition of which custom log files will be collected by this data collection rule
    /// </summary>
    public sealed class LogFilesDataSourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("filePatterns", required: true)]
        private InputList<string>? _filePatterns;

        /// <summary>
        /// File Patterns where the log files are located
        /// </summary>
        public InputList<string> FilePatterns
        {
            get => _filePatterns ?? (_filePatterns = new InputList<string>());
            set => _filePatterns = value;
        }

        /// <summary>
        /// The data format of the log files
        /// </summary>
        [Input("format", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Insights.KnownLogFilesDataSourceFormat> Format { get; set; } = null!;

        /// <summary>
        /// A friendly name for the data source. 
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The log files specific settings.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.LogFilesDataSourceSettingsArgs>? Settings { get; set; }

        [Input("streams", required: true)]
        private InputList<string>? _streams;

        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data source
        /// </summary>
        public InputList<string> Streams
        {
            get => _streams ?? (_streams = new InputList<string>());
            set => _streams = value;
        }

        public LogFilesDataSourceArgs()
        {
        }
        public static new LogFilesDataSourceArgs Empty => new LogFilesDataSourceArgs();
    }
}
