// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20170401
{
    public static class GetActionGroup
    {
        /// <summary>
        /// An action group resource.
        /// </summary>
        public static Task<GetActionGroupResult> InvokeAsync(GetActionGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetActionGroupResult>("azure-native:insights/v20170401:getActionGroup", args ?? new GetActionGroupArgs(), options.WithDefaults());

        /// <summary>
        /// An action group resource.
        /// </summary>
        public static Output<GetActionGroupResult> Invoke(GetActionGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetActionGroupResult>("azure-native:insights/v20170401:getActionGroup", args ?? new GetActionGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActionGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the action group.
        /// </summary>
        [Input("actionGroupName", required: true)]
        public string ActionGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetActionGroupArgs()
        {
        }
        public static new GetActionGroupArgs Empty => new GetActionGroupArgs();
    }

    public sealed class GetActionGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the action group.
        /// </summary>
        [Input("actionGroupName", required: true)]
        public Input<string> ActionGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetActionGroupInvokeArgs()
        {
        }
        public static new GetActionGroupInvokeArgs Empty => new GetActionGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetActionGroupResult
    {
        /// <summary>
        /// The list of AutomationRunbook receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.AutomationRunbookReceiverResponse> AutomationRunbookReceivers;
        /// <summary>
        /// The list of AzureAppPush receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.AzureAppPushReceiverResponse> AzureAppPushReceivers;
        /// <summary>
        /// The list of email receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.EmailReceiverResponse> EmailReceivers;
        /// <summary>
        /// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        public readonly string GroupShortName;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of ITSM receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.ItsmReceiverResponse> ItsmReceivers;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of SMS receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.SmsReceiverResponse> SmsReceivers;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The list of webhook receivers that are part of this action group.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebhookReceiverResponse> WebhookReceivers;

        [OutputConstructor]
        private GetActionGroupResult(
            ImmutableArray<Outputs.AutomationRunbookReceiverResponse> automationRunbookReceivers,

            ImmutableArray<Outputs.AzureAppPushReceiverResponse> azureAppPushReceivers,

            ImmutableArray<Outputs.EmailReceiverResponse> emailReceivers,

            bool enabled,

            string groupShortName,

            string id,

            ImmutableArray<Outputs.ItsmReceiverResponse> itsmReceivers,

            string location,

            string name,

            ImmutableArray<Outputs.SmsReceiverResponse> smsReceivers,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.WebhookReceiverResponse> webhookReceivers)
        {
            AutomationRunbookReceivers = automationRunbookReceivers;
            AzureAppPushReceivers = azureAppPushReceivers;
            EmailReceivers = emailReceivers;
            Enabled = enabled;
            GroupShortName = groupShortName;
            Id = id;
            ItsmReceivers = itsmReceivers;
            Location = location;
            Name = name;
            SmsReceivers = smsReceivers;
            Tags = tags;
            Type = type;
            WebhookReceivers = webhookReceivers;
        }
    }
}
