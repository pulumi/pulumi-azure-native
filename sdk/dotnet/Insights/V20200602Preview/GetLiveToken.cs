// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20200602Preview
{
    public static class GetLiveToken
    {
        /// <summary>
        /// **Gets an access token for live metrics stream data.**
        /// </summary>
        public static Task<GetLiveTokenResult> InvokeAsync(GetLiveTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLiveTokenResult>("azure-native:insights/v20200602preview:getLiveToken", args ?? new GetLiveTokenArgs(), options.WithDefaults());

        /// <summary>
        /// **Gets an access token for live metrics stream data.**
        /// </summary>
        public static Output<GetLiveTokenResult> Invoke(GetLiveTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLiveTokenResult>("azure-native:insights/v20200602preview:getLiveToken", args ?? new GetLiveTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLiveTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetLiveTokenArgs()
        {
        }
        public static new GetLiveTokenArgs Empty => new GetLiveTokenArgs();
    }

    public sealed class GetLiveTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetLiveTokenInvokeArgs()
        {
        }
        public static new GetLiveTokenInvokeArgs Empty => new GetLiveTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetLiveTokenResult
    {
        /// <summary>
        /// JWT token for accessing live metrics stream data.
        /// </summary>
        public readonly string LiveToken;

        [OutputConstructor]
        private GetLiveTokenResult(string liveToken)
        {
            LiveToken = liveToken;
        }
    }
}
