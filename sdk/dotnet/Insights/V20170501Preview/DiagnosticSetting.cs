// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20170501Preview
{
    /// <summary>
    /// The diagnostic setting resource.
    /// </summary>
    public partial class DiagnosticSetting : Pulumi.CustomResource
    {
        /// <summary>
        /// The resource Id for the event hub authorization rule.
        /// </summary>
        [Output("eventHubAuthorizationRuleId")]
        public Output<string?> EventHubAuthorizationRuleId { get; private set; } = null!;

        /// <summary>
        /// The name of the event hub. If none is specified, the default event hub will be selected.
        /// </summary>
        [Output("eventHubName")]
        public Output<string?> EventHubName { get; private set; } = null!;

        /// <summary>
        /// A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: &lt;normalized service identity&gt;_&lt;normalized category name&gt;. Possible values are: Dedicated and null (null is default.)
        /// </summary>
        [Output("logAnalyticsDestinationType")]
        public Output<string?> LogAnalyticsDestinationType { get; private set; } = null!;

        /// <summary>
        /// The list of logs settings.
        /// </summary>
        [Output("logs")]
        public Output<ImmutableArray<Outputs.LogSettingsResponse>> Logs { get; private set; } = null!;

        /// <summary>
        /// The list of metric settings.
        /// </summary>
        [Output("metrics")]
        public Output<ImmutableArray<Outputs.MetricSettingsResponse>> Metrics { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
        /// </summary>
        [Output("serviceBusRuleId")]
        public Output<string?> ServiceBusRuleId { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the storage account to which you would like to send Diagnostic Logs.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string?> StorageAccountId { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
        /// </summary>
        [Output("workspaceId")]
        public Output<string?> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a DiagnosticSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiagnosticSetting(string name, DiagnosticSettingArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/v20170501preview:DiagnosticSetting", name, args ?? new DiagnosticSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiagnosticSetting(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:insights/v20170501preview:DiagnosticSetting", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiagnosticSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiagnosticSetting Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DiagnosticSetting(name, id, options);
        }
    }

    public sealed class DiagnosticSettingArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource Id for the event hub authorization rule.
        /// </summary>
        [Input("eventHubAuthorizationRuleId")]
        public Input<string>? EventHubAuthorizationRuleId { get; set; }

        /// <summary>
        /// The name of the event hub. If none is specified, the default event hub will be selected.
        /// </summary>
        [Input("eventHubName")]
        public Input<string>? EventHubName { get; set; }

        /// <summary>
        /// A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: &lt;normalized service identity&gt;_&lt;normalized category name&gt;. Possible values are: Dedicated and null (null is default.)
        /// </summary>
        [Input("logAnalyticsDestinationType")]
        public Input<string>? LogAnalyticsDestinationType { get; set; }

        [Input("logs")]
        private InputList<Inputs.LogSettingsArgs>? _logs;

        /// <summary>
        /// The list of logs settings.
        /// </summary>
        public InputList<Inputs.LogSettingsArgs> Logs
        {
            get => _logs ?? (_logs = new InputList<Inputs.LogSettingsArgs>());
            set => _logs = value;
        }

        [Input("metrics")]
        private InputList<Inputs.MetricSettingsArgs>? _metrics;

        /// <summary>
        /// The list of metric settings.
        /// </summary>
        public InputList<Inputs.MetricSettingsArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.MetricSettingsArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// The name of the diagnostic setting.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        /// <summary>
        /// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
        /// </summary>
        [Input("serviceBusRuleId")]
        public Input<string>? ServiceBusRuleId { get; set; }

        /// <summary>
        /// The resource ID of the storage account to which you would like to send Diagnostic Logs.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        /// <summary>
        /// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public DiagnosticSettingArgs()
        {
        }
    }
}
