// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights.V20230901Preview.Outputs
{

    /// <summary>
    /// An Event hub receiver.
    /// </summary>
    [OutputType]
    public sealed class EventHubReceiverResponse
    {
        /// <summary>
        /// The name of the specific Event Hub queue
        /// </summary>
        public readonly string EventHubName;
        /// <summary>
        /// The Event Hub namespace
        /// </summary>
        public readonly string EventHubNameSpace;
        /// <summary>
        /// The name of the Event hub receiver. Names must be unique across all receivers within an action group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Id for the subscription containing this event hub
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// The tenant Id for the subscription containing this event hub
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Indicates whether to use common alert schema.
        /// </summary>
        public readonly bool? UseCommonAlertSchema;

        [OutputConstructor]
        private EventHubReceiverResponse(
            string eventHubName,

            string eventHubNameSpace,

            string name,

            string subscriptionId,

            string? tenantId,

            bool? useCommonAlertSchema)
        {
            EventHubName = eventHubName;
            EventHubNameSpace = eventHubNameSpace;
            Name = name;
            SubscriptionId = subscriptionId;
            TenantId = tenantId;
            UseCommonAlertSchema = useCommonAlertSchema;
        }
    }
}
