// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20200501Preview.Outputs
{

    [OutputType]
    public sealed class ConditionResponse
    {
        /// <summary>
        /// List of Dimensions conditions
        /// </summary>
        public readonly ImmutableArray<Outputs.DimensionResponse> Dimensions;
        /// <summary>
        /// The minimum number of violations required within the selected lookback time window required to raise an alert.
        /// </summary>
        public readonly Outputs.ConditionResponseFailingPeriods? FailingPeriods;
        /// <summary>
        /// The column containing the metric measure number.
        /// </summary>
        public readonly string? MetricMeasureColumn;
        /// <summary>
        /// The criteria operator.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Log query alert
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id
        /// </summary>
        public readonly string? ResourceIdColumn;
        /// <summary>
        /// the criteria threshold value that activates the alert.
        /// </summary>
        public readonly double Threshold;
        /// <summary>
        /// Aggregation type
        /// </summary>
        public readonly string TimeAggregation;

        [OutputConstructor]
        private ConditionResponse(
            ImmutableArray<Outputs.DimensionResponse> dimensions,

            Outputs.ConditionResponseFailingPeriods? failingPeriods,

            string? metricMeasureColumn,

            string @operator,

            string? query,

            string? resourceIdColumn,

            double threshold,

            string timeAggregation)
        {
            Dimensions = dimensions;
            FailingPeriods = failingPeriods;
            MetricMeasureColumn = metricMeasureColumn;
            Operator = @operator;
            Query = query;
            ResourceIdColumn = resourceIdColumn;
            Threshold = threshold;
            TimeAggregation = timeAggregation;
        }
    }
}
