// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Insights.V20200501Preview.Inputs
{

    /// <summary>
    /// A condition of the scheduled query rule.
    /// </summary>
    public sealed class ConditionArgs : Pulumi.ResourceArgs
    {
        [Input("dimensions")]
        private InputList<Inputs.DimensionArgs>? _dimensions;

        /// <summary>
        /// List of Dimensions conditions
        /// </summary>
        public InputList<Inputs.DimensionArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<Inputs.DimensionArgs>());
            set => _dimensions = value;
        }

        /// <summary>
        /// The minimum number of violations required within the selected lookback time window required to raise an alert.
        /// </summary>
        [Input("failingPeriods")]
        public Input<Inputs.ConditionFailingPeriodsArgs>? FailingPeriods { get; set; }

        /// <summary>
        /// The column containing the metric measure number.
        /// </summary>
        [Input("metricMeasureColumn")]
        public Input<string>? MetricMeasureColumn { get; set; }

        /// <summary>
        /// The criteria operator.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Log query alert
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id
        /// </summary>
        [Input("resourceIdColumn")]
        public Input<string>? ResourceIdColumn { get; set; }

        /// <summary>
        /// the criteria threshold value that activates the alert.
        /// </summary>
        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        /// <summary>
        /// Aggregation type
        /// </summary>
        [Input("timeAggregation", required: true)]
        public Input<string> TimeAggregation { get; set; } = null!;

        public ConditionArgs()
        {
        }
    }
}
