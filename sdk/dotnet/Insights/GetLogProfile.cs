// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights
{
    public static class GetLogProfile
    {
        /// <summary>
        /// Gets the log profile.
        /// API Version: 2016-03-01.
        /// </summary>
        public static Task<GetLogProfileResult> InvokeAsync(GetLogProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogProfileResult>("azure-native:insights:getLogProfile", args ?? new GetLogProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the log profile.
        /// API Version: 2016-03-01.
        /// </summary>
        public static Output<GetLogProfileResult> Invoke(GetLogProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogProfileResult>("azure-native:insights:getLogProfile", args ?? new GetLogProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the log profile.
        /// </summary>
        [Input("logProfileName", required: true)]
        public string LogProfileName { get; set; } = null!;

        public GetLogProfileArgs()
        {
        }
        public static new GetLogProfileArgs Empty => new GetLogProfileArgs();
    }

    public sealed class GetLogProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the log profile.
        /// </summary>
        [Input("logProfileName", required: true)]
        public Input<string> LogProfileName { get; set; } = null!;

        public GetLogProfileInvokeArgs()
        {
        }
        public static new GetLogProfileInvokeArgs Empty => new GetLogProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogProfileResult
    {
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The log profile properties of the resource.
        /// </summary>
        public readonly Outputs.LogProfilePropertiesResponse Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLogProfileResult(
            string id,

            string location,

            string name,

            Outputs.LogProfilePropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
