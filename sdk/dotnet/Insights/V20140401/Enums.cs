// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Insights.V20140401
{
    /// <summary>
    /// the operator used to compare the data and the threshold.
    /// </summary>
    [EnumType]
    public readonly struct ConditionOperator : IEquatable<ConditionOperator>
    {
        private readonly string _value;

        private ConditionOperator(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConditionOperator GreaterThan { get; } = new ConditionOperator("GreaterThan");
        public static ConditionOperator GreaterThanOrEqual { get; } = new ConditionOperator("GreaterThanOrEqual");
        public static ConditionOperator LessThan { get; } = new ConditionOperator("LessThan");
        public static ConditionOperator LessThanOrEqual { get; } = new ConditionOperator("LessThanOrEqual");

        public static bool operator ==(ConditionOperator left, ConditionOperator right) => left.Equals(right);
        public static bool operator !=(ConditionOperator left, ConditionOperator right) => !left.Equals(right);

        public static explicit operator string(ConditionOperator value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConditionOperator other && Equals(other);
        public bool Equals(ConditionOperator other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// the time aggregation operator. How the data that are collected should be combined over time. The default value is the PrimaryAggregationType of the Metric.
    /// </summary>
    [EnumType]
    public readonly struct TimeAggregationOperator : IEquatable<TimeAggregationOperator>
    {
        private readonly string _value;

        private TimeAggregationOperator(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TimeAggregationOperator Average { get; } = new TimeAggregationOperator("Average");
        public static TimeAggregationOperator Minimum { get; } = new TimeAggregationOperator("Minimum");
        public static TimeAggregationOperator Maximum { get; } = new TimeAggregationOperator("Maximum");
        public static TimeAggregationOperator Total { get; } = new TimeAggregationOperator("Total");
        public static TimeAggregationOperator Last { get; } = new TimeAggregationOperator("Last");

        public static bool operator ==(TimeAggregationOperator left, TimeAggregationOperator right) => left.Equals(right);
        public static bool operator !=(TimeAggregationOperator left, TimeAggregationOperator right) => !left.Equals(right);

        public static explicit operator string(TimeAggregationOperator value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TimeAggregationOperator other && Equals(other);
        public bool Equals(TimeAggregationOperator other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
