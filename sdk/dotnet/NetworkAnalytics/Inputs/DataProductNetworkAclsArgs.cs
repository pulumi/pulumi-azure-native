// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkAnalytics.Inputs
{

    /// <summary>
    /// Data Product Network rule set
    /// </summary>
    public sealed class DataProductNetworkAclsArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedQueryIpRangeList", required: true)]
        private InputList<string>? _allowedQueryIpRangeList;

        /// <summary>
        /// The list of query ips in the format of CIDR allowed to connect to query/visualization endpoint.
        /// </summary>
        public InputList<string> AllowedQueryIpRangeList
        {
            get => _allowedQueryIpRangeList ?? (_allowedQueryIpRangeList = new InputList<string>());
            set => _allowedQueryIpRangeList = value;
        }

        /// <summary>
        /// Default Action
        /// </summary>
        [Input("defaultAction", required: true)]
        public InputUnion<string, Pulumi.AzureNative.NetworkAnalytics.DefaultAction> DefaultAction { get; set; } = null!;

        [Input("ipRules", required: true)]
        private InputList<Inputs.IPRulesArgs>? _ipRules;

        /// <summary>
        /// IP rule with specific IP or IP range in CIDR format.
        /// </summary>
        public InputList<Inputs.IPRulesArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Inputs.IPRulesArgs>());
            set => _ipRules = value;
        }

        [Input("virtualNetworkRule", required: true)]
        private InputList<Inputs.VirtualNetworkRuleArgs>? _virtualNetworkRule;

        /// <summary>
        /// Virtual Network Rule
        /// </summary>
        public InputList<Inputs.VirtualNetworkRuleArgs> VirtualNetworkRule
        {
            get => _virtualNetworkRule ?? (_virtualNetworkRule = new InputList<Inputs.VirtualNetworkRuleArgs>());
            set => _virtualNetworkRule = value;
        }

        public DataProductNetworkAclsArgs()
        {
        }
        public static new DataProductNetworkAclsArgs Empty => new DataProductNetworkAclsArgs();
    }
}
