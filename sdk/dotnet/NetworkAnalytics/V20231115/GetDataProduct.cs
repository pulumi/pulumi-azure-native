// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkAnalytics.V20231115
{
    public static class GetDataProduct
    {
        /// <summary>
        /// Retrieve data product resource.
        /// </summary>
        public static Task<GetDataProductResult> InvokeAsync(GetDataProductArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataProductResult>("azure-native:networkanalytics/v20231115:getDataProduct", args ?? new GetDataProductArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve data product resource.
        /// </summary>
        public static Output<GetDataProductResult> Invoke(GetDataProductInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataProductResult>("azure-native:networkanalytics/v20231115:getDataProduct", args ?? new GetDataProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataProductArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The data product resource name
        /// </summary>
        [Input("dataProductName", required: true)]
        public string DataProductName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDataProductArgs()
        {
        }
        public static new GetDataProductArgs Empty => new GetDataProductArgs();
    }

    public sealed class GetDataProductInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The data product resource name
        /// </summary>
        [Input("dataProductName", required: true)]
        public Input<string> DataProductName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDataProductInvokeArgs()
        {
        }
        public static new GetDataProductInvokeArgs Empty => new GetDataProductInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataProductResult
    {
        /// <summary>
        /// List of available minor versions of the data product resource.
        /// </summary>
        public readonly ImmutableArray<string> AvailableMinorVersions;
        /// <summary>
        /// Resource links which exposed to the customer to query the data.
        /// </summary>
        public readonly Outputs.ConsumptionEndpointsPropertiesResponse ConsumptionEndpoints;
        /// <summary>
        /// Current configured minor version of the data product resource.
        /// </summary>
        public readonly string? CurrentMinorVersion;
        /// <summary>
        /// Customer managed encryption key details for data product.
        /// </summary>
        public readonly Outputs.EncryptionKeyDetailsResponse? CustomerEncryptionKey;
        /// <summary>
        /// Flag to enable customer managed key encryption for data product.
        /// </summary>
        public readonly string? CustomerManagedKeyEncryptionEnabled;
        /// <summary>
        /// Documentation link for the data product based on definition file.
        /// </summary>
        public readonly string Documentation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// Key vault url.
        /// </summary>
        public readonly string KeyVaultUrl;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Major version of data product.
        /// </summary>
        public readonly string MajorVersion;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network rule set for data product.
        /// </summary>
        public readonly Outputs.DataProductNetworkAclsResponse? Networkacls;
        /// <summary>
        /// List of name or email associated with data product resource deployment.
        /// </summary>
        public readonly ImmutableArray<string> Owners;
        /// <summary>
        /// Flag to enable or disable private link for data product resource.
        /// </summary>
        public readonly string? PrivateLinksEnabled;
        /// <summary>
        /// Product name of data product.
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Latest provisioning state  of data product.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Flag to enable or disable public access of data product resource.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Data product publisher name.
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// Purview account url for data product to connect to.
        /// </summary>
        public readonly string? PurviewAccount;
        /// <summary>
        /// Purview collection url for data product to connect to.
        /// </summary>
        public readonly string? PurviewCollection;
        /// <summary>
        /// Flag to enable or disable redundancy for data product.
        /// </summary>
        public readonly string? Redundancy;
        /// <summary>
        /// The resource GUID property of the data product resource.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDataProductResult(
            ImmutableArray<string> availableMinorVersions,

            Outputs.ConsumptionEndpointsPropertiesResponse consumptionEndpoints,

            string? currentMinorVersion,

            Outputs.EncryptionKeyDetailsResponse? customerEncryptionKey,

            string? customerManagedKeyEncryptionEnabled,

            string documentation,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string keyVaultUrl,

            string location,

            string majorVersion,

            string name,

            Outputs.DataProductNetworkAclsResponse? networkacls,

            ImmutableArray<string> owners,

            string? privateLinksEnabled,

            string product,

            string provisioningState,

            string? publicNetworkAccess,

            string publisher,

            string? purviewAccount,

            string? purviewCollection,

            string? redundancy,

            string resourceGuid,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AvailableMinorVersions = availableMinorVersions;
            ConsumptionEndpoints = consumptionEndpoints;
            CurrentMinorVersion = currentMinorVersion;
            CustomerEncryptionKey = customerEncryptionKey;
            CustomerManagedKeyEncryptionEnabled = customerManagedKeyEncryptionEnabled;
            Documentation = documentation;
            Id = id;
            Identity = identity;
            KeyVaultUrl = keyVaultUrl;
            Location = location;
            MajorVersion = majorVersion;
            Name = name;
            Networkacls = networkacls;
            Owners = owners;
            PrivateLinksEnabled = privateLinksEnabled;
            Product = product;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            Publisher = publisher;
            PurviewAccount = purviewAccount;
            PurviewCollection = purviewCollection;
            Redundancy = redundancy;
            ResourceGuid = resourceGuid;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
