// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerInstance.V20221001Preview.Inputs
{

    /// <summary>
    /// The security context for the container.
    /// </summary>
    public sealed class SecurityContextDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value indicating whether the init process can elevate its privileges
        /// </summary>
        [Input("allowPrivilegeEscalation")]
        public Input<bool>? AllowPrivilegeEscalation { get; set; }

        /// <summary>
        /// The capabilities to add or drop from a container.
        /// </summary>
        [Input("capabilities")]
        public Input<Inputs.SecurityContextCapabilitiesDefinitionArgs>? Capabilities { get; set; }

        /// <summary>
        /// The flag to determine if the container permissions is elevated to Privileged.
        /// </summary>
        [Input("privileged")]
        public Input<bool>? Privileged { get; set; }

        /// <summary>
        /// Sets the User GID for the container.
        /// </summary>
        [Input("runAsGroup")]
        public Input<int>? RunAsGroup { get; set; }

        /// <summary>
        /// Sets the User UID for the container.
        /// </summary>
        [Input("runAsUser")]
        public Input<int>? RunAsUser { get; set; }

        /// <summary>
        /// a base64 encoded string containing the contents of the JSON in the seccomp profile
        /// </summary>
        [Input("seccompProfile")]
        public Input<string>? SeccompProfile { get; set; }

        public SecurityContextDefinitionArgs()
        {
        }
        public static new SecurityContextDefinitionArgs Empty => new SecurityContextDefinitionArgs();
    }
}
