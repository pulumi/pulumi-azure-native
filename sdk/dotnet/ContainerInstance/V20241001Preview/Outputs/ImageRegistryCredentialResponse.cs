// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerInstance.V20241001Preview.Outputs
{

    /// <summary>
    /// Image registry credential.
    /// </summary>
    [OutputType]
    public sealed class ImageRegistryCredentialResponse
    {
        /// <summary>
        /// The identity for the private registry.
        /// </summary>
        public readonly string? Identity;
        /// <summary>
        /// The identity URL for the private registry.
        /// </summary>
        public readonly string? IdentityUrl;
        /// <summary>
        /// The password for the private registry.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// The reference for the private registry password.
        /// </summary>
        public readonly string? PasswordReference;
        /// <summary>
        /// The Docker image registry server without a protocol such as "http" and "https".
        /// </summary>
        public readonly string Server;
        /// <summary>
        /// The username for the private registry.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private ImageRegistryCredentialResponse(
            string? identity,

            string? identityUrl,

            string? password,

            string? passwordReference,

            string server,

            string? username)
        {
            Identity = identity;
            IdentityUrl = identityUrl;
            Password = password;
            PasswordReference = passwordReference;
            Server = server;
            Username = username;
        }
    }
}
