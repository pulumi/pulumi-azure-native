// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerInstance.Outputs
{

    /// <summary>
    /// IP address for the container group.
    /// </summary>
    [OutputType]
    public sealed class IpAddressResponse
    {
        /// <summary>
        /// The value representing the security enum. The 'Unsecure' value is the default value if not selected and means the object's domain name label is not secured against subdomain takeover. The 'TenantReuse' value is the default value if selected and means the object's domain name label can be reused within the same tenant. The 'SubscriptionReuse' value means the object's domain name label can be reused within the same subscription. The 'ResourceGroupReuse' value means the object's domain name label can be reused within the same resource group. The 'NoReuse' value means the object's domain name label cannot be reused within the same resource group, subscription, or tenant.
        /// </summary>
        public readonly string? AutoGeneratedDomainNameLabelScope;
        /// <summary>
        /// The Dns name label for the IP.
        /// </summary>
        public readonly string? DnsNameLabel;
        /// <summary>
        /// The FQDN for the IP.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// The IP exposed to the public internet.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// The list of ports exposed on the container group.
        /// </summary>
        public readonly ImmutableArray<Outputs.PortResponse> Ports;
        /// <summary>
        /// Specifies if the IP is exposed to the public internet or private VNET.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private IpAddressResponse(
            string? autoGeneratedDomainNameLabelScope,

            string? dnsNameLabel,

            string fqdn,

            string? ip,

            ImmutableArray<Outputs.PortResponse> ports,

            string type)
        {
            AutoGeneratedDomainNameLabelScope = autoGeneratedDomainNameLabelScope;
            DnsNameLabel = dnsNameLabel;
            Fqdn = fqdn;
            Ip = ip;
            Ports = ports;
            Type = type;
        }
    }
}
