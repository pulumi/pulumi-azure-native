// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerInstance.V20170801Preview.Outputs
{

    [OutputType]
    public sealed class ContainerGroupResponseProperties
    {
        /// <summary>
        /// The containers within the container group.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerResponse> Containers;
        /// <summary>
        /// The image registry credentials by which the container group is created from.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageRegistryCredentialResponse> ImageRegistryCredentials;
        /// <summary>
        /// The IP address type of the container group.
        /// </summary>
        public readonly Outputs.IpAddressResponse? IpAddress;
        /// <summary>
        /// The operating system type required by the containers in the container group.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The provisioning state of the container group. This only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Restart policy for all containers within the container group. Currently the only available option is `always`.
        /// </summary>
        public readonly string? RestartPolicy;
        /// <summary>
        /// The current state of the container group. This is only valid for the response.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The list of volumes that can be mounted by containers in this container group.
        /// </summary>
        public readonly ImmutableArray<Outputs.VolumeResponse> Volumes;

        [OutputConstructor]
        private ContainerGroupResponseProperties(
            ImmutableArray<Outputs.ContainerResponse> containers,

            ImmutableArray<Outputs.ImageRegistryCredentialResponse> imageRegistryCredentials,

            Outputs.IpAddressResponse? ipAddress,

            string osType,

            string provisioningState,

            string? restartPolicy,

            string state,

            ImmutableArray<Outputs.VolumeResponse> volumes)
        {
            Containers = containers;
            ImageRegistryCredentials = imageRegistryCredentials;
            IpAddress = ipAddress;
            OsType = osType;
            ProvisioningState = provisioningState;
            RestartPolicy = restartPolicy;
            State = state;
            Volumes = volumes;
        }
    }
}
