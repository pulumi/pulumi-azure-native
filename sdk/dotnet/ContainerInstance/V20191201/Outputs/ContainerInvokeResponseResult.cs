// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerInstance.V20191201.Outputs
{

    [OutputType]
    public sealed class ContainerInvokeResponseResult
    {
        /// <summary>
        /// The commands to execute within the container instance in exec form.
        /// </summary>
        public readonly ImmutableArray<string> Command;
        /// <summary>
        /// The environment variables to set in the container instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.EnvironmentVariableInvokeResponseResult> EnvironmentVariables;
        /// <summary>
        /// The name of the image used to create the container instance.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The instance view of the container instance. Only valid in response.
        /// </summary>
        public readonly Outputs.ContainerPropertiesInvokeResponseInstanceViewResult InstanceView;
        /// <summary>
        /// The liveness probe.
        /// </summary>
        public readonly Outputs.ContainerProbeInvokeResponseResult? LivenessProbe;
        /// <summary>
        /// The user-provided name of the container instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The exposed ports on the container instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerPortInvokeResponseResult> Ports;
        /// <summary>
        /// The readiness probe.
        /// </summary>
        public readonly Outputs.ContainerProbeInvokeResponseResult? ReadinessProbe;
        /// <summary>
        /// The resource requirements of the container instance.
        /// </summary>
        public readonly Outputs.ResourceRequirementsInvokeResponseResult Resources;
        /// <summary>
        /// The volume mounts available to the container instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.VolumeMountInvokeResponseResult> VolumeMounts;

        [OutputConstructor]
        private ContainerInvokeResponseResult(
            ImmutableArray<string> command,

            ImmutableArray<Outputs.EnvironmentVariableInvokeResponseResult> environmentVariables,

            string image,

            Outputs.ContainerPropertiesInvokeResponseInstanceViewResult instanceView,

            Outputs.ContainerProbeInvokeResponseResult? livenessProbe,

            string name,

            ImmutableArray<Outputs.ContainerPortInvokeResponseResult> ports,

            Outputs.ContainerProbeInvokeResponseResult? readinessProbe,

            Outputs.ResourceRequirementsInvokeResponseResult resources,

            ImmutableArray<Outputs.VolumeMountInvokeResponseResult> volumeMounts)
        {
            Command = command;
            EnvironmentVariables = environmentVariables;
            Image = image;
            InstanceView = instanceView;
            LivenessProbe = livenessProbe;
            Name = name;
            Ports = ports;
            ReadinessProbe = readinessProbe;
            Resources = resources;
            VolumeMounts = volumeMounts;
        }
    }
}
