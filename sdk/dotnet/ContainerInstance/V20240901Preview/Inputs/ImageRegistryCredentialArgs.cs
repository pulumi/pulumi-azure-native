// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerInstance.V20240901Preview.Inputs
{

    /// <summary>
    /// Image registry credential.
    /// </summary>
    public sealed class ImageRegistryCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identity for the private registry.
        /// </summary>
        [Input("identity")]
        public Input<string>? Identity { get; set; }

        /// <summary>
        /// The identity URL for the private registry.
        /// </summary>
        [Input("identityUrl")]
        public Input<string>? IdentityUrl { get; set; }

        /// <summary>
        /// The password for the private registry.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The Docker image registry server without a protocol such as "http" and "https".
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// The username for the private registry.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ImageRegistryCredentialArgs()
        {
        }
        public static new ImageRegistryCredentialArgs Empty => new ImageRegistryCredentialArgs();
    }
}
