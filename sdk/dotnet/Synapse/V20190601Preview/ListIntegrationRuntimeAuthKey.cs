// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Synapse.V20190601Preview
{
    public static class ListIntegrationRuntimeAuthKey
    {
        public static Task<ListIntegrationRuntimeAuthKeyResult> InvokeAsync(ListIntegrationRuntimeAuthKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListIntegrationRuntimeAuthKeyResult>("azure-nextgen:synapse/v20190601preview:listIntegrationRuntimeAuthKey", args ?? new ListIntegrationRuntimeAuthKeyArgs(), options.WithVersion());
    }


    public sealed class ListIntegrationRuntimeAuthKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Integration runtime name
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public string IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public ListIntegrationRuntimeAuthKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListIntegrationRuntimeAuthKeyResult
    {
        /// <summary>
        /// The primary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey1;
        /// <summary>
        /// The secondary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey2;

        [OutputConstructor]
        private ListIntegrationRuntimeAuthKeyResult(
            string? authKey1,

            string? authKey2)
        {
            AuthKey1 = authKey1;
            AuthKey2 = authKey2;
        }
    }
}
