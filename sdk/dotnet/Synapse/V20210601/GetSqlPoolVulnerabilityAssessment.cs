// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse.V20210601
{
    public static class GetSqlPoolVulnerabilityAssessment
    {
        /// <summary>
        /// Gets the Sql pool's vulnerability assessment.
        /// </summary>
        public static Task<GetSqlPoolVulnerabilityAssessmentResult> InvokeAsync(GetSqlPoolVulnerabilityAssessmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlPoolVulnerabilityAssessmentResult>("azure-native:synapse/v20210601:getSqlPoolVulnerabilityAssessment", args ?? new GetSqlPoolVulnerabilityAssessmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Sql pool's vulnerability assessment.
        /// </summary>
        public static Output<GetSqlPoolVulnerabilityAssessmentResult> Invoke(GetSqlPoolVulnerabilityAssessmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlPoolVulnerabilityAssessmentResult>("azure-native:synapse/v20210601:getSqlPoolVulnerabilityAssessment", args ?? new GetSqlPoolVulnerabilityAssessmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlPoolVulnerabilityAssessmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SQL pool name
        /// </summary>
        [Input("sqlPoolName", required: true)]
        public string SqlPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the vulnerability assessment.
        /// </summary>
        [Input("vulnerabilityAssessmentName", required: true)]
        public string VulnerabilityAssessmentName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetSqlPoolVulnerabilityAssessmentArgs()
        {
        }
        public static new GetSqlPoolVulnerabilityAssessmentArgs Empty => new GetSqlPoolVulnerabilityAssessmentArgs();
    }

    public sealed class GetSqlPoolVulnerabilityAssessmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SQL pool name
        /// </summary>
        [Input("sqlPoolName", required: true)]
        public Input<string> SqlPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the vulnerability assessment.
        /// </summary>
        [Input("vulnerabilityAssessmentName", required: true)]
        public Input<string> VulnerabilityAssessmentName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetSqlPoolVulnerabilityAssessmentInvokeArgs()
        {
        }
        public static new GetSqlPoolVulnerabilityAssessmentInvokeArgs Empty => new GetSqlPoolVulnerabilityAssessmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlPoolVulnerabilityAssessmentResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The recurring scans settings
        /// </summary>
        public readonly Outputs.VulnerabilityAssessmentRecurringScansPropertiesResponse? RecurringScans;
        /// <summary>
        /// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set
        /// </summary>
        public readonly string? StorageContainerPath;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlPoolVulnerabilityAssessmentResult(
            string id,

            string name,

            Outputs.VulnerabilityAssessmentRecurringScansPropertiesResponse? recurringScans,

            string? storageContainerPath,

            string type)
        {
            Id = id;
            Name = name;
            RecurringScans = recurringScans;
            StorageContainerPath = storageContainerPath;
            Type = type;
        }
    }
}
