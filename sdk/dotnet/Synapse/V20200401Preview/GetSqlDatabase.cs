// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse.V20200401Preview
{
    [Obsolete(@"Version 2020-04-01-preview will be removed in v2 of the provider.")]
    public static class GetSqlDatabase
    {
        /// <summary>
        /// A sql database resource.
        /// </summary>
        public static Task<GetSqlDatabaseResult> InvokeAsync(GetSqlDatabaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSqlDatabaseResult>("azure-native:synapse/v20200401preview:getSqlDatabase", args ?? new GetSqlDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// A sql database resource.
        /// </summary>
        public static Output<GetSqlDatabaseResult> Invoke(GetSqlDatabaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSqlDatabaseResult>("azure-native:synapse/v20200401preview:getSqlDatabase", args ?? new GetSqlDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlDatabaseArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the sql database.
        /// </summary>
        [Input("sqlDatabaseName", required: true)]
        public string SqlDatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetSqlDatabaseArgs()
        {
        }
    }

    public sealed class GetSqlDatabaseInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the sql database.
        /// </summary>
        [Input("sqlDatabaseName", required: true)]
        public Input<string> SqlDatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetSqlDatabaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSqlDatabaseResult
    {
        /// <summary>
        /// The collation of the database.
        /// </summary>
        public readonly string? Collation;
        /// <summary>
        /// Sql database data retention.
        /// </summary>
        public readonly Outputs.SqlDatabaseDataRetentionResponse? DataRetention;
        /// <summary>
        /// The Guid of the database.
        /// </summary>
        public readonly string DatabaseGuid;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the database.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The storage redundancy of the database.
        /// </summary>
        public readonly string? StorageRedundancy;
        /// <summary>
        /// SystemData of SqlDatabase.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlDatabaseResult(
            string? collation,

            Outputs.SqlDatabaseDataRetentionResponse? dataRetention,

            string databaseGuid,

            string id,

            string location,

            string name,

            string status,

            string? storageRedundancy,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Collation = collation;
            DataRetention = dataRetention;
            DatabaseGuid = databaseGuid;
            Id = id;
            Location = location;
            Name = name;
            Status = status;
            StorageRedundancy = storageRedundancy;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
