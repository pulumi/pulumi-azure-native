// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse.V20210601Preview.Outputs
{

    /// <summary>
    /// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
    /// </summary>
    [OutputType]
    public sealed class ManagedIntegrationRuntimeResponse
    {
        /// <summary>
        /// The compute resource for managed integration runtime.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeComputePropertiesResponse? ComputeProperties;
        /// <summary>
        /// Integration runtime description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The id of the managed virtual network.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The reference name of the managed virtual network.
        /// </summary>
        public readonly string? ReferenceName;
        /// <summary>
        /// SSIS properties for managed integration runtime.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeSsisPropertiesResponse? SsisProperties;
        /// <summary>
        /// Integration runtime state, only valid for managed dedicated integration runtime.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of integration runtime.
        /// Expected value is 'Managed'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ManagedIntegrationRuntimeResponse(
            Outputs.IntegrationRuntimeComputePropertiesResponse? computeProperties,

            string? description,

            string? id,

            string? referenceName,

            Outputs.IntegrationRuntimeSsisPropertiesResponse? ssisProperties,

            string state,

            string type)
        {
            ComputeProperties = computeProperties;
            Description = description;
            Id = id;
            ReferenceName = referenceName;
            SsisProperties = ssisProperties;
            State = state;
            Type = type;
        }
    }
}
