// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse.V20210601Preview.Outputs
{

    /// <summary>
    /// Self-hosted integration runtime status.
    /// </summary>
    [OutputType]
    public sealed class SelfHostedIntegrationRuntimeStatusResponse
    {
        /// <summary>
        /// Whether Self-hosted integration runtime auto update has been turned on.
        /// </summary>
        public readonly string AutoUpdate;
        /// <summary>
        /// The estimated time when the self-hosted integration runtime will be updated.
        /// </summary>
        public readonly string AutoUpdateETA;
        /// <summary>
        /// Object with additional information about integration runtime capabilities.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Capabilities;
        /// <summary>
        /// The time at which the integration runtime was created, in ISO8601 format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The workspace name which the integration runtime belong to.
        /// </summary>
        public readonly string DataFactoryName;
        /// <summary>
        /// It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
        /// </summary>
        public readonly string InternalChannelEncryption;
        /// <summary>
        /// The latest version on download center.
        /// </summary>
        public readonly string LatestVersion;
        /// <summary>
        /// The list of linked integration runtimes that are created to share with this integration runtime.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkedIntegrationRuntimeResponse> Links;
        /// <summary>
        /// The local time zone offset in hours.
        /// </summary>
        public readonly string LocalTimeZoneOffset;
        /// <summary>
        /// The newer versions on download center.
        /// </summary>
        public readonly ImmutableArray<string> NewerVersions;
        /// <summary>
        /// The node communication Channel encryption mode
        /// </summary>
        public readonly string NodeCommunicationChannelEncryptionMode;
        /// <summary>
        /// The list of nodes for this integration runtime.
        /// </summary>
        public readonly ImmutableArray<Outputs.SelfHostedIntegrationRuntimeNodeResponse> Nodes;
        public readonly int OsType;
        /// <summary>
        /// The version that the integration runtime is going to update to.
        /// </summary>
        public readonly string PushedVersion;
        /// <summary>
        /// The date at which the integration runtime will be scheduled to update, in ISO8601 format.
        /// </summary>
        public readonly string ScheduledUpdateDate;
        /// <summary>
        /// The service region of the integration runtime
        /// </summary>
        public readonly string? ServiceRegion;
        /// <summary>
        /// The URLs for the services used in integration runtime backend service.
        /// </summary>
        public readonly ImmutableArray<string> ServiceUrls;
        /// <summary>
        /// The state of integration runtime.
        /// </summary>
        public readonly string State;
        public readonly int TargetFramework;
        /// <summary>
        /// The task queue id of the integration runtime.
        /// </summary>
        public readonly string TaskQueueId;
        /// <summary>
        /// The type of integration runtime.
        /// Expected value is 'SelfHosted'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
        /// </summary>
        public readonly string UpdateDelayOffset;
        /// <summary>
        /// Version of the integration runtime.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// Status of the integration runtime version.
        /// </summary>
        public readonly string VersionStatus;

        [OutputConstructor]
        private SelfHostedIntegrationRuntimeStatusResponse(
            string autoUpdate,

            string autoUpdateETA,

            ImmutableDictionary<string, string> capabilities,

            string createTime,

            string dataFactoryName,

            string internalChannelEncryption,

            string latestVersion,

            ImmutableArray<Outputs.LinkedIntegrationRuntimeResponse> links,

            string localTimeZoneOffset,

            ImmutableArray<string> newerVersions,

            string nodeCommunicationChannelEncryptionMode,

            ImmutableArray<Outputs.SelfHostedIntegrationRuntimeNodeResponse> nodes,

            int osType,

            string pushedVersion,

            string scheduledUpdateDate,

            string? serviceRegion,

            ImmutableArray<string> serviceUrls,

            string state,

            int targetFramework,

            string taskQueueId,

            string type,

            string updateDelayOffset,

            string version,

            string versionStatus)
        {
            AutoUpdate = autoUpdate;
            AutoUpdateETA = autoUpdateETA;
            Capabilities = capabilities;
            CreateTime = createTime;
            DataFactoryName = dataFactoryName;
            InternalChannelEncryption = internalChannelEncryption;
            LatestVersion = latestVersion;
            Links = links;
            LocalTimeZoneOffset = localTimeZoneOffset;
            NewerVersions = newerVersions;
            NodeCommunicationChannelEncryptionMode = nodeCommunicationChannelEncryptionMode;
            Nodes = nodes;
            OsType = osType;
            PushedVersion = pushedVersion;
            ScheduledUpdateDate = scheduledUpdateDate;
            ServiceRegion = serviceRegion;
            ServiceUrls = serviceUrls;
            State = state;
            TargetFramework = targetFramework;
            TaskQueueId = taskQueueId;
            Type = type;
            UpdateDelayOffset = updateDelayOffset;
            Version = version;
            VersionStatus = versionStatus;
        }
    }
}
