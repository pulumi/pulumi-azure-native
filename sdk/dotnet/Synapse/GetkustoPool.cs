// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse
{
    public static class GetkustoPool
    {
        /// <summary>
        /// Class representing a Kusto kusto pool.
        /// API Version: 2021-04-01-preview.
        /// </summary>
        public static Task<GetkustoPoolResult> InvokeAsync(GetkustoPoolArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetkustoPoolResult>("azure-native:synapse:getkustoPool", args ?? new GetkustoPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Class representing a Kusto kusto pool.
        /// API Version: 2021-04-01-preview.
        /// </summary>
        public static Output<GetkustoPoolResult> Invoke(GetkustoPoolInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetkustoPoolResult>("azure-native:synapse:getkustoPool", args ?? new GetkustoPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetkustoPoolArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto pool.
        /// </summary>
        [Input("kustoPoolName", required: true)]
        public string KustoPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetkustoPoolArgs()
        {
        }
    }

    public sealed class GetkustoPoolInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kusto pool.
        /// </summary>
        [Input("kustoPoolName", required: true)]
        public Input<string> KustoPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetkustoPoolInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetkustoPoolResult
    {
        /// <summary>
        /// The Kusto Pool data ingestion URI.
        /// </summary>
        public readonly string DataIngestionUri;
        /// <summary>
        /// The engine type
        /// </summary>
        public readonly string? EngineType;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioned state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The SKU of the kusto pool.
        /// </summary>
        public readonly Outputs.AzureSkuResponse Sku;
        /// <summary>
        /// The state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The reason for the Kusto Pool's current state.
        /// </summary>
        public readonly string StateReason;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The Kusto Pool URI.
        /// </summary>
        public readonly string Uri;
        /// <summary>
        /// The workspace unique identifier.
        /// </summary>
        public readonly string? WorkspaceUid;

        [OutputConstructor]
        private GetkustoPoolResult(
            string dataIngestionUri,

            string? engineType,

            string etag,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.AzureSkuResponse sku,

            string state,

            string stateReason,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string uri,

            string? workspaceUid)
        {
            DataIngestionUri = dataIngestionUri;
            EngineType = engineType;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            State = state;
            StateReason = stateReason;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Uri = uri;
            WorkspaceUid = workspaceUid;
        }
    }
}
