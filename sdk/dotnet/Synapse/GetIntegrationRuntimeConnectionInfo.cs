// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Synapse
{
    public static class GetIntegrationRuntimeConnectionInfo
    {
        /// <summary>
        /// Connection information for encrypting the on-premises data source credentials.
        /// API Version: 2021-03-01.
        /// </summary>
        public static Task<GetIntegrationRuntimeConnectionInfoResult> InvokeAsync(GetIntegrationRuntimeConnectionInfoArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationRuntimeConnectionInfoResult>("azure-native:synapse:getIntegrationRuntimeConnectionInfo", args ?? new GetIntegrationRuntimeConnectionInfoArgs(), options.WithDefaults());

        /// <summary>
        /// Connection information for encrypting the on-premises data source credentials.
        /// API Version: 2021-03-01.
        /// </summary>
        public static Output<GetIntegrationRuntimeConnectionInfoResult> Invoke(GetIntegrationRuntimeConnectionInfoInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIntegrationRuntimeConnectionInfoResult>("azure-native:synapse:getIntegrationRuntimeConnectionInfo", args ?? new GetIntegrationRuntimeConnectionInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntegrationRuntimeConnectionInfoArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Integration runtime name
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public string IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetIntegrationRuntimeConnectionInfoArgs()
        {
        }
    }

    public sealed class GetIntegrationRuntimeConnectionInfoInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Integration runtime name
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public Input<string> IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetIntegrationRuntimeConnectionInfoInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIntegrationRuntimeConnectionInfoResult
    {
        /// <summary>
        /// The on-premises integration runtime host URL.
        /// </summary>
        public readonly string HostServiceUri;
        /// <summary>
        /// The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.
        /// </summary>
        public readonly string IdentityCertThumbprint;
        /// <summary>
        /// Whether the identity certificate is expired.
        /// </summary>
        public readonly bool IsIdentityCertExprired;
        /// <summary>
        /// The public key for encrypting a credential when transferring the credential to the integration runtime.
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// The token generated in service. Callers use this token to authenticate to integration runtime.
        /// </summary>
        public readonly string ServiceToken;
        /// <summary>
        /// The integration runtime version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetIntegrationRuntimeConnectionInfoResult(
            string hostServiceUri,

            string identityCertThumbprint,

            bool isIdentityCertExprired,

            string publicKey,

            string serviceToken,

            string version)
        {
            HostServiceUri = hostServiceUri;
            IdentityCertThumbprint = identityCertThumbprint;
            IsIdentityCertExprired = isIdentityCertExprired;
            PublicKey = publicKey;
            ServiceToken = serviceToken;
            Version = version;
        }
    }
}
