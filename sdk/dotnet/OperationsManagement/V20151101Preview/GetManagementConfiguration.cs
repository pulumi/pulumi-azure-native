// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.OperationsManagement.V20151101Preview
{
    public static class GetManagementConfiguration
    {
        public static Task<GetManagementConfigurationResult> InvokeAsync(GetManagementConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagementConfigurationResult>("azure-nextgen:operationsmanagement/v20151101preview:getManagementConfiguration", args ?? new GetManagementConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetManagementConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// User Management Configuration Name.
        /// </summary>
        [Input("managementConfigurationName", required: true)]
        public string ManagementConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to get. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagementConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagementConfigurationResult
    {
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties for ManagementConfiguration object supported by the OperationsManagement resource provider.
        /// </summary>
        public readonly Outputs.ManagementConfigurationPropertiesResponse Properties;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagementConfigurationResult(
            string? location,

            string name,

            Outputs.ManagementConfigurationPropertiesResponse properties,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
