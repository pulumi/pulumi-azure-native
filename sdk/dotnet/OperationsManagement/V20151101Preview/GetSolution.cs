// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.OperationsManagement.V20151101Preview
{
    public static class GetSolution
    {
        public static Task<GetSolutionResult> InvokeAsync(GetSolutionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSolutionResult>("azure-nextgen:operationsmanagement/v20151101preview:getSolution", args ?? new GetSolutionArgs(), options.WithVersion());
    }


    public sealed class GetSolutionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group to get. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// User Solution Name.
        /// </summary>
        [Input("solutionName", required: true)]
        public string SolutionName { get; set; } = null!;

        public GetSolutionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSolutionResult
    {
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Plan for solution object supported by the OperationsManagement resource provider.
        /// </summary>
        public readonly Outputs.SolutionPlanResponse? Plan;
        /// <summary>
        /// Properties for solution object supported by the OperationsManagement resource provider.
        /// </summary>
        public readonly Outputs.SolutionPropertiesResponse Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSolutionResult(
            string? location,

            string name,

            Outputs.SolutionPlanResponse? plan,

            Outputs.SolutionPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Location = location;
            Name = name;
            Plan = plan;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
