// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HDInsight.V20180601Preview.Outputs
{

    [OutputType]
    public sealed class ClusterGetPropertiesInvokeResponseResult
    {
        /// <summary>
        /// The cluster definition.
        /// </summary>
        public readonly Outputs.ClusterDefinitionInvokeResponseResult ClusterDefinition;
        /// <summary>
        /// The hdp version of the cluster.
        /// </summary>
        public readonly string? ClusterHdpVersion;
        /// <summary>
        /// The cluster id.
        /// </summary>
        public readonly string? ClusterId;
        /// <summary>
        /// The state of the cluster.
        /// </summary>
        public readonly string? ClusterState;
        /// <summary>
        /// The version of the cluster.
        /// </summary>
        public readonly string? ClusterVersion;
        /// <summary>
        /// The compute isolation properties.
        /// </summary>
        public readonly Outputs.ComputeIsolationPropertiesInvokeResponseResult? ComputeIsolationProperties;
        /// <summary>
        /// The compute profile.
        /// </summary>
        public readonly Outputs.ComputeProfileInvokeResponseResult? ComputeProfile;
        /// <summary>
        /// The list of connectivity endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectivityEndpointInvokeResponseResult> ConnectivityEndpoints;
        /// <summary>
        /// The date on which the cluster was created.
        /// </summary>
        public readonly string? CreatedDate;
        /// <summary>
        /// The disk encryption properties.
        /// </summary>
        public readonly Outputs.DiskEncryptionPropertiesInvokeResponseResult? DiskEncryptionProperties;
        /// <summary>
        /// The encryption-in-transit properties.
        /// </summary>
        public readonly Outputs.EncryptionInTransitPropertiesInvokeResponseResult? EncryptionInTransitProperties;
        /// <summary>
        /// The list of errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.ErrorsInvokeResponseResult> Errors;
        /// <summary>
        /// The excluded services config.
        /// </summary>
        public readonly Outputs.ExcludedServicesConfigInvokeResponseResult? ExcludedServicesConfig;
        /// <summary>
        /// The cluster kafka rest proxy configuration.
        /// </summary>
        public readonly Outputs.KafkaRestPropertiesInvokeResponseResult? KafkaRestProperties;
        /// <summary>
        /// The minimal supported tls version.
        /// </summary>
        public readonly string? MinSupportedTlsVersion;
        /// <summary>
        /// The network properties.
        /// </summary>
        public readonly Outputs.NetworkPropertiesInvokeResponseResult? NetworkProperties;
        /// <summary>
        /// The type of operating system.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// The quota information.
        /// </summary>
        public readonly Outputs.QuotaInfoInvokeResponseResult? QuotaInfo;
        /// <summary>
        /// The security profile.
        /// </summary>
        public readonly Outputs.SecurityProfileInvokeResponseResult? SecurityProfile;
        /// <summary>
        /// The storage profile.
        /// </summary>
        public readonly Outputs.StorageProfileInvokeResponseResult? StorageProfile;
        /// <summary>
        /// The cluster tier.
        /// </summary>
        public readonly string? Tier;

        [OutputConstructor]
        private ClusterGetPropertiesInvokeResponseResult(
            Outputs.ClusterDefinitionInvokeResponseResult clusterDefinition,

            string? clusterHdpVersion,

            string? clusterId,

            string? clusterState,

            string? clusterVersion,

            Outputs.ComputeIsolationPropertiesInvokeResponseResult? computeIsolationProperties,

            Outputs.ComputeProfileInvokeResponseResult? computeProfile,

            ImmutableArray<Outputs.ConnectivityEndpointInvokeResponseResult> connectivityEndpoints,

            string? createdDate,

            Outputs.DiskEncryptionPropertiesInvokeResponseResult? diskEncryptionProperties,

            Outputs.EncryptionInTransitPropertiesInvokeResponseResult? encryptionInTransitProperties,

            ImmutableArray<Outputs.ErrorsInvokeResponseResult> errors,

            Outputs.ExcludedServicesConfigInvokeResponseResult? excludedServicesConfig,

            Outputs.KafkaRestPropertiesInvokeResponseResult? kafkaRestProperties,

            string? minSupportedTlsVersion,

            Outputs.NetworkPropertiesInvokeResponseResult? networkProperties,

            string? osType,

            string? provisioningState,

            Outputs.QuotaInfoInvokeResponseResult? quotaInfo,

            Outputs.SecurityProfileInvokeResponseResult? securityProfile,

            Outputs.StorageProfileInvokeResponseResult? storageProfile,

            string? tier)
        {
            ClusterDefinition = clusterDefinition;
            ClusterHdpVersion = clusterHdpVersion;
            ClusterId = clusterId;
            ClusterState = clusterState;
            ClusterVersion = clusterVersion;
            ComputeIsolationProperties = computeIsolationProperties;
            ComputeProfile = computeProfile;
            ConnectivityEndpoints = connectivityEndpoints;
            CreatedDate = createdDate;
            DiskEncryptionProperties = diskEncryptionProperties;
            EncryptionInTransitProperties = encryptionInTransitProperties;
            Errors = errors;
            ExcludedServicesConfig = excludedServicesConfig;
            KafkaRestProperties = kafkaRestProperties;
            MinSupportedTlsVersion = minSupportedTlsVersion;
            NetworkProperties = networkProperties;
            OsType = osType;
            ProvisioningState = provisioningState;
            QuotaInfo = quotaInfo;
            SecurityProfile = securityProfile;
            StorageProfile = storageProfile;
            Tier = tier;
        }
    }
}
