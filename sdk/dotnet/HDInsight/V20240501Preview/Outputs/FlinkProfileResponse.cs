// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20240501Preview.Outputs
{

    /// <summary>
    /// The Flink cluster profile.
    /// </summary>
    [OutputType]
    public sealed class FlinkProfileResponse
    {
        /// <summary>
        /// Flink cluster catalog options.
        /// </summary>
        public readonly Outputs.FlinkCatalogOptionsResponse? CatalogOptions;
        /// <summary>
        /// A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values =&gt; Application, Session. Default value is Session
        /// </summary>
        public readonly string? DeploymentMode;
        /// <summary>
        /// History Server container/ process CPU and memory requirements
        /// </summary>
        public readonly Outputs.ComputeResourceDefinitionResponse? HistoryServer;
        /// <summary>
        /// Job Manager container/ process CPU and memory requirements
        /// </summary>
        public readonly Outputs.ComputeResourceDefinitionResponse JobManager;
        /// <summary>
        /// Job specifications for flink clusters in application deployment mode. The specification is immutable even if job properties are changed by calling the RunJob API, please use the ListJob API to get the latest job information.
        /// </summary>
        public readonly Outputs.FlinkJobProfileResponse? JobSpec;
        /// <summary>
        /// The number of task managers.
        /// </summary>
        public readonly int? NumReplicas;
        /// <summary>
        /// The storage profile
        /// </summary>
        public readonly Outputs.FlinkStorageProfileResponse Storage;
        /// <summary>
        /// Task Manager container/ process CPU and memory requirements
        /// </summary>
        public readonly Outputs.ComputeResourceDefinitionResponse TaskManager;

        [OutputConstructor]
        private FlinkProfileResponse(
            Outputs.FlinkCatalogOptionsResponse? catalogOptions,

            string? deploymentMode,

            Outputs.ComputeResourceDefinitionResponse? historyServer,

            Outputs.ComputeResourceDefinitionResponse jobManager,

            Outputs.FlinkJobProfileResponse? jobSpec,

            int? numReplicas,

            Outputs.FlinkStorageProfileResponse storage,

            Outputs.ComputeResourceDefinitionResponse taskManager)
        {
            CatalogOptions = catalogOptions;
            DeploymentMode = deploymentMode;
            HistoryServer = historyServer;
            JobManager = jobManager;
            JobSpec = jobSpec;
            NumReplicas = numReplicas;
            Storage = storage;
            TaskManager = taskManager;
        }
    }
}
