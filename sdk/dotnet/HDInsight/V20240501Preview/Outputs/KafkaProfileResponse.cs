// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20240501Preview.Outputs
{

    /// <summary>
    /// The Kafka cluster profile.
    /// </summary>
    [OutputType]
    public sealed class KafkaProfileResponse
    {
        /// <summary>
        /// Kafka bootstrap server and brokers related connectivity endpoints.
        /// </summary>
        public readonly Outputs.KafkaConnectivityEndpointsResponse ConnectivityEndpoints;
        /// <summary>
        /// Kafka disk storage profile.
        /// </summary>
        public readonly Outputs.DiskStorageProfileResponse DiskStorage;
        /// <summary>
        /// Expose Kafka cluster in KRaft mode.
        /// </summary>
        public readonly bool? EnableKRaft;
        /// <summary>
        /// Expose worker nodes as public endpoints.
        /// </summary>
        public readonly bool? EnablePublicEndpoints;
        /// <summary>
        /// Fully qualified path of Azure Storage container used for Tiered Storage.
        /// </summary>
        public readonly string? RemoteStorageUri;

        [OutputConstructor]
        private KafkaProfileResponse(
            Outputs.KafkaConnectivityEndpointsResponse connectivityEndpoints,

            Outputs.DiskStorageProfileResponse diskStorage,

            bool? enableKRaft,

            bool? enablePublicEndpoints,

            string? remoteStorageUri)
        {
            ConnectivityEndpoints = connectivityEndpoints;
            DiskStorage = diskStorage;
            EnableKRaft = enableKRaft;
            EnablePublicEndpoints = enablePublicEndpoints;
            RemoteStorageUri = remoteStorageUri;
        }
    }
}
