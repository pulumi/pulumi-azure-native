// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20240501Preview.Inputs
{

    /// <summary>
    /// This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale.
    /// </summary>
    public sealed class AutoscaleProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
        /// </summary>
        [Input("autoscaleType")]
        public InputUnion<string, Pulumi.AzureNative.HDInsight.V20240501Preview.AutoscaleType>? AutoscaleType { get; set; }

        /// <summary>
        /// This indicates whether auto scale is enabled on HDInsight on AKS cluster.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.
        /// </summary>
        [Input("gracefulDecommissionTimeout")]
        public Input<int>? GracefulDecommissionTimeout { get; set; }

        /// <summary>
        /// Profiles of load based Autoscale.
        /// </summary>
        [Input("loadBasedConfig")]
        public Input<Inputs.LoadBasedConfigArgs>? LoadBasedConfig { get; set; }

        /// <summary>
        /// Profiles of schedule based Autoscale.
        /// </summary>
        [Input("scheduleBasedConfig")]
        public Input<Inputs.ScheduleBasedConfigArgs>? ScheduleBasedConfig { get; set; }

        public AutoscaleProfileArgs()
        {
        }
        public static new AutoscaleProfileArgs Empty => new AutoscaleProfileArgs();
    }
}
