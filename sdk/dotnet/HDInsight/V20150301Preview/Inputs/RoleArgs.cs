// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HDInsight.V20150301Preview.Inputs
{

    /// <summary>
    /// Describes a role on the cluster.
    /// </summary>
    public sealed class RoleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The autoscale configurations.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.AutoscaleArgs>? AutoscaleConfiguration { get; set; }

        [Input("dataDisksGroups")]
        private InputList<Inputs.DataDisksGroupsArgs>? _dataDisksGroups;

        /// <summary>
        /// The data disks groups for the role.
        /// </summary>
        public InputList<Inputs.DataDisksGroupsArgs> DataDisksGroups
        {
            get => _dataDisksGroups ?? (_dataDisksGroups = new InputList<Inputs.DataDisksGroupsArgs>());
            set => _dataDisksGroups = value;
        }

        /// <summary>
        /// The hardware profile.
        /// </summary>
        [Input("hardwareProfile")]
        public Input<Inputs.HardwareProfileArgs>? HardwareProfile { get; set; }

        /// <summary>
        /// The minimum instance count of the cluster.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The operating system profile.
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.OsProfileArgs>? OsProfile { get; set; }

        [Input("scriptActions")]
        private InputList<Inputs.ScriptActionArgs>? _scriptActions;

        /// <summary>
        /// The list of script actions on the role.
        /// </summary>
        public InputList<Inputs.ScriptActionArgs> ScriptActions
        {
            get => _scriptActions ?? (_scriptActions = new InputList<Inputs.ScriptActionArgs>());
            set => _scriptActions = value;
        }

        /// <summary>
        /// The instance count of the cluster.
        /// </summary>
        [Input("targetInstanceCount")]
        public Input<int>? TargetInstanceCount { get; set; }

        /// <summary>
        /// The virtual network profile.
        /// </summary>
        [Input("virtualNetworkProfile")]
        public Input<Inputs.VirtualNetworkProfileArgs>? VirtualNetworkProfile { get; set; }

        public RoleArgs()
        {
        }
    }
}
