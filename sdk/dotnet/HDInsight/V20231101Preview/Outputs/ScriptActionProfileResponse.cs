// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20231101Preview.Outputs
{

    /// <summary>
    /// The script action profile.
    /// </summary>
    [OutputType]
    public sealed class ScriptActionProfileResponse
    {
        /// <summary>
        /// Script name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Additional parameters for the script action. It should be space-separated list of arguments required for script execution.
        /// </summary>
        public readonly string? Parameters;
        /// <summary>
        /// List of services to apply the script action.
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// Specify if the script should persist on the cluster.
        /// </summary>
        public readonly bool? ShouldPersist;
        /// <summary>
        /// Timeout duration for the script action in minutes.
        /// </summary>
        public readonly int? TimeoutInMinutes;
        /// <summary>
        /// Type of the script action. Supported type is bash scripts.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Url of the script file.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private ScriptActionProfileResponse(
            string name,

            string? parameters,

            ImmutableArray<string> services,

            bool? shouldPersist,

            int? timeoutInMinutes,

            string type,

            string url)
        {
            Name = name;
            Parameters = parameters;
            Services = services;
            ShouldPersist = shouldPersist;
            TimeoutInMinutes = timeoutInMinutes;
            Type = type;
            Url = url;
        }
    }
}
