// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20231101Preview.Inputs
{

    /// <summary>
    /// Profile of load based Autoscale.
    /// </summary>
    public sealed class LoadBasedConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it. The default value is 300 seconds.
        /// </summary>
        [Input("cooldownPeriod")]
        public Input<int>? CooldownPeriod { get; set; }

        /// <summary>
        /// User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Input("maxNodes", required: true)]
        public Input<int> MaxNodes { get; set; } = null!;

        /// <summary>
        /// User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Input("minNodes", required: true)]
        public Input<int> MinNodes { get; set; } = null!;

        /// <summary>
        /// User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation.
        /// </summary>
        [Input("pollInterval")]
        public Input<int>? PollInterval { get; set; }

        [Input("scalingRules", required: true)]
        private InputList<Inputs.ScalingRuleArgs>? _scalingRules;

        /// <summary>
        /// The scaling rules.
        /// </summary>
        public InputList<Inputs.ScalingRuleArgs> ScalingRules
        {
            get => _scalingRules ?? (_scalingRules = new InputList<Inputs.ScalingRuleArgs>());
            set => _scalingRules = value;
        }

        public LoadBasedConfigArgs()
        {
        }
        public static new LoadBasedConfigArgs Empty => new LoadBasedConfigArgs();
    }
}
