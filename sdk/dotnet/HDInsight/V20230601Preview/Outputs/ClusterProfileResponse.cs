// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20230601Preview.Outputs
{

    /// <summary>
    /// Cluster profile.
    /// </summary>
    [OutputType]
    public sealed class ClusterProfileResponse
    {
        /// <summary>
        /// Authorization profile with details of AAD user Ids and group Ids authorized for data plane access.
        /// </summary>
        public readonly Outputs.AuthorizationProfileResponse AuthorizationProfile;
        /// <summary>
        /// This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale.
        /// </summary>
        public readonly Outputs.AutoscaleProfileResponse? AutoscaleProfile;
        /// <summary>
        /// Version with 3/4 part.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// Component list of this cluster type and version.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterProfileResponseComponents> Components;
        /// <summary>
        /// Cluster connectivity profile.
        /// </summary>
        public readonly Outputs.ConnectivityProfileResponse ConnectivityProfile;
        /// <summary>
        /// The Flink cluster profile.
        /// </summary>
        public readonly Outputs.FlinkProfileResponse? FlinkProfile;
        /// <summary>
        /// Identity Profile with details of an MSI.
        /// </summary>
        public readonly Outputs.IdentityProfileResponse IdentityProfile;
        /// <summary>
        /// Kafka cluster profile.
        /// </summary>
        public readonly object? KafkaProfile;
        /// <summary>
        /// LLAP cluster profile.
        /// </summary>
        public readonly object? LlapProfile;
        /// <summary>
        /// Cluster log analytics profile to enable or disable OMS agent for cluster.
        /// </summary>
        public readonly Outputs.ClusterLogAnalyticsProfileResponse? LogAnalyticsProfile;
        /// <summary>
        /// Version with three part.
        /// </summary>
        public readonly string OssVersion;
        /// <summary>
        /// Cluster Prometheus profile.
        /// </summary>
        public readonly Outputs.ClusterPrometheusProfileResponse? PrometheusProfile;
        /// <summary>
        /// The script action profile list.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScriptActionProfileResponse> ScriptActionProfiles;
        /// <summary>
        /// The cluster secret profile.
        /// </summary>
        public readonly Outputs.SecretsProfileResponse? SecretsProfile;
        /// <summary>
        /// The service configs profiles.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterServiceConfigsProfileResponse> ServiceConfigsProfiles;
        /// <summary>
        /// The spark cluster profile.
        /// </summary>
        public readonly Outputs.SparkProfileResponse? SparkProfile;
        /// <summary>
        /// Ssh profile for the cluster.
        /// </summary>
        public readonly Outputs.SshProfileResponse? SshProfile;
        /// <summary>
        /// Stub cluster profile.
        /// </summary>
        public readonly object? StubProfile;
        /// <summary>
        /// Trino Cluster profile.
        /// </summary>
        public readonly Outputs.TrinoProfileResponse? TrinoProfile;

        [OutputConstructor]
        private ClusterProfileResponse(
            Outputs.AuthorizationProfileResponse authorizationProfile,

            Outputs.AutoscaleProfileResponse? autoscaleProfile,

            string clusterVersion,

            ImmutableArray<Outputs.ClusterProfileResponseComponents> components,

            Outputs.ConnectivityProfileResponse connectivityProfile,

            Outputs.FlinkProfileResponse? flinkProfile,

            Outputs.IdentityProfileResponse identityProfile,

            object? kafkaProfile,

            object? llapProfile,

            Outputs.ClusterLogAnalyticsProfileResponse? logAnalyticsProfile,

            string ossVersion,

            Outputs.ClusterPrometheusProfileResponse? prometheusProfile,

            ImmutableArray<Outputs.ScriptActionProfileResponse> scriptActionProfiles,

            Outputs.SecretsProfileResponse? secretsProfile,

            ImmutableArray<Outputs.ClusterServiceConfigsProfileResponse> serviceConfigsProfiles,

            Outputs.SparkProfileResponse? sparkProfile,

            Outputs.SshProfileResponse? sshProfile,

            object? stubProfile,

            Outputs.TrinoProfileResponse? trinoProfile)
        {
            AuthorizationProfile = authorizationProfile;
            AutoscaleProfile = autoscaleProfile;
            ClusterVersion = clusterVersion;
            Components = components;
            ConnectivityProfile = connectivityProfile;
            FlinkProfile = flinkProfile;
            IdentityProfile = identityProfile;
            KafkaProfile = kafkaProfile;
            LlapProfile = llapProfile;
            LogAnalyticsProfile = logAnalyticsProfile;
            OssVersion = ossVersion;
            PrometheusProfile = prometheusProfile;
            ScriptActionProfiles = scriptActionProfiles;
            SecretsProfile = secretsProfile;
            ServiceConfigsProfiles = serviceConfigsProfiles;
            SparkProfile = sparkProfile;
            SshProfile = sshProfile;
            StubProfile = stubProfile;
            TrinoProfile = trinoProfile;
        }
    }
}
