// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight
{
    public static class GetClusterPool
    {
        /// <summary>
        /// Gets a cluster pool.
        /// Azure REST API version: 2023-06-01-preview.
        /// 
        /// Other available API versions: 2023-11-01-preview, 2024-05-01-preview.
        /// </summary>
        public static Task<GetClusterPoolResult> InvokeAsync(GetClusterPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterPoolResult>("azure-native:hdinsight:getClusterPool", args ?? new GetClusterPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a cluster pool.
        /// Azure REST API version: 2023-06-01-preview.
        /// 
        /// Other available API versions: 2023-11-01-preview, 2024-05-01-preview.
        /// </summary>
        public static Output<GetClusterPoolResult> Invoke(GetClusterPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterPoolResult>("azure-native:hdinsight:getClusterPool", args ?? new GetClusterPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster pool.
        /// </summary>
        [Input("clusterPoolName", required: true)]
        public string ClusterPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClusterPoolArgs()
        {
        }
        public static new GetClusterPoolArgs Empty => new GetClusterPoolArgs();
    }

    public sealed class GetClusterPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster pool.
        /// </summary>
        [Input("clusterPoolName", required: true)]
        public Input<string> ClusterPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetClusterPoolInvokeArgs()
        {
        }
        public static new GetClusterPoolInvokeArgs Empty => new GetClusterPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterPoolResult
    {
        /// <summary>
        /// Properties of underlying AKS cluster.
        /// </summary>
        public readonly Outputs.ClusterPoolResourcePropertiesResponseAksClusterProfile AksClusterProfile;
        /// <summary>
        /// A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}
        /// </summary>
        public readonly string AksManagedResourceGroupName;
        /// <summary>
        /// CLuster pool profile.
        /// </summary>
        public readonly Outputs.ClusterPoolResourcePropertiesResponseClusterPoolProfile? ClusterPoolProfile;
        /// <summary>
        /// CLuster pool compute profile.
        /// </summary>
        public readonly Outputs.ClusterPoolResourcePropertiesResponseComputeProfile ComputeProfile;
        /// <summary>
        /// A unique id generated by the RP to identify the resource.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Cluster pool log analytics profile to enable OMS agent for AKS cluster.
        /// </summary>
        public readonly Outputs.ClusterPoolResourcePropertiesResponseLogAnalyticsProfile? LogAnalyticsProfile;
        /// <summary>
        /// A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it meets resource group name restriction.
        /// </summary>
        public readonly string? ManagedResourceGroupName;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Cluster pool network profile.
        /// </summary>
        public readonly Outputs.ClusterPoolResourcePropertiesResponseNetworkProfile? NetworkProfile;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Business status of the resource.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetClusterPoolResult(
            Outputs.ClusterPoolResourcePropertiesResponseAksClusterProfile aksClusterProfile,

            string aksManagedResourceGroupName,

            Outputs.ClusterPoolResourcePropertiesResponseClusterPoolProfile? clusterPoolProfile,

            Outputs.ClusterPoolResourcePropertiesResponseComputeProfile computeProfile,

            string deploymentId,

            string id,

            string location,

            Outputs.ClusterPoolResourcePropertiesResponseLogAnalyticsProfile? logAnalyticsProfile,

            string? managedResourceGroupName,

            string name,

            Outputs.ClusterPoolResourcePropertiesResponseNetworkProfile? networkProfile,

            string provisioningState,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AksClusterProfile = aksClusterProfile;
            AksManagedResourceGroupName = aksManagedResourceGroupName;
            ClusterPoolProfile = clusterPoolProfile;
            ComputeProfile = computeProfile;
            DeploymentId = deploymentId;
            Id = id;
            Location = location;
            LogAnalyticsProfile = logAnalyticsProfile;
            ManagedResourceGroupName = managedResourceGroupName;
            Name = name;
            NetworkProfile = networkProfile;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
