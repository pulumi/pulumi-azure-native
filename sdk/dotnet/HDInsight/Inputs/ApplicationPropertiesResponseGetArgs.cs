// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.HDInsight.Inputs
{

    /// <summary>
    /// The HDInsight cluster application GET response.
    /// </summary>
    public sealed class ApplicationPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application state.
        /// </summary>
        [Input("applicationState", required: true)]
        public Input<string> ApplicationState { get; set; } = null!;

        /// <summary>
        /// The application type.
        /// </summary>
        [Input("applicationType")]
        public Input<string>? ApplicationType { get; set; }

        /// <summary>
        /// The list of roles in the cluster.
        /// </summary>
        [Input("computeProfile")]
        public Input<Inputs.ComputeProfileResponseGetArgs>? ComputeProfile { get; set; }

        /// <summary>
        /// The application create date time.
        /// </summary>
        [Input("createdDate", required: true)]
        public Input<string> CreatedDate { get; set; } = null!;

        [Input("errors")]
        private InputList<Inputs.ErrorsResponseGetArgs>? _errors;

        /// <summary>
        /// The list of errors.
        /// </summary>
        public InputList<Inputs.ErrorsResponseGetArgs> Errors
        {
            get => _errors ?? (_errors = new InputList<Inputs.ErrorsResponseGetArgs>());
            set => _errors = value;
        }

        [Input("httpsEndpoints")]
        private InputList<Inputs.ApplicationGetHttpsEndpointResponseGetArgs>? _httpsEndpoints;

        /// <summary>
        /// The list of application HTTPS endpoints.
        /// </summary>
        public InputList<Inputs.ApplicationGetHttpsEndpointResponseGetArgs> HttpsEndpoints
        {
            get => _httpsEndpoints ?? (_httpsEndpoints = new InputList<Inputs.ApplicationGetHttpsEndpointResponseGetArgs>());
            set => _httpsEndpoints = value;
        }

        [Input("installScriptActions")]
        private InputList<Inputs.RuntimeScriptActionResponseGetArgs>? _installScriptActions;

        /// <summary>
        /// The list of install script actions.
        /// </summary>
        public InputList<Inputs.RuntimeScriptActionResponseGetArgs> InstallScriptActions
        {
            get => _installScriptActions ?? (_installScriptActions = new InputList<Inputs.RuntimeScriptActionResponseGetArgs>());
            set => _installScriptActions = value;
        }

        /// <summary>
        /// The marketplace identifier.
        /// </summary>
        [Input("marketplaceIdentifier", required: true)]
        public Input<string> MarketplaceIdentifier { get; set; } = null!;

        /// <summary>
        /// The provisioning state of the application.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        [Input("sshEndpoints")]
        private InputList<Inputs.ApplicationGetEndpointResponseGetArgs>? _sshEndpoints;

        /// <summary>
        /// The list of application SSH endpoints.
        /// </summary>
        public InputList<Inputs.ApplicationGetEndpointResponseGetArgs> SshEndpoints
        {
            get => _sshEndpoints ?? (_sshEndpoints = new InputList<Inputs.ApplicationGetEndpointResponseGetArgs>());
            set => _sshEndpoints = value;
        }

        [Input("uninstallScriptActions")]
        private InputList<Inputs.RuntimeScriptActionResponseGetArgs>? _uninstallScriptActions;

        /// <summary>
        /// The list of uninstall script actions.
        /// </summary>
        public InputList<Inputs.RuntimeScriptActionResponseGetArgs> UninstallScriptActions
        {
            get => _uninstallScriptActions ?? (_uninstallScriptActions = new InputList<Inputs.RuntimeScriptActionResponseGetArgs>());
            set => _uninstallScriptActions = value;
        }

        public ApplicationPropertiesResponseGetArgs()
        {
        }
    }
}
