// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HDInsight.V20240801Preview.Outputs
{

    /// <summary>
    /// The ip configurations for the private link service.
    /// </summary>
    [OutputType]
    public sealed class IPConfigurationResponse
    {
        /// <summary>
        /// The private link IP configuration id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of private link IP configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Indicates whether this IP configuration is primary for the corresponding NIC.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// The IP address.
        /// </summary>
        public readonly string? PrivateIPAddress;
        /// <summary>
        /// The method that private IP address is allocated.
        /// </summary>
        public readonly string? PrivateIPAllocationMethod;
        /// <summary>
        /// The private link configuration provisioning state, which only appears in the response.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The subnet resource id.
        /// </summary>
        public readonly Outputs.ResourceIdResponse? Subnet;
        /// <summary>
        /// The type of the private link IP configuration.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private IPConfigurationResponse(
            string id,

            string name,

            bool? primary,

            string? privateIPAddress,

            string? privateIPAllocationMethod,

            string provisioningState,

            Outputs.ResourceIdResponse? subnet,

            string type)
        {
            Id = id;
            Name = name;
            Primary = primary;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            ProvisioningState = provisioningState;
            Subnet = subnet;
            Type = type;
        }
    }
}
