// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Easm
{
    public static class GetLabelByWorkspace
    {
        /// <summary>
        /// Returns a label in the given workspace.
        /// API Version: 2023-04-01-preview.
        /// </summary>
        public static Task<GetLabelByWorkspaceResult> InvokeAsync(GetLabelByWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLabelByWorkspaceResult>("azure-native:easm:getLabelByWorkspace", args ?? new GetLabelByWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a label in the given workspace.
        /// API Version: 2023-04-01-preview.
        /// </summary>
        public static Output<GetLabelByWorkspaceResult> Invoke(GetLabelByWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLabelByWorkspaceResult>("azure-native:easm:getLabelByWorkspace", args ?? new GetLabelByWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLabelByWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Label.
        /// </summary>
        [Input("labelName", required: true)]
        public string LabelName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetLabelByWorkspaceArgs()
        {
        }
        public static new GetLabelByWorkspaceArgs Empty => new GetLabelByWorkspaceArgs();
    }

    public sealed class GetLabelByWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Label.
        /// </summary>
        [Input("labelName", required: true)]
        public Input<string> LabelName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetLabelByWorkspaceInvokeArgs()
        {
        }
        public static new GetLabelByWorkspaceInvokeArgs Empty => new GetLabelByWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetLabelByWorkspaceResult
    {
        /// <summary>
        /// Label color.
        /// </summary>
        public readonly string? Color;
        /// <summary>
        /// Label display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLabelByWorkspaceResult(
            string? color,

            string? displayName,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Color = color;
            DisplayName = displayName;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
