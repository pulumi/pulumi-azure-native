// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerRegistry.V20230801Preview.Outputs
{

    /// <summary>
    /// The policies for a container registry.
    /// </summary>
    [OutputType]
    public sealed class PoliciesResponse
    {
        /// <summary>
        /// The policy for using ARM audience token for a container registry.
        /// </summary>
        public readonly Outputs.AzureADAuthenticationAsArmPolicyResponse? AzureADAuthenticationAsArmPolicy;
        /// <summary>
        /// The export policy for a container registry.
        /// </summary>
        public readonly Outputs.ExportPolicyResponse? ExportPolicy;
        /// <summary>
        /// The quarantine policy for a container registry.
        /// </summary>
        public readonly Outputs.QuarantinePolicyResponse? QuarantinePolicy;
        /// <summary>
        /// The retention policy for a container registry.
        /// </summary>
        public readonly Outputs.RetentionPolicyResponse? RetentionPolicy;
        /// <summary>
        /// The soft delete policy for a container registry.
        /// </summary>
        public readonly Outputs.SoftDeletePolicyResponse? SoftDeletePolicy;
        /// <summary>
        /// The content trust policy for a container registry.
        /// </summary>
        public readonly Outputs.TrustPolicyResponse? TrustPolicy;

        [OutputConstructor]
        private PoliciesResponse(
            Outputs.AzureADAuthenticationAsArmPolicyResponse? azureADAuthenticationAsArmPolicy,

            Outputs.ExportPolicyResponse? exportPolicy,

            Outputs.QuarantinePolicyResponse? quarantinePolicy,

            Outputs.RetentionPolicyResponse? retentionPolicy,

            Outputs.SoftDeletePolicyResponse? softDeletePolicy,

            Outputs.TrustPolicyResponse? trustPolicy)
        {
            AzureADAuthenticationAsArmPolicy = azureADAuthenticationAsArmPolicy;
            ExportPolicy = exportPolicy;
            QuarantinePolicy = quarantinePolicy;
            RetentionPolicy = retentionPolicy;
            SoftDeletePolicy = softDeletePolicy;
            TrustPolicy = trustPolicy;
        }
    }
}
