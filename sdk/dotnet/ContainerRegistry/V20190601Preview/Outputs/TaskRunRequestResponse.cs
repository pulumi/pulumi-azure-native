// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20190601Preview.Outputs
{

    [OutputType]
    public sealed class TaskRunRequestResponse
    {
        /// <summary>
        /// The dedicated agent pool for the run.
        /// </summary>
        public readonly string? AgentPoolName;
        /// <summary>
        /// The value that indicates whether archiving is enabled for the run or not.
        /// </summary>
        public readonly bool? IsArchiveEnabled;
        /// <summary>
        /// The template that describes the repository and tag information for run log artifact.
        /// </summary>
        public readonly string? LogTemplate;
        /// <summary>
        /// Set of overridable parameters that can be passed when running a Task.
        /// </summary>
        public readonly Outputs.OverrideTaskStepPropertiesResponse? OverrideTaskStepProperties;
        /// <summary>
        /// The resource ID of task against which run has to be queued.
        /// </summary>
        public readonly string TaskId;
        /// <summary>
        /// The type of the run request.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private TaskRunRequestResponse(
            string? agentPoolName,

            bool? isArchiveEnabled,

            string? logTemplate,

            Outputs.OverrideTaskStepPropertiesResponse? overrideTaskStepProperties,

            string taskId,

            string type)
        {
            AgentPoolName = agentPoolName;
            IsArchiveEnabled = isArchiveEnabled;
            LogTemplate = logTemplate;
            OverrideTaskStepProperties = overrideTaskStepProperties;
            TaskId = taskId;
            Type = type;
        }
    }
}
