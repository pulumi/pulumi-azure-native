// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20190601Preview
{
    public static class ListTaskDetails
    {
        public static Task<ListTaskDetailsResult> InvokeAsync(ListTaskDetailsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListTaskDetailsResult>("azure-nextgen:containerregistry/v20190601preview:listTaskDetails", args ?? new ListTaskDetailsArgs(), options.WithVersion());
    }


    public sealed class ListTaskDetailsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the container registry task.
        /// </summary>
        [Input("taskName", required: true)]
        public string TaskName { get; set; } = null!;

        public ListTaskDetailsArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListTaskDetailsResult
    {
        /// <summary>
        /// The machine configuration of the run agent.
        /// </summary>
        public readonly Outputs.AgentPropertiesResponse? AgentConfiguration;
        /// <summary>
        /// The dedicated agent pool for the task.
        /// </summary>
        public readonly string? AgentPoolName;
        /// <summary>
        /// The creation date of task.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The properties that describes a set of credentials that will be used when this run is invoked.
        /// </summary>
        public readonly Outputs.CredentialsResponse? Credentials;
        /// <summary>
        /// Identity for the resource.
        /// </summary>
        public readonly Outputs.IdentityPropertiesResponse? Identity;
        /// <summary>
        /// The value of this property indicates whether the task resource is system task or not.
        /// </summary>
        public readonly bool? IsSystemTask;
        /// <summary>
        /// The location of the resource. This cannot be changed after the resource is created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The template that describes the repository and tag information for run log artifact.
        /// </summary>
        public readonly string? LogTemplate;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The platform properties against which the run has to happen.
        /// </summary>
        public readonly Outputs.PlatformPropertiesResponse? Platform;
        /// <summary>
        /// The provisioning state of the task.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The current status of task.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The properties of a task step.
        /// </summary>
        public readonly Union<Outputs.DockerBuildStepResponse, Union<Outputs.EncodedTaskStepResponse, Outputs.FileTaskStepResponse>>? Step;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Run timeout in seconds.
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// The properties that describe all triggers for the task.
        /// </summary>
        public readonly Outputs.TriggerPropertiesResponse? Trigger;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ListTaskDetailsResult(
            Outputs.AgentPropertiesResponse? agentConfiguration,

            string? agentPoolName,

            string creationDate,

            Outputs.CredentialsResponse? credentials,

            Outputs.IdentityPropertiesResponse? identity,

            bool? isSystemTask,

            string location,

            string? logTemplate,

            string name,

            Outputs.PlatformPropertiesResponse? platform,

            string provisioningState,

            string? status,

            Union<Outputs.DockerBuildStepResponse, Union<Outputs.EncodedTaskStepResponse, Outputs.FileTaskStepResponse>>? step,

            ImmutableDictionary<string, string>? tags,

            int? timeout,

            Outputs.TriggerPropertiesResponse? trigger,

            string type)
        {
            AgentConfiguration = agentConfiguration;
            AgentPoolName = agentPoolName;
            CreationDate = creationDate;
            Credentials = credentials;
            Identity = identity;
            IsSystemTask = isSystemTask;
            Location = location;
            LogTemplate = logTemplate;
            Name = name;
            Platform = platform;
            ProvisioningState = provisioningState;
            Status = status;
            Step = step;
            Tags = tags;
            Timeout = timeout;
            Trigger = trigger;
            Type = type;
        }
    }
}
