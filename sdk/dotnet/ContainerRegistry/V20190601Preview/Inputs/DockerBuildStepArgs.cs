// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20190601Preview.Inputs
{

    /// <summary>
    /// The Docker build step.
    /// </summary>
    public sealed class DockerBuildStepArgs : Pulumi.ResourceArgs
    {
        [Input("arguments")]
        private InputList<Inputs.ArgumentArgs>? _arguments;

        /// <summary>
        /// The collection of override arguments to be used when executing this build step.
        /// </summary>
        public InputList<Inputs.ArgumentArgs> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<Inputs.ArgumentArgs>());
            set => _arguments = value;
        }

        /// <summary>
        /// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
        /// </summary>
        [Input("contextAccessToken")]
        public Input<string>? ContextAccessToken { get; set; }

        /// <summary>
        /// The URL(absolute or relative) of the source context for the task step.
        /// </summary>
        [Input("contextPath")]
        public Input<string>? ContextPath { get; set; }

        /// <summary>
        /// The Docker file path relative to the source context.
        /// </summary>
        [Input("dockerFilePath", required: true)]
        public Input<string> DockerFilePath { get; set; } = null!;

        [Input("imageNames")]
        private InputList<string>? _imageNames;

        /// <summary>
        /// The fully qualified image names including the repository and tag.
        /// </summary>
        public InputList<string> ImageNames
        {
            get => _imageNames ?? (_imageNames = new InputList<string>());
            set => _imageNames = value;
        }

        /// <summary>
        /// The value of this property indicates whether the image built should be pushed to the registry or not.
        /// </summary>
        [Input("isPushEnabled")]
        public Input<bool>? IsPushEnabled { get; set; }

        /// <summary>
        /// The value of this property indicates whether the image cache is enabled or not.
        /// </summary>
        [Input("noCache")]
        public Input<bool>? NoCache { get; set; }

        /// <summary>
        /// The name of the target build stage for the docker build.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        /// <summary>
        /// The type of the step.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DockerBuildStepArgs()
        {
        }
    }
}
