// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerRegistry.V20231101Preview
{
    /// <summary>
    /// An object that represents a archive for a container registry.
    /// </summary>
    [AzureNativeResourceType("azure-native:containerregistry/v20231101preview:Archife")]
    public partial class Archife : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The package source of the archive.
        /// </summary>
        [Output("packageSource")]
        public Output<Outputs.ArchivePackageSourcePropertiesResponse?> PackageSource { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the archive at the time the operation was called.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The published version of the archive.
        /// </summary>
        [Output("publishedVersion")]
        public Output<string?> PublishedVersion { get; private set; } = null!;

        [Output("repositoryEndpoint")]
        public Output<string> RepositoryEndpoint { get; private set; } = null!;

        [Output("repositoryEndpointPrefix")]
        public Output<string?> RepositoryEndpointPrefix { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Archife resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Archife(string name, ArchifeArgs args, CustomResourceOptions? options = null)
            : base("azure-native:containerregistry/v20231101preview:Archife", name, args ?? new ArchifeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Archife(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:containerregistry/v20231101preview:Archife", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:containerregistry:Archife" },
                    new global::Pulumi.Alias { Type = "azure-native:containerregistry/v20230601preview:Archife" },
                    new global::Pulumi.Alias { Type = "azure-native:containerregistry/v20230801preview:Archife" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Archife resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Archife Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Archife(name, id, options);
        }
    }

    public sealed class ArchifeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the archive resource.
        /// </summary>
        [Input("archiveName")]
        public Input<string>? ArchiveName { get; set; }

        /// <summary>
        /// The package source of the archive.
        /// </summary>
        [Input("packageSource")]
        public Input<Inputs.ArchivePackageSourcePropertiesArgs>? PackageSource { get; set; }

        /// <summary>
        /// The type of the package resource.
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        /// <summary>
        /// The published version of the archive.
        /// </summary>
        [Input("publishedVersion")]
        public Input<string>? PublishedVersion { get; set; }

        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public Input<string> RegistryName { get; set; } = null!;

        [Input("repositoryEndpointPrefix")]
        public Input<string>? RepositoryEndpointPrefix { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ArchifeArgs()
        {
        }
        public static new ArchifeArgs Empty => new ArchifeArgs();
    }
}
