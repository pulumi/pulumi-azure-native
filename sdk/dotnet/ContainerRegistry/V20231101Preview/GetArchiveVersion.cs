// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerRegistry.V20231101Preview
{
    public static class GetArchiveVersion
    {
        /// <summary>
        /// Gets the properties of the archive version.
        /// </summary>
        public static Task<GetArchiveVersionResult> InvokeAsync(GetArchiveVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetArchiveVersionResult>("azure-native:containerregistry/v20231101preview:getArchiveVersion", args ?? new GetArchiveVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the properties of the archive version.
        /// </summary>
        public static Output<GetArchiveVersionResult> Invoke(GetArchiveVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetArchiveVersionResult>("azure-native:containerregistry/v20231101preview:getArchiveVersion", args ?? new GetArchiveVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArchiveVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the archive resource.
        /// </summary>
        [Input("archiveName", required: true)]
        public string ArchiveName { get; set; } = null!;

        /// <summary>
        /// The name of the archive version resource.
        /// </summary>
        [Input("archiveVersionName", required: true)]
        public string ArchiveVersionName { get; set; } = null!;

        /// <summary>
        /// The type of the package resource.
        /// </summary>
        [Input("packageType", required: true)]
        public string PackageType { get; set; } = null!;

        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArchiveVersionArgs()
        {
        }
        public static new GetArchiveVersionArgs Empty => new GetArchiveVersionArgs();
    }

    public sealed class GetArchiveVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the archive resource.
        /// </summary>
        [Input("archiveName", required: true)]
        public Input<string> ArchiveName { get; set; } = null!;

        /// <summary>
        /// The name of the archive version resource.
        /// </summary>
        [Input("archiveVersionName", required: true)]
        public Input<string> ArchiveVersionName { get; set; } = null!;

        /// <summary>
        /// The type of the package resource.
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public Input<string> RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetArchiveVersionInvokeArgs()
        {
        }
        public static new GetArchiveVersionInvokeArgs Empty => new GetArchiveVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetArchiveVersionResult
    {
        /// <summary>
        /// The detailed error message for the archive version in the case of failure.
        /// </summary>
        public readonly string? ArchiveVersionErrorMessage;
        /// <summary>
        /// The resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the archive at the time the operation was called.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetArchiveVersionResult(
            string? archiveVersionErrorMessage,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ArchiveVersionErrorMessage = archiveVersionErrorMessage;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
