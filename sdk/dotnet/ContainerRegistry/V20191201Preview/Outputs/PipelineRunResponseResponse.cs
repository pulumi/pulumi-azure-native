// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20191201Preview.Outputs
{

    [OutputType]
    public sealed class PipelineRunResponseResponse
    {
        /// <summary>
        /// The digest of the tar used to transfer the artifacts.
        /// </summary>
        public readonly string? CatalogDigest;
        /// <summary>
        /// The time the pipeline run finished.
        /// </summary>
        public readonly string? FinishTime;
        /// <summary>
        /// The artifacts imported in the pipeline run.
        /// </summary>
        public readonly ImmutableArray<string> ImportedArtifacts;
        /// <summary>
        /// The detailed error message for the pipeline run in the case of failure.
        /// </summary>
        public readonly string? PipelineRunErrorMessage;
        /// <summary>
        /// The current progress of the copy operation.
        /// </summary>
        public readonly Outputs.ProgressPropertiesResponse? Progress;
        /// <summary>
        /// The source of the pipeline run.
        /// </summary>
        public readonly Outputs.ImportPipelineSourcePropertiesResponse? Source;
        /// <summary>
        /// The time the pipeline run started.
        /// </summary>
        public readonly string? StartTime;
        /// <summary>
        /// The current status of the pipeline run.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The target of the pipeline run.
        /// </summary>
        public readonly Outputs.ExportPipelineTargetPropertiesResponse? Target;
        /// <summary>
        /// The trigger that caused the pipeline run.
        /// </summary>
        public readonly Outputs.PipelineTriggerDescriptorResponse? Trigger;

        [OutputConstructor]
        private PipelineRunResponseResponse(
            string? catalogDigest,

            string? finishTime,

            ImmutableArray<string> importedArtifacts,

            string? pipelineRunErrorMessage,

            Outputs.ProgressPropertiesResponse? progress,

            Outputs.ImportPipelineSourcePropertiesResponse? source,

            string? startTime,

            string? status,

            Outputs.ExportPipelineTargetPropertiesResponse? target,

            Outputs.PipelineTriggerDescriptorResponse? trigger)
        {
            CatalogDigest = catalogDigest;
            FinishTime = finishTime;
            ImportedArtifacts = importedArtifacts;
            PipelineRunErrorMessage = pipelineRunErrorMessage;
            Progress = progress;
            Source = source;
            StartTime = startTime;
            Status = status;
            Target = target;
            Trigger = trigger;
        }
    }
}
