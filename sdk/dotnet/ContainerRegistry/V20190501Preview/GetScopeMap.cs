// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20190501Preview
{
    public static class GetScopeMap
    {
        public static Task<GetScopeMapResult> InvokeAsync(GetScopeMapArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScopeMapResult>("azure-nextgen:containerregistry/v20190501preview:getScopeMap", args ?? new GetScopeMapArgs(), options.WithVersion());
    }


    public sealed class GetScopeMapArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the scope map.
        /// </summary>
        [Input("scopeMapName", required: true)]
        public string ScopeMapName { get; set; } = null!;

        public GetScopeMapArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScopeMapResult
    {
        /// <summary>
        /// The list of scoped permissions for registry artifacts.
        /// E.g. repositories/repository-name/content/read,
        /// repositories/repository-name/metadata/write
        /// </summary>
        public readonly ImmutableArray<string> Actions;
        /// <summary>
        /// The creation date of scope map.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The user friendly description of the scope map.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScopeMapResult(
            ImmutableArray<string> actions,

            string creationDate,

            string? description,

            string name,

            string provisioningState,

            string type)
        {
            Actions = actions;
            CreationDate = creationDate;
            Description = description;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
