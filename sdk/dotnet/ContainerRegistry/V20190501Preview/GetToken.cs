// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ContainerRegistry.V20190501Preview
{
    public static class GetToken
    {
        public static Task<GetTokenResult> InvokeAsync(GetTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTokenResult>("azure-nextgen:containerregistry/v20190501preview:getToken", args ?? new GetTokenArgs(), options.WithVersion());
    }


    public sealed class GetTokenArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the token.
        /// </summary>
        [Input("tokenName", required: true)]
        public string TokenName { get; set; } = null!;

        public GetTokenArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTokenResult
    {
        /// <summary>
        /// The creation date of scope map.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The credentials that can be used for authenticating the token.
        /// </summary>
        public readonly Outputs.TokenCredentialsPropertiesResponse? Credentials;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource ID of the scope map to which the token will be associated with.
        /// </summary>
        public readonly string? ScopeMapId;
        /// <summary>
        /// The status of the token example enabled or disabled.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTokenResult(
            string creationDate,

            Outputs.TokenCredentialsPropertiesResponse? credentials,

            string name,

            string provisioningState,

            string? scopeMapId,

            string? status,

            string type)
        {
            CreationDate = creationDate;
            Credentials = credentials;
            Name = name;
            ProvisioningState = provisioningState;
            ScopeMapId = scopeMapId;
            Status = status;
            Type = type;
        }
    }
}
