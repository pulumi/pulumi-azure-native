// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ContainerRegistry.Inputs
{

    /// <summary>
    /// The properties of a task.
    /// </summary>
    public sealed class TaskPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The machine configuration of the run agent.
        /// </summary>
        [Input("agentConfiguration")]
        public Input<Inputs.AgentPropertiesResponseGetArgs>? AgentConfiguration { get; set; }

        /// <summary>
        /// The creation date of task.
        /// </summary>
        [Input("creationDate", required: true)]
        public Input<string> CreationDate { get; set; } = null!;

        /// <summary>
        /// The properties that describes a set of credentials that will be used when this run is invoked.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.CredentialsResponseGetArgs>? Credentials { get; set; }

        /// <summary>
        /// The platform properties against which the run has to happen.
        /// </summary>
        [Input("platform", required: true)]
        public Input<Inputs.PlatformPropertiesResponseGetArgs> Platform { get; set; } = null!;

        /// <summary>
        /// The provisioning state of the task.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The current status of task.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The properties of a task step.
        /// </summary>
        [Input("step", required: true)]
        public Input<Inputs.TaskStepPropertiesResponseGetArgs> Step { get; set; } = null!;

        /// <summary>
        /// Run timeout in seconds.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The properties that describe all triggers for the task.
        /// </summary>
        [Input("trigger")]
        public Input<Inputs.TriggerPropertiesResponseGetArgs>? Trigger { get; set; }

        public TaskPropertiesResponseGetArgs()
        {
        }
    }
}
