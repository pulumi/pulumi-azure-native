// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ContainerRegistry.V20180201Preview.Outputs
{

    [OutputType]
    public sealed class DockerBuildStepResponseResult
    {
        /// <summary>
        /// List of base image dependencies for a step.
        /// </summary>
        public readonly ImmutableArray<Outputs.BaseImageDependencyResponseResult> BaseImageDependencies;
        /// <summary>
        /// The type of the auto trigger for base image dependency updates.
        /// </summary>
        public readonly string? BaseImageTrigger;
        /// <summary>
        /// The repository branch name.
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// The custom arguments for building this build step.
        /// </summary>
        public readonly ImmutableArray<Outputs.BuildArgumentResponseResult> BuildArguments;
        /// <summary>
        /// The relative context path for a docker build in the source.
        /// </summary>
        public readonly string? ContextPath;
        /// <summary>
        /// The Docker file path relative to the source control root.
        /// </summary>
        public readonly string? DockerFilePath;
        /// <summary>
        /// The fully qualified image names including the repository and tag.
        /// </summary>
        public readonly ImmutableArray<string> ImageNames;
        /// <summary>
        /// The value of this property indicates whether the image built should be pushed to the registry or not.
        /// </summary>
        public readonly bool? IsPushEnabled;
        /// <summary>
        /// The value of this property indicates whether the image cache is enabled or not.
        /// </summary>
        public readonly bool? NoCache;
        /// <summary>
        /// The provisioning state of the build step.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the step.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private DockerBuildStepResponseResult(
            ImmutableArray<Outputs.BaseImageDependencyResponseResult> baseImageDependencies,

            string? baseImageTrigger,

            string? branch,

            ImmutableArray<Outputs.BuildArgumentResponseResult> buildArguments,

            string? contextPath,

            string? dockerFilePath,

            ImmutableArray<string> imageNames,

            bool? isPushEnabled,

            bool? noCache,

            string provisioningState,

            string type)
        {
            BaseImageDependencies = baseImageDependencies;
            BaseImageTrigger = baseImageTrigger;
            Branch = branch;
            BuildArguments = buildArguments;
            ContextPath = contextPath;
            DockerFilePath = dockerFilePath;
            ImageNames = imageNames;
            IsPushEnabled = isPushEnabled;
            NoCache = noCache;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
