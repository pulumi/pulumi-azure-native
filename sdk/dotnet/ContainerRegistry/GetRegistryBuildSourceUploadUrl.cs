// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ContainerRegistry
{
    public static class GetRegistryBuildSourceUploadUrl
    {
        /// <summary>
        /// The properties of a response to source upload request.
        /// API Version: 2018-02-01-preview.
        /// </summary>
        public static Task<GetRegistryBuildSourceUploadUrlResult> InvokeAsync(GetRegistryBuildSourceUploadUrlArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistryBuildSourceUploadUrlResult>("azure-native:containerregistry:getRegistryBuildSourceUploadUrl", args ?? new GetRegistryBuildSourceUploadUrlArgs(), options.WithDefaults());

        /// <summary>
        /// The properties of a response to source upload request.
        /// API Version: 2018-02-01-preview.
        /// </summary>
        public static Output<GetRegistryBuildSourceUploadUrlResult> Invoke(GetRegistryBuildSourceUploadUrlInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegistryBuildSourceUploadUrlResult>("azure-native:containerregistry:getRegistryBuildSourceUploadUrl", args ?? new GetRegistryBuildSourceUploadUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryBuildSourceUploadUrlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetRegistryBuildSourceUploadUrlArgs()
        {
        }
        public static new GetRegistryBuildSourceUploadUrlArgs Empty => new GetRegistryBuildSourceUploadUrlArgs();
    }

    public sealed class GetRegistryBuildSourceUploadUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public Input<string> RegistryName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetRegistryBuildSourceUploadUrlInvokeArgs()
        {
        }
        public static new GetRegistryBuildSourceUploadUrlInvokeArgs Empty => new GetRegistryBuildSourceUploadUrlInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistryBuildSourceUploadUrlResult
    {
        /// <summary>
        /// The relative path to the source. This is used to submit the subsequent queue build request.
        /// </summary>
        public readonly string? RelativePath;
        /// <summary>
        /// The URL where the client can upload the source.
        /// </summary>
        public readonly string? UploadUrl;

        [OutputConstructor]
        private GetRegistryBuildSourceUploadUrlResult(
            string? relativePath,

            string? uploadUrl)
        {
            RelativePath = relativePath;
            UploadUrl = uploadUrl;
        }
    }
}
