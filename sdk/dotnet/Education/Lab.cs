// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Education
{
    /// <summary>
    /// Lab details.
    /// API Version: 2021-12-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:education:Lab")]
    public partial class Lab : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Default monetary cap for each student in this lab
        /// </summary>
        [Output("budgetPerStudent")]
        public Output<Outputs.AmountResponse> BudgetPerStudent { get; private set; } = null!;

        /// <summary>
        /// The type of currency being used for the value.
        /// </summary>
        [Output("currency")]
        public Output<string?> Currency { get; private set; } = null!;

        /// <summary>
        /// Detail description of this lab
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Lab Display Name
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Lab creation date
        /// </summary>
        [Output("effectiveDate")]
        public Output<string> EffectiveDate { get; private set; } = null!;

        /// <summary>
        /// Default expiration date for each student in this lab
        /// </summary>
        [Output("expirationDate")]
        public Output<string> ExpirationDate { get; private set; } = null!;

        /// <summary>
        /// invitation code for redeemable lab
        /// </summary>
        [Output("invitationCode")]
        public Output<string> InvitationCode { get; private set; } = null!;

        /// <summary>
        /// the total number of students that can be accepted to the lab.
        /// </summary>
        [Output("maxStudentCount")]
        public Output<double> MaxStudentCount { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of this lab
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Amount value.
        /// </summary>
        [Output("value")]
        public Output<double?> Value { get; private set; } = null!;


        /// <summary>
        /// Create a Lab resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lab(string name, LabArgs args, CustomResourceOptions? options = null)
            : base("azure-native:education:Lab", name, args ?? new LabArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Lab(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:education:Lab", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:education/v20211201preview:Lab"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Lab resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Lab Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Lab(name, id, options);
        }
    }

    public sealed class LabArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Billing account name.
        /// </summary>
        [Input("billingAccountName", required: true)]
        public Input<string> BillingAccountName { get; set; } = null!;

        /// <summary>
        /// Billing profile name.
        /// </summary>
        [Input("billingProfileName", required: true)]
        public Input<string> BillingProfileName { get; set; } = null!;

        /// <summary>
        /// Default monetary cap for each student in this lab
        /// </summary>
        [Input("budgetPerStudent", required: true)]
        public Input<Inputs.AmountArgs> BudgetPerStudent { get; set; } = null!;

        /// <summary>
        /// The type of currency being used for the value.
        /// </summary>
        [Input("currency")]
        public Input<string>? Currency { get; set; }

        /// <summary>
        /// Detail description of this lab
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Lab Display Name
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Default expiration date for each student in this lab
        /// </summary>
        [Input("expirationDate", required: true)]
        public Input<string> ExpirationDate { get; set; } = null!;

        /// <summary>
        /// Invoice section name.
        /// </summary>
        [Input("invoiceSectionName", required: true)]
        public Input<string> InvoiceSectionName { get; set; } = null!;

        /// <summary>
        /// Amount value.
        /// </summary>
        [Input("value")]
        public Input<double>? Value { get; set; }

        public LabArgs()
        {
        }
        public static new LabArgs Empty => new LabArgs();
    }
}
