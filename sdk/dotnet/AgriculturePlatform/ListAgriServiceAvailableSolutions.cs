// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AgriculturePlatform
{
    public static class ListAgriServiceAvailableSolutions
    {
        /// <summary>
        /// Returns the list of available agri solutions.
        /// Azure REST API version: 2024-06-01-preview.
        /// </summary>
        public static Task<ListAgriServiceAvailableSolutionsResult> InvokeAsync(ListAgriServiceAvailableSolutionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAgriServiceAvailableSolutionsResult>("azure-native:agricultureplatform:listAgriServiceAvailableSolutions", args ?? new ListAgriServiceAvailableSolutionsArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the list of available agri solutions.
        /// Azure REST API version: 2024-06-01-preview.
        /// </summary>
        public static Output<ListAgriServiceAvailableSolutionsResult> Invoke(ListAgriServiceAvailableSolutionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAgriServiceAvailableSolutionsResult>("azure-native:agricultureplatform:listAgriServiceAvailableSolutions", args ?? new ListAgriServiceAvailableSolutionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the list of available agri solutions.
        /// Azure REST API version: 2024-06-01-preview.
        /// </summary>
        public static Output<ListAgriServiceAvailableSolutionsResult> Invoke(ListAgriServiceAvailableSolutionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListAgriServiceAvailableSolutionsResult>("azure-native:agricultureplatform:listAgriServiceAvailableSolutions", args ?? new ListAgriServiceAvailableSolutionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAgriServiceAvailableSolutionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the AgriService resource.
        /// </summary>
        [Input("agriServiceResourceName", required: true)]
        public string AgriServiceResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListAgriServiceAvailableSolutionsArgs()
        {
        }
        public static new ListAgriServiceAvailableSolutionsArgs Empty => new ListAgriServiceAvailableSolutionsArgs();
    }

    public sealed class ListAgriServiceAvailableSolutionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the AgriService resource.
        /// </summary>
        [Input("agriServiceResourceName", required: true)]
        public Input<string> AgriServiceResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListAgriServiceAvailableSolutionsInvokeArgs()
        {
        }
        public static new ListAgriServiceAvailableSolutionsInvokeArgs Empty => new ListAgriServiceAvailableSolutionsInvokeArgs();
    }


    [OutputType]
    public sealed class ListAgriServiceAvailableSolutionsResult
    {
        /// <summary>
        /// Agri solutions list.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataManagerForAgricultureSolutionResponse> Solutions;

        [OutputConstructor]
        private ListAgriServiceAvailableSolutionsResult(ImmutableArray<Outputs.DataManagerForAgricultureSolutionResponse> solutions)
        {
            Solutions = solutions;
        }
    }
}
