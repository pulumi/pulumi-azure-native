// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EngagementFabric.V20180901Preview
{
    public static class GetChannel
    {
        public static Task<GetChannelResult> InvokeAsync(GetChannelArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetChannelResult>("azure-nextgen:engagementfabric/v20180901preview:getChannel", args ?? new GetChannelArgs(), options.WithVersion());
    }


    public sealed class GetChannelArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Name
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// Channel Name
        /// </summary>
        [Input("channelName", required: true)]
        public string ChannelName { get; set; } = null!;

        /// <summary>
        /// Resource Group Name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetChannelArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetChannelResult
    {
        /// <summary>
        /// The functions to be enabled for the channel
        /// </summary>
        public readonly ImmutableArray<string> ChannelFunctions;
        /// <summary>
        /// The channel type
        /// </summary>
        public readonly string ChannelType;
        /// <summary>
        /// The channel credentials
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Credentials;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The fully qualified type of the resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetChannelResult(
            ImmutableArray<string> channelFunctions,

            string channelType,

            ImmutableDictionary<string, string>? credentials,

            string name,

            string type)
        {
            ChannelFunctions = channelFunctions;
            ChannelType = channelType;
            Credentials = credentials;
            Name = name;
            Type = type;
        }
    }
}
