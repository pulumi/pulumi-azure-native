// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.AppPlatform.Preview.Outputs
{

    [OutputType]
    public sealed class AppResourcePropertiesResponseResult
    {
        /// <summary>
        /// Name of the active deployment of the App
        /// </summary>
        public readonly string? ActiveDeploymentName;
        /// <summary>
        /// Date time when the resource is created
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Fully qualified dns Name.
        /// </summary>
        public readonly string? Fqdn;
        /// <summary>
        /// Indicate if only https is allowed.
        /// </summary>
        public readonly bool? HttpsOnly;
        /// <summary>
        /// Persistent disk settings
        /// </summary>
        public readonly Outputs.PersistentDiskResponseResult? PersistentDisk;
        /// <summary>
        /// Provisioning state of the App
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Indicates whether the App exposes public endpoint
        /// </summary>
        public readonly bool? Public;
        /// <summary>
        /// Temporary disk settings
        /// </summary>
        public readonly Outputs.TemporaryDiskResponseResult? TemporaryDisk;
        /// <summary>
        /// URL of the App
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private AppResourcePropertiesResponseResult(
            string? activeDeploymentName,

            string createdTime,

            string? fqdn,

            bool? httpsOnly,

            Outputs.PersistentDiskResponseResult? persistentDisk,

            string provisioningState,

            bool? @public,

            Outputs.TemporaryDiskResponseResult? temporaryDisk,

            string url)
        {
            ActiveDeploymentName = activeDeploymentName;
            CreatedTime = createdTime;
            Fqdn = fqdn;
            HttpsOnly = httpsOnly;
            PersistentDisk = persistentDisk;
            ProvisioningState = provisioningState;
            Public = @public;
            TemporaryDisk = temporaryDisk;
            Url = url;
        }
    }
}
