// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20230101Preview.Outputs
{

    /// <summary>
    /// API route config of the Spring Cloud Gateway
    /// </summary>
    [OutputType]
    public sealed class GatewayRouteConfigPropertiesResponse
    {
        /// <summary>
        /// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
        /// </summary>
        public readonly string? AppResourceId;
        /// <summary>
        /// To modify the request before sending it to the target endpoint, or the received response in app level.
        /// </summary>
        public readonly ImmutableArray<string> Filters;
        /// <summary>
        /// OpenAPI properties of Spring Cloud Gateway route config.
        /// </summary>
        public readonly Outputs.GatewayRouteConfigOpenApiPropertiesResponse? OpenApi;
        /// <summary>
        /// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
        /// </summary>
        public readonly ImmutableArray<string> Predicates;
        /// <summary>
        /// Protocol of routed Azure Spring Apps applications.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// State of the Spring Cloud Gateway route config.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GatewayApiRouteResponse> Routes;
        /// <summary>
        /// Enable Single Sign-On in app level.
        /// </summary>
        public readonly bool? SsoEnabled;

        [OutputConstructor]
        private GatewayRouteConfigPropertiesResponse(
            string? appResourceId,

            ImmutableArray<string> filters,

            Outputs.GatewayRouteConfigOpenApiPropertiesResponse? openApi,

            ImmutableArray<string> predicates,

            string? protocol,

            string provisioningState,

            ImmutableArray<Outputs.GatewayApiRouteResponse> routes,

            bool? ssoEnabled)
        {
            AppResourceId = appResourceId;
            Filters = filters;
            OpenApi = openApi;
            Predicates = predicates;
            Protocol = protocol;
            ProvisioningState = provisioningState;
            Routes = routes;
            SsoEnabled = ssoEnabled;
        }
    }
}
