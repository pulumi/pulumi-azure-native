// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20230301Preview.Outputs
{

    /// <summary>
    /// Build resource properties payload
    /// </summary>
    [OutputType]
    public sealed class BuildPropertiesResponse
    {
        /// <summary>
        /// The resource id of agent pool
        /// </summary>
        public readonly string? AgentPool;
        /// <summary>
        /// The resource id of builder to build the source code
        /// </summary>
        public readonly string? Builder;
        /// <summary>
        /// The environment variables for this build
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Env;
        /// <summary>
        /// Provisioning state of the KPack build result
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The relative path of source code
        /// </summary>
        public readonly string? RelativePath;
        /// <summary>
        /// The customized build resource for this build
        /// </summary>
        public readonly Outputs.BuildResourceRequestsResponse? ResourceRequests;
        /// <summary>
        ///  The build result triggered by this build
        /// </summary>
        public readonly Outputs.TriggeredBuildResultResponse TriggeredBuildResult;

        [OutputConstructor]
        private BuildPropertiesResponse(
            string? agentPool,

            string? builder,

            ImmutableDictionary<string, string>? env,

            string provisioningState,

            string? relativePath,

            Outputs.BuildResourceRequestsResponse? resourceRequests,

            Outputs.TriggeredBuildResultResponse triggeredBuildResult)
        {
            AgentPool = agentPool;
            Builder = builder;
            Env = env;
            ProvisioningState = provisioningState;
            RelativePath = relativePath;
            ResourceRequests = resourceRequests;
            TriggeredBuildResult = triggeredBuildResult;
        }
    }
}
