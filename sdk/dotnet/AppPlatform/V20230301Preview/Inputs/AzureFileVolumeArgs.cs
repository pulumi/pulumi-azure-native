// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20230301Preview.Inputs
{

    /// <summary>
    /// The properties of the Azure File volume. Azure File shares are mounted as volumes.
    /// </summary>
    public sealed class AzureFileVolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to true, it will create and mount a dedicated directory for every individual app instance.
        /// </summary>
        [Input("enableSubPath")]
        public Input<bool>? EnableSubPath { get; set; }

        [Input("mountOptions")]
        private InputList<string>? _mountOptions;

        /// <summary>
        /// These are the mount options for a persistent disk.
        /// </summary>
        public InputList<string> MountOptions
        {
            get => _mountOptions ?? (_mountOptions = new InputList<string>());
            set => _mountOptions = value;
        }

        /// <summary>
        /// The mount path of the persistent disk.
        /// </summary>
        [Input("mountPath", required: true)]
        public Input<string> MountPath { get; set; } = null!;

        /// <summary>
        /// Indicates whether the persistent disk is a readOnly one.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// The share name of the Azure File share.
        /// </summary>
        [Input("shareName")]
        public Input<string>? ShareName { get; set; }

        /// <summary>
        /// The type of the underlying resource to mount as a persistent disk.
        /// Expected value is 'AzureFileVolume'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AzureFileVolumeArgs()
        {
            EnableSubPath = false;
        }
        public static new AzureFileVolumeArgs Empty => new AzureFileVolumeArgs();
    }
}
