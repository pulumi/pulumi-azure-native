// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20240501Preview.Outputs
{

    /// <summary>
    /// Additional Service settings in vnet injection instance
    /// </summary>
    [OutputType]
    public sealed class ServiceVNetAddonsResponse
    {
        /// <summary>
        /// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
        /// </summary>
        public readonly bool? DataPlanePublicEndpoint;
        /// <summary>
        /// Indicates whether the log stream in vnet injection instance could be accessed from internet.
        /// </summary>
        public readonly bool? LogStreamPublicEndpoint;
        /// <summary>
        /// Fully qualified resource Id of the Private DNS zone to link with the customer virtual network.
        /// </summary>
        public readonly string? PrivateDnsZoneId;
        /// <summary>
        /// Indicates whether the vnet injection service enables private links for backend storage account and container registry.
        /// </summary>
        public readonly string? PrivateStorageAccess;

        [OutputConstructor]
        private ServiceVNetAddonsResponse(
            bool? dataPlanePublicEndpoint,

            bool? logStreamPublicEndpoint,

            string? privateDnsZoneId,

            string? privateStorageAccess)
        {
            DataPlanePublicEndpoint = dataPlanePublicEndpoint;
            LogStreamPublicEndpoint = logStreamPublicEndpoint;
            PrivateDnsZoneId = privateDnsZoneId;
            PrivateStorageAccess = privateStorageAccess;
        }
    }
}
