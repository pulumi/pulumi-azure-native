// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20240501Preview.Outputs
{

    /// <summary>
    /// Config server git properties payload
    /// </summary>
    [OutputType]
    public sealed class ConfigServerPropertiesResponse
    {
        /// <summary>
        /// Settings of config server.
        /// </summary>
        public readonly Outputs.ConfigServerSettingsResponse? ConfigServer;
        /// <summary>
        /// Enabled state of the config server. This is only used in Consumption tier.
        /// </summary>
        public readonly string? EnabledState;
        /// <summary>
        /// Error when apply config server settings.
        /// </summary>
        public readonly Outputs.ErrorResponse? Error;
        /// <summary>
        /// Collection of instances belong to Config Server, only available in Enterprise Plan.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigServerInstanceResponse> Instances;
        /// <summary>
        /// State of the config server.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The requested resource quantity for required CPU and Memory, only available in Enterprise Plan.
        /// </summary>
        public readonly Outputs.ConfigServerResourceRequestsResponse ResourceRequests;

        [OutputConstructor]
        private ConfigServerPropertiesResponse(
            Outputs.ConfigServerSettingsResponse? configServer,

            string? enabledState,

            Outputs.ErrorResponse? error,

            ImmutableArray<Outputs.ConfigServerInstanceResponse> instances,

            string provisioningState,

            Outputs.ConfigServerResourceRequestsResponse resourceRequests)
        {
            ConfigServer = configServer;
            EnabledState = enabledState;
            Error = error;
            Instances = instances;
            ProvisioningState = provisioningState;
            ResourceRequests = resourceRequests;
        }
    }
}
