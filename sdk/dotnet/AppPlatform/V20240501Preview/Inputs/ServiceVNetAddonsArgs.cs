// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20240501Preview.Inputs
{

    /// <summary>
    /// Additional Service settings in vnet injection instance
    /// </summary>
    public sealed class ServiceVNetAddonsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
        /// </summary>
        [Input("dataPlanePublicEndpoint")]
        public Input<bool>? DataPlanePublicEndpoint { get; set; }

        /// <summary>
        /// Indicates whether the log stream in vnet injection instance could be accessed from internet.
        /// </summary>
        [Input("logStreamPublicEndpoint")]
        public Input<bool>? LogStreamPublicEndpoint { get; set; }

        /// <summary>
        /// Fully qualified resource Id of the Private DNS zone to link with the customer virtual network.
        /// </summary>
        [Input("privateDnsZoneId")]
        public Input<string>? PrivateDnsZoneId { get; set; }

        /// <summary>
        /// Indicates whether the vnet injection service enables private links for backend storage account and container registry.
        /// </summary>
        [Input("privateStorageAccess")]
        public InputUnion<string, Pulumi.AzureNative.AppPlatform.V20240501Preview.PrivateStorageAccess>? PrivateStorageAccess { get; set; }

        public ServiceVNetAddonsArgs()
        {
            DataPlanePublicEndpoint = false;
            LogStreamPublicEndpoint = false;
        }
        public static new ServiceVNetAddonsArgs Empty => new ServiceVNetAddonsArgs();
    }
}
