// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20240501Preview
{
    public static class GetDeploymentRemoteDebuggingConfig
    {
        /// <summary>
        /// Get remote debugging config.
        /// </summary>
        public static Task<GetDeploymentRemoteDebuggingConfigResult> InvokeAsync(GetDeploymentRemoteDebuggingConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentRemoteDebuggingConfigResult>("azure-native:appplatform/v20240501preview:getDeploymentRemoteDebuggingConfig", args ?? new GetDeploymentRemoteDebuggingConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Get remote debugging config.
        /// </summary>
        public static Output<GetDeploymentRemoteDebuggingConfigResult> Invoke(GetDeploymentRemoteDebuggingConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentRemoteDebuggingConfigResult>("azure-native:appplatform/v20240501preview:getDeploymentRemoteDebuggingConfig", args ?? new GetDeploymentRemoteDebuggingConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentRemoteDebuggingConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the App resource.
        /// </summary>
        [Input("appName", required: true)]
        public string AppName { get; set; } = null!;

        /// <summary>
        /// The name of the Deployment resource.
        /// </summary>
        [Input("deploymentName", required: true)]
        public string DeploymentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetDeploymentRemoteDebuggingConfigArgs()
        {
        }
        public static new GetDeploymentRemoteDebuggingConfigArgs Empty => new GetDeploymentRemoteDebuggingConfigArgs();
    }

    public sealed class GetDeploymentRemoteDebuggingConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the App resource.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// The name of the Deployment resource.
        /// </summary>
        [Input("deploymentName", required: true)]
        public Input<string> DeploymentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetDeploymentRemoteDebuggingConfigInvokeArgs()
        {
        }
        public static new GetDeploymentRemoteDebuggingConfigInvokeArgs Empty => new GetDeploymentRemoteDebuggingConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentRemoteDebuggingConfigResult
    {
        /// <summary>
        /// Indicate if remote debugging is enabled
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Application debugging port
        /// </summary>
        public readonly int? Port;

        [OutputConstructor]
        private GetDeploymentRemoteDebuggingConfigResult(
            bool? enabled,

            int? port)
        {
            Enabled = enabled;
            Port = port;
        }
    }
}
