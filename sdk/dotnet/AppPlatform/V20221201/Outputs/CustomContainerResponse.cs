// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20221201.Outputs
{

    /// <summary>
    /// Custom container payload
    /// </summary>
    [OutputType]
    public sealed class CustomContainerResponse
    {
        /// <summary>
        /// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
        /// </summary>
        public readonly ImmutableArray<string> Command;
        /// <summary>
        /// Container image of the custom container. This should be in the form of &lt;repository&gt;:&lt;tag&gt; without the server name of the registry
        /// </summary>
        public readonly string? ContainerImage;
        /// <summary>
        /// Credential of the image registry
        /// </summary>
        public readonly Outputs.ImageRegistryCredentialResponse? ImageRegistryCredential;
        /// <summary>
        /// Language framework of the container image uploaded
        /// </summary>
        public readonly string? LanguageFramework;
        /// <summary>
        /// The name of the registry that contains the container image
        /// </summary>
        public readonly string? Server;

        [OutputConstructor]
        private CustomContainerResponse(
            ImmutableArray<string> args,

            ImmutableArray<string> command,

            string? containerImage,

            Outputs.ImageRegistryCredentialResponse? imageRegistryCredential,

            string? languageFramework,

            string? server)
        {
            Args = args;
            Command = command;
            ContainerImage = containerImage;
            ImageRegistryCredential = imageRegistryCredential;
            LanguageFramework = languageFramework;
            Server = server;
        }
    }
}
