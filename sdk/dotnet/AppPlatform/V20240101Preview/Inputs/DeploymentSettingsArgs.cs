// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20240101Preview.Inputs
{

    /// <summary>
    /// Deployment settings payload
    /// </summary>
    public sealed class DeploymentSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("addonConfigs")]
        private InputMap<object>? _addonConfigs;

        /// <summary>
        /// Collection of addons
        /// </summary>
        public InputMap<object> AddonConfigs
        {
            get => _addonConfigs ?? (_addonConfigs = new InputMap<object>());
            set => _addonConfigs = value;
        }

        [Input("apms")]
        private InputList<Inputs.ApmReferenceArgs>? _apms;

        /// <summary>
        /// Collection of ApmReferences
        /// </summary>
        public InputList<Inputs.ApmReferenceArgs> Apms
        {
            get => _apms ?? (_apms = new InputList<Inputs.ApmReferenceArgs>());
            set => _apms = value;
        }

        /// <summary>
        /// Container liveness and readiness probe settings
        /// </summary>
        [Input("containerProbeSettings")]
        public Input<Inputs.ContainerProbeSettingsArgs>? ContainerProbeSettings { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Collection of environment variables
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Input("livenessProbe")]
        public Input<Inputs.ProbeArgs>? LivenessProbe { get; set; }

        /// <summary>
        /// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Input("readinessProbe")]
        public Input<Inputs.ProbeArgs>? ReadinessProbe { get; set; }

        /// <summary>
        /// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
        /// </summary>
        [Input("resourceRequests")]
        public Input<Inputs.ResourceRequestsArgs>? ResourceRequests { get; set; }

        /// <summary>
        /// Scaling properties for the Azure Spring Apps App Instance.
        /// </summary>
        [Input("scale")]
        public Input<Inputs.ScaleArgs>? Scale { get; set; }

        /// <summary>
        /// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Input("startupProbe")]
        public Input<Inputs.ProbeArgs>? StartupProbe { get; set; }

        /// <summary>
        /// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
        /// </summary>
        [Input("terminationGracePeriodSeconds")]
        public Input<int>? TerminationGracePeriodSeconds { get; set; }

        public DeploymentSettingsArgs()
        {
            TerminationGracePeriodSeconds = 90;
        }
        public static new DeploymentSettingsArgs Empty => new DeploymentSettingsArgs();
    }
}
