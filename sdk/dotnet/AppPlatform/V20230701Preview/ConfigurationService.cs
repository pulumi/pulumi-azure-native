// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20230701Preview
{
    /// <summary>
    /// Application Configuration Service resource
    /// </summary>
    [AzureNativeResourceType("azure-native:appplatform/v20230701preview:ConfigurationService")]
    public partial class ConfigurationService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Application Configuration Service properties payload
        /// </summary>
        [Output("properties")]
        public Output<Outputs.ConfigurationServicePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationService(string name, ConfigurationServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20230701preview:ConfigurationService", name, args ?? new ConfigurationServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20230701preview:ConfigurationService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:appplatform:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220101preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220301preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220401:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220501preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220901preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221101preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221201:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230101preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230301preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230501preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230901preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20231101preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20231201:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20240101preview:ConfigurationService" },
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20240501preview:ConfigurationService" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConfigurationService(name, id, options);
        }
    }

    public sealed class ConfigurationServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of Application Configuration Service.
        /// </summary>
        [Input("configurationServiceName")]
        public Input<string>? ConfigurationServiceName { get; set; }

        /// <summary>
        /// Application Configuration Service properties payload
        /// </summary>
        [Input("properties")]
        public Input<Inputs.ConfigurationServicePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ConfigurationServiceArgs()
        {
        }
        public static new ConfigurationServiceArgs Empty => new ConfigurationServiceArgs();
    }
}
