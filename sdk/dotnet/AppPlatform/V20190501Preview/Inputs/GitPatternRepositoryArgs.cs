// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AppPlatform.V20190501Preview.Inputs
{

    /// <summary>
    /// Git repository property payload
    /// </summary>
    public sealed class GitPatternRepositoryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Public sshKey of git repository.
        /// </summary>
        [Input("hostKey")]
        public Input<string>? HostKey { get; set; }

        /// <summary>
        /// SshKey algorithm of git repository.
        /// </summary>
        [Input("hostKeyAlgorithm")]
        public Input<string>? HostKeyAlgorithm { get; set; }

        /// <summary>
        /// Label of the repository
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Name of the repository
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Password of git repository basic auth.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("pattern")]
        private InputList<string>? _pattern;

        /// <summary>
        /// Collection of pattern of the repository
        /// </summary>
        public InputList<string> Pattern
        {
            get => _pattern ?? (_pattern = new InputList<string>());
            set => _pattern = value;
        }

        /// <summary>
        /// Private sshKey algorithm of git repository.
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        [Input("searchPaths")]
        private InputList<string>? _searchPaths;

        /// <summary>
        /// Searching path of the repository
        /// </summary>
        public InputList<string> SearchPaths
        {
            get => _searchPaths ?? (_searchPaths = new InputList<string>());
            set => _searchPaths = value;
        }

        /// <summary>
        /// Strict host key checking or not.
        /// </summary>
        [Input("strictHostKeyChecking")]
        public Input<bool>? StrictHostKeyChecking { get; set; }

        /// <summary>
        /// URI of the repository
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        /// <summary>
        /// Username of git repository basic auth.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GitPatternRepositoryArgs()
        {
        }
    }
}
