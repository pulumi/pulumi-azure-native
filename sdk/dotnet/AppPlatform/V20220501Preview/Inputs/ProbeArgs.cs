// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20220501Preview.Inputs
{

    /// <summary>
    /// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
    /// </summary>
    public sealed class ProbeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicate whether the probe is disabled.
        /// </summary>
        [Input("disableProbe", required: true)]
        public Input<bool> DisableProbe { get; set; } = null!;

        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Input("failureThreshold")]
        public Input<int>? FailureThreshold { get; set; }

        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Input("initialDelaySeconds")]
        public Input<int>? InitialDelaySeconds { get; set; }

        /// <summary>
        /// How often (in seconds) to perform the probe. Minimum value is 1.
        /// </summary>
        [Input("periodSeconds")]
        public Input<int>? PeriodSeconds { get; set; }

        /// <summary>
        /// The action of the probe.
        /// </summary>
        [Input("probeAction")]
        public object? ProbeAction { get; set; }

        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
        /// </summary>
        [Input("successThreshold")]
        public Input<int>? SuccessThreshold { get; set; }

        /// <summary>
        /// Number of seconds after which the probe times out. Minimum value is 1.
        /// </summary>
        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        public ProbeArgs()
        {
            DisableProbe = false;
        }
        public static new ProbeArgs Empty => new ProbeArgs();
    }
}
