// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20220501Preview.Outputs
{

    /// <summary>
    /// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
    /// </summary>
    [OutputType]
    public sealed class ProbeResponse
    {
        /// <summary>
        /// Indicate whether the probe is disabled.
        /// </summary>
        public readonly bool DisableProbe;
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        public readonly int? FailureThreshold;
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        public readonly int? InitialDelaySeconds;
        /// <summary>
        /// How often (in seconds) to perform the probe. Minimum value is 1.
        /// </summary>
        public readonly int? PeriodSeconds;
        /// <summary>
        /// The action of the probe.
        /// </summary>
        public readonly object? ProbeAction;
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
        /// </summary>
        public readonly int? SuccessThreshold;
        /// <summary>
        /// Number of seconds after which the probe times out. Minimum value is 1.
        /// </summary>
        public readonly int? TimeoutSeconds;

        [OutputConstructor]
        private ProbeResponse(
            bool disableProbe,

            int? failureThreshold,

            int? initialDelaySeconds,

            int? periodSeconds,

            object? probeAction,

            int? successThreshold,

            int? timeoutSeconds)
        {
            DisableProbe = disableProbe;
            FailureThreshold = failureThreshold;
            InitialDelaySeconds = initialDelaySeconds;
            PeriodSeconds = periodSeconds;
            ProbeAction = probeAction;
            SuccessThreshold = successThreshold;
            TimeoutSeconds = timeoutSeconds;
        }
    }
}
