// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20200701
{
    /// <summary>
    /// App resource payload
    /// </summary>
    [AzureNativeResourceType("azure-native:appplatform/v20200701:App")]
    public partial class App : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Managed Identity type of the app resource
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedIdentityPropertiesResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The GEO location of the application, always the same with its parent resource
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the App resource
        /// </summary>
        [Output("properties")]
        public Output<Outputs.AppResourcePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a App resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public App(string name, AppArgs args, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20200701:App", name, args ?? new AppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private App(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20200701:App", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:appplatform:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20201101preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20210601preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20210901preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220101preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220301preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220401:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220501preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220901preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221101preview:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221201:App"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230101preview:App"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing App resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static App Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new App(name, id, options);
        }
    }

    public sealed class AppArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the App resource.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// The Managed Identity type of the app resource
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedIdentityPropertiesArgs>? Identity { get; set; }

        /// <summary>
        /// The GEO location of the application, always the same with its parent resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties of the App resource
        /// </summary>
        [Input("properties")]
        public Input<Inputs.AppResourcePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public AppArgs()
        {
        }
        public static new AppArgs Empty => new AppArgs();
    }
}
