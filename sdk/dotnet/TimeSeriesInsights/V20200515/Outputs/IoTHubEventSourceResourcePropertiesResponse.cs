// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20200515.Outputs
{

    /// <summary>
    /// Properties of the IoTHub event source resource.
    /// </summary>
    [OutputType]
    public sealed class IoTHubEventSourceResourcePropertiesResponse
    {
        /// <summary>
        /// The name of the iot hub's consumer group that holds the partitions from which events will be read.
        /// </summary>
        public readonly string ConsumerGroupName;
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The resource id of the event source in Azure Resource Manager.
        /// </summary>
        public readonly string EventSourceResourceId;
        /// <summary>
        /// The name of the iot hub.
        /// </summary>
        public readonly string IotHubName;
        /// <summary>
        /// The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
        /// </summary>
        public readonly string KeyName;
        /// <summary>
        /// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        /// </summary>
        public readonly Outputs.LocalTimestampResponse? LocalTimestamp;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
        /// </summary>
        public readonly string? Time;
        /// <summary>
        /// The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        /// </summary>
        public readonly string? TimestampPropertyName;
        /// <summary>
        /// The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime".
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private IoTHubEventSourceResourcePropertiesResponse(
            string consumerGroupName,

            string creationTime,

            string eventSourceResourceId,

            string iotHubName,

            string keyName,

            Outputs.LocalTimestampResponse? localTimestamp,

            string provisioningState,

            string? time,

            string? timestampPropertyName,

            string? type)
        {
            ConsumerGroupName = consumerGroupName;
            CreationTime = creationTime;
            EventSourceResourceId = eventSourceResourceId;
            IotHubName = iotHubName;
            KeyName = keyName;
            LocalTimestamp = localTimestamp;
            ProvisioningState = provisioningState;
            Time = time;
            TimestampPropertyName = timestampPropertyName;
            Type = type;
        }
    }
}
