// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights
{
    /// <summary>
    /// An event source that receives its data from an Azure EventHub.
    /// API Version: 2020-05-15.
    /// </summary>
    [AzureNativeResourceType("azure-native:timeseriesinsights:EventHubEventSource")]
    public partial class EventHubEventSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.EventHub'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the EventHub event source resource.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.EventHubEventSourceResourcePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a EventHubEventSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventHubEventSource(string name, EventHubEventSourceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights:EventHubEventSource", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private EventHubEventSource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights:EventHubEventSource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static EventHubEventSourceArgs MakeArgs(EventHubEventSourceArgs args)
        {
            args ??= new EventHubEventSourceArgs();
            args.Kind = "Microsoft.EventHub";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20170228preview:EventHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20171115:EventHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20180815preview:EventHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20200515:EventHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20210331preview:EventHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20210630preview:EventHubEventSource"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventHubEventSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventHubEventSource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EventHubEventSource(name, id, options);
        }
    }

    public sealed class EventHubEventSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the event source.
        /// </summary>
        [Input("eventSourceName")]
        public Input<string>? EventSourceName { get; set; }

        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.EventHub'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        /// </summary>
        [Input("localTimestamp")]
        public Input<Inputs.LocalTimestampArgs>? LocalTimestamp { get; set; }

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties of the EventHub event source that are required on create or update requests.
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.EventHubEventSourceCreationPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value pairs of additional properties for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public EventHubEventSourceArgs()
        {
        }
        public static new EventHubEventSourceArgs Empty => new EventHubEventSourceArgs();
    }
}
