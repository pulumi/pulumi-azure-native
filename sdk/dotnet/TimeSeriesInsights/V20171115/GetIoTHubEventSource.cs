// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20171115
{
    public static class GetIoTHubEventSource
    {
        /// <summary>
        /// Gets the event source with the specified name in the specified environment.
        /// </summary>
        public static Task<GetIoTHubEventSourceResult> InvokeAsync(GetIoTHubEventSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIoTHubEventSourceResult>("azure-native:timeseriesinsights/v20171115:getIoTHubEventSource", args ?? new GetIoTHubEventSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the event source with the specified name in the specified environment.
        /// </summary>
        public static Output<GetIoTHubEventSourceResult> Invoke(GetIoTHubEventSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIoTHubEventSourceResult>("azure-native:timeseriesinsights/v20171115:getIoTHubEventSource", args ?? new GetIoTHubEventSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIoTHubEventSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the Time Series Insights event source associated with the specified environment.
        /// </summary>
        [Input("eventSourceName", required: true)]
        public string EventSourceName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIoTHubEventSourceArgs()
        {
        }
        public static new GetIoTHubEventSourceArgs Empty => new GetIoTHubEventSourceArgs();
    }

    public sealed class GetIoTHubEventSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the Time Series Insights event source associated with the specified environment.
        /// </summary>
        [Input("eventSourceName", required: true)]
        public Input<string> EventSourceName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIoTHubEventSourceInvokeArgs()
        {
        }
        public static new GetIoTHubEventSourceInvokeArgs Empty => new GetIoTHubEventSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetIoTHubEventSourceResult
    {
        /// <summary>
        /// The name of the iot hub's consumer group that holds the partitions from which events will be read.
        /// </summary>
        public readonly string ConsumerGroupName;
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The resource id of the event source in Azure Resource Manager.
        /// </summary>
        public readonly string EventSourceResourceId;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the iot hub.
        /// </summary>
        public readonly string IotHubName;
        /// <summary>
        /// The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
        /// </summary>
        public readonly string KeyName;
        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.IotHub'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        /// </summary>
        public readonly string? TimestampPropertyName;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIoTHubEventSourceResult(
            string consumerGroupName,

            string creationTime,

            string eventSourceResourceId,

            string id,

            string iotHubName,

            string keyName,

            string kind,

            string location,

            string name,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string? timestampPropertyName,

            string type)
        {
            ConsumerGroupName = consumerGroupName;
            CreationTime = creationTime;
            EventSourceResourceId = eventSourceResourceId;
            Id = id;
            IotHubName = iotHubName;
            KeyName = keyName;
            Kind = kind;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Tags = tags;
            TimestampPropertyName = timestampPropertyName;
            Type = type;
        }
    }
}
