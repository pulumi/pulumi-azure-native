// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights
{
    public static class GetGen2Environment
    {
        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// API Version: 2020-05-15.
        /// </summary>
        public static Task<GetGen2EnvironmentResult> InvokeAsync(GetGen2EnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGen2EnvironmentResult>("azure-native:timeseriesinsights:getGen2Environment", args ?? new GetGen2EnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// API Version: 2020-05-15.
        /// </summary>
        public static Output<GetGen2EnvironmentResult> Invoke(GetGen2EnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGen2EnvironmentResult>("azure-native:timeseriesinsights:getGen2Environment", args ?? new GetGen2EnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGen2EnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGen2EnvironmentArgs()
        {
        }
        public static new GetGen2EnvironmentArgs Empty => new GetGen2EnvironmentArgs();
    }

    public sealed class GetGen2EnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGen2EnvironmentInvokeArgs()
        {
        }
        public static new GetGen2EnvironmentInvokeArgs Empty => new GetGen2EnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetGen2EnvironmentResult
    {
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessFqdn;
        /// <summary>
        /// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessId;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the environment.
        /// Expected value is 'Gen2'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
        /// </summary>
        public readonly Outputs.EnvironmentStatusResponse Status;
        /// <summary>
        /// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
        /// </summary>
        public readonly Outputs.Gen2StorageConfigurationOutputResponse StorageConfiguration;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The list of event properties which will be used to define the environment's time series id.
        /// </summary>
        public readonly ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> TimeSeriesIdProperties;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
        /// </summary>
        public readonly Outputs.WarmStoreConfigurationPropertiesResponse? WarmStoreConfiguration;

        [OutputConstructor]
        private GetGen2EnvironmentResult(
            string creationTime,

            string dataAccessFqdn,

            string dataAccessId,

            string id,

            string kind,

            string location,

            string name,

            string provisioningState,

            Outputs.SkuResponse sku,

            Outputs.EnvironmentStatusResponse status,

            Outputs.Gen2StorageConfigurationOutputResponse storageConfiguration,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> timeSeriesIdProperties,

            string type,

            Outputs.WarmStoreConfigurationPropertiesResponse? warmStoreConfiguration)
        {
            CreationTime = creationTime;
            DataAccessFqdn = dataAccessFqdn;
            DataAccessId = dataAccessId;
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            Status = status;
            StorageConfiguration = storageConfiguration;
            Tags = tags;
            TimeSeriesIdProperties = timeSeriesIdProperties;
            Type = type;
            WarmStoreConfiguration = warmStoreConfiguration;
        }
    }
}
