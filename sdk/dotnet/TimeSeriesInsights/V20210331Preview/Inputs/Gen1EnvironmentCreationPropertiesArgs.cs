// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20210331Preview.Inputs
{

    /// <summary>
    /// Properties used to create a Gen1 environment.
    /// </summary>
    public sealed class Gen1EnvironmentCreationPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
        /// </summary>
        [Input("dataRetentionTime", required: true)]
        public Input<string> DataRetentionTime { get; set; } = null!;

        [Input("partitionKeyProperties")]
        private InputList<Inputs.TimeSeriesIdPropertyArgs>? _partitionKeyProperties;

        /// <summary>
        /// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
        /// </summary>
        public InputList<Inputs.TimeSeriesIdPropertyArgs> PartitionKeyProperties
        {
            get => _partitionKeyProperties ?? (_partitionKeyProperties = new InputList<Inputs.TimeSeriesIdPropertyArgs>());
            set => _partitionKeyProperties = value;
        }

        /// <summary>
        /// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
        /// </summary>
        [Input("storageLimitExceededBehavior")]
        public InputUnion<string, Pulumi.AzureNative.TimeSeriesInsights.V20210331Preview.StorageLimitExceededBehavior>? StorageLimitExceededBehavior { get; set; }

        public Gen1EnvironmentCreationPropertiesArgs()
        {
        }
        public static new Gen1EnvironmentCreationPropertiesArgs Empty => new Gen1EnvironmentCreationPropertiesArgs();
    }
}
