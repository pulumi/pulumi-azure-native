// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20210331Preview.Outputs
{

    /// <summary>
    /// Properties of the Gen2 environment.
    /// </summary>
    [OutputType]
    public sealed class Gen2EnvironmentResourcePropertiesResponse
    {
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessFqdn;
        /// <summary>
        /// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessId;
        /// <summary>
        /// The list of private endpoint connections to the environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// If 'enabled', public network access is allowed. If 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
        /// </summary>
        public readonly Outputs.EnvironmentStatusResponse Status;
        /// <summary>
        /// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
        /// </summary>
        public readonly Outputs.Gen2StorageConfigurationOutputResponse StorageConfiguration;
        /// <summary>
        /// The list of event properties which will be used to define the environment's time series id.
        /// </summary>
        public readonly ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> TimeSeriesIdProperties;
        /// <summary>
        /// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
        /// </summary>
        public readonly Outputs.WarmStoreConfigurationPropertiesResponse? WarmStoreConfiguration;

        [OutputConstructor]
        private Gen2EnvironmentResourcePropertiesResponse(
            string creationTime,

            string dataAccessFqdn,

            string dataAccessId,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.EnvironmentStatusResponse status,

            Outputs.Gen2StorageConfigurationOutputResponse storageConfiguration,

            ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> timeSeriesIdProperties,

            Outputs.WarmStoreConfigurationPropertiesResponse? warmStoreConfiguration)
        {
            CreationTime = creationTime;
            DataAccessFqdn = dataAccessFqdn;
            DataAccessId = dataAccessId;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            Status = status;
            StorageConfiguration = storageConfiguration;
            TimeSeriesIdProperties = timeSeriesIdProperties;
            WarmStoreConfiguration = warmStoreConfiguration;
        }
    }
}
