// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.Outputs
{

    /// <summary>
    /// Properties of the Gen1 environment.
    /// </summary>
    [OutputType]
    public sealed class Gen1EnvironmentResourcePropertiesResponse
    {
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessFqdn;
        /// <summary>
        /// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        /// </summary>
        public readonly string DataAccessId;
        /// <summary>
        /// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
        /// </summary>
        public readonly string DataRetentionTime;
        /// <summary>
        /// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
        /// </summary>
        public readonly ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> PartitionKeyProperties;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
        /// </summary>
        public readonly Outputs.EnvironmentStatusResponse Status;
        /// <summary>
        /// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
        /// </summary>
        public readonly string? StorageLimitExceededBehavior;

        [OutputConstructor]
        private Gen1EnvironmentResourcePropertiesResponse(
            string creationTime,

            string dataAccessFqdn,

            string dataAccessId,

            string dataRetentionTime,

            ImmutableArray<Outputs.TimeSeriesIdPropertyResponse> partitionKeyProperties,

            string provisioningState,

            Outputs.EnvironmentStatusResponse status,

            string? storageLimitExceededBehavior)
        {
            CreationTime = creationTime;
            DataAccessFqdn = dataAccessFqdn;
            DataAccessId = dataAccessId;
            DataRetentionTime = dataRetentionTime;
            PartitionKeyProperties = partitionKeyProperties;
            ProvisioningState = provisioningState;
            Status = status;
            StorageLimitExceededBehavior = storageLimitExceededBehavior;
        }
    }
}
