// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20180815Preview
{
    public static class GetStandardEnvironment
    {
        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// </summary>
        public static Task<GetStandardEnvironmentResult> InvokeAsync(GetStandardEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStandardEnvironmentResult>("azure-native:timeseriesinsights/v20180815preview:getStandardEnvironment", args ?? new GetStandardEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// </summary>
        public static Output<GetStandardEnvironmentResult> Invoke(GetStandardEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStandardEnvironmentResult>("azure-native:timeseriesinsights/v20180815preview:getStandardEnvironment", args ?? new GetStandardEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStandardEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetStandardEnvironmentArgs()
        {
        }
        public static new GetStandardEnvironmentArgs Empty => new GetStandardEnvironmentArgs();
    }

    public sealed class GetStandardEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetStandardEnvironmentInvokeArgs()
        {
        }
        public static new GetStandardEnvironmentInvokeArgs Empty => new GetStandardEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetStandardEnvironmentResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the environment.
        /// Expected value is 'Standard'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the standard environment.
        /// </summary>
        public readonly Outputs.StandardEnvironmentResourcePropertiesResponse Properties;
        /// <summary>
        /// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStandardEnvironmentResult(
            string id,

            string kind,

            string location,

            string name,

            Outputs.StandardEnvironmentResourcePropertiesResponse properties,

            Outputs.SkuResponse sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
