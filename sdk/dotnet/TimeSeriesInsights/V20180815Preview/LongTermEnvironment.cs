// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20180815Preview
{
    /// <summary>
    /// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. LongTerm environments do not have set data retention limits.
    /// </summary>
    [AzureNativeResourceType("azure-native:timeseriesinsights/v20180815preview:LongTermEnvironment")]
    public partial class LongTermEnvironment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The kind of the environment.
        /// Expected value is 'LongTerm'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the long-term environment.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.LongTermEnvironmentResourcePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a LongTermEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LongTermEnvironment(string name, LongTermEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights/v20180815preview:LongTermEnvironment", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private LongTermEnvironment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights/v20180815preview:LongTermEnvironment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static LongTermEnvironmentArgs MakeArgs(LongTermEnvironmentArgs args)
        {
            args ??= new LongTermEnvironmentArgs();
            args.Kind = "LongTerm";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights:LongTermEnvironment"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20170228preview:LongTermEnvironment"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20171115:LongTermEnvironment"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20200515:LongTermEnvironment"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20210331preview:LongTermEnvironment"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20210630preview:LongTermEnvironment"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LongTermEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LongTermEnvironment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LongTermEnvironment(name, id, options);
        }
    }

    public sealed class LongTermEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the environment
        /// </summary>
        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        /// <summary>
        /// The kind of the environment.
        /// Expected value is 'LongTerm'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties used to create a long-term environment.
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.LongTermEnvironmentCreationPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.SkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value pairs of additional properties for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LongTermEnvironmentArgs()
        {
        }
        public static new LongTermEnvironmentArgs Empty => new LongTermEnvironmentArgs();
    }
}
