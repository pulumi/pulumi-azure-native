// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20170228Preview
{
    public static class GetEventHubEventSource
    {
        /// <summary>
        /// An event source that receives its data from an Azure EventHub.
        /// </summary>
        public static Task<GetEventHubEventSourceResult> InvokeAsync(GetEventHubEventSourceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEventHubEventSourceResult>("azure-native:timeseriesinsights/v20170228preview:getEventHubEventSource", args ?? new GetEventHubEventSourceArgs(), options.WithDefaults());

        /// <summary>
        /// An event source that receives its data from an Azure EventHub.
        /// </summary>
        public static Output<GetEventHubEventSourceResult> Invoke(GetEventHubEventSourceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEventHubEventSourceResult>("azure-native:timeseriesinsights/v20170228preview:getEventHubEventSource", args ?? new GetEventHubEventSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventHubEventSourceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the Time Series Insights event source associated with the specified environment.
        /// </summary>
        [Input("eventSourceName", required: true)]
        public string EventSourceName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetEventHubEventSourceArgs()
        {
        }
    }

    public sealed class GetEventHubEventSourceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the Time Series Insights event source associated with the specified environment.
        /// </summary>
        [Input("eventSourceName", required: true)]
        public Input<string> EventSourceName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetEventHubEventSourceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEventHubEventSourceResult
    {
        /// <summary>
        /// The name of the event hub's consumer group that holds the partitions from which events will be read.
        /// </summary>
        public readonly string ConsumerGroupName;
        /// <summary>
        /// The time the resource was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The name of the event hub.
        /// </summary>
        public readonly string EventHubName;
        /// <summary>
        /// The resource id of the event source in Azure Resource Manager.
        /// </summary>
        public readonly string EventSourceResourceId;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
        /// </summary>
        public readonly string KeyName;
        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.EventHub'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The name of the service bus that contains the event hub.
        /// </summary>
        public readonly string ServiceBusNamespace;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        /// </summary>
        public readonly string? TimestampPropertyName;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEventHubEventSourceResult(
            string consumerGroupName,

            string creationTime,

            string eventHubName,

            string eventSourceResourceId,

            string id,

            string keyName,

            string kind,

            string location,

            string name,

            string provisioningState,

            string serviceBusNamespace,

            ImmutableDictionary<string, string>? tags,

            string? timestampPropertyName,

            string type)
        {
            ConsumerGroupName = consumerGroupName;
            CreationTime = creationTime;
            EventHubName = eventHubName;
            EventSourceResourceId = eventSourceResourceId;
            Id = id;
            KeyName = keyName;
            Kind = kind;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ServiceBusNamespace = serviceBusNamespace;
            Tags = tags;
            TimestampPropertyName = timestampPropertyName;
            Type = type;
        }
    }
}
