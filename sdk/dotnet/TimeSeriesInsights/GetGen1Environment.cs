// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights
{
    public static class GetGen1Environment
    {
        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// API Version: 2020-05-15.
        /// </summary>
        public static Task<GetGen1EnvironmentResult> InvokeAsync(GetGen1EnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGen1EnvironmentResult>("azure-native:timeseriesinsights:getGen1Environment", args ?? new GetGen1EnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the environment with the specified name in the specified subscription and resource group.
        /// API Version: 2020-05-15.
        /// </summary>
        public static Output<GetGen1EnvironmentResult> Invoke(GetGen1EnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGen1EnvironmentResult>("azure-native:timeseriesinsights:getGen1Environment", args ?? new GetGen1EnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGen1EnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGen1EnvironmentArgs()
        {
        }
        public static new GetGen1EnvironmentArgs Empty => new GetGen1EnvironmentArgs();
    }

    public sealed class GetGen1EnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGen1EnvironmentInvokeArgs()
        {
        }
        public static new GetGen1EnvironmentInvokeArgs Empty => new GetGen1EnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetGen1EnvironmentResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the environment.
        /// Expected value is 'Gen1'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the Gen1 environment.
        /// </summary>
        public readonly Outputs.Gen1EnvironmentResourcePropertiesResponse Properties;
        /// <summary>
        /// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGen1EnvironmentResult(
            string id,

            string kind,

            string location,

            string name,

            Outputs.Gen1EnvironmentResourcePropertiesResponse properties,

            Outputs.SkuResponse sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
