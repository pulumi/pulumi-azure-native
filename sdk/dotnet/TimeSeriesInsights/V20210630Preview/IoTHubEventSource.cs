// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TimeSeriesInsights.V20210630Preview
{
    /// <summary>
    /// An event source that receives its data from an Azure IoTHub.
    /// </summary>
    [AzureNativeResourceType("azure-native:timeseriesinsights/v20210630preview:IoTHubEventSource")]
    public partial class IoTHubEventSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the iot hub's consumer group that holds the partitions from which events will be read.
        /// </summary>
        [Output("consumerGroupName")]
        public Output<string> ConsumerGroupName { get; private set; } = null!;

        /// <summary>
        /// The time the resource was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The resource id of the event source in Azure Resource Manager.
        /// </summary>
        [Output("eventSourceResourceId")]
        public Output<string> EventSourceResourceId { get; private set; } = null!;

        /// <summary>
        /// The name of the iot hub.
        /// </summary>
        [Output("iotHubName")]
        public Output<string> IotHubName { get; private set; } = null!;

        /// <summary>
        /// The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
        /// </summary>
        [Output("keyName")]
        public Output<string> KeyName { get; private set; } = null!;

        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.IoTHub'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        /// </summary>
        [Output("localTimestamp")]
        public Output<Outputs.LocalTimestampResponse?> LocalTimestamp { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
        /// </summary>
        [Output("time")]
        public Output<string?> Time { get; private set; } = null!;

        /// <summary>
        /// The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        /// </summary>
        [Output("timestampPropertyName")]
        public Output<string?> TimestampPropertyName { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IoTHubEventSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IoTHubEventSource(string name, IoTHubEventSourceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights/v20210630preview:IoTHubEventSource", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private IoTHubEventSource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:timeseriesinsights/v20210630preview:IoTHubEventSource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static IoTHubEventSourceArgs MakeArgs(IoTHubEventSourceArgs args)
        {
            args ??= new IoTHubEventSourceArgs();
            args.Kind = "Microsoft.IoTHub";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights:IoTHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20200515:IoTHubEventSource"},
                    new global::Pulumi.Alias { Type = "azure-native:timeseriesinsights/v20210331preview:IoTHubEventSource"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IoTHubEventSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IoTHubEventSource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IoTHubEventSource(name, id, options);
        }
    }

    public sealed class IoTHubEventSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the iot hub's consumer group that holds the partitions from which events will be read.
        /// </summary>
        [Input("consumerGroupName", required: true)]
        public Input<string> ConsumerGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Time Series Insights environment associated with the specified resource group.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the event source.
        /// </summary>
        [Input("eventSourceName")]
        public Input<string>? EventSourceName { get; set; }

        /// <summary>
        /// The resource id of the event source in Azure Resource Manager.
        /// </summary>
        [Input("eventSourceResourceId", required: true)]
        public Input<string> EventSourceResourceId { get; set; } = null!;

        /// <summary>
        /// The name of the iot hub.
        /// </summary>
        [Input("iotHubName", required: true)]
        public Input<string> IotHubName { get; set; } = null!;

        /// <summary>
        /// The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
        /// </summary>
        [Input("keyName", required: true)]
        public Input<string> KeyName { get; set; } = null!;

        /// <summary>
        /// The kind of the event source.
        /// Expected value is 'Microsoft.IoTHub'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        /// </summary>
        [Input("localTimestamp")]
        public Input<Inputs.LocalTimestampArgs>? LocalTimestamp { get; set; }

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
        /// </summary>
        [Input("sharedAccessKey", required: true)]
        public Input<string> SharedAccessKey { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value pairs of additional properties for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
        /// </summary>
        [Input("time")]
        public Input<string>? Time { get; set; }

        /// <summary>
        /// The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        /// </summary>
        [Input("timestampPropertyName")]
        public Input<string>? TimestampPropertyName { get; set; }

        /// <summary>
        /// The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime".
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.TimeSeriesInsights.V20210630Preview.IngressStartAtType>? Type { get; set; }

        public IoTHubEventSourceArgs()
        {
        }
        public static new IoTHubEventSourceArgs Empty => new IoTHubEventSourceArgs();
    }
}
