// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.LoadTestService.V20220415Preview
{
    public static class GetLoadTest
    {
        /// <summary>
        /// Get a LoadTest resource.
        /// </summary>
        public static Task<GetLoadTestResult> InvokeAsync(GetLoadTestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadTestResult>("azure-native:loadtestservice/v20220415preview:getLoadTest", args ?? new GetLoadTestArgs(), options.WithDefaults());

        /// <summary>
        /// Get a LoadTest resource.
        /// </summary>
        public static Output<GetLoadTestResult> Invoke(GetLoadTestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadTestResult>("azure-native:loadtestservice/v20220415preview:getLoadTest", args ?? new GetLoadTestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadTestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Load Test resource name.
        /// </summary>
        [Input("loadTestName", required: true)]
        public string LoadTestName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetLoadTestArgs()
        {
        }
        public static new GetLoadTestArgs Empty => new GetLoadTestArgs();
    }

    public sealed class GetLoadTestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Load Test resource name.
        /// </summary>
        [Input("loadTestName", required: true)]
        public Input<string> LoadTestName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetLoadTestInvokeArgs()
        {
        }
        public static new GetLoadTestInvokeArgs Empty => new GetLoadTestInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadTestResult
    {
        /// <summary>
        /// Resource data plane URI.
        /// </summary>
        public readonly string DataPlaneURI;
        /// <summary>
        /// Description of the resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// CMK Encryption property.
        /// </summary>
        public readonly Outputs.EncryptionPropertiesResponse? Encryption;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of identity used for the resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLoadTestResult(
            string dataPlaneURI,

            string? description,

            Outputs.EncryptionPropertiesResponse? encryption,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            DataPlaneURI = dataPlaneURI;
            Description = description;
            Encryption = encryption;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
