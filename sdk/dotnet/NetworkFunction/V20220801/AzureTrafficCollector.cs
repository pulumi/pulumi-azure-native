// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkFunction.V20220801
{
    /// <summary>
    /// Azure Traffic Collector resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:networkfunction/v20220801:AzureTrafficCollector")]
    public partial class AzureTrafficCollector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Collector Policies for Azure Traffic Collector.
        /// </summary>
        [Output("collectorPolicies")]
        public Output<ImmutableArray<Outputs.CollectorPolicyResponse>> CollectorPolicies { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the application rule collection resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.TrackedResourceResponseSystemData> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The virtualHub to which the Azure Traffic Collector belongs.
        /// </summary>
        [Output("virtualHub")]
        public Output<Outputs.ResourceReferenceResponse?> VirtualHub { get; private set; } = null!;


        /// <summary>
        /// Create a AzureTrafficCollector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureTrafficCollector(string name, AzureTrafficCollectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkfunction/v20220801:AzureTrafficCollector", name, args ?? new AzureTrafficCollectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureTrafficCollector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkfunction/v20220801:AzureTrafficCollector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkfunction:AzureTrafficCollector"},
                    new global::Pulumi.Alias { Type = "azure-native:networkfunction/v20210901preview:AzureTrafficCollector"},
                    new global::Pulumi.Alias { Type = "azure-native:networkfunction/v20220501:AzureTrafficCollector"},
                    new global::Pulumi.Alias { Type = "azure-native:networkfunction/v20221101:AzureTrafficCollector"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureTrafficCollector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureTrafficCollector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AzureTrafficCollector(name, id, options);
        }
    }

    public sealed class AzureTrafficCollectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure Traffic Collector name
        /// </summary>
        [Input("azureTrafficCollectorName")]
        public Input<string>? AzureTrafficCollectorName { get; set; }

        [Input("collectorPolicies")]
        private InputList<Inputs.CollectorPolicyArgs>? _collectorPolicies;

        /// <summary>
        /// Collector Policies for Azure Traffic Collector.
        /// </summary>
        public InputList<Inputs.CollectorPolicyArgs> CollectorPolicies
        {
            get => _collectorPolicies ?? (_collectorPolicies = new InputList<Inputs.CollectorPolicyArgs>());
            set => _collectorPolicies = value;
        }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AzureTrafficCollectorArgs()
        {
        }
        public static new AzureTrafficCollectorArgs Empty => new AzureTrafficCollectorArgs();
    }
}
