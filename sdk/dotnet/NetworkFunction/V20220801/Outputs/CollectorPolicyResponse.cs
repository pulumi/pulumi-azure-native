// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkFunction.V20220801.Outputs
{

    /// <summary>
    /// Collector policy resource.
    /// </summary>
    [OutputType]
    public sealed class CollectorPolicyResponse
    {
        /// <summary>
        /// Emission policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.EmissionPoliciesPropertiesFormatResponse> EmissionPolicies;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Ingestion policies.
        /// </summary>
        public readonly Outputs.IngestionPolicyPropertiesFormatResponse? IngestionPolicy;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.TrackedResourceResponseSystemData SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private CollectorPolicyResponse(
            ImmutableArray<Outputs.EmissionPoliciesPropertiesFormatResponse> emissionPolicies,

            string etag,

            string id,

            Outputs.IngestionPolicyPropertiesFormatResponse? ingestionPolicy,

            string? location,

            string name,

            string provisioningState,

            Outputs.TrackedResourceResponseSystemData systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            EmissionPolicies = emissionPolicies;
            Etag = etag;
            Id = id;
            IngestionPolicy = ingestionPolicy;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
