// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkFunction.V20220501
{
    public static class GetCollectorPolicy
    {
        /// <summary>
        /// Collector policy resource.
        /// </summary>
        public static Task<GetCollectorPolicyResult> InvokeAsync(GetCollectorPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCollectorPolicyResult>("azure-native:networkfunction/v20220501:getCollectorPolicy", args ?? new GetCollectorPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Collector policy resource.
        /// </summary>
        public static Output<GetCollectorPolicyResult> Invoke(GetCollectorPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCollectorPolicyResult>("azure-native:networkfunction/v20220501:getCollectorPolicy", args ?? new GetCollectorPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCollectorPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Traffic Collector name
        /// </summary>
        [Input("azureTrafficCollectorName", required: true)]
        public string AzureTrafficCollectorName { get; set; } = null!;

        /// <summary>
        /// Collector Policy Name
        /// </summary>
        [Input("collectorPolicyName", required: true)]
        public string CollectorPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCollectorPolicyArgs()
        {
        }
    }

    public sealed class GetCollectorPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Traffic Collector name
        /// </summary>
        [Input("azureTrafficCollectorName", required: true)]
        public Input<string> AzureTrafficCollectorName { get; set; } = null!;

        /// <summary>
        /// Collector Policy Name
        /// </summary>
        [Input("collectorPolicyName", required: true)]
        public Input<string> CollectorPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCollectorPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCollectorPolicyResult
    {
        /// <summary>
        /// Emission policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.EmissionPoliciesPropertiesFormatResponse> EmissionPolicies;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Ingestion policies.
        /// </summary>
        public readonly Outputs.IngestionPolicyPropertiesFormatResponse? IngestionPolicy;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.CollectorPolicyResponseSystemData SystemData;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCollectorPolicyResult(
            ImmutableArray<Outputs.EmissionPoliciesPropertiesFormatResponse> emissionPolicies,

            string etag,

            string id,

            Outputs.IngestionPolicyPropertiesFormatResponse? ingestionPolicy,

            string name,

            string provisioningState,

            Outputs.CollectorPolicyResponseSystemData systemData,

            string type)
        {
            EmissionPolicies = emissionPolicies;
            Etag = etag;
            Id = id;
            IngestionPolicy = ingestionPolicy;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
