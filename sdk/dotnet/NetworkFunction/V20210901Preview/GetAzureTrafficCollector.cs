// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkFunction.V20210901Preview
{
    public static class GetAzureTrafficCollector
    {
        /// <summary>
        /// Azure Traffic Collector resource.
        /// </summary>
        public static Task<GetAzureTrafficCollectorResult> InvokeAsync(GetAzureTrafficCollectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAzureTrafficCollectorResult>("azure-native:networkfunction/v20210901preview:getAzureTrafficCollector", args ?? new GetAzureTrafficCollectorArgs(), options.WithDefaults());

        /// <summary>
        /// Azure Traffic Collector resource.
        /// </summary>
        public static Output<GetAzureTrafficCollectorResult> Invoke(GetAzureTrafficCollectorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAzureTrafficCollectorResult>("azure-native:networkfunction/v20210901preview:getAzureTrafficCollector", args ?? new GetAzureTrafficCollectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureTrafficCollectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Traffic Collector name
        /// </summary>
        [Input("azureTrafficCollectorName", required: true)]
        public string AzureTrafficCollectorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAzureTrafficCollectorArgs()
        {
        }
        public static new GetAzureTrafficCollectorArgs Empty => new GetAzureTrafficCollectorArgs();
    }

    public sealed class GetAzureTrafficCollectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Traffic Collector name
        /// </summary>
        [Input("azureTrafficCollectorName", required: true)]
        public Input<string> AzureTrafficCollectorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAzureTrafficCollectorInvokeArgs()
        {
        }
        public static new GetAzureTrafficCollectorInvokeArgs Empty => new GetAzureTrafficCollectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureTrafficCollectorResult
    {
        /// <summary>
        /// Collector Policies for Azure Traffic Collector.
        /// </summary>
        public readonly ImmutableArray<Outputs.CollectorPolicyResponse> CollectorPolicies;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the application rule collection resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.TrackedResourceResponseSystemData SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The virtualHub to which the Azure Traffic Collector belongs.
        /// </summary>
        public readonly Outputs.ResourceReferenceResponse? VirtualHub;

        [OutputConstructor]
        private GetAzureTrafficCollectorResult(
            ImmutableArray<Outputs.CollectorPolicyResponse> collectorPolicies,

            string etag,

            string id,

            string? location,

            string name,

            string provisioningState,

            Outputs.TrackedResourceResponseSystemData systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ResourceReferenceResponse? virtualHub)
        {
            CollectorPolicies = collectorPolicies;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualHub = virtualHub;
        }
    }
}
