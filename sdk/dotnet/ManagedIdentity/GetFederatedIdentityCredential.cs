// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedIdentity
{
    public static class GetFederatedIdentityCredential
    {
        /// <summary>
        /// Gets the federated identity credential.
        /// API Version: 2022-01-31-preview.
        /// </summary>
        public static Task<GetFederatedIdentityCredentialResult> InvokeAsync(GetFederatedIdentityCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFederatedIdentityCredentialResult>("azure-native:managedidentity:getFederatedIdentityCredential", args ?? new GetFederatedIdentityCredentialArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the federated identity credential.
        /// API Version: 2022-01-31-preview.
        /// </summary>
        public static Output<GetFederatedIdentityCredentialResult> Invoke(GetFederatedIdentityCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFederatedIdentityCredentialResult>("azure-native:managedidentity:getFederatedIdentityCredential", args ?? new GetFederatedIdentityCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFederatedIdentityCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the federated identity credential resource.
        /// </summary>
        [Input("federatedIdentityCredentialResourceName", required: true)]
        public string FederatedIdentityCredentialResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group to which the identity belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the identity resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetFederatedIdentityCredentialArgs()
        {
        }
        public static new GetFederatedIdentityCredentialArgs Empty => new GetFederatedIdentityCredentialArgs();
    }

    public sealed class GetFederatedIdentityCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the federated identity credential resource.
        /// </summary>
        [Input("federatedIdentityCredentialResourceName", required: true)]
        public Input<string> FederatedIdentityCredentialResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group to which the identity belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the identity resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetFederatedIdentityCredentialInvokeArgs()
        {
        }
        public static new GetFederatedIdentityCredentialInvokeArgs Empty => new GetFederatedIdentityCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetFederatedIdentityCredentialResult
    {
        /// <summary>
        /// The list of audiences that can appear in the issued token.
        /// </summary>
        public readonly ImmutableArray<string> Audiences;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The URL of the issuer to be trusted.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The identifier of the external identity.
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFederatedIdentityCredentialResult(
            ImmutableArray<string> audiences,

            string id,

            string issuer,

            string name,

            string subject,

            string type)
        {
            Audiences = audiences;
            Id = id;
            Issuer = issuer;
            Name = name;
            Subject = subject;
            Type = type;
        }
    }
}
