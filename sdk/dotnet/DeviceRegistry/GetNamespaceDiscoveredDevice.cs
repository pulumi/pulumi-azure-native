// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry
{
    public static class GetNamespaceDiscoveredDevice
    {
        /// <summary>
        /// Get a NamespaceDiscoveredDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// 
        /// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetNamespaceDiscoveredDeviceResult> InvokeAsync(GetNamespaceDiscoveredDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceDiscoveredDeviceResult>("azure-native:deviceregistry:getNamespaceDiscoveredDevice", args ?? new GetNamespaceDiscoveredDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a NamespaceDiscoveredDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// 
        /// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetNamespaceDiscoveredDeviceResult> Invoke(GetNamespaceDiscoveredDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceDiscoveredDeviceResult>("azure-native:deviceregistry:getNamespaceDiscoveredDevice", args ?? new GetNamespaceDiscoveredDeviceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a NamespaceDiscoveredDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// 
        /// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetNamespaceDiscoveredDeviceResult> Invoke(GetNamespaceDiscoveredDeviceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceDiscoveredDeviceResult>("azure-native:deviceregistry:getNamespaceDiscoveredDevice", args ?? new GetNamespaceDiscoveredDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceDiscoveredDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the discovered device.
        /// </summary>
        [Input("discoveredDeviceName", required: true)]
        public string DiscoveredDeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceDiscoveredDeviceArgs()
        {
        }
        public static new GetNamespaceDiscoveredDeviceArgs Empty => new GetNamespaceDiscoveredDeviceArgs();
    }

    public sealed class GetNamespaceDiscoveredDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the discovered device.
        /// </summary>
        [Input("discoveredDeviceName", required: true)]
        public Input<string> DiscoveredDeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNamespaceDiscoveredDeviceInvokeArgs()
        {
        }
        public static new GetNamespaceDiscoveredDeviceInvokeArgs Empty => new GetNamespaceDiscoveredDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceDiscoveredDeviceResult
    {
        /// <summary>
        /// A set of key-value pairs that contain custom attributes.
        /// </summary>
        public readonly object? Attributes;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Identifier used to detect changes in the discovered device.
        /// </summary>
        public readonly string DiscoveryId;
        /// <summary>
        /// Endpoints for discovered devices.
        /// </summary>
        public readonly Outputs.DiscoveredMessagingEndpointsResponse? Endpoints;
        /// <summary>
        /// The extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant.
        /// </summary>
        public readonly string? ExternalDeviceId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Device manufacturer.
        /// </summary>
        public readonly string? Manufacturer;
        /// <summary>
        /// Device model.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Device operating system name.
        /// </summary>
        public readonly string? OperatingSystem;
        /// <summary>
        /// Device operating system version.
        /// </summary>
        public readonly string? OperatingSystemVersion;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        public readonly double Version;

        [OutputConstructor]
        private GetNamespaceDiscoveredDeviceResult(
            object? attributes,

            string azureApiVersion,

            string discoveryId,

            Outputs.DiscoveredMessagingEndpointsResponse? endpoints,

            Outputs.ExtendedLocationResponse extendedLocation,

            string? externalDeviceId,

            string id,

            string location,

            string? manufacturer,

            string? model,

            string name,

            string? operatingSystem,

            string? operatingSystemVersion,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            double version)
        {
            Attributes = attributes;
            AzureApiVersion = azureApiVersion;
            DiscoveryId = discoveryId;
            Endpoints = endpoints;
            ExtendedLocation = extendedLocation;
            ExternalDeviceId = externalDeviceId;
            Id = id;
            Location = location;
            Manufacturer = manufacturer;
            Model = model;
            Name = name;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
