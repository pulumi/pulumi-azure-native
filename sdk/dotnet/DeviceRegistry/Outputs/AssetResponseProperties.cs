// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.Outputs
{

    /// <summary>
    /// Asset resource properties.
    /// </summary>
    [OutputType]
    public sealed class AssetResponseProperties
    {
        /// <summary>
        /// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format &lt;ModuleCR.metadata.namespace&gt;/&lt;ModuleCR.metadata.name&gt;.
        /// </summary>
        public readonly string AssetEndpointProfileUri;
        /// <summary>
        /// Resource path to asset type (model) definition.
        /// </summary>
        public readonly string? AssetType;
        /// <summary>
        /// A set of key-value pairs that contain custom attributes set by the customer.
        /// </summary>
        public readonly object? Attributes;
        /// <summary>
        /// Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetPropertiesResponseDataPoints> DataPoints;
        /// <summary>
        /// Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        /// </summary>
        public readonly string? DefaultDataPointsConfiguration;
        /// <summary>
        /// Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        /// </summary>
        public readonly string? DefaultEventsConfiguration;
        /// <summary>
        /// Human-readable description of the asset.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Human-readable display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Reference to the documentation.
        /// </summary>
        public readonly string? DocumentationUri;
        /// <summary>
        /// Enabled/Disabled status of the asset.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetPropertiesResponseEvents> Events;
        /// <summary>
        /// Asset id provided by the customer.
        /// </summary>
        public readonly string? ExternalAssetId;
        /// <summary>
        /// Revision number of the hardware.
        /// </summary>
        public readonly string? HardwareRevision;
        /// <summary>
        /// Asset manufacturer name.
        /// </summary>
        public readonly string? Manufacturer;
        /// <summary>
        /// Asset manufacturer URI.
        /// </summary>
        public readonly string? ManufacturerUri;
        /// <summary>
        /// Asset model name.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// Asset product code.
        /// </summary>
        public readonly string? ProductCode;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Asset serial number.
        /// </summary>
        public readonly string? SerialNumber;
        /// <summary>
        /// Revision number of the software.
        /// </summary>
        public readonly string? SoftwareRevision;
        /// <summary>
        /// Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
        /// </summary>
        public readonly Outputs.AssetPropertiesResponseStatus Status;
        /// <summary>
        /// Globally unique, immutable, non-reusable id.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private AssetResponseProperties(
            string assetEndpointProfileUri,

            string? assetType,

            object? attributes,

            ImmutableArray<Outputs.AssetPropertiesResponseDataPoints> dataPoints,

            string? defaultDataPointsConfiguration,

            string? defaultEventsConfiguration,

            string? description,

            string? displayName,

            string? documentationUri,

            bool? enabled,

            ImmutableArray<Outputs.AssetPropertiesResponseEvents> events,

            string? externalAssetId,

            string? hardwareRevision,

            string? manufacturer,

            string? manufacturerUri,

            string? model,

            string? productCode,

            string provisioningState,

            string? serialNumber,

            string? softwareRevision,

            Outputs.AssetPropertiesResponseStatus status,

            string uuid,

            int version)
        {
            AssetEndpointProfileUri = assetEndpointProfileUri;
            AssetType = assetType;
            Attributes = attributes;
            DataPoints = dataPoints;
            DefaultDataPointsConfiguration = defaultDataPointsConfiguration;
            DefaultEventsConfiguration = defaultEventsConfiguration;
            Description = description;
            DisplayName = displayName;
            DocumentationUri = documentationUri;
            Enabled = enabled;
            Events = events;
            ExternalAssetId = externalAssetId;
            HardwareRevision = hardwareRevision;
            Manufacturer = manufacturer;
            ManufacturerUri = manufacturerUri;
            Model = model;
            ProductCode = productCode;
            ProvisioningState = provisioningState;
            SerialNumber = serialNumber;
            SoftwareRevision = softwareRevision;
            Status = status;
            Uuid = uuid;
            Version = version;
        }
    }
}
