// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.Outputs
{

    /// <summary>
    /// Defines the Asset Endpoint Profile properties.
    /// </summary>
    [OutputType]
    public sealed class AssetEndpointProfilePropertiesResponse
    {
        /// <summary>
        /// Contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        /// </summary>
        public readonly string? AdditionalConfiguration;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        /// </summary>
        public readonly string TargetAddress;
        /// <summary>
        /// Defines the authentication mechanism for the southbound connector connecting to the shop floor/OT device.
        /// </summary>
        public readonly Outputs.AssetEndpointProfilePropertiesResponseTransportAuthentication? TransportAuthentication;
        /// <summary>
        /// Defines the client authentication mechanism to the server.
        /// </summary>
        public readonly Outputs.AssetEndpointProfilePropertiesResponseUserAuthentication? UserAuthentication;
        /// <summary>
        /// Globally unique, immutable, non-reusable id.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private AssetEndpointProfilePropertiesResponse(
            string? additionalConfiguration,

            string provisioningState,

            string targetAddress,

            Outputs.AssetEndpointProfilePropertiesResponseTransportAuthentication? transportAuthentication,

            Outputs.AssetEndpointProfilePropertiesResponseUserAuthentication? userAuthentication,

            string uuid)
        {
            AdditionalConfiguration = additionalConfiguration;
            ProvisioningState = provisioningState;
            TargetAddress = targetAddress;
            TransportAuthentication = transportAuthentication;
            UserAuthentication = userAuthentication;
            Uuid = uuid;
        }
    }
}
