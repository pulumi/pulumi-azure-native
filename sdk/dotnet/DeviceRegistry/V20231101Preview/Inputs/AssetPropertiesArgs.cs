// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.V20231101Preview.Inputs
{

    /// <summary>
    /// Asset resource properties.
    /// </summary>
    public sealed class AssetPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format &lt;ModuleCR.metadata.namespace&gt;/&lt;ModuleCR.metadata.name&gt;.
        /// </summary>
        [Input("assetEndpointProfileUri", required: true)]
        public Input<string> AssetEndpointProfileUri { get; set; } = null!;

        /// <summary>
        /// Resource path to asset type (model) definition.
        /// </summary>
        [Input("assetType")]
        public Input<string>? AssetType { get; set; }

        /// <summary>
        /// A set of key-value pairs that contain custom attributes set by the customer.
        /// </summary>
        [Input("attributes")]
        public Input<object>? Attributes { get; set; }

        [Input("dataPoints")]
        private InputList<Inputs.AssetPropertiesDataPointsArgs>? _dataPoints;

        /// <summary>
        /// Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element.
        /// </summary>
        public InputList<Inputs.AssetPropertiesDataPointsArgs> DataPoints
        {
            get => _dataPoints ?? (_dataPoints = new InputList<Inputs.AssetPropertiesDataPointsArgs>());
            set => _dataPoints = value;
        }

        /// <summary>
        /// Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        /// </summary>
        [Input("defaultDataPointsConfiguration")]
        public Input<string>? DefaultDataPointsConfiguration { get; set; }

        /// <summary>
        /// Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        /// </summary>
        [Input("defaultEventsConfiguration")]
        public Input<string>? DefaultEventsConfiguration { get; set; }

        /// <summary>
        /// Human-readable description of the asset.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Human-readable display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Reference to the documentation.
        /// </summary>
        [Input("documentationUri")]
        public Input<string>? DocumentationUri { get; set; }

        /// <summary>
        /// Enabled/Disabled status of the asset.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("events")]
        private InputList<Inputs.AssetPropertiesEventsArgs>? _events;

        /// <summary>
        /// Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element.
        /// </summary>
        public InputList<Inputs.AssetPropertiesEventsArgs> Events
        {
            get => _events ?? (_events = new InputList<Inputs.AssetPropertiesEventsArgs>());
            set => _events = value;
        }

        /// <summary>
        /// Asset id provided by the customer.
        /// </summary>
        [Input("externalAssetId")]
        public Input<string>? ExternalAssetId { get; set; }

        /// <summary>
        /// Revision number of the hardware.
        /// </summary>
        [Input("hardwareRevision")]
        public Input<string>? HardwareRevision { get; set; }

        /// <summary>
        /// Asset manufacturer name.
        /// </summary>
        [Input("manufacturer")]
        public Input<string>? Manufacturer { get; set; }

        /// <summary>
        /// Asset manufacturer URI.
        /// </summary>
        [Input("manufacturerUri")]
        public Input<string>? ManufacturerUri { get; set; }

        /// <summary>
        /// Asset model name.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// Asset product code.
        /// </summary>
        [Input("productCode")]
        public Input<string>? ProductCode { get; set; }

        /// <summary>
        /// Asset serial number.
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// Revision number of the software.
        /// </summary>
        [Input("softwareRevision")]
        public Input<string>? SoftwareRevision { get; set; }

        public AssetPropertiesArgs()
        {
        }
        public static new AssetPropertiesArgs Empty => new AssetPropertiesArgs();
    }
}
