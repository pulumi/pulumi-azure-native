// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry
{
    /// <summary>
    /// Discovered device definition.
    /// 
    /// Uses Azure REST API version 2025-07-01-preview.
    /// 
    /// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:deviceregistry:NamespaceDiscoveredDevice")]
    public partial class NamespaceDiscoveredDevice : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A set of key-value pairs that contain custom attributes.
        /// </summary>
        [Output("attributes")]
        public Output<object?> Attributes { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Identifier used to detect changes in the discovered device.
        /// </summary>
        [Output("discoveryId")]
        public Output<string> DiscoveryId { get; private set; } = null!;

        /// <summary>
        /// Endpoints for discovered devices.
        /// </summary>
        [Output("endpoints")]
        public Output<Outputs.DiscoveredMessagingEndpointsResponse?> Endpoints { get; private set; } = null!;

        /// <summary>
        /// The extended location.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant.
        /// </summary>
        [Output("externalDeviceId")]
        public Output<string?> ExternalDeviceId { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Device manufacturer.
        /// </summary>
        [Output("manufacturer")]
        public Output<string?> Manufacturer { get; private set; } = null!;

        /// <summary>
        /// Device model.
        /// </summary>
        [Output("model")]
        public Output<string?> Model { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Device operating system name.
        /// </summary>
        [Output("operatingSystem")]
        public Output<string?> OperatingSystem { get; private set; } = null!;

        /// <summary>
        /// Device operating system version.
        /// </summary>
        [Output("operatingSystemVersion")]
        public Output<string?> OperatingSystemVersion { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        [Output("version")]
        public Output<double> Version { get; private set; } = null!;


        /// <summary>
        /// Create a NamespaceDiscoveredDevice resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamespaceDiscoveredDevice(string name, NamespaceDiscoveredDeviceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:deviceregistry:NamespaceDiscoveredDevice", name, args ?? new NamespaceDiscoveredDeviceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamespaceDiscoveredDevice(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:deviceregistry:NamespaceDiscoveredDevice", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:deviceregistry/v20250701preview:NamespaceDiscoveredDevice" },
                    new global::Pulumi.Alias { Type = "azure-native:deviceregistry/v20251001:NamespaceDiscoveredDevice" },
                    new global::Pulumi.Alias { Type = "azure-native:deviceregistry/v20251101preview:NamespaceDiscoveredDevice" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamespaceDiscoveredDevice resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamespaceDiscoveredDevice Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NamespaceDiscoveredDevice(name, id, options);
        }
    }

    public sealed class NamespaceDiscoveredDeviceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A set of key-value pairs that contain custom attributes.
        /// </summary>
        [Input("attributes")]
        public Input<object>? Attributes { get; set; }

        /// <summary>
        /// The name of the discovered device.
        /// </summary>
        [Input("discoveredDeviceName")]
        public Input<string>? DiscoveredDeviceName { get; set; }

        /// <summary>
        /// Identifier used to detect changes in the discovered device.
        /// </summary>
        [Input("discoveryId", required: true)]
        public Input<string> DiscoveryId { get; set; } = null!;

        /// <summary>
        /// Endpoints for discovered devices.
        /// </summary>
        [Input("endpoints")]
        public Input<Inputs.DiscoveredMessagingEndpointsArgs>? Endpoints { get; set; }

        /// <summary>
        /// The extended location.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant.
        /// </summary>
        [Input("externalDeviceId")]
        public Input<string>? ExternalDeviceId { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Device manufacturer.
        /// </summary>
        [Input("manufacturer")]
        public Input<string>? Manufacturer { get; set; }

        /// <summary>
        /// Device model.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// Device operating system name.
        /// </summary>
        [Input("operatingSystem")]
        public Input<string>? OperatingSystem { get; set; }

        /// <summary>
        /// Device operating system version.
        /// </summary>
        [Input("operatingSystemVersion")]
        public Input<string>? OperatingSystemVersion { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        [Input("version", required: true)]
        public Input<double> Version { get; set; } = null!;

        public NamespaceDiscoveredDeviceArgs()
        {
        }
        public static new NamespaceDiscoveredDeviceArgs Empty => new NamespaceDiscoveredDeviceArgs();
    }
}
