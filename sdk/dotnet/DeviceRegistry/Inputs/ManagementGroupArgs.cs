// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.Inputs
{

    /// <summary>
    /// Defines the management group properties.
    /// </summary>
    public sealed class ManagementGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.ManagementActionArgs>? _actions;

        /// <summary>
        /// Array of actions that are part of the management group. Each action can have an individual configuration.
        /// </summary>
        public InputList<Inputs.ManagementActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.ManagementActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Default response timeout for all actions that are part of the management group.
        /// </summary>
        [Input("defaultTimeoutInSeconds")]
        public Input<int>? DefaultTimeoutInSeconds { get; set; }

        /// <summary>
        /// Default MQTT topic path on which a client will receive the request for all actions that are part of the management group.
        /// </summary>
        [Input("defaultTopic")]
        public Input<string>? DefaultTopic { get; set; }

        /// <summary>
        /// Stringified JSON that contains connector-specific configuration for the management group.
        /// </summary>
        [Input("managementGroupConfiguration")]
        public Input<string>? ManagementGroupConfiguration { get; set; }

        /// <summary>
        /// Name of the management group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// URI or type definition ID.
        /// </summary>
        [Input("typeRef")]
        public Input<string>? TypeRef { get; set; }

        public ManagementGroupArgs()
        {
            DefaultTimeoutInSeconds = 100;
        }
        public static new ManagementGroupArgs Empty => new ManagementGroupArgs();
    }
}
