// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.V20240901Preview
{
    public static class GetDiscoveredAssetEndpointProfile
    {
        /// <summary>
        /// Get a DiscoveredAssetEndpointProfile
        /// </summary>
        public static Task<GetDiscoveredAssetEndpointProfileResult> InvokeAsync(GetDiscoveredAssetEndpointProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiscoveredAssetEndpointProfileResult>("azure-native:deviceregistry/v20240901preview:getDiscoveredAssetEndpointProfile", args ?? new GetDiscoveredAssetEndpointProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DiscoveredAssetEndpointProfile
        /// </summary>
        public static Output<GetDiscoveredAssetEndpointProfileResult> Invoke(GetDiscoveredAssetEndpointProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoveredAssetEndpointProfileResult>("azure-native:deviceregistry/v20240901preview:getDiscoveredAssetEndpointProfile", args ?? new GetDiscoveredAssetEndpointProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiscoveredAssetEndpointProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Discovered Asset Endpoint Profile name parameter.
        /// </summary>
        [Input("discoveredAssetEndpointProfileName", required: true)]
        public string DiscoveredAssetEndpointProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDiscoveredAssetEndpointProfileArgs()
        {
        }
        public static new GetDiscoveredAssetEndpointProfileArgs Empty => new GetDiscoveredAssetEndpointProfileArgs();
    }

    public sealed class GetDiscoveredAssetEndpointProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Discovered Asset Endpoint Profile name parameter.
        /// </summary>
        [Input("discoveredAssetEndpointProfileName", required: true)]
        public Input<string> DiscoveredAssetEndpointProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDiscoveredAssetEndpointProfileInvokeArgs()
        {
        }
        public static new GetDiscoveredAssetEndpointProfileInvokeArgs Empty => new GetDiscoveredAssetEndpointProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiscoveredAssetEndpointProfileResult
    {
        /// <summary>
        /// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
        /// </summary>
        public readonly string? AdditionalConfiguration;
        /// <summary>
        /// Identifier used to detect changes in the asset endpoint profile.
        /// </summary>
        public readonly string DiscoveryId;
        /// <summary>
        /// Defines the configuration for the connector type that is being used with the endpoint profile.
        /// </summary>
        public readonly string EndpointProfileType;
        /// <summary>
        /// The extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of supported authentication methods supported by the target server.
        /// </summary>
        public readonly ImmutableArray<string> SupportedAuthenticationMethods;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
        /// </summary>
        public readonly string TargetAddress;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        public readonly double Version;

        [OutputConstructor]
        private GetDiscoveredAssetEndpointProfileResult(
            string? additionalConfiguration,

            string discoveryId,

            string endpointProfileType,

            Outputs.ExtendedLocationResponse extendedLocation,

            string id,

            string location,

            string name,

            string provisioningState,

            ImmutableArray<string> supportedAuthenticationMethods,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string targetAddress,

            string type,

            double version)
        {
            AdditionalConfiguration = additionalConfiguration;
            DiscoveryId = discoveryId;
            EndpointProfileType = endpointProfileType;
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SupportedAuthenticationMethods = supportedAuthenticationMethods;
            SystemData = systemData;
            Tags = tags;
            TargetAddress = targetAddress;
            Type = type;
            Version = version;
        }
    }
}
