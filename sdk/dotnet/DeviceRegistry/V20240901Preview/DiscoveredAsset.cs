// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry.V20240901Preview
{
    /// <summary>
    /// Discovered Asset definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:deviceregistry/v20240901preview:DiscoveredAsset")]
    public partial class DiscoveredAsset : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
        /// </summary>
        [Output("assetEndpointProfileRef")]
        public Output<string> AssetEndpointProfileRef { get; private set; } = null!;

        /// <summary>
        /// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
        /// </summary>
        [Output("datasets")]
        public Output<ImmutableArray<Outputs.DiscoveredDatasetResponse>> Datasets { get; private set; } = null!;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
        /// </summary>
        [Output("defaultDatasetsConfiguration")]
        public Output<string?> DefaultDatasetsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
        /// </summary>
        [Output("defaultEventsConfiguration")]
        public Output<string?> DefaultEventsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Object that describes the default topic information for the asset.
        /// </summary>
        [Output("defaultTopic")]
        public Output<Outputs.TopicResponse?> DefaultTopic { get; private set; } = null!;

        /// <summary>
        /// Identifier used to detect changes in the asset.
        /// </summary>
        [Output("discoveryId")]
        public Output<string> DiscoveryId { get; private set; } = null!;

        /// <summary>
        /// Reference to the documentation.
        /// </summary>
        [Output("documentationUri")]
        public Output<string?> DocumentationUri { get; private set; } = null!;

        /// <summary>
        /// Array of events that are part of the asset. Each event can have per-event configuration.
        /// </summary>
        [Output("events")]
        public Output<ImmutableArray<Outputs.DiscoveredEventResponse>> Events { get; private set; } = null!;

        /// <summary>
        /// The extended location.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// Revision number of the hardware.
        /// </summary>
        [Output("hardwareRevision")]
        public Output<string?> HardwareRevision { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Asset manufacturer name.
        /// </summary>
        [Output("manufacturer")]
        public Output<string?> Manufacturer { get; private set; } = null!;

        /// <summary>
        /// Asset manufacturer URI.
        /// </summary>
        [Output("manufacturerUri")]
        public Output<string?> ManufacturerUri { get; private set; } = null!;

        /// <summary>
        /// Asset model name.
        /// </summary>
        [Output("model")]
        public Output<string?> Model { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Asset product code.
        /// </summary>
        [Output("productCode")]
        public Output<string?> ProductCode { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Asset serial number.
        /// </summary>
        [Output("serialNumber")]
        public Output<string?> SerialNumber { get; private set; } = null!;

        /// <summary>
        /// Revision number of the software.
        /// </summary>
        [Output("softwareRevision")]
        public Output<string?> SoftwareRevision { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        [Output("version")]
        public Output<double> Version { get; private set; } = null!;


        /// <summary>
        /// Create a DiscoveredAsset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiscoveredAsset(string name, DiscoveredAssetArgs args, CustomResourceOptions? options = null)
            : base("azure-native:deviceregistry/v20240901preview:DiscoveredAsset", name, args ?? new DiscoveredAssetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiscoveredAsset(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:deviceregistry/v20240901preview:DiscoveredAsset", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:deviceregistry:DiscoveredAsset" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiscoveredAsset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiscoveredAsset Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DiscoveredAsset(name, id, options);
        }
    }

    public sealed class DiscoveredAssetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
        /// </summary>
        [Input("assetEndpointProfileRef", required: true)]
        public Input<string> AssetEndpointProfileRef { get; set; } = null!;

        [Input("datasets")]
        private InputList<Inputs.DiscoveredDatasetArgs>? _datasets;

        /// <summary>
        /// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
        /// </summary>
        public InputList<Inputs.DiscoveredDatasetArgs> Datasets
        {
            get => _datasets ?? (_datasets = new InputList<Inputs.DiscoveredDatasetArgs>());
            set => _datasets = value;
        }

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
        /// </summary>
        [Input("defaultDatasetsConfiguration")]
        public Input<string>? DefaultDatasetsConfiguration { get; set; }

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
        /// </summary>
        [Input("defaultEventsConfiguration")]
        public Input<string>? DefaultEventsConfiguration { get; set; }

        /// <summary>
        /// Object that describes the default topic information for the asset.
        /// </summary>
        [Input("defaultTopic")]
        public Input<Inputs.TopicArgs>? DefaultTopic { get; set; }

        /// <summary>
        /// Discovered Asset name parameter.
        /// </summary>
        [Input("discoveredAssetName")]
        public Input<string>? DiscoveredAssetName { get; set; }

        /// <summary>
        /// Identifier used to detect changes in the asset.
        /// </summary>
        [Input("discoveryId", required: true)]
        public Input<string> DiscoveryId { get; set; } = null!;

        /// <summary>
        /// Reference to the documentation.
        /// </summary>
        [Input("documentationUri")]
        public Input<string>? DocumentationUri { get; set; }

        [Input("events")]
        private InputList<Inputs.DiscoveredEventArgs>? _events;

        /// <summary>
        /// Array of events that are part of the asset. Each event can have per-event configuration.
        /// </summary>
        public InputList<Inputs.DiscoveredEventArgs> Events
        {
            get => _events ?? (_events = new InputList<Inputs.DiscoveredEventArgs>());
            set => _events = value;
        }

        /// <summary>
        /// The extended location.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// Revision number of the hardware.
        /// </summary>
        [Input("hardwareRevision")]
        public Input<string>? HardwareRevision { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Asset manufacturer name.
        /// </summary>
        [Input("manufacturer")]
        public Input<string>? Manufacturer { get; set; }

        /// <summary>
        /// Asset manufacturer URI.
        /// </summary>
        [Input("manufacturerUri")]
        public Input<string>? ManufacturerUri { get; set; }

        /// <summary>
        /// Asset model name.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// Asset product code.
        /// </summary>
        [Input("productCode")]
        public Input<string>? ProductCode { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Asset serial number.
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// Revision number of the software.
        /// </summary>
        [Input("softwareRevision")]
        public Input<string>? SoftwareRevision { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        [Input("version", required: true)]
        public Input<double> Version { get; set; } = null!;

        public DiscoveredAssetArgs()
        {
        }
        public static new DiscoveredAssetArgs Empty => new DiscoveredAssetArgs();
    }
}
