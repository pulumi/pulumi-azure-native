// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceRegistry
{
    public static class GetNamespaceDevice
    {
        /// <summary>
        /// Get a NamespaceDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// </summary>
        public static Task<GetNamespaceDeviceResult> InvokeAsync(GetNamespaceDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceDeviceResult>("azure-native:deviceregistry:getNamespaceDevice", args ?? new GetNamespaceDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a NamespaceDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// </summary>
        public static Output<GetNamespaceDeviceResult> Invoke(GetNamespaceDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceDeviceResult>("azure-native:deviceregistry:getNamespaceDevice", args ?? new GetNamespaceDeviceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a NamespaceDevice
        /// 
        /// Uses Azure REST API version 2025-07-01-preview.
        /// </summary>
        public static Output<GetNamespaceDeviceResult> Invoke(GetNamespaceDeviceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceDeviceResult>("azure-native:deviceregistry:getNamespaceDevice", args ?? new GetNamespaceDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the device.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceDeviceArgs()
        {
        }
        public static new GetNamespaceDeviceArgs Empty => new GetNamespaceDeviceArgs();
    }

    public sealed class GetNamespaceDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the device.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNamespaceDeviceInvokeArgs()
        {
        }
        public static new GetNamespaceDeviceInvokeArgs Empty => new GetNamespaceDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceDeviceResult
    {
        /// <summary>
        /// A set of key-value pairs that contain custom attributes set by the customer.
        /// </summary>
        public readonly object? Attributes;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
        /// </summary>
        public readonly string? DiscoveredDeviceRef;
        /// <summary>
        /// Indicates if the resource is enabled or not.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Property bag containing the device's unassigned and assigned endpoints.
        /// </summary>
        public readonly Outputs.MessagingEndpointsResponse? Endpoints;
        /// <summary>
        /// Resource Tag.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// The Device ID provided by the customer.
        /// </summary>
        public readonly string? ExternalDeviceId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A timestamp (in UTC) that is updated each time the resource is modified.
        /// </summary>
        public readonly string LastTransitionTime;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Device manufacturer.
        /// </summary>
        public readonly string? Manufacturer;
        /// <summary>
        /// Device model.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Device operating system.
        /// </summary>
        public readonly string? OperatingSystem;
        /// <summary>
        /// Device operating system version.
        /// </summary>
        public readonly string? OperatingSystemVersion;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Device status updates.
        /// </summary>
        public readonly Outputs.DeviceStatusResponse Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A unique identifier for the device.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        public readonly double Version;

        [OutputConstructor]
        private GetNamespaceDeviceResult(
            object? attributes,

            string azureApiVersion,

            string? discoveredDeviceRef,

            bool? enabled,

            Outputs.MessagingEndpointsResponse? endpoints,

            string etag,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string? externalDeviceId,

            string id,

            string lastTransitionTime,

            string location,

            string? manufacturer,

            string? model,

            string name,

            string? operatingSystem,

            string? operatingSystemVersion,

            string provisioningState,

            Outputs.DeviceStatusResponse status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string uuid,

            double version)
        {
            Attributes = attributes;
            AzureApiVersion = azureApiVersion;
            DiscoveredDeviceRef = discoveredDeviceRef;
            Enabled = enabled;
            Endpoints = endpoints;
            Etag = etag;
            ExtendedLocation = extendedLocation;
            ExternalDeviceId = externalDeviceId;
            Id = id;
            LastTransitionTime = lastTransitionTime;
            Location = location;
            Manufacturer = manufacturer;
            Model = model;
            Name = name;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Uuid = uuid;
            Version = version;
        }
    }
}
