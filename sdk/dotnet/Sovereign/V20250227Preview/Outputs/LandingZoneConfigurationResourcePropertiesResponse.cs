// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sovereign.V20250227Preview.Outputs
{

    /// <summary>
    /// The properties of landing zone configuration resource type.
    /// </summary>
    [OutputType]
    public sealed class LandingZoneConfigurationResourcePropertiesResponse
    {
        /// <summary>
        /// The status that indicates the current phase of the configuration process for a deployment.
        /// </summary>
        public readonly string AuthoringStatus;
        /// <summary>
        /// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
        /// </summary>
        public readonly string AzureBastionCreationOption;
        /// <summary>
        /// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
        /// </summary>
        public readonly string? AzureBastionSubnetCidrBlock;
        /// <summary>
        /// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomNamingConventionResponse> CustomNamingConvention;
        /// <summary>
        /// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
        /// </summary>
        public readonly string DdosProtectionCreationOption;
        /// <summary>
        /// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
        /// </summary>
        public readonly Outputs.DecommissionedManagementGroupPropertiesResponse? DecommissionedMgMetadata;
        /// <summary>
        /// The resource ID of the Bastion when reusing an existing one.
        /// </summary>
        public readonly string? ExistingAzureBastionId;
        /// <summary>
        /// The resource ID of the DDoS protection plan when reusing an existing one.
        /// </summary>
        public readonly string? ExistingDdosProtectionId;
        /// <summary>
        /// The resource ID of the log analytics workspace when reusing an existing one.
        /// </summary>
        public readonly string? ExistingLogAnalyticsWorkspaceId;
        /// <summary>
        /// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
        /// </summary>
        public readonly string FirewallCreationOption;
        /// <summary>
        /// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
        /// </summary>
        public readonly string? FirewallSubnetCidrBlock;
        /// <summary>
        /// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
        /// </summary>
        public readonly string GatewaySubnetCidrBlock;
        /// <summary>
        /// The Virtual Network address. Specify the address using IPv4 CIDR notation.
        /// </summary>
        public readonly string HubNetworkCidrBlock;
        /// <summary>
        /// The child management groups of 'Landing Zones' management group and their assigned policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.LandingZoneManagementGroupPropertiesResponse> LandingZonesMgChildren;
        /// <summary>
        /// The assigned policies of the 'Landing Zones' management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? LandingZonesMgMetadata;
        /// <summary>
        /// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
        /// </summary>
        public readonly string LogAnalyticsWorkspaceCreationOption;
        /// <summary>
        /// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
        /// </summary>
        public readonly double LogRetentionInDays;
        /// <summary>
        /// The managed identity to be assigned to this landing zone configuration.
        /// </summary>
        public readonly Outputs.ManagedIdentityPropertiesResponse ManagedIdentity;
        /// <summary>
        /// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
        /// </summary>
        public readonly string? NamingConventionFormula;
        /// <summary>
        /// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? PlatformConnectivityMgMetadata;
        /// <summary>
        /// The assigned policies of the 'Identity' management group under 'Platform' management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? PlatformIdentityMgMetadata;
        /// <summary>
        /// The assigned policies of the 'Management' management group under 'Platform' management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? PlatformManagementMgMetadata;
        /// <summary>
        /// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
        /// </summary>
        public readonly ImmutableArray<Outputs.PlatformManagementGroupPropertiesResponse> PlatformMgChildren;
        /// <summary>
        /// The assigned policies of the 'Platform' management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? PlatformMgMetadata;
        /// <summary>
        /// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone configuration.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
        /// </summary>
        public readonly Outputs.SandboxManagementGroupPropertiesResponse? SandboxMgMetadata;
        /// <summary>
        /// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
        /// </summary>
        public readonly ImmutableArray<Outputs.TagsResponse> Tags;
        /// <summary>
        /// The assigned policies of the parent management group.
        /// </summary>
        public readonly Outputs.ManagementGroupPropertiesResponse? TopLevelMgMetadata;

        [OutputConstructor]
        private LandingZoneConfigurationResourcePropertiesResponse(
            string authoringStatus,

            string azureBastionCreationOption,

            string? azureBastionSubnetCidrBlock,

            ImmutableArray<Outputs.CustomNamingConventionResponse> customNamingConvention,

            string ddosProtectionCreationOption,

            Outputs.DecommissionedManagementGroupPropertiesResponse? decommissionedMgMetadata,

            string? existingAzureBastionId,

            string? existingDdosProtectionId,

            string? existingLogAnalyticsWorkspaceId,

            string firewallCreationOption,

            string? firewallSubnetCidrBlock,

            string gatewaySubnetCidrBlock,

            string hubNetworkCidrBlock,

            ImmutableArray<Outputs.LandingZoneManagementGroupPropertiesResponse> landingZonesMgChildren,

            Outputs.ManagementGroupPropertiesResponse? landingZonesMgMetadata,

            string logAnalyticsWorkspaceCreationOption,

            double logRetentionInDays,

            Outputs.ManagedIdentityPropertiesResponse managedIdentity,

            string? namingConventionFormula,

            Outputs.ManagementGroupPropertiesResponse? platformConnectivityMgMetadata,

            Outputs.ManagementGroupPropertiesResponse? platformIdentityMgMetadata,

            Outputs.ManagementGroupPropertiesResponse? platformManagementMgMetadata,

            ImmutableArray<Outputs.PlatformManagementGroupPropertiesResponse> platformMgChildren,

            Outputs.ManagementGroupPropertiesResponse? platformMgMetadata,

            string provisioningState,

            Outputs.SandboxManagementGroupPropertiesResponse? sandboxMgMetadata,

            ImmutableArray<Outputs.TagsResponse> tags,

            Outputs.ManagementGroupPropertiesResponse? topLevelMgMetadata)
        {
            AuthoringStatus = authoringStatus;
            AzureBastionCreationOption = azureBastionCreationOption;
            AzureBastionSubnetCidrBlock = azureBastionSubnetCidrBlock;
            CustomNamingConvention = customNamingConvention;
            DdosProtectionCreationOption = ddosProtectionCreationOption;
            DecommissionedMgMetadata = decommissionedMgMetadata;
            ExistingAzureBastionId = existingAzureBastionId;
            ExistingDdosProtectionId = existingDdosProtectionId;
            ExistingLogAnalyticsWorkspaceId = existingLogAnalyticsWorkspaceId;
            FirewallCreationOption = firewallCreationOption;
            FirewallSubnetCidrBlock = firewallSubnetCidrBlock;
            GatewaySubnetCidrBlock = gatewaySubnetCidrBlock;
            HubNetworkCidrBlock = hubNetworkCidrBlock;
            LandingZonesMgChildren = landingZonesMgChildren;
            LandingZonesMgMetadata = landingZonesMgMetadata;
            LogAnalyticsWorkspaceCreationOption = logAnalyticsWorkspaceCreationOption;
            LogRetentionInDays = logRetentionInDays;
            ManagedIdentity = managedIdentity;
            NamingConventionFormula = namingConventionFormula;
            PlatformConnectivityMgMetadata = platformConnectivityMgMetadata;
            PlatformIdentityMgMetadata = platformIdentityMgMetadata;
            PlatformManagementMgMetadata = platformManagementMgMetadata;
            PlatformMgChildren = platformMgChildren;
            PlatformMgMetadata = platformMgMetadata;
            ProvisioningState = provisioningState;
            SandboxMgMetadata = sandboxMgMetadata;
            Tags = tags;
            TopLevelMgMetadata = topLevelMgMetadata;
        }
    }
}
