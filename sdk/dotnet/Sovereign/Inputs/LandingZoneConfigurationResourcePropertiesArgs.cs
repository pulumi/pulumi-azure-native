// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sovereign.Inputs
{

    /// <summary>
    /// The properties of landing zone configuration resource type.
    /// </summary>
    public sealed class LandingZoneConfigurationResourcePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
        /// </summary>
        [Input("azureBastionCreationOption", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Sovereign.ResourceCreationOptions> AzureBastionCreationOption { get; set; } = null!;

        /// <summary>
        /// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
        /// </summary>
        [Input("azureBastionSubnetCidrBlock")]
        public Input<string>? AzureBastionSubnetCidrBlock { get; set; }

        [Input("customNamingConvention")]
        private InputList<Inputs.CustomNamingConventionArgs>? _customNamingConvention;

        /// <summary>
        /// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
        /// </summary>
        public InputList<Inputs.CustomNamingConventionArgs> CustomNamingConvention
        {
            get => _customNamingConvention ?? (_customNamingConvention = new InputList<Inputs.CustomNamingConventionArgs>());
            set => _customNamingConvention = value;
        }

        /// <summary>
        /// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
        /// </summary>
        [Input("ddosProtectionCreationOption", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Sovereign.ResourceCreationOptions> DdosProtectionCreationOption { get; set; } = null!;

        /// <summary>
        /// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
        /// </summary>
        [Input("decommissionedMgMetadata")]
        public Input<Inputs.DecommissionedManagementGroupPropertiesArgs>? DecommissionedMgMetadata { get; set; }

        /// <summary>
        /// The resource ID of the Bastion when reusing an existing one.
        /// </summary>
        [Input("existingAzureBastionId")]
        public Input<string>? ExistingAzureBastionId { get; set; }

        /// <summary>
        /// The resource ID of the DDoS protection plan when reusing an existing one.
        /// </summary>
        [Input("existingDdosProtectionId")]
        public Input<string>? ExistingDdosProtectionId { get; set; }

        /// <summary>
        /// The resource ID of the log analytics workspace when reusing an existing one.
        /// </summary>
        [Input("existingLogAnalyticsWorkspaceId")]
        public Input<string>? ExistingLogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
        /// </summary>
        [Input("firewallCreationOption", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Sovereign.FirewallCreationOptions> FirewallCreationOption { get; set; } = null!;

        /// <summary>
        /// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
        /// </summary>
        [Input("firewallSubnetCidrBlock")]
        public Input<string>? FirewallSubnetCidrBlock { get; set; }

        /// <summary>
        /// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
        /// </summary>
        [Input("gatewaySubnetCidrBlock", required: true)]
        public Input<string> GatewaySubnetCidrBlock { get; set; } = null!;

        /// <summary>
        /// The Virtual Network address. Specify the address using IPv4 CIDR notation.
        /// </summary>
        [Input("hubNetworkCidrBlock", required: true)]
        public Input<string> HubNetworkCidrBlock { get; set; } = null!;

        [Input("landingZonesMgChildren")]
        private InputList<Inputs.LandingZoneManagementGroupPropertiesArgs>? _landingZonesMgChildren;

        /// <summary>
        /// The child management groups of 'Landing Zones' management group and their assigned policies.
        /// </summary>
        public InputList<Inputs.LandingZoneManagementGroupPropertiesArgs> LandingZonesMgChildren
        {
            get => _landingZonesMgChildren ?? (_landingZonesMgChildren = new InputList<Inputs.LandingZoneManagementGroupPropertiesArgs>());
            set => _landingZonesMgChildren = value;
        }

        /// <summary>
        /// The assigned policies of the 'Landing Zones' management group.
        /// </summary>
        [Input("landingZonesMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? LandingZonesMgMetadata { get; set; }

        /// <summary>
        /// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
        /// </summary>
        [Input("logAnalyticsWorkspaceCreationOption", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Sovereign.ResourceCreationOptions> LogAnalyticsWorkspaceCreationOption { get; set; } = null!;

        /// <summary>
        /// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
        /// </summary>
        [Input("logRetentionInDays", required: true)]
        public Input<double> LogRetentionInDays { get; set; } = null!;

        /// <summary>
        /// The managed identity to be assigned to this landing zone configuration.
        /// </summary>
        [Input("managedIdentity", required: true)]
        public Input<Inputs.ManagedIdentityPropertiesArgs> ManagedIdentity { get; set; } = null!;

        /// <summary>
        /// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
        /// </summary>
        [Input("namingConventionFormula")]
        public Input<string>? NamingConventionFormula { get; set; }

        /// <summary>
        /// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
        /// </summary>
        [Input("platformConnectivityMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? PlatformConnectivityMgMetadata { get; set; }

        /// <summary>
        /// The assigned policies of the 'Identity' management group under 'Platform' management group.
        /// </summary>
        [Input("platformIdentityMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? PlatformIdentityMgMetadata { get; set; }

        /// <summary>
        /// The assigned policies of the 'Management' management group under 'Platform' management group.
        /// </summary>
        [Input("platformManagementMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? PlatformManagementMgMetadata { get; set; }

        [Input("platformMgChildren")]
        private InputList<Inputs.PlatformManagementGroupPropertiesArgs>? _platformMgChildren;

        /// <summary>
        /// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
        /// </summary>
        public InputList<Inputs.PlatformManagementGroupPropertiesArgs> PlatformMgChildren
        {
            get => _platformMgChildren ?? (_platformMgChildren = new InputList<Inputs.PlatformManagementGroupPropertiesArgs>());
            set => _platformMgChildren = value;
        }

        /// <summary>
        /// The assigned policies of the 'Platform' management group.
        /// </summary>
        [Input("platformMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? PlatformMgMetadata { get; set; }

        /// <summary>
        /// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
        /// </summary>
        [Input("sandboxMgMetadata")]
        public Input<Inputs.SandboxManagementGroupPropertiesArgs>? SandboxMgMetadata { get; set; }

        [Input("tags")]
        private InputList<Inputs.TagsArgs>? _tags;

        /// <summary>
        /// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
        /// </summary>
        public InputList<Inputs.TagsArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TagsArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The assigned policies of the parent management group.
        /// </summary>
        [Input("topLevelMgMetadata")]
        public Input<Inputs.ManagementGroupPropertiesArgs>? TopLevelMgMetadata { get; set; }

        public LandingZoneConfigurationResourcePropertiesArgs()
        {
        }
        public static new LandingZoneConfigurationResourcePropertiesArgs Empty => new LandingZoneConfigurationResourcePropertiesArgs();
    }
}
