// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecommendationsService.V20220201.Inputs
{

    /// <summary>
    /// CORS details.
    /// </summary>
    public sealed class CorsRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedHeaders")]
        private InputList<string>? _allowedHeaders;

        /// <summary>
        /// The request headers that the origin domain may specify on the CORS request.
        /// </summary>
        public InputList<string> AllowedHeaders
        {
            get => _allowedHeaders ?? (_allowedHeaders = new InputList<string>());
            set => _allowedHeaders = value;
        }

        [Input("allowedMethods")]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;

        /// <summary>
        /// The origin domains that are permitted to make a request against the service via CORS.
        /// </summary>
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("exposedHeaders")]
        private InputList<string>? _exposedHeaders;

        /// <summary>
        /// The response headers to expose to CORS clients.
        /// </summary>
        public InputList<string> ExposedHeaders
        {
            get => _exposedHeaders ?? (_exposedHeaders = new InputList<string>());
            set => _exposedHeaders = value;
        }

        /// <summary>
        /// The number of seconds that the client/browser should cache a preflight response.
        /// </summary>
        [Input("maxAgeInSeconds")]
        public Input<int>? MaxAgeInSeconds { get; set; }

        public CorsRuleArgs()
        {
        }
        public static new CorsRuleArgs Empty => new CorsRuleArgs();
    }
}
