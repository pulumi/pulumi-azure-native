// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridNetwork.V20230901
{
    /// <summary>
    /// Network function resource response.
    /// </summary>
    [AzureNativeResourceType("azure-native:hybridnetwork/v20230901:NetworkFunction")]
    public partial class NetworkFunction : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The managed identity of the network function.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network function properties.
        /// </summary>
        [Output("properties")]
        public Output<Union<Outputs.NetworkFunctionValueWithSecretsResponse, Outputs.NetworkFunctionValueWithoutSecretsResponse>> Properties { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkFunction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkFunction(string name, NetworkFunctionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:hybridnetwork/v20230901:NetworkFunction", name, args ?? new NetworkFunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkFunction(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:hybridnetwork/v20230901:NetworkFunction", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:hybridnetwork:NetworkFunction" },
                    new global::Pulumi.Alias { Type = "azure-native:hybridnetwork/v20200101preview:NetworkFunction" },
                    new global::Pulumi.Alias { Type = "azure-native:hybridnetwork/v20210501:NetworkFunction" },
                    new global::Pulumi.Alias { Type = "azure-native:hybridnetwork/v20220101preview:NetworkFunction" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkFunction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkFunction Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkFunction(name, id, options);
        }
    }

    public sealed class NetworkFunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The managed identity of the network function.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name for the network function resource.
        /// </summary>
        [Input("networkFunctionName")]
        public Input<string>? NetworkFunctionName { get; set; }

        /// <summary>
        /// Network function properties.
        /// </summary>
        [Input("properties")]
        public InputUnion<Inputs.NetworkFunctionValueWithSecretsArgs, Inputs.NetworkFunctionValueWithoutSecretsArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkFunctionArgs()
        {
        }
        public static new NetworkFunctionArgs Empty => new NetworkFunctionArgs();
    }
}
