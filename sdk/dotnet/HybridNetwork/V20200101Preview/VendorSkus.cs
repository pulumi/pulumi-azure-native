// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HybridNetwork.V20200101Preview
{
    /// <summary>
    /// Sku sub resource.
    /// </summary>
    public partial class VendorSkus : Pulumi.CustomResource
    {
        /// <summary>
        /// Sku deployment mode.
        /// </summary>
        [Output("deploymentMode")]
        public Output<string?> DeploymentMode { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The parameters for the managed application to be supplied by vendor.
        /// </summary>
        [Output("managedApplicationParameters")]
        public Output<ImmutableDictionary<string, object>?> ManagedApplicationParameters { get; private set; } = null!;

        /// <summary>
        /// The template for the managed application deployment.
        /// </summary>
        [Output("managedApplicationTemplate")]
        public Output<ImmutableDictionary<string, object>?> ManagedApplicationTemplate { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Indicates if the vendor sku is in preview mode.
        /// </summary>
        [Output("preview")]
        public Output<bool?> Preview { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the vendor sku sub resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Sku type.
        /// </summary>
        [Output("skuType")]
        public Output<string?> SkuType { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The template definition of the virtual network function.
        /// </summary>
        [Output("virtualNetworkFunctionTemplate")]
        public Output<Outputs.VirtualNetworkFunctionTemplateResponse?> VirtualNetworkFunctionTemplate { get; private set; } = null!;


        /// <summary>
        /// Create a VendorSkus resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VendorSkus(string name, VendorSkusArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:hybridnetwork/v20200101preview:VendorSkus", name, args ?? new VendorSkusArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VendorSkus(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:hybridnetwork/v20200101preview:VendorSkus", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VendorSkus resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VendorSkus Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VendorSkus(name, id, options);
        }
    }

    public sealed class VendorSkusArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sku deployment mode.
        /// </summary>
        [Input("deploymentMode")]
        public Input<string>? DeploymentMode { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("managedApplicationParameters")]
        private InputMap<object>? _managedApplicationParameters;

        /// <summary>
        /// The parameters for the managed application to be supplied by vendor.
        /// </summary>
        public InputMap<object> ManagedApplicationParameters
        {
            get => _managedApplicationParameters ?? (_managedApplicationParameters = new InputMap<object>());
            set => _managedApplicationParameters = value;
        }

        [Input("managedApplicationTemplate")]
        private InputMap<object>? _managedApplicationTemplate;

        /// <summary>
        /// The template for the managed application deployment.
        /// </summary>
        public InputMap<object> ManagedApplicationTemplate
        {
            get => _managedApplicationTemplate ?? (_managedApplicationTemplate = new InputMap<object>());
            set => _managedApplicationTemplate = value;
        }

        /// <summary>
        /// Indicates if the vendor sku is in preview mode.
        /// </summary>
        [Input("preview")]
        public Input<bool>? Preview { get; set; }

        /// <summary>
        /// The name of the sku.
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        /// <summary>
        /// Sku type.
        /// </summary>
        [Input("skuType")]
        public Input<string>? SkuType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the vendor.
        /// </summary>
        [Input("vendorName", required: true)]
        public Input<string> VendorName { get; set; } = null!;

        /// <summary>
        /// The template definition of the virtual network function.
        /// </summary>
        [Input("virtualNetworkFunctionTemplate")]
        public Input<Inputs.VirtualNetworkFunctionTemplateArgs>? VirtualNetworkFunctionTemplate { get; set; }

        public VendorSkusArgs()
        {
        }
    }
}
