// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.HybridNetwork.V20200101Preview
{
    public static class GetVendor
    {
        public static Task<GetVendorResult> InvokeAsync(GetVendorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVendorResult>("azure-nextgen:hybridnetwork/v20200101preview:getVendor", args ?? new GetVendorArgs(), options.WithVersion());
    }


    public sealed class GetVendorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of vendor.
        /// </summary>
        [Input("vendorName", required: true)]
        public string VendorName { get; set; } = null!;

        public GetVendorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVendorResult
    {
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the vendor resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// A list of ids of the vendor skus offered by the vendor.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubResourceResponse> Skus;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVendorResult(
            string? location,

            string name,

            string provisioningState,

            ImmutableArray<Outputs.SubResourceResponse> skus,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Skus = skus;
            Tags = tags;
            Type = type;
        }
    }
}
