// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridNetwork.V20240415.Outputs
{

    /// <summary>
    /// Artifact store properties.
    /// </summary>
    [OutputType]
    public sealed class ArtifactStorePropertiesFormatResponse
    {
        /// <summary>
        /// The artifact store backing resource network access type
        /// </summary>
        public readonly string? BackingResourcePublicNetworkAccess;
        public readonly Outputs.ArtifactStorePropertiesFormatResponseManagedResourceGroupConfiguration? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The provisioning state of the application groups resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The replication strategy.
        /// </summary>
        public readonly string? ReplicationStrategy;
        /// <summary>
        /// The created storage resource id
        /// </summary>
        public readonly string StorageResourceId;
        /// <summary>
        /// The artifact store type.
        /// </summary>
        public readonly string? StoreType;

        [OutputConstructor]
        private ArtifactStorePropertiesFormatResponse(
            string? backingResourcePublicNetworkAccess,

            Outputs.ArtifactStorePropertiesFormatResponseManagedResourceGroupConfiguration? managedResourceGroupConfiguration,

            string provisioningState,

            string? replicationStrategy,

            string storageResourceId,

            string? storeType)
        {
            BackingResourcePublicNetworkAccess = backingResourcePublicNetworkAccess;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ProvisioningState = provisioningState;
            ReplicationStrategy = replicationStrategy;
            StorageResourceId = storageResourceId;
            StoreType = storeType;
        }
    }
}
