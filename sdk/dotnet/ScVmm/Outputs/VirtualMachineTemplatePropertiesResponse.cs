// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.Outputs
{

    /// <summary>
    /// Defines the resource properties.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineTemplatePropertiesResponse
    {
        /// <summary>
        /// Gets or sets computer name.
        /// </summary>
        public readonly string ComputerName;
        /// <summary>
        /// Gets or sets the desired number of vCPUs for the vm.
        /// </summary>
        public readonly int CpuCount;
        /// <summary>
        /// Gets or sets the disks of the template.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualDiskResponse> Disks;
        /// <summary>
        /// Gets or sets a value indicating whether to enable dynamic memory or not.
        /// </summary>
        public readonly string DynamicMemoryEnabled;
        /// <summary>
        /// Gets or sets the max dynamic memory for the vm.
        /// </summary>
        public readonly int DynamicMemoryMaxMB;
        /// <summary>
        /// Gets or sets the min dynamic memory for the vm.
        /// </summary>
        public readonly int DynamicMemoryMinMB;
        /// <summary>
        /// Gets or sets the generation for the vm.
        /// </summary>
        public readonly int Generation;
        /// <summary>
        /// Gets or sets the inventory Item ID for the resource.
        /// </summary>
        public readonly string? InventoryItemId;
        /// <summary>
        /// Gets or sets a value indicating whether the vm template is customizable or not.
        /// </summary>
        public readonly string IsCustomizable;
        /// <summary>
        /// Gets highly available property.
        /// </summary>
        public readonly string IsHighlyAvailable;
        /// <summary>
        /// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        public readonly string LimitCpuForMigration;
        /// <summary>
        /// MemoryMB is the desired size of a virtual machine's memory, in MB.
        /// </summary>
        public readonly int MemoryMB;
        /// <summary>
        /// Gets or sets the network interfaces of the template.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfacesResponse> NetworkInterfaces;
        /// <summary>
        /// Gets or sets os name.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Gets or sets the type of the os.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Unique ID of the virtual machine template.
        /// </summary>
        public readonly string? Uuid;
        /// <summary>
        /// ARM Id of the vmmServer resource in which this resource resides.
        /// </summary>
        public readonly string? VmmServerId;

        [OutputConstructor]
        private VirtualMachineTemplatePropertiesResponse(
            string computerName,

            int cpuCount,

            ImmutableArray<Outputs.VirtualDiskResponse> disks,

            string dynamicMemoryEnabled,

            int dynamicMemoryMaxMB,

            int dynamicMemoryMinMB,

            int generation,

            string? inventoryItemId,

            string isCustomizable,

            string isHighlyAvailable,

            string limitCpuForMigration,

            int memoryMB,

            ImmutableArray<Outputs.NetworkInterfacesResponse> networkInterfaces,

            string osName,

            string osType,

            string provisioningState,

            string? uuid,

            string? vmmServerId)
        {
            ComputerName = computerName;
            CpuCount = cpuCount;
            Disks = disks;
            DynamicMemoryEnabled = dynamicMemoryEnabled;
            DynamicMemoryMaxMB = dynamicMemoryMaxMB;
            DynamicMemoryMinMB = dynamicMemoryMinMB;
            Generation = generation;
            InventoryItemId = inventoryItemId;
            IsCustomizable = isCustomizable;
            IsHighlyAvailable = isHighlyAvailable;
            LimitCpuForMigration = limitCpuForMigration;
            MemoryMB = memoryMB;
            NetworkInterfaces = networkInterfaces;
            OsName = osName;
            OsType = osType;
            ProvisioningState = provisioningState;
            Uuid = uuid;
            VmmServerId = vmmServerId;
        }
    }
}
