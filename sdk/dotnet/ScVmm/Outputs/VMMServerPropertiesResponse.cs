// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.Outputs
{

    /// <summary>
    /// Defines the resource properties.
    /// </summary>
    [OutputType]
    public sealed class VMMServerPropertiesResponse
    {
        /// <summary>
        /// Gets or sets the connection status to the vmmServer.
        /// </summary>
        public readonly string ConnectionStatus;
        /// <summary>
        /// Credentials to connect to VMMServer.
        /// </summary>
        public readonly Outputs.VMMServerPropertiesResponseCredentials? Credentials;
        /// <summary>
        /// Gets or sets any error message if connection to vmmServer is having any issue.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Fqdn is the hostname/ip of the vmmServer.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// Port is the port on which the vmmServer is listening.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Unique ID of vmmServer.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// Version is the version of the vmmSever.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private VMMServerPropertiesResponse(
            string connectionStatus,

            Outputs.VMMServerPropertiesResponseCredentials? credentials,

            string errorMessage,

            string fqdn,

            int? port,

            string provisioningState,

            string uuid,

            string version)
        {
            ConnectionStatus = connectionStatus;
            Credentials = credentials;
            ErrorMessage = errorMessage;
            Fqdn = fqdn;
            Port = port;
            ProvisioningState = provisioningState;
            Uuid = uuid;
            Version = version;
        }
    }
}
