// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.V20200605Preview
{
    public static class GetCloud
    {
        /// <summary>
        /// The Clouds resource definition.
        /// </summary>
        public static Task<GetCloudResult> InvokeAsync(GetCloudArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudResult>("azure-native:scvmm/v20200605preview:getCloud", args ?? new GetCloudArgs(), options.WithDefaults());

        /// <summary>
        /// The Clouds resource definition.
        /// </summary>
        public static Output<GetCloudResult> Invoke(GetCloudInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCloudResult>("azure-native:scvmm/v20200605preview:getCloud", args ?? new GetCloudInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Cloud.
        /// </summary>
        [Input("cloudName", required: true)]
        public string CloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCloudArgs()
        {
        }
    }

    public sealed class GetCloudInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Cloud.
        /// </summary>
        [Input("cloudName", required: true)]
        public Input<string> CloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCloudInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCloudResult
    {
        /// <summary>
        /// Capacity of the cloud.
        /// </summary>
        public readonly Outputs.CloudCapacityResponse CloudCapacity;
        /// <summary>
        /// Name of the cloud in VMMServer.
        /// </summary>
        public readonly string CloudName;
        /// <summary>
        /// The extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the inventory Item ID for the resource.
        /// </summary>
        public readonly string? InventoryItemId;
        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of QoS policies available for the cloud.
        /// </summary>
        public readonly ImmutableArray<Outputs.StorageQoSPolicyResponse> StorageQoSPolicies;
        /// <summary>
        /// The system data.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource Type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Unique ID of the cloud.
        /// </summary>
        public readonly string? Uuid;
        /// <summary>
        /// ARM Id of the vmmServer resource in which this resource resides.
        /// </summary>
        public readonly string? VmmServerId;

        [OutputConstructor]
        private GetCloudResult(
            Outputs.CloudCapacityResponse cloudCapacity,

            string cloudName,

            Outputs.ExtendedLocationResponse extendedLocation,

            string id,

            string? inventoryItemId,

            string location,

            string name,

            string provisioningState,

            ImmutableArray<Outputs.StorageQoSPolicyResponse> storageQoSPolicies,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? uuid,

            string? vmmServerId)
        {
            CloudCapacity = cloudCapacity;
            CloudName = cloudName;
            ExtendedLocation = extendedLocation;
            Id = id;
            InventoryItemId = inventoryItemId;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            StorageQoSPolicies = storageQoSPolicies;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Uuid = uuid;
            VmmServerId = vmmServerId;
        }
    }
}
