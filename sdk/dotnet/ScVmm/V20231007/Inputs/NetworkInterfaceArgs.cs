// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.V20231007.Inputs
{

    /// <summary>
    /// Network Interface model
    /// </summary>
    public sealed class NetworkInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the ipv4 address type.
        /// </summary>
        [Input("ipv4AddressType")]
        public InputUnion<string, Pulumi.AzureNative.ScVmm.V20231007.AllocationMethod>? Ipv4AddressType { get; set; }

        /// <summary>
        /// Gets or sets the ipv6 address type.
        /// </summary>
        [Input("ipv6AddressType")]
        public InputUnion<string, Pulumi.AzureNative.ScVmm.V20231007.AllocationMethod>? Ipv6AddressType { get; set; }

        /// <summary>
        /// Gets or sets the nic MAC address.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// Gets or sets the mac address type.
        /// </summary>
        [Input("macAddressType")]
        public InputUnion<string, Pulumi.AzureNative.ScVmm.V20231007.AllocationMethod>? MacAddressType { get; set; }

        /// <summary>
        /// Gets or sets the name of the network interface.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Gets or sets the nic id.
        /// </summary>
        [Input("nicId")]
        public Input<string>? NicId { get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        public NetworkInterfaceArgs()
        {
        }
        public static new NetworkInterfaceArgs Empty => new NetworkInterfaceArgs();
    }
}
