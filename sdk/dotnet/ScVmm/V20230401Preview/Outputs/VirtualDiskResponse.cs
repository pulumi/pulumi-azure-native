// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.V20230401Preview.Outputs
{

    /// <summary>
    /// Virtual disk model
    /// </summary>
    [OutputType]
    public sealed class VirtualDiskResponse
    {
        /// <summary>
        /// Gets or sets the disk bus.
        /// </summary>
        public readonly int? Bus;
        /// <summary>
        /// Gets or sets the disk bus type.
        /// </summary>
        public readonly string? BusType;
        /// <summary>
        /// Gets or sets a value indicating diff disk.
        /// </summary>
        public readonly string? CreateDiffDisk;
        /// <summary>
        /// Gets or sets the disk id.
        /// </summary>
        public readonly string? DiskId;
        /// <summary>
        /// Gets or sets the disk total size.
        /// </summary>
        public readonly int? DiskSizeGB;
        /// <summary>
        /// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Gets or sets the disk lun.
        /// </summary>
        public readonly int? Lun;
        /// <summary>
        /// Gets or sets the max disk size.
        /// </summary>
        public readonly int MaxDiskSizeGB;
        /// <summary>
        /// Gets or sets the name of the disk.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The QoS policy for the disk.
        /// </summary>
        public readonly Outputs.StorageQoSPolicyDetailsResponse? StorageQoSPolicy;
        /// <summary>
        /// Gets or sets the disk id in the template.
        /// </summary>
        public readonly string? TemplateDiskId;
        /// <summary>
        /// Gets the disk vhd format type.
        /// </summary>
        public readonly string VhdFormatType;
        /// <summary>
        /// Gets or sets the disk vhd type.
        /// </summary>
        public readonly string? VhdType;
        /// <summary>
        /// Gets or sets the disk volume type.
        /// </summary>
        public readonly string VolumeType;

        [OutputConstructor]
        private VirtualDiskResponse(
            int? bus,

            string? busType,

            string? createDiffDisk,

            string? diskId,

            int? diskSizeGB,

            string displayName,

            int? lun,

            int maxDiskSizeGB,

            string? name,

            Outputs.StorageQoSPolicyDetailsResponse? storageQoSPolicy,

            string? templateDiskId,

            string vhdFormatType,

            string? vhdType,

            string volumeType)
        {
            Bus = bus;
            BusType = busType;
            CreateDiffDisk = createDiffDisk;
            DiskId = diskId;
            DiskSizeGB = diskSizeGB;
            DisplayName = displayName;
            Lun = lun;
            MaxDiskSizeGB = maxDiskSizeGB;
            Name = name;
            StorageQoSPolicy = storageQoSPolicy;
            TemplateDiskId = templateDiskId;
            VhdFormatType = vhdFormatType;
            VhdType = vhdType;
            VolumeType = volumeType;
        }
    }
}
