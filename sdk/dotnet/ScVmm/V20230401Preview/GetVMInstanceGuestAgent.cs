// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm.V20230401Preview
{
    public static class GetVMInstanceGuestAgent
    {
        /// <summary>
        /// Implements GuestAgent GET method.
        /// </summary>
        public static Task<GetVMInstanceGuestAgentResult> InvokeAsync(GetVMInstanceGuestAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVMInstanceGuestAgentResult>("azure-native:scvmm/v20230401preview:getVMInstanceGuestAgent", args ?? new GetVMInstanceGuestAgentArgs(), options.WithDefaults());

        /// <summary>
        /// Implements GuestAgent GET method.
        /// </summary>
        public static Output<GetVMInstanceGuestAgentResult> Invoke(GetVMInstanceGuestAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVMInstanceGuestAgentResult>("azure-native:scvmm/v20230401preview:getVMInstanceGuestAgent", args ?? new GetVMInstanceGuestAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVMInstanceGuestAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetVMInstanceGuestAgentArgs()
        {
        }
        public static new GetVMInstanceGuestAgentArgs Empty => new GetVMInstanceGuestAgentArgs();
    }

    public sealed class GetVMInstanceGuestAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetVMInstanceGuestAgentInvokeArgs()
        {
        }
        public static new GetVMInstanceGuestAgentInvokeArgs Empty => new GetVMInstanceGuestAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetVMInstanceGuestAgentResult
    {
        /// <summary>
        /// Username / Password Credentials to provision guest agent.
        /// </summary>
        public readonly Outputs.GuestCredentialResponse? Credentials;
        /// <summary>
        /// Gets the name of the corresponding resource in Kubernetes.
        /// </summary>
        public readonly string CustomResourceName;
        /// <summary>
        /// HTTP Proxy configuration for the VM.
        /// </summary>
        public readonly Outputs.HttpProxyConfigurationResponse? HttpProxyConfig;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the guest agent provisioning action.
        /// </summary>
        public readonly string? ProvisioningAction;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets or sets the guest agent status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Gets or sets a unique identifier for this resource.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetVMInstanceGuestAgentResult(
            Outputs.GuestCredentialResponse? credentials,

            string customResourceName,

            Outputs.HttpProxyConfigurationResponse? httpProxyConfig,

            string id,

            string name,

            string? provisioningAction,

            string provisioningState,

            string status,

            Outputs.SystemDataResponse systemData,

            string type,

            string uuid)
        {
            Credentials = credentials;
            CustomResourceName = customResourceName;
            HttpProxyConfig = httpProxyConfig;
            Id = id;
            Name = name;
            ProvisioningAction = provisioningAction;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Type = type;
            Uuid = uuid;
        }
    }
}
