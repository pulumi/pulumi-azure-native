// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ScVmm
{
    public static class GetAvailabilitySet
    {
        /// <summary>
        /// Implements AvailabilitySet GET method.
        /// Azure REST API version: 2022-05-21-preview.
        /// </summary>
        public static Task<GetAvailabilitySetResult> InvokeAsync(GetAvailabilitySetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAvailabilitySetResult>("azure-native:scvmm:getAvailabilitySet", args ?? new GetAvailabilitySetArgs(), options.WithDefaults());

        /// <summary>
        /// Implements AvailabilitySet GET method.
        /// Azure REST API version: 2022-05-21-preview.
        /// </summary>
        public static Output<GetAvailabilitySetResult> Invoke(GetAvailabilitySetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAvailabilitySetResult>("azure-native:scvmm:getAvailabilitySet", args ?? new GetAvailabilitySetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAvailabilitySetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the AvailabilitySet.
        /// </summary>
        [Input("availabilitySetName", required: true)]
        public string AvailabilitySetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAvailabilitySetArgs()
        {
        }
        public static new GetAvailabilitySetArgs Empty => new GetAvailabilitySetArgs();
    }

    public sealed class GetAvailabilitySetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the AvailabilitySet.
        /// </summary>
        [Input("availabilitySetName", required: true)]
        public Input<string> AvailabilitySetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAvailabilitySetInvokeArgs()
        {
        }
        public static new GetAvailabilitySetInvokeArgs Empty => new GetAvailabilitySetInvokeArgs();
    }


    [OutputType]
    public sealed class GetAvailabilitySetResult
    {
        /// <summary>
        /// Name of the availability set.
        /// </summary>
        public readonly string? AvailabilitySetName;
        /// <summary>
        /// The extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system data.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource Type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// ARM Id of the vmmServer resource in which this resource resides.
        /// </summary>
        public readonly string? VmmServerId;

        [OutputConstructor]
        private GetAvailabilitySetResult(
            string? availabilitySetName,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string? location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? vmmServerId)
        {
            AvailabilitySetName = availabilitySetName;
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VmmServerId = vmmServerId;
        }
    }
}
