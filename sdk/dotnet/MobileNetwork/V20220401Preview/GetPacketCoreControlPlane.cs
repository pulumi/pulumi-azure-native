// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220401Preview
{
    public static class GetPacketCoreControlPlane
    {
        /// <summary>
        /// Packet core control plane resource.
        /// </summary>
        public static Task<GetPacketCoreControlPlaneResult> InvokeAsync(GetPacketCoreControlPlaneArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPacketCoreControlPlaneResult>("azure-native:mobilenetwork/v20220401preview:getPacketCoreControlPlane", args ?? new GetPacketCoreControlPlaneArgs(), options.WithDefaults());

        /// <summary>
        /// Packet core control plane resource.
        /// </summary>
        public static Output<GetPacketCoreControlPlaneResult> Invoke(GetPacketCoreControlPlaneInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPacketCoreControlPlaneResult>("azure-native:mobilenetwork/v20220401preview:getPacketCoreControlPlane", args ?? new GetPacketCoreControlPlaneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPacketCoreControlPlaneArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the packet core control plane.
        /// </summary>
        [Input("packetCoreControlPlaneName", required: true)]
        public string PacketCoreControlPlaneName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPacketCoreControlPlaneArgs()
        {
        }
    }

    public sealed class GetPacketCoreControlPlaneInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the packet core control plane.
        /// </summary>
        [Input("packetCoreControlPlaneName", required: true)]
        public Input<string> PacketCoreControlPlaneName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPacketCoreControlPlaneInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPacketCoreControlPlaneResult
    {
        /// <summary>
        /// The control plane interface on the access network. For 5G networks, this is the N2 interface. For 4G networks, this is the S1-MME interface.
        /// </summary>
        public readonly Outputs.InterfacePropertiesResponse ControlPlaneAccessInterface;
        /// <summary>
        /// The core network technology generation (5G core or EPC / 4G core).
        /// </summary>
        public readonly string? CoreNetworkTechnology;
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        public readonly string? CreatedByType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity used to retrieve the ingress certificate from Azure key vault.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// Settings to allow interoperability with third party components e.g. RANs and UEs.
        /// </summary>
        public readonly object? InteropSettings;
        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        public readonly string? LastModifiedAt;
        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedByType;
        /// <summary>
        /// The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.
        /// </summary>
        public readonly Outputs.LocalDiagnosticsAccessConfigurationResponse? LocalDiagnosticsAccess;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Mobile network in which this packet core control plane is deployed.
        /// </summary>
        public readonly Outputs.MobileNetworkResourceIdResponse MobileNetwork;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The platform where the packet core is deployed.
        /// </summary>
        public readonly Outputs.PlatformConfigurationResponse? Platform;
        /// <summary>
        /// The provisioning state of the packet core control plane resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The SKU defining the throughput and SIM allowances for this packet core control plane deployment.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the packet core software that is deployed.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetPacketCoreControlPlaneResult(
            Outputs.InterfacePropertiesResponse controlPlaneAccessInterface,

            string? coreNetworkTechnology,

            string? createdAt,

            string? createdBy,

            string? createdByType,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            object? interopSettings,

            string? lastModifiedAt,

            string? lastModifiedBy,

            string? lastModifiedByType,

            Outputs.LocalDiagnosticsAccessConfigurationResponse? localDiagnosticsAccess,

            string location,

            Outputs.MobileNetworkResourceIdResponse mobileNetwork,

            string name,

            Outputs.PlatformConfigurationResponse? platform,

            string provisioningState,

            string sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            ControlPlaneAccessInterface = controlPlaneAccessInterface;
            CoreNetworkTechnology = coreNetworkTechnology;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            CreatedByType = createdByType;
            Id = id;
            Identity = identity;
            InteropSettings = interopSettings;
            LastModifiedAt = lastModifiedAt;
            LastModifiedBy = lastModifiedBy;
            LastModifiedByType = lastModifiedByType;
            LocalDiagnosticsAccess = localDiagnosticsAccess;
            Location = location;
            MobileNetwork = mobileNetwork;
            Name = name;
            Platform = platform;
            ProvisioningState = provisioningState;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
