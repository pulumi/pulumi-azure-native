// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220401Preview
{
    /// <summary>
    /// Site resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:mobilenetwork/v20220401preview:Site")]
    public partial class Site : Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        [Output("createdBy")]
        public Output<string?> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        [Output("createdByType")]
        public Output<string?> CreatedByType { get; private set; } = null!;

        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        [Output("lastModifiedAt")]
        public Output<string?> LastModifiedAt { get; private set; } = null!;

        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        [Output("lastModifiedBy")]
        public Output<string?> LastModifiedBy { get; private set; } = null!;

        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        [Output("lastModifiedByType")]
        public Output<string?> LastModifiedByType { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An array of IDs of the network functions deployed on the site, maintained by the user.
        /// </summary>
        [Output("networkFunctions")]
        public Output<ImmutableArray<Outputs.SubResourceResponse>> NetworkFunctions { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the site resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Site resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Site(string name, SiteArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20220401preview:Site", name, args ?? new SiteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Site(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20220401preview:Site", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:mobilenetwork:Site"},
                    new Pulumi.Alias { Type = "azure-native:mobilenetwork/v20220101preview:Site"},
                    new Pulumi.Alias { Type = "azure-native:mobilenetwork/v20220301preview:Site"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Site resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Site Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Site(name, id, options);
        }
    }

    public sealed class SiteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        [Input("createdByType")]
        public InputUnion<string, Pulumi.AzureNative.MobileNetwork.V20220401Preview.CreatedByType>? CreatedByType { get; set; }

        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        [Input("lastModifiedAt")]
        public Input<string>? LastModifiedAt { get; set; }

        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        [Input("lastModifiedBy")]
        public Input<string>? LastModifiedBy { get; set; }

        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        [Input("lastModifiedByType")]
        public InputUnion<string, Pulumi.AzureNative.MobileNetwork.V20220401Preview.CreatedByType>? LastModifiedByType { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the mobile network.
        /// </summary>
        [Input("mobileNetworkName", required: true)]
        public Input<string> MobileNetworkName { get; set; } = null!;

        [Input("networkFunctions")]
        private InputList<Inputs.SubResourceArgs>? _networkFunctions;

        /// <summary>
        /// An array of IDs of the network functions deployed on the site, maintained by the user.
        /// </summary>
        public InputList<Inputs.SubResourceArgs> NetworkFunctions
        {
            get => _networkFunctions ?? (_networkFunctions = new InputList<Inputs.SubResourceArgs>());
            set => _networkFunctions = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the mobile network site.
        /// </summary>
        [Input("siteName")]
        public Input<string>? SiteName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SiteArgs()
        {
        }
    }
}
