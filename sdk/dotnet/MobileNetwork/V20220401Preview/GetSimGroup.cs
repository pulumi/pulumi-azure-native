// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220401Preview
{
    public static class GetSimGroup
    {
        /// <summary>
        /// SIM group resource.
        /// </summary>
        public static Task<GetSimGroupResult> InvokeAsync(GetSimGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSimGroupResult>("azure-native:mobilenetwork/v20220401preview:getSimGroup", args ?? new GetSimGroupArgs(), options.WithDefaults());

        /// <summary>
        /// SIM group resource.
        /// </summary>
        public static Output<GetSimGroupResult> Invoke(GetSimGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSimGroupResult>("azure-native:mobilenetwork/v20220401preview:getSimGroup", args ?? new GetSimGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSimGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SIM Group.
        /// </summary>
        [Input("simGroupName", required: true)]
        public string SimGroupName { get; set; } = null!;

        public GetSimGroupArgs()
        {
        }
    }

    public sealed class GetSimGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SIM Group.
        /// </summary>
        [Input("simGroupName", required: true)]
        public Input<string> SimGroupName { get; set; } = null!;

        public GetSimGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSimGroupResult
    {
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        public readonly string? CreatedByType;
        /// <summary>
        /// A key to encrypt the SIM data that belongs to this SIM group.
        /// </summary>
        public readonly Outputs.KeyVaultKeyResponse? EncryptionKey;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity used to retrieve the encryption key from Azure key vault.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        public readonly string? LastModifiedAt;
        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        public readonly string? LastModifiedByType;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Mobile network that this SIM belongs to
        /// </summary>
        public readonly Outputs.MobileNetworkResourceIdResponse? MobileNetwork;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the SIM group resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSimGroupResult(
            string? createdAt,

            string? createdBy,

            string? createdByType,

            Outputs.KeyVaultKeyResponse? encryptionKey,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string? lastModifiedAt,

            string? lastModifiedBy,

            string? lastModifiedByType,

            string location,

            Outputs.MobileNetworkResourceIdResponse? mobileNetwork,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            CreatedByType = createdByType;
            EncryptionKey = encryptionKey;
            Id = id;
            Identity = identity;
            LastModifiedAt = lastModifiedAt;
            LastModifiedBy = lastModifiedBy;
            LastModifiedByType = lastModifiedByType;
            Location = location;
            MobileNetwork = mobileNetwork;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
