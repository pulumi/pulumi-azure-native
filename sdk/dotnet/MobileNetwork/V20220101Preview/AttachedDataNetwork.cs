// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220101Preview
{
    /// <summary>
    /// Attached data network resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:mobilenetwork/v20220101preview:AttachedDataNetwork")]
    public partial class AttachedDataNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        [Output("createdBy")]
        public Output<string?> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        [Output("createdByType")]
        public Output<string?> CreatedByType { get; private set; } = null!;

        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        [Output("lastModifiedAt")]
        public Output<string?> LastModifiedAt { get; private set; } = null!;

        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        [Output("lastModifiedBy")]
        public Output<string?> LastModifiedBy { get; private set; } = null!;

        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        [Output("lastModifiedByType")]
        public Output<string?> LastModifiedByType { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Network Address and Port Translation configuration.
        /// If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
        /// </summary>
        [Output("naptConfiguration")]
        public Output<Outputs.NaptConfigurationResponse?> NaptConfiguration { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the attached data network resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
        /// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
        /// </summary>
        [Output("userEquipmentAddressPoolPrefix")]
        public Output<ImmutableArray<string>> UserEquipmentAddressPoolPrefix { get; private set; } = null!;

        /// <summary>
        /// The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
        /// The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
        /// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
        /// </summary>
        [Output("userEquipmentStaticAddressPoolPrefix")]
        public Output<ImmutableArray<string>> UserEquipmentStaticAddressPoolPrefix { get; private set; } = null!;

        /// <summary>
        /// The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
        /// </summary>
        [Output("userPlaneDataInterface")]
        public Output<Outputs.InterfacePropertiesResponse> UserPlaneDataInterface { get; private set; } = null!;


        /// <summary>
        /// Create a AttachedDataNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttachedDataNetwork(string name, AttachedDataNetworkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20220101preview:AttachedDataNetwork", name, args ?? new AttachedDataNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttachedDataNetwork(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20220101preview:AttachedDataNetwork", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork:AttachedDataNetwork"},
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork/v20220301preview:AttachedDataNetwork"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttachedDataNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttachedDataNetwork Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AttachedDataNetwork(name, id, options);
        }
    }

    public sealed class AttachedDataNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the attached data network.
        /// </summary>
        [Input("attachedDataNetworkName")]
        public Input<string>? AttachedDataNetworkName { get; set; }

        /// <summary>
        /// The timestamp of resource creation (UTC).
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The identity that created the resource.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The type of identity that created the resource.
        /// </summary>
        [Input("createdByType")]
        public InputUnion<string, Pulumi.AzureNative.MobileNetwork.V20220101Preview.CreatedByType>? CreatedByType { get; set; }

        /// <summary>
        /// The timestamp of resource last modification (UTC)
        /// </summary>
        [Input("lastModifiedAt")]
        public Input<string>? LastModifiedAt { get; set; }

        /// <summary>
        /// The identity that last modified the resource.
        /// </summary>
        [Input("lastModifiedBy")]
        public Input<string>? LastModifiedBy { get; set; }

        /// <summary>
        /// The type of identity that last modified the resource.
        /// </summary>
        [Input("lastModifiedByType")]
        public InputUnion<string, Pulumi.AzureNative.MobileNetwork.V20220101Preview.CreatedByType>? LastModifiedByType { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Network Address and Port Translation configuration.
        /// If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
        /// </summary>
        [Input("naptConfiguration")]
        public Input<Inputs.NaptConfigurationArgs>? NaptConfiguration { get; set; }

        /// <summary>
        /// The name of the packet core control plane.
        /// </summary>
        [Input("packetCoreControlPlaneName", required: true)]
        public Input<string> PacketCoreControlPlaneName { get; set; } = null!;

        /// <summary>
        /// The name of the packet core data plane.
        /// </summary>
        [Input("packetCoreDataPlaneName", required: true)]
        public Input<string> PacketCoreDataPlaneName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("userEquipmentAddressPoolPrefix")]
        private InputList<string>? _userEquipmentAddressPoolPrefix;

        /// <summary>
        /// The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
        /// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
        /// </summary>
        public InputList<string> UserEquipmentAddressPoolPrefix
        {
            get => _userEquipmentAddressPoolPrefix ?? (_userEquipmentAddressPoolPrefix = new InputList<string>());
            set => _userEquipmentAddressPoolPrefix = value;
        }

        [Input("userEquipmentStaticAddressPoolPrefix")]
        private InputList<string>? _userEquipmentStaticAddressPoolPrefix;

        /// <summary>
        /// The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
        /// The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
        /// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
        /// </summary>
        public InputList<string> UserEquipmentStaticAddressPoolPrefix
        {
            get => _userEquipmentStaticAddressPoolPrefix ?? (_userEquipmentStaticAddressPoolPrefix = new InputList<string>());
            set => _userEquipmentStaticAddressPoolPrefix = value;
        }

        /// <summary>
        /// The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
        /// </summary>
        [Input("userPlaneDataInterface", required: true)]
        public Input<Inputs.InterfacePropertiesArgs> UserPlaneDataInterface { get; set; } = null!;

        public AttachedDataNetworkArgs()
        {
        }
        public static new AttachedDataNetworkArgs Empty => new AttachedDataNetworkArgs();
    }
}
