// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220101Preview.Inputs
{

    /// <summary>
    /// The Network Address and Port Translation settings to use for the attached data network.
    /// </summary>
    public sealed class NaptConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether NAPT is enabled for connections to this attachedDataNetwork.
        /// </summary>
        [Input("enabled")]
        public InputUnion<string, Pulumi.AzureNative.MobileNetwork.V20220101Preview.NaptEnabled>? Enabled { get; set; }

        /// <summary>
        /// Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface.
        /// </summary>
        [Input("pinholeLimits")]
        public Input<int>? PinholeLimits { get; set; }

        /// <summary>
        /// Expiry times of inactive NAPT pinholes, in seconds. All timers must be at least 1 second.
        /// </summary>
        [Input("pinholeTimeouts")]
        public Input<Inputs.PinholeTimeoutsArgs>? PinholeTimeouts { get; set; }

        /// <summary>
        /// Range of port numbers to use as translated ports on each translated address.
        /// If not specified and NAPT is enabled, this range defaults to 1,024 - 65,535. (Ports under 1,024 should not be used because these are special purpose ports reserved by IANA.)
        /// </summary>
        [Input("portRange")]
        public Input<Inputs.PortRangeArgs>? PortRange { get; set; }

        /// <summary>
        /// The minimum time (in seconds) that will pass before a port that was used by a closed pinhole can be recycled for use by another pinhole. All hold times must be minimum 1 second.
        /// </summary>
        [Input("portReuseHoldTime")]
        public Input<Inputs.PortReuseHoldTimesArgs>? PortReuseHoldTime { get; set; }

        public NaptConfigurationArgs()
        {
            PinholeLimits = 65536;
        }
        public static new NaptConfigurationArgs Empty => new NaptConfigurationArgs();
    }
}
