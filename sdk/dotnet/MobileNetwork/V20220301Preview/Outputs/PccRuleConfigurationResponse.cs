// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20220301Preview.Outputs
{

    /// <summary>
    /// PCC rule configuration
    /// </summary>
    [OutputType]
    public sealed class PccRuleConfigurationResponse
    {
        /// <summary>
        /// The name of the rule. This must be unique within the parent Service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
        /// </summary>
        public readonly string RuleName;
        /// <summary>
        /// A precedence value that is used to decide between PCC Rules when identifying the QoS values to use for a particular Sim. A lower value means a higher priority. This value should be unique among all PCC Rules configured in the Mobile Network.
        /// </summary>
        public readonly int RulePrecedence;
        /// <summary>
        /// The QoS policy to use for packets matching this rule. If this field is null then the Service will define the QoS settings.
        /// </summary>
        public readonly Outputs.PccRuleQosPolicyResponse? RuleQosPolicy;
        /// <summary>
        /// The set of service data flow templates to use for this PCC Rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceDataFlowTemplateResponse> ServiceDataFlowTemplates;
        /// <summary>
        /// Determines whether flows that match this PCC Rule are permitted.
        /// </summary>
        public readonly string? TrafficControl;

        [OutputConstructor]
        private PccRuleConfigurationResponse(
            string ruleName,

            int rulePrecedence,

            Outputs.PccRuleQosPolicyResponse? ruleQosPolicy,

            ImmutableArray<Outputs.ServiceDataFlowTemplateResponse> serviceDataFlowTemplates,

            string? trafficControl)
        {
            RuleName = ruleName;
            RulePrecedence = rulePrecedence;
            RuleQosPolicy = ruleQosPolicy;
            ServiceDataFlowTemplates = serviceDataFlowTemplates;
            TrafficControl = trafficControl;
        }
    }
}
