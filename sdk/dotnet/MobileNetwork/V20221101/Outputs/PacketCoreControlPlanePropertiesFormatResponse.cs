// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20221101.Outputs
{

    /// <summary>
    /// Packet core control plane properties.
    /// </summary>
    [OutputType]
    public sealed class PacketCoreControlPlanePropertiesFormatResponse
    {
        /// <summary>
        /// The control plane interface on the access network. For 5G networks, this is the N2 interface. For 4G networks, this is the S1-MME interface.
        /// </summary>
        public readonly Outputs.InterfacePropertiesResponse ControlPlaneAccessInterface;
        /// <summary>
        /// The core network technology generation (5G core or EPC / 4G core).
        /// </summary>
        public readonly string? CoreNetworkTechnology;
        /// <summary>
        /// The installation state of the packet core control plane resource.
        /// </summary>
        public readonly Outputs.InstallationResponse Installation;
        /// <summary>
        /// Settings to allow interoperability with third party components e.g. RANs and UEs.
        /// </summary>
        public readonly object? InteropSettings;
        /// <summary>
        /// The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.
        /// </summary>
        public readonly Outputs.LocalDiagnosticsAccessConfigurationResponse LocalDiagnosticsAccess;
        /// <summary>
        /// The platform where the packet core is deployed.
        /// </summary>
        public readonly Outputs.PlatformConfigurationResponse Platform;
        /// <summary>
        /// The provisioning state of the packet core control plane resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The previous version of the packet core software that was deployed. Used when performing the rollback action.
        /// </summary>
        public readonly string RollbackVersion;
        /// <summary>
        /// Site(s) under which this packet core control plane should be deployed. The sites must be in the same location as the packet core control plane.
        /// </summary>
        public readonly ImmutableArray<Outputs.SiteResourceIdResponse> Sites;
        /// <summary>
        /// The SKU defining the throughput and SIM allowances for this packet core control plane deployment.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// The MTU (in bytes) signaled to the UE. The same MTU is set on the user plane data links for all data networks. The MTU set on the user plane access link is calculated to be 60 bytes greater than this value to allow for GTP encapsulation.
        /// </summary>
        public readonly int? UeMtu;
        /// <summary>
        /// The version of the packet core software that is deployed.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private PacketCoreControlPlanePropertiesFormatResponse(
            Outputs.InterfacePropertiesResponse controlPlaneAccessInterface,

            string? coreNetworkTechnology,

            Outputs.InstallationResponse installation,

            object? interopSettings,

            Outputs.LocalDiagnosticsAccessConfigurationResponse localDiagnosticsAccess,

            Outputs.PlatformConfigurationResponse platform,

            string provisioningState,

            string rollbackVersion,

            ImmutableArray<Outputs.SiteResourceIdResponse> sites,

            string sku,

            int? ueMtu,

            string? version)
        {
            ControlPlaneAccessInterface = controlPlaneAccessInterface;
            CoreNetworkTechnology = coreNetworkTechnology;
            Installation = installation;
            InteropSettings = interopSettings;
            LocalDiagnosticsAccess = localDiagnosticsAccess;
            Platform = platform;
            ProvisioningState = provisioningState;
            RollbackVersion = rollbackVersion;
            Sites = sites;
            Sku = sku;
            UeMtu = ueMtu;
            Version = version;
        }
    }
}
