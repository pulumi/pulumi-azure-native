// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20221101.Outputs
{

    /// <summary>
    /// SIM properties.
    /// </summary>
    [OutputType]
    public sealed class SimPropertiesFormatResponse
    {
        /// <summary>
        /// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
        /// </summary>
        public readonly string? DeviceType;
        /// <summary>
        /// The integrated circuit card ID (ICCID) for the SIM.
        /// </summary>
        public readonly string? IntegratedCircuitCardIdentifier;
        /// <summary>
        /// The international mobile subscriber identity (IMSI) for the SIM.
        /// </summary>
        public readonly string InternationalMobileSubscriberIdentity;
        /// <summary>
        /// The provisioning state of the SIM resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
        /// </summary>
        public readonly Outputs.SimPolicyResourceIdResponse? SimPolicy;
        /// <summary>
        /// The state of the SIM resource.
        /// </summary>
        public readonly string SimState;
        /// <summary>
        /// A dictionary of sites to the provisioning state of this SIM on that site.
        /// </summary>
        public readonly ImmutableDictionary<string, string> SiteProvisioningState;
        /// <summary>
        /// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
        /// </summary>
        public readonly ImmutableArray<Outputs.SimStaticIpPropertiesResponse> StaticIpConfiguration;
        /// <summary>
        /// The public key fingerprint of the SIM vendor who provided this SIM, if any.
        /// </summary>
        public readonly string VendorKeyFingerprint;
        /// <summary>
        /// The name of the SIM vendor who provided this SIM, if any.
        /// </summary>
        public readonly string VendorName;

        [OutputConstructor]
        private SimPropertiesFormatResponse(
            string? deviceType,

            string? integratedCircuitCardIdentifier,

            string internationalMobileSubscriberIdentity,

            string provisioningState,

            Outputs.SimPolicyResourceIdResponse? simPolicy,

            string simState,

            ImmutableDictionary<string, string> siteProvisioningState,

            ImmutableArray<Outputs.SimStaticIpPropertiesResponse> staticIpConfiguration,

            string vendorKeyFingerprint,

            string vendorName)
        {
            DeviceType = deviceType;
            IntegratedCircuitCardIdentifier = integratedCircuitCardIdentifier;
            InternationalMobileSubscriberIdentity = internationalMobileSubscriberIdentity;
            ProvisioningState = provisioningState;
            SimPolicy = simPolicy;
            SimState = simState;
            SiteProvisioningState = siteProvisioningState;
            StaticIpConfiguration = staticIpConfiguration;
            VendorKeyFingerprint = vendorKeyFingerprint;
            VendorName = vendorName;
        }
    }
}
