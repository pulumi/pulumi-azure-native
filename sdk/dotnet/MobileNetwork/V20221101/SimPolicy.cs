// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.V20221101
{
    /// <summary>
    /// SIM policy resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:mobilenetwork/v20221101:SimPolicy")]
    public partial class SimPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The default slice to use if the UE does not explicitly specify it. This slice must exist in the `sliceConfigurations` map. The slice must be in the same location as the SIM policy.
        /// </summary>
        [Output("defaultSlice")]
        public Output<Outputs.SliceResourceIdResponse> DefaultSlice { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the SIM policy resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Interval for the UE periodic registration update procedure, in seconds.
        /// </summary>
        [Output("registrationTimer")]
        public Output<int?> RegistrationTimer { get; private set; } = null!;

        /// <summary>
        /// RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413. This is an optional setting and by default is unspecified.
        /// </summary>
        [Output("rfspIndex")]
        public Output<int?> RfspIndex { get; private set; } = null!;

        /// <summary>
        /// A dictionary of sites to the provisioning state of this SIM policy on that site.
        /// </summary>
        [Output("siteProvisioningState")]
        public Output<ImmutableDictionary<string, string>> SiteProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
        /// </summary>
        [Output("sliceConfigurations")]
        public Output<ImmutableArray<Outputs.SliceConfigurationResponse>> SliceConfigurations { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
        /// </summary>
        [Output("ueAmbr")]
        public Output<Outputs.AmbrResponse> UeAmbr { get; private set; } = null!;


        /// <summary>
        /// Create a SimPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SimPolicy(string name, SimPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20221101:SimPolicy", name, args ?? new SimPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SimPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mobilenetwork/v20221101:SimPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork:SimPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork/v20220301preview:SimPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork/v20220401preview:SimPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork/v20230601:SimPolicy" },
                    new global::Pulumi.Alias { Type = "azure-native:mobilenetwork/v20230901:SimPolicy" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SimPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SimPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SimPolicy(name, id, options);
        }
    }

    public sealed class SimPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default slice to use if the UE does not explicitly specify it. This slice must exist in the `sliceConfigurations` map. The slice must be in the same location as the SIM policy.
        /// </summary>
        [Input("defaultSlice", required: true)]
        public Input<Inputs.SliceResourceIdArgs> DefaultSlice { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the mobile network.
        /// </summary>
        [Input("mobileNetworkName", required: true)]
        public Input<string> MobileNetworkName { get; set; } = null!;

        /// <summary>
        /// Interval for the UE periodic registration update procedure, in seconds.
        /// </summary>
        [Input("registrationTimer")]
        public Input<int>? RegistrationTimer { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413. This is an optional setting and by default is unspecified.
        /// </summary>
        [Input("rfspIndex")]
        public Input<int>? RfspIndex { get; set; }

        /// <summary>
        /// The name of the SIM policy.
        /// </summary>
        [Input("simPolicyName")]
        public Input<string>? SimPolicyName { get; set; }

        [Input("sliceConfigurations", required: true)]
        private InputList<Inputs.SliceConfigurationArgs>? _sliceConfigurations;

        /// <summary>
        /// The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
        /// </summary>
        public InputList<Inputs.SliceConfigurationArgs> SliceConfigurations
        {
            get => _sliceConfigurations ?? (_sliceConfigurations = new InputList<Inputs.SliceConfigurationArgs>());
            set => _sliceConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
        /// </summary>
        [Input("ueAmbr", required: true)]
        public Input<Inputs.AmbrArgs> UeAmbr { get; set; } = null!;

        public SimPolicyArgs()
        {
            RegistrationTimer = 3240;
        }
        public static new SimPolicyArgs Empty => new SimPolicyArgs();
    }
}
