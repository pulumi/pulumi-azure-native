// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobileNetwork.Inputs
{

    /// <summary>
    /// SIM properties.
    /// </summary>
    public sealed class SimPropertiesFormatArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Ki value for the SIM.
        /// </summary>
        [Input("authenticationKey")]
        public Input<string>? AuthenticationKey { get; set; }

        /// <summary>
        /// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
        /// </summary>
        [Input("deviceType")]
        public Input<string>? DeviceType { get; set; }

        /// <summary>
        /// The integrated circuit card ID (ICCID) for the SIM.
        /// </summary>
        [Input("integratedCircuitCardIdentifier")]
        public Input<string>? IntegratedCircuitCardIdentifier { get; set; }

        /// <summary>
        /// The international mobile subscriber identity (IMSI) for the SIM.
        /// </summary>
        [Input("internationalMobileSubscriberIdentity", required: true)]
        public Input<string> InternationalMobileSubscriberIdentity { get; set; } = null!;

        /// <summary>
        /// The Opc value for the SIM.
        /// </summary>
        [Input("operatorKeyCode")]
        public Input<string>? OperatorKeyCode { get; set; }

        /// <summary>
        /// The SIM policy used by this SIM.
        /// </summary>
        [Input("simPolicy")]
        public Input<Inputs.SimPolicyResourceIdArgs>? SimPolicy { get; set; }

        [Input("staticIpConfiguration")]
        private InputList<Inputs.SimStaticIpPropertiesArgs>? _staticIpConfiguration;

        /// <summary>
        /// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
        /// </summary>
        public InputList<Inputs.SimStaticIpPropertiesArgs> StaticIpConfiguration
        {
            get => _staticIpConfiguration ?? (_staticIpConfiguration = new InputList<Inputs.SimStaticIpPropertiesArgs>());
            set => _staticIpConfiguration = value;
        }

        public SimPropertiesFormatArgs()
        {
        }
        public static new SimPropertiesFormatArgs Empty => new SimPropertiesFormatArgs();
    }
}
