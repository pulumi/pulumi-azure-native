// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureSphere.V20240401
{
    public static class ListCatalogDeviceGroups
    {
        /// <summary>
        /// List the device groups for the catalog.
        /// </summary>
        public static Task<ListCatalogDeviceGroupsResult> InvokeAsync(ListCatalogDeviceGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListCatalogDeviceGroupsResult>("azure-native:azuresphere/v20240401:listCatalogDeviceGroups", args ?? new ListCatalogDeviceGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// List the device groups for the catalog.
        /// </summary>
        public static Output<ListCatalogDeviceGroupsResult> Invoke(ListCatalogDeviceGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListCatalogDeviceGroupsResult>("azure-native:azuresphere/v20240401:listCatalogDeviceGroups", args ?? new ListCatalogDeviceGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListCatalogDeviceGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of catalog
        /// </summary>
        [Input("catalogName", required: true)]
        public string CatalogName { get; set; } = null!;

        /// <summary>
        /// Device Group name.
        /// </summary>
        [Input("deviceGroupName")]
        public string? DeviceGroupName { get; set; }

        /// <summary>
        /// Filter the result list using the given expression
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The maximum number of result items per page.
        /// </summary>
        [Input("maxpagesize")]
        public int? Maxpagesize { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The number of result items to skip.
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        /// <summary>
        /// The number of result items to return.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public ListCatalogDeviceGroupsArgs()
        {
        }
        public static new ListCatalogDeviceGroupsArgs Empty => new ListCatalogDeviceGroupsArgs();
    }

    public sealed class ListCatalogDeviceGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of catalog
        /// </summary>
        [Input("catalogName", required: true)]
        public Input<string> CatalogName { get; set; } = null!;

        /// <summary>
        /// Device Group name.
        /// </summary>
        [Input("deviceGroupName")]
        public Input<string>? DeviceGroupName { get; set; }

        /// <summary>
        /// Filter the result list using the given expression
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The maximum number of result items per page.
        /// </summary>
        [Input("maxpagesize")]
        public Input<int>? Maxpagesize { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The number of result items to skip.
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        /// <summary>
        /// The number of result items to return.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        public ListCatalogDeviceGroupsInvokeArgs()
        {
        }
        public static new ListCatalogDeviceGroupsInvokeArgs Empty => new ListCatalogDeviceGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class ListCatalogDeviceGroupsResult
    {
        /// <summary>
        /// The link to the next page of items
        /// </summary>
        public readonly string? NextLink;
        /// <summary>
        /// The DeviceGroup items on this page
        /// </summary>
        public readonly ImmutableArray<Outputs.DeviceGroupResponse> Value;

        [OutputConstructor]
        private ListCatalogDeviceGroupsResult(
            string? nextLink,

            ImmutableArray<Outputs.DeviceGroupResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
