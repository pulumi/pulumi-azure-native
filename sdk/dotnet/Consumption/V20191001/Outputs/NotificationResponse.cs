// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Consumption.V20191001.Outputs
{

    /// <summary>
    /// The notification associated with a budget.
    /// </summary>
    [OutputType]
    public sealed class NotificationResponse
    {
        /// <summary>
        /// Email addresses to send the budget notification to when the threshold is exceeded. Must have at least one contact email or contact group specified at the Subscription or Resource Group scopes. All other scopes must have at least one contact email specified.
        /// </summary>
        public readonly ImmutableArray<string> ContactEmails;
        /// <summary>
        /// Action groups to send the budget notification to when the threshold is exceeded. Must be provided as a fully qualified Azure resource id. Only supported at Subscription or Resource Group scopes.
        /// </summary>
        public readonly ImmutableArray<string> ContactGroups;
        /// <summary>
        /// Contact roles to send the budget notification to when the threshold is exceeded.
        /// </summary>
        public readonly ImmutableArray<string> ContactRoles;
        /// <summary>
        /// The notification is enabled or not.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Language in which the recipient will receive the notification
        /// </summary>
        public readonly string? Locale;
        /// <summary>
        /// The comparison operator.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
        /// </summary>
        public readonly double Threshold;
        /// <summary>
        /// The type of threshold
        /// </summary>
        public readonly string? ThresholdType;

        [OutputConstructor]
        private NotificationResponse(
            ImmutableArray<string> contactEmails,

            ImmutableArray<string> contactGroups,

            ImmutableArray<string> contactRoles,

            bool enabled,

            string? locale,

            string @operator,

            double threshold,

            string? thresholdType)
        {
            ContactEmails = contactEmails;
            ContactGroups = contactGroups;
            ContactRoles = contactRoles;
            Enabled = enabled;
            Locale = locale;
            Operator = @operator;
            Threshold = threshold;
            ThresholdType = thresholdType;
        }
    }
}
