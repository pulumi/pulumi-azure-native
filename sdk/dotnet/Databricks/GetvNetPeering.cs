// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Databricks
{
    public static class GetvNetPeering
    {
        /// <summary>
        /// Gets the workspace vNet Peering.
        /// API Version: 2018-04-01.
        /// </summary>
        public static Task<GetvNetPeeringResult> InvokeAsync(GetvNetPeeringArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetvNetPeeringResult>("azure-native:databricks:getvNetPeering", args ?? new GetvNetPeeringArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the workspace vNet Peering.
        /// API Version: 2018-04-01.
        /// </summary>
        public static Output<GetvNetPeeringResult> Invoke(GetvNetPeeringInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetvNetPeeringResult>("azure-native:databricks:getvNetPeering", args ?? new GetvNetPeeringInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetvNetPeeringArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the workspace vNet peering.
        /// </summary>
        [Input("peeringName", required: true)]
        public string PeeringName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetvNetPeeringArgs()
        {
        }
        public static new GetvNetPeeringArgs Empty => new GetvNetPeeringArgs();
    }

    public sealed class GetvNetPeeringInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the workspace vNet peering.
        /// </summary>
        [Input("peeringName", required: true)]
        public Input<string> PeeringName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetvNetPeeringInvokeArgs()
        {
        }
        public static new GetvNetPeeringInvokeArgs Empty => new GetvNetPeeringInvokeArgs();
    }


    [OutputType]
    public sealed class GetvNetPeeringResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the virtual network peering resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of properties for vNet Peering
        /// </summary>
        public readonly Outputs.VirtualNetworkPeeringPropertiesFormatResponse Properties;
        /// <summary>
        /// type of the virtual network peering resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetvNetPeeringResult(
            string id,

            string name,

            Outputs.VirtualNetworkPeeringPropertiesFormatResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
