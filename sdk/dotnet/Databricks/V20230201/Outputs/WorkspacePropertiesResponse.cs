// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Databricks.V20230201.Outputs
{

    /// <summary>
    /// The workspace properties.
    /// </summary>
    [OutputType]
    public sealed class WorkspacePropertiesResponse
    {
        /// <summary>
        /// The workspace provider authorizations.
        /// </summary>
        public readonly ImmutableArray<Outputs.WorkspaceProviderAuthorizationResponse> Authorizations;
        /// <summary>
        /// Indicates the Object ID, PUID and Application ID of entity that created the workspace.
        /// </summary>
        public readonly Outputs.CreatedByResponse? CreatedBy;
        /// <summary>
        /// Specifies the date and time when the workspace is created.
        /// </summary>
        public readonly string CreatedDateTime;
        /// <summary>
        /// The resource Id of the managed disk encryption set.
        /// </summary>
        public readonly string DiskEncryptionSetId;
        /// <summary>
        /// Encryption properties for databricks workspace
        /// </summary>
        public readonly Outputs.WorkspacePropertiesResponseEncryption? Encryption;
        /// <summary>
        /// The details of Managed Identity of Disk Encryption Set used for Managed Disk Encryption
        /// </summary>
        public readonly Outputs.ManagedIdentityConfigurationResponse? ManagedDiskIdentity;
        /// <summary>
        /// The managed resource group Id.
        /// </summary>
        public readonly string ManagedResourceGroupId;
        /// <summary>
        /// The workspace's custom parameters.
        /// </summary>
        public readonly Outputs.WorkspaceCustomParametersResponse? Parameters;
        /// <summary>
        /// Private endpoint connections created on the workspace
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// The workspace provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The network access type for accessing workspace. Set value to disabled to access workspace only via private link.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.
        /// </summary>
        public readonly string? RequiredNsgRules;
        /// <summary>
        /// The details of Managed Identity of Storage Account
        /// </summary>
        public readonly Outputs.ManagedIdentityConfigurationResponse? StorageAccountIdentity;
        /// <summary>
        /// The blob URI where the UI definition file is located.
        /// </summary>
        public readonly string? UiDefinitionUri;
        /// <summary>
        /// Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.
        /// </summary>
        public readonly Outputs.CreatedByResponse? UpdatedBy;
        /// <summary>
        /// The unique identifier of the databricks workspace in databricks control plane.
        /// </summary>
        public readonly string WorkspaceId;
        /// <summary>
        /// The workspace URL which is of the format 'adb-{workspaceId}.{random}.azuredatabricks.net'
        /// </summary>
        public readonly string WorkspaceUrl;

        [OutputConstructor]
        private WorkspacePropertiesResponse(
            ImmutableArray<Outputs.WorkspaceProviderAuthorizationResponse> authorizations,

            Outputs.CreatedByResponse? createdBy,

            string createdDateTime,

            string diskEncryptionSetId,

            Outputs.WorkspacePropertiesResponseEncryption? encryption,

            Outputs.ManagedIdentityConfigurationResponse? managedDiskIdentity,

            string managedResourceGroupId,

            Outputs.WorkspaceCustomParametersResponse? parameters,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            string? requiredNsgRules,

            Outputs.ManagedIdentityConfigurationResponse? storageAccountIdentity,

            string? uiDefinitionUri,

            Outputs.CreatedByResponse? updatedBy,

            string workspaceId,

            string workspaceUrl)
        {
            Authorizations = authorizations;
            CreatedBy = createdBy;
            CreatedDateTime = createdDateTime;
            DiskEncryptionSetId = diskEncryptionSetId;
            Encryption = encryption;
            ManagedDiskIdentity = managedDiskIdentity;
            ManagedResourceGroupId = managedResourceGroupId;
            Parameters = parameters;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            RequiredNsgRules = requiredNsgRules;
            StorageAccountIdentity = storageAccountIdentity;
            UiDefinitionUri = uiDefinitionUri;
            UpdatedBy = updatedBy;
            WorkspaceId = workspaceId;
            WorkspaceUrl = workspaceUrl;
        }
    }
}
