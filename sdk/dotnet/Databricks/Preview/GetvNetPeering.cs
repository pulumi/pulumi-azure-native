// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Databricks.Preview
{
    public static class GetvNetPeering
    {
        public static Task<GetvNetPeeringResult> InvokeAsync(GetvNetPeeringArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetvNetPeeringResult>("azurerm:databricks/preview:getvNetPeering", args ?? new GetvNetPeeringArgs(), options.WithVersion());
    }


    public sealed class GetvNetPeeringArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the workspace vNet peering.
        /// </summary>
        [Input("peeringName", required: true)]
        public string PeeringName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetvNetPeeringArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetvNetPeeringResult
    {
        /// <summary>
        /// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
        /// </summary>
        public readonly bool? AllowForwardedTraffic;
        /// <summary>
        /// If gateway links can be used in remote virtual networking to link to this virtual network.
        /// </summary>
        public readonly bool? AllowGatewayTransit;
        /// <summary>
        /// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
        /// </summary>
        public readonly bool? AllowVirtualNetworkAccess;
        /// <summary>
        /// The reference to the databricks virtual network address space.
        /// </summary>
        public readonly Outputs.AddressSpaceResponseResult? DatabricksAddressSpace;
        /// <summary>
        ///  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
        /// </summary>
        public readonly Outputs.VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetworkResult? DatabricksVirtualNetwork;
        /// <summary>
        /// Name of the virtual network peering resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the virtual network peering.
        /// </summary>
        public readonly string PeeringState;
        /// <summary>
        /// The provisioning state of the virtual network peering resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The reference to the remote virtual network address space.
        /// </summary>
        public readonly Outputs.AddressSpaceResponseResult? RemoteAddressSpace;
        /// <summary>
        ///  The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).
        /// </summary>
        public readonly Outputs.VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetworkResult RemoteVirtualNetwork;
        /// <summary>
        /// type of the virtual network peering resource
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
        /// </summary>
        public readonly bool? UseRemoteGateways;

        [OutputConstructor]
        private GetvNetPeeringResult(
            bool? allowForwardedTraffic,

            bool? allowGatewayTransit,

            bool? allowVirtualNetworkAccess,

            Outputs.AddressSpaceResponseResult? databricksAddressSpace,

            Outputs.VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetworkResult? databricksVirtualNetwork,

            string name,

            string peeringState,

            string provisioningState,

            Outputs.AddressSpaceResponseResult? remoteAddressSpace,

            Outputs.VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetworkResult remoteVirtualNetwork,

            string type,

            bool? useRemoteGateways)
        {
            AllowForwardedTraffic = allowForwardedTraffic;
            AllowGatewayTransit = allowGatewayTransit;
            AllowVirtualNetworkAccess = allowVirtualNetworkAccess;
            DatabricksAddressSpace = databricksAddressSpace;
            DatabricksVirtualNetwork = databricksVirtualNetwork;
            Name = name;
            PeeringState = peeringState;
            ProvisioningState = provisioningState;
            RemoteAddressSpace = remoteAddressSpace;
            RemoteVirtualNetwork = remoteVirtualNetwork;
            Type = type;
            UseRemoteGateways = useRemoteGateways;
        }
    }
}
