// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Databricks.Outputs
{

    [OutputType]
    public sealed class WorkspaceCustomParametersResponse
    {
        /// <summary>
        /// The name of the Private Subnet within the Virtual Network
        /// </summary>
        public readonly Outputs.WorkspaceCustomStringParameterResponse? CustomPrivateSubnetName;
        /// <summary>
        /// The name of a Public Subnet within the Virtual Network
        /// </summary>
        public readonly Outputs.WorkspaceCustomStringParameterResponse? CustomPublicSubnetName;
        /// <summary>
        /// The ID of a Virtual Network where this Databricks Cluster should be created
        /// </summary>
        public readonly Outputs.WorkspaceCustomStringParameterResponse? CustomVirtualNetworkId;
        /// <summary>
        /// Should the Public IP be Disabled?
        /// </summary>
        public readonly Outputs.WorkspaceCustomBooleanParameterResponse? EnableNoPublicIp;
        /// <summary>
        /// Contains the encryption details for Customer-Managed Key (CMK) enabled workspace.
        /// </summary>
        public readonly Outputs.WorkspaceEncryptionParameterResponse? Encryption;
        /// <summary>
        /// Prepare the workspace for encryption. Enables the Managed Identity for managed storage account.
        /// </summary>
        public readonly Outputs.WorkspaceCustomBooleanParameterResponse? PrepareEncryption;

        [OutputConstructor]
        private WorkspaceCustomParametersResponse(
            Outputs.WorkspaceCustomStringParameterResponse? customPrivateSubnetName,

            Outputs.WorkspaceCustomStringParameterResponse? customPublicSubnetName,

            Outputs.WorkspaceCustomStringParameterResponse? customVirtualNetworkId,

            Outputs.WorkspaceCustomBooleanParameterResponse? enableNoPublicIp,

            Outputs.WorkspaceEncryptionParameterResponse? encryption,

            Outputs.WorkspaceCustomBooleanParameterResponse? prepareEncryption)
        {
            CustomPrivateSubnetName = customPrivateSubnetName;
            CustomPublicSubnetName = customPublicSubnetName;
            CustomVirtualNetworkId = customVirtualNetworkId;
            EnableNoPublicIp = enableNoPublicIp;
            Encryption = encryption;
            PrepareEncryption = prepareEncryption;
        }
    }
}
