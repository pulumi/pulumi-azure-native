// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.Outputs
{

    /// <summary>
    /// Defines the match condition that is supported to filter the traffic.
    /// </summary>
    [OutputType]
    public sealed class NetworkTapRuleMatchConditionResponse
    {
        /// <summary>
        /// Encapsulation Type that needs to be matched.
        /// </summary>
        public readonly string? EncapsulationType;
        /// <summary>
        /// IP condition that needs to be matched.
        /// </summary>
        public readonly Outputs.IpMatchConditionResponse? IpCondition;
        /// <summary>
        /// Defines the port condition that needs to be matched.
        /// </summary>
        public readonly Outputs.PortConditionResponse? PortCondition;
        /// <summary>
        /// List of the protocols that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> ProtocolTypes;
        /// <summary>
        /// Vlan match condition that needs to be matched.
        /// </summary>
        public readonly Outputs.VlanMatchConditionResponse? VlanMatchCondition;

        [OutputConstructor]
        private NetworkTapRuleMatchConditionResponse(
            string? encapsulationType,

            Outputs.IpMatchConditionResponse? ipCondition,

            Outputs.PortConditionResponse? portCondition,

            ImmutableArray<string> protocolTypes,

            Outputs.VlanMatchConditionResponse? vlanMatchCondition)
        {
            EncapsulationType = encapsulationType;
            IpCondition = ipCondition;
            PortCondition = portCondition;
            ProtocolTypes = protocolTypes;
            VlanMatchCondition = vlanMatchCondition;
        }
    }
}
