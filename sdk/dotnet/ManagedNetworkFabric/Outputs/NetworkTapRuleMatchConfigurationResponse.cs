// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.Outputs
{

    /// <summary>
    /// Defines the match configuration that are supported to filter the traffic.
    /// </summary>
    [OutputType]
    public sealed class NetworkTapRuleMatchConfigurationResponse
    {
        /// <summary>
        /// List of actions that need to be performed for the matched conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkTapRuleActionResponse> Actions;
        /// <summary>
        /// Type of IP Address. IPv4 or IPv6
        /// </summary>
        public readonly string? IpAddressType;
        /// <summary>
        /// List of the match conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkTapRuleMatchConditionResponse> MatchConditions;
        /// <summary>
        /// The name of the match configuration.
        /// </summary>
        public readonly string? MatchConfigurationName;
        /// <summary>
        /// Sequence Number of the match configuration..
        /// </summary>
        public readonly double? SequenceNumber;

        [OutputConstructor]
        private NetworkTapRuleMatchConfigurationResponse(
            ImmutableArray<Outputs.NetworkTapRuleActionResponse> actions,

            string? ipAddressType,

            ImmutableArray<Outputs.NetworkTapRuleMatchConditionResponse> matchConditions,

            string? matchConfigurationName,

            double? sequenceNumber)
        {
            Actions = actions;
            IpAddressType = ipAddressType;
            MatchConditions = matchConditions;
            MatchConfigurationName = matchConfigurationName;
            SequenceNumber = sequenceNumber;
        }
    }
}
