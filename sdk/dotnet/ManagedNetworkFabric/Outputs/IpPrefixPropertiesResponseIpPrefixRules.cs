// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.Outputs
{

    [OutputType]
    public sealed class IpPrefixPropertiesResponseIpPrefixRules
    {
        /// <summary>
        /// Action to be taken on the configuration. Example: Permit | Deny.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Specify prefix-list bounds.
        /// </summary>
        public readonly string? Condition;
        /// <summary>
        /// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126 
        /// </summary>
        public readonly string NetworkPrefix;
        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
        /// </summary>
        public readonly double SequenceNumber;
        /// <summary>
        /// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
        /// </summary>
        public readonly int? SubnetMaskLength;

        [OutputConstructor]
        private IpPrefixPropertiesResponseIpPrefixRules(
            string action,

            string? condition,

            string networkPrefix,

            double sequenceNumber,

            int? subnetMaskLength)
        {
            Action = action;
            Condition = condition;
            NetworkPrefix = networkPrefix;
            SequenceNumber = sequenceNumber;
            SubnetMaskLength = subnetMaskLength;
        }
    }
}
