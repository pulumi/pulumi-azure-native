// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric
{
    /// <summary>
    /// The L3IsolationDomain resource definition.
    /// Azure REST API version: 2023-02-01-preview. Prior API version in Azure Native 1.x: 2023-02-01-preview
    /// </summary>
    [AzureNativeResourceType("azure-native:managednetworkfabric:L3IsolationDomain")]
    public partial class L3IsolationDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Administrative state of the IsolationDomain. Example: Enabled | Disabled.
        /// </summary>
        [Output("administrativeState")]
        public Output<string> AdministrativeState { get; private set; } = null!;

        /// <summary>
        /// List of Ipv4 and Ipv6 route configurations.
        /// </summary>
        [Output("aggregateRouteConfiguration")]
        public Output<Outputs.L3IsolationDomainPatchPropertiesResponseAggregateRouteConfiguration?> AggregateRouteConfiguration { get; private set; } = null!;

        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Output("annotation")]
        public Output<string?> Annotation { get; private set; } = null!;

        /// <summary>
        /// Connected Subnet RoutePolicy
        /// </summary>
        [Output("connectedSubnetRoutePolicy")]
        public Output<Outputs.L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy?> ConnectedSubnetRoutePolicy { get; private set; } = null!;

        /// <summary>
        /// L3 Isolation Domain description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// List of resources the L3 Isolation Domain is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        [Output("disabledOnResources")]
        public Output<ImmutableArray<string>> DisabledOnResources { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network Fabric ARM resource id.
        /// </summary>
        [Output("networkFabricId")]
        public Output<string> NetworkFabricId { get; private set; } = null!;

        /// <summary>
        /// List of resources the OptionB is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        [Output("optionBDisabledOnResources")]
        public Output<ImmutableArray<string>> OptionBDisabledOnResources { get; private set; } = null!;

        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Advertise Connected Subnets. Ex: "True" | "False".
        /// </summary>
        [Output("redistributeConnectedSubnets")]
        public Output<string?> RedistributeConnectedSubnets { get; private set; } = null!;

        /// <summary>
        /// Advertise Static Routes. Ex: "True" | "False".
        /// </summary>
        [Output("redistributeStaticRoutes")]
        public Output<string?> RedistributeStaticRoutes { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a L3IsolationDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public L3IsolationDomain(string name, L3IsolationDomainArgs args, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric:L3IsolationDomain", name, args ?? new L3IsolationDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private L3IsolationDomain(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric:L3IsolationDomain", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:managednetworkfabric/v20230201preview:L3IsolationDomain"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing L3IsolationDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static L3IsolationDomain Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new L3IsolationDomain(name, id, options);
        }
    }

    public sealed class L3IsolationDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// List of Ipv4 and Ipv6 route configurations.
        /// </summary>
        [Input("aggregateRouteConfiguration")]
        public Input<Inputs.L3IsolationDomainPatchPropertiesAggregateRouteConfigurationArgs>? AggregateRouteConfiguration { get; set; }

        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Input("annotation")]
        public Input<string>? Annotation { get; set; }

        /// <summary>
        /// Connected Subnet RoutePolicy
        /// </summary>
        [Input("connectedSubnetRoutePolicy")]
        public Input<Inputs.L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs>? ConnectedSubnetRoutePolicy { get; set; }

        /// <summary>
        /// L3 Isolation Domain description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the L3 Isolation Domain
        /// </summary>
        [Input("l3IsolationDomainName")]
        public Input<string>? L3IsolationDomainName { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Network Fabric ARM resource id.
        /// </summary>
        [Input("networkFabricId", required: true)]
        public Input<string> NetworkFabricId { get; set; } = null!;

        /// <summary>
        /// Advertise Connected Subnets. Ex: "True" | "False".
        /// </summary>
        [Input("redistributeConnectedSubnets")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.RedistributeConnectedSubnets>? RedistributeConnectedSubnets { get; set; }

        /// <summary>
        /// Advertise Static Routes. Ex: "True" | "False".
        /// </summary>
        [Input("redistributeStaticRoutes")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.RedistributeStaticRoutes>? RedistributeStaticRoutes { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public L3IsolationDomainArgs()
        {
            RedistributeConnectedSubnets = "True";
            RedistributeStaticRoutes = "False";
        }
        public static new L3IsolationDomainArgs Empty => new L3IsolationDomainArgs();
    }
}
