// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric
{
    public static class GetAccessControlList
    {
        /// <summary>
        /// Implements Access Control List GET method.
        /// Azure REST API version: 2023-02-01-preview.
        /// 
        /// Other available API versions: 2023-06-15.
        /// </summary>
        public static Task<GetAccessControlListResult> InvokeAsync(GetAccessControlListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessControlListResult>("azure-native:managednetworkfabric:getAccessControlList", args ?? new GetAccessControlListArgs(), options.WithDefaults());

        /// <summary>
        /// Implements Access Control List GET method.
        /// Azure REST API version: 2023-02-01-preview.
        /// 
        /// Other available API versions: 2023-06-15.
        /// </summary>
        public static Output<GetAccessControlListResult> Invoke(GetAccessControlListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessControlListResult>("azure-native:managednetworkfabric:getAccessControlList", args ?? new GetAccessControlListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessControlListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Access Control List
        /// </summary>
        [Input("accessControlListName", required: true)]
        public string AccessControlListName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccessControlListArgs()
        {
        }
        public static new GetAccessControlListArgs Empty => new GetAccessControlListArgs();
    }

    public sealed class GetAccessControlListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Access Control List
        /// </summary>
        [Input("accessControlListName", required: true)]
        public Input<string> AccessControlListName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAccessControlListInvokeArgs()
        {
        }
        public static new GetAccessControlListInvokeArgs Empty => new GetAccessControlListInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessControlListResult
    {
        /// <summary>
        /// IP address family. Example: ipv4 | ipv6.
        /// </summary>
        public readonly string AddressFamily;
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// Access Control List conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessControlListConditionPropertiesResponse> Conditions;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAccessControlListResult(
            string addressFamily,

            string? annotation,

            ImmutableArray<Outputs.AccessControlListConditionPropertiesResponse> conditions,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AddressFamily = addressFamily;
            Annotation = annotation;
            Conditions = conditions;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
