// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric
{
    public static class GetInternalNetwork
    {
        /// <summary>
        /// Gets a InternalNetworks.
        /// Azure REST API version: 2023-02-01-preview.
        /// 
        /// Other available API versions: 2023-06-15.
        /// </summary>
        public static Task<GetInternalNetworkResult> InvokeAsync(GetInternalNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternalNetworkResult>("azure-native:managednetworkfabric:getInternalNetwork", args ?? new GetInternalNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a InternalNetworks.
        /// Azure REST API version: 2023-02-01-preview.
        /// 
        /// Other available API versions: 2023-06-15.
        /// </summary>
        public static Output<GetInternalNetworkResult> Invoke(GetInternalNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalNetworkResult>("azure-native:managednetworkfabric:getInternalNetwork", args ?? new GetInternalNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternalNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the InternalNetwork
        /// </summary>
        [Input("internalNetworkName", required: true)]
        public string InternalNetworkName { get; set; } = null!;

        /// <summary>
        /// Name of the L3IsolationDomain
        /// </summary>
        [Input("l3IsolationDomainName", required: true)]
        public string L3IsolationDomainName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetInternalNetworkArgs()
        {
        }
        public static new GetInternalNetworkArgs Empty => new GetInternalNetworkArgs();
    }

    public sealed class GetInternalNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the InternalNetwork
        /// </summary>
        [Input("internalNetworkName", required: true)]
        public Input<string> InternalNetworkName { get; set; } = null!;

        /// <summary>
        /// Name of the L3IsolationDomain
        /// </summary>
        [Input("l3IsolationDomainName", required: true)]
        public Input<string> L3IsolationDomainName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetInternalNetworkInvokeArgs()
        {
        }
        public static new GetInternalNetworkInvokeArgs Empty => new GetInternalNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternalNetworkResult
    {
        /// <summary>
        /// Administrative state of the InternalNetwork. Example: Enabled | Disabled.
        /// </summary>
        public readonly string AdministrativeState;
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// List of resources the BFD for BGP is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        public readonly ImmutableArray<string> BfdDisabledOnResources;
        /// <summary>
        /// List of resources the BFD of StaticRoutes is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        public readonly ImmutableArray<string> BfdForStaticRoutesDisabledOnResources;
        /// <summary>
        /// BGP configuration properties
        /// </summary>
        public readonly Outputs.BgpConfigurationResponse? BgpConfiguration;
        /// <summary>
        /// List of resources the BGP is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        public readonly ImmutableArray<string> BgpDisabledOnResources;
        /// <summary>
        /// List with object connected IPv4 Subnets.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectedSubnetResponse> ConnectedIPv4Subnets;
        /// <summary>
        /// List with object connected IPv6 Subnets.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectedSubnetResponse> ConnectedIPv6Subnets;
        /// <summary>
        /// List of resources the InternalNetwork is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        public readonly ImmutableArray<string> DisabledOnResources;
        /// <summary>
        /// ARM resource ID of importRoutePolicy.
        /// </summary>
        public readonly string? ExportRoutePolicyId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ARM resource ID of importRoutePolicy.
        /// </summary>
        public readonly string? ImportRoutePolicyId;
        /// <summary>
        /// Maximum transmission unit. Default value is 1500.
        /// </summary>
        public readonly int? Mtu;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Static Route Configuration properties.
        /// </summary>
        public readonly Outputs.StaticRouteConfigurationResponse? StaticRouteConfiguration;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Vlan identifier. Example: 1001.
        /// </summary>
        public readonly int VlanId;

        [OutputConstructor]
        private GetInternalNetworkResult(
            string administrativeState,

            string? annotation,

            ImmutableArray<string> bfdDisabledOnResources,

            ImmutableArray<string> bfdForStaticRoutesDisabledOnResources,

            Outputs.BgpConfigurationResponse? bgpConfiguration,

            ImmutableArray<string> bgpDisabledOnResources,

            ImmutableArray<Outputs.ConnectedSubnetResponse> connectedIPv4Subnets,

            ImmutableArray<Outputs.ConnectedSubnetResponse> connectedIPv6Subnets,

            ImmutableArray<string> disabledOnResources,

            string? exportRoutePolicyId,

            string id,

            string? importRoutePolicyId,

            int? mtu,

            string name,

            string provisioningState,

            Outputs.StaticRouteConfigurationResponse? staticRouteConfiguration,

            Outputs.SystemDataResponse systemData,

            string type,

            int vlanId)
        {
            AdministrativeState = administrativeState;
            Annotation = annotation;
            BfdDisabledOnResources = bfdDisabledOnResources;
            BfdForStaticRoutesDisabledOnResources = bfdForStaticRoutesDisabledOnResources;
            BgpConfiguration = bgpConfiguration;
            BgpDisabledOnResources = bgpDisabledOnResources;
            ConnectedIPv4Subnets = connectedIPv4Subnets;
            ConnectedIPv6Subnets = connectedIPv6Subnets;
            DisabledOnResources = disabledOnResources;
            ExportRoutePolicyId = exportRoutePolicyId;
            Id = id;
            ImportRoutePolicyId = importRoutePolicyId;
            Mtu = mtu;
            Name = name;
            ProvisioningState = provisioningState;
            StaticRouteConfiguration = staticRouteConfiguration;
            SystemData = systemData;
            Type = type;
            VlanId = vlanId;
        }
    }
}
