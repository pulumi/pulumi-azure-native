// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric
{
    public static class GetIpCommunityList
    {
        /// <summary>
        /// Implements Ip Community List GET method.
        /// API Version: 2023-02-01-preview.
        /// </summary>
        public static Task<GetIpCommunityListResult> InvokeAsync(GetIpCommunityListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpCommunityListResult>("azure-native:managednetworkfabric:getIpCommunityList", args ?? new GetIpCommunityListArgs(), options.WithDefaults());

        /// <summary>
        /// Implements Ip Community List GET method.
        /// API Version: 2023-02-01-preview.
        /// </summary>
        public static Output<GetIpCommunityListResult> Invoke(GetIpCommunityListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpCommunityListResult>("azure-native:managednetworkfabric:getIpCommunityList", args ?? new GetIpCommunityListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpCommunityListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Ip Community List
        /// </summary>
        [Input("ipCommunityListName", required: true)]
        public string IpCommunityListName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIpCommunityListArgs()
        {
        }
        public static new GetIpCommunityListArgs Empty => new GetIpCommunityListArgs();
    }

    public sealed class GetIpCommunityListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Ip Community List
        /// </summary>
        [Input("ipCommunityListName", required: true)]
        public Input<string> IpCommunityListName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIpCommunityListInvokeArgs()
        {
        }
        public static new GetIpCommunityListInvokeArgs Empty => new GetIpCommunityListInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpCommunityListResult
    {
        /// <summary>
        /// action. Example: allow | deny.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// noAdvertise. Example: true | false.
        /// </summary>
        public readonly string Advertise;
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// Ip Community List communityMembers.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpCommunityListPropertiesResponseCommunityMembers> CommunityMembers;
        /// <summary>
        /// Ip Community List evpnEsImportRouteTargets.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpCommunityListPropertiesResponseEvpnEsImportRouteTargets> EvpnEsImportRouteTargets;
        /// <summary>
        /// noExport. Example: true | false.
        /// </summary>
        public readonly string Export;
        /// <summary>
        ///  Graceful Shutdown (GSHUT). Example: true | false.
        /// </summary>
        public readonly string? Gshut;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Internet access. Example: true | false.
        /// </summary>
        public readonly string? Internet;
        /// <summary>
        /// Local Autonomous System. Example: true | false.
        /// </summary>
        public readonly string LocalAS;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIpCommunityListResult(
            string action,

            string advertise,

            string? annotation,

            ImmutableArray<Outputs.IpCommunityListPropertiesResponseCommunityMembers> communityMembers,

            ImmutableArray<Outputs.IpCommunityListPropertiesResponseEvpnEsImportRouteTargets> evpnEsImportRouteTargets,

            string export,

            string? gshut,

            string id,

            string? internet,

            string localAS,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Action = action;
            Advertise = advertise;
            Annotation = annotation;
            CommunityMembers = communityMembers;
            EvpnEsImportRouteTargets = evpnEsImportRouteTargets;
            Export = export;
            Gshut = gshut;
            Id = id;
            Internet = internet;
            LocalAS = localAS;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
