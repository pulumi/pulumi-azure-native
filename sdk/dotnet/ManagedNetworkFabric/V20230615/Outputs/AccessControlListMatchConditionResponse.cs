// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Outputs
{

    /// <summary>
    /// Defines the match condition that is supported to filter the traffic.
    /// </summary>
    [OutputType]
    public sealed class AccessControlListMatchConditionResponse
    {
        /// <summary>
        /// List of DSCP Markings that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> DscpMarkings;
        /// <summary>
        /// List of ether type values that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> EtherTypes;
        /// <summary>
        /// List of IP fragment packets that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> Fragments;
        /// <summary>
        /// IP condition that needs to be matched.
        /// </summary>
        public readonly Outputs.IpMatchConditionResponse? IpCondition;
        /// <summary>
        /// List of IP Lengths that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> IpLengths;
        /// <summary>
        /// Defines the port condition that needs to be matched.
        /// </summary>
        public readonly Outputs.AccessControlListPortConditionResponse? PortCondition;
        /// <summary>
        /// List of the protocols that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> ProtocolTypes;
        /// <summary>
        /// List of TTL [Time To Live] values that need to be matched.
        /// </summary>
        public readonly ImmutableArray<string> TtlValues;
        /// <summary>
        /// Vlan match condition that needs to be matched.
        /// </summary>
        public readonly Outputs.VlanMatchConditionResponse? VlanMatchCondition;

        [OutputConstructor]
        private AccessControlListMatchConditionResponse(
            ImmutableArray<string> dscpMarkings,

            ImmutableArray<string> etherTypes,

            ImmutableArray<string> fragments,

            Outputs.IpMatchConditionResponse? ipCondition,

            ImmutableArray<string> ipLengths,

            Outputs.AccessControlListPortConditionResponse? portCondition,

            ImmutableArray<string> protocolTypes,

            ImmutableArray<string> ttlValues,

            Outputs.VlanMatchConditionResponse? vlanMatchCondition)
        {
            DscpMarkings = dscpMarkings;
            EtherTypes = etherTypes;
            Fragments = fragments;
            IpCondition = ipCondition;
            IpLengths = ipLengths;
            PortCondition = portCondition;
            ProtocolTypes = protocolTypes;
            TtlValues = ttlValues;
            VlanMatchCondition = vlanMatchCondition;
        }
    }
}
