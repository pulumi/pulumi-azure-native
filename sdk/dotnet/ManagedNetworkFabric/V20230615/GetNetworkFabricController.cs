// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    public static class GetNetworkFabricController
    {
        /// <summary>
        /// Shows the provisioning status of Network Fabric Controller.
        /// </summary>
        public static Task<GetNetworkFabricControllerResult> InvokeAsync(GetNetworkFabricControllerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFabricControllerResult>("azure-native:managednetworkfabric/v20230615:getNetworkFabricController", args ?? new GetNetworkFabricControllerArgs(), options.WithDefaults());

        /// <summary>
        /// Shows the provisioning status of Network Fabric Controller.
        /// </summary>
        public static Output<GetNetworkFabricControllerResult> Invoke(GetNetworkFabricControllerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFabricControllerResult>("azure-native:managednetworkfabric/v20230615:getNetworkFabricController", args ?? new GetNetworkFabricControllerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFabricControllerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Network Fabric Controller.
        /// </summary>
        [Input("networkFabricControllerName", required: true)]
        public string NetworkFabricControllerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkFabricControllerArgs()
        {
        }
        public static new GetNetworkFabricControllerArgs Empty => new GetNetworkFabricControllerArgs();
    }

    public sealed class GetNetworkFabricControllerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Network Fabric Controller.
        /// </summary>
        [Input("networkFabricControllerName", required: true)]
        public Input<string> NetworkFabricControllerName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkFabricControllerInvokeArgs()
        {
        }
        public static new GetNetworkFabricControllerInvokeArgs Empty => new GetNetworkFabricControllerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFabricControllerResult
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteConnectionInformationResponse> InfrastructureExpressRouteConnections;
        /// <summary>
        /// InfrastructureServices IP ranges.
        /// </summary>
        public readonly Outputs.ControllerServicesResponse InfrastructureServices;
        /// <summary>
        /// IPv4 Network Fabric Controller Address Space.
        /// </summary>
        public readonly string? Ipv4AddressSpace;
        /// <summary>
        /// IPv6 Network Fabric Controller Address Space.
        /// </summary>
        public readonly string? Ipv6AddressSpace;
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints.
        /// </summary>
        public readonly string? IsWorkloadManagementNetworkEnabled;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Managed Resource Group configuration properties.
        /// </summary>
        public readonly Outputs.ManagedResourceGroupConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.
        /// </summary>
        public readonly ImmutableArray<string> NetworkFabricIds;
        /// <summary>
        /// Network Fabric Controller SKU.
        /// </summary>
        public readonly string? NfcSku;
        /// <summary>
        /// Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// List of tenant InternetGateway resource IDs
        /// </summary>
        public readonly ImmutableArray<string> TenantInternetGatewayIds;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).
        /// </summary>
        public readonly ImmutableArray<Outputs.ExpressRouteConnectionInformationResponse> WorkloadExpressRouteConnections;
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.
        /// </summary>
        public readonly bool WorkloadManagementNetwork;
        /// <summary>
        /// WorkloadServices IP ranges.
        /// </summary>
        public readonly Outputs.ControllerServicesResponse WorkloadServices;

        [OutputConstructor]
        private GetNetworkFabricControllerResult(
            string? annotation,

            string id,

            ImmutableArray<Outputs.ExpressRouteConnectionInformationResponse> infrastructureExpressRouteConnections,

            Outputs.ControllerServicesResponse infrastructureServices,

            string? ipv4AddressSpace,

            string? ipv6AddressSpace,

            string? isWorkloadManagementNetworkEnabled,

            string location,

            Outputs.ManagedResourceGroupConfigurationResponse? managedResourceGroupConfiguration,

            string name,

            ImmutableArray<string> networkFabricIds,

            string? nfcSku,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<string> tenantInternetGatewayIds,

            string type,

            ImmutableArray<Outputs.ExpressRouteConnectionInformationResponse> workloadExpressRouteConnections,

            bool workloadManagementNetwork,

            Outputs.ControllerServicesResponse workloadServices)
        {
            Annotation = annotation;
            Id = id;
            InfrastructureExpressRouteConnections = infrastructureExpressRouteConnections;
            InfrastructureServices = infrastructureServices;
            Ipv4AddressSpace = ipv4AddressSpace;
            Ipv6AddressSpace = ipv6AddressSpace;
            IsWorkloadManagementNetworkEnabled = isWorkloadManagementNetworkEnabled;
            Location = location;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            Name = name;
            NetworkFabricIds = networkFabricIds;
            NfcSku = nfcSku;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            TenantInternetGatewayIds = tenantInternetGatewayIds;
            Type = type;
            WorkloadExpressRouteConnections = workloadExpressRouteConnections;
            WorkloadManagementNetwork = workloadManagementNetwork;
            WorkloadServices = workloadServices;
        }
    }
}
