// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    /// <summary>
    /// The Network Device resource definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:managednetworkfabric/v20230615:NetworkDevice")]
    public partial class NetworkDevice : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Administrative state of the resource.
        /// </summary>
        [Output("administrativeState")]
        public Output<string> AdministrativeState { get; private set; } = null!;

        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Output("annotation")]
        public Output<string?> Annotation { get; private set; } = null!;

        /// <summary>
        /// Configuration state of the resource.
        /// </summary>
        [Output("configurationState")]
        public Output<string> ConfigurationState { get; private set; } = null!;

        /// <summary>
        /// The host name of the device.
        /// </summary>
        [Output("hostName")]
        public Output<string?> HostName { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Management IPv4 Address.
        /// </summary>
        [Output("managementIpv4Address")]
        public Output<string> ManagementIpv4Address { get; private set; } = null!;

        /// <summary>
        /// Management IPv6 Address.
        /// </summary>
        [Output("managementIpv6Address")]
        public Output<string> ManagementIpv6Address { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// NetworkDeviceRole is the device role: Example: CE | ToR.
        /// </summary>
        [Output("networkDeviceRole")]
        public Output<string> NetworkDeviceRole { get; private set; } = null!;

        /// <summary>
        /// Network Device SKU name.
        /// </summary>
        [Output("networkDeviceSku")]
        public Output<string?> NetworkDeviceSku { get; private set; } = null!;

        /// <summary>
        /// Reference to network rack resource id.
        /// </summary>
        [Output("networkRackId")]
        public Output<string> NetworkRackId { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.
        /// </summary>
        [Output("serialNumber")]
        public Output<string> SerialNumber { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Current version of the device as defined in SKU.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkDevice resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkDevice(string name, NetworkDeviceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric/v20230615:NetworkDevice", name, args ?? new NetworkDeviceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkDevice(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric/v20230615:NetworkDevice", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:managednetworkfabric:NetworkDevice" },
                    new global::Pulumi.Alias { Type = "azure-native:managednetworkfabric/v20230201preview:NetworkDevice" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkDevice resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkDevice Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkDevice(name, id, options);
        }
    }

    public sealed class NetworkDeviceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Input("annotation")]
        public Input<string>? Annotation { get; set; }

        /// <summary>
        /// The host name of the device.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Network Device.
        /// </summary>
        [Input("networkDeviceName")]
        public Input<string>? NetworkDeviceName { get; set; }

        /// <summary>
        /// Network Device SKU name.
        /// </summary>
        [Input("networkDeviceSku")]
        public Input<string>? NetworkDeviceSku { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.
        /// </summary>
        [Input("serialNumber", required: true)]
        public Input<string> SerialNumber { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkDeviceArgs()
        {
        }
        public static new NetworkDeviceArgs Empty => new NetworkDeviceArgs();
    }
}
