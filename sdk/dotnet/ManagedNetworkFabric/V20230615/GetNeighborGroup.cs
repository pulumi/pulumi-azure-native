// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    public static class GetNeighborGroup
    {
        /// <summary>
        /// Gets the Neighbor Group.
        /// </summary>
        public static Task<GetNeighborGroupResult> InvokeAsync(GetNeighborGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNeighborGroupResult>("azure-native:managednetworkfabric/v20230615:getNeighborGroup", args ?? new GetNeighborGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Neighbor Group.
        /// </summary>
        public static Output<GetNeighborGroupResult> Invoke(GetNeighborGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNeighborGroupResult>("azure-native:managednetworkfabric/v20230615:getNeighborGroup", args ?? new GetNeighborGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNeighborGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Neighbor Group.
        /// </summary>
        [Input("neighborGroupName", required: true)]
        public string NeighborGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNeighborGroupArgs()
        {
        }
        public static new GetNeighborGroupArgs Empty => new GetNeighborGroupArgs();
    }

    public sealed class GetNeighborGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Neighbor Group.
        /// </summary>
        [Input("neighborGroupName", required: true)]
        public Input<string> NeighborGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNeighborGroupInvokeArgs()
        {
        }
        public static new GetNeighborGroupInvokeArgs Empty => new GetNeighborGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNeighborGroupResult
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// An array of destination IPv4 Addresses or IPv6 Addresses.
        /// </summary>
        public readonly Outputs.NeighborGroupDestinationResponse Destination;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of NetworkTap IDs where neighbor group is associated.
        /// </summary>
        public readonly ImmutableArray<string> NetworkTapIds;
        /// <summary>
        /// List of Network Tap Rule IDs where neighbor group is associated.
        /// </summary>
        public readonly ImmutableArray<string> NetworkTapRuleIds;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNeighborGroupResult(
            string? annotation,

            Outputs.NeighborGroupDestinationResponse destination,

            string id,

            string location,

            string name,

            ImmutableArray<string> networkTapIds,

            ImmutableArray<string> networkTapRuleIds,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Annotation = annotation;
            Destination = destination;
            Id = id;
            Location = location;
            Name = name;
            NetworkTapIds = networkTapIds;
            NetworkTapRuleIds = networkTapRuleIds;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
