// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    public static class GetInternetGateway
    {
        /// <summary>
        /// Implements Gateway GET method.
        /// </summary>
        public static Task<GetInternetGatewayResult> InvokeAsync(GetInternetGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternetGatewayResult>("azure-native:managednetworkfabric/v20230615:getInternetGateway", args ?? new GetInternetGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Implements Gateway GET method.
        /// </summary>
        public static Output<GetInternetGatewayResult> Invoke(GetInternetGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternetGatewayResult>("azure-native:managednetworkfabric/v20230615:getInternetGateway", args ?? new GetInternetGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternetGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Internet Gateway.
        /// </summary>
        [Input("internetGatewayName", required: true)]
        public string InternetGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetInternetGatewayArgs()
        {
        }
        public static new GetInternetGatewayArgs Empty => new GetInternetGatewayArgs();
    }

    public sealed class GetInternetGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Internet Gateway.
        /// </summary>
        [Input("internetGatewayName", required: true)]
        public Input<string> InternetGatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetInternetGatewayInvokeArgs()
        {
        }
        public static new GetInternetGatewayInvokeArgs Empty => new GetInternetGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternetGatewayResult
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ARM Resource ID of the Internet Gateway Rule.
        /// </summary>
        public readonly string? InternetGatewayRuleId;
        /// <summary>
        /// IPv4 Address of Internet Gateway.
        /// </summary>
        public readonly string Ipv4Address;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ARM Resource ID of the Network Fabric Controller.
        /// </summary>
        public readonly string NetworkFabricControllerId;
        /// <summary>
        /// Port number of Internet Gateway.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Provisioning state of resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInternetGatewayResult(
            string? annotation,

            string id,

            string? internetGatewayRuleId,

            string ipv4Address,

            string location,

            string name,

            string networkFabricControllerId,

            int port,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Annotation = annotation;
            Id = id;
            InternetGatewayRuleId = internetGatewayRuleId;
            Ipv4Address = ipv4Address;
            Location = location;
            Name = name;
            NetworkFabricControllerId = networkFabricControllerId;
            Port = port;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
