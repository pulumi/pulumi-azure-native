// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Inputs
{

    /// <summary>
    /// Defines the match condition that is supported to filter the traffic.
    /// </summary>
    public sealed class AccessControlListMatchConditionArgs : global::Pulumi.ResourceArgs
    {
        [Input("dscpMarkings")]
        private InputList<string>? _dscpMarkings;

        /// <summary>
        /// List of DSCP Markings that need to be matched.
        /// </summary>
        public InputList<string> DscpMarkings
        {
            get => _dscpMarkings ?? (_dscpMarkings = new InputList<string>());
            set => _dscpMarkings = value;
        }

        [Input("etherTypes")]
        private InputList<string>? _etherTypes;

        /// <summary>
        /// List of ether type values that need to be matched.
        /// </summary>
        public InputList<string> EtherTypes
        {
            get => _etherTypes ?? (_etherTypes = new InputList<string>());
            set => _etherTypes = value;
        }

        [Input("fragments")]
        private InputList<string>? _fragments;

        /// <summary>
        /// List of IP fragment packets that need to be matched.
        /// </summary>
        public InputList<string> Fragments
        {
            get => _fragments ?? (_fragments = new InputList<string>());
            set => _fragments = value;
        }

        /// <summary>
        /// IP condition that needs to be matched.
        /// </summary>
        [Input("ipCondition")]
        public Input<Inputs.IpMatchConditionArgs>? IpCondition { get; set; }

        [Input("ipLengths")]
        private InputList<string>? _ipLengths;

        /// <summary>
        /// List of IP Lengths that need to be matched.
        /// </summary>
        public InputList<string> IpLengths
        {
            get => _ipLengths ?? (_ipLengths = new InputList<string>());
            set => _ipLengths = value;
        }

        /// <summary>
        /// Defines the port condition that needs to be matched.
        /// </summary>
        [Input("portCondition")]
        public Input<Inputs.AccessControlListPortConditionArgs>? PortCondition { get; set; }

        [Input("protocolTypes")]
        private InputList<string>? _protocolTypes;

        /// <summary>
        /// List of the protocols that need to be matched.
        /// </summary>
        public InputList<string> ProtocolTypes
        {
            get => _protocolTypes ?? (_protocolTypes = new InputList<string>());
            set => _protocolTypes = value;
        }

        [Input("ttlValues")]
        private InputList<string>? _ttlValues;

        /// <summary>
        /// List of TTL [Time To Live] values that need to be matched.
        /// </summary>
        public InputList<string> TtlValues
        {
            get => _ttlValues ?? (_ttlValues = new InputList<string>());
            set => _ttlValues = value;
        }

        /// <summary>
        /// Vlan match condition that needs to be matched.
        /// </summary>
        [Input("vlanMatchCondition")]
        public Input<Inputs.VlanMatchConditionArgs>? VlanMatchCondition { get; set; }

        public AccessControlListMatchConditionArgs()
        {
        }
        public static new AccessControlListMatchConditionArgs Empty => new AccessControlListMatchConditionArgs();
    }
}
