// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Inputs
{

    /// <summary>
    /// Defines the match configuration that are supported to filter the traffic.
    /// </summary>
    public sealed class AccessControlListMatchConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.AccessControlListActionArgs>? _actions;

        /// <summary>
        /// List of actions that need to be performed for the matched conditions.
        /// </summary>
        public InputList<Inputs.AccessControlListActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.AccessControlListActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Type of IP Address. IPv4 or IPv6
        /// </summary>
        [Input("ipAddressType")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.IPAddressType>? IpAddressType { get; set; }

        [Input("matchConditions")]
        private InputList<Inputs.AccessControlListMatchConditionArgs>? _matchConditions;

        /// <summary>
        /// List of the match conditions.
        /// </summary>
        public InputList<Inputs.AccessControlListMatchConditionArgs> MatchConditions
        {
            get => _matchConditions ?? (_matchConditions = new InputList<Inputs.AccessControlListMatchConditionArgs>());
            set => _matchConditions = value;
        }

        /// <summary>
        /// The name of the match configuration.
        /// </summary>
        [Input("matchConfigurationName")]
        public Input<string>? MatchConfigurationName { get; set; }

        /// <summary>
        /// Sequence Number of the match configuration.
        /// </summary>
        [Input("sequenceNumber")]
        public Input<double>? SequenceNumber { get; set; }

        public AccessControlListMatchConfigurationArgs()
        {
        }
        public static new AccessControlListMatchConfigurationArgs Empty => new AccessControlListMatchConfigurationArgs();
    }
}
