// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Inputs
{

    /// <summary>
    /// Defines the port condition that needs to be matched.
    /// </summary>
    public sealed class AccessControlListPortConditionArgs : global::Pulumi.ResourceArgs
    {
        [Input("flags")]
        private InputList<string>? _flags;

        /// <summary>
        /// List of protocol flags that need to be matched. Example: established | initial | &lt;List-of-TCP-flags&gt;. List of eligible TCP Flags are ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg
        /// </summary>
        public InputList<string> Flags
        {
            get => _flags ?? (_flags = new InputList<string>());
            set => _flags = value;
        }

        /// <summary>
        /// Layer4 protocol type that needs to be matched.
        /// </summary>
        [Input("layer4Protocol", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Layer4Protocol> Layer4Protocol { get; set; } = null!;

        [Input("portGroupNames")]
        private InputList<string>? _portGroupNames;

        /// <summary>
        /// List of the port Group Names that need to be matched.
        /// </summary>
        public InputList<string> PortGroupNames
        {
            get => _portGroupNames ?? (_portGroupNames = new InputList<string>());
            set => _portGroupNames = value;
        }

        /// <summary>
        /// Port type that needs to be matched.
        /// </summary>
        [Input("portType")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.PortType>? PortType { get; set; }

        [Input("ports")]
        private InputList<string>? _ports;

        /// <summary>
        /// List of the Ports that need to be matched.
        /// </summary>
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        public AccessControlListPortConditionArgs()
        {
        }
        public static new AccessControlListPortConditionArgs Empty => new AccessControlListPortConditionArgs();
    }
}
