// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Inputs
{

    /// <summary>
    /// Defines the condition that can be filtered using the selected IPs.
    /// </summary>
    public sealed class IpMatchConditionArgs : global::Pulumi.ResourceArgs
    {
        [Input("ipGroupNames")]
        private InputList<string>? _ipGroupNames;

        /// <summary>
        /// The List of IP Group Names that need to be matched.
        /// </summary>
        public InputList<string> IpGroupNames
        {
            get => _ipGroupNames ?? (_ipGroupNames = new InputList<string>());
            set => _ipGroupNames = value;
        }

        [Input("ipPrefixValues")]
        private InputList<string>? _ipPrefixValues;

        /// <summary>
        /// The list of IP Prefixes that need to be matched.
        /// </summary>
        public InputList<string> IpPrefixValues
        {
            get => _ipPrefixValues ?? (_ipPrefixValues = new InputList<string>());
            set => _ipPrefixValues = value;
        }

        /// <summary>
        /// IP Prefix Type that needs to be matched.
        /// </summary>
        [Input("prefixType")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.PrefixType>? PrefixType { get; set; }

        /// <summary>
        /// IP Address type that needs to be matched.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.SourceDestinationType>? Type { get; set; }

        public IpMatchConditionArgs()
        {
        }
        public static new IpMatchConditionArgs Empty => new IpMatchConditionArgs();
    }
}
