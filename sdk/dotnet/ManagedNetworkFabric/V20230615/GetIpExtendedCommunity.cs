// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    public static class GetIpExtendedCommunity
    {
        /// <summary>
        /// Implements IP Extended Community GET method.
        /// </summary>
        public static Task<GetIpExtendedCommunityResult> InvokeAsync(GetIpExtendedCommunityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpExtendedCommunityResult>("azure-native:managednetworkfabric/v20230615:getIpExtendedCommunity", args ?? new GetIpExtendedCommunityArgs(), options.WithDefaults());

        /// <summary>
        /// Implements IP Extended Community GET method.
        /// </summary>
        public static Output<GetIpExtendedCommunityResult> Invoke(GetIpExtendedCommunityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpExtendedCommunityResult>("azure-native:managednetworkfabric/v20230615:getIpExtendedCommunity", args ?? new GetIpExtendedCommunityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpExtendedCommunityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the IP Extended Community.
        /// </summary>
        [Input("ipExtendedCommunityName", required: true)]
        public string IpExtendedCommunityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIpExtendedCommunityArgs()
        {
        }
        public static new GetIpExtendedCommunityArgs Empty => new GetIpExtendedCommunityArgs();
    }

    public sealed class GetIpExtendedCommunityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the IP Extended Community.
        /// </summary>
        [Input("ipExtendedCommunityName", required: true)]
        public Input<string> IpExtendedCommunityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIpExtendedCommunityInvokeArgs()
        {
        }
        public static new GetIpExtendedCommunityInvokeArgs Empty => new GetIpExtendedCommunityInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpExtendedCommunityResult
    {
        /// <summary>
        /// Administrative state of the resource.
        /// </summary>
        public readonly string AdministrativeState;
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// Configuration state of the resource.
        /// </summary>
        public readonly string ConfigurationState;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of IP Extended Community Rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpExtendedCommunityRuleResponse> IpExtendedCommunityRules;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIpExtendedCommunityResult(
            string administrativeState,

            string? annotation,

            string configurationState,

            string id,

            ImmutableArray<Outputs.IpExtendedCommunityRuleResponse> ipExtendedCommunityRules,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AdministrativeState = administrativeState;
            Annotation = annotation;
            ConfigurationState = configurationState;
            Id = id;
            IpExtendedCommunityRules = ipExtendedCommunityRules;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
