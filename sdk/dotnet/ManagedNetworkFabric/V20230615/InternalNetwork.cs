// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230615
{
    /// <summary>
    /// Defines the Internal Network resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:managednetworkfabric/v20230615:InternalNetwork")]
    public partial class InternalNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Administrative state of the resource.
        /// </summary>
        [Output("administrativeState")]
        public Output<string> AdministrativeState { get; private set; } = null!;

        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Output("annotation")]
        public Output<string?> Annotation { get; private set; } = null!;

        /// <summary>
        /// BGP configuration properties.
        /// </summary>
        [Output("bgpConfiguration")]
        public Output<Outputs.InternalNetworkPropertiesResponseBgpConfiguration?> BgpConfiguration { get; private set; } = null!;

        /// <summary>
        /// Configuration state of the resource.
        /// </summary>
        [Output("configurationState")]
        public Output<string> ConfigurationState { get; private set; } = null!;

        /// <summary>
        /// List of Connected IPv4 Subnets.
        /// </summary>
        [Output("connectedIPv4Subnets")]
        public Output<ImmutableArray<Outputs.ConnectedSubnetResponse>> ConnectedIPv4Subnets { get; private set; } = null!;

        /// <summary>
        /// List of connected IPv6 Subnets.
        /// </summary>
        [Output("connectedIPv6Subnets")]
        public Output<ImmutableArray<Outputs.ConnectedSubnetResponse>> ConnectedIPv6Subnets { get; private set; } = null!;

        /// <summary>
        /// Egress Acl. ARM resource ID of Access Control Lists.
        /// </summary>
        [Output("egressAclId")]
        public Output<string?> EgressAclId { get; private set; } = null!;

        /// <summary>
        /// Export Route Policy either IPv4 or IPv6.
        /// </summary>
        [Output("exportRoutePolicy")]
        public Output<Outputs.ExportRoutePolicyResponse?> ExportRoutePolicy { get; private set; } = null!;

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Output("exportRoutePolicyId")]
        public Output<string?> ExportRoutePolicyId { get; private set; } = null!;

        /// <summary>
        /// Extension. Example: NoExtension | NPB.
        /// </summary>
        [Output("extension")]
        public Output<string?> Extension { get; private set; } = null!;

        /// <summary>
        /// Import Route Policy either IPv4 or IPv6.
        /// </summary>
        [Output("importRoutePolicy")]
        public Output<Outputs.ImportRoutePolicyResponse?> ImportRoutePolicy { get; private set; } = null!;

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Output("importRoutePolicyId")]
        public Output<string?> ImportRoutePolicyId { get; private set; } = null!;

        /// <summary>
        /// Ingress Acl. ARM resource ID of Access Control Lists.
        /// </summary>
        [Output("ingressAclId")]
        public Output<string?> IngressAclId { get; private set; } = null!;

        /// <summary>
        /// To check whether monitoring of internal network is enabled or not.
        /// </summary>
        [Output("isMonitoringEnabled")]
        public Output<string?> IsMonitoringEnabled { get; private set; } = null!;

        /// <summary>
        /// Maximum transmission unit. Default value is 1500.
        /// </summary>
        [Output("mtu")]
        public Output<int?> Mtu { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Static Route Configuration properties.
        /// </summary>
        [Output("staticRouteConfiguration")]
        public Output<Outputs.InternalNetworkPropertiesResponseStaticRouteConfiguration?> StaticRouteConfiguration { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Vlan identifier. Example: 1001.
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a InternalNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InternalNetwork(string name, InternalNetworkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric/v20230615:InternalNetwork", name, args ?? new InternalNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InternalNetwork(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:managednetworkfabric/v20230615:InternalNetwork", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:managednetworkfabric:InternalNetwork" },
                    new global::Pulumi.Alias { Type = "azure-native:managednetworkfabric/v20230201preview:InternalNetwork" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InternalNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InternalNetwork Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new InternalNetwork(name, id, options);
        }
    }

    public sealed class InternalNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Input("annotation")]
        public Input<string>? Annotation { get; set; }

        /// <summary>
        /// BGP configuration properties.
        /// </summary>
        [Input("bgpConfiguration")]
        public Input<Inputs.InternalNetworkPropertiesBgpConfigurationArgs>? BgpConfiguration { get; set; }

        [Input("connectedIPv4Subnets")]
        private InputList<Inputs.ConnectedSubnetArgs>? _connectedIPv4Subnets;

        /// <summary>
        /// List of Connected IPv4 Subnets.
        /// </summary>
        public InputList<Inputs.ConnectedSubnetArgs> ConnectedIPv4Subnets
        {
            get => _connectedIPv4Subnets ?? (_connectedIPv4Subnets = new InputList<Inputs.ConnectedSubnetArgs>());
            set => _connectedIPv4Subnets = value;
        }

        [Input("connectedIPv6Subnets")]
        private InputList<Inputs.ConnectedSubnetArgs>? _connectedIPv6Subnets;

        /// <summary>
        /// List of connected IPv6 Subnets.
        /// </summary>
        public InputList<Inputs.ConnectedSubnetArgs> ConnectedIPv6Subnets
        {
            get => _connectedIPv6Subnets ?? (_connectedIPv6Subnets = new InputList<Inputs.ConnectedSubnetArgs>());
            set => _connectedIPv6Subnets = value;
        }

        /// <summary>
        /// Egress Acl. ARM resource ID of Access Control Lists.
        /// </summary>
        [Input("egressAclId")]
        public Input<string>? EgressAclId { get; set; }

        /// <summary>
        /// Export Route Policy either IPv4 or IPv6.
        /// </summary>
        [Input("exportRoutePolicy")]
        public Input<Inputs.ExportRoutePolicyArgs>? ExportRoutePolicy { get; set; }

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Input("exportRoutePolicyId")]
        public Input<string>? ExportRoutePolicyId { get; set; }

        /// <summary>
        /// Extension. Example: NoExtension | NPB.
        /// </summary>
        [Input("extension")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.Extension>? Extension { get; set; }

        /// <summary>
        /// Import Route Policy either IPv4 or IPv6.
        /// </summary>
        [Input("importRoutePolicy")]
        public Input<Inputs.ImportRoutePolicyArgs>? ImportRoutePolicy { get; set; }

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Input("importRoutePolicyId")]
        public Input<string>? ImportRoutePolicyId { get; set; }

        /// <summary>
        /// Ingress Acl. ARM resource ID of Access Control Lists.
        /// </summary>
        [Input("ingressAclId")]
        public Input<string>? IngressAclId { get; set; }

        /// <summary>
        /// Name of the Internal Network.
        /// </summary>
        [Input("internalNetworkName")]
        public Input<string>? InternalNetworkName { get; set; }

        /// <summary>
        /// To check whether monitoring of internal network is enabled or not.
        /// </summary>
        [Input("isMonitoringEnabled")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230615.IsMonitoringEnabled>? IsMonitoringEnabled { get; set; }

        /// <summary>
        /// Name of the L3 Isolation Domain.
        /// </summary>
        [Input("l3IsolationDomainName", required: true)]
        public Input<string> L3IsolationDomainName { get; set; } = null!;

        /// <summary>
        /// Maximum transmission unit. Default value is 1500.
        /// </summary>
        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Static Route Configuration properties.
        /// </summary>
        [Input("staticRouteConfiguration")]
        public Input<Inputs.InternalNetworkPropertiesStaticRouteConfigurationArgs>? StaticRouteConfiguration { get; set; }

        /// <summary>
        /// Vlan identifier. Example: 1001.
        /// </summary>
        [Input("vlanId", required: true)]
        public Input<int> VlanId { get; set; } = null!;

        public InternalNetworkArgs()
        {
            Extension = "NoExtension";
            IsMonitoringEnabled = "False";
            Mtu = 1500;
        }
        public static new InternalNetworkArgs Empty => new InternalNetworkArgs();
    }
}
