// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230201Preview
{
    public static class GetNetworkDevice
    {
        /// <summary>
        /// Get the Network Device resource details.
        /// </summary>
        public static Task<GetNetworkDeviceResult> InvokeAsync(GetNetworkDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkDeviceResult>("azure-native:managednetworkfabric/v20230201preview:getNetworkDevice", args ?? new GetNetworkDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// Get the Network Device resource details.
        /// </summary>
        public static Output<GetNetworkDeviceResult> Invoke(GetNetworkDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkDeviceResult>("azure-native:managednetworkfabric/v20230201preview:getNetworkDevice", args ?? new GetNetworkDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Network Device
        /// </summary>
        [Input("networkDeviceName", required: true)]
        public string NetworkDeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNetworkDeviceArgs()
        {
        }
        public static new GetNetworkDeviceArgs Empty => new GetNetworkDeviceArgs();
    }

    public sealed class GetNetworkDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Network Device
        /// </summary>
        [Input("networkDeviceName", required: true)]
        public Input<string> NetworkDeviceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNetworkDeviceInvokeArgs()
        {
        }
        public static new GetNetworkDeviceInvokeArgs Empty => new GetNetworkDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkDeviceResult
    {
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// The host Name of the device.
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// networkDeviceRole is the device role: Example: CE | ToR.
        /// </summary>
        public readonly string NetworkDeviceRole;
        /// <summary>
        /// Network Device SKU name.
        /// </summary>
        public readonly string NetworkDeviceSku;
        /// <summary>
        /// Reference to network rack resource id.
        /// </summary>
        public readonly string NetworkRackId;
        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// serialNumber of the format Make;Model;HardwareRevisionId;SerialNumber. Example: Arista;DCS-7280DR3-24;12.05;JPE21116969
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Current version of the device as defined in SKU.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetNetworkDeviceResult(
            string? annotation,

            string? hostName,

            string id,

            string location,

            string name,

            string networkDeviceRole,

            string networkDeviceSku,

            string networkRackId,

            string provisioningState,

            string serialNumber,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string version)
        {
            Annotation = annotation;
            HostName = hostName;
            Id = id;
            Location = location;
            Name = name;
            NetworkDeviceRole = networkDeviceRole;
            NetworkDeviceSku = networkDeviceSku;
            NetworkRackId = networkRackId;
            ProvisioningState = provisioningState;
            SerialNumber = serialNumber;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
