// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.V20230201Preview.Inputs
{

    public sealed class IpPrefixPropertiesIpPrefixRulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action to be taken on the configuration. Example: Permit | Deny.
        /// </summary>
        [Input("action", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230201Preview.CommunityActionTypes> Action { get; set; } = null!;

        /// <summary>
        /// Specify prefix-list bounds.
        /// </summary>
        [Input("condition")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.V20230201Preview.Condition>? Condition { get; set; }

        /// <summary>
        /// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126 
        /// </summary>
        [Input("networkPrefix", required: true)]
        public Input<string> NetworkPrefix { get; set; } = null!;

        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
        /// </summary>
        [Input("sequenceNumber", required: true)]
        public Input<double> SequenceNumber { get; set; } = null!;

        /// <summary>
        /// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
        /// </summary>
        [Input("subnetMaskLength")]
        public Input<int>? SubnetMaskLength { get; set; }

        public IpPrefixPropertiesIpPrefixRulesArgs()
        {
        }
        public static new IpPrefixPropertiesIpPrefixRulesArgs Empty => new IpPrefixPropertiesIpPrefixRulesArgs();
    }
}
