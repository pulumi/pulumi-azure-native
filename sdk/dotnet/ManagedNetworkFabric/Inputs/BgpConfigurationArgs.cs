// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric.Inputs
{

    /// <summary>
    /// BGP configuration properties
    /// </summary>
    public sealed class BgpConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
        /// </summary>
        [Input("allowAS")]
        public Input<int>? AllowAS { get; set; }

        /// <summary>
        /// Enable Or Disable state.
        /// </summary>
        [Input("allowASOverride")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.AllowASOverride>? AllowASOverride { get; set; }

        /// <summary>
        /// Switch configuration description.
        /// </summary>
        [Input("annotation")]
        public Input<string>? Annotation { get; set; }

        /// <summary>
        /// Originate a defaultRoute. Ex: "True" | "False".
        /// </summary>
        [Input("defaultRouteOriginate")]
        public InputUnion<string, Pulumi.AzureNative.ManagedNetworkFabric.BooleanEnumProperty>? DefaultRouteOriginate { get; set; }

        [Input("ipv4ListenRangePrefixes")]
        private InputList<string>? _ipv4ListenRangePrefixes;

        /// <summary>
        /// BGP Ipv4 ListenRange.
        /// </summary>
        public InputList<string> Ipv4ListenRangePrefixes
        {
            get => _ipv4ListenRangePrefixes ?? (_ipv4ListenRangePrefixes = new InputList<string>());
            set => _ipv4ListenRangePrefixes = value;
        }

        [Input("ipv4NeighborAddress")]
        private InputList<Inputs.NeighborAddressArgs>? _ipv4NeighborAddress;

        /// <summary>
        /// List with stringified ipv4NeighborAddresses.
        /// </summary>
        public InputList<Inputs.NeighborAddressArgs> Ipv4NeighborAddress
        {
            get => _ipv4NeighborAddress ?? (_ipv4NeighborAddress = new InputList<Inputs.NeighborAddressArgs>());
            set => _ipv4NeighborAddress = value;
        }

        [Input("ipv6ListenRangePrefixes")]
        private InputList<string>? _ipv6ListenRangePrefixes;

        /// <summary>
        /// BGP Ipv6 ListenRange.
        /// </summary>
        public InputList<string> Ipv6ListenRangePrefixes
        {
            get => _ipv6ListenRangePrefixes ?? (_ipv6ListenRangePrefixes = new InputList<string>());
            set => _ipv6ListenRangePrefixes = value;
        }

        [Input("ipv6NeighborAddress")]
        private InputList<Inputs.NeighborAddressArgs>? _ipv6NeighborAddress;

        /// <summary>
        /// List with stringified IPv6 Neighbor Address.
        /// </summary>
        public InputList<Inputs.NeighborAddressArgs> Ipv6NeighborAddress
        {
            get => _ipv6NeighborAddress ?? (_ipv6NeighborAddress = new InputList<Inputs.NeighborAddressArgs>());
            set => _ipv6NeighborAddress = value;
        }

        /// <summary>
        /// Peer ASN. Example: 65047.
        /// </summary>
        [Input("peerASN", required: true)]
        public Input<int> PeerASN { get; set; } = null!;

        public BgpConfigurationArgs()
        {
            AllowAS = 2;
        }
        public static new BgpConfigurationArgs Empty => new BgpConfigurationArgs();
    }
}
