// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManagedNetworkFabric
{
    public static class GetL2IsolationDomain
    {
        /// <summary>
        /// Implements L2 Isolation Domain GET method.
        /// Azure REST API version: 2023-02-01-preview.
        /// </summary>
        public static Task<GetL2IsolationDomainResult> InvokeAsync(GetL2IsolationDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetL2IsolationDomainResult>("azure-native:managednetworkfabric:getL2IsolationDomain", args ?? new GetL2IsolationDomainArgs(), options.WithDefaults());

        /// <summary>
        /// Implements L2 Isolation Domain GET method.
        /// Azure REST API version: 2023-02-01-preview.
        /// </summary>
        public static Output<GetL2IsolationDomainResult> Invoke(GetL2IsolationDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetL2IsolationDomainResult>("azure-native:managednetworkfabric:getL2IsolationDomain", args ?? new GetL2IsolationDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetL2IsolationDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the L2 Isolation Domain
        /// </summary>
        [Input("l2IsolationDomainName", required: true)]
        public string L2IsolationDomainName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetL2IsolationDomainArgs()
        {
        }
        public static new GetL2IsolationDomainArgs Empty => new GetL2IsolationDomainArgs();
    }

    public sealed class GetL2IsolationDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the L2 Isolation Domain
        /// </summary>
        [Input("l2IsolationDomainName", required: true)]
        public Input<string> L2IsolationDomainName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetL2IsolationDomainInvokeArgs()
        {
        }
        public static new GetL2IsolationDomainInvokeArgs Empty => new GetL2IsolationDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetL2IsolationDomainResult
    {
        /// <summary>
        /// state. Example: Enabled | Disabled. It indicates administrative state of the isolationDomain, whether it is enabled or disabled. If enabled, the configuration is applied on the devices. If disabled, the configuration is removed from the devices
        /// </summary>
        public readonly string AdministrativeState;
        /// <summary>
        /// Switch configuration description.
        /// </summary>
        public readonly string? Annotation;
        /// <summary>
        /// List of resources the L2 Isolation Domain is disabled on. Can be either entire NetworkFabric or NetworkRack.
        /// </summary>
        public readonly ImmutableArray<string> DisabledOnResources;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// maximum transmission unit. Default value is 1500.
        /// </summary>
        public readonly int? Mtu;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network Fabric ARM resource id.
        /// </summary>
        public readonly string NetworkFabricId;
        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// vlanId. Example: 501.
        /// </summary>
        public readonly int VlanId;

        [OutputConstructor]
        private GetL2IsolationDomainResult(
            string administrativeState,

            string? annotation,

            ImmutableArray<string> disabledOnResources,

            string id,

            string location,

            int? mtu,

            string name,

            string networkFabricId,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            int vlanId)
        {
            AdministrativeState = administrativeState;
            Annotation = annotation;
            DisabledOnResources = disabledOnResources;
            Id = id;
            Location = location;
            Mtu = mtu;
            Name = name;
            NetworkFabricId = networkFabricId;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VlanId = vlanId;
        }
    }
}
