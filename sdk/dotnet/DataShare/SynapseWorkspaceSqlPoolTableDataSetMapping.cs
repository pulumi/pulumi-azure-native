// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare
{
    /// <summary>
    /// A Synapse Workspace Sql Pool Table data set mapping
    /// API Version: 2020-09-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping")]
    public partial class SynapseWorkspaceSqlPoolTableDataSetMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        [Output("dataSetId")]
        public Output<string> DataSetId { get; private set; } = null!;

        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        [Output("dataSetMappingStatus")]
        public Output<string> DataSetMappingStatus { get; private set; } = null!;

        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'SynapseWorkspaceSqlPoolTable'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of the azure resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource id of the Synapse Workspace SQL Pool Table
        /// </summary>
        [Output("synapseWorkspaceSqlPoolTableResourceId")]
        public Output<string> SynapseWorkspaceSqlPoolTableResourceId { get; private set; } = null!;

        /// <summary>
        /// System Data of the Azure resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Type of the azure resource
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SynapseWorkspaceSqlPoolTableDataSetMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SynapseWorkspaceSqlPoolTableDataSetMapping(string name, SynapseWorkspaceSqlPoolTableDataSetMappingArgs args, CustomResourceOptions? options = null)
            : base("azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private SynapseWorkspaceSqlPoolTableDataSetMapping(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping", name, null, MakeResourceOptions(options, id))
        {
        }

        private static SynapseWorkspaceSqlPoolTableDataSetMappingArgs MakeArgs(SynapseWorkspaceSqlPoolTableDataSetMappingArgs args)
        {
            args ??= new SynapseWorkspaceSqlPoolTableDataSetMappingArgs();
            args.Kind = "SynapseWorkspaceSqlPoolTable";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:datashare/v20181101preview:SynapseWorkspaceSqlPoolTableDataSetMapping"},
                    new global::Pulumi.Alias { Type = "azure-native:datashare/v20191101:SynapseWorkspaceSqlPoolTableDataSetMapping"},
                    new global::Pulumi.Alias { Type = "azure-native:datashare/v20200901:SynapseWorkspaceSqlPoolTableDataSetMapping"},
                    new global::Pulumi.Alias { Type = "azure-native:datashare/v20201001preview:SynapseWorkspaceSqlPoolTableDataSetMapping"},
                    new global::Pulumi.Alias { Type = "azure-native:datashare/v20210801:SynapseWorkspaceSqlPoolTableDataSetMapping"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SynapseWorkspaceSqlPoolTableDataSetMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SynapseWorkspaceSqlPoolTableDataSetMapping Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SynapseWorkspaceSqlPoolTableDataSetMapping(name, id, options);
        }
    }

    public sealed class SynapseWorkspaceSqlPoolTableDataSetMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The id of the source data set.
        /// </summary>
        [Input("dataSetId", required: true)]
        public Input<string> DataSetId { get; set; } = null!;

        /// <summary>
        /// The name of the data set mapping to be created.
        /// </summary>
        [Input("dataSetMappingName")]
        public Input<string>? DataSetMappingName { get; set; }

        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'SynapseWorkspaceSqlPoolTable'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the share subscription which will hold the data set sink.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        /// <summary>
        /// Resource id of the Synapse Workspace SQL Pool Table
        /// </summary>
        [Input("synapseWorkspaceSqlPoolTableResourceId", required: true)]
        public Input<string> SynapseWorkspaceSqlPoolTableResourceId { get; set; } = null!;

        public SynapseWorkspaceSqlPoolTableDataSetMappingArgs()
        {
        }
        public static new SynapseWorkspaceSqlPoolTableDataSetMappingArgs Empty => new SynapseWorkspaceSqlPoolTableDataSetMappingArgs();
    }
}
