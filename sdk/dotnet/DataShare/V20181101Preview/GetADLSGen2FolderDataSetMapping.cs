// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare.V20181101Preview
{
    public static class GetADLSGen2FolderDataSetMapping
    {
        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Task<GetADLSGen2FolderDataSetMappingResult> InvokeAsync(GetADLSGen2FolderDataSetMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetADLSGen2FolderDataSetMappingResult>("azure-native:datashare/v20181101preview:getADLSGen2FolderDataSetMapping", args ?? new GetADLSGen2FolderDataSetMappingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Output<GetADLSGen2FolderDataSetMappingResult> Invoke(GetADLSGen2FolderDataSetMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetADLSGen2FolderDataSetMappingResult>("azure-native:datashare/v20181101preview:getADLSGen2FolderDataSetMapping", args ?? new GetADLSGen2FolderDataSetMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetADLSGen2FolderDataSetMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public string DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public string ShareSubscriptionName { get; set; } = null!;

        public GetADLSGen2FolderDataSetMappingArgs()
        {
        }
        public static new GetADLSGen2FolderDataSetMappingArgs Empty => new GetADLSGen2FolderDataSetMappingArgs();
    }

    public sealed class GetADLSGen2FolderDataSetMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public Input<string> DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        public GetADLSGen2FolderDataSetMappingInvokeArgs()
        {
        }
        public static new GetADLSGen2FolderDataSetMappingInvokeArgs Empty => new GetADLSGen2FolderDataSetMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetADLSGen2FolderDataSetMappingResult
    {
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        public readonly string DataSetMappingStatus;
        /// <summary>
        /// File system to which the folder belongs.
        /// </summary>
        public readonly string FileSystem;
        /// <summary>
        /// Folder path within the file system.
        /// </summary>
        public readonly string FolderPath;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'AdlsGen2Folder'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource group of storage account.
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// Storage account name of the source data set.
        /// </summary>
        public readonly string StorageAccountName;
        /// <summary>
        /// Subscription id of storage account.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetADLSGen2FolderDataSetMappingResult(
            string dataSetId,

            string dataSetMappingStatus,

            string fileSystem,

            string folderPath,

            string id,

            string kind,

            string name,

            string provisioningState,

            string resourceGroup,

            string storageAccountName,

            string subscriptionId,

            string type)
        {
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            FileSystem = fileSystem;
            FolderPath = folderPath;
            Id = id;
            Kind = kind;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceGroup = resourceGroup;
            StorageAccountName = storageAccountName;
            SubscriptionId = subscriptionId;
            Type = type;
        }
    }
}
