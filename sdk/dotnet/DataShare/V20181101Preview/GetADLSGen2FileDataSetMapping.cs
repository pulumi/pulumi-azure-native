// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare.V20181101Preview
{
    public static class GetADLSGen2FileDataSetMapping
    {
        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Task<GetADLSGen2FileDataSetMappingResult> InvokeAsync(GetADLSGen2FileDataSetMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetADLSGen2FileDataSetMappingResult>("azure-native:datashare/v20181101preview:getADLSGen2FileDataSetMapping", args ?? new GetADLSGen2FileDataSetMappingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Output<GetADLSGen2FileDataSetMappingResult> Invoke(GetADLSGen2FileDataSetMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetADLSGen2FileDataSetMappingResult>("azure-native:datashare/v20181101preview:getADLSGen2FileDataSetMapping", args ?? new GetADLSGen2FileDataSetMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetADLSGen2FileDataSetMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public string DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public string ShareSubscriptionName { get; set; } = null!;

        public GetADLSGen2FileDataSetMappingArgs()
        {
        }
        public static new GetADLSGen2FileDataSetMappingArgs Empty => new GetADLSGen2FileDataSetMappingArgs();
    }

    public sealed class GetADLSGen2FileDataSetMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public Input<string> DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        public GetADLSGen2FileDataSetMappingInvokeArgs()
        {
        }
        public static new GetADLSGen2FileDataSetMappingInvokeArgs Empty => new GetADLSGen2FileDataSetMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetADLSGen2FileDataSetMappingResult
    {
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        public readonly string DataSetMappingStatus;
        /// <summary>
        /// File path within the file system.
        /// </summary>
        public readonly string FilePath;
        /// <summary>
        /// File system to which the file belongs.
        /// </summary>
        public readonly string FileSystem;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'AdlsGen2File'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of output file
        /// </summary>
        public readonly string? OutputType;
        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource group of storage account.
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// Storage account name of the source data set.
        /// </summary>
        public readonly string StorageAccountName;
        /// <summary>
        /// Subscription id of storage account.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetADLSGen2FileDataSetMappingResult(
            string dataSetId,

            string dataSetMappingStatus,

            string filePath,

            string fileSystem,

            string id,

            string kind,

            string name,

            string? outputType,

            string provisioningState,

            string resourceGroup,

            string storageAccountName,

            string subscriptionId,

            string type)
        {
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            FilePath = filePath;
            FileSystem = fileSystem;
            Id = id;
            Kind = kind;
            Name = name;
            OutputType = outputType;
            ProvisioningState = provisioningState;
            ResourceGroup = resourceGroup;
            StorageAccountName = storageAccountName;
            SubscriptionId = subscriptionId;
            Type = type;
        }
    }
}
