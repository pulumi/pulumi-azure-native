// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare
{
    public static class GetScheduledTrigger
    {
        /// <summary>
        /// A type of trigger based on schedule
        /// API Version: 2020-09-01.
        /// </summary>
        public static Task<GetScheduledTriggerResult> InvokeAsync(GetScheduledTriggerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScheduledTriggerResult>("azure-native:datashare:getScheduledTrigger", args ?? new GetScheduledTriggerArgs(), options.WithDefaults());

        /// <summary>
        /// A type of trigger based on schedule
        /// API Version: 2020-09-01.
        /// </summary>
        public static Output<GetScheduledTriggerResult> Invoke(GetScheduledTriggerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScheduledTriggerResult>("azure-native:datashare:getScheduledTrigger", args ?? new GetScheduledTriggerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduledTriggerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public string ShareSubscriptionName { get; set; } = null!;

        /// <summary>
        /// The name of the trigger.
        /// </summary>
        [Input("triggerName", required: true)]
        public string TriggerName { get; set; } = null!;

        public GetScheduledTriggerArgs()
        {
        }
        public static new GetScheduledTriggerArgs Empty => new GetScheduledTriggerArgs();
    }

    public sealed class GetScheduledTriggerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        /// <summary>
        /// The name of the trigger.
        /// </summary>
        [Input("triggerName", required: true)]
        public Input<string> TriggerName { get; set; } = null!;

        public GetScheduledTriggerInvokeArgs()
        {
        }
        public static new GetScheduledTriggerInvokeArgs Empty => new GetScheduledTriggerInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduledTriggerResult
    {
        /// <summary>
        /// Time at which the trigger was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of synchronization on trigger.
        /// Expected value is 'ScheduleBased'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Recurrence Interval
        /// </summary>
        public readonly string RecurrenceInterval;
        /// <summary>
        /// Synchronization mode
        /// </summary>
        public readonly string? SynchronizationMode;
        /// <summary>
        /// Synchronization time
        /// </summary>
        public readonly string SynchronizationTime;
        /// <summary>
        /// System Data of the Azure resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Gets the trigger state
        /// </summary>
        public readonly string TriggerStatus;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Name of the user who created the trigger.
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetScheduledTriggerResult(
            string createdAt,

            string id,

            string kind,

            string name,

            string provisioningState,

            string recurrenceInterval,

            string? synchronizationMode,

            string synchronizationTime,

            Outputs.SystemDataResponse systemData,

            string triggerStatus,

            string type,

            string userName)
        {
            CreatedAt = createdAt;
            Id = id;
            Kind = kind;
            Name = name;
            ProvisioningState = provisioningState;
            RecurrenceInterval = recurrenceInterval;
            SynchronizationMode = synchronizationMode;
            SynchronizationTime = synchronizationTime;
            SystemData = systemData;
            TriggerStatus = triggerStatus;
            Type = type;
            UserName = userName;
        }
    }
}
