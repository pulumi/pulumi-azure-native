// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare
{
    public static class GetSqlDBTableDataSetMapping
    {
        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// Azure REST API version: 2021-08-01.
        /// </summary>
        public static Task<GetSqlDBTableDataSetMappingResult> InvokeAsync(GetSqlDBTableDataSetMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlDBTableDataSetMappingResult>("azure-native:datashare:getSqlDBTableDataSetMapping", args ?? new GetSqlDBTableDataSetMappingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// Azure REST API version: 2021-08-01.
        /// </summary>
        public static Output<GetSqlDBTableDataSetMappingResult> Invoke(GetSqlDBTableDataSetMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlDBTableDataSetMappingResult>("azure-native:datashare:getSqlDBTableDataSetMapping", args ?? new GetSqlDBTableDataSetMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlDBTableDataSetMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public string DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public string ShareSubscriptionName { get; set; } = null!;

        public GetSqlDBTableDataSetMappingArgs()
        {
        }
        public static new GetSqlDBTableDataSetMappingArgs Empty => new GetSqlDBTableDataSetMappingArgs();
    }

    public sealed class GetSqlDBTableDataSetMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public Input<string> DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        public GetSqlDBTableDataSetMappingInvokeArgs()
        {
        }
        public static new GetSqlDBTableDataSetMappingInvokeArgs Empty => new GetSqlDBTableDataSetMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlDBTableDataSetMappingResult
    {
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        public readonly string DataSetMappingStatus;
        /// <summary>
        /// DatabaseName name of the sink data set
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'SqlDBTable'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Schema of the table. Default value is dbo.
        /// </summary>
        public readonly string SchemaName;
        /// <summary>
        /// Resource id of SQL server
        /// </summary>
        public readonly string SqlServerResourceId;
        /// <summary>
        /// System Data of the Azure resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// SQL DB table name.
        /// </summary>
        public readonly string TableName;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlDBTableDataSetMappingResult(
            string dataSetId,

            string dataSetMappingStatus,

            string databaseName,

            string id,

            string kind,

            string name,

            string provisioningState,

            string schemaName,

            string sqlServerResourceId,

            Outputs.SystemDataResponse systemData,

            string tableName,

            string type)
        {
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            DatabaseName = databaseName;
            Id = id;
            Kind = kind;
            Name = name;
            ProvisioningState = provisioningState;
            SchemaName = schemaName;
            SqlServerResourceId = sqlServerResourceId;
            SystemData = systemData;
            TableName = tableName;
            Type = type;
        }
    }
}
