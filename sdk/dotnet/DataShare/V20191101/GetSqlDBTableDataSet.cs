// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare.V20191101
{
    public static class GetSqlDBTableDataSet
    {
        /// <summary>
        /// A SQL DB table data set.
        /// </summary>
        public static Task<GetSqlDBTableDataSetResult> InvokeAsync(GetSqlDBTableDataSetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSqlDBTableDataSetResult>("azure-native:datashare/v20191101:getSqlDBTableDataSet", args ?? new GetSqlDBTableDataSetArgs(), options.WithDefaults());

        /// <summary>
        /// A SQL DB table data set.
        /// </summary>
        public static Output<GetSqlDBTableDataSetResult> Invoke(GetSqlDBTableDataSetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSqlDBTableDataSetResult>("azure-native:datashare/v20191101:getSqlDBTableDataSet", args ?? new GetSqlDBTableDataSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlDBTableDataSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSet.
        /// </summary>
        [Input("dataSetName", required: true)]
        public string DataSetName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the share.
        /// </summary>
        [Input("shareName", required: true)]
        public string ShareName { get; set; } = null!;

        public GetSqlDBTableDataSetArgs()
        {
        }
        public static new GetSqlDBTableDataSetArgs Empty => new GetSqlDBTableDataSetArgs();
    }

    public sealed class GetSqlDBTableDataSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSet.
        /// </summary>
        [Input("dataSetName", required: true)]
        public Input<string> DataSetName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the share.
        /// </summary>
        [Input("shareName", required: true)]
        public Input<string> ShareName { get; set; } = null!;

        public GetSqlDBTableDataSetInvokeArgs()
        {
        }
        public static new GetSqlDBTableDataSetInvokeArgs Empty => new GetSqlDBTableDataSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlDBTableDataSetResult
    {
        /// <summary>
        /// Unique id for identifying a data set resource
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Database name of the source data set
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of data set.
        /// Expected value is 'SqlDBTable'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Schema of the table. Default value is dbo.
        /// </summary>
        public readonly string SchemaName;
        /// <summary>
        /// Resource id of SQL server
        /// </summary>
        public readonly string SqlServerResourceId;
        /// <summary>
        /// SQL DB table name.
        /// </summary>
        public readonly string TableName;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlDBTableDataSetResult(
            string dataSetId,

            string databaseName,

            string id,

            string kind,

            string name,

            string schemaName,

            string sqlServerResourceId,

            string tableName,

            string type)
        {
            DataSetId = dataSetId;
            DatabaseName = databaseName;
            Id = id;
            Kind = kind;
            Name = name;
            SchemaName = schemaName;
            SqlServerResourceId = sqlServerResourceId;
            TableName = tableName;
            Type = type;
        }
    }
}
