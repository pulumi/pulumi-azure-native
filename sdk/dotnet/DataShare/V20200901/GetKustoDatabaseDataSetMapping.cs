// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare.V20200901
{
    public static class GetKustoDatabaseDataSetMapping
    {
        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Task<GetKustoDatabaseDataSetMappingResult> InvokeAsync(GetKustoDatabaseDataSetMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKustoDatabaseDataSetMappingResult>("azure-native:datashare/v20200901:getKustoDatabaseDataSetMapping", args ?? new GetKustoDatabaseDataSetMappingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DataSetMapping in a shareSubscription
        /// </summary>
        public static Output<GetKustoDatabaseDataSetMappingResult> Invoke(GetKustoDatabaseDataSetMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKustoDatabaseDataSetMappingResult>("azure-native:datashare/v20200901:getKustoDatabaseDataSetMapping", args ?? new GetKustoDatabaseDataSetMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKustoDatabaseDataSetMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public string DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public string ShareSubscriptionName { get; set; } = null!;

        public GetKustoDatabaseDataSetMappingArgs()
        {
        }
        public static new GetKustoDatabaseDataSetMappingArgs Empty => new GetKustoDatabaseDataSetMappingArgs();
    }

    public sealed class GetKustoDatabaseDataSetMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the share account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the dataSetMapping.
        /// </summary>
        [Input("dataSetMappingName", required: true)]
        public Input<string> DataSetMappingName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the shareSubscription.
        /// </summary>
        [Input("shareSubscriptionName", required: true)]
        public Input<string> ShareSubscriptionName { get; set; } = null!;

        public GetKustoDatabaseDataSetMappingInvokeArgs()
        {
        }
        public static new GetKustoDatabaseDataSetMappingInvokeArgs Empty => new GetKustoDatabaseDataSetMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetKustoDatabaseDataSetMappingResult
    {
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        public readonly string DataSetMappingStatus;
        /// <summary>
        /// The resource id of the azure resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of data set mapping.
        /// Expected value is 'KustoDatabase'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource id of the sink kusto cluster.
        /// </summary>
        public readonly string KustoClusterResourceId;
        /// <summary>
        /// Location of the sink kusto cluster.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of the azure resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// System Data of the Azure resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Type of the azure resource
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKustoDatabaseDataSetMappingResult(
            string dataSetId,

            string dataSetMappingStatus,

            string id,

            string kind,

            string kustoClusterResourceId,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            Id = id;
            Kind = kind;
            KustoClusterResourceId = kustoClusterResourceId;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
