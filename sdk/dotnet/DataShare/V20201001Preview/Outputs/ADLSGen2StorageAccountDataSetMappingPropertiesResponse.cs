// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataShare.V20201001Preview.Outputs
{

    /// <summary>
    /// Properties of the ADLSGen2 storage account data set.
    /// </summary>
    [OutputType]
    public sealed class ADLSGen2StorageAccountDataSetMappingPropertiesResponse
    {
        /// <summary>
        /// Gets or sets the container name.
        /// </summary>
        public readonly string ContainerName;
        /// <summary>
        /// The id of the source data set.
        /// </summary>
        public readonly string DataSetId;
        /// <summary>
        /// Gets the status of the data set mapping.
        /// </summary>
        public readonly string DataSetMappingStatus;
        /// <summary>
        /// Gets or sets the path to folder within the container.
        /// </summary>
        public readonly string Folder;
        /// <summary>
        /// Location of the sink storage account.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Gets or sets the mount path
        /// </summary>
        public readonly string? MountPath;
        /// <summary>
        /// Provisioning state of the data set mapping.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource id of the sink storage account
        /// </summary>
        public readonly string StorageAccountResourceId;

        [OutputConstructor]
        private ADLSGen2StorageAccountDataSetMappingPropertiesResponse(
            string containerName,

            string dataSetId,

            string dataSetMappingStatus,

            string folder,

            string location,

            string? mountPath,

            string provisioningState,

            string storageAccountResourceId)
        {
            ContainerName = containerName;
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            Folder = folder;
            Location = location;
            MountPath = mountPath;
            ProvisioningState = provisioningState;
            StorageAccountResourceId = storageAccountResourceId;
        }
    }
}
