// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperationsMQ.Inputs
{

    /// <summary>
    /// Automatic TLS server certificate management with cert-manager
    /// </summary>
    public sealed class AutomaticCertMethodArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Lifetime of automatically-managed certificate.
        /// </summary>
        [Input("duration")]
        public Input<string>? Duration { get; set; }

        /// <summary>
        /// cert-manager issuerRef.
        /// </summary>
        [Input("issuerRef", required: true)]
        public Input<Inputs.CertManagerIssuerRefArgs> IssuerRef { get; set; } = null!;

        /// <summary>
        /// Cert Manager private key.
        /// </summary>
        [Input("privateKey")]
        public Input<Inputs.CertManagerPrivateKeyArgs>? PrivateKey { get; set; }

        /// <summary>
        /// When to begin renewing automatically-managed certificate.
        /// </summary>
        [Input("renewBefore")]
        public Input<string>? RenewBefore { get; set; }

        /// <summary>
        /// Additional SANs to include in the certificate.
        /// </summary>
        [Input("san")]
        public Input<Inputs.SanForCertArgs>? San { get; set; }

        /// <summary>
        /// Secret for storing server certificate. Any existing data will be overwritten.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// Certificate K8S namespace. Omit to use default namespace.
        /// </summary>
        [Input("secretNamespace")]
        public Input<string>? SecretNamespace { get; set; }

        public AutomaticCertMethodArgs()
        {
            Duration = "720h";
            RenewBefore = "240h";
        }
        public static new AutomaticCertMethodArgs Empty => new AutomaticCertMethodArgs();
    }
}
