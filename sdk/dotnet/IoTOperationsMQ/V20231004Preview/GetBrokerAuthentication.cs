// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperationsMQ.V20231004Preview
{
    public static class GetBrokerAuthentication
    {
        /// <summary>
        /// Get a BrokerAuthenticationResource
        /// </summary>
        public static Task<GetBrokerAuthenticationResult> InvokeAsync(GetBrokerAuthenticationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBrokerAuthenticationResult>("azure-native:iotoperationsmq/v20231004preview:getBrokerAuthentication", args ?? new GetBrokerAuthenticationArgs(), options.WithDefaults());

        /// <summary>
        /// Get a BrokerAuthenticationResource
        /// </summary>
        public static Output<GetBrokerAuthenticationResult> Invoke(GetBrokerAuthenticationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBrokerAuthenticationResult>("azure-native:iotoperationsmq/v20231004preview:getBrokerAuthentication", args ?? new GetBrokerAuthenticationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBrokerAuthenticationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of MQ broker/authentication resource
        /// </summary>
        [Input("authenticationName", required: true)]
        public string AuthenticationName { get; set; } = null!;

        /// <summary>
        /// Name of MQ broker resource
        /// </summary>
        [Input("brokerName", required: true)]
        public string BrokerName { get; set; } = null!;

        /// <summary>
        /// Name of MQ resource
        /// </summary>
        [Input("mqName", required: true)]
        public string MqName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBrokerAuthenticationArgs()
        {
        }
        public static new GetBrokerAuthenticationArgs Empty => new GetBrokerAuthenticationArgs();
    }

    public sealed class GetBrokerAuthenticationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of MQ broker/authentication resource
        /// </summary>
        [Input("authenticationName", required: true)]
        public Input<string> AuthenticationName { get; set; } = null!;

        /// <summary>
        /// Name of MQ broker resource
        /// </summary>
        [Input("brokerName", required: true)]
        public Input<string> BrokerName { get; set; } = null!;

        /// <summary>
        /// Name of MQ resource
        /// </summary>
        [Input("mqName", required: true)]
        public Input<string> MqName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBrokerAuthenticationInvokeArgs()
        {
        }
        public static new GetBrokerAuthenticationInvokeArgs Empty => new GetBrokerAuthenticationInvokeArgs();
    }


    [OutputType]
    public sealed class GetBrokerAuthenticationResult
    {
        /// <summary>
        /// The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
        /// </summary>
        public readonly ImmutableArray<Outputs.BrokerAuthenticatorMethodsResponse> AuthenticationMethods;
        /// <summary>
        /// Extended Location
        /// </summary>
        public readonly Outputs.ExtendedLocationPropertyResponse ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The array of listener Resources it supports.
        /// </summary>
        public readonly ImmutableArray<string> ListenerRef;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetBrokerAuthenticationResult(
            ImmutableArray<Outputs.BrokerAuthenticatorMethodsResponse> authenticationMethods,

            Outputs.ExtendedLocationPropertyResponse extendedLocation,

            string id,

            ImmutableArray<string> listenerRef,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AuthenticationMethods = authenticationMethods;
            ExtendedLocation = extendedLocation;
            Id = id;
            ListenerRef = listenerRef;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
