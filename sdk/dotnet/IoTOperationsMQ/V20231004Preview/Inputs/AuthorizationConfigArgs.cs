// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperationsMQ.V20231004Preview.Inputs
{

    /// <summary>
    /// Broker AuthorizationConfig properties
    /// </summary>
    public sealed class AuthorizationConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable caching of the authorization rules.
        /// </summary>
        [Input("enableCache")]
        public Input<bool>? EnableCache { get; set; }

        [Input("rules")]
        private InputList<Inputs.AuthorizationBasicRuleArgs>? _rules;

        /// <summary>
        /// Authorization Rules to be used. If no rule is set, but Authorization Resource is used that would mean DenyAll.
        /// </summary>
        public InputList<Inputs.AuthorizationBasicRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.AuthorizationBasicRuleArgs>());
            set => _rules = value;
        }

        public AuthorizationConfigArgs()
        {
            EnableCache = true;
        }
        public static new AuthorizationConfigArgs Empty => new AuthorizationConfigArgs();
    }
}
