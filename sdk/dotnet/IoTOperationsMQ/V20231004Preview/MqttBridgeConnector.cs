// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IoTOperationsMQ.V20231004Preview
{
    /// <summary>
    /// MQ mqttBridgeConnector resource
    /// </summary>
    [AzureNativeResourceType("azure-native:iotoperationsmq/v20231004preview:MqttBridgeConnector")]
    public partial class MqttBridgeConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of instances to deploy for a bridge rollout.
        /// </summary>
        [Output("bridgeInstances")]
        public Output<int?> BridgeInstances { get; private set; } = null!;

        /// <summary>
        /// The client id prefix of the dynamically generated client ids.
        /// </summary>
        [Output("clientIdPrefix")]
        public Output<string?> ClientIdPrefix { get; private set; } = null!;

        /// <summary>
        /// Extended Location
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationPropertyResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The details of MqttBridge Docker Image.
        /// </summary>
        [Output("image")]
        public Output<Outputs.ContainerImageResponse> Image { get; private set; } = null!;

        /// <summary>
        /// The details for connecting with Local Broker.
        /// </summary>
        [Output("localBrokerConnection")]
        public Output<Outputs.LocalBrokerConnectionSpecResponse?> LocalBrokerConnection { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The log level of the Bridge Connector instances.
        /// </summary>
        [Output("logLevel")]
        public Output<string?> LogLevel { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Node Tolerations for the Bridge Connector pods.
        /// </summary>
        [Output("nodeTolerations")]
        public Output<Outputs.NodeTolerationsResponse?> NodeTolerations { get; private set; } = null!;

        /// <summary>
        /// The protocol to use for connecting with Brokers.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The details for connecting with Remote Broker.
        /// </summary>
        [Output("remoteBrokerConnection")]
        public Output<Outputs.MqttBridgeRemoteBrokerConnectionSpecResponse> RemoteBrokerConnection { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MqttBridgeConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MqttBridgeConnector(string name, MqttBridgeConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:iotoperationsmq/v20231004preview:MqttBridgeConnector", name, args ?? new MqttBridgeConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MqttBridgeConnector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:iotoperationsmq/v20231004preview:MqttBridgeConnector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:iotoperationsmq:MqttBridgeConnector" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MqttBridgeConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MqttBridgeConnector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MqttBridgeConnector(name, id, options);
        }
    }

    public sealed class MqttBridgeConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of instances to deploy for a bridge rollout.
        /// </summary>
        [Input("bridgeInstances")]
        public Input<int>? BridgeInstances { get; set; }

        /// <summary>
        /// The client id prefix of the dynamically generated client ids.
        /// </summary>
        [Input("clientIdPrefix")]
        public Input<string>? ClientIdPrefix { get; set; }

        /// <summary>
        /// Extended Location
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationPropertyArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// The details of MqttBridge Docker Image.
        /// </summary>
        [Input("image", required: true)]
        public Input<Inputs.ContainerImageArgs> Image { get; set; } = null!;

        /// <summary>
        /// The details for connecting with Local Broker.
        /// </summary>
        [Input("localBrokerConnection")]
        public Input<Inputs.LocalBrokerConnectionSpecArgs>? LocalBrokerConnection { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The log level of the Bridge Connector instances.
        /// </summary>
        [Input("logLevel")]
        public Input<string>? LogLevel { get; set; }

        /// <summary>
        /// Name of MQ resource
        /// </summary>
        [Input("mqName", required: true)]
        public Input<string> MqName { get; set; } = null!;

        /// <summary>
        /// Name of MQ mqttBridgeConnector resource
        /// </summary>
        [Input("mqttBridgeConnectorName")]
        public Input<string>? MqttBridgeConnectorName { get; set; }

        /// <summary>
        /// The Node Tolerations for the Bridge Connector pods.
        /// </summary>
        [Input("nodeTolerations")]
        public Input<Inputs.NodeTolerationsArgs>? NodeTolerations { get; set; }

        /// <summary>
        /// The protocol to use for connecting with Brokers.
        /// </summary>
        [Input("protocol", required: true)]
        public InputUnion<string, Pulumi.AzureNative.IoTOperationsMQ.V20231004Preview.MqttProtocol> Protocol { get; set; } = null!;

        /// <summary>
        /// The details for connecting with Remote Broker.
        /// </summary>
        [Input("remoteBrokerConnection", required: true)]
        public Input<Inputs.MqttBridgeRemoteBrokerConnectionSpecArgs> RemoteBrokerConnection { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public MqttBridgeConnectorArgs()
        {
        }
        public static new MqttBridgeConnectorArgs Empty => new MqttBridgeConnectorArgs();
    }
}
