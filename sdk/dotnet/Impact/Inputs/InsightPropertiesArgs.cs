// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Impact.Inputs
{

    /// <summary>
    /// Impact category properties.
    /// </summary>
    public sealed class InsightPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// additional details of the insight.
        /// </summary>
        [Input("additionalDetails")]
        public Input<object>? AdditionalDetails { get; set; }

        /// <summary>
        /// category of the insight.
        /// </summary>
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        /// <summary>
        /// Contains title &amp; description for the insight
        /// </summary>
        [Input("content", required: true)]
        public Input<Inputs.ContentArgs> Content { get; set; } = null!;

        /// <summary>
        /// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
        /// </summary>
        [Input("eventId")]
        public Input<string>? EventId { get; set; }

        /// <summary>
        /// Time of the event, which has been correlated the impact.
        /// </summary>
        [Input("eventTime")]
        public Input<string>? EventTime { get; set; }

        /// <summary>
        /// Identifier that can be used to group similar insights.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// details of of the impact for which insight has been generated.
        /// </summary>
        [Input("impact", required: true)]
        public Input<Inputs.ImpactDetailsArgs> Impact { get; set; } = null!;

        /// <summary>
        /// unique id of the insight.
        /// </summary>
        [Input("insightUniqueId", required: true)]
        public Input<string> InsightUniqueId { get; set; } = null!;

        /// <summary>
        /// status of the insight. example resolved, repaired, other.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public InsightPropertiesArgs()
        {
        }
        public static new InsightPropertiesArgs Empty => new InsightPropertiesArgs();
    }
}
