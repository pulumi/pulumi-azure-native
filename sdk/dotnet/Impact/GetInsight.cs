// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Impact
{
    public static class GetInsight
    {
        /// <summary>
        /// Get Insight resources by workloadImpactName and insightName
        /// Azure REST API version: 2024-05-01-preview.
        /// </summary>
        public static Task<GetInsightResult> InvokeAsync(GetInsightArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInsightResult>("azure-native:impact:getInsight", args ?? new GetInsightArgs(), options.WithDefaults());

        /// <summary>
        /// Get Insight resources by workloadImpactName and insightName
        /// Azure REST API version: 2024-05-01-preview.
        /// </summary>
        public static Output<GetInsightResult> Invoke(GetInsightInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInsightResult>("azure-native:impact:getInsight", args ?? new GetInsightInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInsightArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the insight
        /// </summary>
        [Input("insightName", required: true)]
        public string InsightName { get; set; } = null!;

        /// <summary>
        /// workloadImpact resource 
        /// </summary>
        [Input("workloadImpactName", required: true)]
        public string WorkloadImpactName { get; set; } = null!;

        public GetInsightArgs()
        {
        }
        public static new GetInsightArgs Empty => new GetInsightArgs();
    }

    public sealed class GetInsightInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the insight
        /// </summary>
        [Input("insightName", required: true)]
        public Input<string> InsightName { get; set; } = null!;

        /// <summary>
        /// workloadImpact resource 
        /// </summary>
        [Input("workloadImpactName", required: true)]
        public Input<string> WorkloadImpactName { get; set; } = null!;

        public GetInsightInvokeArgs()
        {
        }
        public static new GetInsightInvokeArgs Empty => new GetInsightInvokeArgs();
    }


    [OutputType]
    public sealed class GetInsightResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.InsightPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInsightResult(
            string id,

            string name,

            Outputs.InsightPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
