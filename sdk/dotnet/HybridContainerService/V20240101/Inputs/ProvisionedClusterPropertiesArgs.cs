// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20240101.Inputs
{

    /// <summary>
    /// Properties of the provisioned cluster.
    /// </summary>
    public sealed class ProvisionedClusterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentPoolProfiles")]
        private InputList<Inputs.NamedAgentPoolProfileArgs>? _agentPoolProfiles;

        /// <summary>
        /// The agent pool properties for the provisioned cluster.
        /// </summary>
        public InputList<Inputs.NamedAgentPoolProfileArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.NamedAgentPoolProfileArgs>());
            set => _agentPoolProfiles = value;
        }

        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
        /// </summary>
        [Input("autoScalerProfile")]
        public Input<Inputs.ProvisionedClusterPropertiesAutoScalerProfileArgs>? AutoScalerProfile { get; set; }

        /// <summary>
        /// The profile for the underlying cloud infrastructure provider for the provisioned cluster.
        /// </summary>
        [Input("cloudProviderProfile")]
        public Input<Inputs.CloudProviderProfileArgs>? CloudProviderProfile { get; set; }

        /// <summary>
        /// The SSH restricted access profile for the VMs in the provisioned cluster.
        /// </summary>
        [Input("clusterVMAccessProfile")]
        public Input<Inputs.ClusterVMAccessProfileArgs>? ClusterVMAccessProfile { get; set; }

        /// <summary>
        /// The profile for control plane of the provisioned cluster.
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.ControlPlaneProfileArgs>? ControlPlane { get; set; }

        /// <summary>
        /// The version of Kubernetes in use by the provisioned cluster.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The license profile of the provisioned cluster.
        /// </summary>
        [Input("licenseProfile")]
        public Input<Inputs.ProvisionedClusterLicenseProfileArgs>? LicenseProfile { get; set; }

        /// <summary>
        /// The profile for Linux VMs in the provisioned cluster.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.LinuxProfilePropertiesArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// The network configuration profile for the provisioned cluster.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.NetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The storage configuration profile for the provisioned cluster.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.StorageProfileArgs>? StorageProfile { get; set; }

        public ProvisionedClusterPropertiesArgs()
        {
        }
        public static new ProvisionedClusterPropertiesArgs Empty => new ProvisionedClusterPropertiesArgs();
    }
}
