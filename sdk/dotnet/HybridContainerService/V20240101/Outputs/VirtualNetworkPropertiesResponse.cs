// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20240101.Outputs
{

    /// <summary>
    /// Properties of the virtual network resource
    /// </summary>
    [OutputType]
    public sealed class VirtualNetworkPropertiesResponse
    {
        /// <summary>
        /// List of DNS server IP Addresses associated with the network
        /// </summary>
        public readonly ImmutableArray<string> DnsServers;
        /// <summary>
        /// IP Address of the Gateway associated with the network
        /// </summary>
        public readonly string? Gateway;
        public readonly Outputs.VirtualNetworkPropertiesResponseInfraVnetProfile? InfraVnetProfile;
        /// <summary>
        /// IP Address Prefix of the network
        /// </summary>
        public readonly string? IpAddressPrefix;
        public readonly string ProvisioningState;
        /// <summary>
        /// Status of the virtual network resource
        /// </summary>
        public readonly Outputs.VirtualNetworkPropertiesResponseStatus Status;
        /// <summary>
        /// Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualNetworkPropertiesResponseVipPool> VipPool;
        /// <summary>
        /// VLAN Id used by the network
        /// </summary>
        public readonly int? VlanID;
        /// <summary>
        /// Range of IP Addresses for Kubernetes node VMs
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualNetworkPropertiesResponseVmipPool> VmipPool;

        [OutputConstructor]
        private VirtualNetworkPropertiesResponse(
            ImmutableArray<string> dnsServers,

            string? gateway,

            Outputs.VirtualNetworkPropertiesResponseInfraVnetProfile? infraVnetProfile,

            string? ipAddressPrefix,

            string provisioningState,

            Outputs.VirtualNetworkPropertiesResponseStatus status,

            ImmutableArray<Outputs.VirtualNetworkPropertiesResponseVipPool> vipPool,

            int? vlanID,

            ImmutableArray<Outputs.VirtualNetworkPropertiesResponseVmipPool> vmipPool)
        {
            DnsServers = dnsServers;
            Gateway = gateway;
            InfraVnetProfile = infraVnetProfile;
            IpAddressPrefix = ipAddressPrefix;
            ProvisioningState = provisioningState;
            Status = status;
            VipPool = vipPool;
            VlanID = vlanID;
            VmipPool = vmipPool;
        }
    }
}
