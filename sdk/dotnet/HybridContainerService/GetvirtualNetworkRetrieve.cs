// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService
{
    public static class GetvirtualNetworkRetrieve
    {
        /// <summary>
        /// Gets the Hybrid AKS virtual network
        /// API Version: 2022-05-01-preview.
        /// </summary>
        public static Task<GetvirtualNetworkRetrieveResult> InvokeAsync(GetvirtualNetworkRetrieveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetvirtualNetworkRetrieveResult>("azure-native:hybridcontainerservice:getvirtualNetworkRetrieve", args ?? new GetvirtualNetworkRetrieveArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Hybrid AKS virtual network
        /// API Version: 2022-05-01-preview.
        /// </summary>
        public static Output<GetvirtualNetworkRetrieveResult> Invoke(GetvirtualNetworkRetrieveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetvirtualNetworkRetrieveResult>("azure-native:hybridcontainerservice:getvirtualNetworkRetrieve", args ?? new GetvirtualNetworkRetrieveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetvirtualNetworkRetrieveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the virtual network
        /// </summary>
        [Input("virtualNetworksName", required: true)]
        public string VirtualNetworksName { get; set; } = null!;

        public GetvirtualNetworkRetrieveArgs()
        {
        }
        public static new GetvirtualNetworkRetrieveArgs Empty => new GetvirtualNetworkRetrieveArgs();
    }

    public sealed class GetvirtualNetworkRetrieveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the virtual network
        /// </summary>
        [Input("virtualNetworksName", required: true)]
        public Input<string> VirtualNetworksName { get; set; } = null!;

        public GetvirtualNetworkRetrieveInvokeArgs()
        {
        }
        public static new GetvirtualNetworkRetrieveInvokeArgs Empty => new GetvirtualNetworkRetrieveInvokeArgs();
    }


    [OutputType]
    public sealed class GetvirtualNetworkRetrieveResult
    {
        public readonly Outputs.VirtualNetworksResponseExtendedLocation? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
        /// </summary>
        public readonly Outputs.VirtualNetworksPropertiesResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetvirtualNetworkRetrieveResult(
            Outputs.VirtualNetworksResponseExtendedLocation? extendedLocation,

            string id,

            string location,

            string name,

            Outputs.VirtualNetworksPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
