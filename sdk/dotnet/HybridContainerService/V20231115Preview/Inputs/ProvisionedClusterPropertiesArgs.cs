// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20231115Preview.Inputs
{

    /// <summary>
    /// All properties of the provisioned cluster
    /// </summary>
    public sealed class ProvisionedClusterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentPoolProfiles")]
        private InputList<Inputs.NamedAgentPoolProfileArgs>? _agentPoolProfiles;

        /// <summary>
        /// The agent pools of the cluster.
        /// </summary>
        public InputList<Inputs.NamedAgentPoolProfileArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.NamedAgentPoolProfileArgs>());
            set => _agentPoolProfiles = value;
        }

        /// <summary>
        /// The underlying cloud infra provider properties.
        /// </summary>
        [Input("cloudProviderProfile")]
        public Input<Inputs.CloudProviderProfileArgs>? CloudProviderProfile { get; set; }

        /// <summary>
        /// ControlPlane - ControlPlane Configuration
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.ControlPlaneProfileArgs>? ControlPlane { get; set; }

        /// <summary>
        /// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The license profile of the provisioned cluster.
        /// </summary>
        [Input("licenseProfile")]
        public Input<Inputs.ProvisionedClusterLicenseProfileArgs>? LicenseProfile { get; set; }

        /// <summary>
        /// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.LinuxProfilePropertiesArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// NetworkProfile - Profile of network configuration.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.NetworkProfileArgs>? NetworkProfile { get; set; }

        public ProvisionedClusterPropertiesArgs()
        {
        }
        public static new ProvisionedClusterPropertiesArgs Empty => new ProvisionedClusterPropertiesArgs();
    }
}
