// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20231115Preview.Outputs
{

    /// <summary>
    /// All properties of the provisioned cluster
    /// </summary>
    [OutputType]
    public sealed class ProvisionedClusterPropertiesResponse
    {
        /// <summary>
        /// The agent pools of the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamedAgentPoolProfileResponse> AgentPoolProfiles;
        /// <summary>
        /// The underlying cloud infra provider properties.
        /// </summary>
        public readonly Outputs.CloudProviderProfileResponse? CloudProviderProfile;
        /// <summary>
        /// ControlPlane - ControlPlane Configuration
        /// </summary>
        public readonly Outputs.ControlPlaneProfileResponse? ControlPlane;
        /// <summary>
        /// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
        /// </summary>
        public readonly string? KubernetesVersion;
        /// <summary>
        /// The license profile of the provisioned cluster.
        /// </summary>
        public readonly Outputs.ProvisionedClusterLicenseProfileResponse? LicenseProfile;
        /// <summary>
        /// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
        /// </summary>
        public readonly Outputs.LinuxProfilePropertiesResponse? LinuxProfile;
        /// <summary>
        /// NetworkProfile - Profile of network configuration.
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
        /// </summary>
        public readonly Outputs.ProvisionedClusterPropertiesResponseStatus Status;

        [OutputConstructor]
        private ProvisionedClusterPropertiesResponse(
            ImmutableArray<Outputs.NamedAgentPoolProfileResponse> agentPoolProfiles,

            Outputs.CloudProviderProfileResponse? cloudProviderProfile,

            Outputs.ControlPlaneProfileResponse? controlPlane,

            string? kubernetesVersion,

            Outputs.ProvisionedClusterLicenseProfileResponse? licenseProfile,

            Outputs.LinuxProfilePropertiesResponse? linuxProfile,

            Outputs.NetworkProfileResponse? networkProfile,

            string provisioningState,

            Outputs.ProvisionedClusterPropertiesResponseStatus status)
        {
            AgentPoolProfiles = agentPoolProfiles;
            CloudProviderProfile = cloudProviderProfile;
            ControlPlane = controlPlane;
            KubernetesVersion = kubernetesVersion;
            LicenseProfile = licenseProfile;
            LinuxProfile = linuxProfile;
            NetworkProfile = networkProfile;
            ProvisioningState = provisioningState;
            Status = status;
        }
    }
}
