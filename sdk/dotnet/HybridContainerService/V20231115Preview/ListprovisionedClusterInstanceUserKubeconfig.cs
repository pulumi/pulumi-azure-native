// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20231115Preview
{
    public static class ListprovisionedClusterInstanceUserKubeconfig
    {
        /// <summary>
        /// Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
        /// </summary>
        public static Task<ListprovisionedClusterInstanceUserKubeconfigResult> InvokeAsync(ListprovisionedClusterInstanceUserKubeconfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListprovisionedClusterInstanceUserKubeconfigResult>("azure-native:hybridcontainerservice/v20231115preview:listprovisionedClusterInstanceUserKubeconfig", args ?? new ListprovisionedClusterInstanceUserKubeconfigArgs(), options.WithDefaults());

        /// <summary>
        /// Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
        /// </summary>
        public static Output<ListprovisionedClusterInstanceUserKubeconfigResult> Invoke(ListprovisionedClusterInstanceUserKubeconfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListprovisionedClusterInstanceUserKubeconfigResult>("azure-native:hybridcontainerservice/v20231115preview:listprovisionedClusterInstanceUserKubeconfig", args ?? new ListprovisionedClusterInstanceUserKubeconfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListprovisionedClusterInstanceUserKubeconfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the connected cluster resource.
        /// </summary>
        [Input("connectedClusterResourceUri", required: true)]
        public string ConnectedClusterResourceUri { get; set; } = null!;

        public ListprovisionedClusterInstanceUserKubeconfigArgs()
        {
        }
        public static new ListprovisionedClusterInstanceUserKubeconfigArgs Empty => new ListprovisionedClusterInstanceUserKubeconfigArgs();
    }

    public sealed class ListprovisionedClusterInstanceUserKubeconfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the connected cluster resource.
        /// </summary>
        [Input("connectedClusterResourceUri", required: true)]
        public Input<string> ConnectedClusterResourceUri { get; set; } = null!;

        public ListprovisionedClusterInstanceUserKubeconfigInvokeArgs()
        {
        }
        public static new ListprovisionedClusterInstanceUserKubeconfigInvokeArgs Empty => new ListprovisionedClusterInstanceUserKubeconfigInvokeArgs();
    }


    [OutputType]
    public sealed class ListprovisionedClusterInstanceUserKubeconfigResult
    {
        public readonly Outputs.ListCredentialResponseResponseError? Error;
        /// <summary>
        /// Operation Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Operation Name
        /// </summary>
        public readonly string Name;
        public readonly Outputs.ListCredentialResponseResponseProperties Properties;
        /// <summary>
        /// ARM Resource Id of the provisioned cluster instance
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private ListprovisionedClusterInstanceUserKubeconfigResult(
            Outputs.ListCredentialResponseResponseError? error,

            string id,

            string name,

            Outputs.ListCredentialResponseResponseProperties properties,

            string resourceId,

            string status)
        {
            Error = error;
            Id = id;
            Name = name;
            Properties = properties;
            ResourceId = resourceId;
            Status = status;
        }
    }
}
