// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20220901Preview
{
    public static class GetAgentPool
    {
        /// <summary>
        /// Gets the agent pool in the Hybrid AKS provisioned cluster
        /// </summary>
        public static Task<GetAgentPoolResult> InvokeAsync(GetAgentPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentPoolResult>("azure-native:hybridcontainerservice/v20220901preview:getAgentPool", args ?? new GetAgentPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the agent pool in the Hybrid AKS provisioned cluster
        /// </summary>
        public static Output<GetAgentPoolResult> Invoke(GetAgentPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentPoolResult>("azure-native:hybridcontainerservice/v20220901preview:getAgentPool", args ?? new GetAgentPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Parameter for the name of the agent pool in the provisioned cluster
        /// </summary>
        [Input("agentPoolName", required: true)]
        public string AgentPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the provisioned cluster
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetAgentPoolArgs()
        {
        }
        public static new GetAgentPoolArgs Empty => new GetAgentPoolArgs();
    }

    public sealed class GetAgentPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Parameter for the name of the agent pool in the provisioned cluster
        /// </summary>
        [Input("agentPoolName", required: true)]
        public Input<string> AgentPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the provisioned cluster
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetAgentPoolInvokeArgs()
        {
        }
        public static new GetAgentPoolInvokeArgs Empty => new GetAgentPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentPoolResult
    {
        /// <summary>
        /// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// The underlying cloud infra provider properties.
        /// </summary>
        public readonly Outputs.CloudProviderProfileResponse? CloudProviderProfile;
        /// <summary>
        /// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
        /// </summary>
        public readonly int? Count;
        public readonly Outputs.AgentPoolResponseExtendedLocation? ExtendedLocation;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The maximum number of nodes for auto-scaling
        /// </summary>
        public readonly int? MaxCount;
        /// <summary>
        /// The maximum number of pods that can run on a node.
        /// </summary>
        public readonly int? MaxPods;
        /// <summary>
        /// The minimum number of nodes for auto-scaling
        /// </summary>
        public readonly int? MinCount;
        /// <summary>
        /// Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The version of node image
        /// </summary>
        public readonly string? NodeImageVersion;
        /// <summary>
        /// NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? NodeLabels;
        /// <summary>
        /// NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        public readonly ImmutableArray<string> NodeTaints;
        /// <summary>
        /// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
        /// </summary>
        public readonly string? OsType;
        public readonly string ProvisioningState;
        /// <summary>
        /// HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool
        /// </summary>
        public readonly Outputs.AgentPoolProvisioningStatusResponseStatus? Status;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource Type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// VmSize - The size of the agent pool VMs.
        /// </summary>
        public readonly string? VmSize;

        [OutputConstructor]
        private GetAgentPoolResult(
            ImmutableArray<string> availabilityZones,

            Outputs.CloudProviderProfileResponse? cloudProviderProfile,

            int? count,

            Outputs.AgentPoolResponseExtendedLocation? extendedLocation,

            string id,

            string? location,

            int? maxCount,

            int? maxPods,

            int? minCount,

            string? mode,

            string name,

            string? nodeImageVersion,

            ImmutableDictionary<string, string>? nodeLabels,

            ImmutableArray<string> nodeTaints,

            string? osType,

            string provisioningState,

            Outputs.AgentPoolProvisioningStatusResponseStatus? status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? vmSize)
        {
            AvailabilityZones = availabilityZones;
            CloudProviderProfile = cloudProviderProfile;
            Count = count;
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            MaxCount = maxCount;
            MaxPods = maxPods;
            MinCount = minCount;
            Mode = mode;
            Name = name;
            NodeImageVersion = nodeImageVersion;
            NodeLabels = nodeLabels;
            NodeTaints = nodeTaints;
            OsType = osType;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VmSize = vmSize;
        }
    }
}
