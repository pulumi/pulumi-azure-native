// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20220901Preview.Outputs
{

    /// <summary>
    /// AAD Profile specifies attributes for Azure Active Directory integration.
    /// </summary>
    [OutputType]
    public sealed class AADProfileResponseResponse
    {
        /// <summary>
        /// The list of AAD group object IDs that will have admin role of the cluster.
        /// </summary>
        public readonly ImmutableArray<string> AdminGroupObjectIDs;
        /// <summary>
        /// The client AAD application ID.
        /// </summary>
        public readonly string? ClientAppID;
        /// <summary>
        /// Whether to enable Azure RBAC for Kubernetes authorization.
        /// </summary>
        public readonly bool? EnableAzureRbac;
        /// <summary>
        /// Whether to enable managed AAD.
        /// </summary>
        public readonly bool? Managed;
        /// <summary>
        /// The server AAD application ID.
        /// </summary>
        public readonly string? ServerAppID;
        /// <summary>
        /// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
        /// </summary>
        public readonly string? TenantID;

        [OutputConstructor]
        private AADProfileResponseResponse(
            ImmutableArray<string> adminGroupObjectIDs,

            string? clientAppID,

            bool? enableAzureRbac,

            bool? managed,

            string? serverAppID,

            string? tenantID)
        {
            AdminGroupObjectIDs = adminGroupObjectIDs;
            ClientAppID = clientAppID;
            EnableAzureRbac = enableAzureRbac;
            Managed = managed;
            ServerAppID = serverAppID;
            TenantID = tenantID;
        }
    }
}
