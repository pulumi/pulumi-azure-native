// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20220901Preview.Inputs
{

    /// <summary>
    /// All properties of the provisioned cluster
    /// </summary>
    public sealed class ProvisionedClustersAllPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AAD profile for the provisioned cluster.
        /// </summary>
        [Input("aadProfile")]
        public Input<Inputs.AADProfileArgs>? AadProfile { get; set; }

        [Input("addonProfiles")]
        private InputMap<Inputs.AddonProfilesArgs>? _addonProfiles;

        /// <summary>
        /// AddonProfiles - Profile of managed cluster add-on.
        /// </summary>
        public InputMap<Inputs.AddonProfilesArgs> AddonProfiles
        {
            get => _addonProfiles ?? (_addonProfiles = new InputMap<Inputs.AddonProfilesArgs>());
            set => _addonProfiles = value;
        }

        [Input("agentPoolProfiles")]
        private InputList<Inputs.NamedAgentPoolProfileArgs>? _agentPoolProfiles;

        /// <summary>
        /// The agent pools of the cluster.
        /// </summary>
        public InputList<Inputs.NamedAgentPoolProfileArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.NamedAgentPoolProfileArgs>());
            set => _agentPoolProfiles = value;
        }

        /// <summary>
        /// The underlying cloud infra provider properties.
        /// </summary>
        [Input("cloudProviderProfile")]
        public Input<Inputs.CloudProviderProfileArgs>? CloudProviderProfile { get; set; }

        /// <summary>
        /// ControlPlane - ControlPlane Configuration
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.ControlPlaneProfileArgs>? ControlPlane { get; set; }

        /// <summary>
        /// EnableRBAC - Whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        [Input("enableRbac")]
        public Input<bool>? EnableRbac { get; set; }

        /// <summary>
        /// Additional features specs like Arc Agent Onboarding.
        /// </summary>
        [Input("features")]
        public Input<Inputs.ProvisionedClustersCommonPropertiesFeaturesArgs>? Features { get; set; }

        /// <summary>
        /// HttpProxyConfig - Configurations for provisioning the cluster with HTTP proxy servers.
        /// </summary>
        [Input("httpProxyConfig")]
        public Input<Inputs.HttpProxyConfigArgs>? HttpProxyConfig { get; set; }

        /// <summary>
        /// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.LinuxProfilePropertiesArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// NetworkProfile - Profile of network configuration.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.NetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// NodeResourceGroup - Name of the resource group containing agent pool nodes.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// WindowsProfile - Profile for Windows VMs in the Provisioned Cluster.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.WindowsProfileArgs>? WindowsProfile { get; set; }

        public ProvisionedClustersAllPropertiesArgs()
        {
        }
        public static new ProvisionedClustersAllPropertiesArgs Empty => new ProvisionedClustersAllPropertiesArgs();
    }
}
