// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.V20220501Preview.Outputs
{

    /// <summary>
    /// NetworkProfile - Profile of network configuration.
    /// </summary>
    [OutputType]
    public sealed class NetworkProfileResponse
    {
        /// <summary>
        /// DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
        /// </summary>
        public readonly string? DnsServiceIP;
        /// <summary>
        /// LoadBalancerProfile - Profile of the cluster load balancer.
        /// </summary>
        public readonly Outputs.LoadBalancerProfileResponse? LoadBalancerProfile;
        /// <summary>
        /// LoadBalancerSku - The load balancer sku for the provisioned cluster. Possible values: 'unstacked-haproxy', 'stacked-kube-vip', 'stacked-metallb', 'unmanaged'. The default is 'unmanaged'.
        /// </summary>
        public readonly string? LoadBalancerSku;
        /// <summary>
        /// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
        /// </summary>
        public readonly string? NetworkPolicy;
        /// <summary>
        /// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
        /// </summary>
        public readonly string? PodCidr;
        /// <summary>
        /// The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        public readonly ImmutableArray<string> PodCidrs;
        /// <summary>
        /// ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        public readonly string? ServiceCidr;
        /// <summary>
        /// The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
        /// </summary>
        public readonly ImmutableArray<string> ServiceCidrs;

        [OutputConstructor]
        private NetworkProfileResponse(
            string? dnsServiceIP,

            Outputs.LoadBalancerProfileResponse? loadBalancerProfile,

            string? loadBalancerSku,

            string? networkPolicy,

            string? podCidr,

            ImmutableArray<string> podCidrs,

            string? serviceCidr,

            ImmutableArray<string> serviceCidrs)
        {
            DnsServiceIP = dnsServiceIP;
            LoadBalancerProfile = loadBalancerProfile;
            LoadBalancerSku = loadBalancerSku;
            NetworkPolicy = networkPolicy;
            PodCidr = podCidr;
            PodCidrs = podCidrs;
            ServiceCidr = serviceCidr;
            ServiceCidrs = serviceCidrs;
        }
    }
}
