// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService
{
    public static class GetClusterInstanceHybridIdentityMetadatum
    {
        /// <summary>
        /// Get the hybrid identity metadata proxy resource.
        /// 
        /// Uses Azure REST API version 2024-01-01.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2025-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetClusterInstanceHybridIdentityMetadatumResult> InvokeAsync(GetClusterInstanceHybridIdentityMetadatumArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterInstanceHybridIdentityMetadatumResult>("azure-native:hybridcontainerservice:getClusterInstanceHybridIdentityMetadatum", args ?? new GetClusterInstanceHybridIdentityMetadatumArgs(), options.WithDefaults());

        /// <summary>
        /// Get the hybrid identity metadata proxy resource.
        /// 
        /// Uses Azure REST API version 2024-01-01.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2025-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetClusterInstanceHybridIdentityMetadatumResult> Invoke(GetClusterInstanceHybridIdentityMetadatumInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterInstanceHybridIdentityMetadatumResult>("azure-native:hybridcontainerservice:getClusterInstanceHybridIdentityMetadatum", args ?? new GetClusterInstanceHybridIdentityMetadatumInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the hybrid identity metadata proxy resource.
        /// 
        /// Uses Azure REST API version 2024-01-01.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2025-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetClusterInstanceHybridIdentityMetadatumResult> Invoke(GetClusterInstanceHybridIdentityMetadatumInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterInstanceHybridIdentityMetadatumResult>("azure-native:hybridcontainerservice:getClusterInstanceHybridIdentityMetadatum", args ?? new GetClusterInstanceHybridIdentityMetadatumInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterInstanceHybridIdentityMetadatumArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource Manager identifier of the connected cluster resource.
        /// </summary>
        [Input("connectedClusterResourceUri", required: true)]
        public string ConnectedClusterResourceUri { get; set; } = null!;

        public GetClusterInstanceHybridIdentityMetadatumArgs()
        {
        }
        public static new GetClusterInstanceHybridIdentityMetadatumArgs Empty => new GetClusterInstanceHybridIdentityMetadatumArgs();
    }

    public sealed class GetClusterInstanceHybridIdentityMetadatumInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource Manager identifier of the connected cluster resource.
        /// </summary>
        [Input("connectedClusterResourceUri", required: true)]
        public Input<string> ConnectedClusterResourceUri { get; set; } = null!;

        public GetClusterInstanceHybridIdentityMetadatumInvokeArgs()
        {
        }
        public static new GetClusterInstanceHybridIdentityMetadatumInvokeArgs Empty => new GetClusterInstanceHybridIdentityMetadatumInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterInstanceHybridIdentityMetadatumResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Onboarding public key for provisioning the Managed identity for the connected cluster.
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// Unique id of the parent provisioned cluster resource.
        /// </summary>
        public readonly string? ResourceUid;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetClusterInstanceHybridIdentityMetadatumResult(
            string azureApiVersion,

            string id,

            string name,

            string provisioningState,

            string? publicKey,

            string? resourceUid,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            PublicKey = publicKey;
            ResourceUid = resourceUid;
            SystemData = systemData;
            Type = type;
        }
    }
}
