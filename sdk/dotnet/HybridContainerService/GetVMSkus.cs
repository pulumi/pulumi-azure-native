// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService
{
    public static class GetVMSkus
    {
        /// <summary>
        /// Lists the supported VM skus for the specified custom location
        /// 
        /// Uses Azure REST API version 2025-02-01-preview.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2024-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetVMSkusResult> InvokeAsync(GetVMSkusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVMSkusResult>("azure-native:hybridcontainerservice:getVMSkus", args ?? new GetVMSkusArgs(), options.WithDefaults());

        /// <summary>
        /// Lists the supported VM skus for the specified custom location
        /// 
        /// Uses Azure REST API version 2025-02-01-preview.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2024-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetVMSkusResult> Invoke(GetVMSkusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVMSkusResult>("azure-native:hybridcontainerservice:getVMSkus", args ?? new GetVMSkusInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Lists the supported VM skus for the specified custom location
        /// 
        /// Uses Azure REST API version 2025-02-01-preview.
        /// 
        /// Other available API versions: 2023-11-15-preview, 2024-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hybridcontainerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetVMSkusResult> Invoke(GetVMSkusInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVMSkusResult>("azure-native:hybridcontainerservice:getVMSkus", args ?? new GetVMSkusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVMSkusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource Manager identifier of the custom location resource.
        /// </summary>
        [Input("customLocationResourceUri", required: true)]
        public string CustomLocationResourceUri { get; set; } = null!;

        public GetVMSkusArgs()
        {
        }
        public static new GetVMSkusArgs Empty => new GetVMSkusArgs();
    }

    public sealed class GetVMSkusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The fully qualified Azure Resource Manager identifier of the custom location resource.
        /// </summary>
        [Input("customLocationResourceUri", required: true)]
        public Input<string> CustomLocationResourceUri { get; set; } = null!;

        public GetVMSkusInvokeArgs()
        {
        }
        public static new GetVMSkusInvokeArgs Empty => new GetVMSkusInvokeArgs();
    }


    [OutputType]
    public sealed class GetVMSkusResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Extended location pointing to the underlying infrastructure
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        public readonly Outputs.VmSkuProfileResponseProperties Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVMSkusResult(
            string azureApiVersion,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string name,

            Outputs.VmSkuProfileResponseProperties properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ExtendedLocation = extendedLocation;
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
