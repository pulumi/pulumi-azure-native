// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService.Outputs
{

    [OutputType]
    public sealed class ProvisionedClustersResponsePropertiesResponse
    {
        /// <summary>
        /// AAD profile for the provisioned cluster.
        /// </summary>
        public readonly Outputs.AADProfileResponseResponse? AadProfile;
        /// <summary>
        /// AddonProfiles - Profile of managed cluster add-on.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.AddonProfilesResponse>? AddonProfiles;
        /// <summary>
        /// The agent pools of the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamedAgentPoolProfileResponse> AgentPoolProfiles;
        /// <summary>
        /// The underlying cloud infra provider properties.
        /// </summary>
        public readonly Outputs.CloudProviderProfileResponse? CloudProviderProfile;
        /// <summary>
        /// ControlPlane - ControlPlane Configuration
        /// </summary>
        public readonly Outputs.ControlPlaneProfileResponse? ControlPlane;
        /// <summary>
        /// EnableRBAC - Whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        public readonly bool? EnableRbac;
        /// <summary>
        /// Additional features specs like Arc Agent Onboarding.
        /// </summary>
        public readonly Outputs.ProvisionedClustersCommonPropertiesResponseFeatures? Features;
        /// <summary>
        /// HttpProxyConfig - Configurations for provisioning the cluster with HTTP proxy servers.
        /// </summary>
        public readonly Outputs.HttpProxyConfigResponseResponse? HttpProxyConfig;
        /// <summary>
        /// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
        /// </summary>
        public readonly string? KubernetesVersion;
        /// <summary>
        /// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
        /// </summary>
        public readonly Outputs.LinuxProfilePropertiesResponse? LinuxProfile;
        /// <summary>
        /// NetworkProfile - Profile of network configuration.
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// NodeResourceGroup - Name of the resource group containing agent pool nodes.
        /// </summary>
        public readonly string? NodeResourceGroup;
        public readonly string ProvisioningState;
        /// <summary>
        /// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
        /// </summary>
        public readonly Outputs.ProvisionedClustersCommonPropertiesResponseStatus Status;
        /// <summary>
        /// WindowsProfile - Profile for Windows VMs in the Provisioned Cluster.
        /// </summary>
        public readonly Outputs.WindowsProfileResponseResponse? WindowsProfile;

        [OutputConstructor]
        private ProvisionedClustersResponsePropertiesResponse(
            Outputs.AADProfileResponseResponse? aadProfile,

            ImmutableDictionary<string, Outputs.AddonProfilesResponse>? addonProfiles,

            ImmutableArray<Outputs.NamedAgentPoolProfileResponse> agentPoolProfiles,

            Outputs.CloudProviderProfileResponse? cloudProviderProfile,

            Outputs.ControlPlaneProfileResponse? controlPlane,

            bool? enableRbac,

            Outputs.ProvisionedClustersCommonPropertiesResponseFeatures? features,

            Outputs.HttpProxyConfigResponseResponse? httpProxyConfig,

            string? kubernetesVersion,

            Outputs.LinuxProfilePropertiesResponse? linuxProfile,

            Outputs.NetworkProfileResponse? networkProfile,

            string? nodeResourceGroup,

            string provisioningState,

            Outputs.ProvisionedClustersCommonPropertiesResponseStatus status,

            Outputs.WindowsProfileResponseResponse? windowsProfile)
        {
            AadProfile = aadProfile;
            AddonProfiles = addonProfiles;
            AgentPoolProfiles = agentPoolProfiles;
            CloudProviderProfile = cloudProviderProfile;
            ControlPlane = controlPlane;
            EnableRbac = enableRbac;
            Features = features;
            HttpProxyConfig = httpProxyConfig;
            KubernetesVersion = kubernetesVersion;
            LinuxProfile = linuxProfile;
            NetworkProfile = networkProfile;
            NodeResourceGroup = nodeResourceGroup;
            ProvisioningState = provisioningState;
            Status = status;
            WindowsProfile = windowsProfile;
        }
    }
}
