// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HybridContainerService
{
    public static class GetProvisionedCluster
    {
        /// <summary>
        /// Gets the Hybrid AKS provisioned cluster
        /// Azure REST API version: 2022-09-01-preview.
        /// 
        /// Other available API versions: 2022-05-01-preview.
        /// </summary>
        public static Task<GetProvisionedClusterResult> InvokeAsync(GetProvisionedClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProvisionedClusterResult>("azure-native:hybridcontainerservice:getProvisionedCluster", args ?? new GetProvisionedClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Hybrid AKS provisioned cluster
        /// Azure REST API version: 2022-09-01-preview.
        /// 
        /// Other available API versions: 2022-05-01-preview.
        /// </summary>
        public static Output<GetProvisionedClusterResult> Invoke(GetProvisionedClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProvisionedClusterResult>("azure-native:hybridcontainerservice:getProvisionedCluster", args ?? new GetProvisionedClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProvisionedClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the provisioned cluster
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetProvisionedClusterArgs()
        {
        }
        public static new GetProvisionedClusterArgs Empty => new GetProvisionedClusterArgs();
    }

    public sealed class GetProvisionedClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Parameter for the name of the provisioned cluster
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetProvisionedClusterInvokeArgs()
        {
        }
        public static new GetProvisionedClusterInvokeArgs Empty => new GetProvisionedClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetProvisionedClusterResult
    {
        public readonly Outputs.ProvisionedClustersResponseResponseExtendedLocation? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity for the Provisioned cluster.
        /// </summary>
        public readonly Outputs.ProvisionedClusterIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        public readonly Outputs.ProvisionedClustersResponsePropertiesResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProvisionedClusterResult(
            Outputs.ProvisionedClustersResponseResponseExtendedLocation? extendedLocation,

            string id,

            Outputs.ProvisionedClusterIdentityResponse? identity,

            string location,

            string name,

            Outputs.ProvisionedClustersResponsePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ExtendedLocation = extendedLocation;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
