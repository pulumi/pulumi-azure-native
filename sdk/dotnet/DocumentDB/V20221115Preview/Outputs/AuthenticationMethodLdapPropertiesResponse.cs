// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20221115Preview.Outputs
{

    /// <summary>
    /// Ldap authentication method properties. This feature is in preview.
    /// </summary>
    [OutputType]
    public sealed class AuthenticationMethodLdapPropertiesResponse
    {
        /// <summary>
        /// Distinguished name of the object to start the recursive search of users from.
        /// </summary>
        public readonly string? SearchBaseDistinguishedName;
        /// <summary>
        /// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
        /// </summary>
        public readonly string? SearchFilterTemplate;
        public readonly ImmutableArray<Outputs.CertificateResponse> ServerCertificates;
        /// <summary>
        /// Hostname of the LDAP server.
        /// </summary>
        public readonly string? ServerHostname;
        /// <summary>
        /// Port of the LDAP server.
        /// </summary>
        public readonly int? ServerPort;
        /// <summary>
        /// Distinguished name of the look up user account, who can look up user details on authentication.
        /// </summary>
        public readonly string? ServiceUserDistinguishedName;
        /// <summary>
        /// Password of the look up user.
        /// </summary>
        public readonly string? ServiceUserPassword;

        [OutputConstructor]
        private AuthenticationMethodLdapPropertiesResponse(
            string? searchBaseDistinguishedName,

            string? searchFilterTemplate,

            ImmutableArray<Outputs.CertificateResponse> serverCertificates,

            string? serverHostname,

            int? serverPort,

            string? serviceUserDistinguishedName,

            string? serviceUserPassword)
        {
            SearchBaseDistinguishedName = searchBaseDistinguishedName;
            SearchFilterTemplate = searchFilterTemplate;
            ServerCertificates = serverCertificates;
            ServerHostname = serverHostname;
            ServerPort = serverPort;
            ServiceUserDistinguishedName = serviceUserDistinguishedName;
            ServiceUserPassword = serviceUserPassword;
        }
    }
}
