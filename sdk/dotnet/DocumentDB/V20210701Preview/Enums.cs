// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.DocumentDB.V20210701Preview
{
    /// <summary>
    /// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.
    /// </summary>
    [EnumType]
    public readonly struct AuthenticationMethod : IEquatable<AuthenticationMethod>
    {
        private readonly string _value;

        private AuthenticationMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static AuthenticationMethod None { get; } = new AuthenticationMethod("None");
        public static AuthenticationMethod Cassandra { get; } = new AuthenticationMethod("Cassandra");

        public static bool operator ==(AuthenticationMethod left, AuthenticationMethod right) => left.Equals(right);
        public static bool operator !=(AuthenticationMethod left, AuthenticationMethod right) => !left.Equals(right);

        public static explicit operator string(AuthenticationMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuthenticationMethod other && Equals(other);
        public bool Equals(AuthenticationMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The status of the resource at the time the operation was called.
    /// </summary>
    [EnumType]
    public readonly struct ManagedCassandraProvisioningState : IEquatable<ManagedCassandraProvisioningState>
    {
        private readonly string _value;

        private ManagedCassandraProvisioningState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ManagedCassandraProvisioningState Creating { get; } = new ManagedCassandraProvisioningState("Creating");
        public static ManagedCassandraProvisioningState Updating { get; } = new ManagedCassandraProvisioningState("Updating");
        public static ManagedCassandraProvisioningState Deleting { get; } = new ManagedCassandraProvisioningState("Deleting");
        public static ManagedCassandraProvisioningState Succeeded { get; } = new ManagedCassandraProvisioningState("Succeeded");
        public static ManagedCassandraProvisioningState Failed { get; } = new ManagedCassandraProvisioningState("Failed");
        public static ManagedCassandraProvisioningState Canceled { get; } = new ManagedCassandraProvisioningState("Canceled");

        public static bool operator ==(ManagedCassandraProvisioningState left, ManagedCassandraProvisioningState right) => left.Equals(right);
        public static bool operator !=(ManagedCassandraProvisioningState left, ManagedCassandraProvisioningState right) => !left.Equals(right);

        public static explicit operator string(ManagedCassandraProvisioningState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ManagedCassandraProvisioningState other && Equals(other);
        public bool Equals(ManagedCassandraProvisioningState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
    /// </summary>
    [EnumType]
    public readonly struct ResourceIdentityType : IEquatable<ResourceIdentityType>
    {
        private readonly string _value;

        private ResourceIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResourceIdentityType SystemAssigned { get; } = new ResourceIdentityType("SystemAssigned");
        public static ResourceIdentityType UserAssigned { get; } = new ResourceIdentityType("UserAssigned");
        public static ResourceIdentityType SystemAssigned_UserAssigned { get; } = new ResourceIdentityType("SystemAssigned,UserAssigned");
        public static ResourceIdentityType None { get; } = new ResourceIdentityType("None");

        public static bool operator ==(ResourceIdentityType left, ResourceIdentityType right) => left.Equals(right);
        public static bool operator !=(ResourceIdentityType left, ResourceIdentityType right) => !left.Equals(right);

        public static explicit operator string(ResourceIdentityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResourceIdentityType other && Equals(other);
        public bool Equals(ResourceIdentityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
