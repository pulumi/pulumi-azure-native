// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DocumentDB.V20200601Preview
{
    public static class GetSqlResourceSqlRoleAssignment
    {
        public static Task<GetSqlResourceSqlRoleAssignmentResult> InvokeAsync(GetSqlResourceSqlRoleAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSqlResourceSqlRoleAssignmentResult>("azure-nextgen:documentdb/v20200601preview:getSqlResourceSqlRoleAssignment", args ?? new GetSqlResourceSqlRoleAssignmentArgs(), options.WithVersion());
    }


    public sealed class GetSqlResourceSqlRoleAssignmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Assignment.
        /// </summary>
        [Input("roleAssignmentId", required: true)]
        public string RoleAssignmentId { get; set; } = null!;

        public GetSqlResourceSqlRoleAssignmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSqlResourceSqlRoleAssignmentResult
    {
        /// <summary>
        /// The name of the database account.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// The unique identifier for the associated Role Definition.
        /// </summary>
        public readonly string? RoleDefinitionId;
        /// <summary>
        /// The data plane resource path for which access is being granted through this Role Assignment.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The type of Azure resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlResourceSqlRoleAssignmentResult(
            string name,

            string? principalId,

            string? roleDefinitionId,

            string? scope,

            string type)
        {
            Name = name;
            PrincipalId = principalId;
            RoleDefinitionId = roleDefinitionId;
            Scope = scope;
            Type = type;
        }
    }
}
