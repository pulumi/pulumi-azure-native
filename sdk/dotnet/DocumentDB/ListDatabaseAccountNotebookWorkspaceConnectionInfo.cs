// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DocumentDB
{
    public static class ListDatabaseAccountNotebookWorkspaceConnectionInfo
    {
        public static Task<ListDatabaseAccountNotebookWorkspaceConnectionInfoResult> InvokeAsync(ListDatabaseAccountNotebookWorkspaceConnectionInfoArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListDatabaseAccountNotebookWorkspaceConnectionInfoResult>("azurerm:documentdb:listDatabaseAccountNotebookWorkspaceConnectionInfo", args ?? new ListDatabaseAccountNotebookWorkspaceConnectionInfoArgs(), options.WithVersion());
    }


    public sealed class ListDatabaseAccountNotebookWorkspaceConnectionInfoArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the notebook workspace resource.
        /// </summary>
        [Input("notebookWorkspaceName", required: true)]
        public string NotebookWorkspaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListDatabaseAccountNotebookWorkspaceConnectionInfoArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListDatabaseAccountNotebookWorkspaceConnectionInfoResult
    {
        /// <summary>
        /// Specifies auth token used for connecting to Notebook server (uses token-based auth).
        /// </summary>
        public readonly string AuthToken;
        /// <summary>
        /// Specifies the endpoint of Notebook server.
        /// </summary>
        public readonly string NotebookServerEndpoint;

        [OutputConstructor]
        private ListDatabaseAccountNotebookWorkspaceConnectionInfoResult(
            string authToken,

            string notebookServerEndpoint)
        {
            AuthToken = authToken;
            NotebookServerEndpoint = notebookServerEndpoint;
        }
    }
}
