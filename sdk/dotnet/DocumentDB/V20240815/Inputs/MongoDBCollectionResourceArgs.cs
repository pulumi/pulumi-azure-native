// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20240815.Inputs
{

    /// <summary>
    /// Cosmos DB MongoDB collection resource object
    /// </summary>
    public sealed class MongoDBCollectionResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Analytical TTL.
        /// </summary>
        [Input("analyticalStorageTtl")]
        public Input<int>? AnalyticalStorageTtl { get; set; }

        /// <summary>
        /// Enum to indicate the mode of resource creation.
        /// </summary>
        [Input("createMode")]
        public InputUnion<string, Pulumi.AzureNative.DocumentDB.V20240815.CreateMode>? CreateMode { get; set; }

        /// <summary>
        /// Name of the Cosmos DB MongoDB collection
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("indexes")]
        private InputList<Inputs.MongoIndexArgs>? _indexes;

        /// <summary>
        /// List of index keys
        /// </summary>
        public InputList<Inputs.MongoIndexArgs> Indexes
        {
            get => _indexes ?? (_indexes = new InputList<Inputs.MongoIndexArgs>());
            set => _indexes = value;
        }

        /// <summary>
        /// Parameters to indicate the information about the restore
        /// </summary>
        [Input("restoreParameters")]
        public Input<Inputs.ResourceRestoreParametersArgs>? RestoreParameters { get; set; }

        [Input("shardKey")]
        private InputMap<string>? _shardKey;

        /// <summary>
        /// A key-value pair of shard keys to be applied for the request.
        /// </summary>
        public InputMap<string> ShardKey
        {
            get => _shardKey ?? (_shardKey = new InputMap<string>());
            set => _shardKey = value;
        }

        public MongoDBCollectionResourceArgs()
        {
        }
        public static new MongoDBCollectionResourceArgs Empty => new MongoDBCollectionResourceArgs();
    }
}
