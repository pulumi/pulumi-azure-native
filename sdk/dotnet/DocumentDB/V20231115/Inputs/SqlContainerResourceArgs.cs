// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20231115.Inputs
{

    /// <summary>
    /// Cosmos DB SQL container resource object
    /// </summary>
    public sealed class SqlContainerResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Analytical TTL.
        /// </summary>
        [Input("analyticalStorageTtl")]
        public Input<double>? AnalyticalStorageTtl { get; set; }

        /// <summary>
        /// The client encryption policy for the container.
        /// </summary>
        [Input("clientEncryptionPolicy")]
        public Input<Inputs.ClientEncryptionPolicyArgs>? ClientEncryptionPolicy { get; set; }

        [Input("computedProperties")]
        private InputList<Inputs.ComputedPropertyArgs>? _computedProperties;

        /// <summary>
        /// List of computed properties
        /// </summary>
        public InputList<Inputs.ComputedPropertyArgs> ComputedProperties
        {
            get => _computedProperties ?? (_computedProperties = new InputList<Inputs.ComputedPropertyArgs>());
            set => _computedProperties = value;
        }

        /// <summary>
        /// The conflict resolution policy for the container.
        /// </summary>
        [Input("conflictResolutionPolicy")]
        public Input<Inputs.ConflictResolutionPolicyArgs>? ConflictResolutionPolicy { get; set; }

        /// <summary>
        /// Enum to indicate the mode of resource creation.
        /// </summary>
        [Input("createMode")]
        public InputUnion<string, Pulumi.AzureNative.DocumentDB.V20231115.CreateMode>? CreateMode { get; set; }

        /// <summary>
        /// Default time to live
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Name of the Cosmos DB SQL container
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
        /// </summary>
        [Input("indexingPolicy")]
        public Input<Inputs.IndexingPolicyArgs>? IndexingPolicy { get; set; }

        /// <summary>
        /// The configuration of the partition key to be used for partitioning data into multiple partitions
        /// </summary>
        [Input("partitionKey")]
        public Input<Inputs.ContainerPartitionKeyArgs>? PartitionKey { get; set; }

        /// <summary>
        /// Parameters to indicate the information about the restore
        /// </summary>
        [Input("restoreParameters")]
        public Input<Inputs.ResourceRestoreParametersArgs>? RestoreParameters { get; set; }

        /// <summary>
        /// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
        /// </summary>
        [Input("uniqueKeyPolicy")]
        public Input<Inputs.UniqueKeyPolicyArgs>? UniqueKeyPolicy { get; set; }

        public SqlContainerResourceArgs()
        {
        }
        public static new SqlContainerResourceArgs Empty => new SqlContainerResourceArgs();
    }
}
