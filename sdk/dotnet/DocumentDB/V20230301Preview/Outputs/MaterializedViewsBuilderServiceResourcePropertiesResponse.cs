// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20230301Preview.Outputs
{

    /// <summary>
    /// Properties for MaterializedViewsBuilderServiceResource.
    /// </summary>
    [OutputType]
    public sealed class MaterializedViewsBuilderServiceResourcePropertiesResponse
    {
        /// <summary>
        /// Time of the last state change (ISO-8601 format).
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Instance count for the service.
        /// </summary>
        public readonly int? InstanceCount;
        /// <summary>
        /// Instance type for the service.
        /// </summary>
        public readonly string? InstanceSize;
        /// <summary>
        /// An array that contains all of the locations for the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.MaterializedViewsBuilderRegionalServiceResourceResponse> Locations;
        /// <summary>
        /// ServiceType for the service.
        /// Expected value is 'MaterializedViewsBuilder'.
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// Describes the status of a service.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private MaterializedViewsBuilderServiceResourcePropertiesResponse(
            string creationTime,

            int? instanceCount,

            string? instanceSize,

            ImmutableArray<Outputs.MaterializedViewsBuilderRegionalServiceResourceResponse> locations,

            string serviceType,

            string status)
        {
            CreationTime = creationTime;
            InstanceCount = instanceCount;
            InstanceSize = instanceSize;
            Locations = locations;
            ServiceType = serviceType;
            Status = status;
        }
    }
}
