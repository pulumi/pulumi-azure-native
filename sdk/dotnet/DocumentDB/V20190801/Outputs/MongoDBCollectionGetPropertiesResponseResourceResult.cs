// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DocumentDB.V20190801.Outputs
{

    [OutputType]
    public sealed class MongoDBCollectionGetPropertiesResponseResourceResult
    {
        /// <summary>
        /// A system generated property representing the resource etag required for optimistic concurrency control.
        /// </summary>
        public readonly string _etag;
        /// <summary>
        /// A system generated property. A unique identifier.
        /// </summary>
        public readonly string _rid;
        /// <summary>
        /// A system generated property that denotes the last updated timestamp of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, object> _ts;
        /// <summary>
        /// Name of the Cosmos DB MongoDB collection
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of index keys
        /// </summary>
        public readonly ImmutableArray<Outputs.MongoIndexResponseResult> Indexes;
        /// <summary>
        /// A key-value pair of shard keys to be applied for the request.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ShardKey;

        [OutputConstructor]
        private MongoDBCollectionGetPropertiesResponseResourceResult(
            string _etag,

            string _rid,

            ImmutableDictionary<string, object> _ts,

            string id,

            ImmutableArray<Outputs.MongoIndexResponseResult> indexes,

            ImmutableDictionary<string, string>? shardKey)
        {
            this._etag = _etag;
            this._rid = _rid;
            this._ts = _ts;
            Id = id;
            Indexes = indexes;
            ShardKey = shardKey;
        }
    }
}
