// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DocumentDB.V20190801.Inputs
{

    /// <summary>
    /// A region in which the Azure Cosmos DB database account is deployed.
    /// </summary>
    public sealed class LocationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
        /// </summary>
        [Input("failoverPriority")]
        public Input<int>? FailoverPriority { get; set; }

        /// <summary>
        /// Flag to indicate whether or not this region is an AvailabilityZone region
        /// </summary>
        [Input("isZoneRedundant")]
        public Input<bool>? IsZoneRedundant { get; set; }

        /// <summary>
        /// The name of the region.
        /// </summary>
        [Input("locationName")]
        public Input<string>? LocationName { get; set; }

        /// <summary>
        /// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        public LocationArgs()
        {
        }
    }
}
