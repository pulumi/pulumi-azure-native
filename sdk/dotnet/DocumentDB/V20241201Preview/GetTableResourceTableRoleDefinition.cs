// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20241201Preview
{
    public static class GetTableResourceTableRoleDefinition
    {
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Table Role Definition with the given Id.
        /// </summary>
        public static Task<GetTableResourceTableRoleDefinitionResult> InvokeAsync(GetTableResourceTableRoleDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResourceTableRoleDefinitionResult>("azure-native:documentdb/v20241201preview:getTableResourceTableRoleDefinition", args ?? new GetTableResourceTableRoleDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Table Role Definition with the given Id.
        /// </summary>
        public static Output<GetTableResourceTableRoleDefinitionResult> Invoke(GetTableResourceTableRoleDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResourceTableRoleDefinitionResult>("azure-native:documentdb/v20241201preview:getTableResourceTableRoleDefinition", args ?? new GetTableResourceTableRoleDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableResourceTableRoleDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Definition.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public string RoleDefinitionId { get; set; } = null!;

        public GetTableResourceTableRoleDefinitionArgs()
        {
        }
        public static new GetTableResourceTableRoleDefinitionArgs Empty => new GetTableResourceTableRoleDefinitionArgs();
    }

    public sealed class GetTableResourceTableRoleDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cosmos DB database account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The GUID for the Role Definition.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public Input<string> RoleDefinitionId { get; set; } = null!;

        public GetTableResourceTableRoleDefinitionInvokeArgs()
        {
        }
        public static new GetTableResourceTableRoleDefinitionInvokeArgs Empty => new GetTableResourceTableRoleDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResourceTableRoleDefinitionResult
    {
        /// <summary>
        /// A set of fully qualified Scopes at or below which Table Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
        /// </summary>
        public readonly ImmutableArray<string> AssignableScopes;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The set of operations allowed through this Role Definition.
        /// </summary>
        public readonly ImmutableArray<Outputs.PermissionResponse> Permissions;
        /// <summary>
        /// A user-friendly name for the Role Definition. Must be unique for the database account.
        /// </summary>
        public readonly string? RoleName;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTableResourceTableRoleDefinitionResult(
            ImmutableArray<string> assignableScopes,

            string id,

            string name,

            ImmutableArray<Outputs.PermissionResponse> permissions,

            string? roleName,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AssignableScopes = assignableScopes;
            Id = id;
            Name = name;
            Permissions = permissions;
            RoleName = roleName;
            SystemData = systemData;
            Type = type;
        }
    }
}
