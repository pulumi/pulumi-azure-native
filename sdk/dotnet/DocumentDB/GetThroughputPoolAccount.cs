// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB
{
    public static class GetThroughputPoolAccount
    {
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
        /// Azure REST API version: 2023-11-15-preview.
        /// 
        /// Other available API versions: 2024-02-15-preview, 2024-05-15-preview, 2024-09-01-preview.
        /// </summary>
        public static Task<GetThroughputPoolAccountResult> InvokeAsync(GetThroughputPoolAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetThroughputPoolAccountResult>("azure-native:documentdb:getThroughputPoolAccount", args ?? new GetThroughputPoolAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
        /// Azure REST API version: 2023-11-15-preview.
        /// 
        /// Other available API versions: 2024-02-15-preview, 2024-05-15-preview, 2024-09-01-preview.
        /// </summary>
        public static Output<GetThroughputPoolAccountResult> Invoke(GetThroughputPoolAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetThroughputPoolAccountResult>("azure-native:documentdb:getThroughputPoolAccount", args ?? new GetThroughputPoolAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThroughputPoolAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB global database account in a Throughput Pool
        /// </summary>
        [Input("throughputPoolAccountName", required: true)]
        public string ThroughputPoolAccountName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB Throughput Pool name.
        /// </summary>
        [Input("throughputPoolName", required: true)]
        public string ThroughputPoolName { get; set; } = null!;

        public GetThroughputPoolAccountArgs()
        {
        }
        public static new GetThroughputPoolAccountArgs Empty => new GetThroughputPoolAccountArgs();
    }

    public sealed class GetThroughputPoolAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB global database account in a Throughput Pool
        /// </summary>
        [Input("throughputPoolAccountName", required: true)]
        public Input<string> ThroughputPoolAccountName { get; set; } = null!;

        /// <summary>
        /// Cosmos DB Throughput Pool name.
        /// </summary>
        [Input("throughputPoolName", required: true)]
        public Input<string> ThroughputPoolName { get; set; } = null!;

        public GetThroughputPoolAccountInvokeArgs()
        {
        }
        public static new GetThroughputPoolAccountInvokeArgs Empty => new GetThroughputPoolAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetThroughputPoolAccountResult
    {
        /// <summary>
        /// The instance id of global database account in the throughputPool.
        /// </summary>
        public readonly string AccountInstanceId;
        /// <summary>
        /// The location of  global database account in the throughputPool.
        /// </summary>
        public readonly string? AccountLocation;
        /// <summary>
        /// The resource identifier of global database account in the throughputPool.
        /// </summary>
        public readonly string? AccountResourceIdentifier;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A provisioning state of the ThroughputPool Account.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetThroughputPoolAccountResult(
            string accountInstanceId,

            string? accountLocation,

            string? accountResourceIdentifier,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AccountInstanceId = accountInstanceId;
            AccountLocation = accountLocation;
            AccountResourceIdentifier = accountResourceIdentifier;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
