// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AadIam.V20200301Preview
{
    /// <summary>
    /// PrivateLink Policy configuration object.
    /// </summary>
    public partial class PrivateLinkForAzureAd : Pulumi.CustomResource
    {
        /// <summary>
        /// Flag indicating whether all tenants are allowed
        /// </summary>
        [Output("allTenants")]
        public Output<bool?> AllTenants { get; private set; } = null!;

        /// <summary>
        /// Name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Guid of the owner tenant
        /// </summary>
        [Output("ownerTenantId")]
        public Output<string?> OwnerTenantId { get; private set; } = null!;

        /// <summary>
        /// Name of the resource group
        /// </summary>
        [Output("resourceGroup")]
        public Output<string?> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// Name of the private link policy resource
        /// </summary>
        [Output("resourceName")]
        public Output<string?> ResourceName { get; private set; } = null!;

        /// <summary>
        /// Subscription Identifier
        /// </summary>
        [Output("subscriptionId")]
        public Output<string?> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The list of tenantIds.
        /// </summary>
        [Output("tenants")]
        public Output<ImmutableArray<string>> Tenants { get; private set; } = null!;

        /// <summary>
        /// Type of this resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateLinkForAzureAd resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateLinkForAzureAd(string name, PrivateLinkForAzureAdArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:aadiam/v20200301preview:privateLinkForAzureAd", name, args ?? new PrivateLinkForAzureAdArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateLinkForAzureAd(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:aadiam/v20200301preview:privateLinkForAzureAd", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateLinkForAzureAd resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateLinkForAzureAd Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PrivateLinkForAzureAd(name, id, options);
        }
    }

    public sealed class PrivateLinkForAzureAdArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag indicating whether all tenants are allowed
        /// </summary>
        [Input("allTenants")]
        public Input<bool>? AllTenants { get; set; }

        /// <summary>
        /// Name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Guid of the owner tenant
        /// </summary>
        [Input("ownerTenantId")]
        public Input<string>? OwnerTenantId { get; set; }

        /// <summary>
        /// The name of the private link policy in Azure AD.
        /// </summary>
        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// Name of an Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the private link policy resource
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// Subscription Identifier
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tenants")]
        private InputList<string>? _tenants;

        /// <summary>
        /// The list of tenantIds.
        /// </summary>
        public InputList<string> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<string>());
            set => _tenants = value;
        }

        public PrivateLinkForAzureAdArgs()
        {
        }
    }
}
