// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataCatalog.Latest
{
    /// <summary>
    /// Azure Data Catalog.
    /// </summary>
    public partial class ADCCatalog : Pulumi.CustomResource
    {
        /// <summary>
        /// Azure data catalog admin list.
        /// </summary>
        [Output("admins")]
        public Output<ImmutableArray<Outputs.PrincipalsResponse>> Admins { get; private set; } = null!;

        /// <summary>
        /// Automatic unit adjustment enabled or not.
        /// </summary>
        [Output("enableAutomaticUnitAdjustment")]
        public Output<bool?> EnableAutomaticUnitAdjustment { get; private set; } = null!;

        /// <summary>
        /// Resource etag
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure data catalog SKU.
        /// </summary>
        [Output("sku")]
        public Output<string?> Sku { get; private set; } = null!;

        /// <summary>
        /// Azure data catalog provision status.
        /// </summary>
        [Output("successfullyProvisioned")]
        public Output<bool?> SuccessfullyProvisioned { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Azure data catalog units.
        /// </summary>
        [Output("units")]
        public Output<int?> Units { get; private set; } = null!;

        /// <summary>
        /// Azure data catalog user list.
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<Outputs.PrincipalsResponse>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a ADCCatalog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ADCCatalog(string name, ADCCatalogArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:datacatalog/latest:ADCCatalog", name, args ?? new ADCCatalogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ADCCatalog(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:datacatalog/latest:ADCCatalog", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:datacatalog/v20160330:ADCCatalog"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ADCCatalog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ADCCatalog Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ADCCatalog(name, id, options);
        }
    }

    public sealed class ADCCatalogArgs : Pulumi.ResourceArgs
    {
        [Input("admins")]
        private InputList<Inputs.PrincipalsArgs>? _admins;

        /// <summary>
        /// Azure data catalog admin list.
        /// </summary>
        public InputList<Inputs.PrincipalsArgs> Admins
        {
            get => _admins ?? (_admins = new InputList<Inputs.PrincipalsArgs>());
            set => _admins = value;
        }

        /// <summary>
        /// The name of the data catalog in the specified subscription and resource group.
        /// </summary>
        [Input("catalogName", required: true)]
        public Input<string> CatalogName { get; set; } = null!;

        /// <summary>
        /// Automatic unit adjustment enabled or not.
        /// </summary>
        [Input("enableAutomaticUnitAdjustment")]
        public Input<bool>? EnableAutomaticUnitAdjustment { get; set; }

        /// <summary>
        /// Resource etag
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Azure data catalog SKU.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// Azure data catalog provision status.
        /// </summary>
        [Input("successfullyProvisioned")]
        public Input<bool>? SuccessfullyProvisioned { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Azure data catalog units.
        /// </summary>
        [Input("units")]
        public Input<int>? Units { get; set; }

        [Input("users")]
        private InputList<Inputs.PrincipalsArgs>? _users;

        /// <summary>
        /// Azure data catalog user list.
        /// </summary>
        public InputList<Inputs.PrincipalsArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.PrincipalsArgs>());
            set => _users = value;
        }

        public ADCCatalogArgs()
        {
        }
    }
}
