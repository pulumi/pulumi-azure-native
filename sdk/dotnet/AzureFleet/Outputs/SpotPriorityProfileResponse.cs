// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureFleet.Outputs
{

    /// <summary>
    /// Configuration Options for Spot instances in Compute Fleet.
    /// </summary>
    [OutputType]
    public sealed class SpotPriorityProfileResponse
    {
        /// <summary>
        /// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
        /// </summary>
        public readonly string? AllocationStrategy;
        /// <summary>
        /// Total capacity to achieve. It is currently in terms of number of VMs.
        /// </summary>
        public readonly int? Capacity;
        /// <summary>
        /// Eviction Policy to follow when evicting Spot VMs.
        /// </summary>
        public readonly string? EvictionPolicy;
        /// <summary>
        /// Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs.
        /// If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted)
        /// or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity.
        /// Maintain is enabled by default.
        /// </summary>
        public readonly bool? Maintain;
        /// <summary>
        /// Price per hour of each Spot VM will never exceed this.
        /// </summary>
        public readonly double? MaxPricePerVM;
        /// <summary>
        /// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
        /// </summary>
        public readonly int? MinCapacity;

        [OutputConstructor]
        private SpotPriorityProfileResponse(
            string? allocationStrategy,

            int? capacity,

            string? evictionPolicy,

            bool? maintain,

            double? maxPricePerVM,

            int? minCapacity)
        {
            AllocationStrategy = allocationStrategy;
            Capacity = capacity;
            EvictionPolicy = evictionPolicy;
            Maintain = maintain;
            MaxPricePerVM = maxPricePerVM;
            MinCapacity = minCapacity;
        }
    }
}
