// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureFleet.Outputs
{

    /// <summary>
    /// Describes a virtual machine scale set OS profile.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineScaleSetOSProfileResponse
    {
        /// <summary>
        /// Specifies the name of the administrator account. &lt;br&gt;&lt;br&gt; **Windows-only
        /// restriction:** Cannot end in "." &lt;br&gt;&lt;br&gt; **Disallowed values:**
        /// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
        /// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
        /// "console", "david", "guest", "john", "owner", "root", "server", "sql",
        /// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
        /// &lt;br&gt;&lt;br&gt; **Minimum-length (Linux):** 1  character &lt;br&gt;&lt;br&gt; **Max-length
        /// (Linux):** 64 characters &lt;br&gt;&lt;br&gt; **Max-length (Windows):** 20 characters
        /// </summary>
        public readonly string? AdminUsername;
        /// <summary>
        /// Specifies whether extension operations should be allowed on the virtual machine
        /// scale set. This may only be set to False when no extensions are present on the
        /// virtual machine scale set.
        /// </summary>
        public readonly bool? AllowExtensionOperations;
        /// <summary>
        /// Specifies the computer name prefix for all of the virtual machines in the scale
        /// set. Computer name prefixes must be 1 to 15 characters long.
        /// </summary>
        public readonly string? ComputerNamePrefix;
        /// <summary>
        /// Specifies the Linux operating system settings on the virtual machine. For a
        /// list of supported Linux distributions, see [Linux on Azure-Endorsed
        /// Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        /// </summary>
        public readonly Outputs.LinuxConfigurationResponse? LinuxConfiguration;
        /// <summary>
        /// Optional property which must either be set to True or omitted.
        /// </summary>
        public readonly bool? RequireGuestProvisionSignal;
        /// <summary>
        /// Specifies set of certificates that should be installed onto the virtual
        /// machines in the scale set. To install certificates on a virtual machine it is
        /// recommended to use the [Azure Key Vault virtual machine extension for
        /// Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for
        /// Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </summary>
        public readonly ImmutableArray<Outputs.VaultSecretGroupResponse> Secrets;
        /// <summary>
        /// Specifies Windows operating system settings on the virtual machine.
        /// </summary>
        public readonly Outputs.WindowsConfigurationResponse? WindowsConfiguration;

        [OutputConstructor]
        private VirtualMachineScaleSetOSProfileResponse(
            string? adminUsername,

            bool? allowExtensionOperations,

            string? computerNamePrefix,

            Outputs.LinuxConfigurationResponse? linuxConfiguration,

            bool? requireGuestProvisionSignal,

            ImmutableArray<Outputs.VaultSecretGroupResponse> secrets,

            Outputs.WindowsConfigurationResponse? windowsConfiguration)
        {
            AdminUsername = adminUsername;
            AllowExtensionOperations = allowExtensionOperations;
            ComputerNamePrefix = computerNamePrefix;
            LinuxConfiguration = linuxConfiguration;
            RequireGuestProvisionSignal = requireGuestProvisionSignal;
            Secrets = secrets;
            WindowsConfiguration = windowsConfiguration;
        }
    }
}
