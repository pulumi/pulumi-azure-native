// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureFleet.V20231101Preview
{
    /// <summary>
    /// An Compute Fleet resource
    /// </summary>
    [AzureNativeResourceType("azure-native:azurefleet/v20231101preview:Fleet")]
    public partial class Fleet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Compute Profile to use for running user's workloads.
        /// </summary>
        [Output("computeProfile")]
        public Output<Outputs.ComputeProfileResponse> ComputeProfile { get; private set; } = null!;

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Details of the resource plan.
        /// </summary>
        [Output("plan")]
        public Output<Outputs.PlanResponse?> Plan { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Configuration Options for Regular instances in Compute Fleet.
        /// </summary>
        [Output("regularPriorityProfile")]
        public Output<Outputs.RegularPriorityProfileResponse?> RegularPriorityProfile { get; private set; } = null!;

        /// <summary>
        /// Configuration Options for Spot instances in Compute Fleet.
        /// </summary>
        [Output("spotPriorityProfile")]
        public Output<Outputs.SpotPriorityProfileResponse?> SpotPriorityProfile { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the time at which the Compute Fleet is created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID which uniquely identifies a Compute Fleet.
        /// </summary>
        [Output("uniqueId")]
        public Output<string> UniqueId { get; private set; } = null!;

        /// <summary>
        /// List of VM sizes supported for Compute Fleet
        /// </summary>
        [Output("vmSizesProfile")]
        public Output<ImmutableArray<Outputs.VmSizeProfileResponse>> VmSizesProfile { get; private set; } = null!;

        /// <summary>
        /// Zones in which the Compute Fleet is available
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a Fleet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Fleet(string name, FleetArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurefleet/v20231101preview:Fleet", name, args ?? new FleetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Fleet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurefleet/v20231101preview:Fleet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurefleet:Fleet" },
                    new global::Pulumi.Alias { Type = "azure-native:azurefleet/v20240501preview:Fleet" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Fleet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Fleet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Fleet(name, id, options);
        }
    }

    public sealed class FleetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compute Profile to use for running user's workloads.
        /// </summary>
        [Input("computeProfile", required: true)]
        public Input<Inputs.ComputeProfileArgs> ComputeProfile { get; set; } = null!;

        /// <summary>
        /// The name of the Compute Fleet
        /// </summary>
        [Input("fleetName")]
        public Input<string>? FleetName { get; set; }

        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Details of the resource plan.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.PlanArgs>? Plan { get; set; }

        /// <summary>
        /// Configuration Options for Regular instances in Compute Fleet.
        /// </summary>
        [Input("regularPriorityProfile")]
        public Input<Inputs.RegularPriorityProfileArgs>? RegularPriorityProfile { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Configuration Options for Spot instances in Compute Fleet.
        /// </summary>
        [Input("spotPriorityProfile")]
        public Input<Inputs.SpotPriorityProfileArgs>? SpotPriorityProfile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vmSizesProfile", required: true)]
        private InputList<Inputs.VmSizeProfileArgs>? _vmSizesProfile;

        /// <summary>
        /// List of VM sizes supported for Compute Fleet
        /// </summary>
        public InputList<Inputs.VmSizeProfileArgs> VmSizesProfile
        {
            get => _vmSizesProfile ?? (_vmSizesProfile = new InputList<Inputs.VmSizeProfileArgs>());
            set => _vmSizesProfile = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Zones in which the Compute Fleet is available
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public FleetArgs()
        {
        }
        public static new FleetArgs Empty => new FleetArgs();
    }
}
