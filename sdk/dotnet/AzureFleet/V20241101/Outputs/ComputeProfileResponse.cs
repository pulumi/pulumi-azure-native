// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureFleet.V20241101.Outputs
{

    /// <summary>
    /// Compute Profile to use for running user's workloads.
    /// </summary>
    [OutputType]
    public sealed class ComputeProfileResponse
    {
        /// <summary>
        /// Specifies VMSS and VM API entity models support two additional capabilities as of today: ultraSSDEnabled and hibernationEnabled.
        /// ultraSSDEnabled: Enables UltraSSD_LRS storage account type on the VMSS VMs.
        /// hibernationEnabled: Enables the hibernation capability on the VMSS VMs.
        /// Default value is null if not specified. This property cannot be updated once set.
        /// </summary>
        public readonly Outputs.AdditionalCapabilitiesResponse? AdditionalVirtualMachineCapabilities;
        /// <summary>
        /// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        /// </summary>
        public readonly Outputs.BaseVirtualMachineProfileResponse BaseVirtualMachineProfile;
        /// <summary>
        /// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
        /// The default value will be the latest supported computeApiVersion by Compute Fleet.
        /// </summary>
        public readonly string? ComputeApiVersion;
        /// <summary>
        /// Specifies the number of fault domains to use when creating the underlying VMSS.
        /// A fault domain is a logical group of hardware within an Azure datacenter.
        /// VMs in the same fault domain share a common power source and network switch.
        /// If not specified, defaults to 1, which represents "Max Spreading" (using as many fault domains as possible).
        /// This property cannot be updated.
        /// </summary>
        public readonly int? PlatformFaultDomainCount;

        [OutputConstructor]
        private ComputeProfileResponse(
            Outputs.AdditionalCapabilitiesResponse? additionalVirtualMachineCapabilities,

            Outputs.BaseVirtualMachineProfileResponse baseVirtualMachineProfile,

            string? computeApiVersion,

            int? platformFaultDomainCount)
        {
            AdditionalVirtualMachineCapabilities = additionalVirtualMachineCapabilities;
            BaseVirtualMachineProfile = baseVirtualMachineProfile;
            ComputeApiVersion = computeApiVersion;
            PlatformFaultDomainCount = platformFaultDomainCount;
        }
    }
}
