// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureFleet.V20241101.Inputs
{

    /// <summary>
    /// Configuration Options for Regular instances in Compute Fleet.
    /// </summary>
    public sealed class RegularPriorityProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
        /// </summary>
        [Input("allocationStrategy")]
        public InputUnion<string, Pulumi.AzureNative.AzureFleet.V20241101.RegularPriorityAllocationStrategy>? AllocationStrategy { get; set; }

        /// <summary>
        /// Total capacity to achieve. It is currently in terms of number of VMs.
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
        /// </summary>
        [Input("minCapacity")]
        public Input<int>? MinCapacity { get; set; }

        public RegularPriorityProfileArgs()
        {
        }
        public static new RegularPriorityProfileArgs Empty => new RegularPriorityProfileArgs();
    }
}
