// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetDisasterRecoveryConfiguration
    {
        /// <summary>
        /// Gets a disaster recovery configuration.
        /// API Version: 2014-04-01.
        /// </summary>
        public static Task<GetDisasterRecoveryConfigurationResult> InvokeAsync(GetDisasterRecoveryConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDisasterRecoveryConfigurationResult>("azure-native:sql:getDisasterRecoveryConfiguration", args ?? new GetDisasterRecoveryConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a disaster recovery configuration.
        /// API Version: 2014-04-01.
        /// </summary>
        public static Output<GetDisasterRecoveryConfigurationResult> Invoke(GetDisasterRecoveryConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDisasterRecoveryConfigurationResult>("azure-native:sql:getDisasterRecoveryConfiguration", args ?? new GetDisasterRecoveryConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDisasterRecoveryConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the disaster recovery configuration.
        /// </summary>
        [Input("disasterRecoveryConfigurationName", required: true)]
        public string DisasterRecoveryConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetDisasterRecoveryConfigurationArgs()
        {
        }
        public static new GetDisasterRecoveryConfigurationArgs Empty => new GetDisasterRecoveryConfigurationArgs();
    }

    public sealed class GetDisasterRecoveryConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the disaster recovery configuration.
        /// </summary>
        [Input("disasterRecoveryConfigurationName", required: true)]
        public Input<string> DisasterRecoveryConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetDisasterRecoveryConfigurationInvokeArgs()
        {
        }
        public static new GetDisasterRecoveryConfigurationInvokeArgs Empty => new GetDisasterRecoveryConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetDisasterRecoveryConfigurationResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Location of the server that contains this disaster recovery configuration.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The properties representing the resource.
        /// </summary>
        public readonly Outputs.DisasterRecoveryConfigurationPropertiesResponse Properties;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDisasterRecoveryConfigurationResult(
            string id,

            string location,

            string name,

            Outputs.DisasterRecoveryConfigurationPropertiesResponse properties,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
