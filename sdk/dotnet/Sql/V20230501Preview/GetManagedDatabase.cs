// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20230501Preview
{
    public static class GetManagedDatabase
    {
        /// <summary>
        /// Gets a managed database.
        /// </summary>
        public static Task<GetManagedDatabaseResult> InvokeAsync(GetManagedDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseResult>("azure-native:sql/v20230501preview:getManagedDatabase", args ?? new GetManagedDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a managed database.
        /// </summary>
        public static Output<GetManagedDatabaseResult> Invoke(GetManagedDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseResult>("azure-native:sql/v20230501preview:getManagedDatabase", args ?? new GetManagedDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedDatabaseArgs()
        {
        }
        public static new GetManagedDatabaseArgs Empty => new GetManagedDatabaseArgs();
    }

    public sealed class GetManagedDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedDatabaseInvokeArgs()
        {
        }
        public static new GetManagedDatabaseInvokeArgs Empty => new GetManagedDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseResult
    {
        /// <summary>
        /// Collation of the metadata catalog.
        /// </summary>
        public readonly string? CatalogCollation;
        /// <summary>
        /// Collation of the managed database.
        /// </summary>
        public readonly string? Collation;
        /// <summary>
        /// Creation date of the database.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// Geo paired region.
        /// </summary>
        public readonly string DefaultSecondaryLocation;
        /// <summary>
        /// Earliest restore point in time for point in time restore.
        /// </summary>
        public readonly string EarliestRestorePoint;
        /// <summary>
        /// Instance Failover Group resource identifier that this managed database belongs to.
        /// </summary>
        public readonly string FailoverGroupId;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.
        /// </summary>
        public readonly bool? IsLedgerOn;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status of the database.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedDatabaseResult(
            string? catalogCollation,

            string? collation,

            string creationDate,

            string defaultSecondaryLocation,

            string earliestRestorePoint,

            string failoverGroupId,

            string id,

            bool? isLedgerOn,

            string location,

            string name,

            string status,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CatalogCollation = catalogCollation;
            Collation = collation;
            CreationDate = creationDate;
            DefaultSecondaryLocation = defaultSecondaryLocation;
            EarliestRestorePoint = earliestRestorePoint;
            FailoverGroupId = failoverGroupId;
            Id = id;
            IsLedgerOn = isLedgerOn;
            Location = location;
            Name = name;
            Status = status;
            Tags = tags;
            Type = type;
        }
    }
}
