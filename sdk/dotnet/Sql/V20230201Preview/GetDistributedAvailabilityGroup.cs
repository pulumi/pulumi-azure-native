// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20230201Preview
{
    public static class GetDistributedAvailabilityGroup
    {
        /// <summary>
        /// Gets a distributed availability group info.
        /// </summary>
        public static Task<GetDistributedAvailabilityGroupResult> InvokeAsync(GetDistributedAvailabilityGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDistributedAvailabilityGroupResult>("azure-native:sql/v20230201preview:getDistributedAvailabilityGroup", args ?? new GetDistributedAvailabilityGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a distributed availability group info.
        /// </summary>
        public static Output<GetDistributedAvailabilityGroupResult> Invoke(GetDistributedAvailabilityGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDistributedAvailabilityGroupResult>("azure-native:sql/v20230201preview:getDistributedAvailabilityGroup", args ?? new GetDistributedAvailabilityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDistributedAvailabilityGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The distributed availability group name.
        /// </summary>
        [Input("distributedAvailabilityGroupName", required: true)]
        public string DistributedAvailabilityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDistributedAvailabilityGroupArgs()
        {
        }
        public static new GetDistributedAvailabilityGroupArgs Empty => new GetDistributedAvailabilityGroupArgs();
    }

    public sealed class GetDistributedAvailabilityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The distributed availability group name.
        /// </summary>
        [Input("distributedAvailabilityGroupName", required: true)]
        public Input<string> DistributedAvailabilityGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDistributedAvailabilityGroupInvokeArgs()
        {
        }
        public static new GetDistributedAvailabilityGroupInvokeArgs Empty => new GetDistributedAvailabilityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetDistributedAvailabilityGroupResult
    {
        /// <summary>
        /// Databases in the distributed availability group
        /// </summary>
        public readonly ImmutableArray<Outputs.DistributedAvailabilityGroupDatabaseResponse> Databases;
        /// <summary>
        /// ID of the distributed availability group
        /// </summary>
        public readonly string DistributedAvailabilityGroupId;
        /// <summary>
        /// Name of the distributed availability group
        /// </summary>
        public readonly string DistributedAvailabilityGroupName;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed instance side availability group name
        /// </summary>
        public readonly string InstanceAvailabilityGroupName;
        /// <summary>
        /// Managed instance side link role
        /// </summary>
        public readonly string InstanceLinkRole;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SQL server side availability group name
        /// </summary>
        public readonly string PartnerAvailabilityGroupName;
        /// <summary>
        /// SQL server side endpoint - IP or DNS resolvable name
        /// </summary>
        public readonly string PartnerEndpoint;
        /// <summary>
        /// SQL server side link role
        /// </summary>
        public readonly string PartnerLinkRole;
        /// <summary>
        /// Replication mode of the link
        /// </summary>
        public readonly string? ReplicationMode;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDistributedAvailabilityGroupResult(
            ImmutableArray<Outputs.DistributedAvailabilityGroupDatabaseResponse> databases,

            string distributedAvailabilityGroupId,

            string distributedAvailabilityGroupName,

            string id,

            string instanceAvailabilityGroupName,

            string instanceLinkRole,

            string name,

            string partnerAvailabilityGroupName,

            string partnerEndpoint,

            string partnerLinkRole,

            string? replicationMode,

            string type)
        {
            Databases = databases;
            DistributedAvailabilityGroupId = distributedAvailabilityGroupId;
            DistributedAvailabilityGroupName = distributedAvailabilityGroupName;
            Id = id;
            InstanceAvailabilityGroupName = instanceAvailabilityGroupName;
            InstanceLinkRole = instanceLinkRole;
            Name = name;
            PartnerAvailabilityGroupName = partnerAvailabilityGroupName;
            PartnerEndpoint = partnerEndpoint;
            PartnerLinkRole = partnerLinkRole;
            ReplicationMode = replicationMode;
            Type = type;
        }
    }
}
