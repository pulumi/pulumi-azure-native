// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20221101Preview
{
    public static class GetStartStopManagedInstanceSchedule
    {
        /// <summary>
        /// Gets the managed instance's Start/Stop schedule.
        /// </summary>
        public static Task<GetStartStopManagedInstanceScheduleResult> InvokeAsync(GetStartStopManagedInstanceScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStartStopManagedInstanceScheduleResult>("azure-native:sql/v20221101preview:getStartStopManagedInstanceSchedule", args ?? new GetStartStopManagedInstanceScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the managed instance's Start/Stop schedule.
        /// </summary>
        public static Output<GetStartStopManagedInstanceScheduleResult> Invoke(GetStartStopManagedInstanceScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStartStopManagedInstanceScheduleResult>("azure-native:sql/v20221101preview:getStartStopManagedInstanceSchedule", args ?? new GetStartStopManagedInstanceScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStartStopManagedInstanceScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the managed instance Start/Stop schedule.
        /// </summary>
        [Input("startStopScheduleName", required: true)]
        public string StartStopScheduleName { get; set; } = null!;

        public GetStartStopManagedInstanceScheduleArgs()
        {
        }
        public static new GetStartStopManagedInstanceScheduleArgs Empty => new GetStartStopManagedInstanceScheduleArgs();
    }

    public sealed class GetStartStopManagedInstanceScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the managed instance Start/Stop schedule.
        /// </summary>
        [Input("startStopScheduleName", required: true)]
        public Input<string> StartStopScheduleName { get; set; } = null!;

        public GetStartStopManagedInstanceScheduleInvokeArgs()
        {
        }
        public static new GetStartStopManagedInstanceScheduleInvokeArgs Empty => new GetStartStopManagedInstanceScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetStartStopManagedInstanceScheduleResult
    {
        /// <summary>
        /// The description of the schedule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Timestamp when the next action will be executed in the corresponding schedule time zone.
        /// </summary>
        public readonly string NextExecutionTime;
        /// <summary>
        /// Next action to be executed (Start or Stop)
        /// </summary>
        public readonly string NextRunAction;
        /// <summary>
        /// Schedule list.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScheduleItemResponse> ScheduleList;
        /// <summary>
        /// System data of the scheduled resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The time zone of the schedule.
        /// </summary>
        public readonly string? TimeZoneId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStartStopManagedInstanceScheduleResult(
            string? description,

            string id,

            string name,

            string nextExecutionTime,

            string nextRunAction,

            ImmutableArray<Outputs.ScheduleItemResponse> scheduleList,

            Outputs.SystemDataResponse systemData,

            string? timeZoneId,

            string type)
        {
            Description = description;
            Id = id;
            Name = name;
            NextExecutionTime = nextExecutionTime;
            NextRunAction = nextRunAction;
            ScheduleList = scheduleList;
            SystemData = systemData;
            TimeZoneId = timeZoneId;
            Type = type;
        }
    }
}
