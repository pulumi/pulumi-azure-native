// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetVirtualCluster
    {
        /// <summary>
        /// Gets a virtual cluster.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Task<GetVirtualClusterResult> InvokeAsync(GetVirtualClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualClusterResult>("azure-native:sql:getVirtualCluster", args ?? new GetVirtualClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a virtual cluster.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Output<GetVirtualClusterResult> Invoke(GetVirtualClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualClusterResult>("azure-native:sql:getVirtualCluster", args ?? new GetVirtualClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a virtual cluster.
        /// 
        /// Uses Azure REST API version 2024-11-01-preview.
        /// </summary>
        public static Output<GetVirtualClusterResult> Invoke(GetVirtualClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualClusterResult>("azure-native:sql:getVirtualCluster", args ?? new GetVirtualClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual cluster.
        /// </summary>
        [Input("virtualClusterName", required: true)]
        public string VirtualClusterName { get; set; } = null!;

        public GetVirtualClusterArgs()
        {
        }
        public static new GetVirtualClusterArgs Empty => new GetVirtualClusterArgs();
    }

    public sealed class GetVirtualClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the virtual cluster.
        /// </summary>
        [Input("virtualClusterName", required: true)]
        public Input<string> VirtualClusterName { get; set; } = null!;

        public GetVirtualClusterInvokeArgs()
        {
        }
        public static new GetVirtualClusterInvokeArgs Empty => new GetVirtualClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualClusterResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// List of resources in this virtual cluster.
        /// </summary>
        public readonly ImmutableArray<string> ChildResources;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Subnet resource ID for the virtual cluster.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Virtual cluster version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetVirtualClusterResult(
            string azureApiVersion,

            ImmutableArray<string> childResources,

            string id,

            string location,

            string name,

            string subnetId,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            AzureApiVersion = azureApiVersion;
            ChildResources = childResources;
            Id = id;
            Location = location;
            Name = name;
            SubnetId = subnetId;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
