// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    /// <summary>
    /// Workload group operations for a data warehouse
    /// 
    /// Uses Azure REST API version 2023-08-01. In version 2.x of the Azure Native provider, it used API version 2021-11-01.
    /// 
    /// Other available API versions: 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:sql:WorkloadGroup")]
    public partial class WorkloadGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// The workload group importance level.
        /// </summary>
        [Output("importance")]
        public Output<string?> Importance { get; private set; } = null!;

        /// <summary>
        /// The workload group cap percentage resource.
        /// </summary>
        [Output("maxResourcePercent")]
        public Output<int> MaxResourcePercent { get; private set; } = null!;

        /// <summary>
        /// The workload group request maximum grant percentage.
        /// </summary>
        [Output("maxResourcePercentPerRequest")]
        public Output<double?> MaxResourcePercentPerRequest { get; private set; } = null!;

        /// <summary>
        /// The workload group minimum percentage resource.
        /// </summary>
        [Output("minResourcePercent")]
        public Output<int> MinResourcePercent { get; private set; } = null!;

        /// <summary>
        /// The workload group request minimum grant percentage.
        /// </summary>
        [Output("minResourcePercentPerRequest")]
        public Output<double> MinResourcePercentPerRequest { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The workload group query execution timeout.
        /// </summary>
        [Output("queryExecutionTimeout")]
        public Output<int?> QueryExecutionTimeout { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WorkloadGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkloadGroup(string name, WorkloadGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:sql:WorkloadGroup", name, args ?? new WorkloadGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkloadGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:sql:WorkloadGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20211101:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20221101preview:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20230201preview:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20230501preview:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20230801preview:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20240501preview:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20190601preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20200202preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20200801preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20201101preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20210201preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20210501preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20210801preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20211101:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20211101preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20220201preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20220501preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20220801preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20221101preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20230201preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20230501preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20230801:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20230801preview:sql:WorkloadGroup" },
                    new global::Pulumi.Alias { Type = "azure-native_sql_v20240501preview:sql:WorkloadGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkloadGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkloadGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WorkloadGroup(name, id, options);
        }
    }

    public sealed class WorkloadGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The workload group importance level.
        /// </summary>
        [Input("importance")]
        public Input<string>? Importance { get; set; }

        /// <summary>
        /// The workload group cap percentage resource.
        /// </summary>
        [Input("maxResourcePercent", required: true)]
        public Input<int> MaxResourcePercent { get; set; } = null!;

        /// <summary>
        /// The workload group request maximum grant percentage.
        /// </summary>
        [Input("maxResourcePercentPerRequest")]
        public Input<double>? MaxResourcePercentPerRequest { get; set; }

        /// <summary>
        /// The workload group minimum percentage resource.
        /// </summary>
        [Input("minResourcePercent", required: true)]
        public Input<int> MinResourcePercent { get; set; } = null!;

        /// <summary>
        /// The workload group request minimum grant percentage.
        /// </summary>
        [Input("minResourcePercentPerRequest", required: true)]
        public Input<double> MinResourcePercentPerRequest { get; set; } = null!;

        /// <summary>
        /// The workload group query execution timeout.
        /// </summary>
        [Input("queryExecutionTimeout")]
        public Input<int>? QueryExecutionTimeout { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the workload group.
        /// </summary>
        [Input("workloadGroupName")]
        public Input<string>? WorkloadGroupName { get; set; }

        public WorkloadGroupArgs()
        {
        }
        public static new WorkloadGroupArgs Empty => new WorkloadGroupArgs();
    }
}
