// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20201101Preview
{
    /// <summary>
    /// A database vulnerability assessment.
    /// </summary>
    [AzureNativeResourceType("azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessment")]
    public partial class DatabaseVulnerabilityAssessment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The recurring scans settings
        /// </summary>
        [Output("recurringScans")]
        public Output<Outputs.VulnerabilityAssessmentRecurringScansPropertiesResponse?> RecurringScans { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseVulnerabilityAssessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseVulnerabilityAssessment(string name, DatabaseVulnerabilityAssessmentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessment", name, args ?? new DatabaseVulnerabilityAssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseVulnerabilityAssessment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:sql:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20170301preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20200202preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20200801preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210201preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210501preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210801preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20211101:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20211101preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220201preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220501preview:DatabaseVulnerabilityAssessment"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220801preview:DatabaseVulnerabilityAssessment"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseVulnerabilityAssessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseVulnerabilityAssessment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DatabaseVulnerabilityAssessment(name, id, options);
        }
    }

    public sealed class DatabaseVulnerabilityAssessmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database for which the vulnerability assessment is defined.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The recurring scans settings
        /// </summary>
        [Input("recurringScans")]
        public Input<Inputs.VulnerabilityAssessmentRecurringScansPropertiesArgs>? RecurringScans { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
        /// </summary>
        [Input("storageAccountAccessKey")]
        public Input<string>? StorageAccountAccessKey { get; set; }

        /// <summary>
        /// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set
        /// </summary>
        [Input("storageContainerPath")]
        public Input<string>? StorageContainerPath { get; set; }

        /// <summary>
        /// A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
        /// </summary>
        [Input("storageContainerSasKey")]
        public Input<string>? StorageContainerSasKey { get; set; }

        /// <summary>
        /// The name of the vulnerability assessment.
        /// </summary>
        [Input("vulnerabilityAssessmentName")]
        public Input<string>? VulnerabilityAssessmentName { get; set; }

        public DatabaseVulnerabilityAssessmentArgs()
        {
        }
        public static new DatabaseVulnerabilityAssessmentArgs Empty => new DatabaseVulnerabilityAssessmentArgs();
    }
}
