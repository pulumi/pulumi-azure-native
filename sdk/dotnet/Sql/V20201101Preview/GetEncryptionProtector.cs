// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20201101Preview
{
    public static class GetEncryptionProtector
    {
        /// <summary>
        /// The server encryption protector.
        /// </summary>
        public static Task<GetEncryptionProtectorResult> InvokeAsync(GetEncryptionProtectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEncryptionProtectorResult>("azure-native:sql/v20201101preview:getEncryptionProtector", args ?? new GetEncryptionProtectorArgs(), options.WithDefaults());

        /// <summary>
        /// The server encryption protector.
        /// </summary>
        public static Output<GetEncryptionProtectorResult> Invoke(GetEncryptionProtectorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEncryptionProtectorResult>("azure-native:sql/v20201101preview:getEncryptionProtector", args ?? new GetEncryptionProtectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEncryptionProtectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the encryption protector to be retrieved.
        /// </summary>
        [Input("encryptionProtectorName", required: true)]
        public string EncryptionProtectorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetEncryptionProtectorArgs()
        {
        }
        public static new GetEncryptionProtectorArgs Empty => new GetEncryptionProtectorArgs();
    }

    public sealed class GetEncryptionProtectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the encryption protector to be retrieved.
        /// </summary>
        [Input("encryptionProtectorName", required: true)]
        public Input<string> EncryptionProtectorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetEncryptionProtectorInvokeArgs()
        {
        }
        public static new GetEncryptionProtectorInvokeArgs Empty => new GetEncryptionProtectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetEncryptionProtectorResult
    {
        /// <summary>
        /// Key auto rotation opt-in flag. Either true or false.
        /// </summary>
        public readonly bool? AutoRotationEnabled;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of encryption protector. This is metadata used for the Azure portal experience.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the server key.
        /// </summary>
        public readonly string? ServerKeyName;
        /// <summary>
        /// The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
        /// </summary>
        public readonly string ServerKeyType;
        /// <summary>
        /// Subregion of the encryption protector.
        /// </summary>
        public readonly string Subregion;
        /// <summary>
        /// Thumbprint of the server key.
        /// </summary>
        public readonly string Thumbprint;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The URI of the server key.
        /// </summary>
        public readonly string Uri;

        [OutputConstructor]
        private GetEncryptionProtectorResult(
            bool? autoRotationEnabled,

            string id,

            string kind,

            string location,

            string name,

            string? serverKeyName,

            string serverKeyType,

            string subregion,

            string thumbprint,

            string type,

            string uri)
        {
            AutoRotationEnabled = autoRotationEnabled;
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            ServerKeyName = serverKeyName;
            ServerKeyType = serverKeyType;
            Subregion = subregion;
            Thumbprint = thumbprint;
            Type = type;
            Uri = uri;
        }
    }
}
