// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetServer
    {
        /// <summary>
        /// Gets a server.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2014-04-01, 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetServerResult> InvokeAsync(GetServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerResult>("azure-native:sql:getServer", args ?? new GetServerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a server.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2014-04-01, 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetServerResult> Invoke(GetServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerResult>("azure-native:sql:getServer", args ?? new GetServerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a server.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2014-04-01, 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview, 2024-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetServerResult> Invoke(GetServerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerResult>("azure-native:sql:getServer", args ?? new GetServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The child resources to include in the response.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetServerArgs()
        {
        }
        public static new GetServerArgs Empty => new GetServerArgs();
    }

    public sealed class GetServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The child resources to include in the response.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetServerInvokeArgs()
        {
        }
        public static new GetServerInvokeArgs Empty => new GetServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerResult
    {
        /// <summary>
        /// Administrator username for the server. Once created it cannot be changed.
        /// </summary>
        public readonly string? AdministratorLogin;
        /// <summary>
        /// The Azure Active Directory administrator of the server. This can only be used at server create time. If used for server update, it will be ignored or it will result in an error. For updates individual APIs will need to be used.
        /// </summary>
        public readonly Outputs.ServerExternalAdministratorResponse? Administrators;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Status of external governance.
        /// </summary>
        public readonly string ExternalGovernanceStatus;
        /// <summary>
        /// The Client id used for cross tenant CMK scenario
        /// </summary>
        public readonly string? FederatedClientId;
        /// <summary>
        /// The fully qualified domain name of the server.
        /// </summary>
        public readonly string FullyQualifiedDomainName;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Active Directory identity of the server.
        /// </summary>
        public readonly Outputs.ResourceIdentityResponse? Identity;
        /// <summary>
        /// Whether or not to enable IPv6 support for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        public readonly string? IsIPv6Enabled;
        /// <summary>
        /// A CMK URI of the key to use for encryption.
        /// </summary>
        public readonly string? KeyId;
        /// <summary>
        /// Kind of sql server. This is metadata used for the Azure portal experience.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Minimal TLS version. Allowed values: 'None', 1.0', '1.1', '1.2', '1.3'
        /// </summary>
        public readonly string? MinimalTlsVersion;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource id of a user assigned identity to be used by default.
        /// </summary>
        public readonly string? PrimaryUserAssignedIdentityId;
        /// <summary>
        /// List of private endpoint connections on a server
        /// </summary>
        public readonly ImmutableArray<Outputs.ServerPrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' or 'SecuredByPerimeter'
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        public readonly string? RestrictOutboundNetworkAccess;
        /// <summary>
        /// The state of the server.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the server.
        /// </summary>
        public readonly string? Version;
        /// <summary>
        /// Whether or not existing server has a workspace created and if it allows connection from workspace
        /// </summary>
        public readonly string WorkspaceFeature;

        [OutputConstructor]
        private GetServerResult(
            string? administratorLogin,

            Outputs.ServerExternalAdministratorResponse? administrators,

            string azureApiVersion,

            string externalGovernanceStatus,

            string? federatedClientId,

            string fullyQualifiedDomainName,

            string id,

            Outputs.ResourceIdentityResponse? identity,

            string? isIPv6Enabled,

            string? keyId,

            string kind,

            string location,

            string? minimalTlsVersion,

            string name,

            string? primaryUserAssignedIdentityId,

            ImmutableArray<Outputs.ServerPrivateEndpointConnectionResponse> privateEndpointConnections,

            string? publicNetworkAccess,

            string? restrictOutboundNetworkAccess,

            string state,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version,

            string workspaceFeature)
        {
            AdministratorLogin = administratorLogin;
            Administrators = administrators;
            AzureApiVersion = azureApiVersion;
            ExternalGovernanceStatus = externalGovernanceStatus;
            FederatedClientId = federatedClientId;
            FullyQualifiedDomainName = fullyQualifiedDomainName;
            Id = id;
            Identity = identity;
            IsIPv6Enabled = isIPv6Enabled;
            KeyId = keyId;
            Kind = kind;
            Location = location;
            MinimalTlsVersion = minimalTlsVersion;
            Name = name;
            PrimaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            RestrictOutboundNetworkAccess = restrictOutboundNetworkAccess;
            State = state;
            Tags = tags;
            Type = type;
            Version = version;
            WorkspaceFeature = workspaceFeature;
        }
    }
}
