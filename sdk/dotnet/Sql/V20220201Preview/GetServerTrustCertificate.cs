// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20220201Preview
{
    public static class GetServerTrustCertificate
    {
        /// <summary>
        /// Server trust certificate imported from box to enable connection between box and Sql Managed Instance.
        /// </summary>
        public static Task<GetServerTrustCertificateResult> InvokeAsync(GetServerTrustCertificateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerTrustCertificateResult>("azure-native:sql/v20220201preview:getServerTrustCertificate", args ?? new GetServerTrustCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Server trust certificate imported from box to enable connection between box and Sql Managed Instance.
        /// </summary>
        public static Output<GetServerTrustCertificateResult> Invoke(GetServerTrustCertificateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServerTrustCertificateResult>("azure-native:sql/v20220201preview:getServerTrustCertificate", args ?? new GetServerTrustCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerTrustCertificateArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of of the certificate to get.
        /// </summary>
        [Input("certificateName", required: true)]
        public string CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetServerTrustCertificateArgs()
        {
        }
    }

    public sealed class GetServerTrustCertificateInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of of the certificate to get.
        /// </summary>
        [Input("certificateName", required: true)]
        public Input<string> CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetServerTrustCertificateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerTrustCertificateResult
    {
        /// <summary>
        /// The certificate name
        /// </summary>
        public readonly string CertificateName;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The certificate public blob
        /// </summary>
        public readonly string? PublicBlob;
        /// <summary>
        /// The certificate thumbprint
        /// </summary>
        public readonly string Thumbprint;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServerTrustCertificateResult(
            string certificateName,

            string id,

            string name,

            string? publicBlob,

            string thumbprint,

            string type)
        {
            CertificateName = certificateName;
            Id = id;
            Name = name;
            PublicBlob = publicBlob;
            Thumbprint = thumbprint;
            Type = type;
        }
    }
}
