// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20210801Preview
{
    public static class GetFailoverGroup
    {
        /// <summary>
        /// Gets a failover group.
        /// </summary>
        public static Task<GetFailoverGroupResult> InvokeAsync(GetFailoverGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFailoverGroupResult>("azure-native:sql/v20210801preview:getFailoverGroup", args ?? new GetFailoverGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a failover group.
        /// </summary>
        public static Output<GetFailoverGroupResult> Invoke(GetFailoverGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFailoverGroupResult>("azure-native:sql/v20210801preview:getFailoverGroup", args ?? new GetFailoverGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFailoverGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the failover group.
        /// </summary>
        [Input("failoverGroupName", required: true)]
        public string FailoverGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server containing the failover group.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetFailoverGroupArgs()
        {
        }
        public static new GetFailoverGroupArgs Empty => new GetFailoverGroupArgs();
    }

    public sealed class GetFailoverGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the failover group.
        /// </summary>
        [Input("failoverGroupName", required: true)]
        public Input<string> FailoverGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server containing the failover group.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetFailoverGroupInvokeArgs()
        {
        }
        public static new GetFailoverGroupInvokeArgs Empty => new GetFailoverGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetFailoverGroupResult
    {
        /// <summary>
        /// List of databases in the failover group.
        /// </summary>
        public readonly ImmutableArray<string> Databases;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of partner server information for the failover group.
        /// </summary>
        public readonly ImmutableArray<Outputs.PartnerInfoResponse> PartnerServers;
        /// <summary>
        /// Read-only endpoint of the failover group instance.
        /// </summary>
        public readonly Outputs.FailoverGroupReadOnlyEndpointResponse? ReadOnlyEndpoint;
        /// <summary>
        /// Read-write endpoint of the failover group instance.
        /// </summary>
        public readonly Outputs.FailoverGroupReadWriteEndpointResponse ReadWriteEndpoint;
        /// <summary>
        /// Local replication role of the failover group instance.
        /// </summary>
        public readonly string ReplicationRole;
        /// <summary>
        /// Replication state of the failover group instance.
        /// </summary>
        public readonly string ReplicationState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFailoverGroupResult(
            ImmutableArray<string> databases,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.PartnerInfoResponse> partnerServers,

            Outputs.FailoverGroupReadOnlyEndpointResponse? readOnlyEndpoint,

            Outputs.FailoverGroupReadWriteEndpointResponse readWriteEndpoint,

            string replicationRole,

            string replicationState,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Databases = databases;
            Id = id;
            Location = location;
            Name = name;
            PartnerServers = partnerServers;
            ReadOnlyEndpoint = readOnlyEndpoint;
            ReadWriteEndpoint = readWriteEndpoint;
            ReplicationRole = replicationRole;
            ReplicationState = replicationState;
            Tags = tags;
            Type = type;
        }
    }
}
