// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Sql.Inputs
{

    /// <summary>
    /// Represents the properties of a server.
    /// </summary>
    public sealed class ServerPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrator username for the server. Can only be specified when the server is being created (and is required for creation).
        /// </summary>
        [Input("administratorLogin")]
        public Input<string>? AdministratorLogin { get; set; }

        /// <summary>
        /// The administrator login password (required for server creation).
        /// </summary>
        [Input("administratorLoginPassword")]
        public Input<string>? AdministratorLoginPassword { get; set; }

        /// <summary>
        /// The display name of the Azure Active Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators
        /// </summary>
        [Input("externalAdministratorLogin", required: true)]
        public Input<string> ExternalAdministratorLogin { get; set; } = null!;

        /// <summary>
        /// The ID of the Active Azure Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators.
        /// </summary>
        [Input("externalAdministratorSid", required: true)]
        public Input<string> ExternalAdministratorSid { get; set; } = null!;

        /// <summary>
        /// The fully qualified domain name of the server.
        /// </summary>
        [Input("fullyQualifiedDomainName", required: true)]
        public Input<string> FullyQualifiedDomainName { get; set; } = null!;

        /// <summary>
        /// The state of the server.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The version of the server.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ServerPropertiesResponseGetArgs()
        {
        }
    }
}
