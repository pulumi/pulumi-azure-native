// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Sql.Inputs
{

    /// <summary>
    /// Represents the properties of a database recommended index.
    /// </summary>
    public sealed class RecommendedIndexPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("columns", required: true)]
        private InputList<string>? _columns;

        /// <summary>
        /// Columns over which to build index
        /// </summary>
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        /// <summary>
        /// The UTC datetime showing when this resource was created (ISO8601 format).
        /// </summary>
        [Input("created", required: true)]
        public Input<string> Created { get; set; } = null!;

        [Input("estimatedImpact", required: true)]
        private InputList<Inputs.OperationImpactResponseGetArgs>? _estimatedImpact;

        /// <summary>
        /// The estimated impact of doing recommended index action.
        /// </summary>
        public InputList<Inputs.OperationImpactResponseGetArgs> EstimatedImpact
        {
            get => _estimatedImpact ?? (_estimatedImpact = new InputList<Inputs.OperationImpactResponseGetArgs>());
            set => _estimatedImpact = value;
        }

        [Input("includedColumns", required: true)]
        private InputList<string>? _includedColumns;

        /// <summary>
        /// The list of column names to be included in the index
        /// </summary>
        public InputList<string> IncludedColumns
        {
            get => _includedColumns ?? (_includedColumns = new InputList<string>());
            set => _includedColumns = value;
        }

        /// <summary>
        /// The full build index script
        /// </summary>
        [Input("indexScript", required: true)]
        public Input<string> IndexScript { get; set; } = null!;

        /// <summary>
        /// The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)
        /// </summary>
        [Input("indexType", required: true)]
        public Input<string> IndexType { get; set; } = null!;

        /// <summary>
        /// The UTC datetime of when was this resource last changed (ISO8601 format).
        /// </summary>
        [Input("lastModified", required: true)]
        public Input<string> LastModified { get; set; } = null!;

        [Input("reportedImpact", required: true)]
        private InputList<Inputs.OperationImpactResponseGetArgs>? _reportedImpact;

        /// <summary>
        /// The values reported after index action is complete.
        /// </summary>
        public InputList<Inputs.OperationImpactResponseGetArgs> ReportedImpact
        {
            get => _reportedImpact ?? (_reportedImpact = new InputList<Inputs.OperationImpactResponseGetArgs>());
            set => _reportedImpact = value;
        }

        /// <summary>
        /// The schema where table to build index over resides
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// The current recommendation state.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The table on which to build index.
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        public RecommendedIndexPropertiesResponseGetArgs()
        {
        }
    }
}
