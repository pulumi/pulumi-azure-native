// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetSyncMember
    {
        /// <summary>
        /// Gets a sync member.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetSyncMemberResult> InvokeAsync(GetSyncMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSyncMemberResult>("azure-native:sql:getSyncMember", args ?? new GetSyncMemberArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a sync member.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetSyncMemberResult> Invoke(GetSyncMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyncMemberResult>("azure-native:sql:getSyncMember", args ?? new GetSyncMemberInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a sync member.
        /// 
        /// Uses Azure REST API version 2023-08-01.
        /// 
        /// Other available API versions: 2015-05-01-preview, 2019-06-01-preview, 2020-02-02-preview, 2020-08-01-preview, 2020-11-01-preview, 2021-02-01-preview, 2021-05-01-preview, 2021-08-01-preview, 2021-11-01, 2021-11-01-preview, 2022-02-01-preview, 2022-05-01-preview, 2022-08-01-preview, 2022-11-01-preview, 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview, 2024-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetSyncMemberResult> Invoke(GetSyncMemberInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyncMemberResult>("azure-native:sql:getSyncMember", args ?? new GetSyncMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSyncMemberArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database on which the sync group is hosted.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the sync group on which the sync member is hosted.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public string SyncGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the sync member.
        /// </summary>
        [Input("syncMemberName", required: true)]
        public string SyncMemberName { get; set; } = null!;

        public GetSyncMemberArgs()
        {
        }
        public static new GetSyncMemberArgs Empty => new GetSyncMemberArgs();
    }

    public sealed class GetSyncMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database on which the sync group is hosted.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the sync group on which the sync member is hosted.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public Input<string> SyncGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the sync member.
        /// </summary>
        [Input("syncMemberName", required: true)]
        public Input<string> SyncMemberName { get; set; } = null!;

        public GetSyncMemberInvokeArgs()
        {
        }
        public static new GetSyncMemberInvokeArgs Empty => new GetSyncMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetSyncMemberResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Database name of the member database in the sync member.
        /// </summary>
        public readonly string? DatabaseName;
        /// <summary>
        /// Database type of the sync member.
        /// </summary>
        public readonly string? DatabaseType;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Private endpoint name of the sync member if use private link connection is enabled, for sync members in Azure.
        /// </summary>
        public readonly string PrivateEndpointName;
        /// <summary>
        /// Server name of the member database in the sync member
        /// </summary>
        public readonly string? ServerName;
        /// <summary>
        /// SQL Server database id of the sync member.
        /// </summary>
        public readonly string? SqlServerDatabaseId;
        /// <summary>
        /// ARM resource id of the sync agent in the sync member.
        /// </summary>
        public readonly string? SyncAgentId;
        /// <summary>
        /// Sync direction of the sync member.
        /// </summary>
        public readonly string? SyncDirection;
        /// <summary>
        /// ARM resource id of the sync member logical database, for sync members in Azure.
        /// </summary>
        public readonly string? SyncMemberAzureDatabaseResourceId;
        /// <summary>
        /// Sync state of the sync member.
        /// </summary>
        public readonly string SyncState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Whether to use private link connection.
        /// </summary>
        public readonly bool? UsePrivateLinkConnection;
        /// <summary>
        /// User name of the member database in the sync member.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private GetSyncMemberResult(
            string azureApiVersion,

            string? databaseName,

            string? databaseType,

            string id,

            string name,

            string privateEndpointName,

            string? serverName,

            string? sqlServerDatabaseId,

            string? syncAgentId,

            string? syncDirection,

            string? syncMemberAzureDatabaseResourceId,

            string syncState,

            string type,

            bool? usePrivateLinkConnection,

            string? userName)
        {
            AzureApiVersion = azureApiVersion;
            DatabaseName = databaseName;
            DatabaseType = databaseType;
            Id = id;
            Name = name;
            PrivateEndpointName = privateEndpointName;
            ServerName = serverName;
            SqlServerDatabaseId = sqlServerDatabaseId;
            SyncAgentId = syncAgentId;
            SyncDirection = syncDirection;
            SyncMemberAzureDatabaseResourceId = syncMemberAzureDatabaseResourceId;
            SyncState = syncState;
            Type = type;
            UsePrivateLinkConnection = usePrivateLinkConnection;
            UserName = userName;
        }
    }
}
