// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetManagedInstanceKey
    {
        /// <summary>
        /// Gets a managed instance key.
        /// API Version: 2020-11-01-preview.
        /// </summary>
        public static Task<GetManagedInstanceKeyResult> InvokeAsync(GetManagedInstanceKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceKeyResult>("azure-native:sql:getManagedInstanceKey", args ?? new GetManagedInstanceKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a managed instance key.
        /// API Version: 2020-11-01-preview.
        /// </summary>
        public static Output<GetManagedInstanceKeyResult> Invoke(GetManagedInstanceKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceKeyResult>("azure-native:sql:getManagedInstanceKey", args ?? new GetManagedInstanceKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed instance key to be retrieved.
        /// </summary>
        [Input("keyName", required: true)]
        public string KeyName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedInstanceKeyArgs()
        {
        }
        public static new GetManagedInstanceKeyArgs Empty => new GetManagedInstanceKeyArgs();
    }

    public sealed class GetManagedInstanceKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the managed instance key to be retrieved.
        /// </summary>
        [Input("keyName", required: true)]
        public Input<string> KeyName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedInstanceKeyInvokeArgs()
        {
        }
        public static new GetManagedInstanceKeyInvokeArgs Empty => new GetManagedInstanceKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceKeyResult
    {
        /// <summary>
        /// Key auto rotation opt-in flag. Either true or false.
        /// </summary>
        public readonly bool AutoRotationEnabled;
        /// <summary>
        /// The key creation date.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of encryption protector. This is metadata used for the Azure portal experience.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Thumbprint of the key.
        /// </summary>
        public readonly string Thumbprint;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedInstanceKeyResult(
            bool autoRotationEnabled,

            string creationDate,

            string id,

            string kind,

            string name,

            string thumbprint,

            string type)
        {
            AutoRotationEnabled = autoRotationEnabled;
            CreationDate = creationDate;
            Id = id;
            Kind = kind;
            Name = name;
            Thumbprint = thumbprint;
            Type = type;
        }
    }
}
