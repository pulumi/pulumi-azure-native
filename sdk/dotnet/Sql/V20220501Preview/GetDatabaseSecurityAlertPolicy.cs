// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql.V20220501Preview
{
    public static class GetDatabaseSecurityAlertPolicy
    {
        /// <summary>
        /// Gets a database's security alert policy.
        /// </summary>
        public static Task<GetDatabaseSecurityAlertPolicyResult> InvokeAsync(GetDatabaseSecurityAlertPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseSecurityAlertPolicyResult>("azure-native:sql/v20220501preview:getDatabaseSecurityAlertPolicy", args ?? new GetDatabaseSecurityAlertPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a database's security alert policy.
        /// </summary>
        public static Output<GetDatabaseSecurityAlertPolicyResult> Invoke(GetDatabaseSecurityAlertPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseSecurityAlertPolicyResult>("azure-native:sql/v20220501preview:getDatabaseSecurityAlertPolicy", args ?? new GetDatabaseSecurityAlertPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseSecurityAlertPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the  database for which the security alert policy is defined.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the security alert policy.
        /// </summary>
        [Input("securityAlertPolicyName", required: true)]
        public string SecurityAlertPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the  server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetDatabaseSecurityAlertPolicyArgs()
        {
        }
        public static new GetDatabaseSecurityAlertPolicyArgs Empty => new GetDatabaseSecurityAlertPolicyArgs();
    }

    public sealed class GetDatabaseSecurityAlertPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the  database for which the security alert policy is defined.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the security alert policy.
        /// </summary>
        [Input("securityAlertPolicyName", required: true)]
        public Input<string> SecurityAlertPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the  server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetDatabaseSecurityAlertPolicyInvokeArgs()
        {
        }
        public static new GetDatabaseSecurityAlertPolicyInvokeArgs Empty => new GetDatabaseSecurityAlertPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseSecurityAlertPolicyResult
    {
        /// <summary>
        /// Specifies the UTC creation time of the policy.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force
        /// </summary>
        public readonly ImmutableArray<string> DisabledAlerts;
        /// <summary>
        /// Specifies that the alert is sent to the account administrators.
        /// </summary>
        public readonly bool? EmailAccountAdmins;
        /// <summary>
        /// Specifies an array of e-mail addresses to which the alert is sent.
        /// </summary>
        public readonly ImmutableArray<string> EmailAddresses;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the number of days to keep in the Threat Detection audit logs.
        /// </summary>
        public readonly int? RetentionDays;
        /// <summary>
        /// Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Specifies the identifier key of the Threat Detection audit storage account.
        /// </summary>
        public readonly string? StorageAccountAccessKey;
        /// <summary>
        /// Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
        /// </summary>
        public readonly string? StorageEndpoint;
        /// <summary>
        /// SystemData of SecurityAlertPolicyResource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDatabaseSecurityAlertPolicyResult(
            string creationTime,

            ImmutableArray<string> disabledAlerts,

            bool? emailAccountAdmins,

            ImmutableArray<string> emailAddresses,

            string id,

            string name,

            int? retentionDays,

            string state,

            string? storageAccountAccessKey,

            string? storageEndpoint,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            CreationTime = creationTime;
            DisabledAlerts = disabledAlerts;
            EmailAccountAdmins = emailAccountAdmins;
            EmailAddresses = emailAddresses;
            Id = id;
            Name = name;
            RetentionDays = retentionDays;
            State = state;
            StorageAccountAccessKey = storageAccountAccessKey;
            StorageEndpoint = storageEndpoint;
            SystemData = systemData;
            Type = type;
        }
    }
}
