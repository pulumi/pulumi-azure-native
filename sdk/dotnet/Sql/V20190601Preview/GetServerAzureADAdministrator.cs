// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Sql.V20190601Preview
{
    public static class GetServerAzureADAdministrator
    {
        public static Task<GetServerAzureADAdministratorResult> InvokeAsync(GetServerAzureADAdministratorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerAzureADAdministratorResult>("azure-nextgen:sql/v20190601preview:getServerAzureADAdministrator", args ?? new GetServerAzureADAdministratorArgs(), options.WithVersion());
    }


    public sealed class GetServerAzureADAdministratorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of server active directory administrator.
        /// </summary>
        [Input("administratorName", required: true)]
        public string AdministratorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetServerAzureADAdministratorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerAzureADAdministratorResult
    {
        /// <summary>
        /// Type of the sever administrator.
        /// </summary>
        public readonly string AdministratorType;
        /// <summary>
        /// Azure Active Directory only Authentication enabled.
        /// </summary>
        public readonly bool AzureADOnlyAuthentication;
        /// <summary>
        /// Login name of the server administrator.
        /// </summary>
        public readonly string Login;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SID (object ID) of the server administrator.
        /// </summary>
        public readonly string Sid;
        /// <summary>
        /// Tenant ID of the administrator.
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServerAzureADAdministratorResult(
            string administratorType,

            bool azureADOnlyAuthentication,

            string login,

            string name,

            string sid,

            string? tenantId,

            string type)
        {
            AdministratorType = administratorType;
            AzureADOnlyAuthentication = azureADOnlyAuthentication;
            Login = login;
            Name = name;
            Sid = sid;
            TenantId = tenantId;
            Type = type;
        }
    }
}
