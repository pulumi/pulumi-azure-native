// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    public static class GetManagedInstanceAdministrator
    {
        /// <summary>
        /// An Azure SQL managed instance administrator.
        /// API Version: 2020-11-01-preview.
        /// </summary>
        public static Task<GetManagedInstanceAdministratorResult> InvokeAsync(GetManagedInstanceAdministratorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceAdministratorResult>("azure-native:sql:getManagedInstanceAdministrator", args ?? new GetManagedInstanceAdministratorArgs(), options.WithDefaults());

        /// <summary>
        /// An Azure SQL managed instance administrator.
        /// API Version: 2020-11-01-preview.
        /// </summary>
        public static Output<GetManagedInstanceAdministratorResult> Invoke(GetManagedInstanceAdministratorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagedInstanceAdministratorResult>("azure-native:sql:getManagedInstanceAdministrator", args ?? new GetManagedInstanceAdministratorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceAdministratorArgs : global::Pulumi.InvokeArgs
    {
        [Input("administratorName", required: true)]
        public string AdministratorName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public string ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedInstanceAdministratorArgs()
        {
        }
        public static new GetManagedInstanceAdministratorArgs Empty => new GetManagedInstanceAdministratorArgs();
    }

    public sealed class GetManagedInstanceAdministratorInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("administratorName", required: true)]
        public Input<string> AdministratorName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedInstanceAdministratorInvokeArgs()
        {
        }
        public static new GetManagedInstanceAdministratorInvokeArgs Empty => new GetManagedInstanceAdministratorInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceAdministratorResult
    {
        /// <summary>
        /// Type of the managed instance administrator.
        /// </summary>
        public readonly string AdministratorType;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Login name of the managed instance administrator.
        /// </summary>
        public readonly string Login;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SID (object ID) of the managed instance administrator.
        /// </summary>
        public readonly string Sid;
        /// <summary>
        /// Tenant ID of the managed instance administrator.
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedInstanceAdministratorResult(
            string administratorType,

            string id,

            string login,

            string name,

            string sid,

            string? tenantId,

            string type)
        {
            AdministratorType = administratorType;
            Id = id;
            Login = login;
            Name = name;
            Sid = sid;
            TenantId = tenantId;
            Type = type;
        }
    }
}
