// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    /// <summary>
    /// A replication link.
    /// Azure REST API version: 2023-05-01-preview.
    /// 
    /// Other available API versions: 2023-08-01-preview, 2024-05-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:sql:ReplicationLink")]
    public partial class ReplicationLink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the user is currently allowed to terminate the link.
        /// </summary>
        [Output("isTerminationAllowed")]
        public Output<bool> IsTerminationAllowed { get; private set; } = null!;

        /// <summary>
        /// Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
        /// </summary>
        [Output("linkType")]
        public Output<string?> LinkType { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource partner database.
        /// </summary>
        [Output("partnerDatabase")]
        public Output<string> PartnerDatabase { get; private set; } = null!;

        /// <summary>
        /// Resource partner database Id.
        /// </summary>
        [Output("partnerDatabaseId")]
        public Output<string> PartnerDatabaseId { get; private set; } = null!;

        /// <summary>
        /// Resource partner location.
        /// </summary>
        [Output("partnerLocation")]
        public Output<string> PartnerLocation { get; private set; } = null!;

        /// <summary>
        /// Partner replication role.
        /// </summary>
        [Output("partnerRole")]
        public Output<string> PartnerRole { get; private set; } = null!;

        /// <summary>
        /// Resource partner server.
        /// </summary>
        [Output("partnerServer")]
        public Output<string> PartnerServer { get; private set; } = null!;

        /// <summary>
        /// Seeding completion percentage for the link.
        /// </summary>
        [Output("percentComplete")]
        public Output<int> PercentComplete { get; private set; } = null!;

        /// <summary>
        /// Replication mode.
        /// </summary>
        [Output("replicationMode")]
        public Output<string> ReplicationMode { get; private set; } = null!;

        /// <summary>
        /// Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED).
        /// </summary>
        [Output("replicationState")]
        public Output<string> ReplicationState { get; private set; } = null!;

        /// <summary>
        /// Local replication role.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// Time at which the link was created.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicationLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicationLink(string name, ReplicationLinkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:sql:ReplicationLink", name, args ?? new ReplicationLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicationLink(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:sql:ReplicationLink", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20230501preview:ReplicationLink" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20230801preview:ReplicationLink" },
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20240501preview:ReplicationLink" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicationLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicationLink Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ReplicationLink(name, id, options);
        }
    }

    public sealed class ReplicationLinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        /// <summary>
        /// Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
        /// </summary>
        [Input("linkType")]
        public InputUnion<string, Pulumi.AzureNative.Sql.ReplicationLinkType>? LinkType { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public ReplicationLinkArgs()
        {
        }
        public static new ReplicationLinkArgs Empty => new ReplicationLinkArgs();
    }
}
