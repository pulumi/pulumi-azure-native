// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Sql.Latest
{
    public static class GetDisasterRecoveryConfiguration
    {
        public static Task<GetDisasterRecoveryConfigurationResult> InvokeAsync(GetDisasterRecoveryConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDisasterRecoveryConfigurationResult>("azure-nextgen:sql/latest:getDisasterRecoveryConfiguration", args ?? new GetDisasterRecoveryConfigurationArgs(), options.WithVersion());
    }


    public sealed class GetDisasterRecoveryConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the disaster recovery configuration.
        /// </summary>
        [Input("disasterRecoveryConfigurationName", required: true)]
        public string DisasterRecoveryConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetDisasterRecoveryConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDisasterRecoveryConfigurationResult
    {
        /// <summary>
        /// Whether or not failover can be done automatically.
        /// </summary>
        public readonly string AutoFailover;
        /// <summary>
        /// How aggressive the automatic failover should be.
        /// </summary>
        public readonly string FailoverPolicy;
        /// <summary>
        /// Location of the server that contains this disaster recovery configuration.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Logical name of the server.
        /// </summary>
        public readonly string LogicalServerName;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Logical name of the partner server.
        /// </summary>
        public readonly string PartnerLogicalServerName;
        /// <summary>
        /// Id of the partner server.
        /// </summary>
        public readonly string PartnerServerId;
        /// <summary>
        /// The role of the current server in the disaster recovery configuration.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// The status of the disaster recovery configuration.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDisasterRecoveryConfigurationResult(
            string autoFailover,

            string failoverPolicy,

            string location,

            string logicalServerName,

            string name,

            string partnerLogicalServerName,

            string partnerServerId,

            string role,

            string status,

            string type)
        {
            AutoFailover = autoFailover;
            FailoverPolicy = failoverPolicy;
            Location = location;
            LogicalServerName = logicalServerName;
            Name = name;
            PartnerLogicalServerName = partnerLogicalServerName;
            PartnerServerId = partnerServerId;
            Role = role;
            Status = status;
            Type = type;
        }
    }
}
