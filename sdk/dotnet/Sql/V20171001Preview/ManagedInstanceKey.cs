// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Sql.V20171001Preview
{
    /// <summary>
    /// A managed instance key.
    /// </summary>
    public partial class ManagedInstanceKey : Pulumi.CustomResource
    {
        /// <summary>
        /// The key creation date.
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// Kind of encryption protector. This is metadata used for the Azure portal experience.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The key type like 'ServiceManaged', 'AzureKeyVault'.
        /// </summary>
        [Output("serverKeyType")]
        public Output<string> ServerKeyType { get; private set; } = null!;

        /// <summary>
        /// Thumbprint of the key.
        /// </summary>
        [Output("thumbprint")]
        public Output<string> Thumbprint { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
        /// </summary>
        [Output("uri")]
        public Output<string?> Uri { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedInstanceKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedInstanceKey(string name, ManagedInstanceKeyArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:sql/v20171001preview:ManagedInstanceKey", name, args ?? new ManagedInstanceKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedInstanceKey(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:sql/v20171001preview:ManagedInstanceKey", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedInstanceKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedInstanceKey Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ManagedInstanceKey(name, id, options);
        }
    }

    public sealed class ManagedInstanceKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed instance key to be operated on (updated or created).
        /// </summary>
        [Input("keyName", required: true)]
        public Input<string> KeyName { get; set; } = null!;

        /// <summary>
        /// The name of the managed instance.
        /// </summary>
        [Input("managedInstanceName", required: true)]
        public Input<string> ManagedInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The key type like 'ServiceManaged', 'AzureKeyVault'.
        /// </summary>
        [Input("serverKeyType", required: true)]
        public Input<string> ServerKeyType { get; set; } = null!;

        /// <summary>
        /// The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public ManagedInstanceKeyArgs()
        {
        }
    }
}
