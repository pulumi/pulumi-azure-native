// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Sql.V20150501Preview
{
    /// <summary>
    /// A failover group.
    /// </summary>
    public partial class FailoverGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// List of databases in the failover group.
        /// </summary>
        [Output("databases")]
        public Output<ImmutableArray<string>> Databases { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of partner server information for the failover group.
        /// </summary>
        [Output("partnerServers")]
        public Output<ImmutableArray<Outputs.PartnerInfoResponse>> PartnerServers { get; private set; } = null!;

        /// <summary>
        /// Read-only endpoint of the failover group instance.
        /// </summary>
        [Output("readOnlyEndpoint")]
        public Output<Outputs.FailoverGroupReadOnlyEndpointResponse?> ReadOnlyEndpoint { get; private set; } = null!;

        /// <summary>
        /// Read-write endpoint of the failover group instance.
        /// </summary>
        [Output("readWriteEndpoint")]
        public Output<Outputs.FailoverGroupReadWriteEndpointResponse> ReadWriteEndpoint { get; private set; } = null!;

        /// <summary>
        /// Local replication role of the failover group instance.
        /// </summary>
        [Output("replicationRole")]
        public Output<string> ReplicationRole { get; private set; } = null!;

        /// <summary>
        /// Replication state of the failover group instance.
        /// </summary>
        [Output("replicationState")]
        public Output<string> ReplicationState { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FailoverGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FailoverGroup(string name, FailoverGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:sql/v20150501preview:FailoverGroup", name, args ?? new FailoverGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FailoverGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:sql/v20150501preview:FailoverGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FailoverGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FailoverGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FailoverGroup(name, id, options);
        }
    }

    public sealed class FailoverGroupArgs : Pulumi.ResourceArgs
    {
        [Input("databases")]
        private InputList<string>? _databases;

        /// <summary>
        /// List of databases in the failover group.
        /// </summary>
        public InputList<string> Databases
        {
            get => _databases ?? (_databases = new InputList<string>());
            set => _databases = value;
        }

        /// <summary>
        /// The name of the failover group.
        /// </summary>
        [Input("failoverGroupName", required: true)]
        public Input<string> FailoverGroupName { get; set; } = null!;

        [Input("partnerServers", required: true)]
        private InputList<Inputs.PartnerInfoArgs>? _partnerServers;

        /// <summary>
        /// List of partner server information for the failover group.
        /// </summary>
        public InputList<Inputs.PartnerInfoArgs> PartnerServers
        {
            get => _partnerServers ?? (_partnerServers = new InputList<Inputs.PartnerInfoArgs>());
            set => _partnerServers = value;
        }

        /// <summary>
        /// Read-only endpoint of the failover group instance.
        /// </summary>
        [Input("readOnlyEndpoint")]
        public Input<Inputs.FailoverGroupReadOnlyEndpointArgs>? ReadOnlyEndpoint { get; set; }

        /// <summary>
        /// Read-write endpoint of the failover group instance.
        /// </summary>
        [Input("readWriteEndpoint", required: true)]
        public Input<Inputs.FailoverGroupReadWriteEndpointArgs> ReadWriteEndpoint { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server containing the failover group.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FailoverGroupArgs()
        {
        }
    }
}
