// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Sql.V20150501Preview
{
    public static class GetSyncMember
    {
        public static Task<GetSyncMemberResult> InvokeAsync(GetSyncMemberArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSyncMemberResult>("azure-nextgen:sql/v20150501preview:getSyncMember", args ?? new GetSyncMemberArgs(), options.WithVersion());
    }


    public sealed class GetSyncMemberArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database on which the sync group is hosted.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        /// <summary>
        /// The name of the sync group on which the sync member is hosted.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public string SyncGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the sync member.
        /// </summary>
        [Input("syncMemberName", required: true)]
        public string SyncMemberName { get; set; } = null!;

        public GetSyncMemberArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSyncMemberResult
    {
        /// <summary>
        /// Database name of the member database in the sync member.
        /// </summary>
        public readonly string? DatabaseName;
        /// <summary>
        /// Database type of the sync member.
        /// </summary>
        public readonly string? DatabaseType;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Password of the member database in the sync member.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Server name of the member database in the sync member
        /// </summary>
        public readonly string? ServerName;
        /// <summary>
        /// SQL Server database id of the sync member.
        /// </summary>
        public readonly string? SqlServerDatabaseId;
        /// <summary>
        /// ARM resource id of the sync agent in the sync member.
        /// </summary>
        public readonly string? SyncAgentId;
        /// <summary>
        /// Sync direction of the sync member.
        /// </summary>
        public readonly string? SyncDirection;
        /// <summary>
        /// Sync state of the sync member.
        /// </summary>
        public readonly string SyncState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// User name of the member database in the sync member.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private GetSyncMemberResult(
            string? databaseName,

            string? databaseType,

            string name,

            string? password,

            string? serverName,

            string? sqlServerDatabaseId,

            string? syncAgentId,

            string? syncDirection,

            string syncState,

            string type,

            string? userName)
        {
            DatabaseName = databaseName;
            DatabaseType = databaseType;
            Name = name;
            Password = password;
            ServerName = serverName;
            SqlServerDatabaseId = sqlServerDatabaseId;
            SyncAgentId = syncAgentId;
            SyncDirection = syncDirection;
            SyncState = syncState;
            Type = type;
            UserName = userName;
        }
    }
}
