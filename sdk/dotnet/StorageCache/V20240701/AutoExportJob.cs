// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageCache.V20240701
{
    /// <summary>
    /// An auto export job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    /// </summary>
    [AzureNativeResourceType("azure-native:storagecache/v20240701:AutoExportJob")]
    public partial class AutoExportJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        /// </summary>
        [Output("adminStatus")]
        public Output<string?> AdminStatus { get; private set; } = null!;

        /// <summary>
        /// An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        /// </summary>
        [Output("autoExportPrefixes")]
        public Output<ImmutableArray<string>> AutoExportPrefixes { get; private set; } = null!;

        /// <summary>
        /// Files discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Output("currentIterationFilesDiscovered")]
        public Output<double> CurrentIterationFilesDiscovered { get; private set; } = null!;

        /// <summary>
        /// Files that have been exported in current iteration.
        /// </summary>
        [Output("currentIterationFilesExported")]
        public Output<double> CurrentIterationFilesExported { get; private set; } = null!;

        /// <summary>
        /// Files failed to export in current iteration.
        /// </summary>
        [Output("currentIterationFilesFailed")]
        public Output<double> CurrentIterationFilesFailed { get; private set; } = null!;

        /// <summary>
        /// Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Output("currentIterationMiBDiscovered")]
        public Output<double> CurrentIterationMiBDiscovered { get; private set; } = null!;

        /// <summary>
        /// Data (in MiB) that have been exported in current iteration.
        /// </summary>
        [Output("currentIterationMiBExported")]
        public Output<double> CurrentIterationMiBExported { get; private set; } = null!;

        /// <summary>
        /// Number of iterations completed since the start of the export.
        /// </summary>
        [Output("exportIterationCount")]
        public Output<int> ExportIterationCount { get; private set; } = null!;

        /// <summary>
        /// The time (in UTC) of the last completed auto export job.
        /// </summary>
        [Output("lastCompletionTimeUTC")]
        public Output<string> LastCompletionTimeUTC { get; private set; } = null!;

        /// <summary>
        /// The time (in UTC) the latest auto export job started.
        /// </summary>
        [Output("lastStartedTimeUTC")]
        public Output<string> LastStartedTimeUTC { get; private set; } = null!;

        /// <summary>
        /// Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.
        /// </summary>
        [Output("lastSuccessfulIterationCompletionTimeUTC")]
        public Output<string> LastSuccessfulIterationCompletionTimeUTC { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ARM provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Server-defined status code for auto export job.
        /// </summary>
        [Output("statusCode")]
        public Output<string> StatusCode { get; private set; } = null!;

        /// <summary>
        /// Server-defined status message for auto export job.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Output("totalFilesExported")]
        public Output<double> TotalFilesExported { get; private set; } = null!;

        /// <summary>
        /// Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Output("totalFilesFailed")]
        public Output<double> TotalFilesFailed { get; private set; } = null!;

        /// <summary>
        /// Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Output("totalMiBExported")]
        public Output<double> TotalMiBExported { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AutoExportJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutoExportJob(string name, AutoExportJobArgs args, CustomResourceOptions? options = null)
            : base("azure-native:storagecache/v20240701:AutoExportJob", name, args ?? new AutoExportJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutoExportJob(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:storagecache/v20240701:AutoExportJob", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:storagecache/v20240701:autoExportJob" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutoExportJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutoExportJob Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AutoExportJob(name, id, options);
        }
    }

    public sealed class AutoExportJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
        /// </summary>
        [Input("adminStatus")]
        public InputUnion<string, Pulumi.AzureNative.StorageCache.V20240701.AutoExportJobAdminStatus>? AdminStatus { get; set; }

        /// <summary>
        /// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        /// </summary>
        [Input("amlFilesystemName", required: true)]
        public Input<string> AmlFilesystemName { get; set; } = null!;

        /// <summary>
        /// Name for the auto export job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        /// </summary>
        [Input("autoExportJobName")]
        public Input<string>? AutoExportJobName { get; set; }

        [Input("autoExportPrefixes")]
        private InputList<string>? _autoExportPrefixes;

        /// <summary>
        /// An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
        /// </summary>
        public InputList<string> AutoExportPrefixes
        {
            get => _autoExportPrefixes ?? (_autoExportPrefixes = new InputList<string>());
            set => _autoExportPrefixes = value;
        }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.
        /// </summary>
        [Input("state")]
        public InputUnion<string, Pulumi.AzureNative.StorageCache.V20240701.AutoExportStatusType>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AutoExportJobArgs()
        {
            AdminStatus = "Active";
        }
        public static new AutoExportJobArgs Empty => new AutoExportJobArgs();
    }
}
