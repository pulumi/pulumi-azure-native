// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageCache.V20230301Preview
{
    public static class GetamlFilesystem
    {
        /// <summary>
        /// Returns an AML file system.
        /// </summary>
        public static Task<GetamlFilesystemResult> InvokeAsync(GetamlFilesystemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetamlFilesystemResult>("azure-native:storagecache/v20230301preview:getamlFilesystem", args ?? new GetamlFilesystemArgs(), options.WithDefaults());

        /// <summary>
        /// Returns an AML file system.
        /// </summary>
        public static Output<GetamlFilesystemResult> Invoke(GetamlFilesystemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetamlFilesystemResult>("azure-native:storagecache/v20230301preview:getamlFilesystem", args ?? new GetamlFilesystemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetamlFilesystemArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        /// </summary>
        [Input("amlFilesystemName", required: true)]
        public string AmlFilesystemName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetamlFilesystemArgs()
        {
        }
        public static new GetamlFilesystemArgs Empty => new GetamlFilesystemArgs();
    }

    public sealed class GetamlFilesystemInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
        /// </summary>
        [Input("amlFilesystemName", required: true)]
        public Input<string> AmlFilesystemName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetamlFilesystemInvokeArgs()
        {
        }
        public static new GetamlFilesystemInvokeArgs Empty => new GetamlFilesystemInvokeArgs();
    }


    [OutputType]
    public sealed class GetamlFilesystemResult
    {
        /// <summary>
        /// Specifies encryption settings of the AML file system.
        /// </summary>
        public readonly Outputs.AmlFilesystemEncryptionSettingsResponse? EncryptionSettings;
        /// <summary>
        /// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
        /// </summary>
        public readonly string FilesystemSubnet;
        /// <summary>
        /// Health of the AML file system.
        /// </summary>
        public readonly Outputs.AmlFilesystemHealthResponse Health;
        /// <summary>
        /// Hydration and archive settings and status
        /// </summary>
        public readonly Outputs.AmlFilesystemResponseHsm? Hsm;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed identity used by the AML file system, if configured.
        /// </summary>
        public readonly Outputs.AmlFilesystemIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The version of Lustre running in the AML file system
        /// </summary>
        public readonly string LustreVersion;
        /// <summary>
        /// Start time of a 30-minute weekly maintenance window.
        /// </summary>
        public readonly Outputs.AmlFilesystemResponseMaintenanceWindow MaintenanceWindow;
        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        public readonly string MgsAddress;
        /// <summary>
        /// Recommended command to mount the AML file system
        /// </summary>
        public readonly string MountCommand;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ARM provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// SKU for the resource.
        /// </summary>
        public readonly Outputs.SkuNameResponse? Sku;
        /// <summary>
        /// The size of the AML file system, in TiB. This might be rounded up.
        /// </summary>
        public readonly double StorageCapacityTiB;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
        /// </summary>
        public readonly int ThroughputProvisionedMBps;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Availability zones for resources. This field should only contain a single element in the array.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetamlFilesystemResult(
            Outputs.AmlFilesystemEncryptionSettingsResponse? encryptionSettings,

            string filesystemSubnet,

            Outputs.AmlFilesystemHealthResponse health,

            Outputs.AmlFilesystemResponseHsm? hsm,

            string id,

            Outputs.AmlFilesystemIdentityResponse? identity,

            string location,

            string lustreVersion,

            Outputs.AmlFilesystemResponseMaintenanceWindow maintenanceWindow,

            string mgsAddress,

            string mountCommand,

            string name,

            string provisioningState,

            Outputs.SkuNameResponse? sku,

            double storageCapacityTiB,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            int throughputProvisionedMBps,

            string type,

            ImmutableArray<string> zones)
        {
            EncryptionSettings = encryptionSettings;
            FilesystemSubnet = filesystemSubnet;
            Health = health;
            Hsm = hsm;
            Id = id;
            Identity = identity;
            Location = location;
            LustreVersion = lustreVersion;
            MaintenanceWindow = maintenanceWindow;
            MgsAddress = mgsAddress;
            MountCommand = mountCommand;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            StorageCapacityTiB = storageCapacityTiB;
            SystemData = systemData;
            Tags = tags;
            ThroughputProvisionedMBps = throughputProvisionedMBps;
            Type = type;
            Zones = zones;
        }
    }
}
