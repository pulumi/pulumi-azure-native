// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorageCache
{
    public static class GetStorageTarget
    {
        public static Task<GetStorageTargetResult> InvokeAsync(GetStorageTargetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStorageTargetResult>("azurerm:storagecache:getStorageTarget", args ?? new GetStorageTargetArgs(), options.WithVersion());
    }


    public sealed class GetStorageTargetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Cache. Length of name must be not greater than 80 and chars must be in list of [-0-9a-zA-Z_] char class.
        /// </summary>
        [Input("cacheName", required: true)]
        public string CacheName { get; set; } = null!;

        /// <summary>
        /// Name of the Storage Target. Length of name must be not greater than 80 and chars must be in list of [-0-9a-zA-Z_] char class.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Target resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetStorageTargetArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStorageTargetResult
    {
        /// <summary>
        /// Name of the Storage Target.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// StorageTarget properties
        /// </summary>
        public readonly Outputs.StorageTargetPropertiesResponseResult Properties;
        /// <summary>
        /// Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageTargetResult(
            string name,

            Outputs.StorageTargetPropertiesResponseResult properties,

            string type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
