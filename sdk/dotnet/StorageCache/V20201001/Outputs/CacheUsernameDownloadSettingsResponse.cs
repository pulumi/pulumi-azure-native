// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorageCache.V20201001.Outputs
{

    [OutputType]
    public sealed class CacheUsernameDownloadSettingsResponse
    {
        /// <summary>
        /// Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.
        /// </summary>
        public readonly bool? AutoDownloadCertificate;
        /// <summary>
        /// The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true.
        /// </summary>
        public readonly string? CaCertificateURI;
        /// <summary>
        /// When present, these are the credentials for the secure LDAP connection.
        /// </summary>
        public readonly Outputs.CacheUsernameDownloadSettingsResponseCredentials? Credentials;
        /// <summary>
        /// Whether or not the LDAP connection should be encrypted.
        /// </summary>
        public readonly bool? EncryptLdapConnection;
        /// <summary>
        /// Whether or not Extended Groups is enabled.
        /// </summary>
        public readonly bool? ExtendedGroups;
        /// <summary>
        /// The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'.
        /// </summary>
        public readonly string? GroupFileURI;
        /// <summary>
        /// The base distinguished name for the LDAP domain.
        /// </summary>
        public readonly string? LdapBaseDN;
        /// <summary>
        /// The fully qualified domain name or IP address of the LDAP server to use.
        /// </summary>
        public readonly string? LdapServer;
        /// <summary>
        /// Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.
        /// </summary>
        public readonly bool? RequireValidCertificate;
        /// <summary>
        /// The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'.
        /// </summary>
        public readonly string? UserFileURI;
        /// <summary>
        /// Indicates whether or not the HPC Cache has performed the username download successfully.
        /// </summary>
        public readonly string UsernameDownloaded;
        /// <summary>
        /// This setting determines how the cache gets username and group names for clients.
        /// </summary>
        public readonly string? UsernameSource;

        [OutputConstructor]
        private CacheUsernameDownloadSettingsResponse(
            bool? autoDownloadCertificate,

            string? caCertificateURI,

            Outputs.CacheUsernameDownloadSettingsResponseCredentials? credentials,

            bool? encryptLdapConnection,

            bool? extendedGroups,

            string? groupFileURI,

            string? ldapBaseDN,

            string? ldapServer,

            bool? requireValidCertificate,

            string? userFileURI,

            string usernameDownloaded,

            string? usernameSource)
        {
            AutoDownloadCertificate = autoDownloadCertificate;
            CaCertificateURI = caCertificateURI;
            Credentials = credentials;
            EncryptLdapConnection = encryptLdapConnection;
            ExtendedGroups = extendedGroups;
            GroupFileURI = groupFileURI;
            LdapBaseDN = ldapBaseDN;
            LdapServer = ldapServer;
            RequireValidCertificate = requireValidCertificate;
            UserFileURI = userFileURI;
            UsernameDownloaded = usernameDownloaded;
            UsernameSource = usernameSource;
        }
    }
}
