// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorageCache.V20191101.Outputs
{

    [OutputType]
    public sealed class CacheResponsePropertiesResult
    {
        /// <summary>
        /// The size of this Cache, in GB.
        /// </summary>
        public readonly int? CacheSizeGB;
        /// <summary>
        /// Health of the Cache.
        /// </summary>
        public readonly Outputs.CacheHealthResponseResult Health;
        /// <summary>
        /// Array of IP addresses that can be used by clients mounting this Cache.
        /// </summary>
        public readonly ImmutableArray<string> MountAddresses;
        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Subnet used for the Cache.
        /// </summary>
        public readonly string? Subnet;
        /// <summary>
        /// Upgrade status of the Cache.
        /// </summary>
        public readonly Outputs.CacheUpgradeStatusResponseResult? UpgradeStatus;

        [OutputConstructor]
        private CacheResponsePropertiesResult(
            int? cacheSizeGB,

            Outputs.CacheHealthResponseResult health,

            ImmutableArray<string> mountAddresses,

            string? provisioningState,

            string? subnet,

            Outputs.CacheUpgradeStatusResponseResult? upgradeStatus)
        {
            CacheSizeGB = cacheSizeGB;
            Health = health;
            MountAddresses = mountAddresses;
            ProvisioningState = provisioningState;
            Subnet = subnet;
            UpgradeStatus = upgradeStatus;
        }
    }
}
