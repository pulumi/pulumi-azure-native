// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.Outputs
{

    /// <summary>
    /// Configuration properties for apps environment to join a Virtual Network
    /// </summary>
    [OutputType]
    public sealed class VnetConfigurationResponse
    {
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        public readonly string? DockerBridgeCidr;
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId. Must not overlap with any other provided IP ranges.
        /// </summary>
        public readonly string? InfrastructureSubnetId;
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide runtimeSubnetId and infrastructureSubnetId if enabling this property
        /// </summary>
        public readonly bool? Internal;
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.
        /// </summary>
        public readonly string? PlatformReservedCidr;
        /// <summary>
        ///  An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        public readonly string? PlatformReservedDnsIP;
        /// <summary>
        /// This field is deprecated and not used. If you wish to provide your own subnet that Container App containers are injected into, then you should leverage the infrastructureSubnetId.
        /// </summary>
        public readonly string? RuntimeSubnetId;

        [OutputConstructor]
        private VnetConfigurationResponse(
            string? dockerBridgeCidr,

            string? infrastructureSubnetId,

            bool? @internal,

            string? platformReservedCidr,

            string? platformReservedDnsIP,

            string? runtimeSubnetId)
        {
            DockerBridgeCidr = dockerBridgeCidr;
            InfrastructureSubnetId = infrastructureSubnetId;
            Internal = @internal;
            PlatformReservedCidr = platformReservedCidr;
            PlatformReservedDnsIP = platformReservedDnsIP;
            RuntimeSubnetId = runtimeSubnetId;
        }
    }
}
