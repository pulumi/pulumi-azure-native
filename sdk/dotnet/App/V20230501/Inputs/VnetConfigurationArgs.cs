// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230501.Inputs
{

    /// <summary>
    /// Configuration properties for apps environment to join a Virtual Network
    /// </summary>
    public sealed class VnetConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Input("dockerBridgeCidr")]
        public Input<string>? DockerBridgeCidr { get; set; }

        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Input("infrastructureSubnetId")]
        public Input<string>? InfrastructureSubnetId { get; set; }

        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Input("platformReservedCidr")]
        public Input<string>? PlatformReservedCidr { get; set; }

        /// <summary>
        ///  An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Input("platformReservedDnsIP")]
        public Input<string>? PlatformReservedDnsIP { get; set; }

        public VnetConfigurationArgs()
        {
        }
        public static new VnetConfigurationArgs Empty => new VnetConfigurationArgs();
    }
}
