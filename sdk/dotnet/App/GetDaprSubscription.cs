// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App
{
    public static class GetDaprSubscription
    {
        /// <summary>
        /// Dapr PubSub Event Subscription.
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview.
        /// </summary>
        public static Task<GetDaprSubscriptionResult> InvokeAsync(GetDaprSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDaprSubscriptionResult>("azure-native:app:getDaprSubscription", args ?? new GetDaprSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// Dapr PubSub Event Subscription.
        /// Azure REST API version: 2023-08-01-preview.
        /// 
        /// Other available API versions: 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview.
        /// </summary>
        public static Output<GetDaprSubscriptionResult> Invoke(GetDaprSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDaprSubscriptionResult>("azure-native:app:getDaprSubscription", args ?? new GetDaprSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDaprSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Managed Environment.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the Dapr subscription.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDaprSubscriptionArgs()
        {
        }
        public static new GetDaprSubscriptionArgs Empty => new GetDaprSubscriptionArgs();
    }

    public sealed class GetDaprSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Managed Environment.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the Dapr subscription.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDaprSubscriptionInvokeArgs()
        {
        }
        public static new GetDaprSubscriptionInvokeArgs Empty => new GetDaprSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetDaprSubscriptionResult
    {
        /// <summary>
        /// Bulk subscription options
        /// </summary>
        public readonly Outputs.DaprSubscriptionBulkSubscribeOptionsResponse? BulkSubscribe;
        /// <summary>
        /// Deadletter topic name
        /// </summary>
        public readonly string? DeadLetterTopic;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Subscription metadata
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Dapr PubSub component name
        /// </summary>
        public readonly string? PubsubName;
        /// <summary>
        /// Subscription routes
        /// </summary>
        public readonly Outputs.DaprSubscriptionRoutesResponse? Routes;
        /// <summary>
        /// Application scopes to restrict the subscription to specific apps.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Topic name
        /// </summary>
        public readonly string? Topic;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDaprSubscriptionResult(
            Outputs.DaprSubscriptionBulkSubscribeOptionsResponse? bulkSubscribe,

            string? deadLetterTopic,

            string id,

            ImmutableDictionary<string, string>? metadata,

            string name,

            string? pubsubName,

            Outputs.DaprSubscriptionRoutesResponse? routes,

            ImmutableArray<string> scopes,

            Outputs.SystemDataResponse systemData,

            string? topic,

            string type)
        {
            BulkSubscribe = bulkSubscribe;
            DeadLetterTopic = deadLetterTopic;
            Id = id;
            Metadata = metadata;
            Name = name;
            PubsubName = pubsubName;
            Routes = routes;
            Scopes = scopes;
            SystemData = systemData;
            Topic = topic;
            Type = type;
        }
    }
}
