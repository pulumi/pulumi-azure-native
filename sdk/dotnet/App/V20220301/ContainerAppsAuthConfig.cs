// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20220301
{
    /// <summary>
    /// Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
    /// </summary>
    [AzureNativeResourceType("azure-native:app/v20220301:ContainerAppsAuthConfig")]
    public partial class ContainerAppsAuthConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.
        /// </summary>
        [Output("globalValidation")]
        public Output<Outputs.GlobalValidationResponse?> GlobalValidation { get; private set; } = null!;

        /// <summary>
        /// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Output("httpSettings")]
        public Output<Outputs.HttpSettingsResponse?> HttpSettings { get; private set; } = null!;

        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Output("identityProviders")]
        public Output<Outputs.IdentityProvidersResponse?> IdentityProviders { get; private set; } = null!;

        /// <summary>
        /// The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Output("login")]
        public Output<Outputs.LoginResponse?> Login { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Output("platform")]
        public Output<Outputs.AuthPlatformResponse?> Platform { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerAppsAuthConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerAppsAuthConfig(string name, ContainerAppsAuthConfigArgs args, CustomResourceOptions? options = null)
            : base("azure-native:app/v20220301:ContainerAppsAuthConfig", name, args ?? new ContainerAppsAuthConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerAppsAuthConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:app/v20220301:ContainerAppsAuthConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:app:ContainerAppsAuthConfig"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20220101preview:ContainerAppsAuthConfig"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20220601preview:ContainerAppsAuthConfig"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20221001:ContainerAppsAuthConfig"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerAppsAuthConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerAppsAuthConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContainerAppsAuthConfig(name, id, options);
        }
    }

    public sealed class ContainerAppsAuthConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Container App AuthConfig.
        /// </summary>
        [Input("authConfigName")]
        public Input<string>? AuthConfigName { get; set; }

        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public Input<string> ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.
        /// </summary>
        [Input("globalValidation")]
        public Input<Inputs.GlobalValidationArgs>? GlobalValidation { get; set; }

        /// <summary>
        /// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Input("httpSettings")]
        public Input<Inputs.HttpSettingsArgs>? HttpSettings { get; set; }

        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Input("identityProviders")]
        public Input<Inputs.IdentityProvidersArgs>? IdentityProviders { get; set; }

        /// <summary>
        /// The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Input("login")]
        public Input<Inputs.LoginArgs>? Login { get; set; }

        /// <summary>
        /// The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Input("platform")]
        public Input<Inputs.AuthPlatformArgs>? Platform { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ContainerAppsAuthConfigArgs()
        {
        }
        public static new ContainerAppsAuthConfigArgs Empty => new ContainerAppsAuthConfigArgs();
    }
}
