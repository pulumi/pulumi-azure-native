// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20221101Preview.Outputs
{

    /// <summary>
    /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
    /// </summary>
    [OutputType]
    public sealed class IdentityProvidersResponse
    {
        /// <summary>
        /// The configuration settings of the Apple provider.
        /// </summary>
        public readonly Outputs.AppleResponse? Apple;
        /// <summary>
        /// The configuration settings of the Azure Active directory provider.
        /// </summary>
        public readonly Outputs.AzureActiveDirectoryResponse? AzureActiveDirectory;
        /// <summary>
        /// The configuration settings of the Azure Static Web Apps provider.
        /// </summary>
        public readonly Outputs.AzureStaticWebAppsResponse? AzureStaticWebApps;
        /// <summary>
        /// The map of the name of the alias of each custom Open ID Connect provider to the
        /// configuration settings of the custom Open ID Connect provider.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.CustomOpenIdConnectProviderResponse>? CustomOpenIdConnectProviders;
        /// <summary>
        /// The configuration settings of the Facebook provider.
        /// </summary>
        public readonly Outputs.FacebookResponse? Facebook;
        /// <summary>
        /// The configuration settings of the GitHub provider.
        /// </summary>
        public readonly Outputs.GitHubResponse? GitHub;
        /// <summary>
        /// The configuration settings of the Google provider.
        /// </summary>
        public readonly Outputs.GoogleResponse? Google;
        /// <summary>
        /// The configuration settings of the Twitter provider.
        /// </summary>
        public readonly Outputs.TwitterResponse? Twitter;

        [OutputConstructor]
        private IdentityProvidersResponse(
            Outputs.AppleResponse? apple,

            Outputs.AzureActiveDirectoryResponse? azureActiveDirectory,

            Outputs.AzureStaticWebAppsResponse? azureStaticWebApps,

            ImmutableDictionary<string, Outputs.CustomOpenIdConnectProviderResponse>? customOpenIdConnectProviders,

            Outputs.FacebookResponse? facebook,

            Outputs.GitHubResponse? gitHub,

            Outputs.GoogleResponse? google,

            Outputs.TwitterResponse? twitter)
        {
            Apple = apple;
            AzureActiveDirectory = azureActiveDirectory;
            AzureStaticWebApps = azureStaticWebApps;
            CustomOpenIdConnectProviders = customOpenIdConnectProviders;
            Facebook = facebook;
            GitHub = gitHub;
            Google = google;
            Twitter = twitter;
        }
    }
}
