// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230801Preview
{
    public static class GetJob
    {
        /// <summary>
        /// Container App Job
        /// </summary>
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("azure-native:app/v20230801preview:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        /// <summary>
        /// Container App Job
        /// </summary>
        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("azure-native:app/v20230801preview:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Job Name
        /// </summary>
        [Input("jobName", required: true)]
        public string JobName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Job Name
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        /// <summary>
        /// Container Apps Job configuration properties.
        /// </summary>
        public readonly Outputs.JobConfigurationResponse? Configuration;
        /// <summary>
        /// Resource ID of environment.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// The endpoint of the eventstream of the container apps job.
        /// </summary>
        public readonly string EventStreamEndpoint;
        /// <summary>
        /// The complex type of the extended location.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Outbound IP Addresses of a container apps job.
        /// </summary>
        public readonly ImmutableArray<string> OutboundIpAddresses;
        /// <summary>
        /// Provisioning state of the Container Apps Job.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Container Apps job definition.
        /// </summary>
        public readonly Outputs.JobTemplateResponse? Template;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Workload profile name to pin for container apps job execution.
        /// </summary>
        public readonly string? WorkloadProfileName;

        [OutputConstructor]
        private GetJobResult(
            Outputs.JobConfigurationResponse? configuration,

            string? environmentId,

            string eventStreamEndpoint,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            string name,

            ImmutableArray<string> outboundIpAddresses,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            Outputs.JobTemplateResponse? template,

            string type,

            string? workloadProfileName)
        {
            Configuration = configuration;
            EnvironmentId = environmentId;
            EventStreamEndpoint = eventStreamEndpoint;
            ExtendedLocation = extendedLocation;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            OutboundIpAddresses = outboundIpAddresses;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Template = template;
            Type = type;
            WorkloadProfileName = workloadProfileName;
        }
    }
}
