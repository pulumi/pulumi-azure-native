// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230801Preview
{
    /// <summary>
    /// Dapr PubSub Event Subscription.
    /// </summary>
    [AzureNativeResourceType("azure-native:app/v20230801preview:DaprSubscription")]
    public partial class DaprSubscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Bulk subscription options
        /// </summary>
        [Output("bulkSubscribe")]
        public Output<Outputs.DaprSubscriptionBulkSubscribeOptionsResponse?> BulkSubscribe { get; private set; } = null!;

        /// <summary>
        /// Deadletter topic name
        /// </summary>
        [Output("deadLetterTopic")]
        public Output<string?> DeadLetterTopic { get; private set; } = null!;

        /// <summary>
        /// Subscription metadata
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Dapr PubSub component name
        /// </summary>
        [Output("pubsubName")]
        public Output<string?> PubsubName { get; private set; } = null!;

        /// <summary>
        /// Subscription routes
        /// </summary>
        [Output("routes")]
        public Output<Outputs.DaprSubscriptionRoutesResponse?> Routes { get; private set; } = null!;

        /// <summary>
        /// Application scopes to restrict the subscription to specific apps.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Topic name
        /// </summary>
        [Output("topic")]
        public Output<string?> Topic { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DaprSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DaprSubscription(string name, DaprSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:app/v20230801preview:DaprSubscription", name, args ?? new DaprSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DaprSubscription(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:app/v20230801preview:DaprSubscription", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:app:DaprSubscription" },
                    new global::Pulumi.Alias { Type = "azure-native:app/v20231102preview:DaprSubscription" },
                    new global::Pulumi.Alias { Type = "azure-native:app/v20240202preview:DaprSubscription" },
                    new global::Pulumi.Alias { Type = "azure-native:app/v20240802preview:DaprSubscription" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DaprSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DaprSubscription Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DaprSubscription(name, id, options);
        }
    }

    public sealed class DaprSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bulk subscription options
        /// </summary>
        [Input("bulkSubscribe")]
        public Input<Inputs.DaprSubscriptionBulkSubscribeOptionsArgs>? BulkSubscribe { get; set; }

        /// <summary>
        /// Deadletter topic name
        /// </summary>
        [Input("deadLetterTopic")]
        public Input<string>? DeadLetterTopic { get; set; }

        /// <summary>
        /// Name of the Managed Environment.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Subscription metadata
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Name of the Dapr subscription.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Dapr PubSub component name
        /// </summary>
        [Input("pubsubName")]
        public Input<string>? PubsubName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Subscription routes
        /// </summary>
        [Input("routes")]
        public Input<Inputs.DaprSubscriptionRoutesArgs>? Routes { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Application scopes to restrict the subscription to specific apps.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Topic name
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        public DaprSubscriptionArgs()
        {
        }
        public static new DaprSubscriptionArgs Empty => new DaprSubscriptionArgs();
    }
}
