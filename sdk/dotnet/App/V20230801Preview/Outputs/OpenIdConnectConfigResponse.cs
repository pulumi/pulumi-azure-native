// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230801Preview.Outputs
{

    /// <summary>
    /// The configuration settings of the endpoints used for the custom Open ID Connect provider.
    /// </summary>
    [OutputType]
    public sealed class OpenIdConnectConfigResponse
    {
        /// <summary>
        /// The endpoint to be used to make an authorization request.
        /// </summary>
        public readonly string? AuthorizationEndpoint;
        /// <summary>
        /// The endpoint that provides the keys necessary to validate the token.
        /// </summary>
        public readonly string? CertificationUri;
        /// <summary>
        /// The endpoint that issues the token.
        /// </summary>
        public readonly string? Issuer;
        /// <summary>
        /// The endpoint to be used to request a token.
        /// </summary>
        public readonly string? TokenEndpoint;
        /// <summary>
        /// The endpoint that contains all the configuration endpoints for the provider.
        /// </summary>
        public readonly string? WellKnownOpenIdConfiguration;

        [OutputConstructor]
        private OpenIdConnectConfigResponse(
            string? authorizationEndpoint,

            string? certificationUri,

            string? issuer,

            string? tokenEndpoint,

            string? wellKnownOpenIdConfiguration)
        {
            AuthorizationEndpoint = authorizationEndpoint;
            CertificationUri = certificationUri;
            Issuer = issuer;
            TokenEndpoint = tokenEndpoint;
            WellKnownOpenIdConfiguration = wellKnownOpenIdConfiguration;
        }
    }
}
