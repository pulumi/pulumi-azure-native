// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230801Preview.Outputs
{

    /// <summary>
    /// Policy that defines http request retry conditions
    /// </summary>
    [OutputType]
    public sealed class HttpRetryPolicyResponse
    {
        /// <summary>
        /// Errors that can trigger a retry
        /// </summary>
        public readonly ImmutableArray<string> Errors;
        /// <summary>
        /// Headers that must be present for a request to be retried
        /// </summary>
        public readonly ImmutableArray<Outputs.HeaderMatchResponse> Headers;
        /// <summary>
        /// Additional http status codes that can trigger a retry
        /// </summary>
        public readonly ImmutableArray<int> HttpStatusCodes;
        /// <summary>
        /// Initial delay, in milliseconds, before retrying a request
        /// </summary>
        public readonly double? InitialDelayInMilliseconds;
        /// <summary>
        /// Maximum interval, in milliseconds, between retries
        /// </summary>
        public readonly double? MaxIntervalInMilliseconds;
        /// <summary>
        /// Maximum number of times a request will retry
        /// </summary>
        public readonly int? MaxRetries;

        [OutputConstructor]
        private HttpRetryPolicyResponse(
            ImmutableArray<string> errors,

            ImmutableArray<Outputs.HeaderMatchResponse> headers,

            ImmutableArray<int> httpStatusCodes,

            double? initialDelayInMilliseconds,

            double? maxIntervalInMilliseconds,

            int? maxRetries)
        {
            Errors = errors;
            Headers = headers;
            HttpStatusCodes = httpStatusCodes;
            InitialDelayInMilliseconds = initialDelayInMilliseconds;
            MaxIntervalInMilliseconds = maxIntervalInMilliseconds;
            MaxRetries = maxRetries;
        }
    }
}
