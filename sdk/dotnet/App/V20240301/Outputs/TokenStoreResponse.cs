// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20240301.Outputs
{

    /// <summary>
    /// The configuration settings of the token store.
    /// </summary>
    [OutputType]
    public sealed class TokenStoreResponse
    {
        /// <summary>
        /// The configuration settings of the storage of the tokens if blob storage is used.
        /// </summary>
        public readonly Outputs.BlobStorageTokenStoreResponse? AzureBlobStorage;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to durably store platform-specific security tokens that are obtained during login flows; otherwise, &lt;code&gt;false&lt;/code&gt;.
        ///  The default is &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The number of hours after session token expiration that a session token can be used to
        /// call the token refresh API. The default is 72 hours.
        /// </summary>
        public readonly double? TokenRefreshExtensionHours;

        [OutputConstructor]
        private TokenStoreResponse(
            Outputs.BlobStorageTokenStoreResponse? azureBlobStorage,

            bool? enabled,

            double? tokenRefreshExtensionHours)
        {
            AzureBlobStorage = azureBlobStorage;
            Enabled = enabled;
            TokenRefreshExtensionHours = tokenRefreshExtensionHours;
        }
    }
}
