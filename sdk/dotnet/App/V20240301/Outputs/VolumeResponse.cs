// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20240301.Outputs
{

    /// <summary>
    /// Volume definitions for the Container App.
    /// </summary>
    [OutputType]
    public sealed class VolumeResponse
    {
        /// <summary>
        /// Mount options used while mounting the AzureFile. Must be a comma-separated string.
        /// </summary>
        public readonly string? MountOptions;
        /// <summary>
        /// Volume name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// </summary>
        public readonly ImmutableArray<Outputs.SecretVolumeItemResponse> Secrets;
        /// <summary>
        /// Name of storage resource. No need to provide for EmptyDir and Secret.
        /// </summary>
        public readonly string? StorageName;
        /// <summary>
        /// Storage type for the volume. If not provided, use EmptyDir.
        /// </summary>
        public readonly string? StorageType;

        [OutputConstructor]
        private VolumeResponse(
            string? mountOptions,

            string? name,

            ImmutableArray<Outputs.SecretVolumeItemResponse> secrets,

            string? storageName,

            string? storageType)
        {
            MountOptions = mountOptions;
            Name = name;
            Secrets = secrets;
            StorageName = storageName;
            StorageType = storageType;
        }
    }
}
