// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20230401Preview
{
    public static class GetContainerAppsSourceControl
    {
        /// <summary>
        /// Container App SourceControl.
        /// </summary>
        public static Task<GetContainerAppsSourceControlResult> InvokeAsync(GetContainerAppsSourceControlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerAppsSourceControlResult>("azure-native:app/v20230401preview:getContainerAppsSourceControl", args ?? new GetContainerAppsSourceControlArgs(), options.WithDefaults());

        /// <summary>
        /// Container App SourceControl.
        /// </summary>
        public static Output<GetContainerAppsSourceControlResult> Invoke(GetContainerAppsSourceControlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerAppsSourceControlResult>("azure-native:app/v20230401preview:getContainerAppsSourceControl", args ?? new GetContainerAppsSourceControlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerAppsSourceControlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public string ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Container App SourceControl.
        /// </summary>
        [Input("sourceControlName", required: true)]
        public string SourceControlName { get; set; } = null!;

        public GetContainerAppsSourceControlArgs()
        {
        }
        public static new GetContainerAppsSourceControlArgs Empty => new GetContainerAppsSourceControlArgs();
    }

    public sealed class GetContainerAppsSourceControlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public Input<string> ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Container App SourceControl.
        /// </summary>
        [Input("sourceControlName", required: true)]
        public Input<string> SourceControlName { get; set; } = null!;

        public GetContainerAppsSourceControlInvokeArgs()
        {
        }
        public static new GetContainerAppsSourceControlInvokeArgs Empty => new GetContainerAppsSourceControlInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerAppsSourceControlResult
    {
        /// <summary>
        /// The branch which will trigger the auto deployment
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// </summary>
        public readonly Outputs.GithubActionConfigurationResponse? GithubActionConfiguration;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Current provisioning State of the operation
        /// </summary>
        public readonly string OperationState;
        /// <summary>
        /// The repo url which will be integrated to ContainerApp.
        /// </summary>
        public readonly string? RepoUrl;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContainerAppsSourceControlResult(
            string? branch,

            Outputs.GithubActionConfigurationResponse? githubActionConfiguration,

            string id,

            string name,

            string operationState,

            string? repoUrl,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Branch = branch;
            GithubActionConfiguration = githubActionConfiguration;
            Id = id;
            Name = name;
            OperationState = operationState;
            RepoUrl = repoUrl;
            SystemData = systemData;
            Type = type;
        }
    }
}
