// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20221001
{
    public static class ListContainerAppCustomHostNameAnalysis
    {
        /// <summary>
        /// Custom domain analysis.
        /// </summary>
        public static Task<ListContainerAppCustomHostNameAnalysisResult> InvokeAsync(ListContainerAppCustomHostNameAnalysisArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListContainerAppCustomHostNameAnalysisResult>("azure-native:app/v20221001:listContainerAppCustomHostNameAnalysis", args ?? new ListContainerAppCustomHostNameAnalysisArgs(), options.WithDefaults());

        /// <summary>
        /// Custom domain analysis.
        /// </summary>
        public static Output<ListContainerAppCustomHostNameAnalysisResult> Invoke(ListContainerAppCustomHostNameAnalysisInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListContainerAppCustomHostNameAnalysisResult>("azure-native:app/v20221001:listContainerAppCustomHostNameAnalysis", args ?? new ListContainerAppCustomHostNameAnalysisInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListContainerAppCustomHostNameAnalysisArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public string ContainerAppName { get; set; } = null!;

        /// <summary>
        /// Custom hostname.
        /// </summary>
        [Input("customHostname")]
        public string? CustomHostname { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListContainerAppCustomHostNameAnalysisArgs()
        {
        }
        public static new ListContainerAppCustomHostNameAnalysisArgs Empty => new ListContainerAppCustomHostNameAnalysisArgs();
    }

    public sealed class ListContainerAppCustomHostNameAnalysisInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public Input<string> ContainerAppName { get; set; } = null!;

        /// <summary>
        /// Custom hostname.
        /// </summary>
        [Input("customHostname")]
        public Input<string>? CustomHostname { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListContainerAppCustomHostNameAnalysisInvokeArgs()
        {
        }
        public static new ListContainerAppCustomHostNameAnalysisInvokeArgs Empty => new ListContainerAppCustomHostNameAnalysisInvokeArgs();
    }


    [OutputType]
    public sealed class ListContainerAppCustomHostNameAnalysisResult
    {
        /// <summary>
        /// A records visible for this hostname.
        /// </summary>
        public readonly ImmutableArray<string> ARecords;
        /// <summary>
        /// Alternate CName records visible for this hostname.
        /// </summary>
        public readonly ImmutableArray<string> AlternateCNameRecords;
        /// <summary>
        /// Alternate TXT records visible for this hostname.
        /// </summary>
        public readonly ImmutableArray<string> AlternateTxtRecords;
        /// <summary>
        /// CName records visible for this hostname.
        /// </summary>
        public readonly ImmutableArray<string> CNameRecords;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if there is a conflict on the Container App's managed environment level custom domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool ConflictWithEnvironmentCustomDomain;
        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        public readonly string ConflictingContainerAppResourceId;
        /// <summary>
        /// Raw failure information if DNS verification fails.
        /// </summary>
        public readonly Outputs.CustomHostnameAnalysisResultResponseCustomDomainVerificationFailureInfo CustomDomainVerificationFailureInfo;
        /// <summary>
        /// DNS verification test result.
        /// </summary>
        public readonly string CustomDomainVerificationTest;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if there is a conflict on the Container App's managed environment; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool HasConflictOnManagedEnvironment;
        /// <summary>
        /// Host name that was analyzed
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if hostname is already verified; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool IsHostnameAlreadyVerified;
        /// <summary>
        /// TXT records visible for this hostname.
        /// </summary>
        public readonly ImmutableArray<string> TxtRecords;

        [OutputConstructor]
        private ListContainerAppCustomHostNameAnalysisResult(
            ImmutableArray<string> aRecords,

            ImmutableArray<string> alternateCNameRecords,

            ImmutableArray<string> alternateTxtRecords,

            ImmutableArray<string> cNameRecords,

            bool conflictWithEnvironmentCustomDomain,

            string conflictingContainerAppResourceId,

            Outputs.CustomHostnameAnalysisResultResponseCustomDomainVerificationFailureInfo customDomainVerificationFailureInfo,

            string customDomainVerificationTest,

            bool hasConflictOnManagedEnvironment,

            string hostName,

            bool isHostnameAlreadyVerified,

            ImmutableArray<string> txtRecords)
        {
            ARecords = aRecords;
            AlternateCNameRecords = alternateCNameRecords;
            AlternateTxtRecords = alternateTxtRecords;
            CNameRecords = cNameRecords;
            ConflictWithEnvironmentCustomDomain = conflictWithEnvironmentCustomDomain;
            ConflictingContainerAppResourceId = conflictingContainerAppResourceId;
            CustomDomainVerificationFailureInfo = customDomainVerificationFailureInfo;
            CustomDomainVerificationTest = customDomainVerificationTest;
            HasConflictOnManagedEnvironment = hasConflictOnManagedEnvironment;
            HostName = hostName;
            IsHostnameAlreadyVerified = isHostnameAlreadyVerified;
            TxtRecords = txtRecords;
        }
    }
}
