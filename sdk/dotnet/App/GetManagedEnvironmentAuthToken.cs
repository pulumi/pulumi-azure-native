// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App
{
    public static class GetManagedEnvironmentAuthToken
    {
        /// <summary>
        /// Checks if resource name is available.
        /// Azure REST API version: 2022-10-01.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-03-01.
        /// </summary>
        public static Task<GetManagedEnvironmentAuthTokenResult> InvokeAsync(GetManagedEnvironmentAuthTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedEnvironmentAuthTokenResult>("azure-native:app:getManagedEnvironmentAuthToken", args ?? new GetManagedEnvironmentAuthTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Checks if resource name is available.
        /// Azure REST API version: 2022-10-01.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-03-01.
        /// </summary>
        public static Output<GetManagedEnvironmentAuthTokenResult> Invoke(GetManagedEnvironmentAuthTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedEnvironmentAuthTokenResult>("azure-native:app:getManagedEnvironmentAuthToken", args ?? new GetManagedEnvironmentAuthTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedEnvironmentAuthTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Managed Environment.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedEnvironmentAuthTokenArgs()
        {
        }
        public static new GetManagedEnvironmentAuthTokenArgs Empty => new GetManagedEnvironmentAuthTokenArgs();
    }

    public sealed class GetManagedEnvironmentAuthTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Managed Environment.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedEnvironmentAuthTokenInvokeArgs()
        {
        }
        public static new GetManagedEnvironmentAuthTokenInvokeArgs Empty => new GetManagedEnvironmentAuthTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedEnvironmentAuthTokenResult
    {
        /// <summary>
        /// Token expiration date.
        /// </summary>
        public readonly string Expires;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Auth token value.
        /// </summary>
        public readonly string Token;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedEnvironmentAuthTokenResult(
            string expires,

            string id,

            string location,

            string name,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string token,

            string type)
        {
            Expires = expires;
            Id = id;
            Location = location;
            Name = name;
            SystemData = systemData;
            Tags = tags;
            Token = token;
            Type = type;
        }
    }
}
