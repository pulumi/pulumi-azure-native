// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App
{
    /// <summary>
    /// Configuration to setup App Resiliency
    /// Azure REST API version: 2023-08-01-preview.
    /// 
    /// Other available API versions: 2023-11-02-preview, 2024-02-02-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:app:AppResiliency")]
    public partial class AppResiliency : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Policy that defines circuit breaker conditions
        /// </summary>
        [Output("circuitBreakerPolicy")]
        public Output<Outputs.CircuitBreakerPolicyResponse?> CircuitBreakerPolicy { get; private set; } = null!;

        /// <summary>
        /// Defines parameters for http connection pooling
        /// </summary>
        [Output("httpConnectionPool")]
        public Output<Outputs.HttpConnectionPoolResponse?> HttpConnectionPool { get; private set; } = null!;

        /// <summary>
        /// Policy that defines http request retry conditions
        /// </summary>
        [Output("httpRetryPolicy")]
        public Output<Outputs.HttpRetryPolicyResponse?> HttpRetryPolicy { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Defines parameters for tcp connection pooling
        /// </summary>
        [Output("tcpConnectionPool")]
        public Output<Outputs.TcpConnectionPoolResponse?> TcpConnectionPool { get; private set; } = null!;

        /// <summary>
        /// Policy that defines tcp request retry conditions
        /// </summary>
        [Output("tcpRetryPolicy")]
        public Output<Outputs.TcpRetryPolicyResponse?> TcpRetryPolicy { get; private set; } = null!;

        /// <summary>
        /// Policy to set request timeouts
        /// </summary>
        [Output("timeoutPolicy")]
        public Output<Outputs.TimeoutPolicyResponse?> TimeoutPolicy { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AppResiliency resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppResiliency(string name, AppResiliencyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:app:AppResiliency", name, args ?? new AppResiliencyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppResiliency(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:app:AppResiliency", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:app/v20230801preview:AppResiliency" },
                    new global::Pulumi.Alias { Type = "azure-native:app/v20231102preview:AppResiliency" },
                    new global::Pulumi.Alias { Type = "azure-native:app/v20240202preview:AppResiliency" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppResiliency resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppResiliency Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AppResiliency(name, id, options);
        }
    }

    public sealed class AppResiliencyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// Policy that defines circuit breaker conditions
        /// </summary>
        [Input("circuitBreakerPolicy")]
        public Input<Inputs.CircuitBreakerPolicyArgs>? CircuitBreakerPolicy { get; set; }

        /// <summary>
        /// Defines parameters for http connection pooling
        /// </summary>
        [Input("httpConnectionPool")]
        public Input<Inputs.HttpConnectionPoolArgs>? HttpConnectionPool { get; set; }

        /// <summary>
        /// Policy that defines http request retry conditions
        /// </summary>
        [Input("httpRetryPolicy")]
        public Input<Inputs.HttpRetryPolicyArgs>? HttpRetryPolicy { get; set; }

        /// <summary>
        /// Name of the resiliency policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Defines parameters for tcp connection pooling
        /// </summary>
        [Input("tcpConnectionPool")]
        public Input<Inputs.TcpConnectionPoolArgs>? TcpConnectionPool { get; set; }

        /// <summary>
        /// Policy that defines tcp request retry conditions
        /// </summary>
        [Input("tcpRetryPolicy")]
        public Input<Inputs.TcpRetryPolicyArgs>? TcpRetryPolicy { get; set; }

        /// <summary>
        /// Policy to set request timeouts
        /// </summary>
        [Input("timeoutPolicy")]
        public Input<Inputs.TimeoutPolicyArgs>? TimeoutPolicy { get; set; }

        public AppResiliencyArgs()
        {
        }
        public static new AppResiliencyArgs Empty => new AppResiliencyArgs();
    }
}
