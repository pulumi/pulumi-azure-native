// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App
{
    public static class GetContainerApp
    {
        /// <summary>
        /// Container App.
        /// API Version: 2022-03-01.
        /// </summary>
        public static Task<GetContainerAppResult> InvokeAsync(GetContainerAppArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetContainerAppResult>("azure-native:app:getContainerApp", args ?? new GetContainerAppArgs(), options.WithDefaults());

        /// <summary>
        /// Container App.
        /// API Version: 2022-03-01.
        /// </summary>
        public static Output<GetContainerAppResult> Invoke(GetContainerAppInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetContainerAppResult>("azure-native:app:getContainerApp", args ?? new GetContainerAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public string ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetContainerAppArgs()
        {
        }
        public static new GetContainerAppArgs Empty => new GetContainerAppArgs();
    }

    public sealed class GetContainerAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public Input<string> ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetContainerAppInvokeArgs()
        {
        }
        public static new GetContainerAppInvokeArgs Empty => new GetContainerAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerAppResult
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        public readonly Outputs.ConfigurationResponse? Configuration;
        /// <summary>
        /// Id used to verify domain name ownership
        /// </summary>
        public readonly string CustomDomainVerificationId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// Fully Qualified Domain Name of the latest revision of the Container App.
        /// </summary>
        public readonly string LatestRevisionFqdn;
        /// <summary>
        /// Name of the latest revision of the Container App.
        /// </summary>
        public readonly string LatestRevisionName;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource ID of the Container App's environment.
        /// </summary>
        public readonly string? ManagedEnvironmentId;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Outbound IP Addresses for container app.
        /// </summary>
        public readonly ImmutableArray<string> OutboundIPAddresses;
        /// <summary>
        /// Provisioning state of the Container App.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        public readonly Outputs.TemplateResponse? Template;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContainerAppResult(
            Outputs.ConfigurationResponse? configuration,

            string customDomainVerificationId,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string latestRevisionFqdn,

            string latestRevisionName,

            string location,

            string? managedEnvironmentId,

            string name,

            ImmutableArray<string> outboundIPAddresses,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            Outputs.TemplateResponse? template,

            string type)
        {
            Configuration = configuration;
            CustomDomainVerificationId = customDomainVerificationId;
            Id = id;
            Identity = identity;
            LatestRevisionFqdn = latestRevisionFqdn;
            LatestRevisionName = latestRevisionName;
            Location = location;
            ManagedEnvironmentId = managedEnvironmentId;
            Name = name;
            OutboundIPAddresses = outboundIPAddresses;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Template = template;
            Type = type;
        }
    }
}
