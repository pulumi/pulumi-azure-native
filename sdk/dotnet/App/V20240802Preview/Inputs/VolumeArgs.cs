// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20240802Preview.Inputs
{

    /// <summary>
    /// Volume definitions for the Container App.
    /// </summary>
    public sealed class VolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.
        /// </summary>
        [Input("mountOptions")]
        public Input<string>? MountOptions { get; set; }

        /// <summary>
        /// Volume name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secrets")]
        private InputList<Inputs.SecretVolumeItemArgs>? _secrets;

        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// </summary>
        public InputList<Inputs.SecretVolumeItemArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.SecretVolumeItemArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Name of storage resource. No need to provide for EmptyDir and Secret.
        /// </summary>
        [Input("storageName")]
        public Input<string>? StorageName { get; set; }

        /// <summary>
        /// Storage type for the volume. If not provided, use EmptyDir.
        /// </summary>
        [Input("storageType")]
        public InputUnion<string, Pulumi.AzureNative.App.V20240802Preview.StorageType>? StorageType { get; set; }

        public VolumeArgs()
        {
        }
        public static new VolumeArgs Empty => new VolumeArgs();
    }
}
