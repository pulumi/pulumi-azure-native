// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20241002Preview.Inputs
{

    /// <summary>
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    /// </summary>
    public sealed class ConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// &lt;list&gt;&lt;item&gt;Single: Only one revision can be active at a time. Traffic weights cannot be used. This is the default.&lt;/item&gt;&lt;item&gt;Multiple: Multiple revisions can be active, including optional traffic weights and labels.&lt;/item&gt;&lt;item&gt;Labels: Only revisions with labels are active. Traffic weights can be applied to labels.&lt;/item&gt;&lt;/list&gt;
        /// </summary>
        [Input("activeRevisionsMode")]
        public InputUnion<string, Pulumi.AzureNative.App.V20241002Preview.ActiveRevisionsMode>? ActiveRevisionsMode { get; set; }

        /// <summary>
        /// Dapr configuration for the Container App.
        /// </summary>
        [Input("dapr")]
        public Input<Inputs.DaprArgs>? Dapr { get; set; }

        [Input("identitySettings")]
        private InputList<Inputs.IdentitySettingsArgs>? _identitySettings;

        /// <summary>
        /// Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.
        /// </summary>
        public InputList<Inputs.IdentitySettingsArgs> IdentitySettings
        {
            get => _identitySettings ?? (_identitySettings = new InputList<Inputs.IdentitySettingsArgs>());
            set => _identitySettings = value;
        }

        /// <summary>
        /// Ingress configurations.
        /// </summary>
        [Input("ingress")]
        public Input<Inputs.IngressArgs>? Ingress { get; set; }

        /// <summary>
        /// Optional. Max inactive revisions a Container App can have.
        /// </summary>
        [Input("maxInactiveRevisions")]
        public Input<int>? MaxInactiveRevisions { get; set; }

        [Input("registries")]
        private InputList<Inputs.RegistryCredentialsArgs>? _registries;

        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        public InputList<Inputs.RegistryCredentialsArgs> Registries
        {
            get => _registries ?? (_registries = new InputList<Inputs.RegistryCredentialsArgs>());
            set => _registries = value;
        }

        /// <summary>
        /// Optional. The percent of the total number of replicas that must be brought up before revision transition occurs. Defaults to 100 when none is given. Value must be greater than 0 and less than or equal to 100.
        /// </summary>
        [Input("revisionTransitionThreshold")]
        public Input<int>? RevisionTransitionThreshold { get; set; }

        /// <summary>
        /// App runtime configuration for the Container App.
        /// </summary>
        [Input("runtime")]
        public Input<Inputs.RuntimeArgs>? Runtime { get; set; }

        [Input("secrets")]
        private InputList<Inputs.SecretArgs>? _secrets;

        /// <summary>
        /// Collection of secrets used by a Container app
        /// </summary>
        public InputList<Inputs.SecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.SecretArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Container App to be a dev Container App Service
        /// </summary>
        [Input("service")]
        public Input<Inputs.ServiceArgs>? Service { get; set; }

        /// <summary>
        /// Required in labels revisions mode. Label to apply to newly created revision.
        /// </summary>
        [Input("targetLabel")]
        public Input<string>? TargetLabel { get; set; }

        public ConfigurationArgs()
        {
            ActiveRevisionsMode = "Single";
        }
        public static new ConfigurationArgs Empty => new ConfigurationArgs();
    }
}
