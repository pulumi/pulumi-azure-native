// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20241002Preview.Outputs
{

    /// <summary>
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    /// </summary>
    [OutputType]
    public sealed class ConfigurationResponse
    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// &lt;list&gt;&lt;item&gt;Single: Only one revision can be active at a time. Traffic weights cannot be used. This is the default.&lt;/item&gt;&lt;item&gt;Multiple: Multiple revisions can be active, including optional traffic weights and labels.&lt;/item&gt;&lt;item&gt;Labels: Only revisions with labels are active. Traffic weights can be applied to labels.&lt;/item&gt;&lt;/list&gt;
        /// </summary>
        public readonly string? ActiveRevisionsMode;
        /// <summary>
        /// Dapr configuration for the Container App.
        /// </summary>
        public readonly Outputs.DaprResponse? Dapr;
        /// <summary>
        /// Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.
        /// </summary>
        public readonly ImmutableArray<Outputs.IdentitySettingsResponse> IdentitySettings;
        /// <summary>
        /// Ingress configurations.
        /// </summary>
        public readonly Outputs.IngressResponse? Ingress;
        /// <summary>
        /// Optional. Max inactive revisions a Container App can have.
        /// </summary>
        public readonly int? MaxInactiveRevisions;
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        public readonly ImmutableArray<Outputs.RegistryCredentialsResponse> Registries;
        /// <summary>
        /// Optional. The percent of the total number of replicas that must be brought up before revision transition occurs. Defaults to 100 when none is given. Value must be greater than 0 and less than or equal to 100.
        /// </summary>
        public readonly int? RevisionTransitionThreshold;
        /// <summary>
        /// App runtime configuration for the Container App.
        /// </summary>
        public readonly Outputs.RuntimeResponse? Runtime;
        /// <summary>
        /// Collection of secrets used by a Container app
        /// </summary>
        public readonly ImmutableArray<Outputs.SecretResponse> Secrets;
        /// <summary>
        /// Container App to be a dev Container App Service
        /// </summary>
        public readonly Outputs.ServiceResponse? Service;
        /// <summary>
        /// Required in labels revisions mode. Label to apply to newly created revision.
        /// </summary>
        public readonly string? TargetLabel;

        [OutputConstructor]
        private ConfigurationResponse(
            string? activeRevisionsMode,

            Outputs.DaprResponse? dapr,

            ImmutableArray<Outputs.IdentitySettingsResponse> identitySettings,

            Outputs.IngressResponse? ingress,

            int? maxInactiveRevisions,

            ImmutableArray<Outputs.RegistryCredentialsResponse> registries,

            int? revisionTransitionThreshold,

            Outputs.RuntimeResponse? runtime,

            ImmutableArray<Outputs.SecretResponse> secrets,

            Outputs.ServiceResponse? service,

            string? targetLabel)
        {
            ActiveRevisionsMode = activeRevisionsMode;
            Dapr = dapr;
            IdentitySettings = identitySettings;
            Ingress = ingress;
            MaxInactiveRevisions = maxInactiveRevisions;
            Registries = registries;
            RevisionTransitionThreshold = revisionTransitionThreshold;
            Runtime = runtime;
            Secrets = secrets;
            Service = service;
            TargetLabel = targetLabel;
        }
    }
}
