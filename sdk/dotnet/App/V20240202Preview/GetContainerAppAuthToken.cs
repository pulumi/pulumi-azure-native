// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20240202Preview
{
    public static class GetContainerAppAuthToken
    {
        /// <summary>
        /// Container App Auth Token.
        /// </summary>
        public static Task<GetContainerAppAuthTokenResult> InvokeAsync(GetContainerAppAuthTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerAppAuthTokenResult>("azure-native:app/v20240202preview:getContainerAppAuthToken", args ?? new GetContainerAppAuthTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Container App Auth Token.
        /// </summary>
        public static Output<GetContainerAppAuthTokenResult> Invoke(GetContainerAppAuthTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerAppAuthTokenResult>("azure-native:app/v20240202preview:getContainerAppAuthToken", args ?? new GetContainerAppAuthTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerAppAuthTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public string ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetContainerAppAuthTokenArgs()
        {
        }
        public static new GetContainerAppAuthTokenArgs Empty => new GetContainerAppAuthTokenArgs();
    }

    public sealed class GetContainerAppAuthTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("containerAppName", required: true)]
        public Input<string> ContainerAppName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetContainerAppAuthTokenInvokeArgs()
        {
        }
        public static new GetContainerAppAuthTokenInvokeArgs Empty => new GetContainerAppAuthTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerAppAuthTokenResult
    {
        /// <summary>
        /// Token expiration date.
        /// </summary>
        public readonly string Expires;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Auth token value.
        /// </summary>
        public readonly string Token;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContainerAppAuthTokenResult(
            string expires,

            string id,

            string location,

            string name,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string token,

            string type)
        {
            Expires = expires;
            Id = id;
            Location = location;
            Name = name;
            SystemData = systemData;
            Tags = tags;
            Token = token;
            Type = type;
        }
    }
}
