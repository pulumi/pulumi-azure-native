// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20240202Preview.Inputs
{

    /// <summary>
    /// Policy that defines circuit breaker conditions
    /// </summary>
    public sealed class CircuitBreakerPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of consecutive errors before the circuit breaker opens
        /// </summary>
        [Input("consecutiveErrors")]
        public Input<int>? ConsecutiveErrors { get; set; }

        /// <summary>
        /// The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails as well as closing the circuit breaker if the check succeeds. Defaults to 10s.
        /// </summary>
        [Input("intervalInSeconds")]
        public Input<int>? IntervalInSeconds { get; set; }

        /// <summary>
        /// Maximum percentage of hosts that will be ejected after failure threshold has been met
        /// </summary>
        [Input("maxEjectionPercent")]
        public Input<int>? MaxEjectionPercent { get; set; }

        public CircuitBreakerPolicyArgs()
        {
        }
        public static new CircuitBreakerPolicyArgs Empty => new CircuitBreakerPolicyArgs();
    }
}
