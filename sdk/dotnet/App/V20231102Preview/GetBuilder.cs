// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20231102Preview
{
    public static class GetBuilder
    {
        /// <summary>
        /// Get a BuilderResource
        /// </summary>
        public static Task<GetBuilderResult> InvokeAsync(GetBuilderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBuilderResult>("azure-native:app/v20231102preview:getBuilder", args ?? new GetBuilderArgs(), options.WithDefaults());

        /// <summary>
        /// Get a BuilderResource
        /// </summary>
        public static Output<GetBuilderResult> Invoke(GetBuilderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBuilderResult>("azure-native:app/v20231102preview:getBuilder", args ?? new GetBuilderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBuilderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the builder.
        /// </summary>
        [Input("builderName", required: true)]
        public string BuilderName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBuilderArgs()
        {
        }
        public static new GetBuilderArgs Empty => new GetBuilderArgs();
    }

    public sealed class GetBuilderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the builder.
        /// </summary>
        [Input("builderName", required: true)]
        public Input<string> BuilderName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBuilderInvokeArgs()
        {
        }
        public static new GetBuilderInvokeArgs Empty => new GetBuilderInvokeArgs();
    }


    [OutputType]
    public sealed class GetBuilderResult
    {
        /// <summary>
        /// List of mappings of container registries and the managed identity used to connect to it.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerRegistryResponse> ContainerRegistries;
        /// <summary>
        /// Resource ID of the container apps environment that the builder is associated with.
        /// </summary>
        public readonly string EnvironmentId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of a builder resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetBuilderResult(
            ImmutableArray<Outputs.ContainerRegistryResponse> containerRegistries,

            string environmentId,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ContainerRegistries = containerRegistries;
            EnvironmentId = environmentId;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
