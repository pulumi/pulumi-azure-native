// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20210301.Outputs
{

    /// <summary>
    /// Channel settings definition
    /// </summary>
    [OutputType]
    public sealed class ChannelSettingsResponse
    {
        /// <summary>
        /// The bot icon url
        /// </summary>
        public readonly string? BotIconUrl;
        /// <summary>
        /// The bot id
        /// </summary>
        public readonly string? BotId;
        /// <summary>
        /// The channel display name
        /// </summary>
        public readonly string? ChannelDisplayName;
        /// <summary>
        /// The channel id
        /// </summary>
        public readonly string? ChannelId;
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        public readonly bool? DisableLocalAuth;
        /// <summary>
        /// The extensionKey1
        /// </summary>
        public readonly string? ExtensionKey1;
        /// <summary>
        /// The extensionKey2
        /// </summary>
        public readonly string? ExtensionKey2;
        /// <summary>
        /// Whether this channel is enabled for the bot
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Whether customer needs to agree to new terms.
        /// </summary>
        public readonly bool? RequireTermsAgreement;
        /// <summary>
        /// The list of sites
        /// </summary>
        public readonly ImmutableArray<Outputs.SiteResponse> Sites;

        [OutputConstructor]
        private ChannelSettingsResponse(
            string? botIconUrl,

            string? botId,

            string? channelDisplayName,

            string? channelId,

            bool? disableLocalAuth,

            string? extensionKey1,

            string? extensionKey2,

            bool? isEnabled,

            bool? requireTermsAgreement,

            ImmutableArray<Outputs.SiteResponse> sites)
        {
            BotIconUrl = botIconUrl;
            BotId = botId;
            ChannelDisplayName = channelDisplayName;
            ChannelId = channelId;
            DisableLocalAuth = disableLocalAuth;
            ExtensionKey1 = extensionKey1;
            ExtensionKey2 = extensionKey2;
            IsEnabled = isEnabled;
            RequireTermsAgreement = requireTermsAgreement;
            Sites = sites;
        }
    }
}
