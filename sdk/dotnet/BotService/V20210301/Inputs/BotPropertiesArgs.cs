// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20210301.Inputs
{

    /// <summary>
    /// The parameters to provide for the Bot.
    /// </summary>
    public sealed class BotPropertiesArgs : Pulumi.ResourceArgs
    {
        [Input("allSettings")]
        private InputMap<string>? _allSettings;

        /// <summary>
        /// Contains resource all settings defined as key/value pairs.
        /// </summary>
        public InputMap<string> AllSettings
        {
            get => _allSettings ?? (_allSettings = new InputMap<string>());
            set => _allSettings = value;
        }

        /// <summary>
        /// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
        /// </summary>
        [Input("appPasswordHint")]
        public Input<string>? AppPasswordHint { get; set; }

        /// <summary>
        /// The CMK Url
        /// </summary>
        [Input("cmekKeyVaultUrl")]
        public Input<string>? CmekKeyVaultUrl { get; set; }

        /// <summary>
        /// The description of the bot
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Application Insights key
        /// </summary>
        [Input("developerAppInsightKey")]
        public Input<string>? DeveloperAppInsightKey { get; set; }

        /// <summary>
        /// The Application Insights Api Key
        /// </summary>
        [Input("developerAppInsightsApiKey")]
        public Input<string>? DeveloperAppInsightsApiKey { get; set; }

        /// <summary>
        /// The Application Insights App Id
        /// </summary>
        [Input("developerAppInsightsApplicationId")]
        public Input<string>? DeveloperAppInsightsApplicationId { get; set; }

        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Input("disableLocalAuth")]
        public Input<bool>? DisableLocalAuth { get; set; }

        /// <summary>
        /// The Name of the bot
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The bot's endpoint
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// The Icon Url of the bot
        /// </summary>
        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        /// <summary>
        /// Whether Cmek is enabled
        /// </summary>
        [Input("isCmekEnabled")]
        public Input<bool>? IsCmekEnabled { get; set; }

        /// <summary>
        /// Whether the bot is streaming supported
        /// </summary>
        [Input("isStreamingSupported")]
        public Input<bool>? IsStreamingSupported { get; set; }

        [Input("luisAppIds")]
        private InputList<string>? _luisAppIds;

        /// <summary>
        /// Collection of LUIS App Ids
        /// </summary>
        public InputList<string> LuisAppIds
        {
            get => _luisAppIds ?? (_luisAppIds = new InputList<string>());
            set => _luisAppIds = value;
        }

        /// <summary>
        /// The LUIS Key
        /// </summary>
        [Input("luisKey")]
        public Input<string>? LuisKey { get; set; }

        /// <summary>
        /// The bot's manifest url
        /// </summary>
        [Input("manifestUrl")]
        public Input<string>? ManifestUrl { get; set; }

        /// <summary>
        /// Microsoft App Id for the bot
        /// </summary>
        [Input("msaAppId", required: true)]
        public Input<string> MsaAppId { get; set; } = null!;

        /// <summary>
        /// Microsoft App Managed Identity Resource Id for the bot
        /// </summary>
        [Input("msaAppMSIResourceId")]
        public Input<string>? MsaAppMSIResourceId { get; set; }

        /// <summary>
        /// Microsoft App Tenant Id for the bot
        /// </summary>
        [Input("msaAppTenantId")]
        public Input<string>? MsaAppTenantId { get; set; }

        /// <summary>
        /// Microsoft App Type for the bot
        /// </summary>
        [Input("msaAppType")]
        public InputUnion<string, Pulumi.AzureNative.BotService.V20210301.MsaAppType>? MsaAppType { get; set; }

        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        [Input("openWithHint")]
        public Input<string>? OpenWithHint { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Contains resource parameters defined as key/value pairs.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// Whether the bot is in an isolated network
        /// </summary>
        [Input("publicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.BotService.V20210301.PublicNetworkAccess>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// Publishing credentials of the resource
        /// </summary>
        [Input("publishingCredentials")]
        public Input<string>? PublishingCredentials { get; set; }

        /// <summary>
        /// The channel schema transformation version for the bot
        /// </summary>
        [Input("schemaTransformationVersion")]
        public Input<string>? SchemaTransformationVersion { get; set; }

        /// <summary>
        /// The storage resourceId for the bot
        /// </summary>
        [Input("storageResourceId")]
        public Input<string>? StorageResourceId { get; set; }

        public BotPropertiesArgs()
        {
            IsStreamingSupported = false;
            PublicNetworkAccess = "Enabled";
        }
    }
}
