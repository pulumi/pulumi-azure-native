// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20220615Preview.Inputs
{

    /// <summary>
    /// Properties for a Connection Setting Item
    /// </summary>
    public sealed class ConnectionSettingPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Client Id associated with the Connection Setting.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Client Secret associated with the Connection Setting
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Id of the Connection Setting.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the Connection Setting.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputList<Inputs.ConnectionSettingParameterArgs>? _parameters;

        /// <summary>
        /// Service Provider Parameters associated with the Connection Setting
        /// </summary>
        public InputList<Inputs.ConnectionSettingParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.ConnectionSettingParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// Scopes associated with the Connection Setting
        /// </summary>
        [Input("scopes")]
        public Input<string>? Scopes { get; set; }

        /// <summary>
        /// Service Provider Display Name associated with the Connection Setting
        /// </summary>
        [Input("serviceProviderDisplayName")]
        public Input<string>? ServiceProviderDisplayName { get; set; }

        /// <summary>
        /// Service Provider Id associated with the Connection Setting
        /// </summary>
        [Input("serviceProviderId")]
        public Input<string>? ServiceProviderId { get; set; }

        public ConnectionSettingPropertiesArgs()
        {
            Scopes = "";
        }
        public static new ConnectionSettingPropertiesArgs Empty => new ConnectionSettingPropertiesArgs();
    }
}
