// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20210501Preview.Outputs
{

    /// <summary>
    /// A site for the Direct Line channel
    /// </summary>
    [OutputType]
    public sealed class DirectLineSiteResponse
    {
        /// <summary>
        /// DirectLine application id
        /// </summary>
        public readonly string? AppId;
        /// <summary>
        /// Entity Tag
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Whether this site is enabled for block user upload.
        /// </summary>
        public readonly bool? IsBlockUserUploadEnabled;
        /// <summary>
        /// Whether this site is disabled detailed logging for
        /// </summary>
        public readonly bool? IsDetailedLoggingEnabled;
        /// <summary>
        /// Whether this site is enabled for DirectLine channel
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Whether this site is EndpointParameters enabled for channel
        /// </summary>
        public readonly bool? IsEndpointParametersEnabled;
        /// <summary>
        /// Whether this no-storage site is disabled detailed logging for
        /// </summary>
        public readonly bool? IsNoStorageEnabled;
        /// <summary>
        /// Whether this site is enabled for authentication with Bot Framework.
        /// </summary>
        public readonly bool? IsSecureSiteEnabled;
        /// <summary>
        /// Whether this site is token enabled for channel
        /// </summary>
        public readonly bool IsTokenEnabled;
        /// <summary>
        /// Whether this site is enabled for Bot Framework V1 protocol.
        /// </summary>
        public readonly bool IsV1Enabled;
        /// <summary>
        /// Whether this site is enabled for Bot Framework V3 protocol.
        /// </summary>
        public readonly bool IsV3Enabled;
        /// <summary>
        /// Whether this site is enabled for Webchat Speech
        /// </summary>
        public readonly bool? IsWebChatSpeechEnabled;
        /// <summary>
        /// Whether this site is enabled for preview versions of Webchat
        /// </summary>
        public readonly bool? IsWebchatPreviewEnabled;
        /// <summary>
        /// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
        /// </summary>
        public readonly string Key2;
        /// <summary>
        /// Site Id
        /// </summary>
        public readonly string SiteId;
        /// <summary>
        /// Site name
        /// </summary>
        public readonly string SiteName;
        /// <summary>
        /// Tenant Id
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
        /// </summary>
        public readonly ImmutableArray<string> TrustedOrigins;

        [OutputConstructor]
        private DirectLineSiteResponse(
            string? appId,

            string? eTag,

            bool? isBlockUserUploadEnabled,

            bool? isDetailedLoggingEnabled,

            bool isEnabled,

            bool? isEndpointParametersEnabled,

            bool? isNoStorageEnabled,

            bool? isSecureSiteEnabled,

            bool isTokenEnabled,

            bool isV1Enabled,

            bool isV3Enabled,

            bool? isWebChatSpeechEnabled,

            bool? isWebchatPreviewEnabled,

            string key,

            string key2,

            string siteId,

            string siteName,

            string? tenantId,

            ImmutableArray<string> trustedOrigins)
        {
            AppId = appId;
            ETag = eTag;
            IsBlockUserUploadEnabled = isBlockUserUploadEnabled;
            IsDetailedLoggingEnabled = isDetailedLoggingEnabled;
            IsEnabled = isEnabled;
            IsEndpointParametersEnabled = isEndpointParametersEnabled;
            IsNoStorageEnabled = isNoStorageEnabled;
            IsSecureSiteEnabled = isSecureSiteEnabled;
            IsTokenEnabled = isTokenEnabled;
            IsV1Enabled = isV1Enabled;
            IsV3Enabled = isV3Enabled;
            IsWebChatSpeechEnabled = isWebChatSpeechEnabled;
            IsWebchatPreviewEnabled = isWebchatPreviewEnabled;
            Key = key;
            Key2 = key2;
            SiteId = siteId;
            SiteName = siteName;
            TenantId = tenantId;
            TrustedOrigins = trustedOrigins;
        }
    }
}
