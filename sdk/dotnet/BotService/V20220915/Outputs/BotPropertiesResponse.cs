// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20220915.Outputs
{

    /// <summary>
    /// The parameters to provide for the Bot.
    /// </summary>
    [OutputType]
    public sealed class BotPropertiesResponse
    {
        /// <summary>
        /// Contains resource all settings defined as key/value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? AllSettings;
        /// <summary>
        /// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
        /// </summary>
        public readonly string? AppPasswordHint;
        /// <summary>
        /// The CMK encryption status
        /// </summary>
        public readonly string CmekEncryptionStatus;
        /// <summary>
        /// The CMK Url
        /// </summary>
        public readonly string? CmekKeyVaultUrl;
        /// <summary>
        /// Collection of channels for which the bot is configured
        /// </summary>
        public readonly ImmutableArray<string> ConfiguredChannels;
        /// <summary>
        /// The description of the bot
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Application Insights key
        /// </summary>
        public readonly string? DeveloperAppInsightKey;
        /// <summary>
        /// The Application Insights Api Key
        /// </summary>
        public readonly string? DeveloperAppInsightsApiKey;
        /// <summary>
        /// The Application Insights App Id
        /// </summary>
        public readonly string? DeveloperAppInsightsApplicationId;
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        public readonly bool? DisableLocalAuth;
        /// <summary>
        /// The Name of the bot
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Collection of channels for which the bot is enabled
        /// </summary>
        public readonly ImmutableArray<string> EnabledChannels;
        /// <summary>
        /// The bot's endpoint
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The bot's endpoint version
        /// </summary>
        public readonly string EndpointVersion;
        /// <summary>
        /// The Icon Url of the bot
        /// </summary>
        public readonly string? IconUrl;
        /// <summary>
        /// Whether Cmek is enabled
        /// </summary>
        public readonly bool? IsCmekEnabled;
        /// <summary>
        /// Whether the bot is developerAppInsightsApiKey set
        /// </summary>
        public readonly bool IsDeveloperAppInsightsApiKeySet;
        /// <summary>
        /// Whether the bot is streaming supported
        /// </summary>
        public readonly bool? IsStreamingSupported;
        /// <summary>
        /// Collection of LUIS App Ids
        /// </summary>
        public readonly ImmutableArray<string> LuisAppIds;
        /// <summary>
        /// The LUIS Key
        /// </summary>
        public readonly string? LuisKey;
        /// <summary>
        /// The bot's manifest url
        /// </summary>
        public readonly string? ManifestUrl;
        /// <summary>
        /// Token used to migrate non Azure bot to azure subscription
        /// </summary>
        public readonly string MigrationToken;
        /// <summary>
        /// Microsoft App Id for the bot
        /// </summary>
        public readonly string MsaAppId;
        /// <summary>
        /// Microsoft App Managed Identity Resource Id for the bot
        /// </summary>
        public readonly string? MsaAppMSIResourceId;
        /// <summary>
        /// Microsoft App Tenant Id for the bot
        /// </summary>
        public readonly string? MsaAppTenantId;
        /// <summary>
        /// Microsoft App Type for the bot
        /// </summary>
        public readonly string? MsaAppType;
        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        public readonly string? OpenWithHint;
        /// <summary>
        /// Contains resource parameters defined as key/value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Parameters;
        /// <summary>
        /// List of Private Endpoint Connections configured for the bot
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Provisioning state of the resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether the bot is in an isolated network
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Publishing credentials of the resource
        /// </summary>
        public readonly string? PublishingCredentials;
        /// <summary>
        /// The channel schema transformation version for the bot
        /// </summary>
        public readonly string? SchemaTransformationVersion;
        /// <summary>
        /// The storage resourceId for the bot
        /// </summary>
        public readonly string? StorageResourceId;
        /// <summary>
        /// The Tenant Id for the bot
        /// </summary>
        public readonly string? TenantId;

        [OutputConstructor]
        private BotPropertiesResponse(
            ImmutableDictionary<string, string>? allSettings,

            string? appPasswordHint,

            string cmekEncryptionStatus,

            string? cmekKeyVaultUrl,

            ImmutableArray<string> configuredChannels,

            string? description,

            string? developerAppInsightKey,

            string? developerAppInsightsApiKey,

            string? developerAppInsightsApplicationId,

            bool? disableLocalAuth,

            string displayName,

            ImmutableArray<string> enabledChannels,

            string endpoint,

            string endpointVersion,

            string? iconUrl,

            bool? isCmekEnabled,

            bool isDeveloperAppInsightsApiKeySet,

            bool? isStreamingSupported,

            ImmutableArray<string> luisAppIds,

            string? luisKey,

            string? manifestUrl,

            string migrationToken,

            string msaAppId,

            string? msaAppMSIResourceId,

            string? msaAppTenantId,

            string? msaAppType,

            string? openWithHint,

            ImmutableDictionary<string, string>? parameters,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            string? publishingCredentials,

            string? schemaTransformationVersion,

            string? storageResourceId,

            string? tenantId)
        {
            AllSettings = allSettings;
            AppPasswordHint = appPasswordHint;
            CmekEncryptionStatus = cmekEncryptionStatus;
            CmekKeyVaultUrl = cmekKeyVaultUrl;
            ConfiguredChannels = configuredChannels;
            Description = description;
            DeveloperAppInsightKey = developerAppInsightKey;
            DeveloperAppInsightsApiKey = developerAppInsightsApiKey;
            DeveloperAppInsightsApplicationId = developerAppInsightsApplicationId;
            DisableLocalAuth = disableLocalAuth;
            DisplayName = displayName;
            EnabledChannels = enabledChannels;
            Endpoint = endpoint;
            EndpointVersion = endpointVersion;
            IconUrl = iconUrl;
            IsCmekEnabled = isCmekEnabled;
            IsDeveloperAppInsightsApiKeySet = isDeveloperAppInsightsApiKeySet;
            IsStreamingSupported = isStreamingSupported;
            LuisAppIds = luisAppIds;
            LuisKey = luisKey;
            ManifestUrl = manifestUrl;
            MigrationToken = migrationToken;
            MsaAppId = msaAppId;
            MsaAppMSIResourceId = msaAppMSIResourceId;
            MsaAppTenantId = msaAppTenantId;
            MsaAppType = msaAppType;
            OpenWithHint = openWithHint;
            Parameters = parameters;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            PublishingCredentials = publishingCredentials;
            SchemaTransformationVersion = schemaTransformationVersion;
            StorageResourceId = storageResourceId;
            TenantId = tenantId;
        }
    }
}
