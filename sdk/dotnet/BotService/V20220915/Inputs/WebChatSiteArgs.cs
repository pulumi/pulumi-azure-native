// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BotService.V20220915.Inputs
{

    /// <summary>
    /// A site for the Webchat channel
    /// </summary>
    public sealed class WebChatSiteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DirectLine application id
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// Entity Tag
        /// </summary>
        [Input("eTag")]
        public Input<string>? ETag { get; set; }

        /// <summary>
        /// Whether this site is enabled for block user upload.
        /// </summary>
        [Input("isBlockUserUploadEnabled")]
        public Input<bool>? IsBlockUserUploadEnabled { get; set; }

        /// <summary>
        /// Whether this site is disabled detailed logging for
        /// </summary>
        [Input("isDetailedLoggingEnabled")]
        public Input<bool>? IsDetailedLoggingEnabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for DirectLine channel
        /// </summary>
        [Input("isEnabled", required: true)]
        public Input<bool> IsEnabled { get; set; } = null!;

        /// <summary>
        /// Whether this site is EndpointParameters enabled for channel
        /// </summary>
        [Input("isEndpointParametersEnabled")]
        public Input<bool>? IsEndpointParametersEnabled { get; set; }

        /// <summary>
        /// Whether this no-storage site is disabled detailed logging for
        /// </summary>
        [Input("isNoStorageEnabled")]
        public Input<bool>? IsNoStorageEnabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for authentication with Bot Framework.
        /// </summary>
        [Input("isSecureSiteEnabled")]
        public Input<bool>? IsSecureSiteEnabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for Bot Framework V1 protocol.
        /// </summary>
        [Input("isV1Enabled")]
        public Input<bool>? IsV1Enabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for Bot Framework V3 protocol.
        /// </summary>
        [Input("isV3Enabled")]
        public Input<bool>? IsV3Enabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for Webchat Speech
        /// </summary>
        [Input("isWebChatSpeechEnabled")]
        public Input<bool>? IsWebChatSpeechEnabled { get; set; }

        /// <summary>
        /// Whether this site is enabled for preview versions of Webchat
        /// </summary>
        [Input("isWebchatPreviewEnabled", required: true)]
        public Input<bool> IsWebchatPreviewEnabled { get; set; } = null!;

        /// <summary>
        /// Site name
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// Tenant Id
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("trustedOrigins")]
        private InputList<string>? _trustedOrigins;

        /// <summary>
        /// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
        /// </summary>
        public InputList<string> TrustedOrigins
        {
            get => _trustedOrigins ?? (_trustedOrigins = new InputList<string>());
            set => _trustedOrigins = value;
        }

        public WebChatSiteArgs()
        {
            IsWebChatSpeechEnabled = false;
            IsWebchatPreviewEnabled = false;
        }
        public static new WebChatSiteArgs Empty => new WebChatSiteArgs();
    }
}
