// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Kubernetes.V20210401Preview
{
    public static class ListConnectedClusterUserCredentials
    {
        /// <summary>
        /// The list of credential result response.
        /// </summary>
        public static Task<ListConnectedClusterUserCredentialsResult> InvokeAsync(ListConnectedClusterUserCredentialsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListConnectedClusterUserCredentialsResult>("azure-nextgen:kubernetes/v20210401preview:listConnectedClusterUserCredentials", args ?? new ListConnectedClusterUserCredentialsArgs(), options.WithVersion());
    }


    public sealed class ListConnectedClusterUserCredentialsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The mode of client authentication.
        /// </summary>
        [Input("authenticationMethod", required: true)]
        public Union<string, Pulumi.AzureNextGen.Kubernetes.V20210401Preview.AuthenticationMethod> AuthenticationMethod { get; set; } = null!;

        /// <summary>
        /// Boolean value to indicate whether the request is for client side proxy or not
        /// </summary>
        [Input("clientProxy", required: true)]
        public bool ClientProxy { get; set; }

        /// <summary>
        /// The name of the Kubernetes cluster on which get is called.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListConnectedClusterUserCredentialsArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListConnectedClusterUserCredentialsResult
    {
        /// <summary>
        /// Contains the REP (rendezvous endpoint) and “Sender” access token.
        /// </summary>
        public readonly Outputs.HybridConnectionConfigResponseResult HybridConnectionConfig;
        /// <summary>
        /// Base64-encoded Kubernetes configuration file.
        /// </summary>
        public readonly ImmutableArray<Outputs.CredentialResultResponseResult> Kubeconfigs;

        [OutputConstructor]
        private ListConnectedClusterUserCredentialsResult(
            Outputs.HybridConnectionConfigResponseResult hybridConnectionConfig,

            ImmutableArray<Outputs.CredentialResultResponseResult> kubeconfigs)
        {
            HybridConnectionConfig = hybridConnectionConfig;
            Kubeconfigs = kubeconfigs;
        }
    }
}
