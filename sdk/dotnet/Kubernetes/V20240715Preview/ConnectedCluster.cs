// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kubernetes.V20240715Preview
{
    /// <summary>
    /// Represents a connected cluster.
    /// </summary>
    [AzureNativeResourceType("azure-native:kubernetes/v20240715preview:ConnectedCluster")]
    public partial class ConnectedCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AAD profile for the connected cluster.
        /// </summary>
        [Output("aadProfile")]
        public Output<Outputs.AadProfileResponse?> AadProfile { get; private set; } = null!;

        /// <summary>
        /// Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure.
        /// </summary>
        [Output("agentPublicKeyCertificate")]
        public Output<string> AgentPublicKeyCertificate { get; private set; } = null!;

        /// <summary>
        /// Version of the agent running on the connected cluster resource
        /// </summary>
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        /// <summary>
        /// Arc agentry configuration for the provisioned cluster.
        /// </summary>
        [Output("arcAgentProfile")]
        public Output<Outputs.ArcAgentProfileResponse?> ArcAgentProfile { get; private set; } = null!;

        /// <summary>
        /// Configuration settings for customizing the behavior of the connected cluster.
        /// </summary>
        [Output("arcAgentryConfigurations")]
        public Output<ImmutableArray<Outputs.ArcAgentryConfigurationsResponse>> ArcAgentryConfigurations { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Azure Hybrid Benefit is opted in
        /// </summary>
        [Output("azureHybridBenefit")]
        public Output<string?> AzureHybridBenefit { get; private set; } = null!;

        /// <summary>
        /// Represents the connectivity status of the connected cluster.
        /// </summary>
        [Output("connectivityStatus")]
        public Output<string> ConnectivityStatus { get; private set; } = null!;

        /// <summary>
        /// The Kubernetes distribution running on this connected cluster.
        /// </summary>
        [Output("distribution")]
        public Output<string?> Distribution { get; private set; } = null!;

        /// <summary>
        /// The Kubernetes distribution version on this connected cluster.
        /// </summary>
        [Output("distributionVersion")]
        public Output<string?> DistributionVersion { get; private set; } = null!;

        /// <summary>
        /// Details of the gateway used by the Arc router for connectivity.
        /// </summary>
        [Output("gateway")]
        public Output<Outputs.GatewayResponse?> Gateway { get; private set; } = null!;

        /// <summary>
        /// The identity of the connected cluster.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ConnectedClusterIdentityResponse> Identity { get; private set; } = null!;

        /// <summary>
        /// The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on.
        /// </summary>
        [Output("infrastructure")]
        public Output<string?> Infrastructure { get; private set; } = null!;

        /// <summary>
        /// The kind of connected cluster.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The Kubernetes version of the connected cluster resource
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// Time representing the last instance when heart beat was received from the cluster
        /// </summary>
        [Output("lastConnectivityTime")]
        public Output<string> LastConnectivityTime { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Expiration time of the managed identity certificate
        /// </summary>
        [Output("managedIdentityCertificateExpirationTime")]
        public Output<string> ManagedIdentityCertificateExpirationTime { get; private set; } = null!;

        /// <summary>
        /// More properties related to the Connected Cluster
        /// </summary>
        [Output("miscellaneousProperties")]
        public Output<ImmutableDictionary<string, string>> MiscellaneousProperties { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Connected cluster offering
        /// </summary>
        [Output("offering")]
        public Output<string> Offering { get; private set; } = null!;

        /// <summary>
        /// Open ID Connect (OIDC) Issuer Profile for the connected cluster.
        /// </summary>
        [Output("oidcIssuerProfile")]
        public Output<Outputs.OidcIssuerProfileResponse?> OidcIssuerProfile { get; private set; } = null!;

        /// <summary>
        /// This is populated only if privateLinkState is enabled. The resource id of the private link scope this connected cluster is assigned to, if any.
        /// </summary>
        [Output("privateLinkScopeResourceId")]
        public Output<string?> PrivateLinkScopeResourceId { get; private set; } = null!;

        /// <summary>
        /// Property which describes the state of private link on a connected cluster resource.
        /// </summary>
        [Output("privateLinkState")]
        public Output<string?> PrivateLinkState { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the connected cluster resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Security profile for the connected cluster.
        /// </summary>
        [Output("securityProfile")]
        public Output<Outputs.SecurityProfileResponse?> SecurityProfile { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Number of CPU cores present in the connected cluster resource
        /// </summary>
        [Output("totalCoreCount")]
        public Output<int> TotalCoreCount { get; private set; } = null!;

        /// <summary>
        /// Number of nodes present in the connected cluster resource
        /// </summary>
        [Output("totalNodeCount")]
        public Output<int> TotalNodeCount { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectedCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectedCluster(string name, ConnectedClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kubernetes/v20240715preview:ConnectedCluster", name, args ?? new ConnectedClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectedCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kubernetes/v20240715preview:ConnectedCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20200101preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20210301:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20210401preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20211001:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20220501preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20221001preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20231101preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20240101:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20240201preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20240601preview:ConnectedCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:kubernetes/v20240701preview:ConnectedCluster" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectedCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectedCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConnectedCluster(name, id, options);
        }
    }

    public sealed class ConnectedClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AAD profile for the connected cluster.
        /// </summary>
        [Input("aadProfile")]
        public Input<Inputs.AadProfileArgs>? AadProfile { get; set; }

        /// <summary>
        /// Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure.
        /// </summary>
        [Input("agentPublicKeyCertificate", required: true)]
        public Input<string> AgentPublicKeyCertificate { get; set; } = null!;

        /// <summary>
        /// Arc agentry configuration for the provisioned cluster.
        /// </summary>
        [Input("arcAgentProfile")]
        public Input<Inputs.ArcAgentProfileArgs>? ArcAgentProfile { get; set; }

        [Input("arcAgentryConfigurations")]
        private InputList<Inputs.ArcAgentryConfigurationsArgs>? _arcAgentryConfigurations;

        /// <summary>
        /// Configuration settings for customizing the behavior of the connected cluster.
        /// </summary>
        public InputList<Inputs.ArcAgentryConfigurationsArgs> ArcAgentryConfigurations
        {
            get => _arcAgentryConfigurations ?? (_arcAgentryConfigurations = new InputList<Inputs.ArcAgentryConfigurationsArgs>());
            set => _arcAgentryConfigurations = value;
        }

        /// <summary>
        /// Indicates whether Azure Hybrid Benefit is opted in
        /// </summary>
        [Input("azureHybridBenefit")]
        public InputUnion<string, Pulumi.AzureNative.Kubernetes.V20240715Preview.AzureHybridBenefit>? AzureHybridBenefit { get; set; }

        /// <summary>
        /// The name of the Kubernetes cluster on which get is called.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The Kubernetes distribution running on this connected cluster.
        /// </summary>
        [Input("distribution")]
        public Input<string>? Distribution { get; set; }

        /// <summary>
        /// The Kubernetes distribution version on this connected cluster.
        /// </summary>
        [Input("distributionVersion")]
        public Input<string>? DistributionVersion { get; set; }

        /// <summary>
        /// Details of the gateway used by the Arc router for connectivity.
        /// </summary>
        [Input("gateway")]
        public Input<Inputs.GatewayArgs>? Gateway { get; set; }

        /// <summary>
        /// The identity of the connected cluster.
        /// </summary>
        [Input("identity", required: true)]
        public Input<Inputs.ConnectedClusterIdentityArgs> Identity { get; set; } = null!;

        /// <summary>
        /// The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on.
        /// </summary>
        [Input("infrastructure")]
        public Input<string>? Infrastructure { get; set; }

        /// <summary>
        /// The kind of connected cluster.
        /// </summary>
        [Input("kind")]
        public InputUnion<string, Pulumi.AzureNative.Kubernetes.V20240715Preview.ConnectedClusterKind>? Kind { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Open ID Connect (OIDC) Issuer Profile for the connected cluster.
        /// </summary>
        [Input("oidcIssuerProfile")]
        public Input<Inputs.OidcIssuerProfileArgs>? OidcIssuerProfile { get; set; }

        /// <summary>
        /// This is populated only if privateLinkState is enabled. The resource id of the private link scope this connected cluster is assigned to, if any.
        /// </summary>
        [Input("privateLinkScopeResourceId")]
        public Input<string>? PrivateLinkScopeResourceId { get; set; }

        /// <summary>
        /// Property which describes the state of private link on a connected cluster resource.
        /// </summary>
        [Input("privateLinkState")]
        public InputUnion<string, Pulumi.AzureNative.Kubernetes.V20240715Preview.PrivateLinkState>? PrivateLinkState { get; set; }

        /// <summary>
        /// Provisioning state of the connected cluster resource.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.Kubernetes.V20240715Preview.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Security profile for the connected cluster.
        /// </summary>
        [Input("securityProfile")]
        public Input<Inputs.SecurityProfileArgs>? SecurityProfile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ConnectedClusterArgs()
        {
            AzureHybridBenefit = "NotApplicable";
            PrivateLinkState = "Disabled";
        }
        public static new ConnectedClusterArgs Empty => new ConnectedClusterArgs();
    }
}
