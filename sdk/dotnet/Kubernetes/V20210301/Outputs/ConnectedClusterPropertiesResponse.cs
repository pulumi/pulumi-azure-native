// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Kubernetes.V20210301.Outputs
{

    /// <summary>
    /// Properties of the connected cluster.
    /// </summary>
    [OutputType]
    public sealed class ConnectedClusterPropertiesResponse
    {
        /// <summary>
        /// Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure.
        /// </summary>
        public readonly string AgentPublicKeyCertificate;
        /// <summary>
        /// Version of the agent running on the connected cluster resource
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// Represents the connectivity status of the connected cluster.
        /// </summary>
        public readonly string ConnectivityStatus;
        /// <summary>
        /// The Kubernetes distribution running on this connected cluster.
        /// </summary>
        public readonly string? Distribution;
        /// <summary>
        /// The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on.
        /// </summary>
        public readonly string? Infrastructure;
        /// <summary>
        /// The Kubernetes version of the connected cluster resource
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// Time representing the last instance when heart beat was received from the cluster
        /// </summary>
        public readonly string LastConnectivityTime;
        /// <summary>
        /// Expiration time of the managed identity certificate
        /// </summary>
        public readonly string ManagedIdentityCertificateExpirationTime;
        /// <summary>
        /// Connected cluster offering
        /// </summary>
        public readonly string Offering;
        /// <summary>
        /// Provisioning state of the connected cluster resource.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Number of CPU cores present in the connected cluster resource
        /// </summary>
        public readonly int TotalCoreCount;
        /// <summary>
        /// Number of nodes present in the connected cluster resource
        /// </summary>
        public readonly int TotalNodeCount;

        [OutputConstructor]
        private ConnectedClusterPropertiesResponse(
            string agentPublicKeyCertificate,

            string agentVersion,

            string connectivityStatus,

            string? distribution,

            string? infrastructure,

            string kubernetesVersion,

            string lastConnectivityTime,

            string managedIdentityCertificateExpirationTime,

            string offering,

            string? provisioningState,

            int totalCoreCount,

            int totalNodeCount)
        {
            AgentPublicKeyCertificate = agentPublicKeyCertificate;
            AgentVersion = agentVersion;
            ConnectivityStatus = connectivityStatus;
            Distribution = distribution;
            Infrastructure = infrastructure;
            KubernetesVersion = kubernetesVersion;
            LastConnectivityTime = lastConnectivityTime;
            ManagedIdentityCertificateExpirationTime = managedIdentityCertificateExpirationTime;
            Offering = offering;
            ProvisioningState = provisioningState;
            TotalCoreCount = totalCoreCount;
            TotalNodeCount = totalNodeCount;
        }
    }
}
