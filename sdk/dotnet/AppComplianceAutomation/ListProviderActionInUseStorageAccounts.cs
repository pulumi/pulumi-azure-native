// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppComplianceAutomation
{
    public static class ListProviderActionInUseStorageAccounts
    {
        /// <summary>
        /// List the storage accounts which are in use by related reports
        /// Azure REST API version: 2024-06-27.
        /// </summary>
        public static Task<ListProviderActionInUseStorageAccountsResult> InvokeAsync(ListProviderActionInUseStorageAccountsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListProviderActionInUseStorageAccountsResult>("azure-native:appcomplianceautomation:listProviderActionInUseStorageAccounts", args ?? new ListProviderActionInUseStorageAccountsArgs(), options.WithDefaults());

        /// <summary>
        /// List the storage accounts which are in use by related reports
        /// Azure REST API version: 2024-06-27.
        /// </summary>
        public static Output<ListProviderActionInUseStorageAccountsResult> Invoke(ListProviderActionInUseStorageAccountsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListProviderActionInUseStorageAccountsResult>("azure-native:appcomplianceautomation:listProviderActionInUseStorageAccounts", args ?? new ListProviderActionInUseStorageAccountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListProviderActionInUseStorageAccountsArgs : global::Pulumi.InvokeArgs
    {
        [Input("subscriptionIds")]
        private List<string>? _subscriptionIds;

        /// <summary>
        /// List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
        /// </summary>
        public List<string> SubscriptionIds
        {
            get => _subscriptionIds ?? (_subscriptionIds = new List<string>());
            set => _subscriptionIds = value;
        }

        public ListProviderActionInUseStorageAccountsArgs()
        {
        }
        public static new ListProviderActionInUseStorageAccountsArgs Empty => new ListProviderActionInUseStorageAccountsArgs();
    }

    public sealed class ListProviderActionInUseStorageAccountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("subscriptionIds")]
        private InputList<string>? _subscriptionIds;

        /// <summary>
        /// List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
        /// </summary>
        public InputList<string> SubscriptionIds
        {
            get => _subscriptionIds ?? (_subscriptionIds = new InputList<string>());
            set => _subscriptionIds = value;
        }

        public ListProviderActionInUseStorageAccountsInvokeArgs()
        {
        }
        public static new ListProviderActionInUseStorageAccountsInvokeArgs Empty => new ListProviderActionInUseStorageAccountsInvokeArgs();
    }


    [OutputType]
    public sealed class ListProviderActionInUseStorageAccountsResult
    {
        /// <summary>
        /// The storage account list which in use in related reports.
        /// </summary>
        public readonly ImmutableArray<Outputs.StorageInfoResponse> StorageAccountList;

        [OutputConstructor]
        private ListProviderActionInUseStorageAccountsResult(ImmutableArray<Outputs.StorageInfoResponse> storageAccountList)
        {
            StorageAccountList = storageAccountList;
        }
    }
}
