// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppComplianceAutomation.V20240627
{
    /// <summary>
    /// A class represent an AppComplianceAutomation report resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:appcomplianceautomation/v20240627:Report")]
    public partial class Report : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of synchronized certification records.
        /// </summary>
        [Output("certRecords")]
        public Output<ImmutableArray<Outputs.CertSyncRecordResponse>> CertRecords { get; private set; } = null!;

        /// <summary>
        /// Report compliance status.
        /// </summary>
        [Output("complianceStatus")]
        public Output<Outputs.ReportComplianceStatusResponse> ComplianceStatus { get; private set; } = null!;

        /// <summary>
        /// List of report error codes.
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<string>> Errors { get; private set; } = null!;

        /// <summary>
        /// Report last collection trigger time.
        /// </summary>
        [Output("lastTriggerTime")]
        public Output<string> LastTriggerTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Report next collection trigger time.
        /// </summary>
        [Output("nextTriggerTime")]
        public Output<string> NextTriggerTime { get; private set; } = null!;

        /// <summary>
        /// A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
        /// </summary>
        [Output("offerGuid")]
        public Output<string?> OfferGuid { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// List of resource data.
        /// </summary>
        [Output("resources")]
        public Output<ImmutableArray<Outputs.ResourceMetadataResponse>> Resources { get; private set; } = null!;

        /// <summary>
        /// Report status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The information of 'bring your own storage' binding to the report
        /// </summary>
        [Output("storageInfo")]
        public Output<Outputs.StorageInfoResponse?> StorageInfo { get; private set; } = null!;

        /// <summary>
        /// List of subscription Ids.
        /// </summary>
        [Output("subscriptions")]
        public Output<ImmutableArray<string>> Subscriptions { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Report's tenant id.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.
        /// An example of valid timezone id is "Pacific Standard Time".
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        /// <summary>
        /// Report collection trigger time.
        /// </summary>
        [Output("triggerTime")]
        public Output<string> TriggerTime { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Report resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Report(string name, ReportArgs args, CustomResourceOptions? options = null)
            : base("azure-native:appcomplianceautomation/v20240627:Report", name, args ?? new ReportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Report(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:appcomplianceautomation/v20240627:Report", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:appcomplianceautomation:Report" },
                    new global::Pulumi.Alias { Type = "azure-native:appcomplianceautomation/v20221116preview:Report" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Report resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Report Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Report(name, id, options);
        }
    }

    public sealed class ReportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
        /// </summary>
        [Input("offerGuid")]
        public Input<string>? OfferGuid { get; set; }

        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName")]
        public Input<string>? ReportName { get; set; }

        [Input("resources", required: true)]
        private InputList<Inputs.ResourceMetadataArgs>? _resources;

        /// <summary>
        /// List of resource data.
        /// </summary>
        public InputList<Inputs.ResourceMetadataArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.ResourceMetadataArgs>());
            set => _resources = value;
        }

        /// <summary>
        /// The information of 'bring your own storage' binding to the report
        /// </summary>
        [Input("storageInfo")]
        public Input<Inputs.StorageInfoArgs>? StorageInfo { get; set; }

        /// <summary>
        /// Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.
        /// An example of valid timezone id is "Pacific Standard Time".
        /// </summary>
        [Input("timeZone", required: true)]
        public Input<string> TimeZone { get; set; } = null!;

        /// <summary>
        /// Report collection trigger time.
        /// </summary>
        [Input("triggerTime", required: true)]
        public Input<string> TriggerTime { get; set; } = null!;

        public ReportArgs()
        {
        }
        public static new ReportArgs Empty => new ReportArgs();
    }
}
