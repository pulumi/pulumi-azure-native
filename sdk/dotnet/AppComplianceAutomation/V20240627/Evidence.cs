// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppComplianceAutomation.V20240627
{
    /// <summary>
    /// A class represent an AppComplianceAutomation evidence resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:appcomplianceautomation/v20240627:Evidence")]
    public partial class Evidence : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Control id.
        /// </summary>
        [Output("controlId")]
        public Output<string?> ControlId { get; private set; } = null!;

        /// <summary>
        /// Evidence type.
        /// </summary>
        [Output("evidenceType")]
        public Output<string?> EvidenceType { get; private set; } = null!;

        /// <summary>
        /// Extra data considered as evidence.
        /// </summary>
        [Output("extraData")]
        public Output<string?> ExtraData { get; private set; } = null!;

        /// <summary>
        /// The path of the file in storage.
        /// </summary>
        [Output("filePath")]
        public Output<string> FilePath { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure lifecycle management
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Responsibility id.
        /// </summary>
        [Output("responsibilityId")]
        public Output<string?> ResponsibilityId { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Evidence resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Evidence(string name, EvidenceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:appcomplianceautomation/v20240627:Evidence", name, args ?? new EvidenceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Evidence(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:appcomplianceautomation/v20240627:Evidence", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:appcomplianceautomation:Evidence" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Evidence resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Evidence Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Evidence(name, id, options);
        }
    }

    public sealed class EvidenceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Control id.
        /// </summary>
        [Input("controlId")]
        public Input<string>? ControlId { get; set; }

        /// <summary>
        /// The evidence name.
        /// </summary>
        [Input("evidenceName")]
        public Input<string>? EvidenceName { get; set; }

        /// <summary>
        /// Evidence type.
        /// </summary>
        [Input("evidenceType")]
        public InputUnion<string, Pulumi.AzureNative.AppComplianceAutomation.V20240627.EvidenceType>? EvidenceType { get; set; }

        /// <summary>
        /// Extra data considered as evidence.
        /// </summary>
        [Input("extraData")]
        public Input<string>? ExtraData { get; set; }

        /// <summary>
        /// The path of the file in storage.
        /// </summary>
        [Input("filePath", required: true)]
        public Input<string> FilePath { get; set; } = null!;

        /// <summary>
        /// The offerGuid which mapping to the reports.
        /// </summary>
        [Input("offerGuid")]
        public Input<string>? OfferGuid { get; set; }

        /// <summary>
        /// The tenant id of the report creator.
        /// </summary>
        [Input("reportCreatorTenantId")]
        public Input<string>? ReportCreatorTenantId { get; set; }

        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        /// <summary>
        /// Responsibility id.
        /// </summary>
        [Input("responsibilityId")]
        public Input<string>? ResponsibilityId { get; set; }

        public EvidenceArgs()
        {
        }
        public static new EvidenceArgs Empty => new EvidenceArgs();
    }
}
