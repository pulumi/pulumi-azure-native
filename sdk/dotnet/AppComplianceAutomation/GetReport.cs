// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppComplianceAutomation
{
    public static class GetReport
    {
        /// <summary>
        /// Get the AppComplianceAutomation report and its properties.
        /// API Version: 2022-11-16-preview.
        /// </summary>
        public static Task<GetReportResult> InvokeAsync(GetReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReportResult>("azure-native:appcomplianceautomation:getReport", args ?? new GetReportArgs(), options.WithDefaults());

        /// <summary>
        /// Get the AppComplianceAutomation report and its properties.
        /// API Version: 2022-11-16-preview.
        /// </summary>
        public static Output<GetReportResult> Invoke(GetReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReportResult>("azure-native:appcomplianceautomation:getReport", args ?? new GetReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName", required: true)]
        public string ReportName { get; set; } = null!;

        public GetReportArgs()
        {
        }
        public static new GetReportArgs Empty => new GetReportArgs();
    }

    public sealed class GetReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        public GetReportInvokeArgs()
        {
        }
        public static new GetReportInvokeArgs Empty => new GetReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Report property.
        /// </summary>
        public readonly Outputs.ReportPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetReportResult(
            string id,

            string name,

            Outputs.ReportPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
