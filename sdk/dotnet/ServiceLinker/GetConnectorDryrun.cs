// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker
{
    public static class GetConnectorDryrun
    {
        /// <summary>
        /// get a dryrun job
        /// Azure REST API version: 2022-11-01-preview.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2024-04-01, 2024-07-01-preview.
        /// </summary>
        public static Task<GetConnectorDryrunResult> InvokeAsync(GetConnectorDryrunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorDryrunResult>("azure-native:servicelinker:getConnectorDryrun", args ?? new GetConnectorDryrunArgs(), options.WithDefaults());

        /// <summary>
        /// get a dryrun job
        /// Azure REST API version: 2022-11-01-preview.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2024-04-01, 2024-07-01-preview.
        /// </summary>
        public static Output<GetConnectorDryrunResult> Invoke(GetConnectorDryrunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorDryrunResult>("azure-native:servicelinker:getConnectorDryrun", args ?? new GetConnectorDryrunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorDryrunArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of dryrun.
        /// </summary>
        [Input("dryrunName", required: true)]
        public string DryrunName { get; set; } = null!;

        /// <summary>
        /// The name of Azure region.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the target subscription.
        /// </summary>
        [Input("subscriptionId")]
        public string? SubscriptionId { get; set; }

        public GetConnectorDryrunArgs()
        {
        }
        public static new GetConnectorDryrunArgs Empty => new GetConnectorDryrunArgs();
    }

    public sealed class GetConnectorDryrunInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of dryrun.
        /// </summary>
        [Input("dryrunName", required: true)]
        public Input<string> DryrunName { get; set; } = null!;

        /// <summary>
        /// The name of Azure region.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the target subscription.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public GetConnectorDryrunInvokeArgs()
        {
        }
        public static new GetConnectorDryrunInvokeArgs Empty => new GetConnectorDryrunInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorDryrunResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// the preview of the operations for creation
        /// </summary>
        public readonly ImmutableArray<Outputs.DryrunOperationPreviewResponse> OperationPreviews;
        /// <summary>
        /// The parameters of the dryrun
        /// </summary>
        public readonly Outputs.CreateOrUpdateDryrunParametersResponse? Parameters;
        /// <summary>
        /// the result of the dryrun
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.BasicErrorDryrunPrerequisiteResultResponse, Outputs.PermissionsMissingDryrunPrerequisiteResultResponse>> PrerequisiteResults;
        /// <summary>
        /// The provisioning state. 
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConnectorDryrunResult(
            string id,

            string name,

            ImmutableArray<Outputs.DryrunOperationPreviewResponse> operationPreviews,

            Outputs.CreateOrUpdateDryrunParametersResponse? parameters,

            ImmutableArray<Union<Outputs.BasicErrorDryrunPrerequisiteResultResponse, Outputs.PermissionsMissingDryrunPrerequisiteResultResponse>> prerequisiteResults,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            OperationPreviews = operationPreviews;
            Parameters = parameters;
            PrerequisiteResults = prerequisiteResults;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
