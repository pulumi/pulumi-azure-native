// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.Inputs
{

    /// <summary>
    /// The access key directly from target resource properties, which target service is Azure Resource, such as Microsoft.Storage
    /// </summary>
    public sealed class AccessKeyInfoBaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The authentication type.
        /// Expected value is 'accessKey'.
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        [Input("permissions")]
        private InputList<Union<string, Pulumi.AzureNative.ServiceLinker.AccessKeyPermissions>>? _permissions;

        /// <summary>
        /// Permissions of the accessKey. `Read` and `Write` are for Azure Cosmos DB and Azure App Configuration, `Listen`, `Send` and `Manage` are for Azure Event Hub and Azure Service Bus.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.ServiceLinker.AccessKeyPermissions>> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Union<string, Pulumi.AzureNative.ServiceLinker.AccessKeyPermissions>>());
            set => _permissions = value;
        }

        public AccessKeyInfoBaseArgs()
        {
        }
        public static new AccessKeyInfoBaseArgs Empty => new AccessKeyInfoBaseArgs();
    }
}
