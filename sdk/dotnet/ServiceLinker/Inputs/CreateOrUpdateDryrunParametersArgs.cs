// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.Inputs
{

    /// <summary>
    /// The dryrun parameters for creation or update a linker
    /// </summary>
    public sealed class CreateOrUpdateDryrunParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of action for you dryrun job.
        /// Expected value is 'createOrUpdate'.
        /// </summary>
        [Input("actionName", required: true)]
        public Input<string> ActionName { get; set; } = null!;

        /// <summary>
        /// The authentication type.
        /// </summary>
        [Input("authInfo")]
        public object? AuthInfo { get; set; }

        /// <summary>
        /// The application client type
        /// </summary>
        [Input("clientType")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.ClientType>? ClientType { get; set; }

        /// <summary>
        /// The connection information consumed by applications, including secrets, connection strings.
        /// </summary>
        [Input("configurationInfo")]
        public Input<Inputs.ConfigurationInfoArgs>? ConfigurationInfo { get; set; }

        /// <summary>
        /// The network solution.
        /// </summary>
        [Input("publicNetworkSolution")]
        public Input<Inputs.PublicNetworkSolutionArgs>? PublicNetworkSolution { get; set; }

        /// <summary>
        /// connection scope in source service.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// An option to store secret value in secure place
        /// </summary>
        [Input("secretStore")]
        public Input<Inputs.SecretStoreArgs>? SecretStore { get; set; }

        /// <summary>
        /// The target service properties
        /// </summary>
        [Input("targetService")]
        public object? TargetService { get; set; }

        /// <summary>
        /// The VNet solution.
        /// </summary>
        [Input("vNetSolution")]
        public Input<Inputs.VNetSolutionArgs>? VNetSolution { get; set; }

        public CreateOrUpdateDryrunParametersArgs()
        {
        }
        public static new CreateOrUpdateDryrunParametersArgs Empty => new CreateOrUpdateDryrunParametersArgs();
    }
}
