// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.V20221101Preview
{
    /// <summary>
    /// Linker of source and target resource
    /// </summary>
    [AzureNativeResourceType("azure-native:servicelinker/v20221101preview:Linker")]
    public partial class Linker : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The authentication type.
        /// </summary>
        [Output("authInfo")]
        public Output<object?> AuthInfo { get; private set; } = null!;

        /// <summary>
        /// The application client type
        /// </summary>
        [Output("clientType")]
        public Output<string?> ClientType { get; private set; } = null!;

        /// <summary>
        /// The connection information consumed by applications, including secrets, connection strings.
        /// </summary>
        [Output("configurationInfo")]
        public Output<Outputs.ConfigurationInfoResponse?> ConfigurationInfo { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state. 
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The network solution.
        /// </summary>
        [Output("publicNetworkSolution")]
        public Output<Outputs.PublicNetworkSolutionResponse?> PublicNetworkSolution { get; private set; } = null!;

        /// <summary>
        /// connection scope in source service.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// An option to store secret value in secure place
        /// </summary>
        [Output("secretStore")]
        public Output<Outputs.SecretStoreResponse?> SecretStore { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The target service properties
        /// </summary>
        [Output("targetService")]
        public Output<object?> TargetService { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The VNet solution.
        /// </summary>
        [Output("vNetSolution")]
        public Output<Outputs.VNetSolutionResponse?> VNetSolution { get; private set; } = null!;


        /// <summary>
        /// Create a Linker resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Linker(string name, LinkerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:servicelinker/v20221101preview:Linker", name, args ?? new LinkerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Linker(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:servicelinker/v20221101preview:Linker", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker:Linker" },
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker/v20211101preview:Linker" },
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker/v20220101preview:Linker" },
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker/v20220501:Linker" },
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker/v20230401preview:Linker" },
                    new global::Pulumi.Alias { Type = "azure-native:servicelinker/v20240401:Linker" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Linker resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Linker Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Linker(name, id, options);
        }
    }

    public sealed class LinkerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The authentication type.
        /// </summary>
        [Input("authInfo")]
        public object? AuthInfo { get; set; }

        /// <summary>
        /// The application client type
        /// </summary>
        [Input("clientType")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20221101Preview.ClientType>? ClientType { get; set; }

        /// <summary>
        /// The connection information consumed by applications, including secrets, connection strings.
        /// </summary>
        [Input("configurationInfo")]
        public Input<Inputs.ConfigurationInfoArgs>? ConfigurationInfo { get; set; }

        /// <summary>
        /// The name Linker resource.
        /// </summary>
        [Input("linkerName")]
        public Input<string>? LinkerName { get; set; }

        /// <summary>
        /// The network solution.
        /// </summary>
        [Input("publicNetworkSolution")]
        public Input<Inputs.PublicNetworkSolutionArgs>? PublicNetworkSolution { get; set; }

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource to be connected.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        /// <summary>
        /// connection scope in source service.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// An option to store secret value in secure place
        /// </summary>
        [Input("secretStore")]
        public Input<Inputs.SecretStoreArgs>? SecretStore { get; set; }

        /// <summary>
        /// The target service properties
        /// </summary>
        [Input("targetService")]
        public object? TargetService { get; set; }

        /// <summary>
        /// The VNet solution.
        /// </summary>
        [Input("vNetSolution")]
        public Input<Inputs.VNetSolutionArgs>? VNetSolution { get; set; }

        public LinkerArgs()
        {
        }
        public static new LinkerArgs Empty => new LinkerArgs();
    }
}
