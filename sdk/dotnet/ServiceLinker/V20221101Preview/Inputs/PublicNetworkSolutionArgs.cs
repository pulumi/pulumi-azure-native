// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.V20221101Preview.Inputs
{

    /// <summary>
    /// Indicates public network solution, include firewall rules
    /// </summary>
    public sealed class PublicNetworkSolutionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.
        /// </summary>
        [Input("action")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20221101Preview.ActionType>? Action { get; set; }

        /// <summary>
        /// Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
        /// </summary>
        [Input("deleteOrUpdateBehavior")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20221101Preview.DeleteOrUpdateBehavior>? DeleteOrUpdateBehavior { get; set; }

        /// <summary>
        /// Describe firewall rules of target service to make sure source application could connect to the target.
        /// </summary>
        [Input("firewallRules")]
        public Input<Inputs.FirewallRulesArgs>? FirewallRules { get; set; }

        public PublicNetworkSolutionArgs()
        {
        }
        public static new PublicNetworkSolutionArgs Empty => new PublicNetworkSolutionArgs();
    }
}
