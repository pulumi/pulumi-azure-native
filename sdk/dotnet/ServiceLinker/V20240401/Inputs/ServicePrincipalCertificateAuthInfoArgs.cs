// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.V20240401.Inputs
{

    /// <summary>
    /// The authentication info when authType is servicePrincipal certificate
    /// </summary>
    public sealed class ServicePrincipalCertificateAuthInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
        /// </summary>
        [Input("authMode")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20240401.AuthMode>? AuthMode { get; set; }

        /// <summary>
        /// The authentication type.
        /// Expected value is 'servicePrincipalCertificate'.
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// ServicePrincipal certificate for servicePrincipal auth.
        /// </summary>
        [Input("certificate", required: true)]
        public Input<string> Certificate { get; set; } = null!;

        /// <summary>
        /// Application clientId for servicePrincipal auth.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        [Input("deleteOrUpdateBehavior")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20240401.DeleteOrUpdateBehavior>? DeleteOrUpdateBehavior { get; set; }

        /// <summary>
        /// Principal Id for servicePrincipal auth.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        [Input("roles")]
        private InputList<string>? _roles;

        /// <summary>
        /// Optional, this value specifies the Azure roles to be assigned. Automatically 
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        public ServicePrincipalCertificateAuthInfoArgs()
        {
        }
        public static new ServicePrincipalCertificateAuthInfoArgs Empty => new ServicePrincipalCertificateAuthInfoArgs();
    }
}
