// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.V20240701Preview.Outputs
{

    /// <summary>
    /// The authentication info when authType is userAssignedIdentity
    /// </summary>
    [OutputType]
    public sealed class UserAssignedIdentityAuthInfoResponse
    {
        /// <summary>
        /// Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
        /// </summary>
        public readonly string? AuthMode;
        /// <summary>
        /// The authentication type.
        /// Expected value is 'userAssignedIdentity'.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Client Id for userAssignedIdentity.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        public readonly string? DeleteOrUpdateBehavior;
        /// <summary>
        /// Optional, this value specifies the Azure role to be assigned
        /// </summary>
        public readonly ImmutableArray<string> Roles;
        /// <summary>
        /// Subscription id for userAssignedIdentity.
        /// </summary>
        public readonly string? SubscriptionId;
        /// <summary>
        /// Username created in the database which is mapped to a user in AAD.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private UserAssignedIdentityAuthInfoResponse(
            string? authMode,

            string authType,

            string? clientId,

            string? deleteOrUpdateBehavior,

            ImmutableArray<string> roles,

            string? subscriptionId,

            string? userName)
        {
            AuthMode = authMode;
            AuthType = authType;
            ClientId = clientId;
            DeleteOrUpdateBehavior = deleteOrUpdateBehavior;
            Roles = roles;
            SubscriptionId = subscriptionId;
            UserName = userName;
        }
    }
}
