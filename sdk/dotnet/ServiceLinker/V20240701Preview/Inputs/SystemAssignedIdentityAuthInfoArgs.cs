// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceLinker.V20240701Preview.Inputs
{

    /// <summary>
    /// The authentication info when authType is systemAssignedIdentity
    /// </summary>
    public sealed class SystemAssignedIdentityAuthInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
        /// </summary>
        [Input("authMode")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20240701Preview.AuthMode>? AuthMode { get; set; }

        /// <summary>
        /// The authentication type.
        /// Expected value is 'systemAssignedIdentity'.
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        [Input("deleteOrUpdateBehavior")]
        public InputUnion<string, Pulumi.AzureNative.ServiceLinker.V20240701Preview.DeleteOrUpdateBehavior>? DeleteOrUpdateBehavior { get; set; }

        [Input("roles")]
        private InputList<string>? _roles;

        /// <summary>
        /// Optional, this value specifies the Azure role to be assigned
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        /// <summary>
        /// Username created in the database which is mapped to a user in AAD.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public SystemAssignedIdentityAuthInfoArgs()
        {
        }
        public static new SystemAssignedIdentityAuthInfoArgs Empty => new SystemAssignedIdentityAuthInfoArgs();
    }
}
