// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.AAD.Inputs
{

    /// <summary>
    /// Replica Set Definition
    /// </summary>
    public sealed class ReplicaSetResponseArgs : Pulumi.ResourceArgs
    {
        [Input("domainControllerIpAddress", required: true)]
        private InputList<string>? _domainControllerIpAddress;

        /// <summary>
        /// List of Domain Controller IP Address
        /// </summary>
        public InputList<string> DomainControllerIpAddress
        {
            get => _domainControllerIpAddress ?? (_domainControllerIpAddress = new InputList<string>());
            set => _domainControllerIpAddress = value;
        }

        /// <summary>
        /// External access ip address.
        /// </summary>
        [Input("externalAccessIpAddress", required: true)]
        public Input<string> ExternalAccessIpAddress { get; set; } = null!;

        [Input("healthAlerts", required: true)]
        private InputList<Inputs.HealthAlertResponseArgs>? _healthAlerts;

        /// <summary>
        /// List of Domain Health Alerts
        /// </summary>
        public InputList<Inputs.HealthAlertResponseArgs> HealthAlerts
        {
            get => _healthAlerts ?? (_healthAlerts = new InputList<Inputs.HealthAlertResponseArgs>());
            set => _healthAlerts = value;
        }

        /// <summary>
        /// Last domain evaluation run DateTime
        /// </summary>
        [Input("healthLastEvaluated", required: true)]
        public Input<string> HealthLastEvaluated { get; set; } = null!;

        [Input("healthMonitors", required: true)]
        private InputList<Inputs.HealthMonitorResponseArgs>? _healthMonitors;

        /// <summary>
        /// List of Domain Health Monitors
        /// </summary>
        public InputList<Inputs.HealthMonitorResponseArgs> HealthMonitors
        {
            get => _healthMonitors ?? (_healthMonitors = new InputList<Inputs.HealthMonitorResponseArgs>());
            set => _healthMonitors = value;
        }

        /// <summary>
        /// Virtual network location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// ReplicaSet Id
        /// </summary>
        [Input("replicaSetId", required: true)]
        public Input<string> ReplicaSetId { get; set; } = null!;

        /// <summary>
        /// Status of Domain Service instance
        /// </summary>
        [Input("serviceStatus", required: true)]
        public Input<string> ServiceStatus { get; set; } = null!;

        /// <summary>
        /// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// Virtual network site id
        /// </summary>
        [Input("vnetSiteId", required: true)]
        public Input<string> VnetSiteId { get; set; } = null!;

        public ReplicaSetResponseArgs()
        {
        }
    }
}
