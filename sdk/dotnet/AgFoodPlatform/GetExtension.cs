// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AgFoodPlatform
{
    public static class GetExtension
    {
        /// <summary>
        /// Get installed extension details by extension id.
        /// Azure REST API version: 2023-06-01-preview.
        /// </summary>
        public static Task<GetExtensionResult> InvokeAsync(GetExtensionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionResult>("azure-native:agfoodplatform:getExtension", args ?? new GetExtensionArgs(), options.WithDefaults());

        /// <summary>
        /// Get installed extension details by extension id.
        /// Azure REST API version: 2023-06-01-preview.
        /// </summary>
        public static Output<GetExtensionResult> Invoke(GetExtensionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionResult>("azure-native:agfoodplatform:getExtension", args ?? new GetExtensionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataManagerForAgriculture resource name.
        /// </summary>
        [Input("dataManagerForAgricultureResourceName", required: true)]
        public string DataManagerForAgricultureResourceName { get; set; } = null!;

        /// <summary>
        /// Id of extension resource.
        /// </summary>
        [Input("extensionId", required: true)]
        public string ExtensionId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetExtensionArgs()
        {
        }
        public static new GetExtensionArgs Empty => new GetExtensionArgs();
    }

    public sealed class GetExtensionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataManagerForAgriculture resource name.
        /// </summary>
        [Input("dataManagerForAgricultureResourceName", required: true)]
        public Input<string> DataManagerForAgricultureResourceName { get; set; } = null!;

        /// <summary>
        /// Id of extension resource.
        /// </summary>
        [Input("extensionId", required: true)]
        public Input<string> ExtensionId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetExtensionInvokeArgs()
        {
        }
        public static new GetExtensionInvokeArgs Empty => new GetExtensionInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionResult
    {
        /// <summary>
        /// Additional Api Properties.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ApiPropertiesResponse> AdditionalApiProperties;
        /// <summary>
        /// The ETag value to implement optimistic concurrency.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Extension api docs link.
        /// </summary>
        public readonly string ExtensionApiDocsLink;
        /// <summary>
        /// Extension auth link.
        /// </summary>
        public readonly string ExtensionAuthLink;
        /// <summary>
        /// Extension category. e.g. weather/sensor/satellite.
        /// </summary>
        public readonly string ExtensionCategory;
        /// <summary>
        /// Extension Id.
        /// </summary>
        public readonly string ExtensionId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Installed extension version.
        /// </summary>
        public readonly string InstalledExtensionVersion;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExtensionResult(
            ImmutableDictionary<string, Outputs.ApiPropertiesResponse> additionalApiProperties,

            string eTag,

            string extensionApiDocsLink,

            string extensionAuthLink,

            string extensionCategory,

            string extensionId,

            string id,

            string installedExtensionVersion,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AdditionalApiProperties = additionalApiProperties;
            ETag = eTag;
            ExtensionApiDocsLink = extensionApiDocsLink;
            ExtensionAuthLink = extensionAuthLink;
            ExtensionCategory = extensionCategory;
            ExtensionId = extensionId;
            Id = id;
            InstalledExtensionVersion = installedExtensionVersion;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
