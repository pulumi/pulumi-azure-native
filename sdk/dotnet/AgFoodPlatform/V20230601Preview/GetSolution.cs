// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AgFoodPlatform.V20230601Preview
{
    public static class GetSolution
    {
        /// <summary>
        /// Get installed Solution details by Solution id.
        /// </summary>
        public static Task<GetSolutionResult> InvokeAsync(GetSolutionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSolutionResult>("azure-native:agfoodplatform/v20230601preview:getSolution", args ?? new GetSolutionArgs(), options.WithDefaults());

        /// <summary>
        /// Get installed Solution details by Solution id.
        /// </summary>
        public static Output<GetSolutionResult> Invoke(GetSolutionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSolutionResult>("azure-native:agfoodplatform/v20230601preview:getSolution", args ?? new GetSolutionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSolutionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataManagerForAgriculture resource name.
        /// </summary>
        [Input("dataManagerForAgricultureResourceName", required: true)]
        public string DataManagerForAgricultureResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SolutionId for Data Manager For Agriculture Resource.
        /// </summary>
        [Input("solutionId", required: true)]
        public string SolutionId { get; set; } = null!;

        public GetSolutionArgs()
        {
        }
        public static new GetSolutionArgs Empty => new GetSolutionArgs();
    }

    public sealed class GetSolutionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataManagerForAgriculture resource name.
        /// </summary>
        [Input("dataManagerForAgricultureResourceName", required: true)]
        public Input<string> DataManagerForAgricultureResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SolutionId for Data Manager For Agriculture Resource.
        /// </summary>
        [Input("solutionId", required: true)]
        public Input<string> SolutionId { get; set; } = null!;

        public GetSolutionInvokeArgs()
        {
        }
        public static new GetSolutionInvokeArgs Empty => new GetSolutionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSolutionResult
    {
        /// <summary>
        /// The ETag value to implement optimistic concurrency.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Solution resource properties.
        /// </summary>
        public readonly Outputs.SolutionPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSolutionResult(
            string eTag,

            string id,

            string name,

            Outputs.SolutionPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ETag = eTag;
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
