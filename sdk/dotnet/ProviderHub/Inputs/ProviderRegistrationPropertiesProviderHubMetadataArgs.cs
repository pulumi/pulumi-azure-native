// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Inputs
{

    /// <summary>
    /// The provider hub metadata.
    /// </summary>
    public sealed class ProviderRegistrationPropertiesProviderHubMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The direct RP role definition id.
        /// </summary>
        [Input("directRpRoleDefinitionId")]
        public Input<string>? DirectRpRoleDefinitionId { get; set; }

        /// <summary>
        /// The global async operation resource type name.
        /// </summary>
        [Input("globalAsyncOperationResourceTypeName")]
        public Input<string>? GlobalAsyncOperationResourceTypeName { get; set; }

        /// <summary>
        /// The provider authentication.
        /// </summary>
        [Input("providerAuthentication")]
        public Input<Inputs.ProviderHubMetadataProviderAuthenticationArgs>? ProviderAuthentication { get; set; }

        [Input("providerAuthorizations")]
        private InputList<Inputs.ResourceProviderAuthorizationArgs>? _providerAuthorizations;

        /// <summary>
        /// The provider authorizations.
        /// </summary>
        public InputList<Inputs.ResourceProviderAuthorizationArgs> ProviderAuthorizations
        {
            get => _providerAuthorizations ?? (_providerAuthorizations = new InputList<Inputs.ResourceProviderAuthorizationArgs>());
            set => _providerAuthorizations = value;
        }

        /// <summary>
        /// The regional async operation resource type name.
        /// </summary>
        [Input("regionalAsyncOperationResourceTypeName")]
        public Input<string>? RegionalAsyncOperationResourceTypeName { get; set; }

        /// <summary>
        /// The third party provider authorization.
        /// </summary>
        [Input("thirdPartyProviderAuthorization")]
        public Input<Inputs.ProviderHubMetadataThirdPartyProviderAuthorizationArgs>? ThirdPartyProviderAuthorization { get; set; }

        public ProviderRegistrationPropertiesProviderHubMetadataArgs()
        {
        }
        public static new ProviderRegistrationPropertiesProviderHubMetadataArgs Empty => new ProviderRegistrationPropertiesProviderHubMetadataArgs();
    }
}
