// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Inputs
{

    public sealed class ResourceProviderAuthorizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedThirdPartyExtensions")]
        private InputList<Inputs.ThirdPartyExtensionArgs>? _allowedThirdPartyExtensions;

        /// <summary>
        /// The allowed third party extensions.
        /// </summary>
        public InputList<Inputs.ThirdPartyExtensionArgs> AllowedThirdPartyExtensions
        {
            get => _allowedThirdPartyExtensions ?? (_allowedThirdPartyExtensions = new InputList<Inputs.ThirdPartyExtensionArgs>());
            set => _allowedThirdPartyExtensions = value;
        }

        /// <summary>
        /// The application id.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// The grouping tag.
        /// </summary>
        [Input("groupingTag")]
        public Input<string>? GroupingTag { get; set; }

        /// <summary>
        /// Managed by authorization.
        /// </summary>
        [Input("managedByAuthorization")]
        public Input<Inputs.ResourceProviderAuthorizationManagedByAuthorizationArgs>? ManagedByAuthorization { get; set; }

        /// <summary>
        /// The managed by role definition id.
        /// </summary>
        [Input("managedByRoleDefinitionId")]
        public Input<string>? ManagedByRoleDefinitionId { get; set; }

        /// <summary>
        /// The role definition id.
        /// </summary>
        [Input("roleDefinitionId")]
        public Input<string>? RoleDefinitionId { get; set; }

        public ResourceProviderAuthorizationArgs()
        {
        }
        public static new ResourceProviderAuthorizationArgs Empty => new ResourceProviderAuthorizationArgs();
    }
}
