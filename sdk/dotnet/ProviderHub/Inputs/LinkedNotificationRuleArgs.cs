// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Inputs
{

    public sealed class LinkedNotificationRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<string>? _actions;

        /// <summary>
        /// The actions.
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        [Input("actionsOnFailedOperation")]
        private InputList<string>? _actionsOnFailedOperation;

        /// <summary>
        /// The actions on failed operation.
        /// </summary>
        public InputList<string> ActionsOnFailedOperation
        {
            get => _actionsOnFailedOperation ?? (_actionsOnFailedOperation = new InputList<string>());
            set => _actionsOnFailedOperation = value;
        }

        [Input("fastPathActions")]
        private InputList<string>? _fastPathActions;

        /// <summary>
        /// The fast path actions.
        /// </summary>
        public InputList<string> FastPathActions
        {
            get => _fastPathActions ?? (_fastPathActions = new InputList<string>());
            set => _fastPathActions = value;
        }

        [Input("fastPathActionsOnFailedOperation")]
        private InputList<string>? _fastPathActionsOnFailedOperation;

        /// <summary>
        /// The fast path action on failed operation.
        /// </summary>
        public InputList<string> FastPathActionsOnFailedOperation
        {
            get => _fastPathActionsOnFailedOperation ?? (_fastPathActionsOnFailedOperation = new InputList<string>());
            set => _fastPathActionsOnFailedOperation = value;
        }

        /// <summary>
        /// This is a TimeSpan property.
        /// </summary>
        [Input("linkedNotificationTimeout")]
        public Input<string>? LinkedNotificationTimeout { get; set; }

        public LinkedNotificationRuleArgs()
        {
        }
        public static new LinkedNotificationRuleArgs Empty => new LinkedNotificationRuleArgs();
    }
}
