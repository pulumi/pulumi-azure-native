// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ProviderHub.Latest.Outputs
{

    [OutputType]
    public sealed class ResourceTypeRegistrationInvokeResponsePropertiesResult
    {
        public readonly ImmutableArray<string> AllowedUnauthorizedActions;
        public readonly ImmutableArray<Outputs.AuthorizationActionMappingInvokeResponseResult> AuthorizationActionMappings;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseCheckNameAvailabilitySpecificationsResult? CheckNameAvailabilitySpecifications;
        public readonly string? DefaultApiVersion;
        public readonly ImmutableArray<string> DisallowedActionVerbs;
        public readonly bool? EnableAsyncOperation;
        public readonly bool? EnableThirdPartyS2S;
        public readonly ImmutableArray<Outputs.ResourceTypeEndpointInvokeResponseResult> Endpoints;
        public readonly ImmutableArray<Outputs.ExtendedLocationOptionsInvokeResponseResult> ExtendedLocations;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseExtensionOptionsResult? ExtensionOptions;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseFeaturesRuleResult? FeaturesRule;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseIdentityManagementResult? IdentityManagement;
        public readonly bool? IsPureProxy;
        public readonly ImmutableArray<Outputs.LinkedAccessCheckInvokeResponseResult> LinkedAccessChecks;
        public readonly ImmutableArray<Outputs.LoggingRuleInvokeResponseResult> LoggingRules;
        public readonly string? MarketplaceType;
        public readonly string? ProvisioningState;
        public readonly string? Regionality;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseRequestHeaderOptionsResult? RequestHeaderOptions;
        public readonly ImmutableArray<string> RequiredFeatures;
        public readonly string? ResourceDeletionPolicy;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseResourceMovePolicyResult? ResourceMovePolicy;
        public readonly string? RoutingType;
        public readonly ImmutableArray<Outputs.ServiceTreeInfoInvokeResponseResult> ServiceTreeInfos;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseSubscriptionLifecycleNotificationSpecificationsResult? SubscriptionLifecycleNotificationSpecifications;
        public readonly ImmutableArray<Outputs.SubscriptionStateRuleInvokeResponseResult> SubscriptionStateRules;
        public readonly ImmutableArray<Outputs.SwaggerSpecificationInvokeResponseResult> SwaggerSpecifications;
        public readonly Outputs.ResourceTypeRegistrationPropertiesInvokeResponseTemplateDeploymentOptionsResult? TemplateDeploymentOptions;
        public readonly ImmutableArray<Outputs.ThrottlingRuleInvokeResponseResult> ThrottlingRules;

        [OutputConstructor]
        private ResourceTypeRegistrationInvokeResponsePropertiesResult(
            ImmutableArray<string> allowedUnauthorizedActions,

            ImmutableArray<Outputs.AuthorizationActionMappingInvokeResponseResult> authorizationActionMappings,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseCheckNameAvailabilitySpecificationsResult? checkNameAvailabilitySpecifications,

            string? defaultApiVersion,

            ImmutableArray<string> disallowedActionVerbs,

            bool? enableAsyncOperation,

            bool? enableThirdPartyS2S,

            ImmutableArray<Outputs.ResourceTypeEndpointInvokeResponseResult> endpoints,

            ImmutableArray<Outputs.ExtendedLocationOptionsInvokeResponseResult> extendedLocations,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseExtensionOptionsResult? extensionOptions,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseFeaturesRuleResult? featuresRule,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseIdentityManagementResult? identityManagement,

            bool? isPureProxy,

            ImmutableArray<Outputs.LinkedAccessCheckInvokeResponseResult> linkedAccessChecks,

            ImmutableArray<Outputs.LoggingRuleInvokeResponseResult> loggingRules,

            string? marketplaceType,

            string? provisioningState,

            string? regionality,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseRequestHeaderOptionsResult? requestHeaderOptions,

            ImmutableArray<string> requiredFeatures,

            string? resourceDeletionPolicy,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseResourceMovePolicyResult? resourceMovePolicy,

            string? routingType,

            ImmutableArray<Outputs.ServiceTreeInfoInvokeResponseResult> serviceTreeInfos,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseSubscriptionLifecycleNotificationSpecificationsResult? subscriptionLifecycleNotificationSpecifications,

            ImmutableArray<Outputs.SubscriptionStateRuleInvokeResponseResult> subscriptionStateRules,

            ImmutableArray<Outputs.SwaggerSpecificationInvokeResponseResult> swaggerSpecifications,

            Outputs.ResourceTypeRegistrationPropertiesInvokeResponseTemplateDeploymentOptionsResult? templateDeploymentOptions,

            ImmutableArray<Outputs.ThrottlingRuleInvokeResponseResult> throttlingRules)
        {
            AllowedUnauthorizedActions = allowedUnauthorizedActions;
            AuthorizationActionMappings = authorizationActionMappings;
            CheckNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
            DefaultApiVersion = defaultApiVersion;
            DisallowedActionVerbs = disallowedActionVerbs;
            EnableAsyncOperation = enableAsyncOperation;
            EnableThirdPartyS2S = enableThirdPartyS2S;
            Endpoints = endpoints;
            ExtendedLocations = extendedLocations;
            ExtensionOptions = extensionOptions;
            FeaturesRule = featuresRule;
            IdentityManagement = identityManagement;
            IsPureProxy = isPureProxy;
            LinkedAccessChecks = linkedAccessChecks;
            LoggingRules = loggingRules;
            MarketplaceType = marketplaceType;
            ProvisioningState = provisioningState;
            Regionality = regionality;
            RequestHeaderOptions = requestHeaderOptions;
            RequiredFeatures = requiredFeatures;
            ResourceDeletionPolicy = resourceDeletionPolicy;
            ResourceMovePolicy = resourceMovePolicy;
            RoutingType = routingType;
            ServiceTreeInfos = serviceTreeInfos;
            SubscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            SubscriptionStateRules = subscriptionStateRules;
            SwaggerSpecifications = swaggerSpecifications;
            TemplateDeploymentOptions = templateDeploymentOptions;
            ThrottlingRules = throttlingRules;
        }
    }
}
