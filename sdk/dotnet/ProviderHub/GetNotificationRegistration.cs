// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub
{
    public static class GetNotificationRegistration
    {
        /// <summary>
        /// Gets the notification registration details.
        /// API Version: 2020-11-20.
        /// </summary>
        public static Task<GetNotificationRegistrationResult> InvokeAsync(GetNotificationRegistrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNotificationRegistrationResult>("azure-native:providerhub:getNotificationRegistration", args ?? new GetNotificationRegistrationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the notification registration details.
        /// API Version: 2020-11-20.
        /// </summary>
        public static Output<GetNotificationRegistrationResult> Invoke(GetNotificationRegistrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotificationRegistrationResult>("azure-native:providerhub:getNotificationRegistration", args ?? new GetNotificationRegistrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotificationRegistrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The notification registration.
        /// </summary>
        [Input("notificationRegistrationName", required: true)]
        public string NotificationRegistrationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource provider hosted within ProviderHub.
        /// </summary>
        [Input("providerNamespace", required: true)]
        public string ProviderNamespace { get; set; } = null!;

        public GetNotificationRegistrationArgs()
        {
        }
        public static new GetNotificationRegistrationArgs Empty => new GetNotificationRegistrationArgs();
    }

    public sealed class GetNotificationRegistrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The notification registration.
        /// </summary>
        [Input("notificationRegistrationName", required: true)]
        public Input<string> NotificationRegistrationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource provider hosted within ProviderHub.
        /// </summary>
        [Input("providerNamespace", required: true)]
        public Input<string> ProviderNamespace { get; set; } = null!;

        public GetNotificationRegistrationInvokeArgs()
        {
        }
        public static new GetNotificationRegistrationInvokeArgs Empty => new GetNotificationRegistrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNotificationRegistrationResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        public readonly Outputs.NotificationRegistrationResponseProperties Properties;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNotificationRegistrationResult(
            string id,

            string name,

            Outputs.NotificationRegistrationResponseProperties properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
