// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ProviderHub.V20201120
{
    /// <summary>
    /// The notification registration definition.
    /// </summary>
    [AzureNextGenResourceType("azure-nextgen:providerhub/v20201120:NotificationRegistration")]
    public partial class NotificationRegistration : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<Outputs.NotificationRegistrationResponseProperties> Properties { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NotificationRegistration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotificationRegistration(string name, NotificationRegistrationArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:providerhub/v20201120:NotificationRegistration", name, args ?? new NotificationRegistrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotificationRegistration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:providerhub/v20201120:NotificationRegistration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:providerhub:NotificationRegistration"},
                    new Pulumi.Alias { Type = "azure-nextgen:providerhub/latest:NotificationRegistration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotificationRegistration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotificationRegistration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NotificationRegistration(name, id, options);
        }
    }

    public sealed class NotificationRegistrationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The notification registration.
        /// </summary>
        [Input("notificationRegistrationName")]
        public Input<string>? NotificationRegistrationName { get; set; }

        [Input("properties")]
        public Input<Inputs.NotificationRegistrationPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource provider hosted within ProviderHub.
        /// </summary>
        [Input("providerNamespace", required: true)]
        public Input<string> ProviderNamespace { get; set; } = null!;

        public NotificationRegistrationArgs()
        {
        }
    }
}
