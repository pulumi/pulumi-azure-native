// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Outputs
{

    [OutputType]
    public sealed class ResourceProviderEndpointResponse
    {
        /// <summary>
        /// The api versions.
        /// </summary>
        public readonly ImmutableArray<string> ApiVersions;
        /// <summary>
        /// Whether the endpoint is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The endpoint type.
        /// </summary>
        public readonly string? EndpointType;
        /// <summary>
        /// The endpoint uri.
        /// </summary>
        public readonly string? EndpointUri;
        /// <summary>
        /// The feature rules.
        /// </summary>
        public readonly Outputs.ResourceProviderEndpointResponseFeaturesRule? FeaturesRule;
        /// <summary>
        /// The locations.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The required features.
        /// </summary>
        public readonly ImmutableArray<string> RequiredFeatures;
        /// <summary>
        /// The sku link.
        /// </summary>
        public readonly string? SkuLink;
        /// <summary>
        /// The timeout.
        /// </summary>
        public readonly string? Timeout;

        [OutputConstructor]
        private ResourceProviderEndpointResponse(
            ImmutableArray<string> apiVersions,

            bool? enabled,

            string? endpointType,

            string? endpointUri,

            Outputs.ResourceProviderEndpointResponseFeaturesRule? featuresRule,

            ImmutableArray<string> locations,

            ImmutableArray<string> requiredFeatures,

            string? skuLink,

            string? timeout)
        {
            ApiVersions = apiVersions;
            Enabled = enabled;
            EndpointType = endpointType;
            EndpointUri = endpointUri;
            FeaturesRule = featuresRule;
            Locations = locations;
            RequiredFeatures = requiredFeatures;
            SkuLink = skuLink;
            Timeout = timeout;
        }
    }
}
