// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Outputs
{

    /// <summary>
    /// The provider hub metadata.
    /// </summary>
    [OutputType]
    public sealed class ProviderRegistrationPropertiesResponseProviderHubMetadata
    {
        /// <summary>
        /// The direct RP role definition id.
        /// </summary>
        public readonly string? DirectRpRoleDefinitionId;
        /// <summary>
        /// The global async operation resource type name.
        /// </summary>
        public readonly string? GlobalAsyncOperationResourceTypeName;
        /// <summary>
        /// The provider authentication.
        /// </summary>
        public readonly Outputs.ProviderHubMetadataResponseProviderAuthentication? ProviderAuthentication;
        /// <summary>
        /// The provider authorizations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceProviderAuthorizationResponse> ProviderAuthorizations;
        /// <summary>
        /// The regional async operation resource type name.
        /// </summary>
        public readonly string? RegionalAsyncOperationResourceTypeName;
        /// <summary>
        /// The third party provider authorization.
        /// </summary>
        public readonly Outputs.ProviderHubMetadataResponseThirdPartyProviderAuthorization? ThirdPartyProviderAuthorization;

        [OutputConstructor]
        private ProviderRegistrationPropertiesResponseProviderHubMetadata(
            string? directRpRoleDefinitionId,

            string? globalAsyncOperationResourceTypeName,

            Outputs.ProviderHubMetadataResponseProviderAuthentication? providerAuthentication,

            ImmutableArray<Outputs.ResourceProviderAuthorizationResponse> providerAuthorizations,

            string? regionalAsyncOperationResourceTypeName,

            Outputs.ProviderHubMetadataResponseThirdPartyProviderAuthorization? thirdPartyProviderAuthorization)
        {
            DirectRpRoleDefinitionId = directRpRoleDefinitionId;
            GlobalAsyncOperationResourceTypeName = globalAsyncOperationResourceTypeName;
            ProviderAuthentication = providerAuthentication;
            ProviderAuthorizations = providerAuthorizations;
            RegionalAsyncOperationResourceTypeName = regionalAsyncOperationResourceTypeName;
            ThirdPartyProviderAuthorization = thirdPartyProviderAuthorization;
        }
    }
}
