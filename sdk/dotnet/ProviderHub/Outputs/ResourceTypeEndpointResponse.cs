// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.Outputs
{

    [OutputType]
    public sealed class ResourceTypeEndpointResponse
    {
        /// <summary>
        /// Api version.
        /// </summary>
        public readonly string? ApiVersion;
        /// <summary>
        /// The api versions.
        /// </summary>
        public readonly ImmutableArray<string> ApiVersions;
        /// <summary>
        /// The data boundary.
        /// </summary>
        public readonly string? DataBoundary;
        /// <summary>
        /// The dsts configuration.
        /// </summary>
        public readonly Outputs.ResourceTypeEndpointResponseDstsConfiguration? DstsConfiguration;
        /// <summary>
        /// Whether the endpoint is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The endpoint type.
        /// </summary>
        public readonly string? EndpointType;
        /// <summary>
        /// The endpoint uri.
        /// </summary>
        public readonly string? EndpointUri;
        /// <summary>
        /// The extensions.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceTypeExtensionResponse> Extensions;
        /// <summary>
        /// The features rule.
        /// </summary>
        public readonly Outputs.ResourceTypeEndpointResponseFeaturesRule? FeaturesRule;
        /// <summary>
        /// Resource type endpoint kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The locations.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The required features.
        /// </summary>
        public readonly ImmutableArray<string> RequiredFeatures;
        /// <summary>
        /// The sku link.
        /// </summary>
        public readonly string? SkuLink;
        /// <summary>
        /// The timeout.
        /// </summary>
        public readonly string? Timeout;
        /// <summary>
        /// The token auth configuration.
        /// </summary>
        public readonly Outputs.TokenAuthConfigurationResponse? TokenAuthConfiguration;
        /// <summary>
        /// List of zones.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private ResourceTypeEndpointResponse(
            string? apiVersion,

            ImmutableArray<string> apiVersions,

            string? dataBoundary,

            Outputs.ResourceTypeEndpointResponseDstsConfiguration? dstsConfiguration,

            bool? enabled,

            string? endpointType,

            string? endpointUri,

            ImmutableArray<Outputs.ResourceTypeExtensionResponse> extensions,

            Outputs.ResourceTypeEndpointResponseFeaturesRule? featuresRule,

            string? kind,

            ImmutableArray<string> locations,

            ImmutableArray<string> requiredFeatures,

            string? skuLink,

            string? timeout,

            Outputs.TokenAuthConfigurationResponse? tokenAuthConfiguration,

            ImmutableArray<string> zones)
        {
            ApiVersion = apiVersion;
            ApiVersions = apiVersions;
            DataBoundary = dataBoundary;
            DstsConfiguration = dstsConfiguration;
            Enabled = enabled;
            EndpointType = endpointType;
            EndpointUri = endpointUri;
            Extensions = extensions;
            FeaturesRule = featuresRule;
            Kind = kind;
            Locations = locations;
            RequiredFeatures = requiredFeatures;
            SkuLink = skuLink;
            Timeout = timeout;
            TokenAuthConfiguration = tokenAuthConfiguration;
            Zones = zones;
        }
    }
}
