// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent.Inputs
{

    /// <summary>
    /// The partner connector type is KafkaAzureCosmosDBSource
    /// </summary>
    public sealed class KafkaAzureCosmosDBSourceConnectorInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Kafka API Key
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// Kafka API Secret
        /// </summary>
        [Input("apiSecret")]
        public Input<string>? ApiSecret { get; set; }

        /// <summary>
        /// Kafka Auth Type
        /// </summary>
        [Input("authType")]
        public InputUnion<string, Pulumi.AzureNative.Confluent.AuthType>? AuthType { get; set; }

        /// <summary>
        /// Kafka Input Data Format Type
        /// </summary>
        [Input("inputFormat")]
        public InputUnion<string, Pulumi.AzureNative.Confluent.DataFormatType>? InputFormat { get; set; }

        /// <summary>
        /// Maximum Tasks
        /// </summary>
        [Input("maxTasks")]
        public Input<string>? MaxTasks { get; set; }

        /// <summary>
        /// Kafka Output Data Format Type
        /// </summary>
        [Input("outputFormat")]
        public InputUnion<string, Pulumi.AzureNative.Confluent.DataFormatType>? OutputFormat { get; set; }

        /// <summary>
        /// Partner Connector type.
        /// Expected value is 'KafkaAzureCosmosDBSource'.
        /// </summary>
        [Input("partnerConnectorType", required: true)]
        public Input<string> PartnerConnectorType { get; set; } = null!;

        /// <summary>
        /// Kafka Service Account Id
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        /// <summary>
        /// Kafka topics Regex pattern
        /// </summary>
        [Input("topicRegex")]
        public Input<string>? TopicRegex { get; set; }

        /// <summary>
        /// Kafka topics directory
        /// </summary>
        [Input("topicsDir")]
        public Input<string>? TopicsDir { get; set; }

        public KafkaAzureCosmosDBSourceConnectorInfoArgs()
        {
        }
        public static new KafkaAzureCosmosDBSourceConnectorInfoArgs Empty => new KafkaAzureCosmosDBSourceConnectorInfoArgs();
    }
}
