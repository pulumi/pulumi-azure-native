// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent.V20240701.Outputs
{

    /// <summary>
    /// The authentication info when auth_type is AzureCosmosDBSourceConnector
    /// </summary>
    [OutputType]
    public sealed class AzureCosmosDBSourceConnectorServiceInfoResponse
    {
        /// <summary>
        /// The connector service type.
        /// Expected value is 'AzureCosmosDBSourceConnector'.
        /// </summary>
        public readonly string ConnectorServiceType;
        /// <summary>
        /// Azure Cosmos Database Connection Endpoint
        /// </summary>
        public readonly string? CosmosConnectionEndpoint;
        /// <summary>
        /// Azure Cosmos Database Containers Topic Mapping
        /// </summary>
        public readonly string? CosmosContainersTopicMapping;
        /// <summary>
        /// Azure Cosmos Database Name
        /// </summary>
        public readonly string? CosmosDatabaseName;
        /// <summary>
        /// Azure Cosmos Database Master Key
        /// </summary>
        public readonly string? CosmosMasterKey;
        /// <summary>
        /// Azure Cosmos Database Message Key Enabled
        /// </summary>
        public readonly bool? CosmosMessageKeyEnabled;
        /// <summary>
        /// Azure Cosmos Database Message Key Field
        /// </summary>
        public readonly string? CosmosMessageKeyField;

        [OutputConstructor]
        private AzureCosmosDBSourceConnectorServiceInfoResponse(
            string connectorServiceType,

            string? cosmosConnectionEndpoint,

            string? cosmosContainersTopicMapping,

            string? cosmosDatabaseName,

            string? cosmosMasterKey,

            bool? cosmosMessageKeyEnabled,

            string? cosmosMessageKeyField)
        {
            ConnectorServiceType = connectorServiceType;
            CosmosConnectionEndpoint = cosmosConnectionEndpoint;
            CosmosContainersTopicMapping = cosmosContainersTopicMapping;
            CosmosDatabaseName = cosmosDatabaseName;
            CosmosMasterKey = cosmosMasterKey;
            CosmosMessageKeyEnabled = cosmosMessageKeyEnabled;
            CosmosMessageKeyField = cosmosMessageKeyField;
        }
    }
}
