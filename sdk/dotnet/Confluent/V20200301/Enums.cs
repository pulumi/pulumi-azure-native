// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Confluent.V20200301
{
    /// <summary>
    /// Provision states for confluent RP
    /// </summary>
    [EnumType]
    public readonly struct ProvisionState : IEquatable<ProvisionState>
    {
        private readonly string _value;

        private ProvisionState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ProvisionState Accepted { get; } = new ProvisionState("Accepted");
        public static ProvisionState Creating { get; } = new ProvisionState("Creating");
        public static ProvisionState Updating { get; } = new ProvisionState("Updating");
        public static ProvisionState Deleting { get; } = new ProvisionState("Deleting");
        public static ProvisionState Succeeded { get; } = new ProvisionState("Succeeded");
        public static ProvisionState Failed { get; } = new ProvisionState("Failed");
        public static ProvisionState Canceled { get; } = new ProvisionState("Canceled");
        public static ProvisionState Deleted { get; } = new ProvisionState("Deleted");
        public static ProvisionState NotSpecified { get; } = new ProvisionState("NotSpecified");

        public static bool operator ==(ProvisionState left, ProvisionState right) => left.Equals(right);
        public static bool operator !=(ProvisionState left, ProvisionState right) => !left.Equals(right);

        public static explicit operator string(ProvisionState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ProvisionState other && Equals(other);
        public bool Equals(ProvisionState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// SaaS Offer Status
    /// </summary>
    [EnumType]
    public readonly struct SaaSOfferStatus : IEquatable<SaaSOfferStatus>
    {
        private readonly string _value;

        private SaaSOfferStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SaaSOfferStatus Started { get; } = new SaaSOfferStatus("Started");
        public static SaaSOfferStatus PendingFulfillmentStart { get; } = new SaaSOfferStatus("PendingFulfillmentStart");
        public static SaaSOfferStatus InProgress { get; } = new SaaSOfferStatus("InProgress");
        public static SaaSOfferStatus Subscribed { get; } = new SaaSOfferStatus("Subscribed");
        public static SaaSOfferStatus Suspended { get; } = new SaaSOfferStatus("Suspended");
        public static SaaSOfferStatus Reinstated { get; } = new SaaSOfferStatus("Reinstated");
        public static SaaSOfferStatus Succeeded { get; } = new SaaSOfferStatus("Succeeded");
        public static SaaSOfferStatus Failed { get; } = new SaaSOfferStatus("Failed");
        public static SaaSOfferStatus Unsubscribed { get; } = new SaaSOfferStatus("Unsubscribed");
        public static SaaSOfferStatus Updating { get; } = new SaaSOfferStatus("Updating");

        public static bool operator ==(SaaSOfferStatus left, SaaSOfferStatus right) => left.Equals(right);
        public static bool operator !=(SaaSOfferStatus left, SaaSOfferStatus right) => !left.Equals(right);

        public static explicit operator string(SaaSOfferStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SaaSOfferStatus other && Equals(other);
        public bool Equals(SaaSOfferStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
