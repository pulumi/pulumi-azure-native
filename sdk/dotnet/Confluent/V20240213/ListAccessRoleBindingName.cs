// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent.V20240213
{
    public static class ListAccessRoleBindingName
    {
        /// <summary>
        /// Details of the role binding names returned on successful response
        /// </summary>
        public static Task<ListAccessRoleBindingNameResult> InvokeAsync(ListAccessRoleBindingNameArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAccessRoleBindingNameResult>("azure-native:confluent/v20240213:listAccessRoleBindingName", args ?? new ListAccessRoleBindingNameArgs(), options.WithDefaults());

        /// <summary>
        /// Details of the role binding names returned on successful response
        /// </summary>
        public static Output<ListAccessRoleBindingNameResult> Invoke(ListAccessRoleBindingNameInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAccessRoleBindingNameResult>("azure-native:confluent/v20240213:listAccessRoleBindingName", args ?? new ListAccessRoleBindingNameInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAccessRoleBindingNameArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private Dictionary<string, string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public Dictionary<string, string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new Dictionary<string, string>());
            set => _searchFilters = value;
        }

        public ListAccessRoleBindingNameArgs()
        {
        }
        public static new ListAccessRoleBindingNameArgs Empty => new ListAccessRoleBindingNameArgs();
    }

    public sealed class ListAccessRoleBindingNameInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private InputMap<string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public InputMap<string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new InputMap<string>());
            set => _searchFilters = value;
        }

        public ListAccessRoleBindingNameInvokeArgs()
        {
        }
        public static new ListAccessRoleBindingNameInvokeArgs Empty => new ListAccessRoleBindingNameInvokeArgs();
    }


    [OutputType]
    public sealed class ListAccessRoleBindingNameResult
    {
        /// <summary>
        /// List of role binding names
        /// </summary>
        public readonly ImmutableArray<string> Data;
        /// <summary>
        /// Type of response
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Metadata of the list
        /// </summary>
        public readonly Outputs.ConfluentListMetadataResponse? Metadata;

        [OutputConstructor]
        private ListAccessRoleBindingNameResult(
            ImmutableArray<string> data,

            string? kind,

            Outputs.ConfluentListMetadataResponse? metadata)
        {
            Data = data;
            Kind = kind;
            Metadata = metadata;
        }
    }
}
