// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent.V20240213
{
    public static class ListOrganizationRegions
    {
        /// <summary>
        /// Result of POST request to list regions supported by confluent
        /// </summary>
        public static Task<ListOrganizationRegionsResult> InvokeAsync(ListOrganizationRegionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListOrganizationRegionsResult>("azure-native:confluent/v20240213:listOrganizationRegions", args ?? new ListOrganizationRegionsArgs(), options.WithDefaults());

        /// <summary>
        /// Result of POST request to list regions supported by confluent
        /// </summary>
        public static Output<ListOrganizationRegionsResult> Invoke(ListOrganizationRegionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListOrganizationRegionsResult>("azure-native:confluent/v20240213:listOrganizationRegions", args ?? new ListOrganizationRegionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListOrganizationRegionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private Dictionary<string, string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public Dictionary<string, string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new Dictionary<string, string>());
            set => _searchFilters = value;
        }

        public ListOrganizationRegionsArgs()
        {
        }
        public static new ListOrganizationRegionsArgs Empty => new ListOrganizationRegionsArgs();
    }

    public sealed class ListOrganizationRegionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private InputMap<string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public InputMap<string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new InputMap<string>());
            set => _searchFilters = value;
        }

        public ListOrganizationRegionsInvokeArgs()
        {
        }
        public static new ListOrganizationRegionsInvokeArgs Empty => new ListOrganizationRegionsInvokeArgs();
    }


    [OutputType]
    public sealed class ListOrganizationRegionsResult
    {
        /// <summary>
        /// List of regions supported by confluent
        /// </summary>
        public readonly ImmutableArray<Outputs.RegionRecordResponse> Data;

        [OutputConstructor]
        private ListOrganizationRegionsResult(ImmutableArray<Outputs.RegionRecordResponse> data)
        {
            Data = data;
        }
    }
}
