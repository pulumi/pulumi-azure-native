// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent.V20240213.Outputs
{

    /// <summary>
    /// Spec of the cluster record
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecEntityResponse
    {
        /// <summary>
        /// The Kafka API cluster endpoint
        /// </summary>
        public readonly string? ApiEndpoint;
        /// <summary>
        /// The availability zone configuration of the cluster
        /// </summary>
        public readonly string? Availability;
        /// <summary>
        /// Specification of the cluster
        /// </summary>
        public readonly Outputs.ClusterByokEntityResponse? Byok;
        /// <summary>
        /// The cloud service provider 
        /// </summary>
        public readonly string? Cloud;
        /// <summary>
        /// Specification of the cluster
        /// </summary>
        public readonly Outputs.ClusterConfigEntityResponse? Config;
        /// <summary>
        /// The name of the cluster
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Specification of the cluster
        /// </summary>
        public readonly Outputs.ClusterEnvironmentEntityResponse? Environment;
        /// <summary>
        /// The cluster HTTP request URL.
        /// </summary>
        public readonly string? HttpEndpoint;
        /// <summary>
        /// The bootstrap endpoint used by Kafka clients to connect to the cluster
        /// </summary>
        public readonly string? KafkaBootstrapEndpoint;
        /// <summary>
        /// Specification of the cluster
        /// </summary>
        public readonly Outputs.ClusterNetworkEntityResponse? Network;
        /// <summary>
        /// The cloud service provider region
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// type of zone availability
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private ClusterSpecEntityResponse(
            string? apiEndpoint,

            string? availability,

            Outputs.ClusterByokEntityResponse? byok,

            string? cloud,

            Outputs.ClusterConfigEntityResponse? config,

            string? displayName,

            Outputs.ClusterEnvironmentEntityResponse? environment,

            string? httpEndpoint,

            string? kafkaBootstrapEndpoint,

            Outputs.ClusterNetworkEntityResponse? network,

            string? region,

            string? zone)
        {
            ApiEndpoint = apiEndpoint;
            Availability = availability;
            Byok = byok;
            Cloud = cloud;
            Config = config;
            DisplayName = displayName;
            Environment = environment;
            HttpEndpoint = httpEndpoint;
            KafkaBootstrapEndpoint = kafkaBootstrapEndpoint;
            Network = network;
            Region = region;
            Zone = zone;
        }
    }
}
