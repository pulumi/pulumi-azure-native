// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Confluent
{
    public static class ListAccessRoleBindings
    {
        /// <summary>
        /// Organization role bindings
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// 
        /// Other available API versions: 2023-08-22, 2024-02-13, 2025-07-17-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native confluent [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<ListAccessRoleBindingsResult> InvokeAsync(ListAccessRoleBindingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAccessRoleBindingsResult>("azure-native:confluent:listAccessRoleBindings", args ?? new ListAccessRoleBindingsArgs(), options.WithDefaults());

        /// <summary>
        /// Organization role bindings
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// 
        /// Other available API versions: 2023-08-22, 2024-02-13, 2025-07-17-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native confluent [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<ListAccessRoleBindingsResult> Invoke(ListAccessRoleBindingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAccessRoleBindingsResult>("azure-native:confluent:listAccessRoleBindings", args ?? new ListAccessRoleBindingsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Organization role bindings
        /// 
        /// Uses Azure REST API version 2024-07-01.
        /// 
        /// Other available API versions: 2023-08-22, 2024-02-13, 2025-07-17-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native confluent [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<ListAccessRoleBindingsResult> Invoke(ListAccessRoleBindingsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListAccessRoleBindingsResult>("azure-native:confluent:listAccessRoleBindings", args ?? new ListAccessRoleBindingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAccessRoleBindingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private Dictionary<string, string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public Dictionary<string, string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new Dictionary<string, string>());
            set => _searchFilters = value;
        }

        public ListAccessRoleBindingsArgs()
        {
        }
        public static new ListAccessRoleBindingsArgs Empty => new ListAccessRoleBindingsArgs();
    }

    public sealed class ListAccessRoleBindingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization resource name
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("searchFilters")]
        private InputMap<string>? _searchFilters;

        /// <summary>
        /// Search filters for the request
        /// </summary>
        public InputMap<string> SearchFilters
        {
            get => _searchFilters ?? (_searchFilters = new InputMap<string>());
            set => _searchFilters = value;
        }

        public ListAccessRoleBindingsInvokeArgs()
        {
        }
        public static new ListAccessRoleBindingsInvokeArgs Empty => new ListAccessRoleBindingsInvokeArgs();
    }


    [OutputType]
    public sealed class ListAccessRoleBindingsResult
    {
        /// <summary>
        /// List of role binding
        /// </summary>
        public readonly ImmutableArray<Outputs.RoleBindingRecordResponse> Data;
        /// <summary>
        /// Type of response
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Metadata of the list
        /// </summary>
        public readonly Outputs.ConfluentListMetadataResponse? Metadata;

        [OutputConstructor]
        private ListAccessRoleBindingsResult(
            ImmutableArray<Outputs.RoleBindingRecordResponse> data,

            string? kind,

            Outputs.ConfluentListMetadataResponse? metadata)
        {
            Data = data;
            Kind = kind;
            Metadata = metadata;
        }
    }
}
