// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Purview
{
    public static class GetAccount
    {
        /// <summary>
        /// Get an account
        /// Azure REST API version: 2021-12-01.
        /// </summary>
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("azure-native:purview:getAccount", args ?? new GetAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Get an account
        /// Azure REST API version: 2021-12-01.
        /// </summary>
        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("azure-native:purview:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccountArgs()
        {
        }
        public static new GetAccountArgs Empty => new GetAccountArgs();
    }

    public sealed class GetAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAccountInvokeArgs()
        {
        }
        public static new GetAccountInvokeArgs Empty => new GetAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// Gets or sets the status of the account.
        /// </summary>
        public readonly Outputs.AccountPropertiesResponseAccountStatus AccountStatus;
        /// <summary>
        /// Cloud connectors.
        /// External cloud identifier used as part of scanning configuration.
        /// </summary>
        public readonly Outputs.CloudConnectorsResponse? CloudConnectors;
        /// <summary>
        /// Gets the time at which the entity was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Gets the creator of the entity.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Gets the creators of the entity's object id.
        /// </summary>
        public readonly string CreatedByObjectId;
        /// <summary>
        /// The URIs that are the public endpoints of the account.
        /// </summary>
        public readonly Outputs.AccountPropertiesResponseEndpoints Endpoints;
        /// <summary>
        /// Gets or sets the friendly name.
        /// </summary>
        public readonly string FriendlyName;
        /// <summary>
        /// Gets or sets the identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity Info on the tracked resource
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        ///  Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
        /// </summary>
        public readonly string? ManagedEventHubState;
        /// <summary>
        /// Gets or sets the managed resource group name
        /// </summary>
        public readonly string? ManagedResourceGroupName;
        /// <summary>
        /// Gets the resource identifiers of the managed resources.
        /// </summary>
        public readonly Outputs.AccountPropertiesResponseManagedResources ManagedResources;
        /// <summary>
        /// Gets or sets the public network access for managed resources.
        /// </summary>
        public readonly string? ManagedResourcesPublicNetworkAccess;
        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the private endpoint connections information.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Gets or sets the state of the provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets or sets the public network access.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Gets or sets the Sku.
        /// </summary>
        public readonly Outputs.AccountResponseSku Sku;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.TrackedResourceResponseSystemData SystemData;
        /// <summary>
        /// Tags on the azure resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAccountResult(
            Outputs.AccountPropertiesResponseAccountStatus accountStatus,

            Outputs.CloudConnectorsResponse? cloudConnectors,

            string createdAt,

            string createdBy,

            string createdByObjectId,

            Outputs.AccountPropertiesResponseEndpoints endpoints,

            string friendlyName,

            string id,

            Outputs.IdentityResponse? identity,

            string? location,

            string? managedEventHubState,

            string? managedResourceGroupName,

            Outputs.AccountPropertiesResponseManagedResources managedResources,

            string? managedResourcesPublicNetworkAccess,

            string name,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.AccountResponseSku sku,

            Outputs.TrackedResourceResponseSystemData systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AccountStatus = accountStatus;
            CloudConnectors = cloudConnectors;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            CreatedByObjectId = createdByObjectId;
            Endpoints = endpoints;
            FriendlyName = friendlyName;
            Id = id;
            Identity = identity;
            Location = location;
            ManagedEventHubState = managedEventHubState;
            ManagedResourceGroupName = managedResourceGroupName;
            ManagedResources = managedResources;
            ManagedResourcesPublicNetworkAccess = managedResourcesPublicNetworkAccess;
            Name = name;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
