// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Purview.V20240401Preview.Outputs
{

    /// <summary>
    /// The public Account Merge Info model.
    /// </summary>
    [OutputType]
    public sealed class AccountMergeInfoResponse
    {
        /// <summary>
        /// The account location of the *other* account in the merge operation.
        /// </summary>
        public readonly string AccountLocation;
        /// <summary>
        /// The account name of the *other* account in the merge operation.
        /// </summary>
        public readonly string AccountName;
        /// <summary>
        /// The resource group name of the *other* account in the merge operation.
        /// </summary>
        public readonly string AccountResourceGroupName;
        /// <summary>
        /// The subscription id of the *other* account in the merge operation.
        /// </summary>
        public readonly string AccountSubscriptionId;
        /// <summary>
        /// The deprovisioned status of the account.
        /// Only applicable for the secondary account.
        /// </summary>
        public readonly bool Deprovisioned;
        /// <summary>
        /// The status of the merge operation.
        /// </summary>
        public readonly string MergeStatus;
        /// <summary>
        /// The account's type for the merge operation.
        /// </summary>
        public readonly string TypeOfAccount;

        [OutputConstructor]
        private AccountMergeInfoResponse(
            string accountLocation,

            string accountName,

            string accountResourceGroupName,

            string accountSubscriptionId,

            bool deprovisioned,

            string mergeStatus,

            string typeOfAccount)
        {
            AccountLocation = accountLocation;
            AccountName = accountName;
            AccountResourceGroupName = accountResourceGroupName;
            AccountSubscriptionId = accountSubscriptionId;
            Deprovisioned = deprovisioned;
            MergeStatus = mergeStatus;
            TypeOfAccount = typeOfAccount;
        }
    }
}
