// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Purview.V20240401Preview
{
    public static class GetKafkaConfiguration
    {
        /// <summary>
        /// Gets the kafka configuration for the account
        /// </summary>
        public static Task<GetKafkaConfigurationResult> InvokeAsync(GetKafkaConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKafkaConfigurationResult>("azure-native:purview/v20240401preview:getKafkaConfiguration", args ?? new GetKafkaConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the kafka configuration for the account
        /// </summary>
        public static Output<GetKafkaConfigurationResult> Invoke(GetKafkaConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKafkaConfigurationResult>("azure-native:purview/v20240401preview:getKafkaConfiguration", args ?? new GetKafkaConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKafkaConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// Name of kafka configuration.
        /// </summary>
        [Input("kafkaConfigurationName", required: true)]
        public string KafkaConfigurationName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetKafkaConfigurationArgs()
        {
        }
        public static new GetKafkaConfigurationArgs Empty => new GetKafkaConfigurationArgs();
    }

    public sealed class GetKafkaConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Name of kafka configuration.
        /// </summary>
        [Input("kafkaConfigurationName", required: true)]
        public Input<string> KafkaConfigurationName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetKafkaConfigurationInvokeArgs()
        {
        }
        public static new GetKafkaConfigurationInvokeArgs Empty => new GetKafkaConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetKafkaConfigurationResult
    {
        /// <summary>
        /// Consumer group for hook event hub.
        /// </summary>
        public readonly string? ConsumerGroup;
        /// <summary>
        /// Credentials to access the event streaming service attached to the purview account.
        /// </summary>
        public readonly Outputs.CredentialsResponse? Credentials;
        /// <summary>
        /// Optional partition Id for notification event hub. If not set, all partitions will be leveraged.
        /// </summary>
        public readonly string? EventHubPartitionId;
        public readonly string? EventHubResourceId;
        /// <summary>
        /// The event hub type.
        /// </summary>
        public readonly string? EventHubType;
        /// <summary>
        /// The state of the event streaming service
        /// </summary>
        public readonly string? EventStreamingState;
        /// <summary>
        /// The event streaming service type
        /// </summary>
        public readonly string? EventStreamingType;
        /// <summary>
        /// Gets or sets the identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        public readonly Outputs.ProxyResourceResponseSystemData SystemData;
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKafkaConfigurationResult(
            string? consumerGroup,

            Outputs.CredentialsResponse? credentials,

            string? eventHubPartitionId,

            string? eventHubResourceId,

            string? eventHubType,

            string? eventStreamingState,

            string? eventStreamingType,

            string id,

            string name,

            Outputs.ProxyResourceResponseSystemData systemData,

            string type)
        {
            ConsumerGroup = consumerGroup;
            Credentials = credentials;
            EventHubPartitionId = eventHubPartitionId;
            EventHubResourceId = eventHubResourceId;
            EventHubType = eventHubType;
            EventStreamingState = eventStreamingState;
            EventStreamingType = eventStreamingType;
            Id = id;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
