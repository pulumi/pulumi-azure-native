// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Community.V20231101.Inputs
{

    /// <summary>
    /// Details of the Community CommunityTraining Identity Configuration
    /// </summary>
    public sealed class IdentityConfigurationPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Input("b2cAuthenticationPolicy")]
        public Input<string>? B2cAuthenticationPolicy { get; set; }

        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Input("b2cPasswordResetPolicy")]
        public Input<string>? B2cPasswordResetPolicy { get; set; }

        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// The custom login parameters for the Community Training Resource
        /// </summary>
        [Input("customLoginParameters")]
        public Input<string>? CustomLoginParameters { get; set; }

        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The identity type of the Community Training Resource
        /// </summary>
        [Input("identityType", required: true)]
        public Input<string> IdentityType { get; set; } = null!;

        /// <summary>
        /// To indicate whether the Community Training Resource has Teams enabled
        /// </summary>
        [Input("teamsEnabled")]
        public Input<bool>? TeamsEnabled { get; set; }

        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public IdentityConfigurationPropertiesArgs()
        {
            TeamsEnabled = false;
        }
        public static new IdentityConfigurationPropertiesArgs Empty => new IdentityConfigurationPropertiesArgs();
    }
}
