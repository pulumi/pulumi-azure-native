// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Community.V20231101.Outputs
{

    /// <summary>
    /// Details of the Community CommunityTraining Identity Configuration
    /// </summary>
    [OutputType]
    public sealed class IdentityConfigurationPropertiesResponse
    {
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        public readonly string? B2cAuthenticationPolicy;
        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        public readonly string? B2cPasswordResetPolicy;
        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        public readonly string ClientSecret;
        /// <summary>
        /// The custom login parameters for the Community Training Resource
        /// </summary>
        public readonly string? CustomLoginParameters;
        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The identity type of the Community Training Resource
        /// </summary>
        public readonly string IdentityType;
        /// <summary>
        /// To indicate whether the Community Training Resource has Teams enabled
        /// </summary>
        public readonly bool? TeamsEnabled;
        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private IdentityConfigurationPropertiesResponse(
            string? b2cAuthenticationPolicy,

            string? b2cPasswordResetPolicy,

            string clientId,

            string clientSecret,

            string? customLoginParameters,

            string domainName,

            string identityType,

            bool? teamsEnabled,

            string tenantId)
        {
            B2cAuthenticationPolicy = b2cAuthenticationPolicy;
            B2cPasswordResetPolicy = b2cPasswordResetPolicy;
            ClientId = clientId;
            ClientSecret = clientSecret;
            CustomLoginParameters = customLoginParameters;
            DomainName = domainName;
            IdentityType = identityType;
            TeamsEnabled = teamsEnabled;
            TenantId = tenantId;
        }
    }
}
