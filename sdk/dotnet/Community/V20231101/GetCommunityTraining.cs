// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Community.V20231101
{
    public static class GetCommunityTraining
    {
        /// <summary>
        /// Get a CommunityTraining
        /// </summary>
        public static Task<GetCommunityTrainingResult> InvokeAsync(GetCommunityTrainingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCommunityTrainingResult>("azure-native:community/v20231101:getCommunityTraining", args ?? new GetCommunityTrainingArgs(), options.WithDefaults());

        /// <summary>
        /// Get a CommunityTraining
        /// </summary>
        public static Output<GetCommunityTrainingResult> Invoke(GetCommunityTrainingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCommunityTrainingResult>("azure-native:community/v20231101:getCommunityTraining", args ?? new GetCommunityTrainingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCommunityTrainingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Community Training Resource
        /// </summary>
        [Input("communityTrainingName", required: true)]
        public string CommunityTrainingName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCommunityTrainingArgs()
        {
        }
        public static new GetCommunityTrainingArgs Empty => new GetCommunityTrainingArgs();
    }

    public sealed class GetCommunityTrainingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Community Training Resource
        /// </summary>
        [Input("communityTrainingName", required: true)]
        public Input<string> CommunityTrainingName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCommunityTrainingInvokeArgs()
        {
        }
        public static new GetCommunityTrainingInvokeArgs Empty => new GetCommunityTrainingInvokeArgs();
    }


    [OutputType]
    public sealed class GetCommunityTrainingResult
    {
        /// <summary>
        /// To indicate whether the Community Training instance has Disaster Recovery enabled
        /// </summary>
        public readonly bool DisasterRecoveryEnabled;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identity configuration of the Community Training resource
        /// </summary>
        public readonly Outputs.IdentityConfigurationPropertiesResponse IdentityConfiguration;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The email address of the portal admin
        /// </summary>
        public readonly string PortalAdminEmailAddress;
        /// <summary>
        /// The portal name (website name) of the Community Training instance
        /// </summary>
        public readonly string PortalName;
        /// <summary>
        /// The email address of the portal owner. Will be used as the primary contact
        /// </summary>
        public readonly string PortalOwnerEmailAddress;
        /// <summary>
        /// The organization name of the portal owner
        /// </summary>
        public readonly string PortalOwnerOrganizationName;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The SKU (Stock Keeping Unit) assigned to this resource.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// To indicate whether the Community Training instance has Zone Redundancy enabled
        /// </summary>
        public readonly bool ZoneRedundancyEnabled;

        [OutputConstructor]
        private GetCommunityTrainingResult(
            bool disasterRecoveryEnabled,

            string id,

            Outputs.IdentityConfigurationPropertiesResponse identityConfiguration,

            string location,

            string name,

            string portalAdminEmailAddress,

            string portalName,

            string portalOwnerEmailAddress,

            string portalOwnerOrganizationName,

            string provisioningState,

            Outputs.SkuResponse? sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            bool zoneRedundancyEnabled)
        {
            DisasterRecoveryEnabled = disasterRecoveryEnabled;
            Id = id;
            IdentityConfiguration = identityConfiguration;
            Location = location;
            Name = name;
            PortalAdminEmailAddress = portalAdminEmailAddress;
            PortalName = portalName;
            PortalOwnerEmailAddress = portalOwnerEmailAddress;
            PortalOwnerOrganizationName = portalOwnerOrganizationName;
            ProvisioningState = provisioningState;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            ZoneRedundancyEnabled = zoneRedundancyEnabled;
        }
    }
}
