// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventHub
{
    /// <summary>
    /// Single item in List or Get Schema Group operation
    /// Azure REST API version: 2022-10-01-preview. Prior API version in Azure Native 1.x: 2022-01-01-preview
    /// </summary>
    [AzureNativeResourceType("azure-native:eventhub:SchemaRegistry")]
    public partial class SchemaRegistry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Exact time the Schema Group was created.
        /// </summary>
        [Output("createdAtUtc")]
        public Output<string> CreatedAtUtc { get; private set; } = null!;

        /// <summary>
        /// The ETag value.
        /// </summary>
        [Output("eTag")]
        public Output<string> ETag { get; private set; } = null!;

        /// <summary>
        /// dictionary object for SchemaGroup group properties
        /// </summary>
        [Output("groupProperties")]
        public Output<ImmutableDictionary<string, string>?> GroupProperties { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("schemaCompatibility")]
        public Output<string?> SchemaCompatibility { get; private set; } = null!;

        [Output("schemaType")]
        public Output<string?> SchemaType { get; private set; } = null!;

        /// <summary>
        /// The system meta data relating to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Exact time the Schema Group was updated
        /// </summary>
        [Output("updatedAtUtc")]
        public Output<string> UpdatedAtUtc { get; private set; } = null!;


        /// <summary>
        /// Create a SchemaRegistry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SchemaRegistry(string name, SchemaRegistryArgs args, CustomResourceOptions? options = null)
            : base("azure-native:eventhub:SchemaRegistry", name, args ?? new SchemaRegistryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SchemaRegistry(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:eventhub:SchemaRegistry", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:eventhub/v20211101:SchemaRegistry"},
                    new global::Pulumi.Alias { Type = "azure-native:eventhub/v20220101preview:SchemaRegistry"},
                    new global::Pulumi.Alias { Type = "azure-native:eventhub/v20221001preview:SchemaRegistry"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SchemaRegistry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SchemaRegistry Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SchemaRegistry(name, id, options);
        }
    }

    public sealed class SchemaRegistryArgs : global::Pulumi.ResourceArgs
    {
        [Input("groupProperties")]
        private InputMap<string>? _groupProperties;

        /// <summary>
        /// dictionary object for SchemaGroup group properties
        /// </summary>
        public InputMap<string> GroupProperties
        {
            get => _groupProperties ?? (_groupProperties = new InputMap<string>());
            set => _groupProperties = value;
        }

        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("schemaCompatibility")]
        public InputUnion<string, Pulumi.AzureNative.EventHub.SchemaCompatibility>? SchemaCompatibility { get; set; }

        /// <summary>
        /// The Schema Group name 
        /// </summary>
        [Input("schemaGroupName")]
        public Input<string>? SchemaGroupName { get; set; }

        [Input("schemaType")]
        public InputUnion<string, Pulumi.AzureNative.EventHub.SchemaType>? SchemaType { get; set; }

        public SchemaRegistryArgs()
        {
        }
        public static new SchemaRegistryArgs Empty => new SchemaRegistryArgs();
    }
}
