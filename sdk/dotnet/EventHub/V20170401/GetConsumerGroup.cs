// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventHub.V20170401
{
    public static class GetConsumerGroup
    {
        public static Task<GetConsumerGroupResult> InvokeAsync(GetConsumerGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConsumerGroupResult>("azure-nextgen:eventhub/v20170401:getConsumerGroup", args ?? new GetConsumerGroupArgs(), options.WithVersion());
    }


    public sealed class GetConsumerGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The consumer group name
        /// </summary>
        [Input("consumerGroupName", required: true)]
        public string ConsumerGroupName { get; set; } = null!;

        /// <summary>
        /// The Event Hub name
        /// </summary>
        [Input("eventHubName", required: true)]
        public string EventHubName { get; set; } = null!;

        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConsumerGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConsumerGroupResult
    {
        /// <summary>
        /// Exact time the message was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The exact time the message was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
        /// </summary>
        public readonly string? UserMetadata;

        [OutputConstructor]
        private GetConsumerGroupResult(
            string createdAt,

            string name,

            string type,

            string updatedAt,

            string? userMetadata)
        {
            CreatedAt = createdAt;
            Name = name;
            Type = type;
            UpdatedAt = updatedAt;
            UserMetadata = userMetadata;
        }
    }
}
