// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventHub.V20180101Preview
{
    public static class GetNamespaceIpFilterRule
    {
        public static Task<GetNamespaceIpFilterRuleResult> InvokeAsync(GetNamespaceIpFilterRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceIpFilterRuleResult>("azure-nextgen:eventhub/v20180101preview:getNamespaceIpFilterRule", args ?? new GetNamespaceIpFilterRuleArgs(), options.WithVersion());
    }


    public sealed class GetNamespaceIpFilterRuleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP Filter Rule name.
        /// </summary>
        [Input("ipFilterRuleName", required: true)]
        public string IpFilterRuleName { get; set; } = null!;

        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceIpFilterRuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNamespaceIpFilterRuleResult
    {
        /// <summary>
        /// The IP Filter Action
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// IP Filter name
        /// </summary>
        public readonly string? FilterName;
        /// <summary>
        /// IP Mask
        /// </summary>
        public readonly string? IpMask;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceIpFilterRuleResult(
            string? action,

            string? filterName,

            string? ipMask,

            string name,

            string type)
        {
            Action = action;
            FilterName = filterName;
            IpMask = ipMask;
            Name = name;
            Type = type;
        }
    }
}
