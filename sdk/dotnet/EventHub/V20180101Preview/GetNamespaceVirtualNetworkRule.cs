// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.EventHub.V20180101Preview
{
    public static class GetNamespaceVirtualNetworkRule
    {
        public static Task<GetNamespaceVirtualNetworkRuleResult> InvokeAsync(GetNamespaceVirtualNetworkRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceVirtualNetworkRuleResult>("azure-nextgen:eventhub/v20180101preview:getNamespaceVirtualNetworkRule", args ?? new GetNamespaceVirtualNetworkRuleArgs(), options.WithVersion());
    }


    public sealed class GetNamespaceVirtualNetworkRuleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Virtual Network Rule name.
        /// </summary>
        [Input("virtualNetworkRuleName", required: true)]
        public string VirtualNetworkRuleName { get; set; } = null!;

        public GetNamespaceVirtualNetworkRuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNamespaceVirtualNetworkRuleResult
    {
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// ARM ID of Virtual Network Subnet
        /// </summary>
        public readonly string? VirtualNetworkSubnetId;

        [OutputConstructor]
        private GetNamespaceVirtualNetworkRuleResult(
            string name,

            string type,

            string? virtualNetworkSubnetId)
        {
            Name = name;
            Type = type;
            VirtualNetworkSubnetId = virtualNetworkSubnetId;
        }
    }
}
