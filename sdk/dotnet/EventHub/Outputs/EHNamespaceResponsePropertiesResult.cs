// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.EventHub.Outputs
{

    [OutputType]
    public sealed class EHNamespaceResponsePropertiesResult
    {
        /// <summary>
        /// The time the Namespace was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Value that indicates whether AutoInflate is enabled for eventhub namespace.
        /// </summary>
        public readonly bool? IsAutoInflateEnabled;
        /// <summary>
        /// Value that indicates whether Kafka is enabled for eventhub namespace.
        /// </summary>
        public readonly bool? KafkaEnabled;
        /// <summary>
        /// Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
        /// </summary>
        public readonly int? MaximumThroughputUnits;
        /// <summary>
        /// Identifier for Azure Insights metrics.
        /// </summary>
        public readonly string MetricId;
        /// <summary>
        /// Provisioning state of the Namespace.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Endpoint you can use to perform Service Bus operations.
        /// </summary>
        public readonly string ServiceBusEndpoint;
        /// <summary>
        /// The time the Namespace was updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private EHNamespaceResponsePropertiesResult(
            string createdAt,

            bool? isAutoInflateEnabled,

            bool? kafkaEnabled,

            int? maximumThroughputUnits,

            string metricId,

            string provisioningState,

            string serviceBusEndpoint,

            string updatedAt)
        {
            CreatedAt = createdAt;
            IsAutoInflateEnabled = isAutoInflateEnabled;
            KafkaEnabled = kafkaEnabled;
            MaximumThroughputUnits = maximumThroughputUnits;
            MetricId = metricId;
            ProvisioningState = provisioningState;
            ServiceBusEndpoint = serviceBusEndpoint;
            UpdatedAt = updatedAt;
        }
    }
}
