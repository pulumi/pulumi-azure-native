// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventHub.V20140901
{
    [Obsolete(@"Version 2014-09-01 will be removed in v2 of the provider.")]
    public static class GetNamespace
    {
        /// <summary>
        /// Gets the description of the specified namespace.
        /// </summary>
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("azure-native:eventhub/v20140901:getNamespace", args ?? new GetNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the description of the specified namespace.
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("azure-native:eventhub/v20140901:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceArgs()
        {
        }
        public static new GetNamespaceArgs Empty => new GetNamespaceArgs();
    }

    public sealed class GetNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group within the azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetNamespaceInvokeArgs()
        {
        }
        public static new GetNamespaceInvokeArgs Empty => new GetNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// The time the Namespace was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Specifies whether this instance is enabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Identifier for Azure Insights metrics
        /// </summary>
        public readonly string MetricId;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the Namespace.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Endpoint you can use to perform Service Bus operations.
        /// </summary>
        public readonly string? ServiceBusEndpoint;
        /// <summary>
        /// SKU parameters supplied to the create Namespace operation
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// State of the Namespace.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The time the Namespace was updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetNamespaceResult(
            string? createdAt,

            bool? enabled,

            string id,

            string location,

            string metricId,

            string name,

            string? provisioningState,

            string? serviceBusEndpoint,

            Outputs.SkuResponse? sku,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            Enabled = enabled;
            Id = id;
            Location = location;
            MetricId = metricId;
            Name = name;
            ProvisioningState = provisioningState;
            ServiceBusEndpoint = serviceBusEndpoint;
            Sku = sku;
            Status = status;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
