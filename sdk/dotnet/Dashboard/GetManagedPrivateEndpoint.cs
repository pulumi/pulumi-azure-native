// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Dashboard
{
    public static class GetManagedPrivateEndpoint
    {
        /// <summary>
        /// The managed private endpoint resource type.
        /// Azure REST API version: 2022-10-01-preview.
        /// 
        /// Other available API versions: 2023-09-01, 2023-10-01-preview.
        /// </summary>
        public static Task<GetManagedPrivateEndpointResult> InvokeAsync(GetManagedPrivateEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPrivateEndpointResult>("azure-native:dashboard:getManagedPrivateEndpoint", args ?? new GetManagedPrivateEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// The managed private endpoint resource type.
        /// Azure REST API version: 2022-10-01-preview.
        /// 
        /// Other available API versions: 2023-09-01, 2023-10-01-preview.
        /// </summary>
        public static Output<GetManagedPrivateEndpointResult> Invoke(GetManagedPrivateEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPrivateEndpointResult>("azure-native:dashboard:getManagedPrivateEndpoint", args ?? new GetManagedPrivateEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPrivateEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The managed private endpoint name of Azure Managed Grafana.
        /// </summary>
        [Input("managedPrivateEndpointName", required: true)]
        public string ManagedPrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workspace name of Azure Managed Grafana.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetManagedPrivateEndpointArgs()
        {
        }
        public static new GetManagedPrivateEndpointArgs Empty => new GetManagedPrivateEndpointArgs();
    }

    public sealed class GetManagedPrivateEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The managed private endpoint name of Azure Managed Grafana.
        /// </summary>
        [Input("managedPrivateEndpointName", required: true)]
        public Input<string> ManagedPrivateEndpointName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workspace name of Azure Managed Grafana.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetManagedPrivateEndpointInvokeArgs()
        {
        }
        public static new GetManagedPrivateEndpointInvokeArgs Empty => new GetManagedPrivateEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPrivateEndpointResult
    {
        /// <summary>
        /// The state of managed private endpoint connection.
        /// </summary>
        public readonly Outputs.ManagedPrivateEndpointConnectionStateResponse ConnectionState;
        /// <summary>
        /// The group Ids of the managed private endpoint.
        /// </summary>
        public readonly ImmutableArray<string> GroupIds;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ARM resource ID of the resource for which the managed private endpoint is pointing to.
        /// </summary>
        public readonly string? PrivateLinkResourceId;
        /// <summary>
        /// The region of the resource to which the managed private endpoint is pointing to.
        /// </summary>
        public readonly string? PrivateLinkResourceRegion;
        /// <summary>
        /// The private IP of private endpoint after approval. This property is empty before connection is approved.
        /// </summary>
        public readonly string PrivateLinkServicePrivateIP;
        /// <summary>
        /// The URL of the data store behind the private link service. It would be the URL in the Grafana data source configuration page without the protocol and port.
        /// </summary>
        public readonly string? PrivateLinkServiceUrl;
        /// <summary>
        /// Provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// User input request message of the managed private endpoint.
        /// </summary>
        public readonly string? RequestMessage;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedPrivateEndpointResult(
            Outputs.ManagedPrivateEndpointConnectionStateResponse connectionState,

            ImmutableArray<string> groupIds,

            string id,

            string location,

            string name,

            string? privateLinkResourceId,

            string? privateLinkResourceRegion,

            string privateLinkServicePrivateIP,

            string? privateLinkServiceUrl,

            string provisioningState,

            string? requestMessage,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ConnectionState = connectionState;
            GroupIds = groupIds;
            Id = id;
            Location = location;
            Name = name;
            PrivateLinkResourceId = privateLinkResourceId;
            PrivateLinkResourceRegion = privateLinkResourceRegion;
            PrivateLinkServicePrivateIP = privateLinkServicePrivateIP;
            PrivateLinkServiceUrl = privateLinkServiceUrl;
            ProvisioningState = provisioningState;
            RequestMessage = requestMessage;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
