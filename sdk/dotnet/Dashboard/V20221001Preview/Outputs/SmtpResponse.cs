// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Dashboard.V20221001Preview.Outputs
{

    /// <summary>
    /// Email server settings.
    /// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
    /// </summary>
    [OutputType]
    public sealed class SmtpResponse
    {
        /// <summary>
        /// Enable this to allow Grafana to send email. Default is false
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        public readonly string? FromAddress;
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        public readonly string? FromName;
        /// <summary>
        /// SMTP server hostname with port, e.g. test.email.net:587
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        public readonly bool? SkipVerify;
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        public readonly string? StartTLSPolicy;
        /// <summary>
        /// User of SMTP auth
        /// </summary>
        public readonly string? User;

        [OutputConstructor]
        private SmtpResponse(
            bool? enabled,

            string? fromAddress,

            string? fromName,

            string? host,

            string? password,

            bool? skipVerify,

            string? startTLSPolicy,

            string? user)
        {
            Enabled = enabled;
            FromAddress = fromAddress;
            FromName = fromName;
            Host = host;
            Password = password;
            SkipVerify = skipVerify;
            StartTLSPolicy = startTLSPolicy;
            User = user;
        }
    }
}
