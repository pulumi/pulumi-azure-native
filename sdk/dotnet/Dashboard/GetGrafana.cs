// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Dashboard
{
    public static class GetGrafana
    {
        /// <summary>
        /// The grafana resource type.
        /// 
        /// Uses Azure REST API version 2024-10-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-10-01-preview, 2023-09-01, 2023-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dashboard [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetGrafanaResult> InvokeAsync(GetGrafanaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGrafanaResult>("azure-native:dashboard:getGrafana", args ?? new GetGrafanaArgs(), options.WithDefaults());

        /// <summary>
        /// The grafana resource type.
        /// 
        /// Uses Azure REST API version 2024-10-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-10-01-preview, 2023-09-01, 2023-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dashboard [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGrafanaResult> Invoke(GetGrafanaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGrafanaResult>("azure-native:dashboard:getGrafana", args ?? new GetGrafanaInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The grafana resource type.
        /// 
        /// Uses Azure REST API version 2024-10-01.
        /// 
        /// Other available API versions: 2022-08-01, 2022-10-01-preview, 2023-09-01, 2023-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dashboard [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetGrafanaResult> Invoke(GetGrafanaInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGrafanaResult>("azure-native:dashboard:getGrafana", args ?? new GetGrafanaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGrafanaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workspace name of Azure Managed Grafana.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetGrafanaArgs()
        {
        }
        public static new GetGrafanaArgs Empty => new GetGrafanaArgs();
    }

    public sealed class GetGrafanaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workspace name of Azure Managed Grafana.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetGrafanaInvokeArgs()
        {
        }
        public static new GetGrafanaInvokeArgs Empty => new GetGrafanaInvokeArgs();
    }


    [OutputType]
    public sealed class GetGrafanaResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// ARM id of the grafana resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed identity of the grafana resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the grafana resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Name of the grafana resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties specific to the grafana resource.
        /// </summary>
        public readonly Outputs.ManagedGrafanaPropertiesResponse Properties;
        /// <summary>
        /// The Sku of the grafana resource.
        /// </summary>
        public readonly Outputs.ResourceSkuResponse? Sku;
        /// <summary>
        /// The system meta data relating to this grafana resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The tags for grafana resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the grafana resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGrafanaResult(
            string azureApiVersion,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string? location,

            string name,

            Outputs.ManagedGrafanaPropertiesResponse properties,

            Outputs.ResourceSkuResponse? sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
