// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.V20160810.Outputs
{

    [OutputType]
    public sealed class HyperVReplicaAzureReplicationDetailsResponse
    {
        /// <summary>
        /// Azure VM Disk details.
        /// </summary>
        public readonly ImmutableArray<Outputs.AzureVmDiskDetailsResponse> AzureVMDiskDetails;
        /// <summary>
        /// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
        /// </summary>
        public readonly string? EnableRDPOnTargetOption;
        /// <summary>
        /// The encryption info.
        /// </summary>
        public readonly string? Encryption;
        /// <summary>
        /// Initial replication details.
        /// </summary>
        public readonly Outputs.InitialReplicationDetailsResponse? InitialReplicationDetails;
        /// <summary>
        /// Gets the Instance type.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The Last replication time.
        /// </summary>
        public readonly string? LastReplicatedTime;
        /// <summary>
        /// License Type of the VM to be used.
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// The operating system info.
        /// </summary>
        public readonly Outputs.OSDetailsResponse? OSDetails;
        /// <summary>
        /// The recovery availability set Id.
        /// </summary>
        public readonly string? RecoveryAvailabilitySetId;
        /// <summary>
        /// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
        /// </summary>
        public readonly string? RecoveryAzureLogStorageAccountId;
        /// <summary>
        /// The target resource group Id.
        /// </summary>
        public readonly string? RecoveryAzureResourceGroupId;
        /// <summary>
        /// The recovery Azure storage account.
        /// </summary>
        public readonly string? RecoveryAzureStorageAccount;
        /// <summary>
        /// Recovery Azure given name.
        /// </summary>
        public readonly string? RecoveryAzureVMName;
        /// <summary>
        /// The Recovery Azure VM size.
        /// </summary>
        public readonly string? RecoveryAzureVMSize;
        /// <summary>
        /// The selected recovery azure network Id.
        /// </summary>
        public readonly string? SelectedRecoveryAzureNetworkId;
        /// <summary>
        /// The CPU count of the VM on the primary side.
        /// </summary>
        public readonly int? SourceVmCPUCount;
        /// <summary>
        /// The RAM size of the VM on the primary side.
        /// </summary>
        public readonly int? SourceVmRAMSizeInMB;
        /// <summary>
        /// A value indicating whether managed disks should be used during failover.
        /// </summary>
        public readonly string? UseManagedDisks;
        /// <summary>
        /// The virtual machine Id.
        /// </summary>
        public readonly string? VmId;
        /// <summary>
        /// The PE Network details.
        /// </summary>
        public readonly ImmutableArray<Outputs.VMNicDetailsResponse> VmNics;
        /// <summary>
        /// The protection state for the vm.
        /// </summary>
        public readonly string? VmProtectionState;
        /// <summary>
        /// The protection state description for the vm.
        /// </summary>
        public readonly string? VmProtectionStateDescription;

        [OutputConstructor]
        private HyperVReplicaAzureReplicationDetailsResponse(
            ImmutableArray<Outputs.AzureVmDiskDetailsResponse> azureVMDiskDetails,

            string? enableRDPOnTargetOption,

            string? encryption,

            Outputs.InitialReplicationDetailsResponse? initialReplicationDetails,

            string instanceType,

            string? lastReplicatedTime,

            string? licenseType,

            Outputs.OSDetailsResponse? oSDetails,

            string? recoveryAvailabilitySetId,

            string? recoveryAzureLogStorageAccountId,

            string? recoveryAzureResourceGroupId,

            string? recoveryAzureStorageAccount,

            string? recoveryAzureVMName,

            string? recoveryAzureVMSize,

            string? selectedRecoveryAzureNetworkId,

            int? sourceVmCPUCount,

            int? sourceVmRAMSizeInMB,

            string? useManagedDisks,

            string? vmId,

            ImmutableArray<Outputs.VMNicDetailsResponse> vmNics,

            string? vmProtectionState,

            string? vmProtectionStateDescription)
        {
            AzureVMDiskDetails = azureVMDiskDetails;
            EnableRDPOnTargetOption = enableRDPOnTargetOption;
            Encryption = encryption;
            InitialReplicationDetails = initialReplicationDetails;
            InstanceType = instanceType;
            LastReplicatedTime = lastReplicatedTime;
            LicenseType = licenseType;
            OSDetails = oSDetails;
            RecoveryAvailabilitySetId = recoveryAvailabilitySetId;
            RecoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            RecoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            RecoveryAzureStorageAccount = recoveryAzureStorageAccount;
            RecoveryAzureVMName = recoveryAzureVMName;
            RecoveryAzureVMSize = recoveryAzureVMSize;
            SelectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            SourceVmCPUCount = sourceVmCPUCount;
            SourceVmRAMSizeInMB = sourceVmRAMSizeInMB;
            UseManagedDisks = useManagedDisks;
            VmId = vmId;
            VmNics = vmNics;
            VmProtectionState = vmProtectionState;
            VmProtectionStateDescription = vmProtectionStateDescription;
        }
    }
}
