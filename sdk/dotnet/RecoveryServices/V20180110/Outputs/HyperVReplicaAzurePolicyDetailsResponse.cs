// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.V20180110.Outputs
{

    [OutputType]
    public sealed class HyperVReplicaAzurePolicyDetailsResponse
    {
        /// <summary>
        /// The active storage account Id.
        /// </summary>
        public readonly string? ActiveStorageAccountId;
        /// <summary>
        /// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
        /// </summary>
        public readonly int? ApplicationConsistentSnapshotFrequencyInHours;
        /// <summary>
        /// A value indicating whether encryption is enabled for virtual machines in this cloud.
        /// </summary>
        public readonly string? Encryption;
        /// <summary>
        /// Gets the class type. Overridden in derived classes.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
        /// </summary>
        public readonly string? OnlineReplicationStartTime;
        /// <summary>
        /// The duration (in hours) to which point the recovery history needs to be maintained.
        /// </summary>
        public readonly int? RecoveryPointHistoryDurationInHours;
        /// <summary>
        /// The replication interval.
        /// </summary>
        public readonly int? ReplicationInterval;

        [OutputConstructor]
        private HyperVReplicaAzurePolicyDetailsResponse(
            string? activeStorageAccountId,

            int? applicationConsistentSnapshotFrequencyInHours,

            string? encryption,

            string instanceType,

            string? onlineReplicationStartTime,

            int? recoveryPointHistoryDurationInHours,

            int? replicationInterval)
        {
            ActiveStorageAccountId = activeStorageAccountId;
            ApplicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
            Encryption = encryption;
            InstanceType = instanceType;
            OnlineReplicationStartTime = onlineReplicationStartTime;
            RecoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
            ReplicationInterval = replicationInterval;
        }
    }
}
