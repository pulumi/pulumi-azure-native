// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.V20180110.Outputs
{

    [OutputType]
    public sealed class A2AProtectedManagedDiskDetailsResponse
    {
        /// <summary>
        /// The data pending at source virtual machine in MB.
        /// </summary>
        public readonly double? DataPendingAtSourceAgentInMB;
        /// <summary>
        /// The data pending for replication in MB at staging account.
        /// </summary>
        public readonly double? DataPendingInStagingStorageAccountInMB;
        /// <summary>
        /// The KeyVault resource id for secret (BEK).
        /// </summary>
        public readonly string? DekKeyVaultArmId;
        /// <summary>
        /// The disk capacity in bytes.
        /// </summary>
        public readonly int? DiskCapacityInBytes;
        /// <summary>
        /// The managed disk Arm id.
        /// </summary>
        public readonly string? DiskId;
        /// <summary>
        /// The disk name.
        /// </summary>
        public readonly string? DiskName;
        /// <summary>
        /// The type of disk.
        /// </summary>
        public readonly string? DiskType;
        /// <summary>
        /// A value indicating whether vm has encrypted os disk or not.
        /// </summary>
        public readonly bool? IsDiskEncrypted;
        /// <summary>
        /// A value indicating whether disk key got encrypted or not.
        /// </summary>
        public readonly bool? IsDiskKeyEncrypted;
        /// <summary>
        /// The KeyVault resource id for key (KEK).
        /// </summary>
        public readonly string? KekKeyVaultArmId;
        /// <summary>
        /// The key URL / identifier (KEK).
        /// </summary>
        public readonly string? KeyIdentifier;
        /// <summary>
        /// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
        /// </summary>
        public readonly string? MonitoringJobType;
        /// <summary>
        /// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
        /// </summary>
        public readonly int? MonitoringPercentageCompletion;
        /// <summary>
        /// The primary staging storage account.
        /// </summary>
        public readonly string? PrimaryStagingAzureStorageAccountId;
        /// <summary>
        /// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
        /// </summary>
        public readonly string? RecoveryReplicaDiskAccountType;
        /// <summary>
        /// Recovery replica disk Arm Id.
        /// </summary>
        public readonly string? RecoveryReplicaDiskId;
        /// <summary>
        /// The recovery disk resource group Arm Id.
        /// </summary>
        public readonly string? RecoveryResourceGroupId;
        /// <summary>
        /// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
        /// </summary>
        public readonly string? RecoveryTargetDiskAccountType;
        /// <summary>
        /// Recovery target disk Arm Id.
        /// </summary>
        public readonly string? RecoveryTargetDiskId;
        /// <summary>
        /// A value indicating whether resync is required for this disk.
        /// </summary>
        public readonly bool? ResyncRequired;
        /// <summary>
        /// The secret URL / identifier (BEK).
        /// </summary>
        public readonly string? SecretIdentifier;

        [OutputConstructor]
        private A2AProtectedManagedDiskDetailsResponse(
            double? dataPendingAtSourceAgentInMB,

            double? dataPendingInStagingStorageAccountInMB,

            string? dekKeyVaultArmId,

            int? diskCapacityInBytes,

            string? diskId,

            string? diskName,

            string? diskType,

            bool? isDiskEncrypted,

            bool? isDiskKeyEncrypted,

            string? kekKeyVaultArmId,

            string? keyIdentifier,

            string? monitoringJobType,

            int? monitoringPercentageCompletion,

            string? primaryStagingAzureStorageAccountId,

            string? recoveryReplicaDiskAccountType,

            string? recoveryReplicaDiskId,

            string? recoveryResourceGroupId,

            string? recoveryTargetDiskAccountType,

            string? recoveryTargetDiskId,

            bool? resyncRequired,

            string? secretIdentifier)
        {
            DataPendingAtSourceAgentInMB = dataPendingAtSourceAgentInMB;
            DataPendingInStagingStorageAccountInMB = dataPendingInStagingStorageAccountInMB;
            DekKeyVaultArmId = dekKeyVaultArmId;
            DiskCapacityInBytes = diskCapacityInBytes;
            DiskId = diskId;
            DiskName = diskName;
            DiskType = diskType;
            IsDiskEncrypted = isDiskEncrypted;
            IsDiskKeyEncrypted = isDiskKeyEncrypted;
            KekKeyVaultArmId = kekKeyVaultArmId;
            KeyIdentifier = keyIdentifier;
            MonitoringJobType = monitoringJobType;
            MonitoringPercentageCompletion = monitoringPercentageCompletion;
            PrimaryStagingAzureStorageAccountId = primaryStagingAzureStorageAccountId;
            RecoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
            RecoveryReplicaDiskId = recoveryReplicaDiskId;
            RecoveryResourceGroupId = recoveryResourceGroupId;
            RecoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
            RecoveryTargetDiskId = recoveryTargetDiskId;
            ResyncRequired = resyncRequired;
            SecretIdentifier = secretIdentifier;
        }
    }
}
