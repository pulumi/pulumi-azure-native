// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20230201.Outputs
{

    /// <summary>
    /// Process server details.
    /// </summary>
    [OutputType]
    public sealed class ProcessServerDetailsResponse
    {
        /// <summary>
        /// The available memory.
        /// </summary>
        public readonly double AvailableMemoryInBytes;
        /// <summary>
        /// The available disk space.
        /// </summary>
        public readonly double AvailableSpaceInBytes;
        /// <summary>
        /// The process server Bios Id.
        /// </summary>
        public readonly string BiosId;
        /// <summary>
        /// The disk usage status.
        /// </summary>
        public readonly string DiskUsageStatus;
        /// <summary>
        /// The fabric object Id.
        /// </summary>
        public readonly string FabricObjectId;
        /// <summary>
        /// The process server Fqdn.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// The free disk space percentage.
        /// </summary>
        public readonly double FreeSpacePercentage;
        /// <summary>
        /// The health of the process server.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// The health errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.HealthErrorResponse> HealthErrors;
        /// <summary>
        /// The historic health of the process server based on the health in last 24 hours.
        /// </summary>
        public readonly string HistoricHealth;
        /// <summary>
        /// The process server Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of IP addresses for communicating with the RCM component.
        /// </summary>
        public readonly ImmutableArray<string> IpAddresses;
        /// <summary>
        /// The last heartbeat received from the process server.
        /// </summary>
        public readonly string LastHeartbeatUtc;
        /// <summary>
        /// The memory usage percentage.
        /// </summary>
        public readonly double MemoryUsagePercentage;
        /// <summary>
        /// The memory usage status.
        /// </summary>
        public readonly string MemoryUsageStatus;
        /// <summary>
        /// The process server name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The processor usage percentage.
        /// </summary>
        public readonly double ProcessorUsagePercentage;
        /// <summary>
        /// The processor usage status.
        /// </summary>
        public readonly string ProcessorUsageStatus;
        /// <summary>
        /// The protected item count.
        /// </summary>
        public readonly int ProtectedItemCount;
        /// <summary>
        /// The system load.
        /// </summary>
        public readonly double SystemLoad;
        /// <summary>
        /// The system load status.
        /// </summary>
        public readonly string SystemLoadStatus;
        /// <summary>
        /// The throughput in bytes.
        /// </summary>
        public readonly double ThroughputInBytes;
        /// <summary>
        /// The throughput status.
        /// </summary>
        public readonly string ThroughputStatus;
        /// <summary>
        /// The uploading pending data in bytes.
        /// </summary>
        public readonly double ThroughputUploadPendingDataInBytes;
        /// <summary>
        /// The total memory.
        /// </summary>
        public readonly double TotalMemoryInBytes;
        /// <summary>
        /// The total disk space.
        /// </summary>
        public readonly double TotalSpaceInBytes;
        /// <summary>
        /// The used memory.
        /// </summary>
        public readonly double UsedMemoryInBytes;
        /// <summary>
        /// The used disk space.
        /// </summary>
        public readonly double UsedSpaceInBytes;
        /// <summary>
        /// The version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private ProcessServerDetailsResponse(
            double availableMemoryInBytes,

            double availableSpaceInBytes,

            string biosId,

            string diskUsageStatus,

            string fabricObjectId,

            string fqdn,

            double freeSpacePercentage,

            string health,

            ImmutableArray<Outputs.HealthErrorResponse> healthErrors,

            string historicHealth,

            string id,

            ImmutableArray<string> ipAddresses,

            string lastHeartbeatUtc,

            double memoryUsagePercentage,

            string memoryUsageStatus,

            string name,

            double processorUsagePercentage,

            string processorUsageStatus,

            int protectedItemCount,

            double systemLoad,

            string systemLoadStatus,

            double throughputInBytes,

            string throughputStatus,

            double throughputUploadPendingDataInBytes,

            double totalMemoryInBytes,

            double totalSpaceInBytes,

            double usedMemoryInBytes,

            double usedSpaceInBytes,

            string version)
        {
            AvailableMemoryInBytes = availableMemoryInBytes;
            AvailableSpaceInBytes = availableSpaceInBytes;
            BiosId = biosId;
            DiskUsageStatus = diskUsageStatus;
            FabricObjectId = fabricObjectId;
            Fqdn = fqdn;
            FreeSpacePercentage = freeSpacePercentage;
            Health = health;
            HealthErrors = healthErrors;
            HistoricHealth = historicHealth;
            Id = id;
            IpAddresses = ipAddresses;
            LastHeartbeatUtc = lastHeartbeatUtc;
            MemoryUsagePercentage = memoryUsagePercentage;
            MemoryUsageStatus = memoryUsageStatus;
            Name = name;
            ProcessorUsagePercentage = processorUsagePercentage;
            ProcessorUsageStatus = processorUsageStatus;
            ProtectedItemCount = protectedItemCount;
            SystemLoad = systemLoad;
            SystemLoadStatus = systemLoadStatus;
            ThroughputInBytes = throughputInBytes;
            ThroughputStatus = throughputStatus;
            ThroughputUploadPendingDataInBytes = throughputUploadPendingDataInBytes;
            TotalMemoryInBytes = totalMemoryInBytes;
            TotalSpaceInBytes = totalSpaceInBytes;
            UsedMemoryInBytes = usedMemoryInBytes;
            UsedSpaceInBytes = usedSpaceInBytes;
            Version = version;
        }
    }
}
