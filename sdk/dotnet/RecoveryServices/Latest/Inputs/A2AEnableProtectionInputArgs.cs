// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.Latest.Inputs
{

    /// <summary>
    /// A2A enable protection input.
    /// </summary>
    public sealed class A2AEnableProtectionInputArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The recovery disk encryption information.
        /// </summary>
        [Input("diskEncryptionInfo")]
        public Input<Inputs.DiskEncryptionInfoArgs>? DiskEncryptionInfo { get; set; }

        /// <summary>
        /// The fabric specific object Id of the virtual machine.
        /// </summary>
        [Input("fabricObjectId")]
        public Input<string>? FabricObjectId { get; set; }

        /// <summary>
        /// The class type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// The multi vm group name.
        /// </summary>
        [Input("multiVmGroupName")]
        public Input<string>? MultiVmGroupName { get; set; }

        /// <summary>
        /// The recovery availability set Id.
        /// </summary>
        [Input("recoveryAvailabilitySetId")]
        public Input<string>? RecoveryAvailabilitySetId { get; set; }

        /// <summary>
        /// The recovery availability zone.
        /// </summary>
        [Input("recoveryAvailabilityZone")]
        public Input<string>? RecoveryAvailabilityZone { get; set; }

        /// <summary>
        /// The recovery Azure virtual network ARM id.
        /// </summary>
        [Input("recoveryAzureNetworkId")]
        public Input<string>? RecoveryAzureNetworkId { get; set; }

        /// <summary>
        /// The boot diagnostic storage account.
        /// </summary>
        [Input("recoveryBootDiagStorageAccountId")]
        public Input<string>? RecoveryBootDiagStorageAccountId { get; set; }

        /// <summary>
        /// The recovery cloud service Id. Valid for V1 scenarios.
        /// </summary>
        [Input("recoveryCloudServiceId")]
        public Input<string>? RecoveryCloudServiceId { get; set; }

        /// <summary>
        /// The recovery container Id.
        /// </summary>
        [Input("recoveryContainerId")]
        public Input<string>? RecoveryContainerId { get; set; }

        /// <summary>
        /// The recovery proximity placement group Id.
        /// </summary>
        [Input("recoveryProximityPlacementGroupId")]
        public Input<string>? RecoveryProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The recovery resource group Id. Valid for V2 scenarios.
        /// </summary>
        [Input("recoveryResourceGroupId")]
        public Input<string>? RecoveryResourceGroupId { get; set; }

        /// <summary>
        /// The recovery subnet name.
        /// </summary>
        [Input("recoverySubnetName")]
        public Input<string>? RecoverySubnetName { get; set; }

        [Input("vmDisks")]
        private InputList<Inputs.A2AVmDiskInputDetailsArgs>? _vmDisks;

        /// <summary>
        /// The list of vm disk details.
        /// </summary>
        public InputList<Inputs.A2AVmDiskInputDetailsArgs> VmDisks
        {
            get => _vmDisks ?? (_vmDisks = new InputList<Inputs.A2AVmDiskInputDetailsArgs>());
            set => _vmDisks = value;
        }

        [Input("vmManagedDisks")]
        private InputList<Inputs.A2AVmManagedDiskInputDetailsArgs>? _vmManagedDisks;

        /// <summary>
        /// The list of vm managed disk details.
        /// </summary>
        public InputList<Inputs.A2AVmManagedDiskInputDetailsArgs> VmManagedDisks
        {
            get => _vmManagedDisks ?? (_vmManagedDisks = new InputList<Inputs.A2AVmManagedDiskInputDetailsArgs>());
            set => _vmManagedDisks = value;
        }

        public A2AEnableProtectionInputArgs()
        {
        }
    }
}
