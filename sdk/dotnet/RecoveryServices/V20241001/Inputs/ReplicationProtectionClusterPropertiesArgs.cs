// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20241001.Inputs
{

    /// <summary>
    /// Replication protection cluster custom data details.
    /// </summary>
    public sealed class ReplicationProtectionClusterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Current active location of the Protection cluster.
        /// </summary>
        [Input("activeLocation")]
        public Input<string>? ActiveLocation { get; set; }

        /// <summary>
        /// The Agent cluster Id.
        /// </summary>
        [Input("agentClusterId")]
        public Input<string>? AgentClusterId { get; set; }

        [Input("allowedOperations")]
        private InputList<string>? _allowedOperations;

        /// <summary>
        /// The allowed operations on the Replication protection cluster.
        /// </summary>
        public InputList<string> AllowedOperations
        {
            get => _allowedOperations ?? (_allowedOperations = new InputList<string>());
            set => _allowedOperations = value;
        }

        /// <summary>
        /// A value indicating whether all nodes of the cluster are registered or not.
        /// </summary>
        [Input("areAllClusterNodesRegistered")]
        public Input<bool>? AreAllClusterNodesRegistered { get; set; }

        /// <summary>
        /// The cluster FQDN.
        /// </summary>
        [Input("clusterFqdn")]
        public Input<string>? ClusterFqdn { get; set; }

        [Input("clusterNodeFqdns")]
        private InputList<string>? _clusterNodeFqdns;

        /// <summary>
        /// The List of cluster Node FQDNs.
        /// </summary>
        public InputList<string> ClusterNodeFqdns
        {
            get => _clusterNodeFqdns ?? (_clusterNodeFqdns = new InputList<string>());
            set => _clusterNodeFqdns = value;
        }

        [Input("clusterProtectedItemIds")]
        private InputList<string>? _clusterProtectedItemIds;

        /// <summary>
        /// The List of Protected Item Id's.
        /// </summary>
        public InputList<string> ClusterProtectedItemIds
        {
            get => _clusterProtectedItemIds ?? (_clusterProtectedItemIds = new InputList<string>());
            set => _clusterProtectedItemIds = value;
        }

        [Input("clusterRegisteredNodes")]
        private InputList<Inputs.RegisteredClusterNodesArgs>? _clusterRegisteredNodes;

        /// <summary>
        /// The registered node details.
        /// </summary>
        public InputList<Inputs.RegisteredClusterNodesArgs> ClusterRegisteredNodes
        {
            get => _clusterRegisteredNodes ?? (_clusterRegisteredNodes = new InputList<Inputs.RegisteredClusterNodesArgs>());
            set => _clusterRegisteredNodes = value;
        }

        /// <summary>
        /// The current scenario.
        /// </summary>
        [Input("currentScenario")]
        public Input<Inputs.CurrentScenarioDetailsArgs>? CurrentScenario { get; set; }

        [Input("healthErrors")]
        private InputList<Inputs.HealthErrorArgs>? _healthErrors;

        /// <summary>
        /// List of health errors.
        /// </summary>
        public InputList<Inputs.HealthErrorArgs> HealthErrors
        {
            get => _healthErrors ?? (_healthErrors = new InputList<Inputs.HealthErrorArgs>());
            set => _healthErrors = value;
        }

        /// <summary>
        /// The last successful failover time.
        /// </summary>
        [Input("lastSuccessfulFailoverTime")]
        public Input<string>? LastSuccessfulFailoverTime { get; set; }

        /// <summary>
        /// The last successful test failover time.
        /// </summary>
        [Input("lastSuccessfulTestFailoverTime")]
        public Input<string>? LastSuccessfulTestFailoverTime { get; set; }

        /// <summary>
        /// The name of Policy governing this PE.
        /// </summary>
        [Input("policyFriendlyName")]
        public Input<string>? PolicyFriendlyName { get; set; }

        /// <summary>
        /// The Policy Id.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The friendly name of the primary fabric.
        /// </summary>
        [Input("primaryFabricFriendlyName")]
        public Input<string>? PrimaryFabricFriendlyName { get; set; }

        /// <summary>
        /// The fabric provider of the primary fabric.
        /// </summary>
        [Input("primaryFabricProvider")]
        public Input<string>? PrimaryFabricProvider { get; set; }

        /// <summary>
        /// The name of primary protection container friendly name.
        /// </summary>
        [Input("primaryProtectionContainerFriendlyName")]
        public Input<string>? PrimaryProtectionContainerFriendlyName { get; set; }

        /// <summary>
        /// The type of protection cluster type.
        /// </summary>
        [Input("protectionClusterType")]
        public Input<string>? ProtectionClusterType { get; set; }

        /// <summary>
        /// The protection status.
        /// </summary>
        [Input("protectionState")]
        public Input<string>? ProtectionState { get; set; }

        /// <summary>
        /// The protection state description.
        /// </summary>
        [Input("protectionStateDescription")]
        public Input<string>? ProtectionStateDescription { get; set; }

        /// <summary>
        /// The Replication cluster provider custom settings.
        /// </summary>
        [Input("providerSpecificDetails")]
        public Input<Inputs.A2AReplicationProtectionClusterDetailsArgs>? ProviderSpecificDetails { get; set; }

        /// <summary>
        /// The recovery container Id.
        /// </summary>
        [Input("recoveryContainerId")]
        public Input<string>? RecoveryContainerId { get; set; }

        /// <summary>
        /// The friendly name of recovery fabric.
        /// </summary>
        [Input("recoveryFabricFriendlyName")]
        public Input<string>? RecoveryFabricFriendlyName { get; set; }

        /// <summary>
        /// The Arm Id of recovery fabric.
        /// </summary>
        [Input("recoveryFabricId")]
        public Input<string>? RecoveryFabricId { get; set; }

        /// <summary>
        /// The name of recovery container friendly name.
        /// </summary>
        [Input("recoveryProtectionContainerFriendlyName")]
        public Input<string>? RecoveryProtectionContainerFriendlyName { get; set; }

        /// <summary>
        /// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
        /// </summary>
        [Input("replicationHealth")]
        public Input<string>? ReplicationHealth { get; set; }

        /// <summary>
        /// The shared disk properties.
        /// </summary>
        [Input("sharedDiskProperties")]
        public Input<Inputs.SharedDiskReplicationItemPropertiesArgs>? SharedDiskProperties { get; set; }

        /// <summary>
        /// The Test failover state.
        /// </summary>
        [Input("testFailoverState")]
        public Input<string>? TestFailoverState { get; set; }

        /// <summary>
        /// The Test failover state description.
        /// </summary>
        [Input("testFailoverStateDescription")]
        public Input<string>? TestFailoverStateDescription { get; set; }

        public ReplicationProtectionClusterPropertiesArgs()
        {
        }
        public static new ReplicationProtectionClusterPropertiesArgs Empty => new ReplicationProtectionClusterPropertiesArgs();
    }
}
