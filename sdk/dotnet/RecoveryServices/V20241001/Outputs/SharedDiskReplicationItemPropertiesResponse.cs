// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20241001.Outputs
{

    /// <summary>
    /// Shared Disk Replication item custom data details.
    /// </summary>
    [OutputType]
    public sealed class SharedDiskReplicationItemPropertiesResponse
    {
        /// <summary>
        /// The Current active location of the PE.
        /// </summary>
        public readonly string? ActiveLocation;
        /// <summary>
        /// The allowed operations on the Replication protected item.
        /// </summary>
        public readonly ImmutableArray<string> AllowedOperations;
        /// <summary>
        /// The current scenario.
        /// </summary>
        public readonly Outputs.CurrentScenarioDetailsResponse? CurrentScenario;
        /// <summary>
        /// List of health errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.HealthErrorResponse> HealthErrors;
        /// <summary>
        /// The protection state of shared disk.
        /// </summary>
        public readonly string? ProtectionState;
        /// <summary>
        /// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
        /// </summary>
        public readonly string? ReplicationHealth;
        /// <summary>
        /// The Replication provider custom settings.
        /// </summary>
        public readonly Outputs.A2ASharedDiskReplicationDetailsResponse? SharedDiskProviderSpecificDetails;
        /// <summary>
        /// The tfo state of shared disk.
        /// </summary>
        public readonly string? TestFailoverState;

        [OutputConstructor]
        private SharedDiskReplicationItemPropertiesResponse(
            string? activeLocation,

            ImmutableArray<string> allowedOperations,

            Outputs.CurrentScenarioDetailsResponse? currentScenario,

            ImmutableArray<Outputs.HealthErrorResponse> healthErrors,

            string? protectionState,

            string? replicationHealth,

            Outputs.A2ASharedDiskReplicationDetailsResponse? sharedDiskProviderSpecificDetails,

            string? testFailoverState)
        {
            ActiveLocation = activeLocation;
            AllowedOperations = allowedOperations;
            CurrentScenario = currentScenario;
            HealthErrors = healthErrors;
            ProtectionState = protectionState;
            ReplicationHealth = replicationHealth;
            SharedDiskProviderSpecificDetails = sharedDiskProviderSpecificDetails;
            TestFailoverState = testFailoverState;
        }
    }
}
