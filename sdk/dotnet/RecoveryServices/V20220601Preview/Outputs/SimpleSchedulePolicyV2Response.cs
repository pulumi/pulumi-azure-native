// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20220601Preview.Outputs
{

    /// <summary>
    /// The V2 policy schedule for IaaS that supports hourly backups.
    /// </summary>
    [OutputType]
    public sealed class SimpleSchedulePolicyV2Response
    {
        /// <summary>
        /// Daily schedule of this policy
        /// </summary>
        public readonly Outputs.DailyScheduleResponse? DailySchedule;
        /// <summary>
        /// hourly schedule of this policy
        /// </summary>
        public readonly Outputs.HourlyScheduleResponse? HourlySchedule;
        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// Expected value is 'SimpleSchedulePolicyV2'.
        /// </summary>
        public readonly string SchedulePolicyType;
        /// <summary>
        /// Frequency of the schedule operation of this policy.
        /// </summary>
        public readonly string? ScheduleRunFrequency;
        /// <summary>
        /// Weekly schedule of this policy
        /// </summary>
        public readonly Outputs.WeeklyScheduleResponse? WeeklySchedule;

        [OutputConstructor]
        private SimpleSchedulePolicyV2Response(
            Outputs.DailyScheduleResponse? dailySchedule,

            Outputs.HourlyScheduleResponse? hourlySchedule,

            string schedulePolicyType,

            string? scheduleRunFrequency,

            Outputs.WeeklyScheduleResponse? weeklySchedule)
        {
            DailySchedule = dailySchedule;
            HourlySchedule = hourlySchedule;
            SchedulePolicyType = schedulePolicyType;
            ScheduleRunFrequency = scheduleRunFrequency;
            WeeklySchedule = weeklySchedule;
        }
    }
}
