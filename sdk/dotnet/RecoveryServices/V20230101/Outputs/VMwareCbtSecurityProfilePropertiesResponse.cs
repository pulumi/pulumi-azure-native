// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20230101.Outputs
{

    /// <summary>
    /// VMwareCbt security profile input.
    /// </summary>
    [OutputType]
    public sealed class VMwareCbtSecurityProfilePropertiesResponse
    {
        /// <summary>
        /// A value indicating whether confidential compute encryption to be enabled.
        /// </summary>
        public readonly string? IsTargetVmConfidentialEncryptionEnabled;
        /// <summary>
        /// A value indicating whether integrity monitoring to be enabled.
        /// </summary>
        public readonly string? IsTargetVmIntegrityMonitoringEnabled;
        /// <summary>
        /// A value indicating whether secure boot to be enabled.
        /// </summary>
        public readonly string? IsTargetVmSecureBootEnabled;
        /// <summary>
        /// A value indicating whether trusted platform module to be enabled.
        /// </summary>
        public readonly string? IsTargetVmTpmEnabled;
        /// <summary>
        /// The target VM security type.
        /// </summary>
        public readonly string? TargetVmSecurityType;

        [OutputConstructor]
        private VMwareCbtSecurityProfilePropertiesResponse(
            string? isTargetVmConfidentialEncryptionEnabled,

            string? isTargetVmIntegrityMonitoringEnabled,

            string? isTargetVmSecureBootEnabled,

            string? isTargetVmTpmEnabled,

            string? targetVmSecurityType)
        {
            IsTargetVmConfidentialEncryptionEnabled = isTargetVmConfidentialEncryptionEnabled;
            IsTargetVmIntegrityMonitoringEnabled = isTargetVmIntegrityMonitoringEnabled;
            IsTargetVmSecureBootEnabled = isTargetVmSecureBootEnabled;
            IsTargetVmTpmEnabled = isTargetVmTpmEnabled;
            TargetVmSecurityType = targetVmSecurityType;
        }
    }
}
