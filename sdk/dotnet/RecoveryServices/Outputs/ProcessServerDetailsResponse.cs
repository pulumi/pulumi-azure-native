// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.Outputs
{

    [OutputType]
    public sealed class ProcessServerDetailsResponse
    {
        /// <summary>
        /// The available memory.
        /// </summary>
        public readonly double AvailableMemoryInBytes;
        /// <summary>
        /// The available disk space.
        /// </summary>
        public readonly double AvailableSpaceInBytes;
        /// <summary>
        /// The free disk space percentage.
        /// </summary>
        public readonly double FreeSpacePercentage;
        /// <summary>
        /// The health of the process server.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// The health errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.HealthErrorResponse> HealthErrors;
        /// <summary>
        /// The historic health of the process server based on the health in last 24 hours.
        /// </summary>
        public readonly string HistoricHealth;
        /// <summary>
        /// The process server Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last heartbeat received from the process server.
        /// </summary>
        public readonly string LastHeartbeatUtc;
        /// <summary>
        /// The memory usage percentage.
        /// </summary>
        public readonly double MemoryUsagePercentage;
        /// <summary>
        /// The process server name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The processor usage percentage.
        /// </summary>
        public readonly double ProcessorUsagePercentage;
        /// <summary>
        /// The throughput in bytes.
        /// </summary>
        public readonly double ThroughputInBytes;
        /// <summary>
        /// The uploading pending data in bytes.
        /// </summary>
        public readonly double ThroughputUploadPendingDataInBytes;
        /// <summary>
        /// The total memory.
        /// </summary>
        public readonly double TotalMemoryInBytes;
        /// <summary>
        /// The total disk space.
        /// </summary>
        public readonly double TotalSpaceInBytes;
        /// <summary>
        /// The used memory.
        /// </summary>
        public readonly double UsedMemoryInBytes;
        /// <summary>
        /// The used disk space.
        /// </summary>
        public readonly double UsedSpaceInBytes;
        /// <summary>
        /// The process server version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private ProcessServerDetailsResponse(
            double availableMemoryInBytes,

            double availableSpaceInBytes,

            double freeSpacePercentage,

            string health,

            ImmutableArray<Outputs.HealthErrorResponse> healthErrors,

            string historicHealth,

            string id,

            string lastHeartbeatUtc,

            double memoryUsagePercentage,

            string name,

            double processorUsagePercentage,

            double throughputInBytes,

            double throughputUploadPendingDataInBytes,

            double totalMemoryInBytes,

            double totalSpaceInBytes,

            double usedMemoryInBytes,

            double usedSpaceInBytes,

            string version)
        {
            AvailableMemoryInBytes = availableMemoryInBytes;
            AvailableSpaceInBytes = availableSpaceInBytes;
            FreeSpacePercentage = freeSpacePercentage;
            Health = health;
            HealthErrors = healthErrors;
            HistoricHealth = historicHealth;
            Id = id;
            LastHeartbeatUtc = lastHeartbeatUtc;
            MemoryUsagePercentage = memoryUsagePercentage;
            Name = name;
            ProcessorUsagePercentage = processorUsagePercentage;
            ThroughputInBytes = throughputInBytes;
            ThroughputUploadPendingDataInBytes = throughputUploadPendingDataInBytes;
            TotalMemoryInBytes = totalMemoryInBytes;
            TotalSpaceInBytes = totalSpaceInBytes;
            UsedMemoryInBytes = usedMemoryInBytes;
            UsedSpaceInBytes = usedSpaceInBytes;
            Version = version;
        }
    }
}
