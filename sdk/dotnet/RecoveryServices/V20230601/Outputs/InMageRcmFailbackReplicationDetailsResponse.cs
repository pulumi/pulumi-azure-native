// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20230601.Outputs
{

    /// <summary>
    /// InMageRcmFailback provider specific details.
    /// </summary>
    [OutputType]
    public sealed class InMageRcmFailbackReplicationDetailsResponse
    {
        /// <summary>
        /// The ARM Id of the azure VM.
        /// </summary>
        public readonly string AzureVirtualMachineId;
        /// <summary>
        /// The discovered VM information.
        /// </summary>
        public readonly Outputs.InMageRcmFailbackDiscoveredProtectedVmDetailsResponse? DiscoveredVmDetails;
        /// <summary>
        /// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
        /// </summary>
        public readonly double InitialReplicationProcessedBytes;
        /// <summary>
        /// The initial replication progress health.
        /// </summary>
        public readonly string InitialReplicationProgressHealth;
        /// <summary>
        /// The initial replication progress percentage.
        /// </summary>
        public readonly int InitialReplicationProgressPercentage;
        /// <summary>
        /// The initial replication transferred bytes from source VM to target for all selected disks on source VM.
        /// </summary>
        public readonly double InitialReplicationTransferredBytes;
        /// <summary>
        /// Gets the Instance type.
        /// Expected value is 'InMageRcmFailback'.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The virtual machine internal identifier.
        /// </summary>
        public readonly string InternalIdentifier;
        /// <summary>
        /// A value indicating whether agent registration was successful after failover.
        /// </summary>
        public readonly bool IsAgentRegistrationSuccessfulAfterFailover;
        /// <summary>
        /// The last planned failover start time.
        /// </summary>
        public readonly string LastPlannedFailoverStartTime;
        /// <summary>
        /// The last planned failover status.
        /// </summary>
        public readonly string LastPlannedFailoverStatus;
        /// <summary>
        /// The policy friendly name used by the forward replication.
        /// </summary>
        public readonly string LastUsedPolicyFriendlyName;
        /// <summary>
        /// The policy Id used by the forward replication.
        /// </summary>
        public readonly string LastUsedPolicyId;
        /// <summary>
        /// The log storage account ARM Id.
        /// </summary>
        public readonly string LogStorageAccountId;
        /// <summary>
        /// The mobility agent information.
        /// </summary>
        public readonly Outputs.InMageRcmFailbackMobilityAgentDetailsResponse? MobilityAgentDetails;
        /// <summary>
        /// The multi VM group name.
        /// </summary>
        public readonly string MultiVmGroupName;
        /// <summary>
        /// The type of the OS on the VM.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The list of protected disks.
        /// </summary>
        public readonly ImmutableArray<Outputs.InMageRcmFailbackProtectedDiskDetailsResponse> ProtectedDisks;
        /// <summary>
        /// The reprotect agent Id.
        /// </summary>
        public readonly string ReprotectAgentId;
        /// <summary>
        /// The reprotect agent name.
        /// </summary>
        public readonly string ReprotectAgentName;
        /// <summary>
        /// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
        /// </summary>
        public readonly double ResyncProcessedBytes;
        /// <summary>
        /// The resync progress health.
        /// </summary>
        public readonly string ResyncProgressHealth;
        /// <summary>
        /// The resync progress percentage.
        /// </summary>
        public readonly int ResyncProgressPercentage;
        /// <summary>
        /// A value indicating whether resync is required.
        /// </summary>
        public readonly string ResyncRequired;
        /// <summary>
        /// The resync state.
        /// </summary>
        public readonly string ResyncState;
        /// <summary>
        /// The resync transferred bytes from source VM to target for all selected disks on source VM.
        /// </summary>
        public readonly double ResyncTransferredBytes;
        /// <summary>
        /// The target datastore name.
        /// </summary>
        public readonly string TargetDataStoreName;
        /// <summary>
        /// The target VM name.
        /// </summary>
        public readonly string TargetVmName;
        /// <summary>
        /// The target vCenter Id.
        /// </summary>
        public readonly string TargetvCenterId;
        /// <summary>
        /// The network details.
        /// </summary>
        public readonly ImmutableArray<Outputs.InMageRcmFailbackNicDetailsResponse> VmNics;

        [OutputConstructor]
        private InMageRcmFailbackReplicationDetailsResponse(
            string azureVirtualMachineId,

            Outputs.InMageRcmFailbackDiscoveredProtectedVmDetailsResponse? discoveredVmDetails,

            double initialReplicationProcessedBytes,

            string initialReplicationProgressHealth,

            int initialReplicationProgressPercentage,

            double initialReplicationTransferredBytes,

            string instanceType,

            string internalIdentifier,

            bool isAgentRegistrationSuccessfulAfterFailover,

            string lastPlannedFailoverStartTime,

            string lastPlannedFailoverStatus,

            string lastUsedPolicyFriendlyName,

            string lastUsedPolicyId,

            string logStorageAccountId,

            Outputs.InMageRcmFailbackMobilityAgentDetailsResponse? mobilityAgentDetails,

            string multiVmGroupName,

            string osType,

            ImmutableArray<Outputs.InMageRcmFailbackProtectedDiskDetailsResponse> protectedDisks,

            string reprotectAgentId,

            string reprotectAgentName,

            double resyncProcessedBytes,

            string resyncProgressHealth,

            int resyncProgressPercentage,

            string resyncRequired,

            string resyncState,

            double resyncTransferredBytes,

            string targetDataStoreName,

            string targetVmName,

            string targetvCenterId,

            ImmutableArray<Outputs.InMageRcmFailbackNicDetailsResponse> vmNics)
        {
            AzureVirtualMachineId = azureVirtualMachineId;
            DiscoveredVmDetails = discoveredVmDetails;
            InitialReplicationProcessedBytes = initialReplicationProcessedBytes;
            InitialReplicationProgressHealth = initialReplicationProgressHealth;
            InitialReplicationProgressPercentage = initialReplicationProgressPercentage;
            InitialReplicationTransferredBytes = initialReplicationTransferredBytes;
            InstanceType = instanceType;
            InternalIdentifier = internalIdentifier;
            IsAgentRegistrationSuccessfulAfterFailover = isAgentRegistrationSuccessfulAfterFailover;
            LastPlannedFailoverStartTime = lastPlannedFailoverStartTime;
            LastPlannedFailoverStatus = lastPlannedFailoverStatus;
            LastUsedPolicyFriendlyName = lastUsedPolicyFriendlyName;
            LastUsedPolicyId = lastUsedPolicyId;
            LogStorageAccountId = logStorageAccountId;
            MobilityAgentDetails = mobilityAgentDetails;
            MultiVmGroupName = multiVmGroupName;
            OsType = osType;
            ProtectedDisks = protectedDisks;
            ReprotectAgentId = reprotectAgentId;
            ReprotectAgentName = reprotectAgentName;
            ResyncProcessedBytes = resyncProcessedBytes;
            ResyncProgressHealth = resyncProgressHealth;
            ResyncProgressPercentage = resyncProgressPercentage;
            ResyncRequired = resyncRequired;
            ResyncState = resyncState;
            ResyncTransferredBytes = resyncTransferredBytes;
            TargetDataStoreName = targetDataStoreName;
            TargetVmName = targetVmName;
            TargetvCenterId = targetvCenterId;
            VmNics = vmNics;
        }
    }
}
