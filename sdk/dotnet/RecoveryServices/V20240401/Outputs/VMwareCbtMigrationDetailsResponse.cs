// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20240401.Outputs
{

    /// <summary>
    /// VMwareCbt provider specific settings.
    /// </summary>
    [OutputType]
    public sealed class VMwareCbtMigrationDetailsResponse
    {
        /// <summary>
        /// A value indicating the appliance monitoring details.
        /// </summary>
        public readonly Outputs.ApplianceMonitoringDetailsResponse ApplianceMonitoringDetails;
        /// <summary>
        /// The confidential VM key vault Id for ADE installation.
        /// </summary>
        public readonly string? ConfidentialVmKeyVaultId;
        /// <summary>
        /// The data mover run as account Id.
        /// </summary>
        public readonly string DataMoverRunAsAccountId;
        /// <summary>
        /// The delta sync progress percentage.
        /// </summary>
        public readonly int DeltaSyncProgressPercentage;
        /// <summary>
        /// The delta sync retry count.
        /// </summary>
        public readonly double DeltaSyncRetryCount;
        /// <summary>
        /// The firmware type.
        /// </summary>
        public readonly string FirmwareType;
        /// <summary>
        /// A value indicating the gateway operation details.
        /// </summary>
        public readonly Outputs.GatewayOperationDetailsResponse GatewayOperationDetails;
        /// <summary>
        /// The initial seeding progress percentage.
        /// </summary>
        public readonly int InitialSeedingProgressPercentage;
        /// <summary>
        /// The initial seeding retry count.
        /// </summary>
        public readonly double InitialSeedingRetryCount;
        /// <summary>
        /// Gets the instance type.
        /// Expected value is 'VMwareCbt'.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// A value indicating whether checksum resync cycle is in progress.
        /// </summary>
        public readonly string IsCheckSumResyncCycle;
        /// <summary>
        /// The last recovery point Id.
        /// </summary>
        public readonly string LastRecoveryPointId;
        /// <summary>
        /// The last recovery point received time.
        /// </summary>
        public readonly string LastRecoveryPointReceived;
        /// <summary>
        /// License Type of the VM to be used.
        /// </summary>
        public readonly string? LicenseType;
        /// <summary>
        /// The license type for Linux VM's.
        /// </summary>
        public readonly string? LinuxLicenseType;
        /// <summary>
        /// The migration progress percentage.
        /// </summary>
        public readonly int MigrationProgressPercentage;
        /// <summary>
        /// The recovery point Id to which the VM was migrated.
        /// </summary>
        public readonly string MigrationRecoveryPointId;
        /// <summary>
        /// A value indicating the SRS operation name.
        /// </summary>
        public readonly string OperationName;
        /// <summary>
        /// The name of the OS on the VM.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// The type of the OS on the VM.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// A value indicating whether auto resync is to be done.
        /// </summary>
        public readonly string? PerformAutoResync;
        /// <summary>
        /// The list of protected disks.
        /// </summary>
        public readonly ImmutableArray<Outputs.VMwareCbtProtectedDiskDetailsResponse> ProtectedDisks;
        /// <summary>
        /// The resume progress percentage.
        /// </summary>
        public readonly int ResumeProgressPercentage;
        /// <summary>
        /// The resume retry count.
        /// </summary>
        public readonly double ResumeRetryCount;
        /// <summary>
        /// The resync progress percentage.
        /// </summary>
        public readonly int ResyncProgressPercentage;
        /// <summary>
        /// A value indicating whether resync is required.
        /// </summary>
        public readonly string ResyncRequired;
        /// <summary>
        /// The resync retry count.
        /// </summary>
        public readonly double ResyncRetryCount;
        /// <summary>
        /// The resync state.
        /// </summary>
        public readonly string ResyncState;
        /// <summary>
        /// The tags for the seed disks.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? SeedDiskTags;
        /// <summary>
        /// The snapshot run as account Id.
        /// </summary>
        public readonly string SnapshotRunAsAccountId;
        /// <summary>
        /// The SQL Server license type.
        /// </summary>
        public readonly string? SqlServerLicenseType;
        /// <summary>
        /// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
        /// </summary>
        public readonly string StorageAccountId;
        /// <summary>
        /// A value indicating the inplace OS Upgrade version.
        /// </summary>
        public readonly ImmutableArray<string> SupportedOSVersions;
        /// <summary>
        /// The target availability set Id.
        /// </summary>
        public readonly string? TargetAvailabilitySetId;
        /// <summary>
        /// The target availability zone.
        /// </summary>
        public readonly string? TargetAvailabilityZone;
        /// <summary>
        /// The target boot diagnostics storage account ARM Id.
        /// </summary>
        public readonly string? TargetBootDiagnosticsStorageAccountId;
        /// <summary>
        /// The tags for the target disks.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TargetDiskTags;
        /// <summary>
        /// The target generation.
        /// </summary>
        public readonly string TargetGeneration;
        /// <summary>
        /// The target location.
        /// </summary>
        public readonly string TargetLocation;
        /// <summary>
        /// The target network Id.
        /// </summary>
        public readonly string? TargetNetworkId;
        /// <summary>
        /// The tags for the target NICs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TargetNicTags;
        /// <summary>
        /// The target proximity placement group Id.
        /// </summary>
        public readonly string? TargetProximityPlacementGroupId;
        /// <summary>
        /// The target resource group Id.
        /// </summary>
        public readonly string? TargetResourceGroupId;
        /// <summary>
        /// Target VM name.
        /// </summary>
        public readonly string? TargetVmName;
        /// <summary>
        /// The target VM security profile.
        /// </summary>
        public readonly Outputs.VMwareCbtSecurityProfilePropertiesResponse? TargetVmSecurityProfile;
        /// <summary>
        /// The target VM size.
        /// </summary>
        public readonly string? TargetVmSize;
        /// <summary>
        /// The target VM tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TargetVmTags;
        /// <summary>
        /// The test network Id.
        /// </summary>
        public readonly string? TestNetworkId;
        /// <summary>
        /// The network details.
        /// </summary>
        public readonly ImmutableArray<Outputs.VMwareCbtNicDetailsResponse> VmNics;
        /// <summary>
        /// The ARM Id of the VM discovered in VMware.
        /// </summary>
        public readonly string VmwareMachineId;

        [OutputConstructor]
        private VMwareCbtMigrationDetailsResponse(
            Outputs.ApplianceMonitoringDetailsResponse applianceMonitoringDetails,

            string? confidentialVmKeyVaultId,

            string dataMoverRunAsAccountId,

            int deltaSyncProgressPercentage,

            double deltaSyncRetryCount,

            string firmwareType,

            Outputs.GatewayOperationDetailsResponse gatewayOperationDetails,

            int initialSeedingProgressPercentage,

            double initialSeedingRetryCount,

            string instanceType,

            string isCheckSumResyncCycle,

            string lastRecoveryPointId,

            string lastRecoveryPointReceived,

            string? licenseType,

            string? linuxLicenseType,

            int migrationProgressPercentage,

            string migrationRecoveryPointId,

            string operationName,

            string osName,

            string osType,

            string? performAutoResync,

            ImmutableArray<Outputs.VMwareCbtProtectedDiskDetailsResponse> protectedDisks,

            int resumeProgressPercentage,

            double resumeRetryCount,

            int resyncProgressPercentage,

            string resyncRequired,

            double resyncRetryCount,

            string resyncState,

            ImmutableDictionary<string, string>? seedDiskTags,

            string snapshotRunAsAccountId,

            string? sqlServerLicenseType,

            string storageAccountId,

            ImmutableArray<string> supportedOSVersions,

            string? targetAvailabilitySetId,

            string? targetAvailabilityZone,

            string? targetBootDiagnosticsStorageAccountId,

            ImmutableDictionary<string, string>? targetDiskTags,

            string targetGeneration,

            string targetLocation,

            string? targetNetworkId,

            ImmutableDictionary<string, string>? targetNicTags,

            string? targetProximityPlacementGroupId,

            string? targetResourceGroupId,

            string? targetVmName,

            Outputs.VMwareCbtSecurityProfilePropertiesResponse? targetVmSecurityProfile,

            string? targetVmSize,

            ImmutableDictionary<string, string>? targetVmTags,

            string? testNetworkId,

            ImmutableArray<Outputs.VMwareCbtNicDetailsResponse> vmNics,

            string vmwareMachineId)
        {
            ApplianceMonitoringDetails = applianceMonitoringDetails;
            ConfidentialVmKeyVaultId = confidentialVmKeyVaultId;
            DataMoverRunAsAccountId = dataMoverRunAsAccountId;
            DeltaSyncProgressPercentage = deltaSyncProgressPercentage;
            DeltaSyncRetryCount = deltaSyncRetryCount;
            FirmwareType = firmwareType;
            GatewayOperationDetails = gatewayOperationDetails;
            InitialSeedingProgressPercentage = initialSeedingProgressPercentage;
            InitialSeedingRetryCount = initialSeedingRetryCount;
            InstanceType = instanceType;
            IsCheckSumResyncCycle = isCheckSumResyncCycle;
            LastRecoveryPointId = lastRecoveryPointId;
            LastRecoveryPointReceived = lastRecoveryPointReceived;
            LicenseType = licenseType;
            LinuxLicenseType = linuxLicenseType;
            MigrationProgressPercentage = migrationProgressPercentage;
            MigrationRecoveryPointId = migrationRecoveryPointId;
            OperationName = operationName;
            OsName = osName;
            OsType = osType;
            PerformAutoResync = performAutoResync;
            ProtectedDisks = protectedDisks;
            ResumeProgressPercentage = resumeProgressPercentage;
            ResumeRetryCount = resumeRetryCount;
            ResyncProgressPercentage = resyncProgressPercentage;
            ResyncRequired = resyncRequired;
            ResyncRetryCount = resyncRetryCount;
            ResyncState = resyncState;
            SeedDiskTags = seedDiskTags;
            SnapshotRunAsAccountId = snapshotRunAsAccountId;
            SqlServerLicenseType = sqlServerLicenseType;
            StorageAccountId = storageAccountId;
            SupportedOSVersions = supportedOSVersions;
            TargetAvailabilitySetId = targetAvailabilitySetId;
            TargetAvailabilityZone = targetAvailabilityZone;
            TargetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
            TargetDiskTags = targetDiskTags;
            TargetGeneration = targetGeneration;
            TargetLocation = targetLocation;
            TargetNetworkId = targetNetworkId;
            TargetNicTags = targetNicTags;
            TargetProximityPlacementGroupId = targetProximityPlacementGroupId;
            TargetResourceGroupId = targetResourceGroupId;
            TargetVmName = targetVmName;
            TargetVmSecurityProfile = targetVmSecurityProfile;
            TargetVmSize = targetVmSize;
            TargetVmTags = targetVmTags;
            TestNetworkId = testNetworkId;
            VmNics = vmNics;
            VmwareMachineId = vmwareMachineId;
        }
    }
}
