// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20240401.Outputs
{

    /// <summary>
    /// Properties of the vault.
    /// </summary>
    [OutputType]
    public sealed class VaultPropertiesResponse
    {
        /// <summary>
        /// Backup storage version
        /// </summary>
        public readonly string BackupStorageVersion;
        /// <summary>
        /// Security levels of Recovery Services Vault for business continuity and disaster recovery
        /// </summary>
        public readonly string BcdrSecurityLevel;
        /// <summary>
        /// Customer Managed Key details of the resource.
        /// </summary>
        public readonly Outputs.VaultPropertiesResponseEncryption? Encryption;
        /// <summary>
        /// Monitoring Settings of the vault
        /// </summary>
        public readonly Outputs.MonitoringSettingsResponse? MonitoringSettings;
        /// <summary>
        /// The details of the latest move operation performed on the Azure Resource
        /// </summary>
        public readonly Outputs.VaultPropertiesResponseMoveDetails? MoveDetails;
        /// <summary>
        /// The State of the Resource after the move operation
        /// </summary>
        public readonly string MoveState;
        /// <summary>
        /// List of private endpoint connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionVaultPropertiesResponse> PrivateEndpointConnections;
        /// <summary>
        /// Private endpoint state for backup.
        /// </summary>
        public readonly string PrivateEndpointStateForBackup;
        /// <summary>
        /// Private endpoint state for site recovery.
        /// </summary>
        public readonly string PrivateEndpointStateForSiteRecovery;
        /// <summary>
        /// Provisioning State.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// property to enable or disable resource provider inbound network traffic from public clients
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// The redundancy Settings of a Vault
        /// </summary>
        public readonly Outputs.VaultPropertiesResponseRedundancySettings? RedundancySettings;
        /// <summary>
        /// ResourceGuardOperationRequests on which LAC check will be performed
        /// </summary>
        public readonly ImmutableArray<string> ResourceGuardOperationRequests;
        /// <summary>
        /// Restore Settings of the vault
        /// </summary>
        public readonly Outputs.RestoreSettingsResponse? RestoreSettings;
        /// <summary>
        /// Secure Score of Recovery Services Vault
        /// </summary>
        public readonly string SecureScore;
        /// <summary>
        /// Security Settings of the vault
        /// </summary>
        public readonly Outputs.SecuritySettingsResponse? SecuritySettings;
        /// <summary>
        /// Details for upgrading vault.
        /// </summary>
        public readonly Outputs.UpgradeDetailsResponse? UpgradeDetails;

        [OutputConstructor]
        private VaultPropertiesResponse(
            string backupStorageVersion,

            string bcdrSecurityLevel,

            Outputs.VaultPropertiesResponseEncryption? encryption,

            Outputs.MonitoringSettingsResponse? monitoringSettings,

            Outputs.VaultPropertiesResponseMoveDetails? moveDetails,

            string moveState,

            ImmutableArray<Outputs.PrivateEndpointConnectionVaultPropertiesResponse> privateEndpointConnections,

            string privateEndpointStateForBackup,

            string privateEndpointStateForSiteRecovery,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.VaultPropertiesResponseRedundancySettings? redundancySettings,

            ImmutableArray<string> resourceGuardOperationRequests,

            Outputs.RestoreSettingsResponse? restoreSettings,

            string secureScore,

            Outputs.SecuritySettingsResponse? securitySettings,

            Outputs.UpgradeDetailsResponse? upgradeDetails)
        {
            BackupStorageVersion = backupStorageVersion;
            BcdrSecurityLevel = bcdrSecurityLevel;
            Encryption = encryption;
            MonitoringSettings = monitoringSettings;
            MoveDetails = moveDetails;
            MoveState = moveState;
            PrivateEndpointConnections = privateEndpointConnections;
            PrivateEndpointStateForBackup = privateEndpointStateForBackup;
            PrivateEndpointStateForSiteRecovery = privateEndpointStateForSiteRecovery;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            RedundancySettings = redundancySettings;
            ResourceGuardOperationRequests = resourceGuardOperationRequests;
            RestoreSettings = restoreSettings;
            SecureScore = secureScore;
            SecuritySettings = securitySettings;
            UpgradeDetails = upgradeDetails;
        }
    }
}
