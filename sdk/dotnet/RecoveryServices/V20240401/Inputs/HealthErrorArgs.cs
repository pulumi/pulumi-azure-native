// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20240401.Inputs
{

    /// <summary>
    /// Health Error.
    /// </summary>
    public sealed class HealthErrorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Error creation time (UTC).
        /// </summary>
        [Input("creationTimeUtc")]
        public Input<string>? CreationTimeUtc { get; set; }

        /// <summary>
        /// Value indicating whether the health error is customer resolvable.
        /// </summary>
        [Input("customerResolvability")]
        public InputUnion<string, Pulumi.AzureNative.RecoveryServices.V20240401.HealthErrorCustomerResolvability>? CustomerResolvability { get; set; }

        /// <summary>
        /// ID of the entity.
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// Category of error.
        /// </summary>
        [Input("errorCategory")]
        public Input<string>? ErrorCategory { get; set; }

        /// <summary>
        /// Error code.
        /// </summary>
        [Input("errorCode")]
        public Input<string>? ErrorCode { get; set; }

        /// <summary>
        /// The health error unique id.
        /// </summary>
        [Input("errorId")]
        public Input<string>? ErrorId { get; set; }

        /// <summary>
        /// Level of error.
        /// </summary>
        [Input("errorLevel")]
        public Input<string>? ErrorLevel { get; set; }

        /// <summary>
        /// Error message.
        /// </summary>
        [Input("errorMessage")]
        public Input<string>? ErrorMessage { get; set; }

        /// <summary>
        /// Source of error.
        /// </summary>
        [Input("errorSource")]
        public Input<string>? ErrorSource { get; set; }

        /// <summary>
        /// Type of error.
        /// </summary>
        [Input("errorType")]
        public Input<string>? ErrorType { get; set; }

        [Input("innerHealthErrors")]
        private InputList<Inputs.InnerHealthErrorArgs>? _innerHealthErrors;

        /// <summary>
        /// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&amp;gt; InnerException.
        /// </summary>
        public InputList<Inputs.InnerHealthErrorArgs> InnerHealthErrors
        {
            get => _innerHealthErrors ?? (_innerHealthErrors = new InputList<Inputs.InnerHealthErrorArgs>());
            set => _innerHealthErrors = value;
        }

        /// <summary>
        /// Possible causes of error.
        /// </summary>
        [Input("possibleCauses")]
        public Input<string>? PossibleCauses { get; set; }

        /// <summary>
        /// Recommended action to resolve error.
        /// </summary>
        [Input("recommendedAction")]
        public Input<string>? RecommendedAction { get; set; }

        /// <summary>
        /// DRA error message.
        /// </summary>
        [Input("recoveryProviderErrorMessage")]
        public Input<string>? RecoveryProviderErrorMessage { get; set; }

        /// <summary>
        /// Summary message of the entity.
        /// </summary>
        [Input("summaryMessage")]
        public Input<string>? SummaryMessage { get; set; }

        public HealthErrorArgs()
        {
        }
        public static new HealthErrorArgs Empty => new HealthErrorArgs();
    }
}
