// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices
{
    public static class GetReplicationvCenter
    {
        /// <summary>
        /// Gets the details of a registered vCenter server(Add vCenter server).
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2021-03-01, 2023-06-01, 2023-08-01, 2024-01-01, 2024-02-01, 2024-04-01.
        /// </summary>
        public static Task<GetReplicationvCenterResult> InvokeAsync(GetReplicationvCenterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationvCenterResult>("azure-native:recoveryservices:getReplicationvCenter", args ?? new GetReplicationvCenterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of a registered vCenter server(Add vCenter server).
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2021-03-01, 2023-06-01, 2023-08-01, 2024-01-01, 2024-02-01, 2024-04-01.
        /// </summary>
        public static Output<GetReplicationvCenterResult> Invoke(GetReplicationvCenterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationvCenterResult>("azure-native:recoveryservices:getReplicationvCenter", args ?? new GetReplicationvCenterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationvCenterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fabric name.
        /// </summary>
        [Input("fabricName", required: true)]
        public string FabricName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the recovery services vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the recovery services vault.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// vcenter name.
        /// </summary>
        [Input("vcenterName", required: true)]
        public string VcenterName { get; set; } = null!;

        public GetReplicationvCenterArgs()
        {
        }
        public static new GetReplicationvCenterArgs Empty => new GetReplicationvCenterArgs();
    }

    public sealed class GetReplicationvCenterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fabric name.
        /// </summary>
        [Input("fabricName", required: true)]
        public Input<string> FabricName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the recovery services vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the recovery services vault.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// vcenter name.
        /// </summary>
        [Input("vcenterName", required: true)]
        public Input<string> VcenterName { get; set; } = null!;

        public GetReplicationvCenterInvokeArgs()
        {
        }
        public static new GetReplicationvCenterInvokeArgs Empty => new GetReplicationvCenterInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationvCenterResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource Location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// VCenter related data.
        /// </summary>
        public readonly Outputs.VCenterPropertiesResponse Properties;
        /// <summary>
        /// Resource Type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetReplicationvCenterResult(
            string id,

            string? location,

            string name,

            Outputs.VCenterPropertiesResponse properties,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
