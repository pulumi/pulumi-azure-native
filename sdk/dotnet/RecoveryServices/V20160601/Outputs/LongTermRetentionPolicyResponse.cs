// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.RecoveryServices.V20160601.Outputs
{

    [OutputType]
    public sealed class LongTermRetentionPolicyResponse
    {
        /// <summary>
        /// Daily retention schedule of the backup policy.
        /// </summary>
        public readonly Outputs.DailyRetentionScheduleResponse? DailySchedule;
        /// <summary>
        /// Monthly retention schedule of the backup policy.
        /// </summary>
        public readonly Outputs.MonthlyRetentionScheduleResponse? MonthlySchedule;
        /// <summary>
        /// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        public readonly string? RetentionPolicyType;
        /// <summary>
        /// Weekly retention schedule of the backup policy.
        /// </summary>
        public readonly Outputs.WeeklyRetentionScheduleResponse? WeeklySchedule;
        /// <summary>
        /// Yearly retention schedule of the backup policy.
        /// </summary>
        public readonly Outputs.YearlyRetentionScheduleResponse? YearlySchedule;

        [OutputConstructor]
        private LongTermRetentionPolicyResponse(
            Outputs.DailyRetentionScheduleResponse? dailySchedule,

            Outputs.MonthlyRetentionScheduleResponse? monthlySchedule,

            string? retentionPolicyType,

            Outputs.WeeklyRetentionScheduleResponse? weeklySchedule,

            Outputs.YearlyRetentionScheduleResponse? yearlySchedule)
        {
            DailySchedule = dailySchedule;
            MonthlySchedule = monthlySchedule;
            RetentionPolicyType = retentionPolicyType;
            WeeklySchedule = weeklySchedule;
            YearlySchedule = yearlySchedule;
        }
    }
}
