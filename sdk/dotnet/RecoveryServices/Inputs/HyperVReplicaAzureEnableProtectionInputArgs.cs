// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.Inputs
{

    /// <summary>
    /// HyperVReplicaAzure specific enable protection input.
    /// </summary>
    public sealed class HyperVReplicaAzureEnableProtectionInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DiskEncryptionSet ARM Id.
        /// </summary>
        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        /// <summary>
        /// The DiskType.
        /// </summary>
        [Input("diskType")]
        public InputUnion<string, Pulumi.AzureNative.RecoveryServices.DiskAccountType>? DiskType { get; set; }

        [Input("disksToInclude")]
        private InputList<string>? _disksToInclude;

        /// <summary>
        /// The list of VHD Ids of disks to be protected.
        /// </summary>
        public InputList<string> DisksToInclude
        {
            get => _disksToInclude ?? (_disksToInclude = new InputList<string>());
            set => _disksToInclude = value;
        }

        [Input("disksToIncludeForManagedDisks")]
        private InputList<Inputs.HyperVReplicaAzureDiskInputDetailsArgs>? _disksToIncludeForManagedDisks;

        /// <summary>
        /// The disks to include list for managed disks.
        /// </summary>
        public InputList<Inputs.HyperVReplicaAzureDiskInputDetailsArgs> DisksToIncludeForManagedDisks
        {
            get => _disksToIncludeForManagedDisks ?? (_disksToIncludeForManagedDisks = new InputList<Inputs.HyperVReplicaAzureDiskInputDetailsArgs>());
            set => _disksToIncludeForManagedDisks = value;
        }

        /// <summary>
        /// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
        /// </summary>
        [Input("enableRdpOnTargetOption")]
        public Input<string>? EnableRdpOnTargetOption { get; set; }

        /// <summary>
        /// The Hyper-V host VM Id.
        /// </summary>
        [Input("hvHostVmId")]
        public Input<string>? HvHostVmId { get; set; }

        /// <summary>
        /// The class type.
        /// Expected value is 'HyperVReplicaAzure'.
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// License type.
        /// </summary>
        [Input("licenseType")]
        public InputUnion<string, Pulumi.AzureNative.RecoveryServices.LicenseType>? LicenseType { get; set; }

        /// <summary>
        /// The storage account to be used for logging during replication.
        /// </summary>
        [Input("logStorageAccountId")]
        public Input<string>? LogStorageAccountId { get; set; }

        /// <summary>
        /// The OS type associated with VM.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        [Input("seedManagedDiskTags")]
        private InputMap<string>? _seedManagedDiskTags;

        /// <summary>
        /// The tags for the seed managed disks.
        /// </summary>
        public InputMap<string> SeedManagedDiskTags
        {
            get => _seedManagedDiskTags ?? (_seedManagedDiskTags = new InputMap<string>());
            set => _seedManagedDiskTags = value;
        }

        /// <summary>
        /// The SQL Server license type.
        /// </summary>
        [Input("sqlServerLicenseType")]
        public InputUnion<string, Pulumi.AzureNative.RecoveryServices.SqlServerLicenseType>? SqlServerLicenseType { get; set; }

        /// <summary>
        /// The target availability set ARM Id for resource manager deployment.
        /// </summary>
        [Input("targetAvailabilitySetId")]
        public Input<string>? TargetAvailabilitySetId { get; set; }

        /// <summary>
        /// The target availability zone.
        /// </summary>
        [Input("targetAvailabilityZone")]
        public Input<string>? TargetAvailabilityZone { get; set; }

        /// <summary>
        /// The selected target Azure network Id.
        /// </summary>
        [Input("targetAzureNetworkId")]
        public Input<string>? TargetAzureNetworkId { get; set; }

        /// <summary>
        /// The selected target Azure subnet Id.
        /// </summary>
        [Input("targetAzureSubnetId")]
        public Input<string>? TargetAzureSubnetId { get; set; }

        /// <summary>
        /// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
        /// </summary>
        [Input("targetAzureV1ResourceGroupId")]
        public Input<string>? TargetAzureV1ResourceGroupId { get; set; }

        /// <summary>
        /// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
        /// </summary>
        [Input("targetAzureV2ResourceGroupId")]
        public Input<string>? TargetAzureV2ResourceGroupId { get; set; }

        /// <summary>
        /// The target azure VM Name.
        /// </summary>
        [Input("targetAzureVmName")]
        public Input<string>? TargetAzureVmName { get; set; }

        [Input("targetManagedDiskTags")]
        private InputMap<string>? _targetManagedDiskTags;

        /// <summary>
        /// The tags for the target managed disks.
        /// </summary>
        public InputMap<string> TargetManagedDiskTags
        {
            get => _targetManagedDiskTags ?? (_targetManagedDiskTags = new InputMap<string>());
            set => _targetManagedDiskTags = value;
        }

        [Input("targetNicTags")]
        private InputMap<string>? _targetNicTags;

        /// <summary>
        /// The tags for the target NICs.
        /// </summary>
        public InputMap<string> TargetNicTags
        {
            get => _targetNicTags ?? (_targetNicTags = new InputMap<string>());
            set => _targetNicTags = value;
        }

        /// <summary>
        /// The proximity placement group ARM Id.
        /// </summary>
        [Input("targetProximityPlacementGroupId")]
        public Input<string>? TargetProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The storage account Id.
        /// </summary>
        [Input("targetStorageAccountId")]
        public Input<string>? TargetStorageAccountId { get; set; }

        /// <summary>
        /// The target VM size.
        /// </summary>
        [Input("targetVmSize")]
        public Input<string>? TargetVmSize { get; set; }

        [Input("targetVmTags")]
        private InputMap<string>? _targetVmTags;

        /// <summary>
        /// The target VM tags.
        /// </summary>
        public InputMap<string> TargetVmTags
        {
            get => _targetVmTags ?? (_targetVmTags = new InputMap<string>());
            set => _targetVmTags = value;
        }

        /// <summary>
        /// A value indicating whether managed disks should be used during failover.
        /// </summary>
        [Input("useManagedDisks")]
        public Input<string>? UseManagedDisks { get; set; }

        /// <summary>
        /// A value indicating whether managed disks should be used during replication.
        /// </summary>
        [Input("useManagedDisksForReplication")]
        public Input<string>? UseManagedDisksForReplication { get; set; }

        /// <summary>
        /// The OS disk VHD id associated with VM.
        /// </summary>
        [Input("vhdId")]
        public Input<string>? VhdId { get; set; }

        /// <summary>
        /// The VM Name.
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        public HyperVReplicaAzureEnableProtectionInputArgs()
        {
        }
        public static new HyperVReplicaAzureEnableProtectionInputArgs Empty => new HyperVReplicaAzureEnableProtectionInputArgs();
    }
}
