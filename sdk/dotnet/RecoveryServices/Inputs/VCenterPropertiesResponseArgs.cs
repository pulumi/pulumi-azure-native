// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.RecoveryServices.Inputs
{

    /// <summary>
    /// vCenter properties.
    /// </summary>
    public sealed class VCenterPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The VCenter discovery status.
        /// </summary>
        [Input("discoveryStatus")]
        public Input<string>? DiscoveryStatus { get; set; }

        /// <summary>
        /// The ARM resource name of the fabric containing this VCenter.
        /// </summary>
        [Input("fabricArmResourceName")]
        public Input<string>? FabricArmResourceName { get; set; }

        /// <summary>
        /// Friendly name of the vCenter.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        [Input("healthErrors")]
        private InputList<Inputs.HealthErrorResponseArgs>? _healthErrors;

        /// <summary>
        /// The health errors for this VCenter.
        /// </summary>
        public InputList<Inputs.HealthErrorResponseArgs> HealthErrors
        {
            get => _healthErrors ?? (_healthErrors = new InputList<Inputs.HealthErrorResponseArgs>());
            set => _healthErrors = value;
        }

        /// <summary>
        /// The infrastructure Id of vCenter.
        /// </summary>
        [Input("infrastructureId")]
        public Input<string>? InfrastructureId { get; set; }

        /// <summary>
        /// VCenter internal ID.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// The IP address of the vCenter.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The time when the last heartbeat was received by vCenter.
        /// </summary>
        [Input("lastHeartbeat")]
        public Input<string>? LastHeartbeat { get; set; }

        /// <summary>
        /// The port number for discovery.
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// The process server Id.
        /// </summary>
        [Input("processServerId")]
        public Input<string>? ProcessServerId { get; set; }

        /// <summary>
        /// The account Id which has privileges to discover the vCenter.
        /// </summary>
        [Input("runAsAccountId")]
        public Input<string>? RunAsAccountId { get; set; }

        public VCenterPropertiesResponseArgs()
        {
        }
    }
}
