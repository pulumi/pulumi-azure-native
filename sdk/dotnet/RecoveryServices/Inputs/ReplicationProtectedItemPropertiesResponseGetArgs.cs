// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.RecoveryServices.Inputs
{

    /// <summary>
    /// Replication protected item custom data details.
    /// </summary>
    public sealed class ReplicationProtectedItemPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Current active location of the PE.
        /// </summary>
        [Input("activeLocation")]
        public Input<string>? ActiveLocation { get; set; }

        [Input("allowedOperations")]
        private InputList<string>? _allowedOperations;

        /// <summary>
        /// The allowed operations on the Replication protected item.
        /// </summary>
        public InputList<string> AllowedOperations
        {
            get => _allowedOperations ?? (_allowedOperations = new InputList<string>());
            set => _allowedOperations = value;
        }

        /// <summary>
        /// The current scenario.
        /// </summary>
        [Input("currentScenario")]
        public Input<Inputs.CurrentScenarioDetailsResponseGetArgs>? CurrentScenario { get; set; }

        /// <summary>
        /// The consolidated failover health for the VM.
        /// </summary>
        [Input("failoverHealth")]
        public Input<string>? FailoverHealth { get; set; }

        /// <summary>
        /// The recovery point ARM Id to which the Vm was failed over.
        /// </summary>
        [Input("failoverRecoveryPointId")]
        public Input<string>? FailoverRecoveryPointId { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        [Input("healthErrors")]
        private InputList<Inputs.HealthErrorResponseGetArgs>? _healthErrors;

        /// <summary>
        /// List of health errors.
        /// </summary>
        public InputList<Inputs.HealthErrorResponseGetArgs> HealthErrors
        {
            get => _healthErrors ?? (_healthErrors = new InputList<Inputs.HealthErrorResponseGetArgs>());
            set => _healthErrors = value;
        }

        /// <summary>
        /// The Last successful failover time.
        /// </summary>
        [Input("lastSuccessfulFailoverTime")]
        public Input<string>? LastSuccessfulFailoverTime { get; set; }

        /// <summary>
        /// The Last successful test failover time.
        /// </summary>
        [Input("lastSuccessfulTestFailoverTime")]
        public Input<string>? LastSuccessfulTestFailoverTime { get; set; }

        /// <summary>
        /// The name of Policy governing this PE.
        /// </summary>
        [Input("policyFriendlyName")]
        public Input<string>? PolicyFriendlyName { get; set; }

        /// <summary>
        /// The ID of Policy governing this PE.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The friendly name of the primary fabric.
        /// </summary>
        [Input("primaryFabricFriendlyName")]
        public Input<string>? PrimaryFabricFriendlyName { get; set; }

        /// <summary>
        /// The fabric provider of the primary fabric.
        /// </summary>
        [Input("primaryFabricProvider")]
        public Input<string>? PrimaryFabricProvider { get; set; }

        /// <summary>
        /// The name of primary protection container friendly name.
        /// </summary>
        [Input("primaryProtectionContainerFriendlyName")]
        public Input<string>? PrimaryProtectionContainerFriendlyName { get; set; }

        /// <summary>
        /// The protected item ARM Id.
        /// </summary>
        [Input("protectableItemId")]
        public Input<string>? ProtectableItemId { get; set; }

        /// <summary>
        /// The type of protected item type.
        /// </summary>
        [Input("protectedItemType")]
        public Input<string>? ProtectedItemType { get; set; }

        /// <summary>
        /// The protection status.
        /// </summary>
        [Input("protectionState")]
        public Input<string>? ProtectionState { get; set; }

        /// <summary>
        /// The protection state description.
        /// </summary>
        [Input("protectionStateDescription")]
        public Input<string>? ProtectionStateDescription { get; set; }

        /// <summary>
        /// The Replication provider custom settings.
        /// </summary>
        [Input("providerSpecificDetails")]
        public Input<Inputs.ReplicationProviderSpecificSettingsResponseGetArgs>? ProviderSpecificDetails { get; set; }

        /// <summary>
        /// The recovery container Id.
        /// </summary>
        [Input("recoveryContainerId")]
        public Input<string>? RecoveryContainerId { get; set; }

        /// <summary>
        /// The friendly name of recovery fabric.
        /// </summary>
        [Input("recoveryFabricFriendlyName")]
        public Input<string>? RecoveryFabricFriendlyName { get; set; }

        /// <summary>
        /// The Arm Id of recovery fabric.
        /// </summary>
        [Input("recoveryFabricId")]
        public Input<string>? RecoveryFabricId { get; set; }

        /// <summary>
        /// The name of recovery container friendly name.
        /// </summary>
        [Input("recoveryProtectionContainerFriendlyName")]
        public Input<string>? RecoveryProtectionContainerFriendlyName { get; set; }

        /// <summary>
        /// The recovery provider ARM Id.
        /// </summary>
        [Input("recoveryServicesProviderId")]
        public Input<string>? RecoveryServicesProviderId { get; set; }

        /// <summary>
        /// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
        /// </summary>
        [Input("replicationHealth")]
        public Input<string>? ReplicationHealth { get; set; }

        /// <summary>
        /// The Test failover state.
        /// </summary>
        [Input("testFailoverState")]
        public Input<string>? TestFailoverState { get; set; }

        /// <summary>
        /// The Test failover state description.
        /// </summary>
        [Input("testFailoverStateDescription")]
        public Input<string>? TestFailoverStateDescription { get; set; }

        public ReplicationProtectedItemPropertiesResponseGetArgs()
        {
        }
    }
}
