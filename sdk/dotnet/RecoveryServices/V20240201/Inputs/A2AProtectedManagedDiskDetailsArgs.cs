// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20240201.Inputs
{

    /// <summary>
    /// A2A protected managed disk details.
    /// </summary>
    public sealed class A2AProtectedManagedDiskDetailsArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedDiskLevelOperation")]
        private InputList<string>? _allowedDiskLevelOperation;

        /// <summary>
        /// The disk level operations list.
        /// </summary>
        public InputList<string> AllowedDiskLevelOperation
        {
            get => _allowedDiskLevelOperation ?? (_allowedDiskLevelOperation = new InputList<string>());
            set => _allowedDiskLevelOperation = value;
        }

        /// <summary>
        /// The data pending at source virtual machine in MB.
        /// </summary>
        [Input("dataPendingAtSourceAgentInMB")]
        public Input<double>? DataPendingAtSourceAgentInMB { get; set; }

        /// <summary>
        /// The data pending for replication in MB at staging account.
        /// </summary>
        [Input("dataPendingInStagingStorageAccountInMB")]
        public Input<double>? DataPendingInStagingStorageAccountInMB { get; set; }

        /// <summary>
        /// The KeyVault resource id for secret (BEK).
        /// </summary>
        [Input("dekKeyVaultArmId")]
        public Input<string>? DekKeyVaultArmId { get; set; }

        /// <summary>
        /// The disk capacity in bytes.
        /// </summary>
        [Input("diskCapacityInBytes")]
        public Input<double>? DiskCapacityInBytes { get; set; }

        /// <summary>
        /// The managed disk Arm id.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// The disk name.
        /// </summary>
        [Input("diskName")]
        public Input<string>? DiskName { get; set; }

        /// <summary>
        /// The disk state.
        /// </summary>
        [Input("diskState")]
        public Input<string>? DiskState { get; set; }

        /// <summary>
        /// The type of disk.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        /// <summary>
        /// The failover name for the managed disk.
        /// </summary>
        [Input("failoverDiskName")]
        public Input<string>? FailoverDiskName { get; set; }

        /// <summary>
        /// A value indicating whether vm has encrypted os disk or not.
        /// </summary>
        [Input("isDiskEncrypted")]
        public Input<bool>? IsDiskEncrypted { get; set; }

        /// <summary>
        /// A value indicating whether disk key got encrypted or not.
        /// </summary>
        [Input("isDiskKeyEncrypted")]
        public Input<bool>? IsDiskKeyEncrypted { get; set; }

        /// <summary>
        /// The KeyVault resource id for key (KEK).
        /// </summary>
        [Input("kekKeyVaultArmId")]
        public Input<string>? KekKeyVaultArmId { get; set; }

        /// <summary>
        /// The key URL / identifier (KEK).
        /// </summary>
        [Input("keyIdentifier")]
        public Input<string>? KeyIdentifier { get; set; }

        /// <summary>
        /// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
        /// </summary>
        [Input("monitoringJobType")]
        public Input<string>? MonitoringJobType { get; set; }

        /// <summary>
        /// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
        /// </summary>
        [Input("monitoringPercentageCompletion")]
        public Input<int>? MonitoringPercentageCompletion { get; set; }

        /// <summary>
        /// The primary disk encryption set Id.
        /// </summary>
        [Input("primaryDiskEncryptionSetId")]
        public Input<string>? PrimaryDiskEncryptionSetId { get; set; }

        /// <summary>
        /// The primary staging storage account.
        /// </summary>
        [Input("primaryStagingAzureStorageAccountId")]
        public Input<string>? PrimaryStagingAzureStorageAccountId { get; set; }

        /// <summary>
        /// The recovery disk encryption set Id.
        /// </summary>
        [Input("recoveryDiskEncryptionSetId")]
        public Input<string>? RecoveryDiskEncryptionSetId { get; set; }

        /// <summary>
        /// Recovery original target disk Arm Id.
        /// </summary>
        [Input("recoveryOrignalTargetDiskId")]
        public Input<string>? RecoveryOrignalTargetDiskId { get; set; }

        /// <summary>
        /// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
        /// </summary>
        [Input("recoveryReplicaDiskAccountType")]
        public Input<string>? RecoveryReplicaDiskAccountType { get; set; }

        /// <summary>
        /// Recovery replica disk Arm Id.
        /// </summary>
        [Input("recoveryReplicaDiskId")]
        public Input<string>? RecoveryReplicaDiskId { get; set; }

        /// <summary>
        /// The recovery disk resource group Arm Id.
        /// </summary>
        [Input("recoveryResourceGroupId")]
        public Input<string>? RecoveryResourceGroupId { get; set; }

        /// <summary>
        /// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
        /// </summary>
        [Input("recoveryTargetDiskAccountType")]
        public Input<string>? RecoveryTargetDiskAccountType { get; set; }

        /// <summary>
        /// Recovery target disk Arm Id.
        /// </summary>
        [Input("recoveryTargetDiskId")]
        public Input<string>? RecoveryTargetDiskId { get; set; }

        /// <summary>
        /// A value indicating whether resync is required for this disk.
        /// </summary>
        [Input("resyncRequired")]
        public Input<bool>? ResyncRequired { get; set; }

        /// <summary>
        /// The secret URL / identifier (BEK).
        /// </summary>
        [Input("secretIdentifier")]
        public Input<string>? SecretIdentifier { get; set; }

        /// <summary>
        /// The test failover name for the managed disk.
        /// </summary>
        [Input("tfoDiskName")]
        public Input<string>? TfoDiskName { get; set; }

        public A2AProtectedManagedDiskDetailsArgs()
        {
        }
        public static new A2AProtectedManagedDiskDetailsArgs Empty => new A2AProtectedManagedDiskDetailsArgs();
    }
}
