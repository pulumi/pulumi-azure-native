// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IntegrationSpaces
{
    public static class GetBusinessProcess
    {
        /// <summary>
        /// Get a BusinessProcess
        /// Azure REST API version: 2023-11-14-preview.
        /// </summary>
        public static Task<GetBusinessProcessResult> InvokeAsync(GetBusinessProcessArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBusinessProcessResult>("azure-native:integrationspaces:getBusinessProcess", args ?? new GetBusinessProcessArgs(), options.WithDefaults());

        /// <summary>
        /// Get a BusinessProcess
        /// Azure REST API version: 2023-11-14-preview.
        /// </summary>
        public static Output<GetBusinessProcessResult> Invoke(GetBusinessProcessInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBusinessProcessResult>("azure-native:integrationspaces:getBusinessProcess", args ?? new GetBusinessProcessInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBusinessProcessArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Application
        /// </summary>
        [Input("applicationName", required: true)]
        public string ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the business process
        /// </summary>
        [Input("businessProcessName", required: true)]
        public string BusinessProcessName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public string SpaceName { get; set; } = null!;

        public GetBusinessProcessArgs()
        {
        }
        public static new GetBusinessProcessArgs Empty => new GetBusinessProcessArgs();
    }

    public sealed class GetBusinessProcessInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Application
        /// </summary>
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the business process
        /// </summary>
        [Input("businessProcessName", required: true)]
        public Input<string> BusinessProcessName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public Input<string> SpaceName { get; set; } = null!;

        public GetBusinessProcessInvokeArgs()
        {
        }
        public static new GetBusinessProcessInvokeArgs Empty => new GetBusinessProcessInvokeArgs();
    }


    [OutputType]
    public sealed class GetBusinessProcessResult
    {
        /// <summary>
        /// The business process mapping.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.BusinessProcessMappingItemResponse>? BusinessProcessMapping;
        /// <summary>
        /// The business process stages.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.BusinessProcessStageResponse>? BusinessProcessStages;
        /// <summary>
        /// The description of the business process.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The business process identifier.
        /// </summary>
        public readonly Outputs.BusinessProcessIdentifierResponse? Identifier;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The table name of the business process.
        /// </summary>
        public readonly string? TableName;
        /// <summary>
        /// The tracking data store reference name.
        /// </summary>
        public readonly string? TrackingDataStoreReferenceName;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the business process.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetBusinessProcessResult(
            ImmutableDictionary<string, Outputs.BusinessProcessMappingItemResponse>? businessProcessMapping,

            ImmutableDictionary<string, Outputs.BusinessProcessStageResponse>? businessProcessStages,

            string? description,

            string id,

            Outputs.BusinessProcessIdentifierResponse? identifier,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string? tableName,

            string? trackingDataStoreReferenceName,

            string type,

            string version)
        {
            BusinessProcessMapping = businessProcessMapping;
            BusinessProcessStages = businessProcessStages;
            Description = description;
            Id = id;
            Identifier = identifier;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            TableName = tableName;
            TrackingDataStoreReferenceName = trackingDataStoreReferenceName;
            Type = type;
            Version = version;
        }
    }
}
