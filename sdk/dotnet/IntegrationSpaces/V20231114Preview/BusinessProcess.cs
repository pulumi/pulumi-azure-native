// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IntegrationSpaces.V20231114Preview
{
    /// <summary>
    /// A business process under application.
    /// </summary>
    [AzureNativeResourceType("azure-native:integrationspaces/v20231114preview:BusinessProcess")]
    public partial class BusinessProcess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The business process mapping.
        /// </summary>
        [Output("businessProcessMapping")]
        public Output<ImmutableDictionary<string, Outputs.BusinessProcessMappingItemResponse>?> BusinessProcessMapping { get; private set; } = null!;

        /// <summary>
        /// The business process stages.
        /// </summary>
        [Output("businessProcessStages")]
        public Output<ImmutableDictionary<string, Outputs.BusinessProcessStageResponse>?> BusinessProcessStages { get; private set; } = null!;

        /// <summary>
        /// The description of the business process.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The business process identifier.
        /// </summary>
        [Output("identifier")]
        public Output<Outputs.BusinessProcessIdentifierResponse?> Identifier { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The table name of the business process.
        /// </summary>
        [Output("tableName")]
        public Output<string?> TableName { get; private set; } = null!;

        /// <summary>
        /// The tracking data store reference name.
        /// </summary>
        [Output("trackingDataStoreReferenceName")]
        public Output<string?> TrackingDataStoreReferenceName { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the business process.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessProcess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessProcess(string name, BusinessProcessArgs args, CustomResourceOptions? options = null)
            : base("azure-native:integrationspaces/v20231114preview:BusinessProcess", name, args ?? new BusinessProcessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessProcess(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:integrationspaces/v20231114preview:BusinessProcess", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:integrationspaces:BusinessProcess" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessProcess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessProcess Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BusinessProcess(name, id, options);
        }
    }

    public sealed class BusinessProcessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Application
        /// </summary>
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        [Input("businessProcessMapping")]
        private InputMap<Inputs.BusinessProcessMappingItemArgs>? _businessProcessMapping;

        /// <summary>
        /// The business process mapping.
        /// </summary>
        public InputMap<Inputs.BusinessProcessMappingItemArgs> BusinessProcessMapping
        {
            get => _businessProcessMapping ?? (_businessProcessMapping = new InputMap<Inputs.BusinessProcessMappingItemArgs>());
            set => _businessProcessMapping = value;
        }

        /// <summary>
        /// The name of the business process
        /// </summary>
        [Input("businessProcessName")]
        public Input<string>? BusinessProcessName { get; set; }

        [Input("businessProcessStages")]
        private InputMap<Inputs.BusinessProcessStageArgs>? _businessProcessStages;

        /// <summary>
        /// The business process stages.
        /// </summary>
        public InputMap<Inputs.BusinessProcessStageArgs> BusinessProcessStages
        {
            get => _businessProcessStages ?? (_businessProcessStages = new InputMap<Inputs.BusinessProcessStageArgs>());
            set => _businessProcessStages = value;
        }

        /// <summary>
        /// The description of the business process.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The business process identifier.
        /// </summary>
        [Input("identifier")]
        public Input<Inputs.BusinessProcessIdentifierArgs>? Identifier { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public Input<string> SpaceName { get; set; } = null!;

        /// <summary>
        /// The table name of the business process.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// The tracking data store reference name.
        /// </summary>
        [Input("trackingDataStoreReferenceName")]
        public Input<string>? TrackingDataStoreReferenceName { get; set; }

        public BusinessProcessArgs()
        {
        }
        public static new BusinessProcessArgs Empty => new BusinessProcessArgs();
    }
}
