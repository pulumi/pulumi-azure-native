// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IntegrationSpaces.V20231114Preview
{
    public static class GetApplicationResource
    {
        /// <summary>
        /// Get a ApplicationResource
        /// </summary>
        public static Task<GetApplicationResourceResult> InvokeAsync(GetApplicationResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResourceResult>("azure-native:integrationspaces/v20231114preview:getApplicationResource", args ?? new GetApplicationResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a ApplicationResource
        /// </summary>
        public static Output<GetApplicationResourceResult> Invoke(GetApplicationResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResourceResult>("azure-native:integrationspaces/v20231114preview:getApplicationResource", args ?? new GetApplicationResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Application
        /// </summary>
        [Input("applicationName", required: true)]
        public string ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the application resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public string SpaceName { get; set; } = null!;

        public GetApplicationResourceArgs()
        {
        }
        public static new GetApplicationResourceArgs Empty => new GetApplicationResourceArgs();
    }

    public sealed class GetApplicationResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Application
        /// </summary>
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the application resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public Input<string> SpaceName { get; set; } = null!;

        public GetApplicationResourceInvokeArgs()
        {
        }
        public static new GetApplicationResourceInvokeArgs Empty => new GetApplicationResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResourceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The Arm id of the application resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The kind of the application resource.
        /// </summary>
        public readonly string? ResourceKind;
        /// <summary>
        /// The type of the application resource.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApplicationResourceResult(
            string id,

            string name,

            string provisioningState,

            string resourceId,

            string? resourceKind,

            string resourceType,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceId = resourceId;
            ResourceKind = resourceKind;
            ResourceType = resourceType;
            SystemData = systemData;
            Type = type;
        }
    }
}
