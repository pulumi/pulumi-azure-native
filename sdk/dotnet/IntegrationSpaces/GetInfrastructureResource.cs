// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.IntegrationSpaces
{
    public static class GetInfrastructureResource
    {
        /// <summary>
        /// Get a InfrastructureResource
        /// Azure REST API version: 2023-11-14-preview.
        /// </summary>
        public static Task<GetInfrastructureResourceResult> InvokeAsync(GetInfrastructureResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInfrastructureResourceResult>("azure-native:integrationspaces:getInfrastructureResource", args ?? new GetInfrastructureResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a InfrastructureResource
        /// Azure REST API version: 2023-11-14-preview.
        /// </summary>
        public static Output<GetInfrastructureResourceResult> Invoke(GetInfrastructureResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfrastructureResourceResult>("azure-native:integrationspaces:getInfrastructureResource", args ?? new GetInfrastructureResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInfrastructureResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the infrastructure resource in the space.
        /// </summary>
        [Input("infrastructureResourceName", required: true)]
        public string InfrastructureResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public string SpaceName { get; set; } = null!;

        public GetInfrastructureResourceArgs()
        {
        }
        public static new GetInfrastructureResourceArgs Empty => new GetInfrastructureResourceArgs();
    }

    public sealed class GetInfrastructureResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the infrastructure resource in the space.
        /// </summary>
        [Input("infrastructureResourceName", required: true)]
        public Input<string> InfrastructureResourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the space
        /// </summary>
        [Input("spaceName", required: true)]
        public Input<string> SpaceName { get; set; } = null!;

        public GetInfrastructureResourceInvokeArgs()
        {
        }
        public static new GetInfrastructureResourceInvokeArgs Empty => new GetInfrastructureResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInfrastructureResourceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The id of the infrastructure resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The type of the infrastructure resource.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInfrastructureResourceResult(
            string id,

            string name,

            string provisioningState,

            string resourceId,

            string resourceType,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceId = resourceId;
            ResourceType = resourceType;
            SystemData = systemData;
            Type = type;
        }
    }
}
