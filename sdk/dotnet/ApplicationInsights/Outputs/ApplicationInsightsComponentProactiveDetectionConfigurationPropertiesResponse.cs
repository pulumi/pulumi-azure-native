// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApplicationInsights.Outputs
{

    /// <summary>
    /// Properties that define a ProactiveDetection configuration.
    /// </summary>
    [OutputType]
    public sealed class ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse
    {
        /// <summary>
        /// Custom email addresses for this rule notifications
        /// </summary>
        public readonly ImmutableArray<string> CustomEmails;
        /// <summary>
        /// A flag that indicates whether this rule is enabled by the user
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The last time this rule was updated
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// The rule name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Static definitions of the ProactiveDetection configuration rule (same values for all components).
        /// </summary>
        public readonly Outputs.ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions? RuleDefinitions;
        /// <summary>
        /// A flag that indicated whether notifications on this rule should be sent to subscription owners
        /// </summary>
        public readonly bool? SendEmailsToSubscriptionOwners;

        [OutputConstructor]
        private ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse(
            ImmutableArray<string> customEmails,

            bool? enabled,

            string lastUpdatedTime,

            string name,

            Outputs.ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions? ruleDefinitions,

            bool? sendEmailsToSubscriptionOwners)
        {
            CustomEmails = customEmails;
            Enabled = enabled;
            LastUpdatedTime = lastUpdatedTime;
            Name = name;
            RuleDefinitions = ruleDefinitions;
            SendEmailsToSubscriptionOwners = sendEmailsToSubscriptionOwners;
        }
    }
}
