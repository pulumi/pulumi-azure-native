// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApplicationInsights.V20150501
{
    public static class GetWorkbook
    {
        /// <summary>
        /// Get a single workbook by its resourceName.
        /// </summary>
        public static Task<GetWorkbookResult> InvokeAsync(GetWorkbookArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkbookResult>("azure-native:applicationinsights/v20150501:getWorkbook", args ?? new GetWorkbookArgs(), options.WithDefaults());

        /// <summary>
        /// Get a single workbook by its resourceName.
        /// </summary>
        public static Output<GetWorkbookResult> Invoke(GetWorkbookInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkbookResult>("azure-native:applicationinsights/v20150501:getWorkbook", args ?? new GetWorkbookInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a single workbook by its resourceName.
        /// </summary>
        public static Output<GetWorkbookResult> Invoke(GetWorkbookInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkbookResult>("azure-native:applicationinsights/v20150501:getWorkbook", args ?? new GetWorkbookInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkbookArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Application Insights component resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetWorkbookArgs()
        {
        }
        public static new GetWorkbookArgs Empty => new GetWorkbookArgs();
    }

    public sealed class GetWorkbookInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Application Insights component resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetWorkbookInvokeArgs()
        {
        }
        public static new GetWorkbookInvokeArgs Empty => new GetWorkbookInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkbookResult
    {
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of workbook. Choices are user and shared.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Metadata describing a web test for an Azure resource.
        /// </summary>
        public readonly Outputs.WorkbookPropertiesResponse Properties;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkbookResult(
            string id,

            string? kind,

            string? location,

            string name,

            Outputs.WorkbookPropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
