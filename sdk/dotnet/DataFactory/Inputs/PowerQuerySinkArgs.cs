// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// Power query sink.
    /// </summary>
    public sealed class PowerQuerySinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dataset reference.
        /// </summary>
        [Input("dataset")]
        public Input<Inputs.DatasetReferenceArgs>? Dataset { get; set; }

        /// <summary>
        /// Transformation description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Flowlet Reference
        /// </summary>
        [Input("flowlet")]
        public Input<Inputs.DataFlowReferenceArgs>? Flowlet { get; set; }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedService")]
        public Input<Inputs.LinkedServiceReferenceArgs>? LinkedService { get; set; }

        /// <summary>
        /// Transformation name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Rejected data linked service reference.
        /// </summary>
        [Input("rejectedDataLinkedService")]
        public Input<Inputs.LinkedServiceReferenceArgs>? RejectedDataLinkedService { get; set; }

        /// <summary>
        /// Schema linked service reference.
        /// </summary>
        [Input("schemaLinkedService")]
        public Input<Inputs.LinkedServiceReferenceArgs>? SchemaLinkedService { get; set; }

        /// <summary>
        /// sink script.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        public PowerQuerySinkArgs()
        {
        }
        public static new PowerQuerySinkArgs Empty => new PowerQuerySinkArgs();
    }
}
