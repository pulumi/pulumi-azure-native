// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// OData linked service properties.
    /// </summary>
    public sealed class ODataLinkedServiceTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("aadResourceId")]
        public Input<object>? AadResourceId { get; set; }

        /// <summary>
        /// Specify the credential type (key or cert) is used for service principal.
        /// </summary>
        [Input("aadServicePrincipalCredentialType")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.ODataAadServicePrincipalCredentialType>? AadServicePrincipalCredentialType { get; set; }

        /// <summary>
        /// The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
        /// </summary>
        [Input("authHeaders")]
        public Input<object>? AuthHeaders { get; set; }

        /// <summary>
        /// Type of authentication used to connect to the OData service.
        /// </summary>
        [Input("authenticationType")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.ODataAuthenticationType>? AuthenticationType { get; set; }

        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("azureCloudType")]
        public Input<object>? AzureCloudType { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("encryptedCredential")]
        public Input<object>? EncryptedCredential { get; set; }

        /// <summary>
        /// Password of the OData service.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("servicePrincipalEmbeddedCert")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ServicePrincipalEmbeddedCert { get; set; }

        /// <summary>
        /// Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("servicePrincipalEmbeddedCertPassword")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ServicePrincipalEmbeddedCertPassword { get; set; }

        /// <summary>
        /// Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<object>? ServicePrincipalId { get; set; }

        /// <summary>
        /// Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("servicePrincipalKey")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ServicePrincipalKey { get; set; }

        /// <summary>
        /// Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("tenant")]
        public Input<object>? Tenant { get; set; }

        /// <summary>
        /// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("url", required: true)]
        public Input<object> Url { get; set; } = null!;

        /// <summary>
        /// User name of the OData service. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("userName")]
        public Input<object>? UserName { get; set; }

        public ODataLinkedServiceTypePropertiesArgs()
        {
        }
        public static new ODataLinkedServiceTypePropertiesArgs Empty => new ODataLinkedServiceTypePropertiesArgs();
    }
}
