// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// Power Query data flow.
    /// </summary>
    public sealed class WranglingDataFlowArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the data flow.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The description of the data flow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Locale of the Power query mashup document.
        /// </summary>
        [Input("documentLocale")]
        public Input<string>? DocumentLocale { get; set; }

        /// <summary>
        /// The folder that this data flow is in. If not specified, Data flow will appear at the root level.
        /// </summary>
        [Input("folder")]
        public Input<Inputs.DataFlowFolderArgs>? Folder { get; set; }

        /// <summary>
        /// Power query mashup script.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        [Input("sources")]
        private InputList<Inputs.PowerQuerySourceArgs>? _sources;

        /// <summary>
        /// List of sources in Power Query.
        /// </summary>
        public InputList<Inputs.PowerQuerySourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.PowerQuerySourceArgs>());
            set => _sources = value;
        }

        /// <summary>
        /// Type of data flow.
        /// Expected value is 'WranglingDataFlow'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WranglingDataFlowArgs()
        {
        }
        public static new WranglingDataFlowArgs Empty => new WranglingDataFlowArgs();
    }
}
