// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// ForEach activity properties.
    /// </summary>
    public sealed class ForEachActivityTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("activities", required: true)]
        private InputList<object>? _activities;

        /// <summary>
        /// List of activities to execute .
        /// </summary>
        public InputList<object> Activities
        {
            get => _activities ?? (_activities = new InputList<object>());
            set => _activities = value;
        }

        /// <summary>
        /// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
        /// </summary>
        [Input("batchCount")]
        public Input<int>? BatchCount { get; set; }

        /// <summary>
        /// Should the loop be executed in sequence or in parallel (max 50)
        /// </summary>
        [Input("isSequential")]
        public Input<bool>? IsSequential { get; set; }

        /// <summary>
        /// Collection to iterate.
        /// </summary>
        [Input("items", required: true)]
        public Input<Inputs.ExpressionArgs> Items { get; set; } = null!;

        public ForEachActivityTypePropertiesArgs()
        {
        }
        public static new ForEachActivityTypePropertiesArgs Empty => new ForEachActivityTypePropertiesArgs();
    }
}
