// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataFactory.Inputs
{

    /// <summary>
    /// A data factory pipeline.
    /// </summary>
    public sealed class PipelineArgs : Pulumi.ResourceArgs
    {
        [Input("activities")]
        private InputList<Inputs.ActivityArgs>? _activities;

        /// <summary>
        /// List of activities in pipeline.
        /// </summary>
        public InputList<Inputs.ActivityArgs> Activities
        {
            get => _activities ?? (_activities = new InputList<Inputs.ActivityArgs>());
            set => _activities = value;
        }

        [Input("annotations")]
        private InputList<ImmutableDictionary<string, string>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the Pipeline.
        /// </summary>
        public InputList<ImmutableDictionary<string, string>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, string>>());
            set => _annotations = value;
        }

        /// <summary>
        /// The max number of concurrent runs for the pipeline.
        /// </summary>
        [Input("concurrency")]
        public Input<int>? Concurrency { get; set; }

        /// <summary>
        /// The description of the pipeline.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
        /// </summary>
        [Input("folder")]
        public Input<Inputs.PipelinePropertiesArgs>? Folder { get; set; }

        /// <summary>
        /// List of parameters for pipeline.
        /// </summary>
        [Input("parameters")]
        public Input<Inputs.ParameterDefinitionSpecificationArgs>? Parameters { get; set; }

        [Input("runDimensions")]
        private InputMap<string>? _runDimensions;

        /// <summary>
        /// Dimensions emitted by Pipeline.
        /// </summary>
        public InputMap<string> RunDimensions
        {
            get => _runDimensions ?? (_runDimensions = new InputMap<string>());
            set => _runDimensions = value;
        }

        /// <summary>
        /// List of variables for pipeline.
        /// </summary>
        [Input("variables")]
        public Input<Inputs.VariableDefinitionSpecificationArgs>? Variables { get; set; }

        public PipelineArgs()
        {
        }
    }
}
