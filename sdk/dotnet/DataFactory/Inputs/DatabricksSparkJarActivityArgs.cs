// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// DatabricksSparkJar activity.
    /// </summary>
    public sealed class DatabricksSparkJarActivityArgs : global::Pulumi.ResourceArgs
    {
        [Input("dependsOn")]
        private InputList<Inputs.ActivityDependencyArgs>? _dependsOn;

        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public InputList<Inputs.ActivityDependencyArgs> DependsOn
        {
            get => _dependsOn ?? (_dependsOn = new InputList<Inputs.ActivityDependencyArgs>());
            set => _dependsOn = value;
        }

        /// <summary>
        /// Activity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("libraries")]
        private InputList<ImmutableDictionary<string, object>>? _libraries;

        /// <summary>
        /// A list of libraries to be installed on the cluster that will execute the job.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<ImmutableDictionary<string, object>>());
            set => _libraries = value;
        }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedServiceName")]
        public Input<Inputs.LinkedServiceReferenceArgs>? LinkedServiceName { get; set; }

        /// <summary>
        /// The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("mainClassName", required: true)]
        public Input<object> MainClassName { get; set; } = null!;

        /// <summary>
        /// Activity name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        [Input("onInactiveMarkAs")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.ActivityOnInactiveMarkAs>? OnInactiveMarkAs { get; set; }

        [Input("parameters")]
        private InputList<object>? _parameters;

        /// <summary>
        /// Parameters that will be passed to the main method.
        /// </summary>
        public InputList<object> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<object>());
            set => _parameters = value;
        }

        /// <summary>
        /// Activity policy.
        /// </summary>
        [Input("policy")]
        public Input<Inputs.ActivityPolicyArgs>? Policy { get; set; }

        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        [Input("state")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.ActivityState>? State { get; set; }

        /// <summary>
        /// Type of activity.
        /// Expected value is 'DatabricksSparkJar'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("userProperties")]
        private InputList<Inputs.UserPropertyArgs>? _userProperties;

        /// <summary>
        /// Activity user properties.
        /// </summary>
        public InputList<Inputs.UserPropertyArgs> UserProperties
        {
            get => _userProperties ?? (_userProperties = new InputList<Inputs.UserPropertyArgs>());
            set => _userProperties = value;
        }

        public DatabricksSparkJarActivityArgs()
        {
        }
        public static new DatabricksSparkJarActivityArgs Empty => new DatabricksSparkJarActivityArgs();
    }
}
