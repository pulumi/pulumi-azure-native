// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// A copy activity for Microsoft Fabric LakeHouse Table sink.
    /// </summary>
    public sealed class LakeHouseTableSinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Input("disableMetricsCollection")]
        public Input<object>? DisableMetricsCollection { get; set; }

        /// <summary>
        /// The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        [Input("maxConcurrentConnections")]
        public Input<object>? MaxConcurrentConnections { get; set; }

        /// <summary>
        /// Specify the partition column names from sink columns. Type: array of objects (or Expression with resultType array of objects).
        /// </summary>
        [Input("partitionNameList")]
        public Input<object>? PartitionNameList { get; set; }

        /// <summary>
        /// Create partitions in folder structure based on one or multiple columns. Each distinct column value (pair) will be a new partition. Possible values include: "None", "PartitionByKey".
        /// </summary>
        [Input("partitionOption")]
        public Input<object>? PartitionOption { get; set; }

        /// <summary>
        /// Sink retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        [Input("sinkRetryCount")]
        public Input<object>? SinkRetryCount { get; set; }

        /// <summary>
        /// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Input("sinkRetryWait")]
        public Input<object>? SinkRetryWait { get; set; }

        /// <summary>
        /// The type of table action for LakeHouse Table sink. Possible values include: "None", "Append", "Overwrite".
        /// </summary>
        [Input("tableActionOption")]
        public Input<object>? TableActionOption { get; set; }

        /// <summary>
        /// Copy sink type.
        /// Expected value is 'LakeHouseTableSink'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        [Input("writeBatchSize")]
        public Input<object>? WriteBatchSize { get; set; }

        /// <summary>
        /// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Input("writeBatchTimeout")]
        public Input<object>? WriteBatchTimeout { get; set; }

        public LakeHouseTableSinkArgs()
        {
        }
        public static new LakeHouseTableSinkArgs Empty => new LakeHouseTableSinkArgs();
    }
}
