// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
    /// </summary>
    public sealed class TumblingWindowTriggerArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the trigger.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Trigger description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Pipeline for which runs are created when an event is fired for trigger window that is ready.
        /// </summary>
        [Input("pipeline", required: true)]
        public Input<Inputs.TriggerPipelineReferenceArgs> Pipeline { get; set; } = null!;

        /// <summary>
        /// Trigger type.
        /// Expected value is 'TumblingWindowTrigger'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Tumbling Window Trigger properties.
        /// </summary>
        [Input("typeProperties", required: true)]
        public Input<Inputs.TumblingWindowTriggerTypePropertiesArgs> TypeProperties { get; set; } = null!;

        public TumblingWindowTriggerArgs()
        {
        }
        public static new TumblingWindowTriggerArgs Empty => new TumblingWindowTriggerArgs();
    }
}
