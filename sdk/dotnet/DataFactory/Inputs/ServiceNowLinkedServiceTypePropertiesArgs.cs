// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Inputs
{

    /// <summary>
    /// ServiceNow server linked service properties.
    /// </summary>
    public sealed class ServiceNowLinkedServiceTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The authentication type to use.
        /// </summary>
        [Input("authenticationType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.ServiceNowAuthenticationType> AuthenticationType { get; set; } = null!;

        /// <summary>
        /// The client id for OAuth2 authentication.
        /// </summary>
        [Input("clientId")]
        public Input<object>? ClientId { get; set; }

        /// <summary>
        /// The client secret for OAuth2 authentication.
        /// </summary>
        [Input("clientSecret")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClientSecret { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("encryptedCredential")]
        public Input<object>? EncryptedCredential { get; set; }

        /// <summary>
        /// The endpoint of the ServiceNow server. (i.e. &lt;instance&gt;.service-now.com)
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<object> Endpoint { get; set; } = null!;

        /// <summary>
        /// The password corresponding to the user name for Basic and OAuth2 authentication.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
        /// </summary>
        [Input("useEncryptedEndpoints")]
        public Input<object>? UseEncryptedEndpoints { get; set; }

        /// <summary>
        /// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
        /// </summary>
        [Input("useHostVerification")]
        public Input<object>? UseHostVerification { get; set; }

        /// <summary>
        /// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
        /// </summary>
        [Input("usePeerVerification")]
        public Input<object>? UsePeerVerification { get; set; }

        /// <summary>
        /// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
        /// </summary>
        [Input("username")]
        public Input<object>? Username { get; set; }

        public ServiceNowLinkedServiceTypePropertiesArgs()
        {
        }
        public static new ServiceNowLinkedServiceTypePropertiesArgs Empty => new ServiceNowLinkedServiceTypePropertiesArgs();
    }
}
