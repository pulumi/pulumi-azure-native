// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Inputs
{

    /// <summary>
    /// HDInsight Spark activity.
    /// </summary>
    public sealed class HDInsightSparkActivityArgs : Pulumi.ResourceArgs
    {
        [Input("arguments")]
        private InputList<object>? _arguments;

        /// <summary>
        /// The user-specified arguments to HDInsightSparkActivity.
        /// </summary>
        public InputList<object> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<object>());
            set => _arguments = value;
        }

        /// <summary>
        /// The application's Java/Spark main class.
        /// </summary>
        [Input("className")]
        public Input<string>? ClassName { get; set; }

        [Input("dependsOn")]
        private InputList<Inputs.ActivityDependencyArgs>? _dependsOn;

        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public InputList<Inputs.ActivityDependencyArgs> DependsOn
        {
            get => _dependsOn ?? (_dependsOn = new InputList<Inputs.ActivityDependencyArgs>());
            set => _dependsOn = value;
        }

        /// <summary>
        /// Activity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("entryFilePath", required: true)]
        public Input<object> EntryFilePath { get; set; } = null!;

        /// <summary>
        /// Debug info option.
        /// </summary>
        [Input("getDebugInfo")]
        public InputUnion<string, Pulumi.AzureNextGen.DataFactory.HDInsightActivityDebugInfoOption>? GetDebugInfo { get; set; }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedServiceName")]
        public Input<Inputs.LinkedServiceReferenceArgs>? LinkedServiceName { get; set; }

        /// <summary>
        /// Activity name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Activity policy.
        /// </summary>
        [Input("policy")]
        public Input<Inputs.ActivityPolicyArgs>? Policy { get; set; }

        /// <summary>
        /// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("proxyUser")]
        public Input<object>? ProxyUser { get; set; }

        /// <summary>
        /// The root path in 'sparkJobLinkedService' for all the jobâ€™s files. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("rootPath", required: true)]
        public Input<object> RootPath { get; set; } = null!;

        [Input("sparkConfig")]
        private InputMap<object>? _sparkConfig;

        /// <summary>
        /// Spark configuration property.
        /// </summary>
        public InputMap<object> SparkConfig
        {
            get => _sparkConfig ?? (_sparkConfig = new InputMap<object>());
            set => _sparkConfig = value;
        }

        /// <summary>
        /// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
        /// </summary>
        [Input("sparkJobLinkedService")]
        public Input<Inputs.LinkedServiceReferenceArgs>? SparkJobLinkedService { get; set; }

        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("userProperties")]
        private InputList<Inputs.UserPropertyArgs>? _userProperties;

        /// <summary>
        /// Activity user properties.
        /// </summary>
        public InputList<Inputs.UserPropertyArgs> UserProperties
        {
            get => _userProperties ?? (_userProperties = new InputList<Inputs.UserPropertyArgs>());
            set => _userProperties = value;
        }

        public HDInsightSparkActivityArgs()
        {
        }
    }
}
