// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20170901Preview.Outputs
{

    [OutputType]
    public sealed class GetMetadataActivityInvokeResponseResult
    {
        /// <summary>
        /// GetMetadata activity dataset reference.
        /// </summary>
        public readonly Outputs.DatasetReferenceInvokeResponseResult Dataset;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fields of metadata to get from dataset.
        /// </summary>
        public readonly ImmutableArray<object> FieldList;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceInvokeResponseResult? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyInvokeResponseResult? Policy;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMetadataActivityInvokeResponseResult(
            Outputs.DatasetReferenceInvokeResponseResult dataset,

            ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> dependsOn,

            string? description,

            ImmutableArray<object> fieldList,

            Outputs.LinkedServiceReferenceInvokeResponseResult? linkedServiceName,

            string name,

            Outputs.ActivityPolicyInvokeResponseResult? policy,

            string type)
        {
            Dataset = dataset;
            DependsOn = dependsOn;
            Description = description;
            FieldList = fieldList;
            LinkedServiceName = linkedServiceName;
            Name = name;
            Policy = policy;
            Type = type;
        }
    }
}
