// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20170901Preview.Outputs
{

    /// <summary>
    /// Azure MySQL database linked service.
    /// </summary>
    [OutputType]
    public sealed class AzureMySqlLinkedServiceResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the Dataset.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'AzureMySql'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Azure MySQL database linked service properties.
        /// </summary>
        public readonly Outputs.AzureMySqlLinkedServiceTypePropertiesResponse TypeProperties;

        [OutputConstructor]
        private AzureMySqlLinkedServiceResponse(
            ImmutableArray<object> annotations,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            string? description,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            string type,

            Outputs.AzureMySqlLinkedServiceTypePropertiesResponse typeProperties)
        {
            Annotations = annotations;
            ConnectVia = connectVia;
            Description = description;
            Parameters = parameters;
            Type = type;
            TypeProperties = typeProperties;
        }
    }
}
