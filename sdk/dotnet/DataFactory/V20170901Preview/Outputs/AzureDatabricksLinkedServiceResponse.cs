// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20170901Preview.Outputs
{

    [OutputType]
    public sealed class AzureDatabricksLinkedServiceResponse
    {
        /// <summary>
        /// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse> AccessToken;
        /// <summary>
        /// List of tags that can be used for describing the Dataset.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// &lt;REGION&gt;.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object Domain;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EncryptedCredential;
        /// <summary>
        /// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ExistingClusterId;
        /// <summary>
        /// The node types of new cluster. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? NewClusterNodeType;
        /// <summary>
        /// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? NewClusterNumOfWorker;
        /// <summary>
        /// a set of optional, user-specified Spark configuration key-value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NewClusterSparkConf;
        /// <summary>
        /// The Spark version of new cluster. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? NewClusterVersion;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// Type of linked service.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AzureDatabricksLinkedServiceResponse(
            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse> accessToken,

            ImmutableArray<object> annotations,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            string? description,

            object domain,

            object? encryptedCredential,

            object? existingClusterId,

            object? newClusterNodeType,

            object? newClusterNumOfWorker,

            ImmutableDictionary<string, object>? newClusterSparkConf,

            object? newClusterVersion,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            string type)
        {
            AccessToken = accessToken;
            Annotations = annotations;
            ConnectVia = connectVia;
            Description = description;
            Domain = domain;
            EncryptedCredential = encryptedCredential;
            ExistingClusterId = existingClusterId;
            NewClusterNodeType = newClusterNodeType;
            NewClusterNumOfWorker = newClusterNumOfWorker;
            NewClusterSparkConf = newClusterSparkConf;
            NewClusterVersion = newClusterVersion;
            Parameters = parameters;
            Type = type;
        }
    }
}
