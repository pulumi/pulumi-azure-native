// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20170901Preview.Inputs
{

    /// <summary>
    /// Zoho server linked service.
    /// </summary>
    public sealed class ZohoLinkedServiceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access token for Zoho authentication.
        /// </summary>
        [Input("accessToken")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? AccessToken { get; set; }

        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the Dataset.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encryptedCredential")]
        private InputMap<object>? _encryptedCredential;

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EncryptedCredential
        {
            get => _encryptedCredential ?? (_encryptedCredential = new InputMap<object>());
            set => _encryptedCredential = value;
        }

        [Input("endpoint", required: true)]
        private InputMap<object>? _endpoint;

        /// <summary>
        /// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
        /// </summary>
        public InputMap<object> Endpoint
        {
            get => _endpoint ?? (_endpoint = new InputMap<object>());
            set => _endpoint = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Type of linked service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useEncryptedEndpoints")]
        private InputMap<object>? _useEncryptedEndpoints;

        /// <summary>
        /// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
        /// </summary>
        public InputMap<object> UseEncryptedEndpoints
        {
            get => _useEncryptedEndpoints ?? (_useEncryptedEndpoints = new InputMap<object>());
            set => _useEncryptedEndpoints = value;
        }

        [Input("useHostVerification")]
        private InputMap<object>? _useHostVerification;

        /// <summary>
        /// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
        /// </summary>
        public InputMap<object> UseHostVerification
        {
            get => _useHostVerification ?? (_useHostVerification = new InputMap<object>());
            set => _useHostVerification = value;
        }

        [Input("usePeerVerification")]
        private InputMap<object>? _usePeerVerification;

        /// <summary>
        /// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
        /// </summary>
        public InputMap<object> UsePeerVerification
        {
            get => _usePeerVerification ?? (_usePeerVerification = new InputMap<object>());
            set => _usePeerVerification = value;
        }

        public ZohoLinkedServiceArgs()
        {
        }
    }
}
