// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20170901Preview.Inputs
{

    /// <summary>
    /// Azure ML Batch Execution activity.
    /// </summary>
    public sealed class AzureMLBatchExecutionActivityArgs : Pulumi.ResourceArgs
    {
        [Input("dependsOn")]
        private InputList<Inputs.ActivityDependencyArgs>? _dependsOn;

        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public InputList<Inputs.ActivityDependencyArgs> DependsOn
        {
            get => _dependsOn ?? (_dependsOn = new InputList<Inputs.ActivityDependencyArgs>());
            set => _dependsOn = value;
        }

        /// <summary>
        /// Activity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("globalParameters")]
        private InputMap<object>? _globalParameters;

        /// <summary>
        /// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
        /// </summary>
        public InputMap<object> GlobalParameters
        {
            get => _globalParameters ?? (_globalParameters = new InputMap<object>());
            set => _globalParameters = value;
        }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedServiceName")]
        public Input<Inputs.LinkedServiceReferenceArgs>? LinkedServiceName { get; set; }

        /// <summary>
        /// Activity name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Activity policy.
        /// </summary>
        [Input("policy")]
        public Input<Inputs.ActivityPolicyArgs>? Policy { get; set; }

        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("webServiceInputs")]
        private InputMap<Inputs.AzureMLWebServiceFileArgs>? _webServiceInputs;

        /// <summary>
        /// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
        /// </summary>
        public InputMap<Inputs.AzureMLWebServiceFileArgs> WebServiceInputs
        {
            get => _webServiceInputs ?? (_webServiceInputs = new InputMap<Inputs.AzureMLWebServiceFileArgs>());
            set => _webServiceInputs = value;
        }

        [Input("webServiceOutputs")]
        private InputMap<Inputs.AzureMLWebServiceFileArgs>? _webServiceOutputs;

        /// <summary>
        /// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
        /// </summary>
        public InputMap<Inputs.AzureMLWebServiceFileArgs> WebServiceOutputs
        {
            get => _webServiceOutputs ?? (_webServiceOutputs = new InputMap<Inputs.AzureMLWebServiceFileArgs>());
            set => _webServiceOutputs = value;
        }

        public AzureMLBatchExecutionActivityArgs()
        {
        }
    }
}
