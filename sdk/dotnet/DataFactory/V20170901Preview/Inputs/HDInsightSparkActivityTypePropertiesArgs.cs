// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20170901Preview.Inputs
{

    /// <summary>
    /// HDInsight spark activity properties.
    /// </summary>
    public sealed class HDInsightSparkActivityTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("arguments")]
        private InputList<object>? _arguments;

        /// <summary>
        /// The user-specified arguments to HDInsightSparkActivity.
        /// </summary>
        public InputList<object> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<object>());
            set => _arguments = value;
        }

        /// <summary>
        /// The application's Java/Spark main class.
        /// </summary>
        [Input("className")]
        public Input<string>? ClassName { get; set; }

        /// <summary>
        /// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("entryFilePath", required: true)]
        public Input<object> EntryFilePath { get; set; } = null!;

        /// <summary>
        /// Debug info option.
        /// </summary>
        [Input("getDebugInfo")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.V20170901Preview.HDInsightActivityDebugInfoOption>? GetDebugInfo { get; set; }

        /// <summary>
        /// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("proxyUser")]
        public Input<object>? ProxyUser { get; set; }

        /// <summary>
        /// The root path in 'sparkJobLinkedService' for all the jobâ€™s files. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("rootPath", required: true)]
        public Input<object> RootPath { get; set; } = null!;

        [Input("sparkConfig")]
        private InputMap<object>? _sparkConfig;

        /// <summary>
        /// Spark configuration property.
        /// </summary>
        public InputMap<object> SparkConfig
        {
            get => _sparkConfig ?? (_sparkConfig = new InputMap<object>());
            set => _sparkConfig = value;
        }

        /// <summary>
        /// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
        /// </summary>
        [Input("sparkJobLinkedService")]
        public Input<Inputs.LinkedServiceReferenceArgs>? SparkJobLinkedService { get; set; }

        public HDInsightSparkActivityTypePropertiesArgs()
        {
        }
        public static new HDInsightSparkActivityTypePropertiesArgs Empty => new HDInsightSparkActivityTypePropertiesArgs();
    }
}
