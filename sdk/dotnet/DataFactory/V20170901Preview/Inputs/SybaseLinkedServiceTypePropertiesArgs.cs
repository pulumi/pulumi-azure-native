// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20170901Preview.Inputs
{

    /// <summary>
    /// Sybase linked service properties.
    /// </summary>
    public sealed class SybaseLinkedServiceTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AuthenticationType to be used for connection.
        /// </summary>
        [Input("authenticationType")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.V20170901Preview.SybaseAuthenticationType>? AuthenticationType { get; set; }

        /// <summary>
        /// Database name for connection. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("database", required: true)]
        public Input<object> Database { get; set; } = null!;

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("encryptedCredential")]
        public Input<object>? EncryptedCredential { get; set; }

        /// <summary>
        /// Password for authentication.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// Schema name for connection. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("schema")]
        public Input<object>? Schema { get; set; }

        /// <summary>
        /// Server name for connection. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("server", required: true)]
        public Input<object> Server { get; set; } = null!;

        /// <summary>
        /// Username for authentication. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("username")]
        public Input<object>? Username { get; set; }

        public SybaseLinkedServiceTypePropertiesArgs()
        {
        }
        public static new SybaseLinkedServiceTypePropertiesArgs Empty => new SybaseLinkedServiceTypePropertiesArgs();
    }
}
