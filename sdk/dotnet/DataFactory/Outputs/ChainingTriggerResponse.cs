// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Trigger that allows the referenced pipeline to depend on other pipeline runs based on runDimension Name/Value pairs. Upstream pipelines should declare the same runDimension Name and their runs should have the values for those runDimensions. The referenced pipeline run would be triggered if the values for the runDimension match for all upstream pipeline runs.
    /// </summary>
    [OutputType]
    public sealed class ChainingTriggerResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the trigger.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// Trigger description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Pipeline for which runs are created when all upstream pipelines complete successfully.
        /// </summary>
        public readonly Outputs.TriggerPipelineReferenceResponse Pipeline;
        /// <summary>
        /// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
        /// </summary>
        public readonly string RuntimeState;
        /// <summary>
        /// Trigger type.
        /// Expected value is 'ChainingTrigger'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Chaining Trigger properties.
        /// </summary>
        public readonly Outputs.ChainingTriggerResponseTypeProperties TypeProperties;

        [OutputConstructor]
        private ChainingTriggerResponse(
            ImmutableArray<object> annotations,

            string? description,

            Outputs.TriggerPipelineReferenceResponse pipeline,

            string runtimeState,

            string type,

            Outputs.ChainingTriggerResponseTypeProperties typeProperties)
        {
            Annotations = annotations;
            Description = description;
            Pipeline = pipeline;
            RuntimeState = runtimeState;
            Type = type;
            TypeProperties = typeProperties;
        }
    }
}
