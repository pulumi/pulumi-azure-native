// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// ForEach activity properties.
    /// </summary>
    [OutputType]
    public sealed class ForEachActivityTypePropertiesResponse
    {
        /// <summary>
        /// List of activities to execute .
        /// </summary>
        public readonly ImmutableArray<object> Activities;
        /// <summary>
        /// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
        /// </summary>
        public readonly int? BatchCount;
        /// <summary>
        /// Should the loop be executed in sequence or in parallel (max 50)
        /// </summary>
        public readonly bool? IsSequential;
        /// <summary>
        /// Collection to iterate.
        /// </summary>
        public readonly Outputs.ExpressionResponse Items;

        [OutputConstructor]
        private ForEachActivityTypePropertiesResponse(
            ImmutableArray<object> activities,

            int? batchCount,

            bool? isSequential,

            Outputs.ExpressionResponse items)
        {
            Activities = activities;
            BatchCount = batchCount;
            IsSequential = isSequential;
            Items = items;
        }
    }
}
