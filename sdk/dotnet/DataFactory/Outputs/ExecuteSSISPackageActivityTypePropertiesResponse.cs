// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Execute SSIS package activity properties.
    /// </summary>
    [OutputType]
    public sealed class ExecuteSSISPackageActivityTypePropertiesResponse
    {
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse ConnectVia;
        /// <summary>
        /// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EnvironmentPath;
        /// <summary>
        /// The package execution credential.
        /// </summary>
        public readonly Outputs.SSISExecutionCredentialResponse? ExecutionCredential;
        /// <summary>
        /// SSIS package execution log location.
        /// </summary>
        public readonly Outputs.SSISLogLocationResponse? LogLocation;
        /// <summary>
        /// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? LoggingLevel;
        /// <summary>
        /// The package level connection managers to execute the SSIS package.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>>? PackageConnectionManagers;
        /// <summary>
        /// SSIS package location.
        /// </summary>
        public readonly Outputs.SSISPackageLocationResponse PackageLocation;
        /// <summary>
        /// The package level parameters to execute the SSIS package.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>? PackageParameters;
        /// <summary>
        /// The project level connection managers to execute the SSIS package.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>>? ProjectConnectionManagers;
        /// <summary>
        /// The project level parameters to execute the SSIS package.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>? ProjectParameters;
        /// <summary>
        /// The property overrides to execute the SSIS package.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SSISPropertyOverrideResponse>? PropertyOverrides;
        /// <summary>
        /// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Runtime;

        [OutputConstructor]
        private ExecuteSSISPackageActivityTypePropertiesResponse(
            Outputs.IntegrationRuntimeReferenceResponse connectVia,

            object? environmentPath,

            Outputs.SSISExecutionCredentialResponse? executionCredential,

            Outputs.SSISLogLocationResponse? logLocation,

            object? loggingLevel,

            ImmutableDictionary<string, ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>>? packageConnectionManagers,

            Outputs.SSISPackageLocationResponse packageLocation,

            ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>? packageParameters,

            ImmutableDictionary<string, ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>>? projectConnectionManagers,

            ImmutableDictionary<string, Outputs.SSISExecutionParameterResponse>? projectParameters,

            ImmutableDictionary<string, Outputs.SSISPropertyOverrideResponse>? propertyOverrides,

            object? runtime)
        {
            ConnectVia = connectVia;
            EnvironmentPath = environmentPath;
            ExecutionCredential = executionCredential;
            LogLocation = logLocation;
            LoggingLevel = loggingLevel;
            PackageConnectionManagers = packageConnectionManagers;
            PackageLocation = packageLocation;
            PackageParameters = packageParameters;
            ProjectConnectionManagers = projectConnectionManagers;
            ProjectParameters = projectParameters;
            PropertyOverrides = propertyOverrides;
            Runtime = runtime;
        }
    }
}
