// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataFactory.Outputs
{

    [OutputType]
    public sealed class PipelineResponse
    {
        /// <summary>
        /// List of activities in pipeline.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityResponse> Activities;
        /// <summary>
        /// List of tags that can be used for describing the Pipeline.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, string>> Annotations;
        /// <summary>
        /// The max number of concurrent runs for the pipeline.
        /// </summary>
        public readonly int? Concurrency;
        /// <summary>
        /// The description of the pipeline.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
        /// </summary>
        public readonly Outputs.PipelineResponseProperties? Folder;
        /// <summary>
        /// List of parameters for pipeline.
        /// </summary>
        public readonly Outputs.ParameterDefinitionSpecificationResponse? Parameters;
        /// <summary>
        /// Dimensions emitted by Pipeline.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? RunDimensions;
        /// <summary>
        /// List of variables for pipeline.
        /// </summary>
        public readonly Outputs.VariableDefinitionSpecificationResponse? Variables;

        [OutputConstructor]
        private PipelineResponse(
            ImmutableArray<Outputs.ActivityResponse> activities,

            ImmutableArray<ImmutableDictionary<string, string>> annotations,

            int? concurrency,

            string? description,

            Outputs.PipelineResponseProperties? folder,

            Outputs.ParameterDefinitionSpecificationResponse? parameters,

            ImmutableDictionary<string, string>? runDimensions,

            Outputs.VariableDefinitionSpecificationResponse? variables)
        {
            Activities = activities;
            Annotations = annotations;
            Concurrency = concurrency;
            Description = description;
            Folder = folder;
            Parameters = parameters;
            RunDimensions = runDimensions;
            Variables = variables;
        }
    }
}
