// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Execute data flow activity properties.
    /// </summary>
    [OutputType]
    public sealed class ExecuteDataFlowActivityTypePropertiesResponse
    {
        /// <summary>
        /// Compute properties for data flow activity.
        /// </summary>
        public readonly Outputs.ExecuteDataFlowActivityTypePropertiesResponseCompute? Compute;
        /// <summary>
        /// Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)
        /// </summary>
        public readonly object? ContinueOnError;
        /// <summary>
        /// Data flow reference.
        /// </summary>
        public readonly Outputs.DataFlowReferenceResponse DataFlow;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? IntegrationRuntime;
        /// <summary>
        /// Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)
        /// </summary>
        public readonly object? RunConcurrently;
        /// <summary>
        /// Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)
        /// </summary>
        public readonly object? SourceStagingConcurrency;
        /// <summary>
        /// Staging info for execute data flow activity.
        /// </summary>
        public readonly Outputs.DataFlowStagingInfoResponse? Staging;
        /// <summary>
        /// Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)
        /// </summary>
        public readonly object? TraceLevel;

        [OutputConstructor]
        private ExecuteDataFlowActivityTypePropertiesResponse(
            Outputs.ExecuteDataFlowActivityTypePropertiesResponseCompute? compute,

            object? continueOnError,

            Outputs.DataFlowReferenceResponse dataFlow,

            Outputs.IntegrationRuntimeReferenceResponse? integrationRuntime,

            object? runConcurrently,

            object? sourceStagingConcurrency,

            Outputs.DataFlowStagingInfoResponse? staging,

            object? traceLevel)
        {
            Compute = compute;
            ContinueOnError = continueOnError;
            DataFlow = dataFlow;
            IntegrationRuntime = integrationRuntime;
            RunConcurrently = runConcurrently;
            SourceStagingConcurrency = sourceStagingConcurrency;
            Staging = staging;
            TraceLevel = traceLevel;
        }
    }
}
