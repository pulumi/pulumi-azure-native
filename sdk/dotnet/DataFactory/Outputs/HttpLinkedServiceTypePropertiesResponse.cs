// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Properties specific to this linked service type.
    /// </summary>
    [OutputType]
    public sealed class HttpLinkedServiceTypePropertiesResponse
    {
        /// <summary>
        /// The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
        /// </summary>
        public readonly object? AuthHeaders;
        /// <summary>
        /// The authentication type to be used to connect to the HTTP server.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? CertThumbprint;
        /// <summary>
        /// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EmbeddedCertData;
        /// <summary>
        /// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? EnableServerCertificateValidation;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EncryptedCredential;
        /// <summary>
        /// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? Password;
        /// <summary>
        /// The base URL of the HTTP endpoint, e.g. https://www.microsoft.com. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object Url;
        /// <summary>
        /// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? UserName;

        [OutputConstructor]
        private HttpLinkedServiceTypePropertiesResponse(
            object? authHeaders,

            string? authenticationType,

            object? certThumbprint,

            object? embeddedCertData,

            object? enableServerCertificateValidation,

            object? encryptedCredential,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? password,

            object url,

            object? userName)
        {
            AuthHeaders = authHeaders;
            AuthenticationType = authenticationType;
            CertThumbprint = certThumbprint;
            EmbeddedCertData = embeddedCertData;
            EnableServerCertificateValidation = enableServerCertificateValidation;
            EncryptedCredential = encryptedCredential;
            Password = password;
            Url = url;
            UserName = userName;
        }
    }
}
