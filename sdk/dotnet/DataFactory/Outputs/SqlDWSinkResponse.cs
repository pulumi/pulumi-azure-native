// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// A copy activity SQL Data Warehouse sink.
    /// </summary>
    [OutputType]
    public sealed class SqlDWSinkResponse
    {
        /// <summary>
        /// Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? AllowCopyCommand;
        /// <summary>
        /// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? AllowPolyBase;
        /// <summary>
        /// Specifies Copy Command related settings when allowCopyCommand is true.
        /// </summary>
        public readonly Outputs.DWCopyCommandSettingsResponse? CopyCommandSettings;
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DisableMetricsCollection;
        /// <summary>
        /// The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxConcurrentConnections;
        /// <summary>
        /// Specifies PolyBase-related settings when allowPolyBase is true.
        /// </summary>
        public readonly Outputs.PolybaseSettingsResponse? PolyBaseSettings;
        /// <summary>
        /// SQL pre-copy script. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? PreCopyScript;
        /// <summary>
        /// Sink retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? SinkRetryCount;
        /// <summary>
        /// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? SinkRetryWait;
        /// <summary>
        /// Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? SqlWriterUseTableLock;
        /// <summary>
        /// The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? TableOption;
        /// <summary>
        /// Copy sink type.
        /// Expected value is 'SqlDWSink'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// SQL DW upsert settings.
        /// </summary>
        public readonly Outputs.SqlDWUpsertSettingsResponse? UpsertSettings;
        /// <summary>
        /// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        public readonly object? WriteBatchSize;
        /// <summary>
        /// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? WriteBatchTimeout;
        /// <summary>
        /// Write behavior when copying data into azure SQL DW. Type: SqlDWWriteBehaviorEnum (or Expression with resultType SqlDWWriteBehaviorEnum)
        /// </summary>
        public readonly object? WriteBehavior;

        [OutputConstructor]
        private SqlDWSinkResponse(
            object? allowCopyCommand,

            object? allowPolyBase,

            Outputs.DWCopyCommandSettingsResponse? copyCommandSettings,

            object? disableMetricsCollection,

            object? maxConcurrentConnections,

            Outputs.PolybaseSettingsResponse? polyBaseSettings,

            object? preCopyScript,

            object? sinkRetryCount,

            object? sinkRetryWait,

            object? sqlWriterUseTableLock,

            object? tableOption,

            string type,

            Outputs.SqlDWUpsertSettingsResponse? upsertSettings,

            object? writeBatchSize,

            object? writeBatchTimeout,

            object? writeBehavior)
        {
            AllowCopyCommand = allowCopyCommand;
            AllowPolyBase = allowPolyBase;
            CopyCommandSettings = copyCommandSettings;
            DisableMetricsCollection = disableMetricsCollection;
            MaxConcurrentConnections = maxConcurrentConnections;
            PolyBaseSettings = polyBaseSettings;
            PreCopyScript = preCopyScript;
            SinkRetryCount = sinkRetryCount;
            SinkRetryWait = sinkRetryWait;
            SqlWriterUseTableLock = sqlWriterUseTableLock;
            TableOption = tableOption;
            Type = type;
            UpsertSettings = upsertSettings;
            WriteBatchSize = writeBatchSize;
            WriteBatchTimeout = writeBatchTimeout;
            WriteBehavior = writeBehavior;
        }
    }
}
