// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Outputs
{

    [OutputType]
    public sealed class HDInsightHiveActivityResponse
    {
        /// <summary>
        /// User specified arguments to HDInsightActivity.
        /// </summary>
        public readonly ImmutableArray<object> Arguments;
        /// <summary>
        /// Allows user to specify defines for Hive job request.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Defines;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Debug info option.
        /// </summary>
        public readonly string? GetDebugInfo;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Query timeout value (in minutes).  Effective when the HDInsight cluster is with ESP (Enterprise Security Package)
        /// </summary>
        public readonly int? QueryTimeout;
        /// <summary>
        /// Script linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? ScriptLinkedService;
        /// <summary>
        /// Script path. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ScriptPath;
        /// <summary>
        /// Storage linked service references.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkedServiceReferenceResponse> StorageLinkedServices;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;
        /// <summary>
        /// User specified arguments under hivevar namespace.
        /// </summary>
        public readonly ImmutableArray<object> Variables;

        [OutputConstructor]
        private HDInsightHiveActivityResponse(
            ImmutableArray<object> arguments,

            ImmutableDictionary<string, object>? defines,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            string? getDebugInfo,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            Outputs.ActivityPolicyResponse? policy,

            int? queryTimeout,

            Outputs.LinkedServiceReferenceResponse? scriptLinkedService,

            object? scriptPath,

            ImmutableArray<Outputs.LinkedServiceReferenceResponse> storageLinkedServices,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties,

            ImmutableArray<object> variables)
        {
            Arguments = arguments;
            Defines = defines;
            DependsOn = dependsOn;
            Description = description;
            GetDebugInfo = getDebugInfo;
            LinkedServiceName = linkedServiceName;
            Name = name;
            Policy = policy;
            QueryTimeout = queryTimeout;
            ScriptLinkedService = scriptLinkedService;
            ScriptPath = scriptPath;
            StorageLinkedServices = storageLinkedServices;
            Type = type;
            UserProperties = userProperties;
            Variables = variables;
        }
    }
}
