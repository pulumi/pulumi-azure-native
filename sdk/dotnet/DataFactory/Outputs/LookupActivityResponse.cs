// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Lookup activity.
    /// </summary>
    [OutputType]
    public sealed class LookupActivityResponse
    {
        /// <summary>
        /// Lookup activity dataset reference.
        /// </summary>
        public readonly Outputs.DatasetReferenceResponse Dataset;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? FirstRowOnly;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        public readonly string? OnInactiveMarkAs;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Dataset-specific source properties, same as copy activity source.
        /// </summary>
        public readonly object Source;
        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Lookup'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private LookupActivityResponse(
            Outputs.DatasetReferenceResponse dataset,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            object? firstRowOnly,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            string? onInactiveMarkAs,

            Outputs.ActivityPolicyResponse? policy,

            object source,

            string? state,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            Dataset = dataset;
            DependsOn = dependsOn;
            Description = description;
            FirstRowOnly = firstRowOnly;
            LinkedServiceName = linkedServiceName;
            Name = name;
            OnInactiveMarkAs = onInactiveMarkAs;
            Policy = policy;
            Source = source;
            State = state;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
