// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Azure SQL Managed Instance linked service properties.
    /// </summary>
    [OutputType]
    public sealed class AzureSqlMILinkedServiceTypePropertiesResponse
    {
        /// <summary>
        /// Sql always encrypted properties.
        /// </summary>
        public readonly Outputs.SqlAlwaysEncryptedPropertiesResponse? AlwaysEncryptedSettings;
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AzureCloudType;
        /// <summary>
        /// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object ConnectionString;
        /// <summary>
        /// The credential reference containing authentication information.
        /// </summary>
        public readonly Outputs.CredentialReferenceResponse? Credential;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EncryptedCredential;
        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? Password;
        /// <summary>
        /// The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalId;
        /// <summary>
        /// The key of the service principal used to authenticate against Azure SQL Managed Instance.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalKey;
        /// <summary>
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Tenant;

        [OutputConstructor]
        private AzureSqlMILinkedServiceTypePropertiesResponse(
            Outputs.SqlAlwaysEncryptedPropertiesResponse? alwaysEncryptedSettings,

            object? azureCloudType,

            object connectionString,

            Outputs.CredentialReferenceResponse? credential,

            object? encryptedCredential,

            Outputs.AzureKeyVaultSecretReferenceResponse? password,

            object? servicePrincipalId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalKey,

            object? tenant)
        {
            AlwaysEncryptedSettings = alwaysEncryptedSettings;
            AzureCloudType = azureCloudType;
            ConnectionString = connectionString;
            Credential = credential;
            EncryptedCredential = encryptedCredential;
            Password = password;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
        }
    }
}
