// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Azure Data Lake Storage Gen2 linked service properties.
    /// </summary>
    [OutputType]
    public sealed class AzureBlobFSLinkedServiceTypePropertiesResponse
    {
        /// <summary>
        /// Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AccountKey;
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AzureCloudType;
        /// <summary>
        /// The credential reference containing authentication information.
        /// </summary>
        public readonly Outputs.CredentialReferenceResponse? Credential;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? EncryptedCredential;
        /// <summary>
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? SasToken;
        /// <summary>
        /// SAS URI of the Azure Data Lake Storage Gen2 service. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? SasUri;
        /// <summary>
        /// The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalCredential;
        /// <summary>
        /// The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalCredentialType;
        /// <summary>
        /// The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalId;
        /// <summary>
        /// The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalKey;
        /// <summary>
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Tenant;
        /// <summary>
        /// Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Url;

        [OutputConstructor]
        private AzureBlobFSLinkedServiceTypePropertiesResponse(
            object? accountKey,

            object? azureCloudType,

            Outputs.CredentialReferenceResponse? credential,

            object? encryptedCredential,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? sasToken,

            object? sasUri,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalCredential,

            object? servicePrincipalCredentialType,

            object? servicePrincipalId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalKey,

            object? tenant,

            object? url)
        {
            AccountKey = accountKey;
            AzureCloudType = azureCloudType;
            Credential = credential;
            EncryptedCredential = encryptedCredential;
            SasToken = sasToken;
            SasUri = sasUri;
            ServicePrincipalCredential = servicePrincipalCredential;
            ServicePrincipalCredentialType = servicePrincipalCredentialType;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
            Url = url;
        }
    }
}
