// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// A copy activity source for SAP Business Warehouse Open Hub Destination source.
    /// </summary>
    [OutputType]
    public sealed class SapOpenHubSourceResponse
    {
        /// <summary>
        /// Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
        /// </summary>
        public readonly object? AdditionalColumns;
        /// <summary>
        /// The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
        /// </summary>
        public readonly object? BaseRequestId;
        /// <summary>
        /// Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? CustomRfcReadTableFunctionModule;
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DisableMetricsCollection;
        /// <summary>
        /// Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? ExcludeLastRequest;
        /// <summary>
        /// The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxConcurrentConnections;
        /// <summary>
        /// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? QueryTimeout;
        /// <summary>
        /// The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? SapDataColumnDelimiter;
        /// <summary>
        /// Source retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? SourceRetryCount;
        /// <summary>
        /// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? SourceRetryWait;
        /// <summary>
        /// Copy source type.
        /// Expected value is 'SapOpenHubSource'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private SapOpenHubSourceResponse(
            object? additionalColumns,

            object? baseRequestId,

            object? customRfcReadTableFunctionModule,

            object? disableMetricsCollection,

            object? excludeLastRequest,

            object? maxConcurrentConnections,

            object? queryTimeout,

            object? sapDataColumnDelimiter,

            object? sourceRetryCount,

            object? sourceRetryWait,

            string type)
        {
            AdditionalColumns = additionalColumns;
            BaseRequestId = baseRequestId;
            CustomRfcReadTableFunctionModule = customRfcReadTableFunctionModule;
            DisableMetricsCollection = disableMetricsCollection;
            ExcludeLastRequest = excludeLastRequest;
            MaxConcurrentConnections = maxConcurrentConnections;
            QueryTimeout = queryTimeout;
            SapDataColumnDelimiter = sapDataColumnDelimiter;
            SourceRetryCount = sourceRetryCount;
            SourceRetryWait = sourceRetryWait;
            Type = type;
        }
    }
}
