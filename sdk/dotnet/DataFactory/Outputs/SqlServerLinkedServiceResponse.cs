// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// SQL Server linked service.
    /// </summary>
    [OutputType]
    public sealed class SqlServerLinkedServiceResponse
    {
        /// <summary>
        /// Sql always encrypted properties.
        /// </summary>
        public readonly Outputs.SqlAlwaysEncryptedPropertiesResponse? AlwaysEncryptedSettings;
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The application workload type when connecting to a server, used by recommended version. Possible values are ReadOnly and ReadWrite. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ApplicationIntent;
        /// <summary>
        /// The type used for authentication. Type: string.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// The default wait time (in seconds) before terminating the attempt to execute a command and generating an error, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? CommandTimeout;
        /// <summary>
        /// The number of re-connections attempted after identifying that there was an idle connection failure, used by recommended version. This must be an integer between 0 and 255. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? ConnectRetryCount;
        /// <summary>
        /// The amount of time (in seconds) between each re-connection attempt after identifying that there was an idle connection failure, used by recommended version. This must be an integer between 1 and 60. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? ConnectRetryInterval;
        /// <summary>
        /// The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? ConnectTimeout;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// The credential reference containing authentication information.
        /// </summary>
        public readonly Outputs.CredentialReferenceResponse? Credential;
        /// <summary>
        /// The name of the database, used by recommended version. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Database;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicate whether TLS encryption is required for all data sent between the client and server, used by recommended version. Possible values are true/yes/mandatory, false/no/optional and strict. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Encrypt;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// The name or address of the partner server to connect to if the primary server is down, used by recommended version. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? FailoverPartner;
        /// <summary>
        /// The host name to use when validating the server certificate for the connection. When not specified, the server name from the Data Source is used for certificate validation, used by recommended version. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? HostNameInCertificate;
        /// <summary>
        /// Indicate whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true), used by recommended version. Type: Boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? IntegratedSecurity;
        /// <summary>
        /// The minimum time, in seconds, for the connection to live in the connection pool before being destroyed, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? LoadBalanceTimeout;
        /// <summary>
        /// The maximum number of connections allowed in the connection pool for this specific connection string, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxPoolSize;
        /// <summary>
        /// The minimum number of connections allowed in the connection pool for this specific connection string, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MinPoolSize;
        /// <summary>
        /// If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server, used by recommended version. Type: Boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? MultiSubnetFailover;
        /// <summary>
        /// When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection, used by recommended version. Type: Boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? MultipleActiveResultSets;
        /// <summary>
        /// The size in bytes of the network packets used to communicate with an instance of server, used by recommended version. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? PacketSize;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The on-premises Windows authentication password.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? Password;
        /// <summary>
        /// Indicate whether the connection will be pooled or explicitly opened every time that the connection is requested, used by recommended version. Type: Boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? Pooling;
        /// <summary>
        /// The name or network address of the instance of SQL Server to which to connect, used by recommended version. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Server;
        /// <summary>
        /// Indicate whether the channel will be encrypted while bypassing walking the certificate chain to validate trust, used by recommended version. Type: Boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? TrustServerCertificate;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'SqlServer'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? UserName;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private SqlServerLinkedServiceResponse(
            Outputs.SqlAlwaysEncryptedPropertiesResponse? alwaysEncryptedSettings,

            ImmutableArray<object> annotations,

            object? applicationIntent,

            string? authenticationType,

            object? commandTimeout,

            object? connectRetryCount,

            object? connectRetryInterval,

            object? connectTimeout,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            object? connectionString,

            Outputs.CredentialReferenceResponse? credential,

            object? database,

            string? description,

            object? encrypt,

            string? encryptedCredential,

            object? failoverPartner,

            object? hostNameInCertificate,

            object? integratedSecurity,

            object? loadBalanceTimeout,

            object? maxPoolSize,

            object? minPoolSize,

            object? multiSubnetFailover,

            object? multipleActiveResultSets,

            object? packetSize,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? password,

            object? pooling,

            object? server,

            object? trustServerCertificate,

            string type,

            object? userName,

            string? version)
        {
            AlwaysEncryptedSettings = alwaysEncryptedSettings;
            Annotations = annotations;
            ApplicationIntent = applicationIntent;
            AuthenticationType = authenticationType;
            CommandTimeout = commandTimeout;
            ConnectRetryCount = connectRetryCount;
            ConnectRetryInterval = connectRetryInterval;
            ConnectTimeout = connectTimeout;
            ConnectVia = connectVia;
            ConnectionString = connectionString;
            Credential = credential;
            Database = database;
            Description = description;
            Encrypt = encrypt;
            EncryptedCredential = encryptedCredential;
            FailoverPartner = failoverPartner;
            HostNameInCertificate = hostNameInCertificate;
            IntegratedSecurity = integratedSecurity;
            LoadBalanceTimeout = loadBalanceTimeout;
            MaxPoolSize = maxPoolSize;
            MinPoolSize = minPoolSize;
            MultiSubnetFailover = multiSubnetFailover;
            MultipleActiveResultSets = multipleActiveResultSets;
            PacketSize = packetSize;
            Parameters = parameters;
            Password = password;
            Pooling = pooling;
            Server = server;
            TrustServerCertificate = trustServerCertificate;
            Type = type;
            UserName = userName;
            Version = version;
        }
    }
}
