// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Execute spark job activity.
    /// </summary>
    [OutputType]
    public sealed class SynapseSparkJobDefinitionActivityResponse
    {
        /// <summary>
        /// User specified arguments to SynapseSparkJobDefinitionActivity.
        /// </summary>
        public readonly ImmutableArray<object> Arguments;
        /// <summary>
        /// The fully-qualified identifier or the main class that is in the main definition file, which will override the 'className' of the spark job definition you provide. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ClassName;
        /// <summary>
        /// Spark configuration properties, which will override the 'conf' of the spark job definition you provide.
        /// </summary>
        public readonly object? Conf;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Number of core and memory to be used for driver allocated in the specified Spark pool for the job, which will be used for overriding 'driverCores' and 'driverMemory' of the spark job definition you provide. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? DriverSize;
        /// <summary>
        /// Number of core and memory to be used for executors allocated in the specified Spark pool for the job, which will be used for overriding 'executorCores' and 'executorMemory' of the spark job definition you provide. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ExecutorSize;
        /// <summary>
        /// The main file used for the job, which will override the 'file' of the spark job definition you provide. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? File;
        /// <summary>
        /// Additional files used for reference in the main definition file, which will override the 'files' of the spark job definition you provide.
        /// </summary>
        public readonly ImmutableArray<object> Files;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of executors to launch for this job, which will override the 'numExecutors' of the spark job definition you provide.
        /// </summary>
        public readonly int? NumExecutors;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Synapse spark job reference.
        /// </summary>
        public readonly Outputs.SynapseSparkJobReferenceResponse SparkJob;
        /// <summary>
        /// The name of the big data pool which will be used to execute the spark batch job, which will override the 'targetBigDataPool' of the spark job definition you provide.
        /// </summary>
        public readonly Outputs.BigDataPoolParametrizationReferenceResponse? TargetBigDataPool;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'SparkJob'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private SynapseSparkJobDefinitionActivityResponse(
            ImmutableArray<object> arguments,

            object? className,

            object? conf,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            object? driverSize,

            object? executorSize,

            object? file,

            ImmutableArray<object> files,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            int? numExecutors,

            Outputs.ActivityPolicyResponse? policy,

            Outputs.SynapseSparkJobReferenceResponse sparkJob,

            Outputs.BigDataPoolParametrizationReferenceResponse? targetBigDataPool,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            Arguments = arguments;
            ClassName = className;
            Conf = conf;
            DependsOn = dependsOn;
            Description = description;
            DriverSize = driverSize;
            ExecutorSize = executorSize;
            File = file;
            Files = files;
            LinkedServiceName = linkedServiceName;
            Name = name;
            NumExecutors = numExecutors;
            Policy = policy;
            SparkJob = sparkJob;
            TargetBigDataPool = targetBigDataPool;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
