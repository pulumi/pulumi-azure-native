// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Linked service for MySQL data source.
    /// </summary>
    [OutputType]
    public sealed class MySqlLinkedServiceResponse
    {
        /// <summary>
        /// This allows the special “zero” date value 0000-00-00 to be retrieved from the database. Type: boolean.
        /// </summary>
        public readonly object? AllowZeroDateTime;
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error. Type: integer.
        /// </summary>
        public readonly object? ConnectionTimeout;
        /// <summary>
        /// True to return DateTime.MinValue for date or datetime columns that have disallowed values. Type: boolean.
        /// </summary>
        public readonly object? ConvertZeroDateTime;
        /// <summary>
        /// Database name for connection. Type: string.
        /// </summary>
        public readonly object? Database;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The version of the MySQL driver. Type: string. V1 or empty for legacy driver, V2 for new driver. V1 can support connection string and property bag, V2 can only support connection string.
        /// </summary>
        public readonly object? DriverVersion;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// Determines which column type (if any) should be read as a GUID. Type: string. None: No column types are automatically read as a Guid; Char36: All CHAR(36) columns are read/written as a Guid using lowercase hex with hyphens, which matches UUID.
        /// </summary>
        public readonly object? GuidFormat;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? Password;
        /// <summary>
        /// The port for the connection. Type: integer.
        /// </summary>
        public readonly object? Port;
        /// <summary>
        /// Server name for connection. Type: string.
        /// </summary>
        public readonly object? Server;
        /// <summary>
        /// The path to the client’s SSL certificate file in PEM format. SslKey must also be specified. Type: string.
        /// </summary>
        public readonly object? SslCert;
        /// <summary>
        /// The path to the client’s SSL private key in PEM format. SslCert must also be specified. Type: string.
        /// </summary>
        public readonly object? SslKey;
        /// <summary>
        /// SSL mode for connection. Type: integer. 0: disable, 1: prefer, 2: require, 3: verify-ca, 4: verify-full.
        /// </summary>
        public readonly object? SslMode;
        /// <summary>
        /// When set to true, TINYINT(1) values are returned as booleans. Type: bool.
        /// </summary>
        public readonly object? TreatTinyAsBoolean;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'MySql'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Use system trust store for connection. Type: integer. 0: enable, 1: disable.
        /// </summary>
        public readonly object? UseSystemTrustStore;
        /// <summary>
        /// Username for authentication. Type: string.
        /// </summary>
        public readonly object? Username;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private MySqlLinkedServiceResponse(
            object? allowZeroDateTime,

            ImmutableArray<object> annotations,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            object? connectionString,

            object? connectionTimeout,

            object? convertZeroDateTime,

            object? database,

            string? description,

            object? driverVersion,

            string? encryptedCredential,

            object? guidFormat,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Outputs.AzureKeyVaultSecretReferenceResponse? password,

            object? port,

            object? server,

            object? sslCert,

            object? sslKey,

            object? sslMode,

            object? treatTinyAsBoolean,

            string type,

            object? useSystemTrustStore,

            object? username,

            string? version)
        {
            AllowZeroDateTime = allowZeroDateTime;
            Annotations = annotations;
            ConnectVia = connectVia;
            ConnectionString = connectionString;
            ConnectionTimeout = connectionTimeout;
            ConvertZeroDateTime = convertZeroDateTime;
            Database = database;
            Description = description;
            DriverVersion = driverVersion;
            EncryptedCredential = encryptedCredential;
            GuidFormat = guidFormat;
            Parameters = parameters;
            Password = password;
            Port = port;
            Server = server;
            SslCert = sslCert;
            SslKey = sslKey;
            SslMode = sslMode;
            TreatTinyAsBoolean = treatTinyAsBoolean;
            Type = type;
            UseSystemTrustStore = useSystemTrustStore;
            Username = username;
            Version = version;
        }
    }
}
