// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.Outputs
{

    /// <summary>
    /// Script activity type.
    /// </summary>
    [OutputType]
    public sealed class ScriptActivityResponse
    {
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse LinkedServiceName;
        /// <summary>
        /// Log settings of script activity.
        /// </summary>
        public readonly Outputs.ScriptActivityTypePropertiesResponseLogSettings? LogSettings;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// ScriptBlock execution timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? ScriptBlockExecutionTimeout;
        /// <summary>
        /// Array of script blocks. Type: array.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScriptActivityScriptBlockResponse> Scripts;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Script'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private ScriptActivityResponse(
            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            Outputs.LinkedServiceReferenceResponse linkedServiceName,

            Outputs.ScriptActivityTypePropertiesResponseLogSettings? logSettings,

            string name,

            Outputs.ActivityPolicyResponse? policy,

            object? scriptBlockExecutionTimeout,

            ImmutableArray<Outputs.ScriptActivityScriptBlockResponse> scripts,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            DependsOn = dependsOn;
            Description = description;
            LinkedServiceName = linkedServiceName;
            LogSettings = logSettings;
            Name = name;
            Policy = policy;
            ScriptBlockExecutionTimeout = scriptBlockExecutionTimeout;
            Scripts = scripts;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
