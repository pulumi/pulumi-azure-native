// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Outputs
{

    [OutputType]
    public sealed class RestServiceLinkedServiceResponse
    {
        /// <summary>
        /// The resource you are requesting authorization to use.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AadResourceId;
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> Annotations;
        /// <summary>
        /// Type of authentication used to connect to the REST service.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AzureCloudType;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly ImmutableDictionary<string, object>? EnableServerCertificateValidation;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly ImmutableDictionary<string, object>? EncryptedCredential;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The password used in Basic authentication type.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? Password;
        /// <summary>
        /// The application's client ID used in AadServicePrincipal authentication type.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ServicePrincipalId;
        /// <summary>
        /// The application's key used in AadServicePrincipal authentication type.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalKey;
        /// <summary>
        /// The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tenant;
        /// <summary>
        /// Type of linked service.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The base URL of the REST service.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Url;
        /// <summary>
        /// The user name used in Basic authentication type.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? UserName;

        [OutputConstructor]
        private RestServiceLinkedServiceResponse(
            ImmutableDictionary<string, object>? aadResourceId,

            ImmutableArray<ImmutableDictionary<string, object>> annotations,

            string authenticationType,

            ImmutableDictionary<string, object>? azureCloudType,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            string? description,

            ImmutableDictionary<string, object>? enableServerCertificateValidation,

            ImmutableDictionary<string, object>? encryptedCredential,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? password,

            ImmutableDictionary<string, object>? servicePrincipalId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalKey,

            ImmutableDictionary<string, object>? tenant,

            string type,

            ImmutableDictionary<string, object> url,

            ImmutableDictionary<string, object>? userName)
        {
            AadResourceId = aadResourceId;
            Annotations = annotations;
            AuthenticationType = authenticationType;
            AzureCloudType = azureCloudType;
            ConnectVia = connectVia;
            Description = description;
            EnableServerCertificateValidation = enableServerCertificateValidation;
            EncryptedCredential = encryptedCredential;
            Parameters = parameters;
            Password = password;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
            Type = type;
            Url = url;
            UserName = userName;
        }
    }
}
