// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Outputs
{

    [OutputType]
    public sealed class DataLakeAnalyticsUSQLActivityInvokeResponseResult
    {
        /// <summary>
        /// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? CompilationMode;
        /// <summary>
        /// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
        /// </summary>
        public readonly object? DegreeOfParallelism;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceInvokeResponseResult? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Parameters for U-SQL job request.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Parameters;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyInvokeResponseResult? Policy;
        /// <summary>
        /// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
        /// </summary>
        public readonly object? Priority;
        /// <summary>
        /// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? RuntimeVersion;
        /// <summary>
        /// Script linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceInvokeResponseResult ScriptLinkedService;
        /// <summary>
        /// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object ScriptPath;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyInvokeResponseResult> UserProperties;

        [OutputConstructor]
        private DataLakeAnalyticsUSQLActivityInvokeResponseResult(
            object? compilationMode,

            object? degreeOfParallelism,

            ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> dependsOn,

            string? description,

            Outputs.LinkedServiceReferenceInvokeResponseResult? linkedServiceName,

            string name,

            ImmutableDictionary<string, object>? parameters,

            Outputs.ActivityPolicyInvokeResponseResult? policy,

            object? priority,

            object? runtimeVersion,

            Outputs.LinkedServiceReferenceInvokeResponseResult scriptLinkedService,

            object scriptPath,

            string type,

            ImmutableArray<Outputs.UserPropertyInvokeResponseResult> userProperties)
        {
            CompilationMode = compilationMode;
            DegreeOfParallelism = degreeOfParallelism;
            DependsOn = dependsOn;
            Description = description;
            LinkedServiceName = linkedServiceName;
            Name = name;
            Parameters = parameters;
            Policy = policy;
            Priority = priority;
            RuntimeVersion = runtimeVersion;
            ScriptLinkedService = scriptLinkedService;
            ScriptPath = scriptPath;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
