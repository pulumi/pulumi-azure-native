// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Outputs
{

    [OutputType]
    public sealed class XmlReadSettingsResponse
    {
        /// <summary>
        /// Compression settings.
        /// </summary>
        public readonly object? CompressionProperties;
        /// <summary>
        /// Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DetectDataType;
        /// <summary>
        /// Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: "{"http://www.example.com/xml":"prefix"}" Type: object (or Expression with resultType object).
        /// </summary>
        public readonly object? NamespacePrefixes;
        /// <summary>
        /// Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? Namespaces;
        /// <summary>
        /// The read setting type.
        /// Expected value is 'XmlReadSettings'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ValidationMode;

        [OutputConstructor]
        private XmlReadSettingsResponse(
            object? compressionProperties,

            object? detectDataType,

            object? namespacePrefixes,

            object? namespaces,

            string type,

            object? validationMode)
        {
            CompressionProperties = compressionProperties;
            DetectDataType = detectDataType;
            NamespacePrefixes = namespacePrefixes;
            Namespaces = namespaces;
            Type = type;
            ValidationMode = validationMode;
        }
    }
}
