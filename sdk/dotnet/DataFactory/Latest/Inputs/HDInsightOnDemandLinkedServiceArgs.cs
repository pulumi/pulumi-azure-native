// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Inputs
{

    /// <summary>
    /// HDInsight ondemand linked service.
    /// </summary>
    public sealed class HDInsightOnDemandLinkedServiceArgs : Pulumi.ResourceArgs
    {
        [Input("additionalLinkedServiceNames")]
        private InputList<Inputs.LinkedServiceReferenceArgs>? _additionalLinkedServiceNames;

        /// <summary>
        /// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
        /// </summary>
        public InputList<Inputs.LinkedServiceReferenceArgs> AdditionalLinkedServiceNames
        {
            get => _additionalLinkedServiceNames ?? (_additionalLinkedServiceNames = new InputList<Inputs.LinkedServiceReferenceArgs>());
            set => _additionalLinkedServiceNames = value;
        }

        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterNamePrefix")]
        public Input<object>? ClusterNamePrefix { get; set; }

        /// <summary>
        /// The password to access the cluster.
        /// </summary>
        [Input("clusterPassword")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClusterPassword { get; set; }

        /// <summary>
        /// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterResourceGroup", required: true)]
        public Input<object> ClusterResourceGroup { get; set; } = null!;

        /// <summary>
        /// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterSize", required: true)]
        public Input<object> ClusterSize { get; set; } = null!;

        /// <summary>
        /// The password to SSH remotely connect cluster’s node (for Linux).
        /// </summary>
        [Input("clusterSshPassword")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClusterSshPassword { get; set; }

        /// <summary>
        /// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterSshUserName")]
        public Input<object>? ClusterSshUserName { get; set; }

        /// <summary>
        /// The cluster type. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterType")]
        public Input<object>? ClusterType { get; set; }

        /// <summary>
        /// The username to access the cluster. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clusterUserName")]
        public Input<object>? ClusterUserName { get; set; }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        /// <summary>
        /// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
        /// </summary>
        [Input("coreConfiguration")]
        public Input<object>? CoreConfiguration { get; set; }

        /// <summary>
        /// Specifies the size of the data node for the HDInsight cluster.
        /// </summary>
        [Input("dataNodeSize")]
        public Input<object>? DataNodeSize { get; set; }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("encryptedCredential")]
        public Input<object>? EncryptedCredential { get; set; }

        /// <summary>
        /// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("hBaseConfiguration")]
        public Input<object>? HBaseConfiguration { get; set; }

        /// <summary>
        /// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
        /// </summary>
        [Input("hcatalogLinkedServiceName")]
        public Input<Inputs.LinkedServiceReferenceArgs>? HcatalogLinkedServiceName { get; set; }

        /// <summary>
        /// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("hdfsConfiguration")]
        public Input<object>? HdfsConfiguration { get; set; }

        /// <summary>
        /// Specifies the size of the head node for the HDInsight cluster.
        /// </summary>
        [Input("headNodeSize")]
        public Input<object>? HeadNodeSize { get; set; }

        /// <summary>
        /// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("hiveConfiguration")]
        public Input<object>? HiveConfiguration { get; set; }

        /// <summary>
        /// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("hostSubscriptionId", required: true)]
        public Input<object> HostSubscriptionId { get; set; } = null!;

        /// <summary>
        /// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
        /// </summary>
        [Input("linkedServiceName", required: true)]
        public Input<Inputs.LinkedServiceReferenceArgs> LinkedServiceName { get; set; } = null!;

        /// <summary>
        /// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("mapReduceConfiguration")]
        public Input<object>? MapReduceConfiguration { get; set; }

        /// <summary>
        /// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("oozieConfiguration")]
        public Input<object>? OozieConfiguration { get; set; }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        [Input("scriptActions")]
        private InputList<Inputs.ScriptActionArgs>? _scriptActions;

        /// <summary>
        /// Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&amp;bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
        /// </summary>
        public InputList<Inputs.ScriptActionArgs> ScriptActions
        {
            get => _scriptActions ?? (_scriptActions = new InputList<Inputs.ScriptActionArgs>());
            set => _scriptActions = value;
        }

        /// <summary>
        /// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<object>? ServicePrincipalId { get; set; }

        /// <summary>
        /// The key for the service principal id.
        /// </summary>
        [Input("servicePrincipalKey")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ServicePrincipalKey { get; set; }

        /// <summary>
        /// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("sparkVersion")]
        public Input<object>? SparkVersion { get; set; }

        /// <summary>
        /// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("stormConfiguration")]
        public Input<object>? StormConfiguration { get; set; }

        /// <summary>
        /// The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("subnetName")]
        public Input<object>? SubnetName { get; set; }

        /// <summary>
        /// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("tenant", required: true)]
        public Input<object> Tenant { get; set; } = null!;

        /// <summary>
        /// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("timeToLive", required: true)]
        public Input<object> TimeToLive { get; set; } = null!;

        /// <summary>
        /// Type of linked service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
        /// </summary>
        [Input("version", required: true)]
        public Input<object> Version { get; set; } = null!;

        /// <summary>
        /// The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<object>? VirtualNetworkId { get; set; }

        /// <summary>
        /// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
        /// </summary>
        [Input("yarnConfiguration")]
        public Input<object>? YarnConfiguration { get; set; }

        /// <summary>
        /// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
        /// </summary>
        [Input("zookeeperNodeSize")]
        public Input<object>? ZookeeperNodeSize { get; set; }

        public HDInsightOnDemandLinkedServiceArgs()
        {
        }
    }
}
