// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Inputs
{

    /// <summary>
    /// HDInsight ondemand linked service.
    /// </summary>
    public sealed class HDInsightOnDemandLinkedServiceArgs : Pulumi.ResourceArgs
    {
        [Input("additionalLinkedServiceNames")]
        private InputList<Inputs.LinkedServiceReferenceArgs>? _additionalLinkedServiceNames;

        /// <summary>
        /// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
        /// </summary>
        public InputList<Inputs.LinkedServiceReferenceArgs> AdditionalLinkedServiceNames
        {
            get => _additionalLinkedServiceNames ?? (_additionalLinkedServiceNames = new InputList<Inputs.LinkedServiceReferenceArgs>());
            set => _additionalLinkedServiceNames = value;
        }

        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        [Input("clusterNamePrefix")]
        private InputMap<object>? _clusterNamePrefix;

        /// <summary>
        /// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterNamePrefix
        {
            get => _clusterNamePrefix ?? (_clusterNamePrefix = new InputMap<object>());
            set => _clusterNamePrefix = value;
        }

        /// <summary>
        /// The password to access the cluster.
        /// </summary>
        [Input("clusterPassword")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClusterPassword { get; set; }

        [Input("clusterResourceGroup", required: true)]
        private InputMap<object>? _clusterResourceGroup;

        /// <summary>
        /// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterResourceGroup
        {
            get => _clusterResourceGroup ?? (_clusterResourceGroup = new InputMap<object>());
            set => _clusterResourceGroup = value;
        }

        [Input("clusterSize", required: true)]
        private InputMap<object>? _clusterSize;

        /// <summary>
        /// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterSize
        {
            get => _clusterSize ?? (_clusterSize = new InputMap<object>());
            set => _clusterSize = value;
        }

        /// <summary>
        /// The password to SSH remotely connect cluster’s node (for Linux).
        /// </summary>
        [Input("clusterSshPassword")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClusterSshPassword { get; set; }

        [Input("clusterSshUserName")]
        private InputMap<object>? _clusterSshUserName;

        /// <summary>
        /// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterSshUserName
        {
            get => _clusterSshUserName ?? (_clusterSshUserName = new InputMap<object>());
            set => _clusterSshUserName = value;
        }

        [Input("clusterType")]
        private InputMap<object>? _clusterType;

        /// <summary>
        /// The cluster type. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterType
        {
            get => _clusterType ?? (_clusterType = new InputMap<object>());
            set => _clusterType = value;
        }

        [Input("clusterUserName")]
        private InputMap<object>? _clusterUserName;

        /// <summary>
        /// The username to access the cluster. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClusterUserName
        {
            get => _clusterUserName ?? (_clusterUserName = new InputMap<object>());
            set => _clusterUserName = value;
        }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        [Input("coreConfiguration")]
        private InputMap<object>? _coreConfiguration;

        /// <summary>
        /// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
        /// </summary>
        public InputMap<object> CoreConfiguration
        {
            get => _coreConfiguration ?? (_coreConfiguration = new InputMap<object>());
            set => _coreConfiguration = value;
        }

        [Input("dataNodeSize")]
        private InputMap<object>? _dataNodeSize;

        /// <summary>
        /// Specifies the size of the data node for the HDInsight cluster.
        /// </summary>
        public InputMap<object> DataNodeSize
        {
            get => _dataNodeSize ?? (_dataNodeSize = new InputMap<object>());
            set => _dataNodeSize = value;
        }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encryptedCredential")]
        private InputMap<object>? _encryptedCredential;

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EncryptedCredential
        {
            get => _encryptedCredential ?? (_encryptedCredential = new InputMap<object>());
            set => _encryptedCredential = value;
        }

        [Input("hBaseConfiguration")]
        private InputMap<object>? _hBaseConfiguration;

        /// <summary>
        /// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> HBaseConfiguration
        {
            get => _hBaseConfiguration ?? (_hBaseConfiguration = new InputMap<object>());
            set => _hBaseConfiguration = value;
        }

        /// <summary>
        /// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
        /// </summary>
        [Input("hcatalogLinkedServiceName")]
        public Input<Inputs.LinkedServiceReferenceArgs>? HcatalogLinkedServiceName { get; set; }

        [Input("hdfsConfiguration")]
        private InputMap<object>? _hdfsConfiguration;

        /// <summary>
        /// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> HdfsConfiguration
        {
            get => _hdfsConfiguration ?? (_hdfsConfiguration = new InputMap<object>());
            set => _hdfsConfiguration = value;
        }

        [Input("headNodeSize")]
        private InputMap<object>? _headNodeSize;

        /// <summary>
        /// Specifies the size of the head node for the HDInsight cluster.
        /// </summary>
        public InputMap<object> HeadNodeSize
        {
            get => _headNodeSize ?? (_headNodeSize = new InputMap<object>());
            set => _headNodeSize = value;
        }

        [Input("hiveConfiguration")]
        private InputMap<object>? _hiveConfiguration;

        /// <summary>
        /// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> HiveConfiguration
        {
            get => _hiveConfiguration ?? (_hiveConfiguration = new InputMap<object>());
            set => _hiveConfiguration = value;
        }

        [Input("hostSubscriptionId", required: true)]
        private InputMap<object>? _hostSubscriptionId;

        /// <summary>
        /// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> HostSubscriptionId
        {
            get => _hostSubscriptionId ?? (_hostSubscriptionId = new InputMap<object>());
            set => _hostSubscriptionId = value;
        }

        /// <summary>
        /// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
        /// </summary>
        [Input("linkedServiceName", required: true)]
        public Input<Inputs.LinkedServiceReferenceArgs> LinkedServiceName { get; set; } = null!;

        [Input("mapReduceConfiguration")]
        private InputMap<object>? _mapReduceConfiguration;

        /// <summary>
        /// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> MapReduceConfiguration
        {
            get => _mapReduceConfiguration ?? (_mapReduceConfiguration = new InputMap<object>());
            set => _mapReduceConfiguration = value;
        }

        [Input("oozieConfiguration")]
        private InputMap<object>? _oozieConfiguration;

        /// <summary>
        /// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> OozieConfiguration
        {
            get => _oozieConfiguration ?? (_oozieConfiguration = new InputMap<object>());
            set => _oozieConfiguration = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        [Input("scriptActions")]
        private InputList<Inputs.ScriptActionArgs>? _scriptActions;

        /// <summary>
        /// Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&amp;bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
        /// </summary>
        public InputList<Inputs.ScriptActionArgs> ScriptActions
        {
            get => _scriptActions ?? (_scriptActions = new InputList<Inputs.ScriptActionArgs>());
            set => _scriptActions = value;
        }

        [Input("servicePrincipalId")]
        private InputMap<object>? _servicePrincipalId;

        /// <summary>
        /// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ServicePrincipalId
        {
            get => _servicePrincipalId ?? (_servicePrincipalId = new InputMap<object>());
            set => _servicePrincipalId = value;
        }

        /// <summary>
        /// The key for the service principal id.
        /// </summary>
        [Input("servicePrincipalKey")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ServicePrincipalKey { get; set; }

        [Input("sparkVersion")]
        private InputMap<object>? _sparkVersion;

        /// <summary>
        /// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SparkVersion
        {
            get => _sparkVersion ?? (_sparkVersion = new InputMap<object>());
            set => _sparkVersion = value;
        }

        [Input("stormConfiguration")]
        private InputMap<object>? _stormConfiguration;

        /// <summary>
        /// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> StormConfiguration
        {
            get => _stormConfiguration ?? (_stormConfiguration = new InputMap<object>());
            set => _stormConfiguration = value;
        }

        [Input("subnetName")]
        private InputMap<object>? _subnetName;

        /// <summary>
        /// The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SubnetName
        {
            get => _subnetName ?? (_subnetName = new InputMap<object>());
            set => _subnetName = value;
        }

        [Input("tenant", required: true)]
        private InputMap<object>? _tenant;

        /// <summary>
        /// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Tenant
        {
            get => _tenant ?? (_tenant = new InputMap<object>());
            set => _tenant = value;
        }

        [Input("timeToLive", required: true)]
        private InputMap<object>? _timeToLive;

        /// <summary>
        /// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> TimeToLive
        {
            get => _timeToLive ?? (_timeToLive = new InputMap<object>());
            set => _timeToLive = value;
        }

        /// <summary>
        /// Type of linked service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("version", required: true)]
        private InputMap<object>? _version;

        /// <summary>
        /// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Version
        {
            get => _version ?? (_version = new InputMap<object>());
            set => _version = value;
        }

        [Input("virtualNetworkId")]
        private InputMap<object>? _virtualNetworkId;

        /// <summary>
        /// The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> VirtualNetworkId
        {
            get => _virtualNetworkId ?? (_virtualNetworkId = new InputMap<object>());
            set => _virtualNetworkId = value;
        }

        [Input("yarnConfiguration")]
        private InputMap<object>? _yarnConfiguration;

        /// <summary>
        /// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
        /// </summary>
        public InputMap<object> YarnConfiguration
        {
            get => _yarnConfiguration ?? (_yarnConfiguration = new InputMap<object>());
            set => _yarnConfiguration = value;
        }

        [Input("zookeeperNodeSize")]
        private InputMap<object>? _zookeeperNodeSize;

        /// <summary>
        /// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
        /// </summary>
        public InputMap<object> ZookeeperNodeSize
        {
            get => _zookeeperNodeSize ?? (_zookeeperNodeSize = new InputMap<object>());
            set => _zookeeperNodeSize = value;
        }

        public HDInsightOnDemandLinkedServiceArgs()
        {
        }
    }
}
