// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Inputs
{

    /// <summary>
    /// Excel dataset.
    /// </summary>
    public sealed class ExcelDatasetArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the Dataset.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        /// <summary>
        /// The data compression method used for the json dataset.
        /// </summary>
        [Input("compression")]
        public InputUnion<Inputs.DatasetBZip2CompressionArgs, InputUnion<Inputs.DatasetDeflateCompressionArgs, InputUnion<Inputs.DatasetGZipCompressionArgs, InputUnion<Inputs.DatasetTarCompressionArgs, InputUnion<Inputs.DatasetTarGZipCompressionArgs, Inputs.DatasetZipDeflateCompressionArgs>>>>>? Compression { get; set; }

        /// <summary>
        /// Dataset description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("firstRowAsHeader")]
        private InputMap<object>? _firstRowAsHeader;

        /// <summary>
        /// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public InputMap<object> FirstRowAsHeader
        {
            get => _firstRowAsHeader ?? (_firstRowAsHeader = new InputMap<object>());
            set => _firstRowAsHeader = value;
        }

        /// <summary>
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// </summary>
        [Input("folder")]
        public Input<Inputs.DatasetFolderArgs>? Folder { get; set; }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedServiceName", required: true)]
        public Input<Inputs.LinkedServiceReferenceArgs> LinkedServiceName { get; set; } = null!;

        /// <summary>
        /// The location of the excel storage.
        /// </summary>
        [Input("location", required: true)]
        public InputUnion<Inputs.AmazonS3LocationArgs, InputUnion<Inputs.AzureBlobFSLocationArgs, InputUnion<Inputs.AzureBlobStorageLocationArgs, InputUnion<Inputs.AzureDataLakeStoreLocationArgs, InputUnion<Inputs.AzureFileStorageLocationArgs, InputUnion<Inputs.FileServerLocationArgs, InputUnion<Inputs.FtpServerLocationArgs, InputUnion<Inputs.GoogleCloudStorageLocationArgs, InputUnion<Inputs.HdfsLocationArgs, InputUnion<Inputs.HttpServerLocationArgs, Inputs.SftpLocationArgs>>>>>>>>>> Location { get; set; } = null!;

        [Input("nullValue")]
        private InputMap<object>? _nullValue;

        /// <summary>
        /// The null value string. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> NullValue
        {
            get => _nullValue ?? (_nullValue = new InputMap<object>());
            set => _nullValue = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for dataset.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        [Input("range")]
        private InputMap<object>? _range;

        /// <summary>
        /// The partial data of one sheet. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Range
        {
            get => _range ?? (_range = new InputMap<object>());
            set => _range = value;
        }

        [Input("schema")]
        private InputMap<object>? _schema;

        /// <summary>
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// </summary>
        public InputMap<object> Schema
        {
            get => _schema ?? (_schema = new InputMap<object>());
            set => _schema = value;
        }

        [Input("sheetName", required: true)]
        private InputMap<object>? _sheetName;

        /// <summary>
        /// The sheet of excel file. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SheetName
        {
            get => _sheetName ?? (_sheetName = new InputMap<object>());
            set => _sheetName = value;
        }

        [Input("structure")]
        private InputMap<object>? _structure;

        /// <summary>
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// </summary>
        public InputMap<object> Structure
        {
            get => _structure ?? (_structure = new InputMap<object>());
            set => _structure = value;
        }

        /// <summary>
        /// Type of dataset.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ExcelDatasetArgs()
        {
        }
    }
}
