// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Inputs
{

    /// <summary>
    /// SAP Table Linked Service.
    /// </summary>
    public sealed class SapTableLinkedServiceArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        [Input("clientId")]
        private InputMap<object>? _clientId;

        /// <summary>
        /// Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ClientId
        {
            get => _clientId ?? (_clientId = new InputMap<object>());
            set => _clientId = value;
        }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encryptedCredential")]
        private InputMap<object>? _encryptedCredential;

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EncryptedCredential
        {
            get => _encryptedCredential ?? (_encryptedCredential = new InputMap<object>());
            set => _encryptedCredential = value;
        }

        [Input("language")]
        private InputMap<object>? _language;

        /// <summary>
        /// Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Language
        {
            get => _language ?? (_language = new InputMap<object>());
            set => _language = value;
        }

        [Input("logonGroup")]
        private InputMap<object>? _logonGroup;

        /// <summary>
        /// The Logon Group for the SAP System. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> LogonGroup
        {
            get => _logonGroup ?? (_logonGroup = new InputMap<object>());
            set => _logonGroup = value;
        }

        [Input("messageServer")]
        private InputMap<object>? _messageServer;

        /// <summary>
        /// The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> MessageServer
        {
            get => _messageServer ?? (_messageServer = new InputMap<object>());
            set => _messageServer = value;
        }

        [Input("messageServerService")]
        private InputMap<object>? _messageServerService;

        /// <summary>
        /// The service name or port number of the Message Server. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> MessageServerService
        {
            get => _messageServerService ?? (_messageServerService = new InputMap<object>());
            set => _messageServerService = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Password to access the SAP server where the table is located.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        [Input("server")]
        private InputMap<object>? _server;

        /// <summary>
        /// Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Server
        {
            get => _server ?? (_server = new InputMap<object>());
            set => _server = value;
        }

        [Input("sncLibraryPath")]
        private InputMap<object>? _sncLibraryPath;

        /// <summary>
        /// External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SncLibraryPath
        {
            get => _sncLibraryPath ?? (_sncLibraryPath = new InputMap<object>());
            set => _sncLibraryPath = value;
        }

        [Input("sncMode")]
        private InputMap<object>? _sncMode;

        /// <summary>
        /// SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SncMode
        {
            get => _sncMode ?? (_sncMode = new InputMap<object>());
            set => _sncMode = value;
        }

        [Input("sncMyName")]
        private InputMap<object>? _sncMyName;

        /// <summary>
        /// Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SncMyName
        {
            get => _sncMyName ?? (_sncMyName = new InputMap<object>());
            set => _sncMyName = value;
        }

        [Input("sncPartnerName")]
        private InputMap<object>? _sncPartnerName;

        /// <summary>
        /// Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SncPartnerName
        {
            get => _sncPartnerName ?? (_sncPartnerName = new InputMap<object>());
            set => _sncPartnerName = value;
        }

        [Input("sncQop")]
        private InputMap<object>? _sncQop;

        /// <summary>
        /// SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SncQop
        {
            get => _sncQop ?? (_sncQop = new InputMap<object>());
            set => _sncQop = value;
        }

        [Input("systemId")]
        private InputMap<object>? _systemId;

        /// <summary>
        /// SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SystemId
        {
            get => _systemId ?? (_systemId = new InputMap<object>());
            set => _systemId = value;
        }

        [Input("systemNumber")]
        private InputMap<object>? _systemNumber;

        /// <summary>
        /// System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> SystemNumber
        {
            get => _systemNumber ?? (_systemNumber = new InputMap<object>());
            set => _systemNumber = value;
        }

        /// <summary>
        /// Type of linked service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("userName")]
        private InputMap<object>? _userName;

        /// <summary>
        /// Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> UserName
        {
            get => _userName ?? (_userName = new InputMap<object>());
            set => _userName = value;
        }

        public SapTableLinkedServiceArgs()
        {
        }
    }
}
