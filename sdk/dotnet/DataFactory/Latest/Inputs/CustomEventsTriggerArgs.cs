// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.Latest.Inputs
{

    /// <summary>
    /// Trigger that runs every time a custom event is received.
    /// </summary>
    public sealed class CustomEventsTriggerArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the trigger.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Trigger description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("events", required: true)]
        private InputList<object>? _events;

        /// <summary>
        /// The list of event types that cause this trigger to fire.
        /// </summary>
        public InputList<object> Events
        {
            get => _events ?? (_events = new InputList<object>());
            set => _events = value;
        }

        [Input("pipelines")]
        private InputList<Inputs.TriggerPipelineReferenceArgs>? _pipelines;

        /// <summary>
        /// Pipelines that need to be started.
        /// </summary>
        public InputList<Inputs.TriggerPipelineReferenceArgs> Pipelines
        {
            get => _pipelines ?? (_pipelines = new InputList<Inputs.TriggerPipelineReferenceArgs>());
            set => _pipelines = value;
        }

        /// <summary>
        /// The ARM resource ID of the Azure Event Grid Topic.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
        /// </summary>
        [Input("subjectBeginsWith")]
        public Input<string>? SubjectBeginsWith { get; set; }

        /// <summary>
        /// The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
        /// </summary>
        [Input("subjectEndsWith")]
        public Input<string>? SubjectEndsWith { get; set; }

        /// <summary>
        /// Trigger type.
        /// Expected value is 'MultiplePipelineTrigger'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public CustomEventsTriggerArgs()
        {
        }
    }
}
