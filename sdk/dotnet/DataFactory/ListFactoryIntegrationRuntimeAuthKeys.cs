// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataFactory
{
    public static class ListFactoryIntegrationRuntimeAuthKeys
    {
        public static Task<ListFactoryIntegrationRuntimeAuthKeysResult> InvokeAsync(ListFactoryIntegrationRuntimeAuthKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListFactoryIntegrationRuntimeAuthKeysResult>("azurerm:datafactory:listFactoryIntegrationRuntimeAuthKeys", args ?? new ListFactoryIntegrationRuntimeAuthKeysArgs(), options.WithVersion());
    }


    public sealed class ListFactoryIntegrationRuntimeAuthKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public string FactoryName { get; set; } = null!;

        /// <summary>
        /// The integration runtime name.
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public string IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListFactoryIntegrationRuntimeAuthKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListFactoryIntegrationRuntimeAuthKeysResult
    {
        /// <summary>
        /// The primary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey1;
        /// <summary>
        /// The secondary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey2;

        [OutputConstructor]
        private ListFactoryIntegrationRuntimeAuthKeysResult(
            string? authKey1,

            string? authKey2)
        {
            AuthKey1 = authKey1;
            AuthKey2 = authKey2;
        }
    }
}
