// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Xml read settings.
    /// </summary>
    public sealed class XmlReadSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compression settings.
        /// </summary>
        [Input("compressionProperties")]
        public Input<object>? CompressionProperties { get; set; }

        /// <summary>
        /// Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Input("detectDataType")]
        public Input<object>? DetectDataType { get; set; }

        /// <summary>
        /// Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: "{"http://www.example.com/xml":"prefix"}" Type: object (or Expression with resultType object).
        /// </summary>
        [Input("namespacePrefixes")]
        public Input<object>? NamespacePrefixes { get; set; }

        /// <summary>
        /// Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Input("namespaces")]
        public Input<object>? Namespaces { get; set; }

        /// <summary>
        /// The read setting type.
        /// Expected value is 'XmlReadSettings'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("validationMode")]
        public Input<object>? ValidationMode { get; set; }

        public XmlReadSettingsArgs()
        {
        }
    }
}
