// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Switch activity properties.
    /// </summary>
    public sealed class SwitchActivityTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("cases")]
        private InputList<Inputs.SwitchCaseArgs>? _cases;

        /// <summary>
        /// List of cases that correspond to expected values of the 'on' property. This is an optional property and if not provided, the activity will execute activities provided in defaultActivities.
        /// </summary>
        public InputList<Inputs.SwitchCaseArgs> Cases
        {
            get => _cases ?? (_cases = new InputList<Inputs.SwitchCaseArgs>());
            set => _cases = value;
        }

        [Input("defaultActivities")]
        private InputList<object>? _defaultActivities;

        /// <summary>
        /// List of activities to execute if no case condition is satisfied. This is an optional property and if not provided, the activity will exit without any action.
        /// </summary>
        public InputList<object> DefaultActivities
        {
            get => _defaultActivities ?? (_defaultActivities = new InputList<object>());
            set => _defaultActivities = value;
        }

        /// <summary>
        /// An expression that would evaluate to a string or integer. This is used to determine the block of activities in cases that will be executed.
        /// </summary>
        [Input("on", required: true)]
        public Input<Inputs.ExpressionArgs> On { get; set; } = null!;

        public SwitchActivityTypePropertiesArgs()
        {
        }
        public static new SwitchActivityTypePropertiesArgs Empty => new SwitchActivityTypePropertiesArgs();
    }
}
