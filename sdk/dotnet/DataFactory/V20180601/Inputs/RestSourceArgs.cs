// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// A copy activity Rest service source.
    /// </summary>
    public sealed class RestSourceArgs : Pulumi.ResourceArgs
    {
        [Input("additionalColumns")]
        private InputList<Inputs.AdditionalColumnsArgs>? _additionalColumns;

        /// <summary>
        /// Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
        /// </summary>
        public InputList<Inputs.AdditionalColumnsArgs> AdditionalColumns
        {
            get => _additionalColumns ?? (_additionalColumns = new InputList<Inputs.AdditionalColumnsArgs>());
            set => _additionalColumns = value;
        }

        /// <summary>
        /// The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("additionalHeaders")]
        public Input<object>? AdditionalHeaders { get; set; }

        /// <summary>
        /// The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Input("httpRequestTimeout")]
        public Input<object>? HttpRequestTimeout { get; set; }

        /// <summary>
        /// The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        [Input("maxConcurrentConnections")]
        public Input<object>? MaxConcurrentConnections { get; set; }

        /// <summary>
        /// The pagination rules to compose next page requests. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("paginationRules")]
        public Input<object>? PaginationRules { get; set; }

        /// <summary>
        /// The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("requestBody")]
        public Input<object>? RequestBody { get; set; }

        /// <summary>
        /// The time to await before sending next page request. 
        /// </summary>
        [Input("requestInterval")]
        public Input<object>? RequestInterval { get; set; }

        /// <summary>
        /// The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("requestMethod")]
        public Input<object>? RequestMethod { get; set; }

        /// <summary>
        /// Source retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        [Input("sourceRetryCount")]
        public Input<object>? SourceRetryCount { get; set; }

        /// <summary>
        /// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Input("sourceRetryWait")]
        public Input<object>? SourceRetryWait { get; set; }

        /// <summary>
        /// Copy source type.
        /// Expected value is 'RestSource'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public RestSourceArgs()
        {
        }
    }
}
