// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// MongoDB linked service properties.
    /// </summary>
    public sealed class MongoDbLinkedServiceTypePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Input("allowSelfSignedServerCert")]
        public Input<object>? AllowSelfSignedServerCert { get; set; }

        /// <summary>
        /// Database to verify the username and password. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("authSource")]
        public Input<object>? AuthSource { get; set; }

        /// <summary>
        /// The authentication type to be used to connect to the MongoDB database.
        /// </summary>
        [Input("authenticationType")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.V20180601.MongoDbAuthenticationType>? AuthenticationType { get; set; }

        /// <summary>
        /// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<object> DatabaseName { get; set; } = null!;

        /// <summary>
        /// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Input("enableSsl")]
        public Input<object>? EnableSsl { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("encryptedCredential")]
        public Input<object>? EncryptedCredential { get; set; }

        /// <summary>
        /// Password for authentication.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        [Input("port")]
        public Input<object>? Port { get; set; }

        /// <summary>
        /// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("server", required: true)]
        public Input<object> Server { get; set; } = null!;

        /// <summary>
        /// Username for authentication. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("username")]
        public Input<object>? Username { get; set; }

        public MongoDbLinkedServiceTypePropertiesArgs()
        {
        }
        public static new MongoDbLinkedServiceTypePropertiesArgs Empty => new MongoDbLinkedServiceTypePropertiesArgs();
    }
}
