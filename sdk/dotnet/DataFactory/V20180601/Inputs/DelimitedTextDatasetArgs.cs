// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Delimited text dataset.
    /// </summary>
    public sealed class DelimitedTextDatasetArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the Dataset.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        [Input("columnDelimiter")]
        private InputMap<object>? _columnDelimiter;

        /// <summary>
        /// The column delimiter. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> ColumnDelimiter
        {
            get => _columnDelimiter ?? (_columnDelimiter = new InputMap<object>());
            set => _columnDelimiter = value;
        }

        [Input("compressionCodec")]
        private InputMap<object>? _compressionCodec;
        public InputMap<object> CompressionCodec
        {
            get => _compressionCodec ?? (_compressionCodec = new InputMap<object>());
            set => _compressionCodec = value;
        }

        [Input("compressionLevel")]
        private InputMap<object>? _compressionLevel;

        /// <summary>
        /// The data compression method used for DelimitedText.
        /// </summary>
        public InputMap<object> CompressionLevel
        {
            get => _compressionLevel ?? (_compressionLevel = new InputMap<object>());
            set => _compressionLevel = value;
        }

        /// <summary>
        /// Dataset description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encodingName")]
        private InputMap<object>? _encodingName;

        /// <summary>
        /// The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EncodingName
        {
            get => _encodingName ?? (_encodingName = new InputMap<object>());
            set => _encodingName = value;
        }

        [Input("escapeChar")]
        private InputMap<object>? _escapeChar;

        /// <summary>
        /// The escape character. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EscapeChar
        {
            get => _escapeChar ?? (_escapeChar = new InputMap<object>());
            set => _escapeChar = value;
        }

        [Input("firstRowAsHeader")]
        private InputMap<object>? _firstRowAsHeader;

        /// <summary>
        /// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public InputMap<object> FirstRowAsHeader
        {
            get => _firstRowAsHeader ?? (_firstRowAsHeader = new InputMap<object>());
            set => _firstRowAsHeader = value;
        }

        /// <summary>
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// </summary>
        [Input("folder")]
        public Input<Inputs.DatasetFolderArgs>? Folder { get; set; }

        /// <summary>
        /// Linked service reference.
        /// </summary>
        [Input("linkedServiceName", required: true)]
        public Input<Inputs.LinkedServiceReferenceArgs> LinkedServiceName { get; set; } = null!;

        /// <summary>
        /// The location of the delimited text storage.
        /// </summary>
        [Input("location", required: true)]
        public InputUnion<Inputs.AmazonS3LocationArgs, InputUnion<Inputs.AzureBlobFSLocationArgs, InputUnion<Inputs.AzureBlobStorageLocationArgs, InputUnion<Inputs.AzureDataLakeStoreLocationArgs, InputUnion<Inputs.AzureFileStorageLocationArgs, InputUnion<Inputs.FileServerLocationArgs, InputUnion<Inputs.FtpServerLocationArgs, InputUnion<Inputs.GoogleCloudStorageLocationArgs, InputUnion<Inputs.HdfsLocationArgs, InputUnion<Inputs.HttpServerLocationArgs, Inputs.SftpLocationArgs>>>>>>>>>> Location { get; set; } = null!;

        [Input("nullValue")]
        private InputMap<object>? _nullValue;

        /// <summary>
        /// The null value string. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> NullValue
        {
            get => _nullValue ?? (_nullValue = new InputMap<object>());
            set => _nullValue = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for dataset.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        [Input("quoteChar")]
        private InputMap<object>? _quoteChar;

        /// <summary>
        /// The quote character. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> QuoteChar
        {
            get => _quoteChar ?? (_quoteChar = new InputMap<object>());
            set => _quoteChar = value;
        }

        [Input("rowDelimiter")]
        private InputMap<object>? _rowDelimiter;

        /// <summary>
        /// The row delimiter. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> RowDelimiter
        {
            get => _rowDelimiter ?? (_rowDelimiter = new InputMap<object>());
            set => _rowDelimiter = value;
        }

        [Input("schema")]
        private InputMap<object>? _schema;

        /// <summary>
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// </summary>
        public InputMap<object> Schema
        {
            get => _schema ?? (_schema = new InputMap<object>());
            set => _schema = value;
        }

        [Input("structure")]
        private InputMap<object>? _structure;

        /// <summary>
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// </summary>
        public InputMap<object> Structure
        {
            get => _structure ?? (_structure = new InputMap<object>());
            set => _structure = value;
        }

        /// <summary>
        /// Type of dataset.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DelimitedTextDatasetArgs()
        {
        }
    }
}
