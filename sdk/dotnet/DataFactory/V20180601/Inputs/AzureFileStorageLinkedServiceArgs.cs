// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Azure File Storage linked service.
    /// </summary>
    public sealed class AzureFileStorageLinkedServiceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure key vault secret reference of accountKey in connection string.
        /// </summary>
        [Input("accountKey")]
        public Input<Inputs.AzureKeyVaultSecretReferenceArgs>? AccountKey { get; set; }

        [Input("annotations")]
        private InputList<ImmutableDictionary<string, object>>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<ImmutableDictionary<string, object>>());
            set => _annotations = value;
        }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        [Input("connectionString")]
        private InputMap<object>? _connectionString;

        /// <summary>
        /// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public InputMap<object> ConnectionString
        {
            get => _connectionString ?? (_connectionString = new InputMap<object>());
            set => _connectionString = value;
        }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encryptedCredential")]
        private InputMap<object>? _encryptedCredential;

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> EncryptedCredential
        {
            get => _encryptedCredential ?? (_encryptedCredential = new InputMap<object>());
            set => _encryptedCredential = value;
        }

        [Input("fileShare")]
        private InputMap<object>? _fileShare;

        /// <summary>
        /// The azure file share name. It is required when auth with accountKey/sasToken. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> FileShare
        {
            get => _fileShare ?? (_fileShare = new InputMap<object>());
            set => _fileShare = value;
        }

        [Input("host")]
        private InputMap<object>? _host;

        /// <summary>
        /// Host name of the server. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Host
        {
            get => _host ?? (_host = new InputMap<object>());
            set => _host = value;
        }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Password to logon the server.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// </summary>
        [Input("sasToken")]
        public Input<Inputs.AzureKeyVaultSecretReferenceArgs>? SasToken { get; set; }

        [Input("sasUri")]
        private InputMap<object>? _sasUri;

        /// <summary>
        /// SAS URI of the Azure File resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public InputMap<object> SasUri
        {
            get => _sasUri ?? (_sasUri = new InputMap<object>());
            set => _sasUri = value;
        }

        [Input("snapshot")]
        private InputMap<object>? _snapshot;

        /// <summary>
        /// The azure file share snapshot version. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> Snapshot
        {
            get => _snapshot ?? (_snapshot = new InputMap<object>());
            set => _snapshot = value;
        }

        /// <summary>
        /// Type of linked service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("userId")]
        private InputMap<object>? _userId;

        /// <summary>
        /// User ID to logon the server. Type: string (or Expression with resultType string).
        /// </summary>
        public InputMap<object> UserId
        {
            get => _userId ?? (_userId = new InputMap<object>());
            set => _userId = value;
        }

        public AzureFileStorageLinkedServiceArgs()
        {
        }
    }
}
