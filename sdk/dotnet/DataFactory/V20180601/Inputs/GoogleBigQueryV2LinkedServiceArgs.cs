// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Google BigQuery service linked service.
    /// </summary>
    public sealed class GoogleBigQueryV2LinkedServiceArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The OAuth 2.0 authentication mechanism used for authentication.
        /// </summary>
        [Input("authenticationType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.V20180601.GoogleBigQueryV2AuthenticationType> AuthenticationType { get; set; } = null!;

        /// <summary>
        /// The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("clientId")]
        public Input<object>? ClientId { get; set; }

        /// <summary>
        /// The client secret of the google application used to acquire the refresh token.
        /// </summary>
        [Input("clientSecret")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClientSecret { get; set; }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        [Input("encryptedCredential")]
        public Input<string>? EncryptedCredential { get; set; }

        /// <summary>
        /// The content of the .json key file that is used to authenticate the service account. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("keyFileContent")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? KeyFileContent { get; set; }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The default BigQuery project id to query against. Type: string (or Expression with resultType string).
        /// </summary>
        [Input("projectId", required: true)]
        public Input<object> ProjectId { get; set; } = null!;

        /// <summary>
        /// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
        /// </summary>
        [Input("refreshToken")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? RefreshToken { get; set; }

        /// <summary>
        /// Type of linked service.
        /// Expected value is 'GoogleBigQueryV2'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Version of the linked service.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public GoogleBigQueryV2LinkedServiceArgs()
        {
        }
        public static new GoogleBigQueryV2LinkedServiceArgs Empty => new GoogleBigQueryV2LinkedServiceArgs();
    }
}
