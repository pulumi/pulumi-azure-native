// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Inputs
{

    /// <summary>
    /// Snowflake linked service.
    /// </summary>
    public sealed class SnowflakeV2LinkedServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier of your Snowflake account, e.g. xy12345.east-us-2.azure
        /// </summary>
        [Input("accountIdentifier", required: true)]
        public Input<object> AccountIdentifier { get; set; } = null!;

        [Input("annotations")]
        private InputList<object>? _annotations;

        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public InputList<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The type used for authentication. Type: string.
        /// </summary>
        [Input("authenticationType")]
        public InputUnion<string, Pulumi.AzureNative.DataFactory.V20180601.SnowflakeAuthenticationType>? AuthenticationType { get; set; }

        /// <summary>
        /// The client ID of the application registered in Azure Active Directory for AADServicePrincipal authentication.
        /// </summary>
        [Input("clientId")]
        public Input<object>? ClientId { get; set; }

        /// <summary>
        /// The Azure key vault secret reference of client secret for AADServicePrincipal authentication.
        /// </summary>
        [Input("clientSecret")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? ClientSecret { get; set; }

        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        [Input("connectVia")]
        public Input<Inputs.IntegrationRuntimeReferenceArgs>? ConnectVia { get; set; }

        /// <summary>
        /// The name of the Snowflake database.
        /// </summary>
        [Input("database", required: true)]
        public Input<object> Database { get; set; } = null!;

        /// <summary>
        /// Linked service description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        [Input("encryptedCredential")]
        public Input<string>? EncryptedCredential { get; set; }

        /// <summary>
        /// The host name of the Snowflake account.
        /// </summary>
        [Input("host")]
        public Input<object>? Host { get; set; }

        [Input("parameters")]
        private InputMap<Inputs.ParameterSpecificationArgs>? _parameters;

        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public InputMap<Inputs.ParameterSpecificationArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterSpecificationArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        [Input("password")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? Password { get; set; }

        /// <summary>
        /// The Azure key vault secret reference of privateKey for KeyPair auth.
        /// </summary>
        [Input("privateKey")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? PrivateKey { get; set; }

        /// <summary>
        /// The Azure key vault secret reference of private key password for KeyPair auth with encrypted private key.
        /// </summary>
        [Input("privateKeyPassphrase")]
        public InputUnion<Inputs.AzureKeyVaultSecretReferenceArgs, Inputs.SecureStringArgs>? PrivateKeyPassphrase { get; set; }

        /// <summary>
        /// The scope of the application registered in Azure Active Directory for AADServicePrincipal authentication.
        /// </summary>
        [Input("scope")]
        public Input<object>? Scope { get; set; }

        /// <summary>
        /// The tenant ID of the application registered in Azure Active Directory for AADServicePrincipal authentication.
        /// </summary>
        [Input("tenantId")]
        public Input<object>? TenantId { get; set; }

        /// <summary>
        /// Type of linked service.
        /// Expected value is 'SnowflakeV2'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The name of the Snowflake user.
        /// </summary>
        [Input("user")]
        public Input<object>? User { get; set; }

        /// <summary>
        /// Version of the linked service.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// The name of the Snowflake warehouse.
        /// </summary>
        [Input("warehouse", required: true)]
        public Input<object> Warehouse { get; set; } = null!;

        public SnowflakeV2LinkedServiceArgs()
        {
            AuthenticationType = "Basic";
        }
        public static new SnowflakeV2LinkedServiceArgs Empty => new SnowflakeV2LinkedServiceArgs();
    }
}
