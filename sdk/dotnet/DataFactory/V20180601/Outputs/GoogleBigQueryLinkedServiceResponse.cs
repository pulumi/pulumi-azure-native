// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Google BigQuery service linked service.
    /// </summary>
    [OutputType]
    public sealed class GoogleBigQueryLinkedServiceResponse
    {
        /// <summary>
        /// A comma-separated list of public BigQuery projects to access. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AdditionalProjects;
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ClientId;
        /// <summary>
        /// The client secret of the google application used to acquire the refresh token.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ClientSecret;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Email;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? KeyFilePath;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The default BigQuery project to query against. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object Project;
        /// <summary>
        /// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? RefreshToken;
        /// <summary>
        /// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? RequestGoogleDriveScope;
        /// <summary>
        /// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? TrustedCertPath;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'GoogleBigQuery'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? UseSystemTrustStore;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GoogleBigQueryLinkedServiceResponse(
            object? additionalProjects,

            ImmutableArray<object> annotations,

            string authenticationType,

            object? clientId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? clientSecret,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            string? description,

            object? email,

            string? encryptedCredential,

            object? keyFilePath,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            object project,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? refreshToken,

            object? requestGoogleDriveScope,

            object? trustedCertPath,

            string type,

            object? useSystemTrustStore,

            string? version)
        {
            AdditionalProjects = additionalProjects;
            Annotations = annotations;
            AuthenticationType = authenticationType;
            ClientId = clientId;
            ClientSecret = clientSecret;
            ConnectVia = connectVia;
            Description = description;
            Email = email;
            EncryptedCredential = encryptedCredential;
            KeyFilePath = keyFilePath;
            Parameters = parameters;
            Project = project;
            RefreshToken = refreshToken;
            RequestGoogleDriveScope = requestGoogleDriveScope;
            TrustedCertPath = trustedCertPath;
            Type = type;
            UseSystemTrustStore = useSystemTrustStore;
            Version = version;
        }
    }
}
