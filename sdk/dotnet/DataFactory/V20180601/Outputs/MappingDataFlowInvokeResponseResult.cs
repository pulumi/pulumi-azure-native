// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Outputs
{

    [OutputType]
    public sealed class MappingDataFlowInvokeResponseResult
    {
        /// <summary>
        /// List of tags that can be used for describing the data flow.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The description of the data flow.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The folder that this data flow is in. If not specified, Data flow will appear at the root level.
        /// </summary>
        public readonly Outputs.DataFlowInvokeResponseFolderResult? Folder;
        /// <summary>
        /// DataFlow script.
        /// </summary>
        public readonly string? Script;
        /// <summary>
        /// List of sinks in data flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataFlowSinkInvokeResponseResult> Sinks;
        /// <summary>
        /// List of sources in data flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataFlowSourceInvokeResponseResult> Sources;
        /// <summary>
        /// List of transformations in data flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.TransformationInvokeResponseResult> Transformations;
        /// <summary>
        /// Type of data flow.
        /// Expected value is 'MappingDataFlow'.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private MappingDataFlowInvokeResponseResult(
            ImmutableArray<object> annotations,

            string? description,

            Outputs.DataFlowInvokeResponseFolderResult? folder,

            string? script,

            ImmutableArray<Outputs.DataFlowSinkInvokeResponseResult> sinks,

            ImmutableArray<Outputs.DataFlowSourceInvokeResponseResult> sources,

            ImmutableArray<Outputs.TransformationInvokeResponseResult> transformations,

            string? type)
        {
            Annotations = annotations;
            Description = description;
            Folder = folder;
            Script = script;
            Sinks = sinks;
            Sources = sources;
            Transformations = transformations;
            Type = type;
        }
    }
}
