// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// A copy activity source for SAP Table source.
    /// </summary>
    [OutputType]
    public sealed class SapTableSourceResponse
    {
        /// <summary>
        /// Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
        /// </summary>
        public readonly object? AdditionalColumns;
        /// <summary>
        /// Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? BatchSize;
        /// <summary>
        /// Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? CustomRfcReadTableFunctionModule;
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DisableMetricsCollection;
        /// <summary>
        /// The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxConcurrentConnections;
        /// <summary>
        /// The partition mechanism that will be used for SAP table read in parallel. Possible values include: "None", "PartitionOnInt", "PartitionOnCalendarYear", "PartitionOnCalendarMonth", "PartitionOnCalendarDate", "PartitionOnTime".
        /// </summary>
        public readonly object? PartitionOption;
        /// <summary>
        /// The settings that will be leveraged for SAP table source partitioning.
        /// </summary>
        public readonly Outputs.SapTablePartitionSettingsResponse? PartitionSettings;
        /// <summary>
        /// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? QueryTimeout;
        /// <summary>
        /// The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? RfcTableFields;
        /// <summary>
        /// The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? RfcTableOptions;
        /// <summary>
        /// The number of rows to be retrieved. Type: integer(or Expression with resultType integer).
        /// </summary>
        public readonly object? RowCount;
        /// <summary>
        /// The number of rows that will be skipped. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? RowSkips;
        /// <summary>
        /// The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? SapDataColumnDelimiter;
        /// <summary>
        /// Source retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? SourceRetryCount;
        /// <summary>
        /// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? SourceRetryWait;
        /// <summary>
        /// Copy source type.
        /// Expected value is 'SapTableSource'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private SapTableSourceResponse(
            object? additionalColumns,

            object? batchSize,

            object? customRfcReadTableFunctionModule,

            object? disableMetricsCollection,

            object? maxConcurrentConnections,

            object? partitionOption,

            Outputs.SapTablePartitionSettingsResponse? partitionSettings,

            object? queryTimeout,

            object? rfcTableFields,

            object? rfcTableOptions,

            object? rowCount,

            object? rowSkips,

            object? sapDataColumnDelimiter,

            object? sourceRetryCount,

            object? sourceRetryWait,

            string type)
        {
            AdditionalColumns = additionalColumns;
            BatchSize = batchSize;
            CustomRfcReadTableFunctionModule = customRfcReadTableFunctionModule;
            DisableMetricsCollection = disableMetricsCollection;
            MaxConcurrentConnections = maxConcurrentConnections;
            PartitionOption = partitionOption;
            PartitionSettings = partitionSettings;
            QueryTimeout = queryTimeout;
            RfcTableFields = rfcTableFields;
            RfcTableOptions = rfcTableOptions;
            RowCount = rowCount;
            RowSkips = rowSkips;
            SapDataColumnDelimiter = sapDataColumnDelimiter;
            SourceRetryCount = sourceRetryCount;
            SourceRetryWait = sourceRetryWait;
            Type = type;
        }
    }
}
