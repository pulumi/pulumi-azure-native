// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Blob Events Trigger properties.
    /// </summary>
    [OutputType]
    public sealed class BlobEventsTriggerResponseTypeProperties
    {
        /// <summary>
        /// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
        /// </summary>
        public readonly string? BlobPathBeginsWith;
        /// <summary>
        /// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
        /// </summary>
        public readonly string? BlobPathEndsWith;
        /// <summary>
        /// The type of events that cause this trigger to fire.
        /// </summary>
        public readonly ImmutableArray<string> Events;
        /// <summary>
        /// If set to true, blobs with zero bytes will be ignored.
        /// </summary>
        public readonly bool? IgnoreEmptyBlobs;
        /// <summary>
        /// The ARM resource ID of the Storage Account.
        /// </summary>
        public readonly string Scope;

        [OutputConstructor]
        private BlobEventsTriggerResponseTypeProperties(
            string? blobPathBeginsWith,

            string? blobPathEndsWith,

            ImmutableArray<string> events,

            bool? ignoreEmptyBlobs,

            string scope)
        {
            BlobPathBeginsWith = blobPathBeginsWith;
            BlobPathEndsWith = blobPathEndsWith;
            Events = events;
            IgnoreEmptyBlobs = ignoreEmptyBlobs;
            Scope = scope;
        }
    }
}
