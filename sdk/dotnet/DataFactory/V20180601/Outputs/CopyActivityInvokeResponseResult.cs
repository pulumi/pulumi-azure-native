// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Outputs
{

    [OutputType]
    public sealed class CopyActivityInvokeResponseResult
    {
        /// <summary>
        /// Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        public readonly object? DataIntegrationUnits;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? EnableSkipIncompatibleRow;
        /// <summary>
        /// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? EnableStaging;
        /// <summary>
        /// List of inputs for the activity.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatasetReferenceInvokeResponseResult> Inputs;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceInvokeResponseResult? LinkedServiceName;
        /// <summary>
        /// Log settings customer needs provide when enabling log.
        /// </summary>
        public readonly Outputs.LogSettingsInvokeResponseResult? LogSettings;
        /// <summary>
        /// (Deprecated. Please use LogSettings) Log storage settings customer need to provide when enabling session log.
        /// </summary>
        public readonly Outputs.LogStorageSettingsInvokeResponseResult? LogStorageSettings;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of outputs for the activity.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatasetReferenceInvokeResponseResult> Outputs;
        /// <summary>
        /// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        public readonly object? ParallelCopies;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyInvokeResponseResult? Policy;
        /// <summary>
        /// Preserve rules.
        /// </summary>
        public readonly ImmutableArray<object> Preserve;
        /// <summary>
        /// Preserve Rules.
        /// </summary>
        public readonly ImmutableArray<object> PreserveRules;
        /// <summary>
        /// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
        /// </summary>
        public readonly Outputs.RedirectIncompatibleRowSettingsInvokeResponseResult? RedirectIncompatibleRowSettings;
        /// <summary>
        /// Copy activity sink.
        /// </summary>
        public readonly object Sink;
        /// <summary>
        /// Specify the fault tolerance for data consistency.
        /// </summary>
        public readonly Outputs.SkipErrorFileInvokeResponseResult? SkipErrorFile;
        /// <summary>
        /// Copy activity source.
        /// </summary>
        public readonly object Source;
        /// <summary>
        /// Specifies interim staging settings when EnableStaging is true.
        /// </summary>
        public readonly Outputs.StagingSettingsInvokeResponseResult? StagingSettings;
        /// <summary>
        /// Copy activity translator. If not specified, tabular translator is used.
        /// </summary>
        public readonly object? Translator;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Execution'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyInvokeResponseResult> UserProperties;
        /// <summary>
        /// Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? ValidateDataConsistency;

        [OutputConstructor]
        private CopyActivityInvokeResponseResult(
            object? dataIntegrationUnits,

            ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> dependsOn,

            string? description,

            object? enableSkipIncompatibleRow,

            object? enableStaging,

            ImmutableArray<Outputs.DatasetReferenceInvokeResponseResult> inputs,

            Outputs.LinkedServiceReferenceInvokeResponseResult? linkedServiceName,

            Outputs.LogSettingsInvokeResponseResult? logSettings,

            Outputs.LogStorageSettingsInvokeResponseResult? logStorageSettings,

            string name,

            ImmutableArray<Outputs.DatasetReferenceInvokeResponseResult> outputs,

            object? parallelCopies,

            Outputs.ActivityPolicyInvokeResponseResult? policy,

            ImmutableArray<object> preserve,

            ImmutableArray<object> preserveRules,

            Outputs.RedirectIncompatibleRowSettingsInvokeResponseResult? redirectIncompatibleRowSettings,

            object sink,

            Outputs.SkipErrorFileInvokeResponseResult? skipErrorFile,

            object source,

            Outputs.StagingSettingsInvokeResponseResult? stagingSettings,

            object? translator,

            string type,

            ImmutableArray<Outputs.UserPropertyInvokeResponseResult> userProperties,

            object? validateDataConsistency)
        {
            DataIntegrationUnits = dataIntegrationUnits;
            DependsOn = dependsOn;
            Description = description;
            EnableSkipIncompatibleRow = enableSkipIncompatibleRow;
            EnableStaging = enableStaging;
            Inputs = inputs;
            LinkedServiceName = linkedServiceName;
            LogSettings = logSettings;
            LogStorageSettings = logStorageSettings;
            Name = name;
            Outputs = outputs;
            ParallelCopies = parallelCopies;
            Policy = policy;
            Preserve = preserve;
            PreserveRules = preserveRules;
            RedirectIncompatibleRowSettings = redirectIncompatibleRowSettings;
            Sink = sink;
            SkipErrorFile = skipErrorFile;
            Source = source;
            StagingSettings = stagingSettings;
            Translator = translator;
            Type = type;
            UserProperties = userProperties;
            ValidateDataConsistency = validateDataConsistency;
        }
    }
}
