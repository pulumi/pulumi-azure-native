// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Outputs
{

    [OutputType]
    public sealed class ChainingTriggerInvokeResponseResult
    {
        /// <summary>
        /// List of tags that can be used for describing the trigger.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// Upstream Pipelines.
        /// </summary>
        public readonly ImmutableArray<Outputs.PipelineReferenceInvokeResponseResult> DependsOn;
        /// <summary>
        /// Trigger description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Pipeline for which runs are created when all upstream pipelines complete successfully.
        /// </summary>
        public readonly Outputs.TriggerPipelineReferenceInvokeResponseResult Pipeline;
        /// <summary>
        /// Run Dimension property that needs to be emitted by upstream pipelines.
        /// </summary>
        public readonly string RunDimension;
        /// <summary>
        /// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
        /// </summary>
        public readonly string RuntimeState;
        /// <summary>
        /// Trigger type.
        /// Expected value is 'ChainingTrigger'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ChainingTriggerInvokeResponseResult(
            ImmutableArray<object> annotations,

            ImmutableArray<Outputs.PipelineReferenceInvokeResponseResult> dependsOn,

            string? description,

            Outputs.TriggerPipelineReferenceInvokeResponseResult pipeline,

            string runDimension,

            string runtimeState,

            string type)
        {
            Annotations = annotations;
            DependsOn = dependsOn;
            Description = description;
            Pipeline = pipeline;
            RunDimension = runDimension;
            RuntimeState = runtimeState;
            Type = type;
        }
    }
}
