// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// MariaDB server linked service.
    /// </summary>
    [OutputType]
    public sealed class MariaDBLinkedServiceResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// Database name for connection. Type: string.
        /// </summary>
        public readonly object? Database;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The version of the MariaDB driver. Type: string. V1 or empty for legacy driver, V2 for new driver. V1 can support connection string and property bag, V2 can only support connection string. The legacy driver is scheduled for deprecation by October 2024.
        /// </summary>
        public readonly object? DriverVersion;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? Password;
        /// <summary>
        /// The port for the connection. Type: integer.
        /// </summary>
        public readonly object? Port;
        /// <summary>
        /// Server name for connection. Type: string.
        /// </summary>
        public readonly object? Server;
        /// <summary>
        /// This option specifies whether the driver uses TLS encryption and verification when connecting to MariaDB. E.g., SSLMode=&lt;0/1/2/3/4&gt;. Options: DISABLED (0) / PREFERRED (1) (Default) / REQUIRED (2) / VERIFY_CA (3) / VERIFY_IDENTITY (4), REQUIRED (2) is recommended to only allow connections encrypted with SSL/TLS.
        /// </summary>
        public readonly object? SslMode;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'MariaDB'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// This option specifies whether to use a CA certificate from the system trust store, or from a specified PEM file. E.g. UseSystemTrustStore=&lt;0/1&gt;; Options: Enabled (1) / Disabled (0) (Default)
        /// </summary>
        public readonly object? UseSystemTrustStore;
        /// <summary>
        /// Username for authentication. Type: string.
        /// </summary>
        public readonly object? Username;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private MariaDBLinkedServiceResponse(
            ImmutableArray<object> annotations,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            object? connectionString,

            object? database,

            string? description,

            object? driverVersion,

            string? encryptedCredential,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Outputs.AzureKeyVaultSecretReferenceResponse? password,

            object? port,

            object? server,

            object? sslMode,

            string type,

            object? useSystemTrustStore,

            object? username,

            string? version)
        {
            Annotations = annotations;
            ConnectVia = connectVia;
            ConnectionString = connectionString;
            Database = database;
            Description = description;
            DriverVersion = driverVersion;
            EncryptedCredential = encryptedCredential;
            Parameters = parameters;
            Password = password;
            Port = port;
            Server = server;
            SslMode = sslMode;
            Type = type;
            UseSystemTrustStore = useSystemTrustStore;
            Username = username;
            Version = version;
        }
    }
}
