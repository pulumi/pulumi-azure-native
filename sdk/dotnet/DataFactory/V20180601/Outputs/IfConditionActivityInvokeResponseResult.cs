// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601.Outputs
{

    [OutputType]
    public sealed class IfConditionActivityInvokeResponseResult
    {
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
        /// </summary>
        public readonly Outputs.ExpressionInvokeResponseResult Expression;
        /// <summary>
        /// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
        /// </summary>
        public readonly ImmutableArray<object> IfFalseActivities;
        /// <summary>
        /// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
        /// </summary>
        public readonly ImmutableArray<object> IfTrueActivities;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'Container'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyInvokeResponseResult> UserProperties;

        [OutputConstructor]
        private IfConditionActivityInvokeResponseResult(
            ImmutableArray<Outputs.ActivityDependencyInvokeResponseResult> dependsOn,

            string? description,

            Outputs.ExpressionInvokeResponseResult expression,

            ImmutableArray<object> ifFalseActivities,

            ImmutableArray<object> ifTrueActivities,

            string name,

            string type,

            ImmutableArray<Outputs.UserPropertyInvokeResponseResult> userProperties)
        {
            DependsOn = dependsOn;
            Description = description;
            Expression = expression;
            IfFalseActivities = ifFalseActivities;
            IfTrueActivities = ifTrueActivities;
            Name = name;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
