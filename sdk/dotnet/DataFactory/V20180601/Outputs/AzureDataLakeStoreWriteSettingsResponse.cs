// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Azure data lake store write settings.
    /// </summary>
    [OutputType]
    public sealed class AzureDataLakeStoreWriteSettingsResponse
    {
        /// <summary>
        /// The type of copy behavior for copy sink.
        /// </summary>
        public readonly object? CopyBehavior;
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DisableMetricsCollection;
        /// <summary>
        /// Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of "2018-12-01T05:00:00Z". Default value is NULL. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ExpiryDateTime;
        /// <summary>
        /// The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxConcurrentConnections;
        /// <summary>
        /// The write setting type.
        /// Expected value is 'AzureDataLakeStoreWriteSettings'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AzureDataLakeStoreWriteSettingsResponse(
            object? copyBehavior,

            object? disableMetricsCollection,

            object? expiryDateTime,

            object? maxConcurrentConnections,

            string type)
        {
            CopyBehavior = copyBehavior;
            DisableMetricsCollection = disableMetricsCollection;
            ExpiryDateTime = expiryDateTime;
            MaxConcurrentConnections = maxConcurrentConnections;
            Type = type;
        }
    }
}
