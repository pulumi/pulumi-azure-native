// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Service principal credential.
    /// </summary>
    [OutputType]
    public sealed class ServicePrincipalCredentialResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the Credential.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// Credential description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The app ID of the service principal used to authenticate
        /// </summary>
        public readonly object? ServicePrincipalId;
        /// <summary>
        /// The key of the service principal used to authenticate.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? ServicePrincipalKey;
        /// <summary>
        /// The ID of the tenant to which the service principal belongs
        /// </summary>
        public readonly object? Tenant;
        /// <summary>
        /// Type of credential.
        /// Expected value is 'ServicePrincipal'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ServicePrincipalCredentialResponse(
            ImmutableArray<object> annotations,

            string? description,

            object? servicePrincipalId,

            Outputs.AzureKeyVaultSecretReferenceResponse? servicePrincipalKey,

            object? tenant,

            string type)
        {
            Annotations = annotations;
            Description = description;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
            Type = type;
        }
    }
}
