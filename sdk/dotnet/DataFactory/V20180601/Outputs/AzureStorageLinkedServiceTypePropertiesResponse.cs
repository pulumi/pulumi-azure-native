// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Azure Storage linked service properties.
    /// </summary>
    [OutputType]
    public sealed class AzureStorageLinkedServiceTypePropertiesResponse
    {
        /// <summary>
        /// The Azure key vault secret reference of accountKey in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? AccountKey;
        /// <summary>
        /// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? SasToken;
        /// <summary>
        /// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? SasUri;

        [OutputConstructor]
        private AzureStorageLinkedServiceTypePropertiesResponse(
            Outputs.AzureKeyVaultSecretReferenceResponse? accountKey,

            object? connectionString,

            string? encryptedCredential,

            Outputs.AzureKeyVaultSecretReferenceResponse? sasToken,

            object? sasUri)
        {
            AccountKey = accountKey;
            ConnectionString = connectionString;
            EncryptedCredential = encryptedCredential;
            SasToken = sasToken;
            SasUri = sasUri;
        }
    }
}
