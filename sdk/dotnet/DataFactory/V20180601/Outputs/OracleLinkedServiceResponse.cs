// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Oracle database. This linked service has supported version property. The Version 1.0 is scheduled for deprecation while your pipeline will continue to run after EOL but without any bug fix or new features.
    /// </summary>
    [OutputType]
    public sealed class OracleLinkedServiceResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// Authentication type for connecting to the Oracle database. Only used for Version 2.0.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Only used for Version 1.0.
        /// </summary>
        public readonly object ConnectionString;
        /// <summary>
        /// Specifies the desired data integrity behavior when this client connects to a server. Supported values are accepted, rejected, requested or required, default value is required. Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? CryptoChecksumClient;
        /// <summary>
        /// Specifies the crypto-checksum algorithms that client can use. Supported values are SHA1, SHA256, SHA384, SHA512, default value is (SHA512). Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? CryptoChecksumTypesClient;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specifies whether to use bulk copy or batch insert when loading data into the database, default value is true. Type: boolean. Only used for Version 2.0.
        /// </summary>
        public readonly object? EnableBulkLoad;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// Specifies the encryption client behavior. Supported values are accepted, rejected, requested or required, default value is required. Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? EncryptionClient;
        /// <summary>
        /// Specifies the encryption algorithms that client can use. Supported values are AES128, AES192, AES256, 3DES112, 3DES168, default value is (AES256). Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? EncryptionTypesClient;
        /// <summary>
        /// Specifies the number of bytes that the driver allocates to fetch the data in one database round-trip, default value is 10485760. Type: integer. Only used for Version 2.0.
        /// </summary>
        public readonly object? FetchSize;
        /// <summary>
        /// Specifies whether the driver returns column value with the TIMESTAMP WITH TIME ZONE data type as DateTime or string. This setting is ignored if supportV1DataTypes is not true, default value is true. Type: boolean. Only used for Version 2.0.
        /// </summary>
        public readonly object? FetchTswtzAsTimestamp;
        /// <summary>
        /// Specifies the amount that the source initially fetches for LOB columns, default value is 0. Type: integer. Only used for Version 2.0.
        /// </summary>
        public readonly object? InitialLobFetchSize;
        /// <summary>
        /// Specifies a command that is issued immediately after connecting to the database to manage session settings. Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? InitializationString;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? Password;
        /// <summary>
        /// The location of Oracle database you want to connect to, the supported forms include connector descriptor, Easy Connect (Plus) Naming and Oracle Net Services Name (Only self-hosted IR). Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? Server;
        /// <summary>
        /// Specifies the number of cursors or statements to be cached for each database connection, default value is 0. Type: integer. Only used for Version 2.0.
        /// </summary>
        public readonly object? StatementCacheSize;
        /// <summary>
        /// Specifies whether to use the Version 1.0 data type mappings. Do not set this to true unless you want to keep backward compatibility with Version 1.0's data type mappings, default value is false. Type: boolean. Only used for Version 2.0.
        /// </summary>
        public readonly object? SupportV1DataTypes;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'Oracle'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The Oracle database username. Type: string. Only used for Version 2.0.
        /// </summary>
        public readonly object? Username;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private OracleLinkedServiceResponse(
            ImmutableArray<object> annotations,

            string? authenticationType,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            object connectionString,

            object? cryptoChecksumClient,

            object? cryptoChecksumTypesClient,

            string? description,

            object? enableBulkLoad,

            string? encryptedCredential,

            object? encryptionClient,

            object? encryptionTypesClient,

            object? fetchSize,

            object? fetchTswtzAsTimestamp,

            object? initialLobFetchSize,

            object? initializationString,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Outputs.AzureKeyVaultSecretReferenceResponse? password,

            object? server,

            object? statementCacheSize,

            object? supportV1DataTypes,

            string type,

            object? username,

            string? version)
        {
            Annotations = annotations;
            AuthenticationType = authenticationType;
            ConnectVia = connectVia;
            ConnectionString = connectionString;
            CryptoChecksumClient = cryptoChecksumClient;
            CryptoChecksumTypesClient = cryptoChecksumTypesClient;
            Description = description;
            EnableBulkLoad = enableBulkLoad;
            EncryptedCredential = encryptedCredential;
            EncryptionClient = encryptionClient;
            EncryptionTypesClient = encryptionTypesClient;
            FetchSize = fetchSize;
            FetchTswtzAsTimestamp = fetchTswtzAsTimestamp;
            InitialLobFetchSize = initialLobFetchSize;
            InitializationString = initializationString;
            Parameters = parameters;
            Password = password;
            Server = server;
            StatementCacheSize = statementCacheSize;
            SupportV1DataTypes = supportV1DataTypes;
            Type = type;
            Username = username;
            Version = version;
        }
    }
}
