// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Azure PostgreSQL linked service.
    /// </summary>
    [OutputType]
    public sealed class AzurePostgreSqlLinkedServiceResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the linked service.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AzureCloudType;
        /// <summary>
        /// The time to wait (in seconds) while trying to execute a command before terminating the attempt and generating an error. Set to zero for infinity. Type: integer.
        /// </summary>
        public readonly object? CommandTimeout;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// The credential reference containing authentication information.
        /// </summary>
        public readonly Outputs.CredentialReferenceResponse? Credential;
        /// <summary>
        /// Database name for connection. Type: string.
        /// </summary>
        public readonly object? Database;
        /// <summary>
        /// Linked service description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the .NET encoding that will be used to encode/decode PostgreSQL string data. Type: string
        /// </summary>
        public readonly object? Encoding;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// Parameters for linked service.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? Parameters;
        /// <summary>
        /// The Azure key vault secret reference of password in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? Password;
        /// <summary>
        /// The port for the connection. Type: integer.
        /// </summary>
        public readonly object? Port;
        /// <summary>
        /// Determines the size of the internal buffer uses when reading. Increasing may improve performance if transferring large values from the database. Type: integer.
        /// </summary>
        public readonly object? ReadBufferSize;
        /// <summary>
        /// Server name for connection. Type: string.
        /// </summary>
        public readonly object? Server;
        /// <summary>
        /// The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalCredentialType;
        /// <summary>
        /// Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalEmbeddedCert;
        /// <summary>
        /// Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalEmbeddedCertPassword;
        /// <summary>
        /// The ID of the service principal used to authenticate against Azure Database for PostgreSQL Flexible server. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalId;
        /// <summary>
        /// The key of the service principal used to authenticate against Azure Database for PostgreSQL Flexible server.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalKey;
        /// <summary>
        /// SSL mode for connection. Type: integer. 0: disable, 1:allow, 2: prefer, 3: require, 4: verify-ca, 5: verify-full. Type: integer.
        /// </summary>
        public readonly object? SslMode;
        /// <summary>
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Tenant;
        /// <summary>
        /// The time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error. Type: integer.
        /// </summary>
        public readonly object? Timeout;
        /// <summary>
        /// Gets or sets the session timezone. Type: string.
        /// </summary>
        public readonly object? Timezone;
        /// <summary>
        /// Whether to trust the server certificate without validating it. Type: boolean.
        /// </summary>
        public readonly object? TrustServerCertificate;
        /// <summary>
        /// Type of linked service.
        /// Expected value is 'AzurePostgreSql'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Username for authentication. Type: string.
        /// </summary>
        public readonly object? Username;
        /// <summary>
        /// Version of the linked service.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private AzurePostgreSqlLinkedServiceResponse(
            ImmutableArray<object> annotations,

            object? azureCloudType,

            object? commandTimeout,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            object? connectionString,

            Outputs.CredentialReferenceResponse? credential,

            object? database,

            string? description,

            object? encoding,

            string? encryptedCredential,

            ImmutableDictionary<string, Outputs.ParameterSpecificationResponse>? parameters,

            Outputs.AzureKeyVaultSecretReferenceResponse? password,

            object? port,

            object? readBufferSize,

            object? server,

            object? servicePrincipalCredentialType,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalEmbeddedCert,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalEmbeddedCertPassword,

            object? servicePrincipalId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalKey,

            object? sslMode,

            object? tenant,

            object? timeout,

            object? timezone,

            object? trustServerCertificate,

            string type,

            object? username,

            string? version)
        {
            Annotations = annotations;
            AzureCloudType = azureCloudType;
            CommandTimeout = commandTimeout;
            ConnectVia = connectVia;
            ConnectionString = connectionString;
            Credential = credential;
            Database = database;
            Description = description;
            Encoding = encoding;
            EncryptedCredential = encryptedCredential;
            Parameters = parameters;
            Password = password;
            Port = port;
            ReadBufferSize = readBufferSize;
            Server = server;
            ServicePrincipalCredentialType = servicePrincipalCredentialType;
            ServicePrincipalEmbeddedCert = servicePrincipalEmbeddedCert;
            ServicePrincipalEmbeddedCertPassword = servicePrincipalEmbeddedCertPassword;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            SslMode = sslMode;
            Tenant = tenant;
            Timeout = timeout;
            Timezone = timezone;
            TrustServerCertificate = trustServerCertificate;
            Type = type;
            Username = username;
            Version = version;
        }
    }
}
