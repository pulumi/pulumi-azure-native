// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// A copy activity SQL server sink.
    /// </summary>
    [OutputType]
    public sealed class SqlServerSinkResponse
    {
        /// <summary>
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? DisableMetricsCollection;
        /// <summary>
        /// The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? MaxConcurrentConnections;
        /// <summary>
        /// SQL pre-copy script. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? PreCopyScript;
        /// <summary>
        /// Sink retry count. Type: integer (or Expression with resultType integer).
        /// </summary>
        public readonly object? SinkRetryCount;
        /// <summary>
        /// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? SinkRetryWait;
        /// <summary>
        /// SQL writer stored procedure name. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? SqlWriterStoredProcedureName;
        /// <summary>
        /// SQL writer table type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? SqlWriterTableType;
        /// <summary>
        /// Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        public readonly object? SqlWriterUseTableLock;
        /// <summary>
        /// SQL stored procedure parameters.
        /// </summary>
        public readonly object? StoredProcedureParameters;
        /// <summary>
        /// The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? StoredProcedureTableTypeParameterName;
        /// <summary>
        /// The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? TableOption;
        /// <summary>
        /// Copy sink type.
        /// Expected value is 'SqlServerSink'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// SQL upsert settings.
        /// </summary>
        public readonly Outputs.SqlUpsertSettingsResponse? UpsertSettings;
        /// <summary>
        /// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
        /// </summary>
        public readonly object? WriteBatchSize;
        /// <summary>
        /// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        public readonly object? WriteBatchTimeout;
        /// <summary>
        /// Write behavior when copying data into sql server. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)
        /// </summary>
        public readonly object? WriteBehavior;

        [OutputConstructor]
        private SqlServerSinkResponse(
            object? disableMetricsCollection,

            object? maxConcurrentConnections,

            object? preCopyScript,

            object? sinkRetryCount,

            object? sinkRetryWait,

            object? sqlWriterStoredProcedureName,

            object? sqlWriterTableType,

            object? sqlWriterUseTableLock,

            object? storedProcedureParameters,

            object? storedProcedureTableTypeParameterName,

            object? tableOption,

            string type,

            Outputs.SqlUpsertSettingsResponse? upsertSettings,

            object? writeBatchSize,

            object? writeBatchTimeout,

            object? writeBehavior)
        {
            DisableMetricsCollection = disableMetricsCollection;
            MaxConcurrentConnections = maxConcurrentConnections;
            PreCopyScript = preCopyScript;
            SinkRetryCount = sinkRetryCount;
            SinkRetryWait = sinkRetryWait;
            SqlWriterStoredProcedureName = sqlWriterStoredProcedureName;
            SqlWriterTableType = sqlWriterTableType;
            SqlWriterUseTableLock = sqlWriterUseTableLock;
            StoredProcedureParameters = storedProcedureParameters;
            StoredProcedureTableTypeParameterName = storedProcedureTableTypeParameterName;
            TableOption = tableOption;
            Type = type;
            UpsertSettings = upsertSettings;
            WriteBatchSize = writeBatchSize;
            WriteBatchTimeout = writeBatchTimeout;
            WriteBehavior = writeBehavior;
        }
    }
}
