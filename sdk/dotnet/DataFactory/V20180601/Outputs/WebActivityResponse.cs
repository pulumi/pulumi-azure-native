// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Web activity.
    /// </summary>
    [OutputType]
    public sealed class WebActivityResponse
    {
        /// <summary>
        /// Authentication method used for calling the endpoint.
        /// </summary>
        public readonly Outputs.WebActivityAuthenticationResponse? Authentication;
        /// <summary>
        /// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Body;
        /// <summary>
        /// The integration runtime reference.
        /// </summary>
        public readonly Outputs.IntegrationRuntimeReferenceResponse? ConnectVia;
        /// <summary>
        /// List of datasets passed to web endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatasetReferenceResponse> Datasets;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// When set to true, Certificate validation will be disabled.
        /// </summary>
        public readonly bool? DisableCertValidation;
        /// <summary>
        /// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Headers;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// List of linked services passed to web endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkedServiceReferenceResponse> LinkedServices;
        /// <summary>
        /// Rest API method for target endpoint.
        /// </summary>
        public readonly string Method;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        public readonly string? OnInactiveMarkAs;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'WebActivity'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Web activity target endpoint and path. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object Url;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private WebActivityResponse(
            Outputs.WebActivityAuthenticationResponse? authentication,

            object? body,

            Outputs.IntegrationRuntimeReferenceResponse? connectVia,

            ImmutableArray<Outputs.DatasetReferenceResponse> datasets,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            bool? disableCertValidation,

            object? headers,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            ImmutableArray<Outputs.LinkedServiceReferenceResponse> linkedServices,

            string method,

            string name,

            string? onInactiveMarkAs,

            Outputs.ActivityPolicyResponse? policy,

            string? state,

            string type,

            object url,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            Authentication = authentication;
            Body = body;
            ConnectVia = connectVia;
            Datasets = datasets;
            DependsOn = dependsOn;
            Description = description;
            DisableCertValidation = disableCertValidation;
            Headers = headers;
            LinkedServiceName = linkedServiceName;
            LinkedServices = linkedServices;
            Method = method;
            Name = name;
            OnInactiveMarkAs = onInactiveMarkAs;
            Policy = policy;
            State = state;
            Type = type;
            Url = url;
            UserProperties = userProperties;
        }
    }
}
