// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Data Lake Analytics U-SQL activity.
    /// </summary>
    [OutputType]
    public sealed class DataLakeAnalyticsUSQLActivityResponse
    {
        /// <summary>
        /// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? CompilationMode;
        /// <summary>
        /// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
        /// </summary>
        public readonly object? DegreeOfParallelism;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        public readonly string? OnInactiveMarkAs;
        /// <summary>
        /// Parameters for U-SQL job request.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Parameters;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
        /// </summary>
        public readonly object? Priority;
        /// <summary>
        /// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? RuntimeVersion;
        /// <summary>
        /// Script linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse ScriptLinkedService;
        /// <summary>
        /// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object ScriptPath;
        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'DataLakeAnalyticsU-SQL'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private DataLakeAnalyticsUSQLActivityResponse(
            object? compilationMode,

            object? degreeOfParallelism,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            string? onInactiveMarkAs,

            ImmutableDictionary<string, object>? parameters,

            Outputs.ActivityPolicyResponse? policy,

            object? priority,

            object? runtimeVersion,

            Outputs.LinkedServiceReferenceResponse scriptLinkedService,

            object scriptPath,

            string? state,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            CompilationMode = compilationMode;
            DegreeOfParallelism = degreeOfParallelism;
            DependsOn = dependsOn;
            Description = description;
            LinkedServiceName = linkedServiceName;
            Name = name;
            OnInactiveMarkAs = onInactiveMarkAs;
            Parameters = parameters;
            Policy = policy;
            Priority = priority;
            RuntimeVersion = runtimeVersion;
            ScriptLinkedService = scriptLinkedService;
            ScriptPath = scriptPath;
            State = state;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
