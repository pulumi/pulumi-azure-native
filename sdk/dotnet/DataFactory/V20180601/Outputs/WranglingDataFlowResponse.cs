// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Power Query data flow.
    /// </summary>
    [OutputType]
    public sealed class WranglingDataFlowResponse
    {
        /// <summary>
        /// List of tags that can be used for describing the data flow.
        /// </summary>
        public readonly ImmutableArray<object> Annotations;
        /// <summary>
        /// The description of the data flow.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Locale of the Power query mashup document.
        /// </summary>
        public readonly string? DocumentLocale;
        /// <summary>
        /// The folder that this data flow is in. If not specified, Data flow will appear at the root level.
        /// </summary>
        public readonly Outputs.DataFlowResponseFolder? Folder;
        /// <summary>
        /// Power query mashup script.
        /// </summary>
        public readonly string? Script;
        /// <summary>
        /// List of sources in Power Query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PowerQuerySourceResponse> Sources;
        /// <summary>
        /// Type of data flow.
        /// Expected value is 'WranglingDataFlow'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WranglingDataFlowResponse(
            ImmutableArray<object> annotations,

            string? description,

            string? documentLocale,

            Outputs.DataFlowResponseFolder? folder,

            string? script,

            ImmutableArray<Outputs.PowerQuerySourceResponse> sources,

            string type)
        {
            Annotations = annotations;
            Description = description;
            DocumentLocale = documentLocale;
            Folder = folder;
            Script = script;
            Sources = sources;
            Type = type;
        }
    }
}
