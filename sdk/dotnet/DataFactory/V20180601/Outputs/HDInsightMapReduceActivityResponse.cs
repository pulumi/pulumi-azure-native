// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// HDInsight MapReduce activity type.
    /// </summary>
    [OutputType]
    public sealed class HDInsightMapReduceActivityResponse
    {
        /// <summary>
        /// User specified arguments to HDInsightActivity.
        /// </summary>
        public readonly ImmutableArray<object> Arguments;
        /// <summary>
        /// Class name. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object ClassName;
        /// <summary>
        /// Allows user to specify defines for the MapReduce job request.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Defines;
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Debug info option.
        /// </summary>
        public readonly string? GetDebugInfo;
        /// <summary>
        /// Jar path. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object JarFilePath;
        /// <summary>
        /// Jar libs.
        /// </summary>
        public readonly ImmutableArray<object> JarLibs;
        /// <summary>
        /// Jar linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? JarLinkedService;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        public readonly string? OnInactiveMarkAs;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Storage linked service references.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkedServiceReferenceResponse> StorageLinkedServices;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'HDInsightMapReduce'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private HDInsightMapReduceActivityResponse(
            ImmutableArray<object> arguments,

            object className,

            ImmutableDictionary<string, object>? defines,

            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            string? getDebugInfo,

            object jarFilePath,

            ImmutableArray<object> jarLibs,

            Outputs.LinkedServiceReferenceResponse? jarLinkedService,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            string? onInactiveMarkAs,

            Outputs.ActivityPolicyResponse? policy,

            string? state,

            ImmutableArray<Outputs.LinkedServiceReferenceResponse> storageLinkedServices,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            Arguments = arguments;
            ClassName = className;
            Defines = defines;
            DependsOn = dependsOn;
            Description = description;
            GetDebugInfo = getDebugInfo;
            JarFilePath = jarFilePath;
            JarLibs = jarLibs;
            JarLinkedService = jarLinkedService;
            LinkedServiceName = linkedServiceName;
            Name = name;
            OnInactiveMarkAs = onInactiveMarkAs;
            Policy = policy;
            State = state;
            StorageLinkedServices = storageLinkedServices;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
