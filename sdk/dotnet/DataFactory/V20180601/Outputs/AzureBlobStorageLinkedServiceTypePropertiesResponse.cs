// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Azure Blob Storage linked service properties.
    /// </summary>
    [OutputType]
    public sealed class AzureBlobStorageLinkedServiceTypePropertiesResponse
    {
        /// <summary>
        /// The Azure key vault secret reference of accountKey in connection string.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? AccountKey;
        /// <summary>
        /// Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly string? AccountKind;
        /// <summary>
        /// The type used for authentication. Type: string.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? AzureCloudType;
        /// <summary>
        /// The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? ConnectionString;
        /// <summary>
        /// Container uri of the Azure Blob Storage resource only support for anonymous access. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ContainerUri;
        /// <summary>
        /// The credential reference containing authentication information.
        /// </summary>
        public readonly Outputs.CredentialReferenceResponse? Credential;
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly string? EncryptedCredential;
        /// <summary>
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// </summary>
        public readonly Outputs.AzureKeyVaultSecretReferenceResponse? SasToken;
        /// <summary>
        /// SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        public readonly object? SasUri;
        /// <summary>
        /// Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
        /// </summary>
        public readonly string? ServiceEndpoint;
        /// <summary>
        /// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? ServicePrincipalId;
        /// <summary>
        /// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
        /// </summary>
        public readonly Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? ServicePrincipalKey;
        /// <summary>
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object? Tenant;

        [OutputConstructor]
        private AzureBlobStorageLinkedServiceTypePropertiesResponse(
            Outputs.AzureKeyVaultSecretReferenceResponse? accountKey,

            string? accountKind,

            string? authenticationType,

            object? azureCloudType,

            object? connectionString,

            object? containerUri,

            Outputs.CredentialReferenceResponse? credential,

            string? encryptedCredential,

            Outputs.AzureKeyVaultSecretReferenceResponse? sasToken,

            object? sasUri,

            string? serviceEndpoint,

            object? servicePrincipalId,

            Union<Outputs.AzureKeyVaultSecretReferenceResponse, Outputs.SecureStringResponse>? servicePrincipalKey,

            object? tenant)
        {
            AccountKey = accountKey;
            AccountKind = accountKind;
            AuthenticationType = authenticationType;
            AzureCloudType = azureCloudType;
            ConnectionString = connectionString;
            ContainerUri = containerUri;
            Credential = credential;
            EncryptedCredential = encryptedCredential;
            SasToken = sasToken;
            SasUri = sasUri;
            ServiceEndpoint = serviceEndpoint;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
        }
    }
}
