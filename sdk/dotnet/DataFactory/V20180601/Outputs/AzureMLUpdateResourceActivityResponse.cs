// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601.Outputs
{

    /// <summary>
    /// Azure ML Update Resource management activity.
    /// </summary>
    [OutputType]
    public sealed class AzureMLUpdateResourceActivityResponse
    {
        /// <summary>
        /// Activity depends on condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivityDependencyResponse> DependsOn;
        /// <summary>
        /// Activity description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Linked service reference.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse? LinkedServiceName;
        /// <summary>
        /// Activity name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.
        /// </summary>
        public readonly string? OnInactiveMarkAs;
        /// <summary>
        /// Activity policy.
        /// </summary>
        public readonly Outputs.ActivityPolicyResponse? Policy;
        /// <summary>
        /// Activity state. This is an optional property and if not provided, the state will be Active by default.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object TrainedModelFilePath;
        /// <summary>
        /// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
        /// </summary>
        public readonly Outputs.LinkedServiceReferenceResponse TrainedModelLinkedServiceName;
        /// <summary>
        /// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
        /// </summary>
        public readonly object TrainedModelName;
        /// <summary>
        /// Type of activity.
        /// Expected value is 'AzureMLUpdateResource'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Activity user properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPropertyResponse> UserProperties;

        [OutputConstructor]
        private AzureMLUpdateResourceActivityResponse(
            ImmutableArray<Outputs.ActivityDependencyResponse> dependsOn,

            string? description,

            Outputs.LinkedServiceReferenceResponse? linkedServiceName,

            string name,

            string? onInactiveMarkAs,

            Outputs.ActivityPolicyResponse? policy,

            string? state,

            object trainedModelFilePath,

            Outputs.LinkedServiceReferenceResponse trainedModelLinkedServiceName,

            object trainedModelName,

            string type,

            ImmutableArray<Outputs.UserPropertyResponse> userProperties)
        {
            DependsOn = dependsOn;
            Description = description;
            LinkedServiceName = linkedServiceName;
            Name = name;
            OnInactiveMarkAs = onInactiveMarkAs;
            Policy = policy;
            State = state;
            TrainedModelFilePath = trainedModelFilePath;
            TrainedModelLinkedServiceName = trainedModelLinkedServiceName;
            TrainedModelName = trainedModelName;
            Type = type;
            UserProperties = userProperties;
        }
    }
}
