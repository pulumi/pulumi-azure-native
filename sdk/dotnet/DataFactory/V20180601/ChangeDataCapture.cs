// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory.V20180601
{
    /// <summary>
    /// Change data capture resource type.
    /// </summary>
    [AzureNativeResourceType("azure-native:datafactory/v20180601:ChangeDataCapture")]
    public partial class ChangeDataCapture : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A boolean to determine if the vnet configuration needs to be overwritten.
        /// </summary>
        [Output("allowVNetOverride")]
        public Output<bool?> AllowVNetOverride { get; private set; } = null!;

        /// <summary>
        /// The description of the change data capture.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Etag identifies change in the resource.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The folder that this CDC is in. If not specified, CDC will appear at the root level.
        /// </summary>
        [Output("folder")]
        public Output<Outputs.ChangeDataCaptureResponseFolder?> Folder { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// CDC policy
        /// </summary>
        [Output("policy")]
        public Output<Outputs.MapperPolicyResponse> Policy { get; private set; } = null!;

        /// <summary>
        /// List of sources connections that can be used as sources in the CDC.
        /// </summary>
        [Output("sourceConnectionsInfo")]
        public Output<ImmutableArray<Outputs.MapperSourceConnectionsInfoResponse>> SourceConnectionsInfo { get; private set; } = null!;

        /// <summary>
        /// Status of the CDC as to if it is running or stopped.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// List of target connections that can be used as sources in the CDC.
        /// </summary>
        [Output("targetConnectionsInfo")]
        public Output<ImmutableArray<Outputs.MapperTargetConnectionsInfoResponse>> TargetConnectionsInfo { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ChangeDataCapture resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ChangeDataCapture(string name, ChangeDataCaptureArgs args, CustomResourceOptions? options = null)
            : base("azure-native:datafactory/v20180601:ChangeDataCapture", name, args ?? new ChangeDataCaptureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ChangeDataCapture(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:datafactory/v20180601:ChangeDataCapture", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:datafactory:ChangeDataCapture"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ChangeDataCapture resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ChangeDataCapture Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ChangeDataCapture(name, id, options);
        }
    }

    public sealed class ChangeDataCaptureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean to determine if the vnet configuration needs to be overwritten.
        /// </summary>
        [Input("allowVNetOverride")]
        public Input<bool>? AllowVNetOverride { get; set; }

        /// <summary>
        /// The change data capture name.
        /// </summary>
        [Input("changeDataCaptureName")]
        public Input<string>? ChangeDataCaptureName { get; set; }

        /// <summary>
        /// The description of the change data capture.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public Input<string> FactoryName { get; set; } = null!;

        /// <summary>
        /// The folder that this CDC is in. If not specified, CDC will appear at the root level.
        /// </summary>
        [Input("folder")]
        public Input<Inputs.ChangeDataCaptureFolderArgs>? Folder { get; set; }

        /// <summary>
        /// CDC policy
        /// </summary>
        [Input("policy", required: true)]
        public Input<Inputs.MapperPolicyArgs> Policy { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("sourceConnectionsInfo", required: true)]
        private InputList<Inputs.MapperSourceConnectionsInfoArgs>? _sourceConnectionsInfo;

        /// <summary>
        /// List of sources connections that can be used as sources in the CDC.
        /// </summary>
        public InputList<Inputs.MapperSourceConnectionsInfoArgs> SourceConnectionsInfo
        {
            get => _sourceConnectionsInfo ?? (_sourceConnectionsInfo = new InputList<Inputs.MapperSourceConnectionsInfoArgs>());
            set => _sourceConnectionsInfo = value;
        }

        /// <summary>
        /// Status of the CDC as to if it is running or stopped.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("targetConnectionsInfo", required: true)]
        private InputList<Inputs.MapperTargetConnectionsInfoArgs>? _targetConnectionsInfo;

        /// <summary>
        /// List of target connections that can be used as sources in the CDC.
        /// </summary>
        public InputList<Inputs.MapperTargetConnectionsInfoArgs> TargetConnectionsInfo
        {
            get => _targetConnectionsInfo ?? (_targetConnectionsInfo = new InputList<Inputs.MapperTargetConnectionsInfoArgs>());
            set => _targetConnectionsInfo = value;
        }

        public ChangeDataCaptureArgs()
        {
        }
        public static new ChangeDataCaptureArgs Empty => new ChangeDataCaptureArgs();
    }
}
