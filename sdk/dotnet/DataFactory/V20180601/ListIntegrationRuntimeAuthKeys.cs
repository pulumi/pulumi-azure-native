// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601
{
    public static class ListIntegrationRuntimeAuthKeys
    {
        public static Task<ListIntegrationRuntimeAuthKeysResult> InvokeAsync(ListIntegrationRuntimeAuthKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListIntegrationRuntimeAuthKeysResult>("azure-nextgen:datafactory/v20180601:listIntegrationRuntimeAuthKeys", args ?? new ListIntegrationRuntimeAuthKeysArgs(), options.WithVersion());
    }


    public sealed class ListIntegrationRuntimeAuthKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public string FactoryName { get; set; } = null!;

        /// <summary>
        /// The integration runtime name.
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public string IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListIntegrationRuntimeAuthKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListIntegrationRuntimeAuthKeysResult
    {
        /// <summary>
        /// The primary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey1;
        /// <summary>
        /// The secondary integration runtime authentication key.
        /// </summary>
        public readonly string? AuthKey2;

        [OutputConstructor]
        private ListIntegrationRuntimeAuthKeysResult(
            string? authKey1,

            string? authKey2)
        {
            AuthKey1 = authKey1;
            AuthKey2 = authKey2;
        }
    }
}
