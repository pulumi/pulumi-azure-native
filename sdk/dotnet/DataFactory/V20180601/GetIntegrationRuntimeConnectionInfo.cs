// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataFactory.V20180601
{
    public static class GetIntegrationRuntimeConnectionInfo
    {
        public static Task<GetIntegrationRuntimeConnectionInfoResult> InvokeAsync(GetIntegrationRuntimeConnectionInfoArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationRuntimeConnectionInfoResult>("azure-nextgen:datafactory/v20180601:getIntegrationRuntimeConnectionInfo", args ?? new GetIntegrationRuntimeConnectionInfoArgs(), options.WithVersion());
    }


    public sealed class GetIntegrationRuntimeConnectionInfoArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public string FactoryName { get; set; } = null!;

        /// <summary>
        /// The integration runtime name.
        /// </summary>
        [Input("integrationRuntimeName", required: true)]
        public string IntegrationRuntimeName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIntegrationRuntimeConnectionInfoArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIntegrationRuntimeConnectionInfoResult
    {
        /// <summary>
        /// The on-premises integration runtime host URL.
        /// </summary>
        public readonly string HostServiceUri;
        /// <summary>
        /// The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.
        /// </summary>
        public readonly string IdentityCertThumbprint;
        /// <summary>
        /// Whether the identity certificate is expired.
        /// </summary>
        public readonly bool IsIdentityCertExprired;
        /// <summary>
        /// The public key for encrypting a credential when transferring the credential to the integration runtime.
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// The token generated in service. Callers use this token to authenticate to integration runtime.
        /// </summary>
        public readonly string ServiceToken;
        /// <summary>
        /// The integration runtime version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetIntegrationRuntimeConnectionInfoResult(
            string hostServiceUri,

            string identityCertThumbprint,

            bool isIdentityCertExprired,

            string publicKey,

            string serviceToken,

            string version)
        {
            HostServiceUri = hostServiceUri;
            IdentityCertThumbprint = identityCertThumbprint;
            IsIdentityCertExprired = isIdentityCertExprired;
            PublicKey = publicKey;
            ServiceToken = serviceToken;
            Version = version;
        }
    }
}
