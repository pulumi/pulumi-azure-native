// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataFactory
{
    public static class GetFactory
    {
        /// <summary>
        /// Gets a factory.
        /// Azure REST API version: 2018-06-01.
        /// </summary>
        public static Task<GetFactoryResult> InvokeAsync(GetFactoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFactoryResult>("azure-native:datafactory:getFactory", args ?? new GetFactoryArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a factory.
        /// Azure REST API version: 2018-06-01.
        /// </summary>
        public static Output<GetFactoryResult> Invoke(GetFactoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFactoryResult>("azure-native:datafactory:getFactory", args ?? new GetFactoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFactoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public string FactoryName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFactoryArgs()
        {
        }
        public static new GetFactoryArgs Empty => new GetFactoryArgs();
    }

    public sealed class GetFactoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("factoryName", required: true)]
        public Input<string> FactoryName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFactoryInvokeArgs()
        {
        }
        public static new GetFactoryInvokeArgs Empty => new GetFactoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetFactoryResult
    {
        /// <summary>
        /// Time the factory was created in ISO8601 format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Etag identifies change in the resource.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Properties to enable Customer Managed Key for the factory.
        /// </summary>
        public readonly Outputs.EncryptionConfigurationResponse? Encryption;
        /// <summary>
        /// List of parameters for factory.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GlobalParameterSpecificationResponse>? GlobalParameters;
        /// <summary>
        /// The resource identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed service identity of the factory.
        /// </summary>
        public readonly Outputs.FactoryIdentityResponse? Identity;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Factory provisioning state, example Succeeded.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether or not public network access is allowed for the data factory.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Purview information of the factory.
        /// </summary>
        public readonly Outputs.PurviewConfigurationResponse? PurviewConfiguration;
        /// <summary>
        /// Git repo information of the factory.
        /// </summary>
        public readonly Union<Outputs.FactoryGitHubConfigurationResponse, Outputs.FactoryVSTSConfigurationResponse>? RepoConfiguration;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the factory.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFactoryResult(
            string createTime,

            string eTag,

            Outputs.EncryptionConfigurationResponse? encryption,

            ImmutableDictionary<string, Outputs.GlobalParameterSpecificationResponse>? globalParameters,

            string id,

            Outputs.FactoryIdentityResponse? identity,

            string? location,

            string name,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.PurviewConfigurationResponse? purviewConfiguration,

            Union<Outputs.FactoryGitHubConfigurationResponse, Outputs.FactoryVSTSConfigurationResponse>? repoConfiguration,

            ImmutableDictionary<string, string>? tags,

            string type,

            string version)
        {
            CreateTime = createTime;
            ETag = eTag;
            Encryption = encryption;
            GlobalParameters = globalParameters;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            PurviewConfiguration = purviewConfiguration;
            RepoConfiguration = repoConfiguration;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
