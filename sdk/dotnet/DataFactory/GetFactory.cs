// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataFactory
{
    public static class GetFactory
    {
        public static Task<GetFactoryResult> InvokeAsync(GetFactoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFactoryResult>("azurerm:datafactory:getFactory", args ?? new GetFactoryArgs(), options.WithVersion());
    }


    public sealed class GetFactoryArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The factory name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFactoryArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFactoryResult
    {
        /// <summary>
        /// Etag identifies change in the resource.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Managed service identity of the factory.
        /// </summary>
        public readonly Outputs.FactoryIdentityResponseResult? Identity;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the factory.
        /// </summary>
        public readonly Outputs.FactoryPropertiesResponseResult Properties;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFactoryResult(
            string eTag,

            Outputs.FactoryIdentityResponseResult? identity,

            string? location,

            string name,

            Outputs.FactoryPropertiesResponseResult properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ETag = eTag;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
