// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS
{
    public static class ListPrivateCloudAdminCredentials
    {
        /// <summary>
        /// Administrative credentials for accessing vCenter and NSX-T
        /// Azure REST API version: 2022-05-01.
        /// 
        /// Other available API versions: 2023-03-01, 2023-09-01.
        /// </summary>
        public static Task<ListPrivateCloudAdminCredentialsResult> InvokeAsync(ListPrivateCloudAdminCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListPrivateCloudAdminCredentialsResult>("azure-native:avs:listPrivateCloudAdminCredentials", args ?? new ListPrivateCloudAdminCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// Administrative credentials for accessing vCenter and NSX-T
        /// Azure REST API version: 2022-05-01.
        /// 
        /// Other available API versions: 2023-03-01, 2023-09-01.
        /// </summary>
        public static Output<ListPrivateCloudAdminCredentialsResult> Invoke(ListPrivateCloudAdminCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListPrivateCloudAdminCredentialsResult>("azure-native:avs:listPrivateCloudAdminCredentials", args ?? new ListPrivateCloudAdminCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListPrivateCloudAdminCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListPrivateCloudAdminCredentialsArgs()
        {
        }
        public static new ListPrivateCloudAdminCredentialsArgs Empty => new ListPrivateCloudAdminCredentialsArgs();
    }

    public sealed class ListPrivateCloudAdminCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListPrivateCloudAdminCredentialsInvokeArgs()
        {
        }
        public static new ListPrivateCloudAdminCredentialsInvokeArgs Empty => new ListPrivateCloudAdminCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class ListPrivateCloudAdminCredentialsResult
    {
        /// <summary>
        /// NSX-T Manager password
        /// </summary>
        public readonly string NsxtPassword;
        /// <summary>
        /// NSX-T Manager username
        /// </summary>
        public readonly string NsxtUsername;
        /// <summary>
        /// vCenter admin password
        /// </summary>
        public readonly string VcenterPassword;
        /// <summary>
        /// vCenter admin username
        /// </summary>
        public readonly string VcenterUsername;

        [OutputConstructor]
        private ListPrivateCloudAdminCredentialsResult(
            string nsxtPassword,

            string nsxtUsername,

            string vcenterPassword,

            string vcenterUsername)
        {
            NsxtPassword = nsxtPassword;
            NsxtUsername = nsxtUsername;
            VcenterPassword = vcenterPassword;
            VcenterUsername = vcenterUsername;
        }
    }
}
