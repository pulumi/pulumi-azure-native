// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AVS.V20210101Preview
{
    public static class GetWorkloadNetworkDnsService
    {
        /// <summary>
        /// NSX DNS Service
        /// </summary>
        public static Task<GetWorkloadNetworkDnsServiceResult> InvokeAsync(GetWorkloadNetworkDnsServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkloadNetworkDnsServiceResult>("azure-nextgen:avs/v20210101preview:getWorkloadNetworkDnsService", args ?? new GetWorkloadNetworkDnsServiceArgs(), options.WithVersion());
    }


    public sealed class GetWorkloadNetworkDnsServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX DNS Service identifier. Generally the same as the DNS Service's display name
        /// </summary>
        [Input("dnsServiceId", required: true)]
        public string DnsServiceId { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetWorkloadNetworkDnsServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkloadNetworkDnsServiceResult
    {
        /// <summary>
        /// Default DNS zone of the DNS Service.
        /// </summary>
        public readonly string? DefaultDnsZone;
        /// <summary>
        /// Display name of the DNS Service.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// DNS service IP of the DNS Service.
        /// </summary>
        public readonly string? DnsServiceIp;
        /// <summary>
        /// FQDN zones of the DNS Service.
        /// </summary>
        public readonly ImmutableArray<string> FqdnZones;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// DNS Service log level.
        /// </summary>
        public readonly string? LogLevel;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// NSX revision number.
        /// </summary>
        public readonly double? Revision;
        /// <summary>
        /// DNS Service status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkloadNetworkDnsServiceResult(
            string? defaultDnsZone,

            string? displayName,

            string? dnsServiceIp,

            ImmutableArray<string> fqdnZones,

            string id,

            string? logLevel,

            string name,

            string provisioningState,

            double? revision,

            string status,

            string type)
        {
            DefaultDnsZone = defaultDnsZone;
            DisplayName = displayName;
            DnsServiceIp = dnsServiceIp;
            FqdnZones = fqdnZones;
            Id = id;
            LogLevel = logLevel;
            Name = name;
            ProvisioningState = provisioningState;
            Revision = revision;
            Status = status;
            Type = type;
        }
    }
}
