// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AVS.V20210101Preview
{
    public static class GetDatastore
    {
        /// <summary>
        /// A datastore resource
        /// </summary>
        public static Task<GetDatastoreResult> InvokeAsync(GetDatastoreArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatastoreResult>("azure-nextgen:avs/v20210101preview:getDatastore", args ?? new GetDatastoreArgs(), options.WithVersion());
    }


    public sealed class GetDatastoreArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster in the private cloud
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the datastore in the private cloud cluster
        /// </summary>
        [Input("datastoreName", required: true)]
        public string DatastoreName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDatastoreArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatastoreResult
    {
        /// <summary>
        /// An iSCSI volume
        /// </summary>
        public readonly Outputs.DiskPoolVolumeResponse? DiskPoolVolume;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An Azure NetApp Files volume
        /// </summary>
        public readonly Outputs.NetAppVolumeResponse? NetAppVolume;
        /// <summary>
        /// The state of the datastore provisioning
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDatastoreResult(
            Outputs.DiskPoolVolumeResponse? diskPoolVolume,

            string id,

            string name,

            Outputs.NetAppVolumeResponse? netAppVolume,

            string provisioningState,

            string type)
        {
            DiskPoolVolume = diskPoolVolume;
            Id = id;
            Name = name;
            NetAppVolume = netAppVolume;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
