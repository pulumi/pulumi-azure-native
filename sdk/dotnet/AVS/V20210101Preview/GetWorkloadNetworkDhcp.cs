// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20210101Preview
{
    public static class GetWorkloadNetworkDhcp
    {
        /// <summary>
        /// NSX DHCP
        /// </summary>
        public static Task<GetWorkloadNetworkDhcpResult> InvokeAsync(GetWorkloadNetworkDhcpArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkloadNetworkDhcpResult>("azure-native:avs/v20210101preview:getWorkloadNetworkDhcp", args ?? new GetWorkloadNetworkDhcpArgs(), options.WithDefaults());

        /// <summary>
        /// NSX DHCP
        /// </summary>
        public static Output<GetWorkloadNetworkDhcpResult> Invoke(GetWorkloadNetworkDhcpInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkloadNetworkDhcpResult>("azure-native:avs/v20210101preview:getWorkloadNetworkDhcp", args ?? new GetWorkloadNetworkDhcpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkloadNetworkDhcpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX DHCP identifier. Generally the same as the DHCP display name
        /// </summary>
        [Input("dhcpId", required: true)]
        public string DhcpId { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetWorkloadNetworkDhcpArgs()
        {
        }
        public static new GetWorkloadNetworkDhcpArgs Empty => new GetWorkloadNetworkDhcpArgs();
    }

    public sealed class GetWorkloadNetworkDhcpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX DHCP identifier. Generally the same as the DHCP display name
        /// </summary>
        [Input("dhcpId", required: true)]
        public Input<string> DhcpId { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetWorkloadNetworkDhcpInvokeArgs()
        {
        }
        public static new GetWorkloadNetworkDhcpInvokeArgs Empty => new GetWorkloadNetworkDhcpInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkloadNetworkDhcpResult
    {
        /// <summary>
        /// Type of DHCP: SERVER or RELAY.
        /// </summary>
        public readonly string DhcpType;
        /// <summary>
        /// Display name of the DHCP entity.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// NSX revision number.
        /// </summary>
        public readonly double? Revision;
        /// <summary>
        /// NSX Segments consuming DHCP.
        /// </summary>
        public readonly ImmutableArray<string> Segments;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkloadNetworkDhcpResult(
            string dhcpType,

            string? displayName,

            string id,

            string name,

            string provisioningState,

            double? revision,

            ImmutableArray<string> segments,

            string type)
        {
            DhcpType = dhcpType;
            DisplayName = displayName;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Revision = revision;
            Segments = segments;
            Type = type;
        }
    }
}
