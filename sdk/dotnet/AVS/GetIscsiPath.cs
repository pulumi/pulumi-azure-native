// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS
{
    public static class GetIscsiPath
    {
        /// <summary>
        /// Get a IscsiPath
        /// 
        /// Uses Azure REST API version 2023-09-01.
        /// 
        /// Other available API versions: 2024-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native avs [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetIscsiPathResult> InvokeAsync(GetIscsiPathArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIscsiPathResult>("azure-native:avs:getIscsiPath", args ?? new GetIscsiPathArgs(), options.WithDefaults());

        /// <summary>
        /// Get a IscsiPath
        /// 
        /// Uses Azure REST API version 2023-09-01.
        /// 
        /// Other available API versions: 2024-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native avs [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetIscsiPathResult> Invoke(GetIscsiPathInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIscsiPathResult>("azure-native:avs:getIscsiPath", args ?? new GetIscsiPathInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a IscsiPath
        /// 
        /// Uses Azure REST API version 2023-09-01.
        /// 
        /// Other available API versions: 2024-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native avs [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetIscsiPathResult> Invoke(GetIscsiPathInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIscsiPathResult>("azure-native:avs:getIscsiPath", args ?? new GetIscsiPathInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIscsiPathArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIscsiPathArgs()
        {
        }
        public static new GetIscsiPathArgs Empty => new GetIscsiPathArgs();
    }

    public sealed class GetIscsiPathInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIscsiPathInvokeArgs()
        {
        }
        public static new GetIscsiPathInvokeArgs Empty => new GetIscsiPathInvokeArgs();
    }


    [OutputType]
    public sealed class GetIscsiPathResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// CIDR Block for iSCSI path.
        /// </summary>
        public readonly string NetworkBlock;
        /// <summary>
        /// The state of the iSCSI path provisioning
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIscsiPathResult(
            string azureApiVersion,

            string id,

            string name,

            string networkBlock,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            NetworkBlock = networkBlock;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
