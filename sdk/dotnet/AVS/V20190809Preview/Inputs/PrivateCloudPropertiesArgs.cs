// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AVS.V20190809Preview.Inputs
{

    /// <summary>
    /// The properties of a private cloud resource
    /// </summary>
    public sealed class PrivateCloudPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An ExpressRoute Circuit
        /// </summary>
        [Input("circuit")]
        public Input<Inputs.CircuitArgs>? Circuit { get; set; }

        /// <summary>
        /// The default cluster used for management
        /// </summary>
        [Input("cluster")]
        public Input<Inputs.DefaultClusterPropertiesArgs>? Cluster { get; set; }

        [Input("identitySources")]
        private InputList<Inputs.IdentitySourceArgs>? _identitySources;

        /// <summary>
        /// vCenter Single Sign On Identity Sources
        /// </summary>
        public InputList<Inputs.IdentitySourceArgs> IdentitySources
        {
            get => _identitySources ?? (_identitySources = new InputList<Inputs.IdentitySourceArgs>());
            set => _identitySources = value;
        }

        /// <summary>
        /// Connectivity to internet is enabled or disabled
        /// </summary>
        [Input("internet")]
        public Input<string>? Internet { get; set; }

        /// <summary>
        /// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
        /// </summary>
        [Input("networkBlock")]
        public Input<string>? NetworkBlock { get; set; }

        /// <summary>
        /// Optionally, set the NSX-T Manager password when the private cloud is created
        /// </summary>
        [Input("nsxtPassword")]
        public Input<string>? NsxtPassword { get; set; }

        /// <summary>
        /// Optionally, set the vCenter admin password when the private cloud is created
        /// </summary>
        [Input("vcenterPassword")]
        public Input<string>? VcenterPassword { get; set; }

        public PrivateCloudPropertiesArgs()
        {
        }
    }
}
