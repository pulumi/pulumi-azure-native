// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AVS.V20200717Preview
{
    public static class GetWorkloadNetworkDnsZone
    {
        /// <summary>
        /// NSX DNS Zone
        /// </summary>
        public static Task<GetWorkloadNetworkDnsZoneResult> InvokeAsync(GetWorkloadNetworkDnsZoneArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkloadNetworkDnsZoneResult>("azure-nextgen:avs/v20200717preview:getWorkloadNetworkDnsZone", args ?? new GetWorkloadNetworkDnsZoneArgs(), options.WithVersion());
    }


    public sealed class GetWorkloadNetworkDnsZoneArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX DNS Zone identifier. Generally the same as the DNS Zone's display name
        /// </summary>
        [Input("dnsZoneId", required: true)]
        public string DnsZoneId { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetWorkloadNetworkDnsZoneArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkloadNetworkDnsZoneResult
    {
        /// <summary>
        /// Display name of the DNS Zone.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// DNS Server IP array of the DNS Zone.
        /// </summary>
        public readonly ImmutableArray<string> DnsServerIps;
        /// <summary>
        /// Number of DNS Services using the DNS zone.
        /// </summary>
        public readonly double? DnsServices;
        /// <summary>
        /// Domain names of the DNS Zone.
        /// </summary>
        public readonly ImmutableArray<string> Domain;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// NSX revision number.
        /// </summary>
        public readonly double? Revision;
        /// <summary>
        /// Source IP of the DNS Zone.
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkloadNetworkDnsZoneResult(
            string? displayName,

            ImmutableArray<string> dnsServerIps,

            double? dnsServices,

            ImmutableArray<string> domain,

            string id,

            string name,

            string provisioningState,

            double? revision,

            string? sourceIp,

            string type)
        {
            DisplayName = displayName;
            DnsServerIps = dnsServerIps;
            DnsServices = dnsServices;
            Domain = domain;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Revision = revision;
            SourceIp = sourceIp;
            Type = type;
        }
    }
}
