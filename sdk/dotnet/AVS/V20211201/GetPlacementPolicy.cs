// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20211201
{
    public static class GetPlacementPolicy
    {
        /// <summary>
        /// A vSphere Distributed Resource Scheduler (DRS) placement policy
        /// </summary>
        public static Task<GetPlacementPolicyResult> InvokeAsync(GetPlacementPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlacementPolicyResult>("azure-native:avs/v20211201:getPlacementPolicy", args ?? new GetPlacementPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// A vSphere Distributed Resource Scheduler (DRS) placement policy
        /// </summary>
        public static Output<GetPlacementPolicyResult> Invoke(GetPlacementPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlacementPolicyResult>("azure-native:avs/v20211201:getPlacementPolicy", args ?? new GetPlacementPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPlacementPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster in the private cloud
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy
        /// </summary>
        [Input("placementPolicyName", required: true)]
        public string PlacementPolicyName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPlacementPolicyArgs()
        {
        }
        public static new GetPlacementPolicyArgs Empty => new GetPlacementPolicyArgs();
    }

    public sealed class GetPlacementPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster in the private cloud
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy
        /// </summary>
        [Input("placementPolicyName", required: true)]
        public Input<string> PlacementPolicyName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPlacementPolicyInvokeArgs()
        {
        }
        public static new GetPlacementPolicyInvokeArgs Empty => new GetPlacementPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPlacementPolicyResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// placement policy properties
        /// </summary>
        public readonly Union<Outputs.VmHostPlacementPolicyPropertiesResponse, Outputs.VmVmPlacementPolicyPropertiesResponse> Properties;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPlacementPolicyResult(
            string id,

            string name,

            Union<Outputs.VmHostPlacementPolicyPropertiesResponse, Outputs.VmVmPlacementPolicyPropertiesResponse> properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
