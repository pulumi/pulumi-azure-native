// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AVS.Latest
{
    public static class GetCluster
    {
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("azure-nextgen:avs/latest:getCluster", args ?? new GetClusterArgs(), options.WithVersion());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster in the private cloud
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The identity
        /// </summary>
        public readonly int ClusterId;
        /// <summary>
        /// The cluster size
        /// </summary>
        public readonly int ClusterSize;
        /// <summary>
        /// The hosts
        /// </summary>
        public readonly ImmutableArray<string> Hosts;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The state of the cluster provisioning
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The cluster SKU
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetClusterResult(
            int clusterId,

            int clusterSize,

            ImmutableArray<string> hosts,

            string name,

            string provisioningState,

            Outputs.SkuResponse sku,

            string type)
        {
            ClusterId = clusterId;
            ClusterSize = clusterSize;
            Hosts = hosts;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            Type = type;
        }
    }
}
