// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20200320.Outputs
{

    /// <summary>
    /// The properties of a private cloud resource
    /// </summary>
    [OutputType]
    public sealed class PrivateCloudPropertiesResponse
    {
        /// <summary>
        /// An ExpressRoute Circuit
        /// </summary>
        public readonly Outputs.CircuitResponse? Circuit;
        /// <summary>
        /// The endpoints
        /// </summary>
        public readonly Outputs.EndpointsResponse Endpoints;
        /// <summary>
        /// vCenter Single Sign On Identity Sources
        /// </summary>
        public readonly ImmutableArray<Outputs.IdentitySourceResponse> IdentitySources;
        /// <summary>
        /// Connectivity to internet is enabled or disabled
        /// </summary>
        public readonly string? Internet;
        /// <summary>
        /// The default cluster used for management
        /// </summary>
        public readonly Outputs.ManagementClusterResponse ManagementCluster;
        /// <summary>
        /// Network used to access vCenter Server and NSX-T Manager
        /// </summary>
        public readonly string ManagementNetwork;
        /// <summary>
        /// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
        /// </summary>
        public readonly string NetworkBlock;
        /// <summary>
        /// Thumbprint of the NSX-T Manager SSL certificate
        /// </summary>
        public readonly string NsxtCertificateThumbprint;
        /// <summary>
        /// Optionally, set the NSX-T Manager password when the private cloud is created
        /// </summary>
        public readonly string? NsxtPassword;
        /// <summary>
        /// Used for virtual machine cold migration, cloning, and snapshot migration
        /// </summary>
        public readonly string ProvisioningNetwork;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Thumbprint of the vCenter Server SSL certificate
        /// </summary>
        public readonly string VcenterCertificateThumbprint;
        /// <summary>
        /// Optionally, set the vCenter admin password when the private cloud is created
        /// </summary>
        public readonly string? VcenterPassword;
        /// <summary>
        /// Used for live migration of virtual machines
        /// </summary>
        public readonly string VmotionNetwork;

        [OutputConstructor]
        private PrivateCloudPropertiesResponse(
            Outputs.CircuitResponse? circuit,

            Outputs.EndpointsResponse endpoints,

            ImmutableArray<Outputs.IdentitySourceResponse> identitySources,

            string? internet,

            Outputs.ManagementClusterResponse managementCluster,

            string managementNetwork,

            string networkBlock,

            string nsxtCertificateThumbprint,

            string? nsxtPassword,

            string provisioningNetwork,

            string provisioningState,

            string vcenterCertificateThumbprint,

            string? vcenterPassword,

            string vmotionNetwork)
        {
            Circuit = circuit;
            Endpoints = endpoints;
            IdentitySources = identitySources;
            Internet = internet;
            ManagementCluster = managementCluster;
            ManagementNetwork = managementNetwork;
            NetworkBlock = networkBlock;
            NsxtCertificateThumbprint = nsxtCertificateThumbprint;
            NsxtPassword = nsxtPassword;
            ProvisioningNetwork = provisioningNetwork;
            ProvisioningState = provisioningState;
            VcenterCertificateThumbprint = vcenterCertificateThumbprint;
            VcenterPassword = vcenterPassword;
            VmotionNetwork = vmotionNetwork;
        }
    }
}
