// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.Outputs
{

    /// <summary>
    /// VM-Host placement policy properties
    /// </summary>
    [OutputType]
    public sealed class VmHostPlacementPolicyPropertiesResponse
    {
        /// <summary>
        /// vm-host placement policy affinity strength (should/must)
        /// </summary>
        public readonly string? AffinityStrength;
        /// <summary>
        /// placement policy affinity type
        /// </summary>
        public readonly string AffinityType;
        /// <summary>
        /// placement policy azure hybrid benefit opt-in type
        /// </summary>
        public readonly string? AzureHybridBenefitType;
        /// <summary>
        /// Display name of the placement policy
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Host members list
        /// </summary>
        public readonly ImmutableArray<string> HostMembers;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether the placement policy is enabled or disabled
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// placement policy type
        /// Expected value is 'VmHost'.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Virtual machine members list
        /// </summary>
        public readonly ImmutableArray<string> VmMembers;

        [OutputConstructor]
        private VmHostPlacementPolicyPropertiesResponse(
            string? affinityStrength,

            string affinityType,

            string? azureHybridBenefitType,

            string? displayName,

            ImmutableArray<string> hostMembers,

            string provisioningState,

            string? state,

            string type,

            ImmutableArray<string> vmMembers)
        {
            AffinityStrength = affinityStrength;
            AffinityType = affinityType;
            AzureHybridBenefitType = azureHybridBenefitType;
            DisplayName = displayName;
            HostMembers = hostMembers;
            ProvisioningState = provisioningState;
            State = state;
            Type = type;
            VmMembers = vmMembers;
        }
    }
}
