// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20230901
{
    public static class GetGlobalReachConnection
    {
        /// <summary>
        /// Get a GlobalReachConnection
        /// </summary>
        public static Task<GetGlobalReachConnectionResult> InvokeAsync(GetGlobalReachConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGlobalReachConnectionResult>("azure-native:avs/v20230901:getGlobalReachConnection", args ?? new GetGlobalReachConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Get a GlobalReachConnection
        /// </summary>
        public static Output<GetGlobalReachConnectionResult> Invoke(GetGlobalReachConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlobalReachConnectionResult>("azure-native:avs/v20230901:getGlobalReachConnection", args ?? new GetGlobalReachConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGlobalReachConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the global reach connection
        /// </summary>
        [Input("globalReachConnectionName", required: true)]
        public string GlobalReachConnectionName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGlobalReachConnectionArgs()
        {
        }
        public static new GetGlobalReachConnectionArgs Empty => new GetGlobalReachConnectionArgs();
    }

    public sealed class GetGlobalReachConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the global reach connection
        /// </summary>
        [Input("globalReachConnectionName", required: true)]
        public Input<string> GlobalReachConnectionName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGlobalReachConnectionInvokeArgs()
        {
        }
        public static new GetGlobalReachConnectionInvokeArgs Empty => new GetGlobalReachConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetGlobalReachConnectionResult
    {
        /// <summary>
        /// The network used for global reach carved out from the original network block
        /// provided for the private cloud
        /// </summary>
        public readonly string AddressPrefix;
        /// <summary>
        /// Authorization key from the peer express route used for the global reach
        /// connection
        /// </summary>
        public readonly string? AuthorizationKey;
        /// <summary>
        /// The connection status of the global reach connection
        /// </summary>
        public readonly string CircuitConnectionStatus;
        /// <summary>
        /// The ID of the Private Cloud's ExpressRoute Circuit that is participating in the
        /// global reach connection
        /// </summary>
        public readonly string? ExpressRouteId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Identifier of the ExpressRoute Circuit to peer with in the global reach
        /// connection
        /// </summary>
        public readonly string? PeerExpressRouteCircuit;
        /// <summary>
        /// The state of the  ExpressRoute Circuit Authorization provisioning
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGlobalReachConnectionResult(
            string addressPrefix,

            string? authorizationKey,

            string circuitConnectionStatus,

            string? expressRouteId,

            string id,

            string name,

            string? peerExpressRouteCircuit,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AddressPrefix = addressPrefix;
            AuthorizationKey = authorizationKey;
            CircuitConnectionStatus = circuitConnectionStatus;
            ExpressRouteId = expressRouteId;
            Id = id;
            Name = name;
            PeerExpressRouteCircuit = peerExpressRouteCircuit;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
