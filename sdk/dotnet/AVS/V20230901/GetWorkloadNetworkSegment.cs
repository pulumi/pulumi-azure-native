// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20230901
{
    public static class GetWorkloadNetworkSegment
    {
        /// <summary>
        /// Get a WorkloadNetworkSegment
        /// </summary>
        public static Task<GetWorkloadNetworkSegmentResult> InvokeAsync(GetWorkloadNetworkSegmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkloadNetworkSegmentResult>("azure-native:avs/v20230901:getWorkloadNetworkSegment", args ?? new GetWorkloadNetworkSegmentArgs(), options.WithDefaults());

        /// <summary>
        /// Get a WorkloadNetworkSegment
        /// </summary>
        public static Output<GetWorkloadNetworkSegmentResult> Invoke(GetWorkloadNetworkSegmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkloadNetworkSegmentResult>("azure-native:avs/v20230901:getWorkloadNetworkSegment", args ?? new GetWorkloadNetworkSegmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkloadNetworkSegmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the NSX Segment
        /// </summary>
        [Input("segmentId", required: true)]
        public string SegmentId { get; set; } = null!;

        public GetWorkloadNetworkSegmentArgs()
        {
        }
        public static new GetWorkloadNetworkSegmentArgs Empty => new GetWorkloadNetworkSegmentArgs();
    }

    public sealed class GetWorkloadNetworkSegmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the NSX Segment
        /// </summary>
        [Input("segmentId", required: true)]
        public Input<string> SegmentId { get; set; } = null!;

        public GetWorkloadNetworkSegmentInvokeArgs()
        {
        }
        public static new GetWorkloadNetworkSegmentInvokeArgs Empty => new GetWorkloadNetworkSegmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkloadNetworkSegmentResult
    {
        /// <summary>
        /// Gateway which to connect segment to.
        /// </summary>
        public readonly string? ConnectedGateway;
        /// <summary>
        /// Display name of the segment.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Port Vif which segment is associated with.
        /// </summary>
        public readonly ImmutableArray<Outputs.WorkloadNetworkSegmentPortVifResponse> PortVif;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// NSX revision number.
        /// </summary>
        public readonly double? Revision;
        /// <summary>
        /// Segment status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Subnet which to connect segment to.
        /// </summary>
        public readonly Outputs.WorkloadNetworkSegmentSubnetResponse? Subnet;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkloadNetworkSegmentResult(
            string? connectedGateway,

            string? displayName,

            string id,

            string name,

            ImmutableArray<Outputs.WorkloadNetworkSegmentPortVifResponse> portVif,

            string provisioningState,

            double? revision,

            string status,

            Outputs.WorkloadNetworkSegmentSubnetResponse? subnet,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ConnectedGateway = connectedGateway;
            DisplayName = displayName;
            Id = id;
            Name = name;
            PortVif = portVif;
            ProvisioningState = provisioningState;
            Revision = revision;
            Status = status;
            Subnet = subnet;
            SystemData = systemData;
            Type = type;
        }
    }
}
