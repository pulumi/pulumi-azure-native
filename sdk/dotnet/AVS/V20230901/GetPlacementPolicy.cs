// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20230901
{
    public static class GetPlacementPolicy
    {
        /// <summary>
        /// Get a PlacementPolicy
        /// </summary>
        public static Task<GetPlacementPolicyResult> InvokeAsync(GetPlacementPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlacementPolicyResult>("azure-native:avs/v20230901:getPlacementPolicy", args ?? new GetPlacementPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Get a PlacementPolicy
        /// </summary>
        public static Output<GetPlacementPolicyResult> Invoke(GetPlacementPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlacementPolicyResult>("azure-native:avs/v20230901:getPlacementPolicy", args ?? new GetPlacementPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPlacementPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the placement policy.
        /// </summary>
        [Input("placementPolicyName", required: true)]
        public string PlacementPolicyName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public string PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPlacementPolicyArgs()
        {
        }
        public static new GetPlacementPolicyArgs Empty => new GetPlacementPolicyArgs();
    }

    public sealed class GetPlacementPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the placement policy.
        /// </summary>
        [Input("placementPolicyName", required: true)]
        public Input<string> PlacementPolicyName { get; set; } = null!;

        /// <summary>
        /// Name of the private cloud
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPlacementPolicyInvokeArgs()
        {
        }
        public static new GetPlacementPolicyInvokeArgs Empty => new GetPlacementPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPlacementPolicyResult
    {
        /// <summary>
        /// Display name of the placement policy
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether the placement policy is enabled or disabled
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPlacementPolicyResult(
            string? displayName,

            string id,

            string name,

            string provisioningState,

            string? state,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DisplayName = displayName;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            State = state;
            SystemData = systemData;
            Type = type;
        }
    }
}
