// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedNetwork.V20190601Preview
{
    public static class GetManagedNetwork
    {
        public static Task<GetManagedNetworkResult> InvokeAsync(GetManagedNetworkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedNetworkResult>("azure-nextgen:managednetwork/v20190601preview:getManagedNetwork", args ?? new GetManagedNetworkArgs(), options.WithVersion());
    }


    public sealed class GetManagedNetworkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Managed Network.
        /// </summary>
        [Input("managedNetworkName", required: true)]
        public string ManagedNetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedNetworkArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagedNetworkResult
    {
        /// <summary>
        /// The collection of groups and policies concerned with connectivity
        /// </summary>
        public readonly Outputs.ConnectivityCollectionResponse Connectivity;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the ManagedNetwork resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only property that is reflective of all ScopeAssignments for this Managed Network
        /// </summary>
        public readonly Outputs.ScopeResponse? Scope;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedNetworkResult(
            Outputs.ConnectivityCollectionResponse connectivity,

            string etag,

            string location,

            string name,

            string provisioningState,

            Outputs.ScopeResponse? scope,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Connectivity = connectivity;
            Etag = etag;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Scope = scope;
            Tags = tags;
            Type = type;
        }
    }
}
