// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedNetwork.V20190601Preview
{
    public static class GetManagedNetworkPeeringPolicy
    {
        public static Task<GetManagedNetworkPeeringPolicyResult> InvokeAsync(GetManagedNetworkPeeringPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedNetworkPeeringPolicyResult>("azure-nextgen:managednetwork/v20190601preview:getManagedNetworkPeeringPolicy", args ?? new GetManagedNetworkPeeringPolicyArgs(), options.WithVersion());
    }


    public sealed class GetManagedNetworkPeeringPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Managed Network.
        /// </summary>
        [Input("managedNetworkName", required: true)]
        public string ManagedNetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the Managed Network Peering Policy.
        /// </summary>
        [Input("managedNetworkPeeringPolicyName", required: true)]
        public string ManagedNetworkPeeringPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedNetworkPeeringPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagedNetworkPeeringPolicyResult
    {
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the properties of a Managed Network Policy
        /// </summary>
        public readonly Outputs.ManagedNetworkPeeringPolicyPropertiesResponse Properties;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagedNetworkPeeringPolicyResult(
            string? location,

            string name,

            Outputs.ManagedNetworkPeeringPolicyPropertiesResponse properties,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
