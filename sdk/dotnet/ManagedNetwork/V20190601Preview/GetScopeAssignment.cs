// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedNetwork.V20190601Preview
{
    public static class GetScopeAssignment
    {
        public static Task<GetScopeAssignmentResult> InvokeAsync(GetScopeAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScopeAssignmentResult>("azure-nextgen:managednetwork/v20190601preview:getScopeAssignment", args ?? new GetScopeAssignmentArgs(), options.WithVersion());
    }


    public sealed class GetScopeAssignmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The base resource of the scope assignment.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        /// <summary>
        /// The name of the scope assignment to get.
        /// </summary>
        [Input("scopeAssignmentName", required: true)]
        public string ScopeAssignmentName { get; set; } = null!;

        public GetScopeAssignmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScopeAssignmentResult
    {
        /// <summary>
        /// The managed network ID with scope will be assigned to.
        /// </summary>
        public readonly string? AssignedManagedNetwork;
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the ManagedNetwork resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScopeAssignmentResult(
            string? assignedManagedNetwork,

            string etag,

            string? location,

            string name,

            string provisioningState,

            string type)
        {
            AssignedManagedNetwork = assignedManagedNetwork;
            Etag = etag;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
