// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ManagedNetwork.V20190601Preview.Outputs
{

    [OutputType]
    public sealed class ManagedNetworkPeeringPolicyPropertiesInvokeResponseResult
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Gets or sets the hub virtual network ID
        /// </summary>
        public readonly Outputs.ResourceIdInvokeResponseResult? Hub;
        /// <summary>
        /// Gets or sets the mesh group IDs
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceIdInvokeResponseResult> Mesh;
        /// <summary>
        /// Provisioning state of the ManagedNetwork resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets or sets the spokes group IDs
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceIdInvokeResponseResult> Spokes;
        /// <summary>
        /// Gets or sets the connectivity type of a network structure policy
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ManagedNetworkPeeringPolicyPropertiesInvokeResponseResult(
            string etag,

            Outputs.ResourceIdInvokeResponseResult? hub,

            ImmutableArray<Outputs.ResourceIdInvokeResponseResult> mesh,

            string provisioningState,

            ImmutableArray<Outputs.ResourceIdInvokeResponseResult> spokes,

            string type)
        {
            Etag = etag;
            Hub = hub;
            Mesh = mesh;
            ProvisioningState = provisioningState;
            Spokes = spokes;
            Type = type;
        }
    }
}
