// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiCenter.V20240601Preview
{
    public static class GetApiDefinition
    {
        /// <summary>
        /// Returns details of the API definition.
        /// </summary>
        public static Task<GetApiDefinitionResult> InvokeAsync(GetApiDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiDefinitionResult>("azure-native:apicenter/v20240601preview:getApiDefinition", args ?? new GetApiDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Returns details of the API definition.
        /// </summary>
        public static Output<GetApiDefinitionResult> Invoke(GetApiDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiDefinitionResult>("azure-native:apicenter/v20240601preview:getApiDefinition", args ?? new GetApiDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API.
        /// </summary>
        [Input("apiName", required: true)]
        public string ApiName { get; set; } = null!;

        /// <summary>
        /// The name of the API definition.
        /// </summary>
        [Input("definitionName", required: true)]
        public string DefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the API version.
        /// </summary>
        [Input("versionName", required: true)]
        public string VersionName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetApiDefinitionArgs()
        {
        }
        public static new GetApiDefinitionArgs Empty => new GetApiDefinitionArgs();
    }

    public sealed class GetApiDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API.
        /// </summary>
        [Input("apiName", required: true)]
        public Input<string> ApiName { get; set; } = null!;

        /// <summary>
        /// The name of the API definition.
        /// </summary>
        [Input("definitionName", required: true)]
        public Input<string> DefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the API version.
        /// </summary>
        [Input("versionName", required: true)]
        public Input<string> VersionName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetApiDefinitionInvokeArgs()
        {
        }
        public static new GetApiDefinitionInvokeArgs Empty => new GetApiDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiDefinitionResult
    {
        /// <summary>
        /// API definition description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// API specification details.
        /// </summary>
        public readonly Outputs.ApiDefinitionPropertiesSpecificationResponse Specification;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// API definition title.
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApiDefinitionResult(
            string? description,

            string id,

            string name,

            Outputs.ApiDefinitionPropertiesSpecificationResponse specification,

            Outputs.SystemDataResponse systemData,

            string title,

            string type)
        {
            Description = description;
            Id = id;
            Name = name;
            Specification = specification;
            SystemData = systemData;
            Title = title;
            Type = type;
        }
    }
}
