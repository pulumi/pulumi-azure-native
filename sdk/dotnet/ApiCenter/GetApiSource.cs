// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiCenter
{
    public static class GetApiSource
    {
        /// <summary>
        /// Returns details of the API source.
        /// Azure REST API version: 2024-06-01-preview.
        /// </summary>
        public static Task<GetApiSourceResult> InvokeAsync(GetApiSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiSourceResult>("azure-native:apicenter:getApiSource", args ?? new GetApiSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Returns details of the API source.
        /// Azure REST API version: 2024-06-01-preview.
        /// </summary>
        public static Output<GetApiSourceResult> Invoke(GetApiSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiSourceResult>("azure-native:apicenter:getApiSource", args ?? new GetApiSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API.
        /// </summary>
        [Input("apiSourceName", required: true)]
        public string ApiSourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetApiSourceArgs()
        {
        }
        public static new GetApiSourceArgs Empty => new GetApiSourceArgs();
    }

    public sealed class GetApiSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API.
        /// </summary>
        [Input("apiSourceName", required: true)]
        public Input<string> ApiSourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetApiSourceInvokeArgs()
        {
        }
        public static new GetApiSourceInvokeArgs Empty => new GetApiSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiSourceResult
    {
        /// <summary>
        /// API source configuration for Azure API Management.
        /// </summary>
        public readonly Outputs.AzureApiManagementSourceResponse? AzureApiManagementSource;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if the specification should be imported along with metadata.
        /// </summary>
        public readonly string? ImportSpecification;
        /// <summary>
        /// The state of the API source link
        /// </summary>
        public readonly Outputs.LinkStateResponse LinkState;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The target environment resource ID.
        /// </summary>
        public readonly string? TargetEnvironmentId;
        /// <summary>
        /// The target lifecycle stage.
        /// </summary>
        public readonly string? TargetLifecycleStage;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApiSourceResult(
            Outputs.AzureApiManagementSourceResponse? azureApiManagementSource,

            string id,

            string? importSpecification,

            Outputs.LinkStateResponse linkState,

            string name,

            Outputs.SystemDataResponse systemData,

            string? targetEnvironmentId,

            string? targetLifecycleStage,

            string type)
        {
            AzureApiManagementSource = azureApiManagementSource;
            Id = id;
            ImportSpecification = importSpecification;
            LinkState = linkState;
            Name = name;
            SystemData = systemData;
            TargetEnvironmentId = targetEnvironmentId;
            TargetLifecycleStage = targetLifecycleStage;
            Type = type;
        }
    }
}
