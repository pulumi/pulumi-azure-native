// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiCenter.V20240301
{
    public static class GetMetadataSchema
    {
        /// <summary>
        /// Returns details of the metadata schema.
        /// </summary>
        public static Task<GetMetadataSchemaResult> InvokeAsync(GetMetadataSchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMetadataSchemaResult>("azure-native:apicenter/v20240301:getMetadataSchema", args ?? new GetMetadataSchemaArgs(), options.WithDefaults());

        /// <summary>
        /// Returns details of the metadata schema.
        /// </summary>
        public static Output<GetMetadataSchemaResult> Invoke(GetMetadataSchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetadataSchemaResult>("azure-native:apicenter/v20240301:getMetadataSchema", args ?? new GetMetadataSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetadataSchemaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the metadata schema.
        /// </summary>
        [Input("metadataSchemaName", required: true)]
        public string MetadataSchemaName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetMetadataSchemaArgs()
        {
        }
        public static new GetMetadataSchemaArgs Empty => new GetMetadataSchemaArgs();
    }

    public sealed class GetMetadataSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the metadata schema.
        /// </summary>
        [Input("metadataSchemaName", required: true)]
        public Input<string> MetadataSchemaName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of Azure API Center service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetMetadataSchemaInvokeArgs()
        {
        }
        public static new GetMetadataSchemaInvokeArgs Empty => new GetMetadataSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetMetadataSchemaResult
    {
        /// <summary>
        /// The assignees
        /// </summary>
        public readonly ImmutableArray<Outputs.MetadataAssignmentResponse> AssignedTo;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The schema defining the type.
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMetadataSchemaResult(
            ImmutableArray<Outputs.MetadataAssignmentResponse> assignedTo,

            string id,

            string name,

            string schema,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AssignedTo = assignedTo;
            Id = id;
            Name = name;
            Schema = schema;
            SystemData = systemData;
            Type = type;
        }
    }
}
