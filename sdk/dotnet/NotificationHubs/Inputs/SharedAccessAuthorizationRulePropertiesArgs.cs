// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NotificationHubs.Inputs
{

    /// <summary>
    /// SharedAccessAuthorizationRule properties.
    /// </summary>
    public sealed class SharedAccessAuthorizationRulePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </summary>
        [Input("primaryKey")]
        public Input<string>? PrimaryKey { get; set; }

        [Input("rights", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.NotificationHubs.AccessRights>>? _rights;

        /// <summary>
        /// Gets or sets the rights associated with the rule.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.NotificationHubs.AccessRights>> Rights
        {
            get => _rights ?? (_rights = new InputList<Union<string, Pulumi.AzureNative.NotificationHubs.AccessRights>>());
            set => _rights = value;
        }

        /// <summary>
        /// Gets a base64-encoded 256-bit primary key for signing and
        /// validating the SAS token.
        /// </summary>
        [Input("secondaryKey")]
        public Input<string>? SecondaryKey { get; set; }

        public SharedAccessAuthorizationRulePropertiesArgs()
        {
        }
        public static new SharedAccessAuthorizationRulePropertiesArgs Empty => new SharedAccessAuthorizationRulePropertiesArgs();
    }
}
