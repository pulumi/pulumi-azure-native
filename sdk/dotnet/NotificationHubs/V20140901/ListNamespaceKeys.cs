// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.NotificationHubs.V20140901
{
    public static class ListNamespaceKeys
    {
        public static Task<ListNamespaceKeysResult> InvokeAsync(ListNamespaceKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListNamespaceKeysResult>("azure-nextgen:notificationhubs/v20140901:listNamespaceKeys", args ?? new ListNamespaceKeysArgs(), options.WithVersion());
    }


    public sealed class ListNamespaceKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The connection string of the namespace for the specified authorizationRule.
        /// </summary>
        [Input("authorizationRuleName", required: true)]
        public string AuthorizationRuleName { get; set; } = null!;

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListNamespaceKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListNamespaceKeysResult
    {
        /// <summary>
        /// Gets or sets the primaryConnectionString of the created Namespace AuthorizationRule.
        /// </summary>
        public readonly string? PrimaryConnectionString;
        /// <summary>
        /// Gets or sets the secondaryConnectionString of the created Namespace AuthorizationRule
        /// </summary>
        public readonly string? SecondaryConnectionString;

        [OutputConstructor]
        private ListNamespaceKeysResult(
            string? primaryConnectionString,

            string? secondaryConnectionString)
        {
            PrimaryConnectionString = primaryConnectionString;
            SecondaryConnectionString = secondaryConnectionString;
        }
    }
}
