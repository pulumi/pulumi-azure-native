// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.NotificationHubs.V20140901
{
    public static class GetNamespace
    {
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("azure-nextgen:notificationhubs/v20140901:getNamespace", args ?? new GetNamespaceArgs(), options.WithVersion());
    }


    public sealed class GetNamespaceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// Gets or sets datacenter location of the Namespace.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Gets or sets name of the Namespace.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Gets or sets properties of the Namespace.
        /// </summary>
        public readonly Outputs.NamespacePropertiesResponse Properties;
        /// <summary>
        /// Gets or sets tags of the Namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Gets or sets resource type of the Namespace.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetNamespaceResult(
            string? location,

            string? name,

            Outputs.NamespacePropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string? type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
