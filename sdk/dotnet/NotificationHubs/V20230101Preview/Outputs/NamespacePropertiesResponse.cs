// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NotificationHubs.V20230101Preview.Outputs
{

    /// <summary>
    /// Represents namespace properties.
    /// </summary>
    [OutputType]
    public sealed class NamespacePropertiesResponse
    {
        /// <summary>
        /// Time when the namespace was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Gets or sets whether or not the namespace is set as Critical.
        /// </summary>
        public readonly bool Critical;
        /// <summary>
        /// Deprecated.
        /// </summary>
        public readonly string? DataCenter;
        /// <summary>
        /// Gets or sets whether or not the namespace is currently enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Azure Insights Metrics id.
        /// </summary>
        public readonly string MetricId;
        /// <summary>
        /// Name of the Notification Hubs namespace. This is immutable property, set automatically 
        /// by the service when the namespace is created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines values for NamespaceType.
        /// </summary>
        public readonly string? NamespaceType;
        /// <summary>
        /// A collection of network authorization rules.
        /// </summary>
        public readonly Outputs.NetworkAclsResponse? NetworkAcls;
        /// <summary>
        /// Collection of Notification Hub or Notification Hub Namespace PNS credentials.
        /// </summary>
        public readonly Outputs.PnsCredentialsResponse? PnsCredentials;
        /// <summary>
        /// Private Endpoint Connections for namespace
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResourceResponse> PrivateEndpointConnections;
        /// <summary>
        /// Defines values for OperationProvisioningState.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Type of public network access.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Region. The value is always set to the same value as Namespace.Location, so we are deprecating
        /// this property.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Allowed replication region
        /// </summary>
        public readonly string? ReplicationRegion;
        /// <summary>
        /// Gets or sets scaleUnit where the namespace gets created
        /// </summary>
        public readonly string? ScaleUnit;
        /// <summary>
        /// Gets or sets endpoint you can use to perform NotificationHub
        /// operations.
        /// </summary>
        public readonly string ServiceBusEndpoint;
        /// <summary>
        /// Namespace status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Namespace subscription id.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Time when the namespace was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Namespace SKU name.
        /// </summary>
        public readonly string? ZoneRedundancy;

        [OutputConstructor]
        private NamespacePropertiesResponse(
            string createdAt,

            bool critical,

            string? dataCenter,

            bool enabled,

            string metricId,

            string name,

            string? namespaceType,

            Outputs.NetworkAclsResponse? networkAcls,

            Outputs.PnsCredentialsResponse? pnsCredentials,

            ImmutableArray<Outputs.PrivateEndpointConnectionResourceResponse> privateEndpointConnections,

            string? provisioningState,

            string? publicNetworkAccess,

            string region,

            string? replicationRegion,

            string? scaleUnit,

            string serviceBusEndpoint,

            string? status,

            string subscriptionId,

            string updatedAt,

            string? zoneRedundancy)
        {
            CreatedAt = createdAt;
            Critical = critical;
            DataCenter = dataCenter;
            Enabled = enabled;
            MetricId = metricId;
            Name = name;
            NamespaceType = namespaceType;
            NetworkAcls = networkAcls;
            PnsCredentials = pnsCredentials;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            Region = region;
            ReplicationRegion = replicationRegion;
            ScaleUnit = scaleUnit;
            ServiceBusEndpoint = serviceBusEndpoint;
            Status = status;
            SubscriptionId = subscriptionId;
            UpdatedAt = updatedAt;
            ZoneRedundancy = zoneRedundancy;
        }
    }
}
