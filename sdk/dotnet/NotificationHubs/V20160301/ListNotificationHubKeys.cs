// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NotificationHubs.V20160301
{
    public static class ListNotificationHubKeys
    {
        /// <summary>
        /// Gets the Primary and Secondary ConnectionStrings to the NotificationHub 
        /// </summary>
        public static Task<ListNotificationHubKeysResult> InvokeAsync(ListNotificationHubKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListNotificationHubKeysResult>("azure-native:notificationhubs/v20160301:listNotificationHubKeys", args ?? new ListNotificationHubKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Primary and Secondary ConnectionStrings to the NotificationHub 
        /// </summary>
        public static Output<ListNotificationHubKeysResult> Invoke(ListNotificationHubKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListNotificationHubKeysResult>("azure-native:notificationhubs/v20160301:listNotificationHubKeys", args ?? new ListNotificationHubKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListNotificationHubKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The connection string of the NotificationHub for the specified authorizationRule.
        /// </summary>
        [Input("authorizationRuleName", required: true)]
        public string AuthorizationRuleName { get; set; } = null!;

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The notification hub name.
        /// </summary>
        [Input("notificationHubName", required: true)]
        public string NotificationHubName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListNotificationHubKeysArgs()
        {
        }
        public static new ListNotificationHubKeysArgs Empty => new ListNotificationHubKeysArgs();
    }

    public sealed class ListNotificationHubKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The connection string of the NotificationHub for the specified authorizationRule.
        /// </summary>
        [Input("authorizationRuleName", required: true)]
        public Input<string> AuthorizationRuleName { get; set; } = null!;

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The notification hub name.
        /// </summary>
        [Input("notificationHubName", required: true)]
        public Input<string> NotificationHubName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListNotificationHubKeysInvokeArgs()
        {
        }
        public static new ListNotificationHubKeysInvokeArgs Empty => new ListNotificationHubKeysInvokeArgs();
    }


    [OutputType]
    public sealed class ListNotificationHubKeysResult
    {
        /// <summary>
        /// KeyName of the created AuthorizationRule
        /// </summary>
        public readonly string? KeyName;
        /// <summary>
        /// PrimaryConnectionString of the AuthorizationRule.
        /// </summary>
        public readonly string? PrimaryConnectionString;
        /// <summary>
        /// PrimaryKey of the created AuthorizationRule.
        /// </summary>
        public readonly string? PrimaryKey;
        /// <summary>
        /// SecondaryConnectionString of the created AuthorizationRule
        /// </summary>
        public readonly string? SecondaryConnectionString;
        /// <summary>
        /// SecondaryKey of the created AuthorizationRule
        /// </summary>
        public readonly string? SecondaryKey;

        [OutputConstructor]
        private ListNotificationHubKeysResult(
            string? keyName,

            string? primaryConnectionString,

            string? primaryKey,

            string? secondaryConnectionString,

            string? secondaryKey)
        {
            KeyName = keyName;
            PrimaryConnectionString = primaryConnectionString;
            PrimaryKey = primaryKey;
            SecondaryConnectionString = secondaryConnectionString;
            SecondaryKey = secondaryKey;
        }
    }
}
