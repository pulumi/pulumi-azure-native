// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DBforMySQL
{
    public static class GetServerAdministrator
    {
        public static Task<GetServerAdministratorResult> InvokeAsync(GetServerAdministratorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerAdministratorResult>("azurerm:dbformysql:getServerAdministrator", args ?? new GetServerAdministratorArgs(), options.WithVersion());
    }


    public sealed class GetServerAdministratorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetServerAdministratorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerAdministratorResult
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties of the server AAD administrator.
        /// </summary>
        public readonly Outputs.ServerAdministratorPropertiesResponseResult Properties;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServerAdministratorResult(
            string name,

            Outputs.ServerAdministratorPropertiesResponseResult properties,

            string type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
