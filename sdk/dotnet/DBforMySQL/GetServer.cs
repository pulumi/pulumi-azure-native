// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforMySQL
{
    public static class GetServer
    {
        /// <summary>
        /// Gets information about a server.
        /// Azure REST API version: 2022-01-01.
        /// 
        /// Other available API versions: 2017-12-01, 2018-06-01-privatepreview, 2020-07-01-preview, 2020-07-01-privatepreview, 2022-09-30-preview, 2023-06-01-preview, 2023-06-30, 2023-10-01-preview, 2023-12-01-preview, 2023-12-30, 2024-02-01-preview, 2024-06-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetServerResult> InvokeAsync(GetServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerResult>("azure-native:dbformysql:getServer", args ?? new GetServerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a server.
        /// Azure REST API version: 2022-01-01.
        /// 
        /// Other available API versions: 2017-12-01, 2018-06-01-privatepreview, 2020-07-01-preview, 2020-07-01-privatepreview, 2022-09-30-preview, 2023-06-01-preview, 2023-06-30, 2023-10-01-preview, 2023-12-01-preview, 2023-12-30, 2024-02-01-preview, 2024-06-01-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetServerResult> Invoke(GetServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerResult>("azure-native:dbformysql:getServer", args ?? new GetServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetServerArgs()
        {
        }
        public static new GetServerArgs Empty => new GetServerArgs();
    }

    public sealed class GetServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetServerInvokeArgs()
        {
        }
        public static new GetServerInvokeArgs Empty => new GetServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerResult
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        /// </summary>
        public readonly string? AdministratorLogin;
        /// <summary>
        /// availability Zone information of the server.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// Backup related properties of a server.
        /// </summary>
        public readonly Outputs.BackupResponse? Backup;
        /// <summary>
        /// The Data Encryption for CMK.
        /// </summary>
        public readonly Outputs.DataEncryptionResponse? DataEncryption;
        /// <summary>
        /// The fully qualified domain name of a server.
        /// </summary>
        public readonly string FullyQualifiedDomainName;
        /// <summary>
        /// High availability related properties of a server.
        /// </summary>
        public readonly Outputs.HighAvailabilityResponse? HighAvailability;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The cmk identity for the server.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Maintenance window of a server.
        /// </summary>
        public readonly Outputs.MaintenanceWindowResponse? MaintenanceWindow;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network related properties of a server.
        /// </summary>
        public readonly Outputs.NetworkResponse? Network;
        /// <summary>
        /// The maximum number of replicas that a primary server can have.
        /// </summary>
        public readonly int ReplicaCapacity;
        /// <summary>
        /// The replication role.
        /// </summary>
        public readonly string? ReplicationRole;
        /// <summary>
        /// The SKU (pricing tier) of the server.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// The source MySQL server id.
        /// </summary>
        public readonly string? SourceServerResourceId;
        /// <summary>
        /// The state of a server.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Storage related properties of a server.
        /// </summary>
        public readonly Outputs.StorageResponse? Storage;
        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Server version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetServerResult(
            string? administratorLogin,

            string? availabilityZone,

            Outputs.BackupResponse? backup,

            Outputs.DataEncryptionResponse? dataEncryption,

            string fullyQualifiedDomainName,

            Outputs.HighAvailabilityResponse? highAvailability,

            string id,

            Outputs.IdentityResponse? identity,

            string location,

            Outputs.MaintenanceWindowResponse? maintenanceWindow,

            string name,

            Outputs.NetworkResponse? network,

            int replicaCapacity,

            string? replicationRole,

            Outputs.SkuResponse? sku,

            string? sourceServerResourceId,

            string state,

            Outputs.StorageResponse? storage,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            AdministratorLogin = administratorLogin;
            AvailabilityZone = availabilityZone;
            Backup = backup;
            DataEncryption = dataEncryption;
            FullyQualifiedDomainName = fullyQualifiedDomainName;
            HighAvailability = highAvailability;
            Id = id;
            Identity = identity;
            Location = location;
            MaintenanceWindow = maintenanceWindow;
            Name = name;
            Network = network;
            ReplicaCapacity = replicaCapacity;
            ReplicationRole = replicationRole;
            Sku = sku;
            SourceServerResourceId = sourceServerResourceId;
            State = state;
            Storage = storage;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
