// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforMySQL
{
    public static class GetSingleServerDatabase
    {
        /// <summary>
        /// Gets information about a database.
        /// 
        /// Uses Azure REST API version 2017-12-01.
        /// </summary>
        public static Task<GetSingleServerDatabaseResult> InvokeAsync(GetSingleServerDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSingleServerDatabaseResult>("azure-native:dbformysql:getSingleServerDatabase", args ?? new GetSingleServerDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a database.
        /// 
        /// Uses Azure REST API version 2017-12-01.
        /// </summary>
        public static Output<GetSingleServerDatabaseResult> Invoke(GetSingleServerDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSingleServerDatabaseResult>("azure-native:dbformysql:getSingleServerDatabase", args ?? new GetSingleServerDatabaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a database.
        /// 
        /// Uses Azure REST API version 2017-12-01.
        /// </summary>
        public static Output<GetSingleServerDatabaseResult> Invoke(GetSingleServerDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSingleServerDatabaseResult>("azure-native:dbformysql:getSingleServerDatabase", args ?? new GetSingleServerDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSingleServerDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetSingleServerDatabaseArgs()
        {
        }
        public static new GetSingleServerDatabaseArgs Empty => new GetSingleServerDatabaseArgs();
    }

    public sealed class GetSingleServerDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the database.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetSingleServerDatabaseInvokeArgs()
        {
        }
        public static new GetSingleServerDatabaseInvokeArgs Empty => new GetSingleServerDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetSingleServerDatabaseResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The charset of the database.
        /// </summary>
        public readonly string? Charset;
        /// <summary>
        /// The collation of the database.
        /// </summary>
        public readonly string? Collation;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSingleServerDatabaseResult(
            string azureApiVersion,

            string? charset,

            string? collation,

            string id,

            string name,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Charset = charset;
            Collation = collation;
            Id = id;
            Name = name;
            Type = type;
        }
    }
}
