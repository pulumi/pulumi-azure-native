// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforMySQL.V20211201Preview
{
    public static class GetAzureADAdministrator
    {
        /// <summary>
        /// Gets information about an azure ad administrator.
        /// </summary>
        public static Task<GetAzureADAdministratorResult> InvokeAsync(GetAzureADAdministratorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureADAdministratorResult>("azure-native:dbformysql/v20211201preview:getAzureADAdministrator", args ?? new GetAzureADAdministratorArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an azure ad administrator.
        /// </summary>
        public static Output<GetAzureADAdministratorResult> Invoke(GetAzureADAdministratorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureADAdministratorResult>("azure-native:dbformysql/v20211201preview:getAzureADAdministrator", args ?? new GetAzureADAdministratorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureADAdministratorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure AD Administrator.
        /// </summary>
        [Input("administratorName", required: true)]
        public string AdministratorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public GetAzureADAdministratorArgs()
        {
        }
        public static new GetAzureADAdministratorArgs Empty => new GetAzureADAdministratorArgs();
    }

    public sealed class GetAzureADAdministratorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure AD Administrator.
        /// </summary>
        [Input("administratorName", required: true)]
        public Input<string> AdministratorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        public GetAzureADAdministratorInvokeArgs()
        {
        }
        public static new GetAzureADAdministratorInvokeArgs Empty => new GetAzureADAdministratorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureADAdministratorResult
    {
        /// <summary>
        /// Type of the sever administrator.
        /// </summary>
        public readonly string? AdministratorType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource id of the identity used for AAD Authentication.
        /// </summary>
        public readonly string? IdentityResourceId;
        /// <summary>
        /// Login name of the server administrator.
        /// </summary>
        public readonly string? Login;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SID (object ID) of the server administrator.
        /// </summary>
        public readonly string? Sid;
        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Tenant ID of the administrator.
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureADAdministratorResult(
            string? administratorType,

            string id,

            string? identityResourceId,

            string? login,

            string name,

            string? sid,

            Outputs.SystemDataResponse systemData,

            string? tenantId,

            string type)
        {
            AdministratorType = administratorType;
            Id = id;
            IdentityResourceId = identityResourceId;
            Login = login;
            Name = name;
            Sid = sid;
            SystemData = systemData;
            TenantId = tenantId;
            Type = type;
        }
    }
}
