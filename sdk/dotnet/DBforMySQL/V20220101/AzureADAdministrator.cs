// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforMySQL.V20220101
{
    /// <summary>
    /// Represents a Administrator.
    /// </summary>
    [AzureNativeResourceType("azure-native:dbformysql/v20220101:AzureADAdministrator")]
    public partial class AzureADAdministrator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Type of the sever administrator.
        /// </summary>
        [Output("administratorType")]
        public Output<string?> AdministratorType { get; private set; } = null!;

        /// <summary>
        /// The resource id of the identity used for AAD Authentication.
        /// </summary>
        [Output("identityResourceId")]
        public Output<string?> IdentityResourceId { get; private set; } = null!;

        /// <summary>
        /// Login name of the server administrator.
        /// </summary>
        [Output("login")]
        public Output<string?> Login { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// SID (object ID) of the server administrator.
        /// </summary>
        [Output("sid")]
        public Output<string?> Sid { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Tenant ID of the administrator.
        /// </summary>
        [Output("tenantId")]
        public Output<string?> TenantId { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AzureADAdministrator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureADAdministrator(string name, AzureADAdministratorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dbformysql/v20220101:AzureADAdministrator", name, args ?? new AzureADAdministratorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureADAdministrator(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dbformysql/v20220101:AzureADAdministrator", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql:AzureADAdministrator" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20211201preview:AzureADAdministrator" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20230601preview:AzureADAdministrator" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20230630:AzureADAdministrator" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureADAdministrator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureADAdministrator Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AzureADAdministrator(name, id, options);
        }
    }

    public sealed class AzureADAdministratorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Azure AD Administrator.
        /// </summary>
        [Input("administratorName")]
        public Input<string>? AdministratorName { get; set; }

        /// <summary>
        /// Type of the sever administrator.
        /// </summary>
        [Input("administratorType")]
        public InputUnion<string, Pulumi.AzureNative.DBforMySQL.V20220101.AdministratorType>? AdministratorType { get; set; }

        /// <summary>
        /// The resource id of the identity used for AAD Authentication.
        /// </summary>
        [Input("identityResourceId")]
        public Input<string>? IdentityResourceId { get; set; }

        /// <summary>
        /// Login name of the server administrator.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// SID (object ID) of the server administrator.
        /// </summary>
        [Input("sid")]
        public Input<string>? Sid { get; set; }

        /// <summary>
        /// Tenant ID of the administrator.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public AzureADAdministratorArgs()
        {
        }
        public static new AzureADAdministratorArgs Empty => new AzureADAdministratorArgs();
    }
}
