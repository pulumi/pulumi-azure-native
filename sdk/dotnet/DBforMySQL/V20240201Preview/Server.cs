// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DBforMySQL.V20240201Preview
{
    /// <summary>
    /// Represents a server.
    /// </summary>
    [AzureNativeResourceType("azure-native:dbformysql/v20240201preview:Server")]
    public partial class Server : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        /// </summary>
        [Output("administratorLogin")]
        public Output<string?> AdministratorLogin { get; private set; } = null!;

        /// <summary>
        /// availability Zone information of the server.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string?> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Backup related properties of a server.
        /// </summary>
        [Output("backup")]
        public Output<Outputs.BackupResponse?> Backup { get; private set; } = null!;

        /// <summary>
        /// The Data Encryption for CMK.
        /// </summary>
        [Output("dataEncryption")]
        public Output<Outputs.DataEncryptionResponse?> DataEncryption { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name of a server.
        /// </summary>
        [Output("fullyQualifiedDomainName")]
        public Output<string> FullyQualifiedDomainName { get; private set; } = null!;

        /// <summary>
        /// High availability related properties of a server.
        /// </summary>
        [Output("highAvailability")]
        public Output<Outputs.HighAvailabilityResponse?> HighAvailability { get; private set; } = null!;

        /// <summary>
        /// The cmk identity for the server.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.MySQLServerIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Source properties for import from storage.
        /// </summary>
        [Output("importSourceProperties")]
        public Output<Outputs.ImportSourcePropertiesResponse?> ImportSourceProperties { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Maintenance window of a server.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.MaintenanceWindowResponse?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network related properties of a server.
        /// </summary>
        [Output("network")]
        public Output<Outputs.NetworkResponse?> Network { get; private set; } = null!;

        /// <summary>
        /// PrivateEndpointConnections related properties of a server.
        /// </summary>
        [Output("privateEndpointConnections")]
        public Output<ImmutableArray<Outputs.PrivateEndpointConnectionResponse>> PrivateEndpointConnections { get; private set; } = null!;

        /// <summary>
        /// The maximum number of replicas that a primary server can have.
        /// </summary>
        [Output("replicaCapacity")]
        public Output<int> ReplicaCapacity { get; private set; } = null!;

        /// <summary>
        /// The replication role.
        /// </summary>
        [Output("replicationRole")]
        public Output<string?> ReplicationRole { get; private set; } = null!;

        /// <summary>
        /// The SKU (pricing tier) of the server.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.MySQLServerSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// The source MySQL server id.
        /// </summary>
        [Output("sourceServerResourceId")]
        public Output<string?> SourceServerResourceId { get; private set; } = null!;

        /// <summary>
        /// The state of a server.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Storage related properties of a server.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.StorageResponse?> Storage { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Server version.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Server resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Server(string name, ServerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:dbformysql/v20240201preview:Server", name, args ?? new ServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Server(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:dbformysql/v20240201preview:Server", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20200701preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20200701privatepreview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20210501:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20210501preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20211201preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20220101:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20220930preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20230601preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20230630:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20231001preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20231201preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20231230:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20240601preview:Server" },
                    new global::Pulumi.Alias { Type = "azure-native:dbformysql/v20241001preview:Server" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Server resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Server Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Server(name, id, options);
        }
    }

    public sealed class ServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        /// </summary>
        [Input("administratorLogin")]
        public Input<string>? AdministratorLogin { get; set; }

        /// <summary>
        /// The password of the administrator login (required for server creation).
        /// </summary>
        [Input("administratorLoginPassword")]
        public Input<string>? AdministratorLoginPassword { get; set; }

        /// <summary>
        /// availability Zone information of the server.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Backup related properties of a server.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.BackupArgs>? Backup { get; set; }

        /// <summary>
        /// The mode to create a new MySQL server.
        /// </summary>
        [Input("createMode")]
        public InputUnion<string, Pulumi.AzureNative.DBforMySQL.V20240201Preview.CreateMode>? CreateMode { get; set; }

        /// <summary>
        /// The Data Encryption for CMK.
        /// </summary>
        [Input("dataEncryption")]
        public Input<Inputs.DataEncryptionArgs>? DataEncryption { get; set; }

        /// <summary>
        /// High availability related properties of a server.
        /// </summary>
        [Input("highAvailability")]
        public Input<Inputs.HighAvailabilityArgs>? HighAvailability { get; set; }

        /// <summary>
        /// The cmk identity for the server.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.MySQLServerIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Source properties for import from storage.
        /// </summary>
        [Input("importSourceProperties")]
        public Input<Inputs.ImportSourcePropertiesArgs>? ImportSourceProperties { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maintenance window of a server.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.MaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// Network related properties of a server.
        /// </summary>
        [Input("network")]
        public Input<Inputs.NetworkArgs>? Network { get; set; }

        /// <summary>
        /// The replication role.
        /// </summary>
        [Input("replicationRole")]
        public InputUnion<string, Pulumi.AzureNative.DBforMySQL.V20240201Preview.ReplicationRole>? ReplicationRole { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from.
        /// </summary>
        [Input("restorePointInTime")]
        public Input<string>? RestorePointInTime { get; set; }

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName")]
        public Input<string>? ServerName { get; set; }

        /// <summary>
        /// The SKU (pricing tier) of the server.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.MySQLServerSkuArgs>? Sku { get; set; }

        /// <summary>
        /// The source MySQL server id.
        /// </summary>
        [Input("sourceServerResourceId")]
        public Input<string>? SourceServerResourceId { get; set; }

        /// <summary>
        /// Storage related properties of a server.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.StorageArgs>? Storage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Server version.
        /// </summary>
        [Input("version")]
        public InputUnion<string, Pulumi.AzureNative.DBforMySQL.V20240201Preview.ServerVersion>? Version { get; set; }

        public ServerArgs()
        {
        }
        public static new ServerArgs Empty => new ServerArgs();
    }
}
