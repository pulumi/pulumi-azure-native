// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission
{
    /// <summary>
    /// Approval Model Resource
    /// 
    /// Uses Azure REST API version 2025-05-01-preview.
    /// 
    /// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:mission:Approval")]
    public partial class Approval : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of approvers for the approval request
        /// </summary>
        [Output("approvers")]
        public Output<ImmutableArray<Outputs.ApproverResponse>> Approvers { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Approval request creation time
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        [Output("grandparentResourceId")]
        public Output<string?> GrandparentResourceId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        [Output("parentResourceId")]
        public Output<string?> ParentResourceId { get; private set; } = null!;

        /// <summary>
        /// Provisioning State.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Request metadata for the approval request.
        /// </summary>
        [Output("requestMetadata")]
        public Output<Outputs.RequestMetadataResponse> RequestMetadata { get; private set; } = null!;

        /// <summary>
        /// Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        /// </summary>
        [Output("stateChangedAt")]
        public Output<string?> StateChangedAt { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Ticket ID for the approval request
        /// </summary>
        [Output("ticketId")]
        public Output<string?> TicketId { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Approval resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Approval(string name, ApprovalArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mission:Approval", name, args ?? new ApprovalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Approval(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mission:Approval", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mission/v20240601preview:Approval" },
                    new global::Pulumi.Alias { Type = "azure-native:mission/v20241201preview:Approval" },
                    new global::Pulumi.Alias { Type = "azure-native:mission/v20250501preview:Approval" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Approval resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Approval Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Approval(name, id, options);
        }
    }

    public sealed class ApprovalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the approvals resource.
        /// </summary>
        [Input("approvalName")]
        public Input<string>? ApprovalName { get; set; }

        [Input("approvers")]
        private InputList<Inputs.ApproverArgs>? _approvers;

        /// <summary>
        /// List of approvers for the approval request
        /// </summary>
        public InputList<Inputs.ApproverArgs> Approvers
        {
            get => _approvers ?? (_approvers = new InputList<Inputs.ApproverArgs>());
            set => _approvers = value;
        }

        /// <summary>
        /// Approval request creation time
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        [Input("grandparentResourceId")]
        public Input<string>? GrandparentResourceId { get; set; }

        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        [Input("parentResourceId")]
        public Input<string>? ParentResourceId { get; set; }

        /// <summary>
        /// Request metadata for the approval request.
        /// </summary>
        [Input("requestMetadata", required: true)]
        public Input<Inputs.RequestMetadataArgs> RequestMetadata { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        /// <summary>
        /// Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        /// </summary>
        [Input("stateChangedAt")]
        public Input<string>? StateChangedAt { get; set; }

        /// <summary>
        /// Ticket ID for the approval request
        /// </summary>
        [Input("ticketId")]
        public Input<string>? TicketId { get; set; }

        public ApprovalArgs()
        {
        }
        public static new ApprovalArgs Empty => new ApprovalArgs();
    }
}
