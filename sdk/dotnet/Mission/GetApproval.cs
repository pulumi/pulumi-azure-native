// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission
{
    public static class GetApproval
    {
        /// <summary>
        /// Get a ApprovalResource
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetApprovalResult> InvokeAsync(GetApprovalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApprovalResult>("azure-native:mission:getApproval", args ?? new GetApprovalArgs(), options.WithDefaults());

        /// <summary>
        /// Get a ApprovalResource
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetApprovalResult> Invoke(GetApprovalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApprovalResult>("azure-native:mission:getApproval", args ?? new GetApprovalInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a ApprovalResource
        /// 
        /// Uses Azure REST API version 2025-05-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetApprovalResult> Invoke(GetApprovalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApprovalResult>("azure-native:mission:getApproval", args ?? new GetApprovalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApprovalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the approvals resource.
        /// </summary>
        [Input("approvalName", required: true)]
        public string ApprovalName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public string ResourceUri { get; set; } = null!;

        public GetApprovalArgs()
        {
        }
        public static new GetApprovalArgs Empty => new GetApprovalArgs();
    }

    public sealed class GetApprovalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the approvals resource.
        /// </summary>
        [Input("approvalName", required: true)]
        public Input<string> ApprovalName { get; set; } = null!;

        /// <summary>
        /// The fully qualified Azure Resource manager identifier of the resource.
        /// </summary>
        [Input("resourceUri", required: true)]
        public Input<string> ResourceUri { get; set; } = null!;

        public GetApprovalInvokeArgs()
        {
        }
        public static new GetApprovalInvokeArgs Empty => new GetApprovalInvokeArgs();
    }


    [OutputType]
    public sealed class GetApprovalResult
    {
        /// <summary>
        /// List of approvers for the approval request
        /// </summary>
        public readonly ImmutableArray<Outputs.ApproverResponse> Approvers;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Approval request creation time
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        public readonly string? GrandparentResourceId;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Parameter for optimizing query results
        /// </summary>
        public readonly string? ParentResourceId;
        /// <summary>
        /// Provisioning State.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Request metadata for the approval request.
        /// </summary>
        public readonly Outputs.RequestMetadataResponse RequestMetadata;
        /// <summary>
        /// Approval request state change time, time at which approval request state changed from pending to approved or rejected.
        /// </summary>
        public readonly string? StateChangedAt;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Ticket ID for the approval request
        /// </summary>
        public readonly string? TicketId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetApprovalResult(
            ImmutableArray<Outputs.ApproverResponse> approvers,

            string azureApiVersion,

            string? createdAt,

            string? grandparentResourceId,

            string id,

            string name,

            string? parentResourceId,

            string provisioningState,

            Outputs.RequestMetadataResponse requestMetadata,

            string? stateChangedAt,

            Outputs.SystemDataResponse systemData,

            string? ticketId,

            string type)
        {
            Approvers = approvers;
            AzureApiVersion = azureApiVersion;
            CreatedAt = createdAt;
            GrandparentResourceId = grandparentResourceId;
            Id = id;
            Name = name;
            ParentResourceId = parentResourceId;
            ProvisioningState = provisioningState;
            RequestMetadata = requestMetadata;
            StateChangedAt = stateChangedAt;
            SystemData = systemData;
            TicketId = ticketId;
            Type = type;
        }
    }
}
