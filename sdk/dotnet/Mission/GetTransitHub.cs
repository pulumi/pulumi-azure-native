// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission
{
    public static class GetTransitHub
    {
        /// <summary>
        /// Get a TransitHubResource
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetTransitHubResult> InvokeAsync(GetTransitHubArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransitHubResult>("azure-native:mission:getTransitHub", args ?? new GetTransitHubArgs(), options.WithDefaults());

        /// <summary>
        /// Get a TransitHubResource
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetTransitHubResult> Invoke(GetTransitHubInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitHubResult>("azure-native:mission:getTransitHub", args ?? new GetTransitHubInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a TransitHubResource
        /// 
        /// Uses Azure REST API version 2024-12-01-preview.
        /// 
        /// Other available API versions: 2024-06-01-preview, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetTransitHubResult> Invoke(GetTransitHubInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitHubResult>("azure-native:mission:getTransitHub", args ?? new GetTransitHubInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitHubArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the communityResource Resource
        /// </summary>
        [Input("communityName", required: true)]
        public string CommunityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the TransitHub Resource
        /// </summary>
        [Input("transitHubName", required: true)]
        public string TransitHubName { get; set; } = null!;

        public GetTransitHubArgs()
        {
        }
        public static new GetTransitHubArgs Empty => new GetTransitHubArgs();
    }

    public sealed class GetTransitHubInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the communityResource Resource
        /// </summary>
        [Input("communityName", required: true)]
        public Input<string> CommunityName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the TransitHub Resource
        /// </summary>
        [Input("transitHubName", required: true)]
        public Input<string> TransitHubName { get; set; } = null!;

        public GetTransitHubInvokeArgs()
        {
        }
        public static new GetTransitHubInvokeArgs Empty => new GetTransitHubInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransitHubResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// List of resource ids modified by transitHubs.
        /// </summary>
        public readonly ImmutableArray<string> ResourceCollection;
        /// <summary>
        /// The state of the transitHub.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The TransitOption of the transitHub.
        /// </summary>
        public readonly Outputs.TransitOptionResponse? TransitOption;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTransitHubResult(
            string azureApiVersion,

            string id,

            string location,

            string name,

            string provisioningState,

            ImmutableArray<string> resourceCollection,

            string? state,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            Outputs.TransitOptionResponse? transitOption,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            ResourceCollection = resourceCollection;
            State = state;
            SystemData = systemData;
            Tags = tags;
            TransitOption = transitOption;
            Type = type;
        }
    }
}
