// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission.Outputs
{

    /// <summary>
    /// ApprovalSettings Properties
    /// </summary>
    [OutputType]
    public sealed class ApprovalSettingsResponse
    {
        /// <summary>
        /// Approval required for enclave connection creation (Required or NotRequired).
        /// </summary>
        public readonly string? ConnectionCreation;
        /// <summary>
        /// Approval required for enclave connection deletion (Required or NotRequired).
        /// </summary>
        public readonly string? ConnectionDeletion;
        /// <summary>
        /// Approval required for enclave connection update (Required or NotRequired).
        /// </summary>
        public readonly string? ConnectionUpdate;
        /// <summary>
        /// Approval required for virtual enclave creation (Required or NotRequired).
        /// </summary>
        public readonly string? EnclaveCreation;
        /// <summary>
        /// Approval required for virtual enclave deletion (Required or NotRequired).
        /// </summary>
        public readonly string? EnclaveDeletion;
        /// <summary>
        /// Approval required for endpoint creation (Required or NotRequired).
        /// </summary>
        public readonly string? EndpointCreation;
        /// <summary>
        /// Approval required for endpoint deletion (Required or NotRequired).
        /// </summary>
        public readonly string? EndpointDeletion;
        /// <summary>
        /// Approval required for endpoint update (Required or NotRequired).
        /// </summary>
        public readonly string? EndpointUpdate;
        /// <summary>
        /// Approval required for toggling maintenance mode (Required or NotRequired).
        /// </summary>
        public readonly string? MaintenanceMode;
        /// <summary>
        /// List of mandatory approvers for the approval request
        /// </summary>
        public readonly ImmutableArray<Outputs.MandatoryApproverResponse> MandatoryApprovers;
        /// <summary>
        /// Minimum number of approvers required for the approval request
        /// </summary>
        public readonly double? MinimumApproversRequired;
        /// <summary>
        /// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
        /// </summary>
        public readonly string? NotificationOnApprovalAction;
        /// <summary>
        /// Notification will be sent on creation of an Approval Request
        /// </summary>
        public readonly string? NotificationOnApprovalCreation;
        /// <summary>
        /// Notification will be sent on deletion of an Approval Request
        /// </summary>
        public readonly string? NotificationOnApprovalDeletion;
        /// <summary>
        /// Approval required for deploying service catalog templates (Required or NotRequired).
        /// </summary>
        public readonly string? ServiceCatalogDeployment;

        [OutputConstructor]
        private ApprovalSettingsResponse(
            string? connectionCreation,

            string? connectionDeletion,

            string? connectionUpdate,

            string? enclaveCreation,

            string? enclaveDeletion,

            string? endpointCreation,

            string? endpointDeletion,

            string? endpointUpdate,

            string? maintenanceMode,

            ImmutableArray<Outputs.MandatoryApproverResponse> mandatoryApprovers,

            double? minimumApproversRequired,

            string? notificationOnApprovalAction,

            string? notificationOnApprovalCreation,

            string? notificationOnApprovalDeletion,

            string? serviceCatalogDeployment)
        {
            ConnectionCreation = connectionCreation;
            ConnectionDeletion = connectionDeletion;
            ConnectionUpdate = connectionUpdate;
            EnclaveCreation = enclaveCreation;
            EnclaveDeletion = enclaveDeletion;
            EndpointCreation = endpointCreation;
            EndpointDeletion = endpointDeletion;
            EndpointUpdate = endpointUpdate;
            MaintenanceMode = maintenanceMode;
            MandatoryApprovers = mandatoryApprovers;
            MinimumApproversRequired = minimumApproversRequired;
            NotificationOnApprovalAction = notificationOnApprovalAction;
            NotificationOnApprovalCreation = notificationOnApprovalCreation;
            NotificationOnApprovalDeletion = notificationOnApprovalDeletion;
            ServiceCatalogDeployment = serviceCatalogDeployment;
        }
    }
}
