// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission.Outputs
{

    /// <summary>
    /// GovernedServiceItem Properties
    /// </summary>
    [OutputType]
    public sealed class GovernedServiceItemResponse
    {
        /// <summary>
        /// Initiative enforcement (Enabled or Disabled).
        /// </summary>
        public readonly string? Enforcement;
        /// <summary>
        /// Initiatives associated with this service.
        /// </summary>
        public readonly ImmutableArray<string> Initiatives;
        /// <summary>
        /// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
        /// </summary>
        public readonly string? Option;
        /// <summary>
        /// Enforcement mode for policy. AuditOnly, Enforce, or None.
        /// </summary>
        public readonly string? PolicyAction;
        /// <summary>
        /// Service ID
        /// </summary>
        public readonly string ServiceId;
        /// <summary>
        /// Service name.
        /// </summary>
        public readonly string ServiceName;

        [OutputConstructor]
        private GovernedServiceItemResponse(
            string? enforcement,

            ImmutableArray<string> initiatives,

            string? option,

            string? policyAction,

            string serviceId,

            string serviceName)
        {
            Enforcement = enforcement;
            Initiatives = initiatives;
            Option = option;
            PolicyAction = policyAction;
            ServiceId = serviceId;
            ServiceName = serviceName;
        }
    }
}
