// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission.Outputs
{

    /// <summary>
    /// GovernedServiceItem Properties
    /// </summary>
    [OutputType]
    public sealed class GovernedServiceItemResponse
    {
        /// <summary>
        /// Policies set to auditOnly (True or False).
        /// </summary>
        public readonly bool? AuditOnly;
        /// <summary>
        /// Initiative enforcement (Enabled or Disabled).
        /// </summary>
        public readonly string? Enforcement;
        /// <summary>
        /// Service ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Initiatives associated with this service.
        /// </summary>
        public readonly ImmutableArray<string> Initiatives;
        /// <summary>
        /// Service name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
        /// </summary>
        public readonly string? Option;

        [OutputConstructor]
        private GovernedServiceItemResponse(
            bool? auditOnly,

            string? enforcement,

            string id,

            ImmutableArray<string> initiatives,

            string name,

            string? option)
        {
            AuditOnly = auditOnly;
            Enforcement = enforcement;
            Id = id;
            Initiatives = initiatives;
            Name = name;
            Option = option;
        }
    }
}
