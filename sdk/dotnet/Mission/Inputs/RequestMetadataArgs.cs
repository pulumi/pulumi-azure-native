// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission.Inputs
{

    /// <summary>
    /// Request Metadata for approvals request.
    /// </summary>
    public sealed class RequestMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Payload to be sent upon any action on approval request
        /// </summary>
        [Input("approvalCallbackPayload")]
        public Input<string>? ApprovalCallbackPayload { get; set; }

        /// <summary>
        /// Route name for the approval callback
        /// </summary>
        [Input("approvalCallbackRoute")]
        public Input<string>? ApprovalCallbackRoute { get; set; }

        /// <summary>
        /// Status of the approval. Uses ApprovalStatus enum.
        /// </summary>
        [Input("approvalStatus")]
        public InputUnion<string, Pulumi.AzureNative.Mission.ApprovalStatus>? ApprovalStatus { get; set; }

        /// <summary>
        /// Resource Action of the item being approved or declined.
        /// </summary>
        [Input("resourceAction", required: true)]
        public Input<string> ResourceAction { get; set; } = null!;

        public RequestMetadataArgs()
        {
            ApprovalStatus = "Pending";
        }
        public static new RequestMetadataArgs Empty => new RequestMetadataArgs();
    }
}
