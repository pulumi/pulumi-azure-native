// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Mission.Inputs
{

    /// <summary>
    /// GovernedServiceItem Properties
    /// </summary>
    public sealed class GovernedServiceItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policies set to auditOnly (True or False).
        /// </summary>
        [Input("auditOnly")]
        public Input<bool>? AuditOnly { get; set; }

        /// <summary>
        /// Initiative enforcement (Enabled or Disabled).
        /// </summary>
        [Input("enforcement")]
        public InputUnion<string, Pulumi.AzureNative.Mission.Enforcement>? Enforcement { get; set; }

        /// <summary>
        /// Service ID
        /// </summary>
        [Input("id", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Mission.ServiceIdentifier> Id { get; set; } = null!;

        /// <summary>
        /// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
        /// </summary>
        [Input("option")]
        public InputUnion<string, Pulumi.AzureNative.Mission.Option>? Option { get; set; }

        public GovernedServiceItemArgs()
        {
        }
        public static new GovernedServiceItemArgs Empty => new GovernedServiceItemArgs();
    }
}
