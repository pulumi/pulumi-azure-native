// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DependencyMap
{
    public static class GetDiscoverySource
    {
        /// <summary>
        /// Get a DiscoverySourceResource
        /// 
        /// Uses Azure REST API version 2025-01-31-preview.
        /// </summary>
        public static Task<GetDiscoverySourceResult> InvokeAsync(GetDiscoverySourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiscoverySourceResult>("azure-native:dependencymap:getDiscoverySource", args ?? new GetDiscoverySourceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DiscoverySourceResource
        /// 
        /// Uses Azure REST API version 2025-01-31-preview.
        /// </summary>
        public static Output<GetDiscoverySourceResult> Invoke(GetDiscoverySourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoverySourceResult>("azure-native:dependencymap:getDiscoverySource", args ?? new GetDiscoverySourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a DiscoverySourceResource
        /// 
        /// Uses Azure REST API version 2025-01-31-preview.
        /// </summary>
        public static Output<GetDiscoverySourceResult> Invoke(GetDiscoverySourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoverySourceResult>("azure-native:dependencymap:getDiscoverySource", args ?? new GetDiscoverySourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiscoverySourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maps resource name
        /// </summary>
        [Input("mapName", required: true)]
        public string MapName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// discovery source resource
        /// </summary>
        [Input("sourceName", required: true)]
        public string SourceName { get; set; } = null!;

        public GetDiscoverySourceArgs()
        {
        }
        public static new GetDiscoverySourceArgs Empty => new GetDiscoverySourceArgs();
    }

    public sealed class GetDiscoverySourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maps resource name
        /// </summary>
        [Input("mapName", required: true)]
        public Input<string> MapName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// discovery source resource
        /// </summary>
        [Input("sourceName", required: true)]
        public Input<string> SourceName { get; set; } = null!;

        public GetDiscoverySourceInvokeArgs()
        {
        }
        public static new GetDiscoverySourceInvokeArgs Empty => new GetDiscoverySourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiscoverySourceResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of Discovery Source resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Source ArmId of Discovery Source resource
        /// </summary>
        public readonly string SourceId;
        /// <summary>
        /// Source type of Discovery Source resource.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDiscoverySourceResult(
            string azureApiVersion,

            string id,

            string location,

            string name,

            string provisioningState,

            string sourceId,

            string sourceType,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SourceId = sourceId;
            SourceType = sourceType;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
