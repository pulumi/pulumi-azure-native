// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OffAzure
{
    public static class GetSqlSitesController
    {
        /// <summary>
        /// Method to get a site.
        /// Azure REST API version: 2023-06-06.
        /// 
        /// Other available API versions: 2023-10-01-preview.
        /// </summary>
        public static Task<GetSqlSitesControllerResult> InvokeAsync(GetSqlSitesControllerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlSitesControllerResult>("azure-native:offazure:getSqlSitesController", args ?? new GetSqlSitesControllerArgs(), options.WithDefaults());

        /// <summary>
        /// Method to get a site.
        /// Azure REST API version: 2023-06-06.
        /// 
        /// Other available API versions: 2023-10-01-preview.
        /// </summary>
        public static Output<GetSqlSitesControllerResult> Invoke(GetSqlSitesControllerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlSitesControllerResult>("azure-native:offazure:getSqlSitesController", args ?? new GetSqlSitesControllerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlSitesControllerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Site name
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        /// <summary>
        /// SQL site name.
        /// </summary>
        [Input("sqlSiteName", required: true)]
        public string SqlSiteName { get; set; } = null!;

        public GetSqlSitesControllerArgs()
        {
        }
        public static new GetSqlSitesControllerArgs Empty => new GetSqlSitesControllerArgs();
    }

    public sealed class GetSqlSitesControllerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Site name
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// SQL site name.
        /// </summary>
        [Input("sqlSiteName", required: true)]
        public Input<string> SqlSiteName { get; set; } = null!;

        public GetSqlSitesControllerInvokeArgs()
        {
        }
        public static new GetSqlSitesControllerInvokeArgs Empty => new GetSqlSitesControllerInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlSitesControllerResult
    {
        /// <summary>
        /// Gets or sets the discovery scenario.
        /// </summary>
        public readonly string? DiscoveryScenario;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// provisioning state enum
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets the service endpoint.
        /// </summary>
        public readonly string ServiceEndpoint;
        /// <summary>
        /// Gets or sets the appliance details used by service to communicate
        ///            
        /// to the appliance.
        /// </summary>
        public readonly ImmutableArray<Outputs.SiteAppliancePropertiesResponse> SiteAppliancePropertiesCollection;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSqlSitesControllerResult(
            string? discoveryScenario,

            string id,

            string name,

            string provisioningState,

            string serviceEndpoint,

            ImmutableArray<Outputs.SiteAppliancePropertiesResponse> siteAppliancePropertiesCollection,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DiscoveryScenario = discoveryScenario;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            ServiceEndpoint = serviceEndpoint;
            SiteAppliancePropertiesCollection = siteAppliancePropertiesCollection;
            SystemData = systemData;
            Type = type;
        }
    }
}
