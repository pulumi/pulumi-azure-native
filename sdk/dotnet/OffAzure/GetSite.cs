// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OffAzure
{
    public static class GetSite
    {
        /// <summary>
        /// Site REST Resource.
        /// API Version: 2020-01-01.
        /// </summary>
        public static Task<GetSiteResult> InvokeAsync(GetSiteArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSiteResult>("azure-native:offazure:getSite", args ?? new GetSiteArgs(), options.WithDefaults());

        /// <summary>
        /// Site REST Resource.
        /// API Version: 2020-01-01.
        /// </summary>
        public static Output<GetSiteResult> Invoke(GetSiteInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSiteResult>("azure-native:offazure:getSite", args ?? new GetSiteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSiteArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Site name.
        /// </summary>
        [Input("siteName", required: true)]
        public string SiteName { get; set; } = null!;

        public GetSiteArgs()
        {
        }
    }

    public sealed class GetSiteInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Site name.
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        public GetSiteInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSiteResult
    {
        /// <summary>
        /// eTag for concurrency control.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Azure location in which Sites is created.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Name of the VMware site.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Nested properties of VMWare site.
        /// </summary>
        public readonly Outputs.SitePropertiesResponse Properties;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Type of resource. Type = Microsoft.OffAzure/VMWareSites.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSiteResult(
            string? eTag,

            string id,

            string? location,

            string? name,

            Outputs.SitePropertiesResponse properties,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ETag = eTag;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            Tags = tags;
            Type = type;
        }
    }
}
