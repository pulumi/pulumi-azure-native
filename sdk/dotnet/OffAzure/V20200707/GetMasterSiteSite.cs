// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.OffAzure.V20200707
{
    public static class GetMasterSiteSite
    {
        public static Task<GetMasterSiteSiteResult> InvokeAsync(GetMasterSiteSiteArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMasterSiteSiteResult>("azurerm:offazure/v20200707:getMasterSiteSite", args ?? new GetMasterSiteSiteArgs(), options.WithVersion());
    }


    public sealed class GetMasterSiteSiteArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Site name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMasterSiteSiteArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMasterSiteSiteResult
    {
        /// <summary>
        /// eTag for concurrency control.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Azure location in which Sites is created.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Name of the Master site.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Nested properties of Master site.
        /// </summary>
        public readonly Outputs.MasterSitePropertiesResponseResult Properties;
        /// <summary>
        /// Type of resource. Type = Microsoft.OffAzure/MasterSites.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMasterSiteSiteResult(
            string? eTag,

            string? location,

            string? name,

            Outputs.MasterSitePropertiesResponseResult properties,

            string type)
        {
            ETag = eTag;
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
