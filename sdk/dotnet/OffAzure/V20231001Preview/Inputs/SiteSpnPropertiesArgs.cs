// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OffAzure.V20231001Preview.Inputs
{

    /// <summary>
    /// Class for site properties.
    /// </summary>
    public sealed class SiteSpnPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the AAD Authority URL which was used to request the token for
        /// the
        ///             service principal.
        /// </summary>
        [Input("aadAuthority")]
        public Input<string>? AadAuthority { get; set; }

        /// <summary>
        /// Gets or sets the application/client Id for the service principal with which
        /// the
        ///             on-premise management/data plane components would communicate
        /// with our Azure 
        ///             services.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the intended audience for the service principal.
        /// </summary>
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        /// <summary>
        /// Gets or sets the object Id of the service principal with which the on-premise
        /// 
        ///            management/data plane components would communicate with our Azure
        /// services.
        /// </summary>
        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        /// <summary>
        /// Gets or sets the raw certificate data for building certificate expiry flows.
        /// </summary>
        [Input("rawCertData")]
        public Input<string>? RawCertData { get; set; }

        /// <summary>
        /// Gets or sets the tenant Id for the service principal with which the
        /// on-premise
        ///             management/data plane components would communicate with
        /// our Azure services.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public SiteSpnPropertiesArgs()
        {
        }
        public static new SiteSpnPropertiesArgs Empty => new SiteSpnPropertiesArgs();
    }
}
