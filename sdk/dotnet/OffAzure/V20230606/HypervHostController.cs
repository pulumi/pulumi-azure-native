// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.OffAzure.V20230606
{
    /// <summary>
    /// A host resource belonging to a site resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:offazure/v20230606:HypervHostController")]
    public partial class HypervHostController : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gets the timestamp marking Hyper-V host creation.
        /// </summary>
        [Output("createdTimestamp")]
        public Output<string> CreatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Gets the errors.
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<Outputs.HealthErrorDetailsResponse>> Errors { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the FQDN/IPAddress of the Hyper-V host.
        /// </summary>
        [Output("fqdn")]
        public Output<string?> Fqdn { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the run as account ID of the Hyper-V host.
        /// </summary>
        [Output("runAsAccountId")]
        public Output<string?> RunAsAccountId { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Gets the timestamp marking last updated on the Hyper-V host.
        /// </summary>
        [Output("updatedTimestamp")]
        public Output<string> UpdatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Gets the version of the Hyper-V host.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a HypervHostController resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HypervHostController(string name, HypervHostControllerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:offazure/v20230606:HypervHostController", name, args ?? new HypervHostControllerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HypervHostController(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:offazure/v20230606:HypervHostController", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:offazure:HypervHostController" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HypervHostController resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HypervHostController Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HypervHostController(name, id, options);
        }
    }

    public sealed class HypervHostControllerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the FQDN/IPAddress of the Hyper-V host.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        ///  Host name
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.OffAzure.V20230606.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the run as account ID of the Hyper-V host.
        /// </summary>
        [Input("runAsAccountId")]
        public Input<string>? RunAsAccountId { get; set; }

        /// <summary>
        /// Site name
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        public HypervHostControllerArgs()
        {
        }
        public static new HypervHostControllerArgs Empty => new HypervHostControllerArgs();
    }
}
