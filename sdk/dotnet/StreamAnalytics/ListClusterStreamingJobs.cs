// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StreamAnalytics
{
    public static class ListClusterStreamingJobs
    {
        /// <summary>
        /// A list of streaming jobs. Populated by a List operation.
        /// API Version: 2020-03-01-preview.
        /// </summary>
        public static Task<ListClusterStreamingJobsResult> InvokeAsync(ListClusterStreamingJobsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListClusterStreamingJobsResult>("azure-nextgen:streamanalytics:listClusterStreamingJobs", args ?? new ListClusterStreamingJobsArgs(), options.WithVersion());
    }


    public sealed class ListClusterStreamingJobsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListClusterStreamingJobsArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListClusterStreamingJobsResult
    {
        /// <summary>
        /// The URL to fetch the next set of streaming jobs.
        /// </summary>
        public readonly string NextLink;
        /// <summary>
        /// A list of streaming jobs.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterJobResponseResult> Value;

        [OutputConstructor]
        private ListClusterStreamingJobsResult(
            string nextLink,

            ImmutableArray<Outputs.ClusterJobResponseResult> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
