// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StreamAnalytics.V20160301.Outputs
{

    [OutputType]
    public sealed class IoTHubStreamInputDataSourceResponse
    {
        /// <summary>
        /// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hubâ€™s default consumer group.
        /// </summary>
        public readonly string? ConsumerGroupName;
        /// <summary>
        /// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? IotHubNamespace;
        /// <summary>
        /// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? SharedAccessPolicyKey;
        /// <summary>
        /// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? SharedAccessPolicyName;
        /// <summary>
        /// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private IoTHubStreamInputDataSourceResponse(
            string? consumerGroupName,

            string? endpoint,

            string? iotHubNamespace,

            string? sharedAccessPolicyKey,

            string? sharedAccessPolicyName,

            string? type)
        {
            ConsumerGroupName = consumerGroupName;
            Endpoint = endpoint;
            IotHubNamespace = iotHubNamespace;
            SharedAccessPolicyKey = sharedAccessPolicyKey;
            SharedAccessPolicyName = sharedAccessPolicyName;
            Type = type;
        }
    }
}
