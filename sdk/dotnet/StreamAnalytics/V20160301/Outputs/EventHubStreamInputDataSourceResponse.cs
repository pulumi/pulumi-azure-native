// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StreamAnalytics.V20160301.Outputs
{

    [OutputType]
    public sealed class EventHubStreamInputDataSourceResponse
    {
        /// <summary>
        /// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hubâ€™s default consumer group.
        /// </summary>
        public readonly string? ConsumerGroupName;
        /// <summary>
        /// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? EventHubName;
        /// <summary>
        /// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? ServiceBusNamespace;
        /// <summary>
        /// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? SharedAccessPolicyKey;
        /// <summary>
        /// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? SharedAccessPolicyName;
        /// <summary>
        /// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private EventHubStreamInputDataSourceResponse(
            string? consumerGroupName,

            string? eventHubName,

            string? serviceBusNamespace,

            string? sharedAccessPolicyKey,

            string? sharedAccessPolicyName,

            string? type)
        {
            ConsumerGroupName = consumerGroupName;
            EventHubName = eventHubName;
            ServiceBusNamespace = serviceBusNamespace;
            SharedAccessPolicyKey = sharedAccessPolicyKey;
            SharedAccessPolicyName = sharedAccessPolicyName;
            Type = type;
        }
    }
}
