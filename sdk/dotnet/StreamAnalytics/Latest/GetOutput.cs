// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StreamAnalytics.Latest
{
    public static class GetOutput
    {
        public static Task<GetOutputResult> InvokeAsync(GetOutputArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOutputResult>("azurerm:streamanalytics/latest:getOutput", args ?? new GetOutputArgs(), options.WithVersion());
    }


    public sealed class GetOutputArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the streaming job.
        /// </summary>
        [Input("jobName", required: true)]
        public string JobName { get; set; } = null!;

        /// <summary>
        /// The name of the output.
        /// </summary>
        [Input("outputName", required: true)]
        public string OutputName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOutputArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOutputResult
    {
        /// <summary>
        /// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly Union<Outputs.AzureDataLakeStoreOutputDataSourceResponseResult, Union<Outputs.AzureSqlDatabaseOutputDataSourceResponseResult, Union<Outputs.AzureTableOutputDataSourceResponseResult, Union<Outputs.BlobOutputDataSourceResponseResult, Union<Outputs.DocumentDbOutputDataSourceResponseResult, Union<Outputs.EventHubOutputDataSourceResponseResult, Union<Outputs.PowerBIOutputDataSourceResponseResult, Union<Outputs.ServiceBusQueueOutputDataSourceResponseResult, Outputs.ServiceBusTopicOutputDataSourceResponseResult>>>>>>>>? Datasource;
        /// <summary>
        /// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        /// </summary>
        public readonly Outputs.DiagnosticsResponseResult Diagnostics;
        /// <summary>
        /// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly Union<Outputs.AvroSerializationResponseResult, Union<Outputs.CsvSerializationResponseResult, Outputs.JsonSerializationResponseResult>>? Serialization;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOutputResult(
            Union<Outputs.AzureDataLakeStoreOutputDataSourceResponseResult, Union<Outputs.AzureSqlDatabaseOutputDataSourceResponseResult, Union<Outputs.AzureTableOutputDataSourceResponseResult, Union<Outputs.BlobOutputDataSourceResponseResult, Union<Outputs.DocumentDbOutputDataSourceResponseResult, Union<Outputs.EventHubOutputDataSourceResponseResult, Union<Outputs.PowerBIOutputDataSourceResponseResult, Union<Outputs.ServiceBusQueueOutputDataSourceResponseResult, Outputs.ServiceBusTopicOutputDataSourceResponseResult>>>>>>>>? datasource,

            Outputs.DiagnosticsResponseResult diagnostics,

            string etag,

            string? name,

            Union<Outputs.AvroSerializationResponseResult, Union<Outputs.CsvSerializationResponseResult, Outputs.JsonSerializationResponseResult>>? serialization,

            string type)
        {
            Datasource = datasource;
            Diagnostics = diagnostics;
            Etag = etag;
            Name = name;
            Serialization = serialization;
            Type = type;
        }
    }
}
