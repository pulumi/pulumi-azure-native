// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StreamAnalytics.V20211001Preview.Inputs
{

    /// <summary>
    /// The properties that are associated with an input containing stream data.
    /// </summary>
    public sealed class StreamInputPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes how input data is compressed
        /// </summary>
        [Input("compression")]
        public Input<Inputs.CompressionArgs>? Compression { get; set; }

        /// <summary>
        /// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        [Input("datasource")]
        public object? Datasource { get; set; }

        /// <summary>
        /// partitionKey Describes a key in the input data which is used for partitioning the input data
        /// </summary>
        [Input("partitionKey")]
        public Input<string>? PartitionKey { get; set; }

        /// <summary>
        /// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        [Input("serialization")]
        public object? Serialization { get; set; }

        /// <summary>
        /// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
        /// Expected value is 'Stream'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Settings which determine whether to read watermark events.
        /// </summary>
        [Input("watermarkSettings")]
        public Input<Inputs.InputWatermarkPropertiesArgs>? WatermarkSettings { get; set; }

        public StreamInputPropertiesArgs()
        {
        }
        public static new StreamInputPropertiesArgs Empty => new StreamInputPropertiesArgs();
    }
}
