// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StreamAnalytics.V20211001Preview.Outputs
{

    /// <summary>
    /// Describes an event grid input data source that contains stream data.
    /// </summary>
    [OutputType]
    public sealed class EventGridStreamInputDataSourceResponse
    {
        /// <summary>
        /// List of Event Types that are supported by the Event Grid adapter.
        /// </summary>
        public readonly ImmutableArray<string> EventTypes;
        /// <summary>
        /// Indicates the Event Grid schema type.
        /// </summary>
        public readonly string? Schema;
        /// <summary>
        /// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.StorageAccountResponse> StorageAccounts;
        /// <summary>
        /// Subscribers for the Event Grid. Currently only EventHub Subscriber is supported.
        /// </summary>
        public readonly Outputs.EventHubV2StreamInputDataSourceResponse? Subscriber;
        /// <summary>
        /// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        /// Expected value is 'Microsoft.EventGrid/EventSubscriptions'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private EventGridStreamInputDataSourceResponse(
            ImmutableArray<string> eventTypes,

            string? schema,

            ImmutableArray<Outputs.StorageAccountResponse> storageAccounts,

            Outputs.EventHubV2StreamInputDataSourceResponse? subscriber,

            string type)
        {
            EventTypes = eventTypes;
            Schema = schema;
            StorageAccounts = storageAccounts;
            Subscriber = subscriber;
            Type = type;
        }
    }
}
