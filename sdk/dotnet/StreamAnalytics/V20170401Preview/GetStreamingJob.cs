// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StreamAnalytics.V20170401Preview
{
    public static class GetStreamingJob
    {
        public static Task<GetStreamingJobResult> InvokeAsync(GetStreamingJobArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStreamingJobResult>("azure-nextgen:streamanalytics/v20170401preview:getStreamingJob", args ?? new GetStreamingJobArgs(), options.WithVersion());
    }


    public sealed class GetStreamingJobArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The name of the streaming job.
        /// </summary>
        [Input("jobName", required: true)]
        public string JobName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetStreamingJobArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStreamingJobResult
    {
        /// <summary>
        /// The cluster which streaming jobs will run on.
        /// </summary>
        public readonly Outputs.ClusterInfoResponse? Cluster;
        /// <summary>
        /// Controls certain runtime behaviors of the streaming job.
        /// </summary>
        public readonly string? CompatibilityLevel;
        /// <summary>
        /// Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. .
        /// </summary>
        public readonly string ContentStoragePolicy;
        /// <summary>
        /// Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
        /// </summary>
        public readonly string? DataLocale;
        /// <summary>
        /// The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
        /// </summary>
        public readonly int? EventsLateArrivalMaxDelayInSeconds;
        /// <summary>
        /// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
        /// </summary>
        public readonly int? EventsOutOfOrderMaxDelayInSeconds;
        /// <summary>
        /// Indicates the policy to apply to events that arrive out of order in the input event stream.
        /// </summary>
        public readonly string? EventsOutOfOrderPolicy;
        /// <summary>
        /// The storage account where the custom code artifacts are located.
        /// </summary>
        public readonly Outputs.ExternalResponse? Externals;
        /// <summary>
        /// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
        /// </summary>
        public readonly ImmutableArray<Outputs.FunctionResponse> Functions;
        /// <summary>
        /// Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
        /// </summary>
        public readonly ImmutableArray<Outputs.InputResponse> Inputs;
        /// <summary>
        /// A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
        /// </summary>
        public readonly string JobId;
        /// <summary>
        /// Describes the state of the streaming job.
        /// </summary>
        public readonly string JobState;
        /// <summary>
        /// The properties that are associated with an Azure Storage account with MSI
        /// </summary>
        public readonly Outputs.JobStorageAccountResponse? JobStorageAccount;
        /// <summary>
        /// Describes the type of the job. Valid modes are `Cloud` and 'Edge'.
        /// </summary>
        public readonly string? JobType;
        /// <summary>
        /// Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
        /// </summary>
        public readonly string LastOutputEventTime;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
        /// </summary>
        public readonly string? OutputErrorPolicy;
        /// <summary>
        /// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
        /// </summary>
        public readonly string? OutputStartMode;
        /// <summary>
        /// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
        /// </summary>
        public readonly string? OutputStartTime;
        /// <summary>
        /// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
        /// </summary>
        public readonly ImmutableArray<Outputs.OutputResponse> Outputs;
        /// <summary>
        /// Describes the provisioning status of the streaming job.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly Outputs.StreamingJobSkuResponse? Sku;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
        /// </summary>
        public readonly Outputs.TransformationResponse? Transformation;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStreamingJobResult(
            Outputs.ClusterInfoResponse? cluster,

            string? compatibilityLevel,

            string contentStoragePolicy,

            string createdDate,

            string? dataLocale,

            string etag,

            int? eventsLateArrivalMaxDelayInSeconds,

            int? eventsOutOfOrderMaxDelayInSeconds,

            string? eventsOutOfOrderPolicy,

            Outputs.ExternalResponse? externals,

            ImmutableArray<Outputs.FunctionResponse> functions,

            Outputs.IdentityResponse? identity,

            ImmutableArray<Outputs.InputResponse> inputs,

            string jobId,

            string jobState,

            Outputs.JobStorageAccountResponse? jobStorageAccount,

            string? jobType,

            string lastOutputEventTime,

            string? location,

            string name,

            string? outputErrorPolicy,

            string? outputStartMode,

            string? outputStartTime,

            ImmutableArray<Outputs.OutputResponse> outputs,

            string provisioningState,

            Outputs.StreamingJobSkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            Outputs.TransformationResponse? transformation,

            string type)
        {
            Cluster = cluster;
            CompatibilityLevel = compatibilityLevel;
            ContentStoragePolicy = contentStoragePolicy;
            CreatedDate = createdDate;
            DataLocale = dataLocale;
            Etag = etag;
            EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSeconds;
            EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSeconds;
            EventsOutOfOrderPolicy = eventsOutOfOrderPolicy;
            Externals = externals;
            Functions = functions;
            Identity = identity;
            Inputs = inputs;
            JobId = jobId;
            JobState = jobState;
            JobStorageAccount = jobStorageAccount;
            JobType = jobType;
            LastOutputEventTime = lastOutputEventTime;
            Location = location;
            Name = name;
            OutputErrorPolicy = outputErrorPolicy;
            OutputStartMode = outputStartMode;
            OutputStartTime = outputStartTime;
            Outputs = outputs;
            ProvisioningState = provisioningState;
            Sku = sku;
            Tags = tags;
            Transformation = transformation;
            Type = type;
        }
    }
}
