// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StreamAnalytics.V20170401Preview.Outputs
{

    [OutputType]
    public sealed class AzureFunctionOutputDataSourceResponse
    {
        /// <summary>
        /// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
        /// </summary>
        public readonly string? ApiKey;
        /// <summary>
        /// The name of your Azure Functions app.
        /// </summary>
        public readonly string? FunctionAppName;
        /// <summary>
        /// The name of the function in your Azure Functions app.
        /// </summary>
        public readonly string? FunctionName;
        /// <summary>
        /// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
        /// </summary>
        public readonly double? MaxBatchCount;
        /// <summary>
        /// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
        /// </summary>
        public readonly double? MaxBatchSize;
        /// <summary>
        /// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AzureFunctionOutputDataSourceResponse(
            string? apiKey,

            string? functionAppName,

            string? functionName,

            double? maxBatchCount,

            double? maxBatchSize,

            string type)
        {
            ApiKey = apiKey;
            FunctionAppName = functionAppName;
            FunctionName = functionName;
            MaxBatchCount = maxBatchCount;
            MaxBatchSize = maxBatchSize;
            Type = type;
        }
    }
}
