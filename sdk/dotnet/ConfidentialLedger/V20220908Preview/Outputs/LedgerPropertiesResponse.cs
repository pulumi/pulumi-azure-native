// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConfidentialLedger.V20220908Preview.Outputs
{

    /// <summary>
    /// Additional Confidential Ledger properties.
    /// </summary>
    [OutputType]
    public sealed class LedgerPropertiesResponse
    {
        /// <summary>
        /// Array of all AAD based Security Principals.
        /// </summary>
        public readonly ImmutableArray<Outputs.AADBasedSecurityPrincipalResponse> AadBasedSecurityPrincipals;
        /// <summary>
        /// Array of all cert based Security Principals.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertBasedSecurityPrincipalResponse> CertBasedSecurityPrincipals;
        /// <summary>
        /// Endpoint for accessing network identity.
        /// </summary>
        public readonly string IdentityServiceUri;
        /// <summary>
        /// Internal namespace for the Ledger
        /// </summary>
        public readonly string LedgerInternalNamespace;
        /// <summary>
        /// Unique name for the Confidential Ledger.
        /// </summary>
        public readonly string LedgerName;
        /// <summary>
        /// Type of Confidential Ledger
        /// </summary>
        public readonly string? LedgerType;
        /// <summary>
        /// Endpoint for calling Ledger Service.
        /// </summary>
        public readonly string LedgerUri;
        /// <summary>
        /// Provisioning state of Ledger Resource
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private LedgerPropertiesResponse(
            ImmutableArray<Outputs.AADBasedSecurityPrincipalResponse> aadBasedSecurityPrincipals,

            ImmutableArray<Outputs.CertBasedSecurityPrincipalResponse> certBasedSecurityPrincipals,

            string identityServiceUri,

            string ledgerInternalNamespace,

            string ledgerName,

            string? ledgerType,

            string ledgerUri,

            string provisioningState)
        {
            AadBasedSecurityPrincipals = aadBasedSecurityPrincipals;
            CertBasedSecurityPrincipals = certBasedSecurityPrincipals;
            IdentityServiceUri = identityServiceUri;
            LedgerInternalNamespace = ledgerInternalNamespace;
            LedgerName = ledgerName;
            LedgerType = ledgerType;
            LedgerUri = ledgerUri;
            ProvisioningState = provisioningState;
        }
    }
}
