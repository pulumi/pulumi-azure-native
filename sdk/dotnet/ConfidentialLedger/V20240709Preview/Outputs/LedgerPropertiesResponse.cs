// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConfidentialLedger.V20240709Preview.Outputs
{

    /// <summary>
    /// Additional Confidential Ledger properties.
    /// </summary>
    [OutputType]
    public sealed class LedgerPropertiesResponse
    {
        /// <summary>
        /// Array of all AAD based Security Principals.
        /// </summary>
        public readonly ImmutableArray<Outputs.AADBasedSecurityPrincipalResponse> AadBasedSecurityPrincipals;
        /// <summary>
        /// Array of all cert based Security Principals.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertBasedSecurityPrincipalResponse> CertBasedSecurityPrincipals;
        /// <summary>
        /// CCF Property for the logging level for the untrusted host: Trace, Debug, Info, Fail, Fatal.
        /// </summary>
        public readonly string? HostLevel;
        /// <summary>
        /// Endpoint for accessing network identity.
        /// </summary>
        public readonly string IdentityServiceUri;
        /// <summary>
        /// Internal namespace for the Ledger
        /// </summary>
        public readonly string LedgerInternalNamespace;
        /// <summary>
        /// Unique name for the Confidential Ledger.
        /// </summary>
        public readonly string LedgerName;
        /// <summary>
        /// SKU associated with the ledger
        /// </summary>
        public readonly string? LedgerSku;
        /// <summary>
        /// Type of Confidential Ledger
        /// </summary>
        public readonly string? LedgerType;
        /// <summary>
        /// Endpoint for calling Ledger Service.
        /// </summary>
        public readonly string LedgerUri;
        /// <summary>
        /// CCF Property for the maximum size of the http request body: 1MB, 5MB, 10MB.
        /// </summary>
        public readonly int? MaxBodySizeInMb;
        /// <summary>
        /// Number of CCF nodes in the ACC Ledger.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// Provisioning state of Ledger Resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Object representing RunningState for Ledger.
        /// </summary>
        public readonly string? RunningState;
        /// <summary>
        /// CCF Property for the subject name to include in the node certificate. Default: CN=CCF Node.
        /// </summary>
        public readonly string? SubjectName;

        [OutputConstructor]
        private LedgerPropertiesResponse(
            ImmutableArray<Outputs.AADBasedSecurityPrincipalResponse> aadBasedSecurityPrincipals,

            ImmutableArray<Outputs.CertBasedSecurityPrincipalResponse> certBasedSecurityPrincipals,

            string? hostLevel,

            string identityServiceUri,

            string ledgerInternalNamespace,

            string ledgerName,

            string? ledgerSku,

            string? ledgerType,

            string ledgerUri,

            int? maxBodySizeInMb,

            int? nodeCount,

            string provisioningState,

            string? runningState,

            string? subjectName)
        {
            AadBasedSecurityPrincipals = aadBasedSecurityPrincipals;
            CertBasedSecurityPrincipals = certBasedSecurityPrincipals;
            HostLevel = hostLevel;
            IdentityServiceUri = identityServiceUri;
            LedgerInternalNamespace = ledgerInternalNamespace;
            LedgerName = ledgerName;
            LedgerSku = ledgerSku;
            LedgerType = ledgerType;
            LedgerUri = ledgerUri;
            MaxBodySizeInMb = maxBodySizeInMb;
            NodeCount = nodeCount;
            ProvisioningState = provisioningState;
            RunningState = runningState;
            SubjectName = subjectName;
        }
    }
}
