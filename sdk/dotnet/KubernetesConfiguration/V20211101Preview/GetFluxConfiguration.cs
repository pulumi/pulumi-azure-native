// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesConfiguration.V20211101Preview
{
    public static class GetFluxConfiguration
    {
        /// <summary>
        /// Gets details of the Flux Configuration.
        /// </summary>
        public static Task<GetFluxConfigurationResult> InvokeAsync(GetFluxConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFluxConfigurationResult>("azure-native:kubernetesconfiguration/v20211101preview:getFluxConfiguration", args ?? new GetFluxConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of the Flux Configuration.
        /// </summary>
        public static Output<GetFluxConfigurationResult> Invoke(GetFluxConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFluxConfigurationResult>("azure-native:kubernetesconfiguration/v20211101preview:getFluxConfiguration", args ?? new GetFluxConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFluxConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the kubernetes cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterResourceName", required: true)]
        public string ClusterResourceName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterRp", required: true)]
        public string ClusterRp { get; set; } = null!;

        /// <summary>
        /// Name of the Flux Configuration.
        /// </summary>
        [Input("fluxConfigurationName", required: true)]
        public string FluxConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFluxConfigurationArgs()
        {
        }
        public static new GetFluxConfigurationArgs Empty => new GetFluxConfigurationArgs();
    }

    public sealed class GetFluxConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the kubernetes cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterResourceName", required: true)]
        public Input<string> ClusterResourceName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterRp", required: true)]
        public Input<string> ClusterRp { get; set; } = null!;

        /// <summary>
        /// Name of the Flux Configuration.
        /// </summary>
        [Input("fluxConfigurationName", required: true)]
        public Input<string> FluxConfigurationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFluxConfigurationInvokeArgs()
        {
        }
        public static new GetFluxConfigurationInvokeArgs Empty => new GetFluxConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetFluxConfigurationResult
    {
        /// <summary>
        /// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
        /// </summary>
        public readonly string ComplianceState;
        /// <summary>
        /// Key-value pairs of protected configuration settings for the configuration
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ConfigurationProtectedSettings;
        /// <summary>
        /// Error message returned to the user in the case of provisioning failure.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Parameters to reconcile to the GitRepository source kind type.
        /// </summary>
        public readonly Outputs.GitRepositoryDefinitionResponse? GitRepository;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.KustomizationDefinitionResponse>? Kustomizations;
        /// <summary>
        /// Datetime the fluxConfiguration last synced its source on the cluster.
        /// </summary>
        public readonly string LastSourceSyncedAt;
        /// <summary>
        /// Branch and SHA of the last source commit synced with the cluster.
        /// </summary>
        public readonly string LastSourceSyncedCommitId;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// Status of the creation of the fluxConfiguration.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
        /// </summary>
        public readonly string RepositoryPublicKey;
        /// <summary>
        /// Scope at which the operator will be installed.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Source Kind to pull the configuration data from.
        /// </summary>
        public readonly string? SourceKind;
        /// <summary>
        /// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObjectStatusDefinitionResponse> Statuses;
        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        public readonly bool? Suspend;
        /// <summary>
        /// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFluxConfigurationResult(
            string complianceState,

            ImmutableDictionary<string, string>? configurationProtectedSettings,

            string errorMessage,

            Outputs.GitRepositoryDefinitionResponse? gitRepository,

            string id,

            ImmutableDictionary<string, Outputs.KustomizationDefinitionResponse>? kustomizations,

            string lastSourceSyncedAt,

            string lastSourceSyncedCommitId,

            string name,

            string? @namespace,

            string provisioningState,

            string repositoryPublicKey,

            string? scope,

            string? sourceKind,

            ImmutableArray<Outputs.ObjectStatusDefinitionResponse> statuses,

            bool? suspend,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ComplianceState = complianceState;
            ConfigurationProtectedSettings = configurationProtectedSettings;
            ErrorMessage = errorMessage;
            GitRepository = gitRepository;
            Id = id;
            Kustomizations = kustomizations;
            LastSourceSyncedAt = lastSourceSyncedAt;
            LastSourceSyncedCommitId = lastSourceSyncedCommitId;
            Name = name;
            Namespace = @namespace;
            ProvisioningState = provisioningState;
            RepositoryPublicKey = repositoryPublicKey;
            Scope = scope;
            SourceKind = sourceKind;
            Statuses = statuses;
            Suspend = suspend;
            SystemData = systemData;
            Type = type;
        }
    }
}
