// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesConfiguration.V20240401Preview.Inputs
{

    /// <summary>
    /// Parameters to reconcile to the OCIRepository source kind type.
    /// </summary>
    public sealed class OCIRepositoryDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify whether to allow connecting to a non-TLS HTTP container registry.
        /// </summary>
        [Input("insecure")]
        public Input<bool>? Insecure { get; set; }

        /// <summary>
        /// The layer to be pulled from the OCI artifact.
        /// </summary>
        [Input("layerSelector")]
        public Input<Inputs.LayerSelectorDefinitionArgs>? LayerSelector { get; set; }

        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
        /// </summary>
        [Input("localAuthRef")]
        public Input<string>? LocalAuthRef { get; set; }

        /// <summary>
        /// The source reference for the OCIRepository object.
        /// </summary>
        [Input("repositoryRef")]
        public Input<Inputs.OCIRepositoryRefDefinitionArgs>? RepositoryRef { get; set; }

        /// <summary>
        /// The service account name to authenticate with the OCI repository.
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        /// <summary>
        /// The interval at which to re-reconcile the cluster OCI repository source with the remote.
        /// </summary>
        [Input("syncIntervalInSeconds")]
        public Input<double>? SyncIntervalInSeconds { get; set; }

        /// <summary>
        /// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<double>? TimeoutInSeconds { get; set; }

        /// <summary>
        /// Parameters to authenticate using TLS config for OCI repository.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.TlsConfigDefinitionArgs>? TlsConfig { get; set; }

        /// <summary>
        /// The URL to sync for the flux configuration OCI repository.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Specifies whether to use Workload Identity to authenticate with the OCI repository.
        /// </summary>
        [Input("useWorkloadIdentity")]
        public Input<bool>? UseWorkloadIdentity { get; set; }

        /// <summary>
        /// Verification of the authenticity of an OCI Artifact.
        /// </summary>
        [Input("verify")]
        public Input<Inputs.VerifyDefinitionArgs>? Verify { get; set; }

        public OCIRepositoryDefinitionArgs()
        {
            Insecure = false;
            SyncIntervalInSeconds = 600;
            TimeoutInSeconds = 600;
            UseWorkloadIdentity = false;
        }
        public static new OCIRepositoryDefinitionArgs Empty => new OCIRepositoryDefinitionArgs();
    }
}
