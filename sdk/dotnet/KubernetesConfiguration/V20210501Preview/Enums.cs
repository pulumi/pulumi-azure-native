// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.KubernetesConfiguration.V20210501Preview
{
    /// <summary>
    /// Level of the status.
    /// </summary>
    [EnumType]
    public readonly struct LevelType : IEquatable<LevelType>
    {
        private readonly string _value;

        private LevelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static LevelType Error { get; } = new LevelType("Error");
        public static LevelType Warning { get; } = new LevelType("Warning");
        public static LevelType Information { get; } = new LevelType("Information");

        public static bool operator ==(LevelType left, LevelType right) => left.Equals(right);
        public static bool operator !=(LevelType left, LevelType right) => !left.Equals(right);

        public static explicit operator string(LevelType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is LevelType other && Equals(other);
        public bool Equals(LevelType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Scope at which the operator will be installed.
    /// </summary>
    [EnumType]
    public readonly struct OperatorScopeType : IEquatable<OperatorScopeType>
    {
        private readonly string _value;

        private OperatorScopeType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OperatorScopeType Cluster { get; } = new OperatorScopeType("cluster");
        public static OperatorScopeType @Namespace { get; } = new OperatorScopeType("namespace");

        public static bool operator ==(OperatorScopeType left, OperatorScopeType right) => left.Equals(right);
        public static bool operator !=(OperatorScopeType left, OperatorScopeType right) => !left.Equals(right);

        public static explicit operator string(OperatorScopeType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OperatorScopeType other && Equals(other);
        public bool Equals(OperatorScopeType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the operator
    /// </summary>
    [EnumType]
    public readonly struct OperatorType : IEquatable<OperatorType>
    {
        private readonly string _value;

        private OperatorType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OperatorType Flux { get; } = new OperatorType("Flux");

        public static bool operator ==(OperatorType left, OperatorType right) => left.Equals(right);
        public static bool operator !=(OperatorType left, OperatorType right) => !left.Equals(right);

        public static explicit operator string(OperatorType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OperatorType other && Equals(other);
        public bool Equals(OperatorType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The identity type.
    /// </summary>
    [EnumType]
    public readonly struct ResourceIdentityType : IEquatable<ResourceIdentityType>
    {
        private readonly string _value;

        private ResourceIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResourceIdentityType SystemAssigned { get; } = new ResourceIdentityType("SystemAssigned");

        public static bool operator ==(ResourceIdentityType left, ResourceIdentityType right) => left.Equals(right);
        public static bool operator !=(ResourceIdentityType left, ResourceIdentityType right) => !left.Equals(right);

        public static explicit operator string(ResourceIdentityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResourceIdentityType other && Equals(other);
        public bool Equals(ResourceIdentityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
