// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesConfiguration.V20220101Preview
{
    /// <summary>
    /// The Flux Configuration object returned in Get &amp; Put response.
    /// </summary>
    [AzureNativeResourceType("azure-native:kubernetesconfiguration/v20220101preview:FluxConfiguration")]
    public partial class FluxConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Parameters to reconcile to the Bucket source kind type.
        /// </summary>
        [Output("bucket")]
        public Output<Outputs.BucketDefinitionResponse?> Bucket { get; private set; } = null!;

        /// <summary>
        /// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
        /// </summary>
        [Output("complianceState")]
        public Output<string> ComplianceState { get; private set; } = null!;

        /// <summary>
        /// Key-value pairs of protected configuration settings for the configuration
        /// </summary>
        [Output("configurationProtectedSettings")]
        public Output<ImmutableDictionary<string, string>?> ConfigurationProtectedSettings { get; private set; } = null!;

        /// <summary>
        /// Error message returned to the user in the case of provisioning failure.
        /// </summary>
        [Output("errorMessage")]
        public Output<string> ErrorMessage { get; private set; } = null!;

        /// <summary>
        /// Parameters to reconcile to the GitRepository source kind type.
        /// </summary>
        [Output("gitRepository")]
        public Output<Outputs.GitRepositoryDefinitionResponse?> GitRepository { get; private set; } = null!;

        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        [Output("kustomizations")]
        public Output<ImmutableDictionary<string, Outputs.KustomizationDefinitionResponse>?> Kustomizations { get; private set; } = null!;

        /// <summary>
        /// Datetime the fluxConfiguration last synced its source on the cluster.
        /// </summary>
        [Output("lastSourceUpdatedAt")]
        public Output<string> LastSourceUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Branch and SHA of the last source commit synced with the cluster.
        /// </summary>
        [Output("lastSourceUpdatedCommitId")]
        public Output<string> LastSourceUpdatedCommitId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// Status of the creation of the fluxConfiguration.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
        /// </summary>
        [Output("repositoryPublicKey")]
        public Output<string> RepositoryPublicKey { get; private set; } = null!;

        /// <summary>
        /// Scope at which the operator will be installed.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// Source Kind to pull the configuration data from.
        /// </summary>
        [Output("sourceKind")]
        public Output<string?> SourceKind { get; private set; } = null!;

        /// <summary>
        /// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
        /// </summary>
        [Output("statuses")]
        public Output<ImmutableArray<Outputs.ObjectStatusDefinitionResponse>> Statuses { get; private set; } = null!;

        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        [Output("suspend")]
        public Output<bool?> Suspend { get; private set; } = null!;

        /// <summary>
        /// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FluxConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FluxConfiguration(string name, FluxConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesconfiguration/v20220101preview:FluxConfiguration", name, args ?? new FluxConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FluxConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:kubernetesconfiguration/v20220101preview:FluxConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesconfiguration:FluxConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesconfiguration/v20211101preview:FluxConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesconfiguration/v20220301:FluxConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:kubernetesconfiguration/v20220701:FluxConfiguration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FluxConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FluxConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FluxConfiguration(name, id, options);
        }
    }

    public sealed class FluxConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Parameters to reconcile to the Bucket source kind type.
        /// </summary>
        [Input("bucket")]
        public Input<Inputs.BucketDefinitionArgs>? Bucket { get; set; }

        /// <summary>
        /// The name of the kubernetes cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterResourceName", required: true)]
        public Input<string> ClusterResourceName { get; set; } = null!;

        /// <summary>
        /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
        /// </summary>
        [Input("clusterRp", required: true)]
        public Input<string> ClusterRp { get; set; } = null!;

        [Input("configurationProtectedSettings")]
        private InputMap<string>? _configurationProtectedSettings;

        /// <summary>
        /// Key-value pairs of protected configuration settings for the configuration
        /// </summary>
        public InputMap<string> ConfigurationProtectedSettings
        {
            get => _configurationProtectedSettings ?? (_configurationProtectedSettings = new InputMap<string>());
            set => _configurationProtectedSettings = value;
        }

        /// <summary>
        /// Name of the Flux Configuration.
        /// </summary>
        [Input("fluxConfigurationName")]
        public Input<string>? FluxConfigurationName { get; set; }

        /// <summary>
        /// Parameters to reconcile to the GitRepository source kind type.
        /// </summary>
        [Input("gitRepository")]
        public Input<Inputs.GitRepositoryDefinitionArgs>? GitRepository { get; set; }

        [Input("kustomizations")]
        private InputMap<Inputs.KustomizationDefinitionArgs>? _kustomizations;

        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        public InputMap<Inputs.KustomizationDefinitionArgs> Kustomizations
        {
            get => _kustomizations ?? (_kustomizations = new InputMap<Inputs.KustomizationDefinitionArgs>());
            set => _kustomizations = value;
        }

        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Scope at which the operator will be installed.
        /// </summary>
        [Input("scope")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesConfiguration.V20220101Preview.ScopeType>? Scope { get; set; }

        /// <summary>
        /// Source Kind to pull the configuration data from.
        /// </summary>
        [Input("sourceKind")]
        public InputUnion<string, Pulumi.AzureNative.KubernetesConfiguration.V20220101Preview.SourceKindType>? SourceKind { get; set; }

        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        [Input("suspend")]
        public Input<bool>? Suspend { get; set; }

        public FluxConfigurationArgs()
        {
            Namespace = "default";
            SourceKind = "GitRepository";
            Suspend = false;
        }
        public static new FluxConfigurationArgs Empty => new FluxConfigurationArgs();
    }
}
