// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KubernetesConfiguration.V20221101.Outputs
{

    /// <summary>
    /// Parameters to reconcile to the GitRepository source kind type.
    /// </summary>
    [OutputType]
    public sealed class GitRepositoryDefinitionResponse
    {
        /// <summary>
        /// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
        /// </summary>
        public readonly string? HttpsCACert;
        /// <summary>
        /// Plaintext HTTPS username used to access private git repositories over HTTPS
        /// </summary>
        public readonly string? HttpsUser;
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
        /// </summary>
        public readonly string? LocalAuthRef;
        /// <summary>
        /// The source reference for the GitRepository object.
        /// </summary>
        public readonly Outputs.RepositoryRefDefinitionResponse? RepositoryRef;
        /// <summary>
        /// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
        /// </summary>
        public readonly string? SshKnownHosts;
        /// <summary>
        /// The interval at which to re-reconcile the cluster git repository source with the remote.
        /// </summary>
        public readonly double? SyncIntervalInSeconds;
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster git repository source with the remote.
        /// </summary>
        public readonly double? TimeoutInSeconds;
        /// <summary>
        /// The URL to sync for the flux configuration git repository.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private GitRepositoryDefinitionResponse(
            string? httpsCACert,

            string? httpsUser,

            string? localAuthRef,

            Outputs.RepositoryRefDefinitionResponse? repositoryRef,

            string? sshKnownHosts,

            double? syncIntervalInSeconds,

            double? timeoutInSeconds,

            string? url)
        {
            HttpsCACert = httpsCACert;
            HttpsUser = httpsUser;
            LocalAuthRef = localAuthRef;
            RepositoryRef = repositoryRef;
            SshKnownHosts = sshKnownHosts;
            SyncIntervalInSeconds = syncIntervalInSeconds;
            TimeoutInSeconds = timeoutInSeconds;
            Url = url;
        }
    }
}
