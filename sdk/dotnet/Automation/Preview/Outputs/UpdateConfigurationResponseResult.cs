// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Automation.Preview.Outputs
{

    [OutputType]
    public sealed class UpdateConfigurationResponseResult
    {
        /// <summary>
        /// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
        /// </summary>
        public readonly ImmutableArray<string> AzureVirtualMachines;
        /// <summary>
        /// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
        /// </summary>
        public readonly string? Duration;
        /// <summary>
        /// Linux specific update configuration.
        /// </summary>
        public readonly Outputs.LinuxPropertiesResponseResult? Linux;
        /// <summary>
        /// List of names of non-azure machines targeted by the software update configuration.
        /// </summary>
        public readonly ImmutableArray<string> NonAzureComputerNames;
        /// <summary>
        /// operating system of target machines
        /// </summary>
        public readonly string OperatingSystem;
        /// <summary>
        /// Group targets for the software update configuration.
        /// </summary>
        public readonly Outputs.TargetPropertiesResponseResult? Targets;
        /// <summary>
        /// Windows specific update configuration.
        /// </summary>
        public readonly Outputs.WindowsPropertiesResponseResult? Windows;

        [OutputConstructor]
        private UpdateConfigurationResponseResult(
            ImmutableArray<string> azureVirtualMachines,

            string? duration,

            Outputs.LinuxPropertiesResponseResult? linux,

            ImmutableArray<string> nonAzureComputerNames,

            string operatingSystem,

            Outputs.TargetPropertiesResponseResult? targets,

            Outputs.WindowsPropertiesResponseResult? windows)
        {
            AzureVirtualMachines = azureVirtualMachines;
            Duration = duration;
            Linux = linux;
            NonAzureComputerNames = nonAzureComputerNames;
            OperatingSystem = operatingSystem;
            Targets = targets;
            Windows = windows;
        }
    }
}
