// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation
{
    public static class GetPython3Package
    {
        /// <summary>
        /// Retrieve the python 3 package identified by package name.
        /// Azure REST API version: 2022-08-08.
        /// 
        /// Other available API versions: 2023-05-15-preview, 2023-11-01.
        /// </summary>
        public static Task<GetPython3PackageResult> InvokeAsync(GetPython3PackageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPython3PackageResult>("azure-native:automation:getPython3Package", args ?? new GetPython3PackageArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the python 3 package identified by package name.
        /// Azure REST API version: 2022-08-08.
        /// 
        /// Other available API versions: 2023-05-15-preview, 2023-11-01.
        /// </summary>
        public static Output<GetPython3PackageResult> Invoke(GetPython3PackageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPython3PackageResult>("azure-native:automation:getPython3Package", args ?? new GetPython3PackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPython3PackageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The python package name.
        /// </summary>
        [Input("packageName", required: true)]
        public string PackageName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPython3PackageArgs()
        {
        }
        public static new GetPython3PackageArgs Empty => new GetPython3PackageArgs();
    }

    public sealed class GetPython3PackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The python package name.
        /// </summary>
        [Input("packageName", required: true)]
        public Input<string> PackageName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPython3PackageInvokeArgs()
        {
        }
        public static new GetPython3PackageInvokeArgs Empty => new GetPython3PackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetPython3PackageResult
    {
        /// <summary>
        /// Gets or sets the activity count of the module.
        /// </summary>
        public readonly int? ActivityCount;
        /// <summary>
        /// Gets or sets the contentLink of the module.
        /// </summary>
        public readonly Outputs.ContentLinkResponse? ContentLink;
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the error info of the module.
        /// </summary>
        public readonly Outputs.ModuleErrorInfoResponse? Error;
        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource Id for the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets type of module, if its composite or not.
        /// </summary>
        public readonly bool? IsComposite;
        /// <summary>
        /// Gets or sets the isGlobal flag of the module.
        /// </summary>
        public readonly bool? IsGlobal;
        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        public readonly string? LastModifiedTime;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the provisioning state of the module.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the size in bytes of the module.
        /// </summary>
        public readonly double? SizeInBytes;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Gets or sets the version of the module.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetPython3PackageResult(
            int? activityCount,

            Outputs.ContentLinkResponse? contentLink,

            string? creationTime,

            string? description,

            Outputs.ModuleErrorInfoResponse? error,

            string? etag,

            string id,

            bool? isComposite,

            bool? isGlobal,

            string? lastModifiedTime,

            string? location,

            string name,

            string? provisioningState,

            double? sizeInBytes,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            ActivityCount = activityCount;
            ContentLink = contentLink;
            CreationTime = creationTime;
            Description = description;
            Error = error;
            Etag = etag;
            Id = id;
            IsComposite = isComposite;
            IsGlobal = isGlobal;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SizeInBytes = sizeInBytes;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
