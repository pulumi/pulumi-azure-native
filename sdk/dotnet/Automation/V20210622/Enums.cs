// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Automation.V20210622
{
    /// <summary>
    /// Encryption Key Source
    /// </summary>
    [EnumType]
    public readonly struct EncryptionKeySourceType : IEquatable<EncryptionKeySourceType>
    {
        private readonly string _value;

        private EncryptionKeySourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EncryptionKeySourceType Microsoft_Automation { get; } = new EncryptionKeySourceType("Microsoft.Automation");
        public static EncryptionKeySourceType Microsoft_Keyvault { get; } = new EncryptionKeySourceType("Microsoft.Keyvault");

        public static bool operator ==(EncryptionKeySourceType left, EncryptionKeySourceType right) => left.Equals(right);
        public static bool operator !=(EncryptionKeySourceType left, EncryptionKeySourceType right) => !left.Equals(right);

        public static explicit operator string(EncryptionKeySourceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EncryptionKeySourceType other && Equals(other);
        public bool Equals(EncryptionKeySourceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The identity type.
    /// </summary>
    [EnumType]
    public readonly struct ResourceIdentityType : IEquatable<ResourceIdentityType>
    {
        private readonly string _value;

        private ResourceIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResourceIdentityType SystemAssigned { get; } = new ResourceIdentityType("SystemAssigned");
        public static ResourceIdentityType UserAssigned { get; } = new ResourceIdentityType("UserAssigned");
        public static ResourceIdentityType SystemAssigned_UserAssigned { get; } = new ResourceIdentityType("SystemAssigned, UserAssigned");
        public static ResourceIdentityType None { get; } = new ResourceIdentityType("None");

        public static bool operator ==(ResourceIdentityType left, ResourceIdentityType right) => left.Equals(right);
        public static bool operator !=(ResourceIdentityType left, ResourceIdentityType right) => !left.Equals(right);

        public static explicit operator string(ResourceIdentityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResourceIdentityType other && Equals(other);
        public bool Equals(ResourceIdentityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Gets or sets the SKU name of the account.
    /// </summary>
    [EnumType]
    public readonly struct SkuNameEnum : IEquatable<SkuNameEnum>
    {
        private readonly string _value;

        private SkuNameEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SkuNameEnum Free { get; } = new SkuNameEnum("Free");
        public static SkuNameEnum Basic { get; } = new SkuNameEnum("Basic");

        public static bool operator ==(SkuNameEnum left, SkuNameEnum right) => left.Equals(right);
        public static bool operator !=(SkuNameEnum left, SkuNameEnum right) => !left.Equals(right);

        public static explicit operator string(SkuNameEnum value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SkuNameEnum other && Equals(other);
        public bool Equals(SkuNameEnum other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
