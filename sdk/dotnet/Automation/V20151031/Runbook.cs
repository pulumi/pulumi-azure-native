// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Automation.V20151031
{
    /// <summary>
    /// Definition of the runbook type.
    /// </summary>
    public partial class Runbook : Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        [Output("creationTime")]
        public Output<string?> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the draft runbook properties.
        /// </summary>
        [Output("draft")]
        public Output<Outputs.RunbookDraftResponse?> Draft { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the job count of the runbook.
        /// </summary>
        [Output("jobCount")]
        public Output<int?> JobCount { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the last modified by.
        /// </summary>
        [Output("lastModifiedBy")]
        public Output<string?> LastModifiedBy { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string?> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the option to log activity trace of the runbook.
        /// </summary>
        [Output("logActivityTrace")]
        public Output<int?> LogActivityTrace { get; private set; } = null!;

        /// <summary>
        /// Gets or sets progress log option.
        /// </summary>
        [Output("logProgress")]
        public Output<bool?> LogProgress { get; private set; } = null!;

        /// <summary>
        /// Gets or sets verbose log option.
        /// </summary>
        [Output("logVerbose")]
        public Output<bool?> LogVerbose { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the runbook output types.
        /// </summary>
        [Output("outputTypes")]
        public Output<ImmutableArray<string>> OutputTypes { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the runbook parameters.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, Outputs.RunbookParameterResponse>?> Parameters { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state of the runbook.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the published runbook content link.
        /// </summary>
        [Output("publishContentLink")]
        public Output<Outputs.ContentLinkResponse?> PublishContentLink { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the type of the runbook.
        /// </summary>
        [Output("runbookType")]
        public Output<string?> RunbookType { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the state of the runbook.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Runbook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Runbook(string name, RunbookArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:automation/v20151031:Runbook", name, args ?? new RunbookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Runbook(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:automation/v20151031:Runbook", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:automation/latest:Runbook"},
                    new Pulumi.Alias { Type = "azure-nextgen:automation/v20180630:Runbook"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Runbook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Runbook Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Runbook(name, id, options);
        }
    }

    public sealed class RunbookArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the description of the runbook.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Gets or sets the draft runbook properties.
        /// </summary>
        [Input("draft")]
        public Input<Inputs.RunbookDraftArgs>? Draft { get; set; }

        /// <summary>
        /// Gets or sets the location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Gets or sets the activity-level tracing options of the runbook.
        /// </summary>
        [Input("logActivityTrace")]
        public Input<int>? LogActivityTrace { get; set; }

        /// <summary>
        /// Gets or sets progress log option.
        /// </summary>
        [Input("logProgress")]
        public Input<bool>? LogProgress { get; set; }

        /// <summary>
        /// Gets or sets verbose log option.
        /// </summary>
        [Input("logVerbose")]
        public Input<bool>? LogVerbose { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Gets or sets the published runbook content link.
        /// </summary>
        [Input("publishContentLink")]
        public Input<Inputs.ContentLinkArgs>? PublishContentLink { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The runbook name.
        /// </summary>
        [Input("runbookName", required: true)]
        public Input<string> RunbookName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the type of the runbook.
        /// </summary>
        [Input("runbookType", required: true)]
        public Input<string> RunbookType { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Gets or sets the tags attached to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public RunbookArgs()
        {
        }
    }
}
