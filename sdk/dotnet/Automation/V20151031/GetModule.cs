// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Automation.V20151031
{
    public static class GetModule
    {
        public static Task<GetModuleResult> InvokeAsync(GetModuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetModuleResult>("azure-nextgen:automation/v20151031:getModule", args ?? new GetModuleArgs(), options.WithVersion());
    }


    public sealed class GetModuleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The module name.
        /// </summary>
        [Input("moduleName", required: true)]
        public string ModuleName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetModuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetModuleResult
    {
        /// <summary>
        /// Gets or sets the activity count of the module.
        /// </summary>
        public readonly int? ActivityCount;
        /// <summary>
        /// Gets or sets the contentLink of the module.
        /// </summary>
        public readonly Outputs.ContentLinkResponse? ContentLink;
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the error info of the module.
        /// </summary>
        public readonly Outputs.ModuleErrorInfoResponse? Error;
        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets or sets type of module, if its composite or not.
        /// </summary>
        public readonly bool? IsComposite;
        /// <summary>
        /// Gets or sets the isGlobal flag of the module.
        /// </summary>
        public readonly bool? IsGlobal;
        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        public readonly string? LastModifiedTime;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the provisioning state of the module.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the size in bytes of the module.
        /// </summary>
        public readonly int? SizeInBytes;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Gets or sets the version of the module.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetModuleResult(
            int? activityCount,

            Outputs.ContentLinkResponse? contentLink,

            string? creationTime,

            string? description,

            Outputs.ModuleErrorInfoResponse? error,

            string? etag,

            bool? isComposite,

            bool? isGlobal,

            string? lastModifiedTime,

            string? location,

            string name,

            string? provisioningState,

            int? sizeInBytes,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? version)
        {
            ActivityCount = activityCount;
            ContentLink = contentLink;
            CreationTime = creationTime;
            Description = description;
            Error = error;
            Etag = etag;
            IsComposite = isComposite;
            IsGlobal = isGlobal;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SizeInBytes = sizeInBytes;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
