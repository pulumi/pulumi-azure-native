// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation.V20230515Preview
{
    public static class GetHybridRunbookWorker
    {
        /// <summary>
        /// Retrieve a hybrid runbook worker.
        /// </summary>
        public static Task<GetHybridRunbookWorkerResult> InvokeAsync(GetHybridRunbookWorkerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHybridRunbookWorkerResult>("azure-native:automation/v20230515preview:getHybridRunbookWorker", args ?? new GetHybridRunbookWorkerArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a hybrid runbook worker.
        /// </summary>
        public static Output<GetHybridRunbookWorkerResult> Invoke(GetHybridRunbookWorkerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHybridRunbookWorkerResult>("azure-native:automation/v20230515preview:getHybridRunbookWorker", args ?? new GetHybridRunbookWorkerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHybridRunbookWorkerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The hybrid runbook worker group name
        /// </summary>
        [Input("hybridRunbookWorkerGroupName", required: true)]
        public string HybridRunbookWorkerGroupName { get; set; } = null!;

        /// <summary>
        /// The hybrid runbook worker id
        /// </summary>
        [Input("hybridRunbookWorkerId", required: true)]
        public string HybridRunbookWorkerId { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHybridRunbookWorkerArgs()
        {
        }
        public static new GetHybridRunbookWorkerArgs Empty => new GetHybridRunbookWorkerArgs();
    }

    public sealed class GetHybridRunbookWorkerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The hybrid runbook worker group name
        /// </summary>
        [Input("hybridRunbookWorkerGroupName", required: true)]
        public Input<string> HybridRunbookWorkerGroupName { get; set; } = null!;

        /// <summary>
        /// The hybrid runbook worker id
        /// </summary>
        [Input("hybridRunbookWorkerId", required: true)]
        public Input<string> HybridRunbookWorkerId { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetHybridRunbookWorkerInvokeArgs()
        {
        }
        public static new GetHybridRunbookWorkerInvokeArgs Empty => new GetHybridRunbookWorkerInvokeArgs();
    }


    [OutputType]
    public sealed class GetHybridRunbookWorkerResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the assigned machine IP address.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// Last Heartbeat from the Worker
        /// </summary>
        public readonly string? LastSeenDateTime;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the registration time of the worker machine.
        /// </summary>
        public readonly string? RegisteredDateTime;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Azure Resource Manager Id for a virtual machine.
        /// </summary>
        public readonly string? VmResourceId;
        /// <summary>
        /// Name of the HybridWorker.
        /// </summary>
        public readonly string? WorkerName;
        /// <summary>
        /// Type of the HybridWorker.
        /// </summary>
        public readonly string? WorkerType;

        [OutputConstructor]
        private GetHybridRunbookWorkerResult(
            string id,

            string? ip,

            string? lastSeenDateTime,

            string location,

            string name,

            string? registeredDateTime,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string? vmResourceId,

            string? workerName,

            string? workerType)
        {
            Id = id;
            Ip = ip;
            LastSeenDateTime = lastSeenDateTime;
            Location = location;
            Name = name;
            RegisteredDateTime = registeredDateTime;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VmResourceId = vmResourceId;
            WorkerName = workerName;
            WorkerType = workerType;
        }
    }
}
