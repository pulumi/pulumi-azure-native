// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation.V20180630
{
    public static class GetRunbook
    {
        /// <summary>
        /// Definition of the runbook type.
        /// </summary>
        public static Task<GetRunbookResult> InvokeAsync(GetRunbookArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRunbookResult>("azure-native:automation/v20180630:getRunbook", args ?? new GetRunbookArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of the runbook type.
        /// </summary>
        public static Output<GetRunbookResult> Invoke(GetRunbookInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRunbookResult>("azure-native:automation/v20180630:getRunbook", args ?? new GetRunbookInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRunbookArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The runbook name.
        /// </summary>
        [Input("runbookName", required: true)]
        public string RunbookName { get; set; } = null!;

        public GetRunbookArgs()
        {
        }
        public static new GetRunbookArgs Empty => new GetRunbookArgs();
    }

    public sealed class GetRunbookInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The runbook name.
        /// </summary>
        [Input("runbookName", required: true)]
        public Input<string> RunbookName { get; set; } = null!;

        public GetRunbookInvokeArgs()
        {
        }
        public static new GetRunbookInvokeArgs Empty => new GetRunbookInvokeArgs();
    }


    [OutputType]
    public sealed class GetRunbookResult
    {
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the draft runbook properties.
        /// </summary>
        public readonly Outputs.RunbookDraftResponse? Draft;
        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource Id for the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Gets or sets the job count of the runbook.
        /// </summary>
        public readonly int? JobCount;
        /// <summary>
        /// Gets or sets the last modified by.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        public readonly string? LastModifiedTime;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Gets or sets the option to log activity trace of the runbook.
        /// </summary>
        public readonly int? LogActivityTrace;
        /// <summary>
        /// Gets or sets progress log option.
        /// </summary>
        public readonly bool? LogProgress;
        /// <summary>
        /// Gets or sets verbose log option.
        /// </summary>
        public readonly bool? LogVerbose;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the runbook output types.
        /// </summary>
        public readonly ImmutableArray<string> OutputTypes;
        /// <summary>
        /// Gets or sets the runbook parameters.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.RunbookParameterResponse>? Parameters;
        /// <summary>
        /// Gets or sets the provisioning state of the runbook.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Gets or sets the published runbook content link.
        /// </summary>
        public readonly Outputs.ContentLinkResponse? PublishContentLink;
        /// <summary>
        /// Gets or sets the type of the runbook.
        /// </summary>
        public readonly string? RunbookType;
        /// <summary>
        /// Gets or sets the state of the runbook.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRunbookResult(
            string? creationTime,

            string? description,

            Outputs.RunbookDraftResponse? draft,

            string? etag,

            string id,

            int? jobCount,

            string? lastModifiedBy,

            string? lastModifiedTime,

            string? location,

            int? logActivityTrace,

            bool? logProgress,

            bool? logVerbose,

            string name,

            ImmutableArray<string> outputTypes,

            ImmutableDictionary<string, Outputs.RunbookParameterResponse>? parameters,

            string? provisioningState,

            Outputs.ContentLinkResponse? publishContentLink,

            string? runbookType,

            string? state,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CreationTime = creationTime;
            Description = description;
            Draft = draft;
            Etag = etag;
            Id = id;
            JobCount = jobCount;
            LastModifiedBy = lastModifiedBy;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            LogActivityTrace = logActivityTrace;
            LogProgress = logProgress;
            LogVerbose = logVerbose;
            Name = name;
            OutputTypes = outputTypes;
            Parameters = parameters;
            ProvisioningState = provisioningState;
            PublishContentLink = publishContentLink;
            RunbookType = runbookType;
            State = state;
            Tags = tags;
            Type = type;
        }
    }
}
