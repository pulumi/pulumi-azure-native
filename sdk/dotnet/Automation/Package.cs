// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation
{
    /// <summary>
    /// Definition of the Package type.
    /// Azure REST API version: 2023-05-15-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:automation:Package")]
    public partial class Package : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("allOf")]
        public Output<Outputs.SystemDataResponse> AllOf { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the contentLink of the Package.
        /// </summary>
        [Output("contentLink")]
        public Output<Outputs.ContentLinkResponse?> ContentLink { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the isGlobal flag of the package.
        /// </summary>
        [Output("default")]
        public Output<bool?> Default { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the error info of the Package.
        /// </summary>
        [Output("error")]
        public Output<Outputs.PackageErrorInfoResponse?> Error { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state of the Package.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the size in bytes of the Package.
        /// </summary>
        [Output("sizeInBytes")]
        public Output<double?> SizeInBytes { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the version of the Package.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Package resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Package(string name, PackageArgs args, CustomResourceOptions? options = null)
            : base("azure-native:automation:Package", name, args ?? new PackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Package(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:automation:Package", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20230515preview:Package" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Package resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Package Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Package(name, id, options);
        }
    }

    public sealed class PackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
        /// </summary>
        [Input("allOf")]
        public Input<Inputs.TrackedResourceArgs>? AllOf { get; set; }

        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the package content link.
        /// </summary>
        [Input("contentLink", required: true)]
        public Input<Inputs.ContentLinkArgs> ContentLink { get; set; } = null!;

        /// <summary>
        /// The name of Package.
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Runtime Environment.
        /// </summary>
        [Input("runtimeEnvironmentName", required: true)]
        public Input<string> RuntimeEnvironmentName { get; set; } = null!;

        public PackageArgs()
        {
        }
        public static new PackageArgs Empty => new PackageArgs();
    }
}
