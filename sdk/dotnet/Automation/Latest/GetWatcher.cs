// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Automation.Latest
{
    public static class GetWatcher
    {
        public static Task<GetWatcherResult> InvokeAsync(GetWatcherArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWatcherResult>("azure-nextgen:automation/latest:getWatcher", args ?? new GetWatcherArgs(), options.WithVersion());
    }


    public sealed class GetWatcherArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The watcher name.
        /// </summary>
        [Input("watcherName", required: true)]
        public string WatcherName { get; set; } = null!;

        public GetWatcherArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWatcherResult
    {
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Gets or sets the frequency at which the watcher is invoked.
        /// </summary>
        public readonly int? ExecutionFrequencyInSeconds;
        /// <summary>
        /// Details of the user who last modified the watcher.
        /// </summary>
        public readonly string LastModifiedBy;
        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
        /// </summary>
        public readonly string? ScriptName;
        /// <summary>
        /// Gets or sets the parameters of the script.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ScriptParameters;
        /// <summary>
        /// Gets or sets the name of the hybrid worker group the watcher will run on.
        /// </summary>
        public readonly string? ScriptRunOn;
        /// <summary>
        /// Gets the current status of the watcher.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWatcherResult(
            string creationTime,

            string? description,

            string? etag,

            int? executionFrequencyInSeconds,

            string lastModifiedBy,

            string lastModifiedTime,

            string? location,

            string name,

            string? scriptName,

            ImmutableDictionary<string, string>? scriptParameters,

            string? scriptRunOn,

            string status,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CreationTime = creationTime;
            Description = description;
            Etag = etag;
            ExecutionFrequencyInSeconds = executionFrequencyInSeconds;
            LastModifiedBy = lastModifiedBy;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            Name = name;
            ScriptName = scriptName;
            ScriptParameters = scriptParameters;
            ScriptRunOn = scriptRunOn;
            Status = status;
            Tags = tags;
            Type = type;
        }
    }
}
