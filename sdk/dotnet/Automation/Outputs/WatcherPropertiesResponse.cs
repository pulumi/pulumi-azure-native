// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Automation.Outputs
{

    [OutputType]
    public sealed class WatcherPropertiesResponse
    {
        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Gets or sets the frequency at which the watcher is invoked.
        /// </summary>
        public readonly int? ExecutionFrequencyInSeconds;
        /// <summary>
        /// Details of the user who last modified the watcher.
        /// </summary>
        public readonly string LastModifiedBy;
        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
        /// </summary>
        public readonly string? ScriptName;
        /// <summary>
        /// Gets or sets the parameters of the script.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ScriptParameters;
        /// <summary>
        /// Gets or sets the name of the hybrid worker group the watcher will run on.
        /// </summary>
        public readonly string? ScriptRunOn;
        /// <summary>
        /// Gets the current status of the watcher.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private WatcherPropertiesResponse(
            string creationTime,

            string? description,

            int? executionFrequencyInSeconds,

            string lastModifiedBy,

            string lastModifiedTime,

            string? scriptName,

            ImmutableDictionary<string, string>? scriptParameters,

            string? scriptRunOn,

            string status)
        {
            CreationTime = creationTime;
            Description = description;
            ExecutionFrequencyInSeconds = executionFrequencyInSeconds;
            LastModifiedBy = lastModifiedBy;
            LastModifiedTime = lastModifiedTime;
            ScriptName = scriptName;
            ScriptParameters = scriptParameters;
            ScriptRunOn = scriptRunOn;
            Status = status;
        }
    }
}
