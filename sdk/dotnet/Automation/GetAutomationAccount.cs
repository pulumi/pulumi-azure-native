// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation
{
    public static class GetAutomationAccount
    {
        /// <summary>
        /// Get information about an Automation Account.
        /// Azure REST API version: 2022-08-08.
        /// 
        /// Other available API versions: 2023-05-15-preview, 2023-11-01.
        /// </summary>
        public static Task<GetAutomationAccountResult> InvokeAsync(GetAutomationAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutomationAccountResult>("azure-native:automation:getAutomationAccount", args ?? new GetAutomationAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an Automation Account.
        /// Azure REST API version: 2022-08-08.
        /// 
        /// Other available API versions: 2023-05-15-preview, 2023-11-01.
        /// </summary>
        public static Output<GetAutomationAccountResult> Invoke(GetAutomationAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutomationAccountResult>("azure-native:automation:getAutomationAccount", args ?? new GetAutomationAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutomationAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public string AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAutomationAccountArgs()
        {
        }
        public static new GetAutomationAccountArgs Empty => new GetAutomationAccountArgs();
    }

    public sealed class GetAutomationAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAutomationAccountInvokeArgs()
        {
        }
        public static new GetAutomationAccountInvokeArgs Empty => new GetAutomationAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutomationAccountResult
    {
        /// <summary>
        /// URL of automation hybrid service which is used for hybrid worker on-boarding.
        /// </summary>
        public readonly string? AutomationHybridServiceUrl;
        /// <summary>
        /// Gets the creation time.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicates whether requests using non-AAD authentication are blocked
        /// </summary>
        public readonly bool? DisableLocalAuth;
        /// <summary>
        /// Encryption properties for the automation account
        /// </summary>
        public readonly Outputs.EncryptionPropertiesResponse? Encryption;
        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource Id for the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity for the resource.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// Gets or sets the last modified by.
        /// </summary>
        public readonly string? LastModifiedBy;
        /// <summary>
        /// Gets the last modified time.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// The Azure Region where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of Automation operations supported by the Automation resource provider.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet
        /// </summary>
        public readonly bool? PublicNetworkAccess;
        /// <summary>
        /// Gets or sets the SKU of account.
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Gets status of account.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Resource system metadata.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAutomationAccountResult(
            string? automationHybridServiceUrl,

            string creationTime,

            string? description,

            bool? disableLocalAuth,

            Outputs.EncryptionPropertiesResponse? encryption,

            string? etag,

            string id,

            Outputs.IdentityResponse? identity,

            string? lastModifiedBy,

            string lastModifiedTime,

            string? location,

            string name,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            bool? publicNetworkAccess,

            Outputs.SkuResponse? sku,

            string state,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AutomationHybridServiceUrl = automationHybridServiceUrl;
            CreationTime = creationTime;
            Description = description;
            DisableLocalAuth = disableLocalAuth;
            Encryption = encryption;
            Etag = etag;
            Id = id;
            Identity = identity;
            LastModifiedBy = lastModifiedBy;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            Name = name;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            Sku = sku;
            State = state;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
