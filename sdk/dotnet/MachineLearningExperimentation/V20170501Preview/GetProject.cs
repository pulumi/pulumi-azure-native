// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningExperimentation.V20170501Preview
{
    public static class GetProject
    {
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("azure-nextgen:machinelearningexperimentation/v20170501preview:getProject", args ?? new GetProjectArgs(), options.WithVersion());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the machine learning team account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the machine learning project under a team account workspace.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the machine learning team account belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the machine learning team account workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetProjectArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The immutable id of the team account which contains this project.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The creation date of the project in ISO8601 format.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The description of this project.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The friendly name for this project.
        /// </summary>
        public readonly string FriendlyName;
        /// <summary>
        /// The reference to git repo for this project.
        /// </summary>
        public readonly string? Gitrepo;
        /// <summary>
        /// The location of the resource. This cannot be changed after the resource is created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The immutable id of this project.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The current deployment state of project resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The immutable id of the workspace which contains this project.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetProjectResult(
            string accountId,

            string creationDate,

            string? description,

            string friendlyName,

            string? gitrepo,

            string location,

            string name,

            string projectId,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            string type,

            string workspaceId)
        {
            AccountId = accountId;
            CreationDate = creationDate;
            Description = description;
            FriendlyName = friendlyName;
            Gitrepo = gitrepo;
            Location = location;
            Name = name;
            ProjectId = projectId;
            ProvisioningState = provisioningState;
            Tags = tags;
            Type = type;
            WorkspaceId = workspaceId;
        }
    }
}
