// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearningExperimentation.V20170501Preview
{
    public static class GetAccount
    {
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("azure-nextgen:machinelearningexperimentation/v20170501preview:getAccount", args ?? new GetAccountArgs(), options.WithVersion());
    }


    public sealed class GetAccountArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the machine learning team account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the machine learning team account belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccountArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The immutable id associated with this team account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The creation date of the machine learning team account in ISO8601 format.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The description of this workspace.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The uri for this machine learning team account.
        /// </summary>
        public readonly string DiscoveryUri;
        /// <summary>
        /// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// The fully qualified arm id of the user key vault.
        /// </summary>
        public readonly string KeyVaultId;
        /// <summary>
        /// The location of the resource. This cannot be changed after the resource is created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current deployment state of team account resource. The provisioningState is to indicate states for resource provisioning.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The no of users/seats who can access this team account. This property defines the charge on the team account.
        /// </summary>
        public readonly string? Seats;
        /// <summary>
        /// The properties of the storage account for the machine learning team account.
        /// </summary>
        public readonly Outputs.StorageAccountPropertiesResponse StorageAccount;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The fully qualified arm id of the vso account to be used for this team account.
        /// </summary>
        public readonly string VsoAccountId;

        [OutputConstructor]
        private GetAccountResult(
            string accountId,

            string creationDate,

            string? description,

            string discoveryUri,

            string? friendlyName,

            string keyVaultId,

            string location,

            string name,

            string provisioningState,

            string? seats,

            Outputs.StorageAccountPropertiesResponse storageAccount,

            ImmutableDictionary<string, string>? tags,

            string type,

            string vsoAccountId)
        {
            AccountId = accountId;
            CreationDate = creationDate;
            Description = description;
            DiscoveryUri = discoveryUri;
            FriendlyName = friendlyName;
            KeyVaultId = keyVaultId;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Seats = seats;
            StorageAccount = storageAccount;
            Tags = tags;
            Type = type;
            VsoAccountId = vsoAccountId;
        }
    }
}
