// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataBoxEdge.Inputs
{

    /// <summary>
    /// The storage account credential properties.
    /// </summary>
    public sealed class StorageAccountCredentialPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Encrypted storage key.
        /// </summary>
        [Input("accountKey")]
        public Input<Inputs.AsymmetricEncryptedSecretResponseArgs>? AccountKey { get; set; }

        /// <summary>
        /// Type of storage accessed on the storage account.
        /// </summary>
        [Input("accountType", required: true)]
        public Input<string> AccountType { get; set; } = null!;

        /// <summary>
        /// Alias for the storage account.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        /// <summary>
        /// Blob end point for private clouds.
        /// </summary>
        [Input("blobDomainName")]
        public Input<string>? BlobDomainName { get; set; }

        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        [Input("connectionString")]
        public Input<string>? ConnectionString { get; set; }

        /// <summary>
        /// Signifies whether SSL needs to be enabled or not.
        /// </summary>
        [Input("sslStatus", required: true)]
        public Input<string> SslStatus { get; set; } = null!;

        /// <summary>
        /// Id of the storage account.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        /// <summary>
        /// Username for the storage account.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public StorageAccountCredentialPropertiesResponseArgs()
        {
        }
    }
}
