// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataBoxEdge.Latest
{
    public static class GetShare
    {
        public static Task<GetShareResult> InvokeAsync(GetShareArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetShareResult>("azure-nextgen:databoxedge/latest:getShare", args ?? new GetShareArgs(), options.WithVersion());
    }


    public sealed class GetShareArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The share name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetShareArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetShareResult
    {
        /// <summary>
        /// Access protocol to be used by the share.
        /// </summary>
        public readonly string AccessProtocol;
        /// <summary>
        /// Azure container mapping for the share.
        /// </summary>
        public readonly Outputs.AzureContainerInfoResponse? AzureContainerInfo;
        /// <summary>
        /// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
        /// </summary>
        public readonly ImmutableArray<Outputs.ClientAccessRightResponse> ClientAccessRights;
        /// <summary>
        /// Data policy of the share.
        /// </summary>
        public readonly string? DataPolicy;
        /// <summary>
        /// Description for the share.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Current monitoring status of the share.
        /// </summary>
        public readonly string MonitoringStatus;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Details of the refresh job on this share.
        /// </summary>
        public readonly Outputs.RefreshDetailsResponse? RefreshDetails;
        /// <summary>
        /// Share mount point to the role.
        /// </summary>
        public readonly ImmutableArray<Outputs.MountPointMapResponse> ShareMappings;
        /// <summary>
        /// Current status of the share.
        /// </summary>
        public readonly string ShareStatus;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Mapping of users and corresponding access rights on the share (required for SMB protocol).
        /// </summary>
        public readonly ImmutableArray<Outputs.UserAccessRightResponse> UserAccessRights;

        [OutputConstructor]
        private GetShareResult(
            string accessProtocol,

            Outputs.AzureContainerInfoResponse? azureContainerInfo,

            ImmutableArray<Outputs.ClientAccessRightResponse> clientAccessRights,

            string? dataPolicy,

            string? description,

            string monitoringStatus,

            string name,

            Outputs.RefreshDetailsResponse? refreshDetails,

            ImmutableArray<Outputs.MountPointMapResponse> shareMappings,

            string shareStatus,

            string type,

            ImmutableArray<Outputs.UserAccessRightResponse> userAccessRights)
        {
            AccessProtocol = accessProtocol;
            AzureContainerInfo = azureContainerInfo;
            ClientAccessRights = clientAccessRights;
            DataPolicy = dataPolicy;
            Description = description;
            MonitoringStatus = monitoringStatus;
            Name = name;
            RefreshDetails = refreshDetails;
            ShareMappings = shareMappings;
            ShareStatus = shareStatus;
            Type = type;
            UserAccessRights = userAccessRights;
        }
    }
}
