// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20210201Preview
{
    public static class GetDeviceExtendedInformation
    {
        /// <summary>
        /// The extended Info of the Data Box Edge/Gateway device.
        /// </summary>
        public static Task<GetDeviceExtendedInformationResult> InvokeAsync(GetDeviceExtendedInformationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeviceExtendedInformationResult>("azure-native:databoxedge/v20210201preview:getDeviceExtendedInformation", args ?? new GetDeviceExtendedInformationArgs(), options.WithDefaults());

        /// <summary>
        /// The extended Info of the Data Box Edge/Gateway device.
        /// </summary>
        public static Output<GetDeviceExtendedInformationResult> Invoke(GetDeviceExtendedInformationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeviceExtendedInformationResult>("azure-native:databoxedge/v20210201preview:getDeviceExtendedInformation", args ?? new GetDeviceExtendedInformationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceExtendedInformationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDeviceExtendedInformationArgs()
        {
        }
        public static new GetDeviceExtendedInformationArgs Empty => new GetDeviceExtendedInformationArgs();
    }

    public sealed class GetDeviceExtendedInformationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetDeviceExtendedInformationInvokeArgs()
        {
        }
        public static new GetDeviceExtendedInformationInvokeArgs Empty => new GetDeviceExtendedInformationInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeviceExtendedInformationResult
    {
        /// <summary>
        /// The name of Channel Integrity Key stored in the Client Key Vault
        /// </summary>
        public readonly string? ChannelIntegrityKeyName;
        /// <summary>
        /// The version of Channel Integrity Key stored in the Client Key Vault
        /// </summary>
        public readonly string? ChannelIntegrityKeyVersion;
        /// <summary>
        /// The Key Vault ARM Id for client secrets
        /// </summary>
        public readonly string? ClientSecretStoreId;
        /// <summary>
        /// The url to access the Client Key Vault
        /// </summary>
        public readonly string? ClientSecretStoreUrl;
        /// <summary>
        /// Device secrets, will be returned only with ODataFilter $expand=deviceSecrets
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SecretResponse> DeviceSecrets;
        /// <summary>
        /// The public part of the encryption certificate. Client uses this to encrypt any secret.
        /// </summary>
        public readonly string? EncryptionKey;
        /// <summary>
        /// The digital signature of encrypted certificate.
        /// </summary>
        public readonly string? EncryptionKeyThumbprint;
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key vault sync status
        /// </summary>
        public readonly string? KeyVaultSyncStatus;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Resource ID of the Resource.
        /// </summary>
        public readonly string ResourceKey;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDeviceExtendedInformationResult(
            string? channelIntegrityKeyName,

            string? channelIntegrityKeyVersion,

            string? clientSecretStoreId,

            string? clientSecretStoreUrl,

            ImmutableDictionary<string, Outputs.SecretResponse> deviceSecrets,

            string? encryptionKey,

            string? encryptionKeyThumbprint,

            string id,

            string? keyVaultSyncStatus,

            string name,

            string resourceKey,

            string type)
        {
            ChannelIntegrityKeyName = channelIntegrityKeyName;
            ChannelIntegrityKeyVersion = channelIntegrityKeyVersion;
            ClientSecretStoreId = clientSecretStoreId;
            ClientSecretStoreUrl = clientSecretStoreUrl;
            DeviceSecrets = deviceSecrets;
            EncryptionKey = encryptionKey;
            EncryptionKeyThumbprint = encryptionKeyThumbprint;
            Id = id;
            KeyVaultSyncStatus = keyVaultSyncStatus;
            Name = name;
            ResourceKey = resourceKey;
            Type = type;
        }
    }
}
