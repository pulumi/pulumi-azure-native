// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20220301
{
    public static class GetPeriodicTimerEventTrigger
    {
        /// <summary>
        /// Get a specific trigger by name.
        /// </summary>
        public static Task<GetPeriodicTimerEventTriggerResult> InvokeAsync(GetPeriodicTimerEventTriggerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeriodicTimerEventTriggerResult>("azure-native:databoxedge/v20220301:getPeriodicTimerEventTrigger", args ?? new GetPeriodicTimerEventTriggerArgs(), options.WithDefaults());

        /// <summary>
        /// Get a specific trigger by name.
        /// </summary>
        public static Output<GetPeriodicTimerEventTriggerResult> Invoke(GetPeriodicTimerEventTriggerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeriodicTimerEventTriggerResult>("azure-native:databoxedge/v20220301:getPeriodicTimerEventTrigger", args ?? new GetPeriodicTimerEventTriggerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeriodicTimerEventTriggerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The trigger name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPeriodicTimerEventTriggerArgs()
        {
        }
        public static new GetPeriodicTimerEventTriggerArgs Empty => new GetPeriodicTimerEventTriggerArgs();
    }

    public sealed class GetPeriodicTimerEventTriggerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The trigger name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPeriodicTimerEventTriggerInvokeArgs()
        {
        }
        public static new GetPeriodicTimerEventTriggerInvokeArgs Empty => new GetPeriodicTimerEventTriggerInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeriodicTimerEventTriggerResult
    {
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Trigger Kind.
        /// Expected value is 'PeriodicTimerEvent'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Periodic timer trigger properties.
        /// </summary>
        public readonly Outputs.PeriodicTimerPropertiesResponse Properties;
        /// <summary>
        /// Metadata pertaining to creation and last modification of Trigger
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPeriodicTimerEventTriggerResult(
            string id,

            string kind,

            string name,

            Outputs.PeriodicTimerPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
