// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20220301
{
    public static class GetKubernetesRole
    {
        /// <summary>
        /// Gets a specific role by name.
        /// </summary>
        public static Task<GetKubernetesRoleResult> InvokeAsync(GetKubernetesRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesRoleResult>("azure-native:databoxedge/v20220301:getKubernetesRole", args ?? new GetKubernetesRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a specific role by name.
        /// </summary>
        public static Output<GetKubernetesRoleResult> Invoke(GetKubernetesRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesRoleResult>("azure-native:databoxedge/v20220301:getKubernetesRole", args ?? new GetKubernetesRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetKubernetesRoleArgs()
        {
        }
        public static new GetKubernetesRoleArgs Empty => new GetKubernetesRoleArgs();
    }

    public sealed class GetKubernetesRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetKubernetesRoleInvokeArgs()
        {
        }
        public static new GetKubernetesRoleInvokeArgs Empty => new GetKubernetesRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesRoleResult
    {
        /// <summary>
        /// Host OS supported by the Kubernetes role.
        /// </summary>
        public readonly string HostPlatform;
        /// <summary>
        /// Platform where the runtime is hosted.
        /// </summary>
        public readonly string HostPlatformType;
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Role type.
        /// Expected value is 'Kubernetes'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Kubernetes cluster configuration
        /// </summary>
        public readonly Outputs.KubernetesClusterInfoResponse KubernetesClusterInfo;
        /// <summary>
        /// Kubernetes role resources
        /// </summary>
        public readonly Outputs.KubernetesRoleResourcesResponse KubernetesRoleResources;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of Kubernetes deployment
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Role status.
        /// </summary>
        public readonly string RoleStatus;
        /// <summary>
        /// Metadata pertaining to creation and last modification of Role
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKubernetesRoleResult(
            string hostPlatform,

            string hostPlatformType,

            string id,

            string kind,

            Outputs.KubernetesClusterInfoResponse kubernetesClusterInfo,

            Outputs.KubernetesRoleResourcesResponse kubernetesRoleResources,

            string name,

            string provisioningState,

            string roleStatus,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            HostPlatform = hostPlatform;
            HostPlatformType = hostPlatformType;
            Id = id;
            Kind = kind;
            KubernetesClusterInfo = kubernetesClusterInfo;
            KubernetesRoleResources = kubernetesRoleResources;
            Name = name;
            ProvisioningState = provisioningState;
            RoleStatus = roleStatus;
            SystemData = systemData;
            Type = type;
        }
    }
}
