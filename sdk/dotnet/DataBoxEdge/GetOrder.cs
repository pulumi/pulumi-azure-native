// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge
{
    public static class GetOrder
    {
        /// <summary>
        /// The order details.
        /// API Version: 2022-03-01.
        /// </summary>
        public static Task<GetOrderResult> InvokeAsync(GetOrderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrderResult>("azure-native:databoxedge:getOrder", args ?? new GetOrderArgs(), options.WithDefaults());

        /// <summary>
        /// The order details.
        /// API Version: 2022-03-01.
        /// </summary>
        public static Output<GetOrderResult> Invoke(GetOrderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrderResult>("azure-native:databoxedge:getOrder", args ?? new GetOrderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOrderArgs()
        {
        }
        public static new GetOrderArgs Empty => new GetOrderArgs();
    }

    public sealed class GetOrderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetOrderInvokeArgs()
        {
        }
        public static new GetOrderInvokeArgs Empty => new GetOrderInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrderResult
    {
        /// <summary>
        /// The contact details.
        /// </summary>
        public readonly Outputs.ContactDetailsResponse ContactInformation;
        /// <summary>
        /// Current status of the order.
        /// </summary>
        public readonly Outputs.OrderStatusResponse CurrentStatus;
        /// <summary>
        /// Tracking information for the package delivered to the customer whether it has an original or a replacement device.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrackingInfoResponse> DeliveryTrackingInfo;
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// It specify the order api version.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of status changes in the order.
        /// </summary>
        public readonly ImmutableArray<Outputs.OrderStatusResponse> OrderHistory;
        /// <summary>
        /// It specify the order resource id.
        /// </summary>
        public readonly string OrderId;
        /// <summary>
        /// Tracking information for the package returned from the customer whether it has an original or a replacement device.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrackingInfoResponse> ReturnTrackingInfo;
        /// <summary>
        /// Serial number of the device.
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// ShipmentType of the order
        /// </summary>
        public readonly string? ShipmentType;
        /// <summary>
        /// The shipping address.
        /// </summary>
        public readonly Outputs.AddressResponse? ShippingAddress;
        /// <summary>
        /// Metadata pertaining to creation and last modification of Order
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOrderResult(
            Outputs.ContactDetailsResponse contactInformation,

            Outputs.OrderStatusResponse currentStatus,

            ImmutableArray<Outputs.TrackingInfoResponse> deliveryTrackingInfo,

            string id,

            string kind,

            string name,

            ImmutableArray<Outputs.OrderStatusResponse> orderHistory,

            string orderId,

            ImmutableArray<Outputs.TrackingInfoResponse> returnTrackingInfo,

            string serialNumber,

            string? shipmentType,

            Outputs.AddressResponse? shippingAddress,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ContactInformation = contactInformation;
            CurrentStatus = currentStatus;
            DeliveryTrackingInfo = deliveryTrackingInfo;
            Id = id;
            Kind = kind;
            Name = name;
            OrderHistory = orderHistory;
            OrderId = orderId;
            ReturnTrackingInfo = returnTrackingInfo;
            SerialNumber = serialNumber;
            ShipmentType = shipmentType;
            ShippingAddress = shippingAddress;
            SystemData = systemData;
            Type = type;
        }
    }
}
