// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20230701
{
    /// <summary>
    /// IoT Addon.
    /// </summary>
    [AzureNativeResourceType("azure-native:databoxedge/v20230701:IoTAddon")]
    public partial class IoTAddon : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Host OS supported by the IoT addon.
        /// </summary>
        [Output("hostPlatform")]
        public Output<string> HostPlatform { get; private set; } = null!;

        /// <summary>
        /// Platform where the runtime is hosted.
        /// </summary>
        [Output("hostPlatformType")]
        public Output<string> HostPlatformType { get; private set; } = null!;

        /// <summary>
        /// IoT device metadata to which appliance needs to be connected.
        /// </summary>
        [Output("ioTDeviceDetails")]
        public Output<Outputs.IoTDeviceInfoResponse> IoTDeviceDetails { get; private set; } = null!;

        /// <summary>
        /// IoT edge device to which the IoT Addon needs to be configured.
        /// </summary>
        [Output("ioTEdgeDeviceDetails")]
        public Output<Outputs.IoTDeviceInfoResponse> IoTEdgeDeviceDetails { get; private set; } = null!;

        /// <summary>
        /// Addon type.
        /// Expected value is 'IotEdge'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The object name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Addon Provisioning State
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of Addon
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Version of IoT running on the appliance.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a IoTAddon resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IoTAddon(string name, IoTAddonArgs args, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20230701:IoTAddon", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private IoTAddon(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20230701:IoTAddon", name, null, MakeResourceOptions(options, id))
        {
        }

        private static IoTAddonArgs MakeArgs(IoTAddonArgs args)
        {
            args ??= new IoTAddonArgs();
            args.Kind = "IotEdge";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200901:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200901preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20201201:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220301:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220401preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20221201preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20230101preview:IoTAddon" },
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20231201:IoTAddon" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IoTAddon resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IoTAddon Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IoTAddon(name, id, options);
        }
    }

    public sealed class IoTAddonArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The addon name.
        /// </summary>
        [Input("addonName")]
        public Input<string>? AddonName { get; set; }

        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// IoT device metadata to which appliance needs to be connected.
        /// </summary>
        [Input("ioTDeviceDetails", required: true)]
        public Input<Inputs.IoTDeviceInfoArgs> IoTDeviceDetails { get; set; } = null!;

        /// <summary>
        /// IoT edge device to which the IoT Addon needs to be configured.
        /// </summary>
        [Input("ioTEdgeDeviceDetails", required: true)]
        public Input<Inputs.IoTDeviceInfoArgs> IoTEdgeDeviceDetails { get; set; } = null!;

        /// <summary>
        /// Addon type.
        /// Expected value is 'IotEdge'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public IoTAddonArgs()
        {
        }
        public static new IoTAddonArgs Empty => new IoTAddonArgs();
    }
}
