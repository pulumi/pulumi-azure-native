// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataBoxEdge.V20190701.Outputs
{

    [OutputType]
    public sealed class StorageAccountCredentialPropertiesResponseResult
    {
        /// <summary>
        /// Encrypted storage key.
        /// </summary>
        public readonly Outputs.AsymmetricEncryptedSecretResponseResult? AccountKey;
        /// <summary>
        /// Type of storage accessed on the storage account.
        /// </summary>
        public readonly string AccountType;
        /// <summary>
        /// Alias for the storage account.
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// Blob end point for private clouds.
        /// </summary>
        public readonly string? BlobDomainName;
        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        public readonly string? ConnectionString;
        /// <summary>
        /// Signifies whether SSL needs to be enabled or not.
        /// </summary>
        public readonly string SslStatus;
        /// <summary>
        /// Id of the storage account.
        /// </summary>
        public readonly string? StorageAccountId;
        /// <summary>
        /// Username for the storage account.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private StorageAccountCredentialPropertiesResponseResult(
            Outputs.AsymmetricEncryptedSecretResponseResult? accountKey,

            string accountType,

            string alias,

            string? blobDomainName,

            string? connectionString,

            string sslStatus,

            string? storageAccountId,

            string? userName)
        {
            AccountKey = accountKey;
            AccountType = accountType;
            Alias = alias;
            BlobDomainName = blobDomainName;
            ConnectionString = connectionString;
            SslStatus = sslStatus;
            StorageAccountId = storageAccountId;
            UserName = userName;
        }
    }
}
