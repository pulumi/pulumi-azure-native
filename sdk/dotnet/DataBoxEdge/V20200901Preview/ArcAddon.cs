// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20200901Preview
{
    /// <summary>
    /// Arc Addon.
    /// </summary>
    [AzureNativeResourceType("azure-native:databoxedge/v20200901preview:ArcAddon")]
    public partial class ArcAddon : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Host OS supported by the Arc addon.
        /// </summary>
        [Output("hostPlatform")]
        public Output<string> HostPlatform { get; private set; } = null!;

        /// <summary>
        /// Platform where the runtime is hosted.
        /// </summary>
        [Output("hostPlatformType")]
        public Output<string> HostPlatformType { get; private set; } = null!;

        /// <summary>
        /// Addon type.
        /// Expected value is 'ArcForKubernetes'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The object name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Addon Provisioning State
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Arc resource group name
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Arc resource location
        /// </summary>
        [Output("resourceLocation")]
        public Output<string> ResourceLocation { get; private set; } = null!;

        /// <summary>
        /// Arc resource Name
        /// </summary>
        [Output("resourceName")]
        public Output<string> ResourceName { get; private set; } = null!;

        /// <summary>
        /// Arc resource subscription Id
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Addon type
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Arc resource version
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ArcAddon resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ArcAddon(string name, ArcAddonArgs args, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20200901preview:ArcAddon", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private ArcAddon(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20200901preview:ArcAddon", name, null, MakeResourceOptions(options, id))
        {
        }

        private static ArcAddonArgs MakeArgs(ArcAddonArgs args)
        {
            args ??= new ArcAddonArgs();
            args.Kind = "ArcForKubernetes";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200901:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20201201:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201preview:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601preview:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220301:ArcAddon"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220401preview:ArcAddon"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ArcAddon resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ArcAddon Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ArcAddon(name, id, options);
        }
    }

    public sealed class ArcAddonArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The addon name.
        /// </summary>
        [Input("addonName")]
        public Input<string>? AddonName { get; set; }

        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// Addon type.
        /// Expected value is 'ArcForKubernetes'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Arc resource location
        /// </summary>
        [Input("resourceLocation", required: true)]
        public Input<string> ResourceLocation { get; set; } = null!;

        /// <summary>
        /// Arc resource Name
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        /// <summary>
        /// Arc resource subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public ArcAddonArgs()
        {
        }
        public static new ArcAddonArgs Empty => new ArcAddonArgs();
    }
}
