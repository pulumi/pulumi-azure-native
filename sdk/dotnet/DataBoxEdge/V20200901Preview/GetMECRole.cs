// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20200901Preview
{
    public static class GetMECRole
    {
        /// <summary>
        /// MEC role.
        /// </summary>
        public static Task<GetMECRoleResult> InvokeAsync(GetMECRoleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMECRoleResult>("azure-native:databoxedge/v20200901preview:getMECRole", args ?? new GetMECRoleArgs(), options.WithDefaults());

        /// <summary>
        /// MEC role.
        /// </summary>
        public static Output<GetMECRoleResult> Invoke(GetMECRoleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMECRoleResult>("azure-native:databoxedge/v20200901preview:getMECRole", args ?? new GetMECRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMECRoleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMECRoleArgs()
        {
        }
    }

    public sealed class GetMECRoleInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The role name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMECRoleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMECRoleResult
    {
        /// <summary>
        /// Activation key of the MEC.
        /// </summary>
        public readonly Outputs.AsymmetricEncryptedSecretResponse? ConnectionString;
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Role type.
        /// Expected value is 'MEC'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Role status.
        /// </summary>
        public readonly string RoleStatus;
        /// <summary>
        /// Role configured on ASE resource
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMECRoleResult(
            Outputs.AsymmetricEncryptedSecretResponse? connectionString,

            string id,

            string kind,

            string name,

            string roleStatus,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            ConnectionString = connectionString;
            Id = id;
            Kind = kind;
            Name = name;
            RoleStatus = roleStatus;
            SystemData = systemData;
            Type = type;
        }
    }
}
