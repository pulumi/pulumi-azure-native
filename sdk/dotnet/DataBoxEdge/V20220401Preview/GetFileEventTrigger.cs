// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20220401Preview
{
    public static class GetFileEventTrigger
    {
        /// <summary>
        /// Trigger details.
        /// </summary>
        public static Task<GetFileEventTriggerResult> InvokeAsync(GetFileEventTriggerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFileEventTriggerResult>("azure-native:databoxedge/v20220401preview:getFileEventTrigger", args ?? new GetFileEventTriggerArgs(), options.WithDefaults());

        /// <summary>
        /// Trigger details.
        /// </summary>
        public static Output<GetFileEventTriggerResult> Invoke(GetFileEventTriggerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFileEventTriggerResult>("azure-native:databoxedge/v20220401preview:getFileEventTrigger", args ?? new GetFileEventTriggerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFileEventTriggerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The trigger name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFileEventTriggerArgs()
        {
        }
        public static new GetFileEventTriggerArgs Empty => new GetFileEventTriggerArgs();
    }

    public sealed class GetFileEventTriggerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The trigger name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFileEventTriggerInvokeArgs()
        {
        }
        public static new GetFileEventTriggerInvokeArgs Empty => new GetFileEventTriggerInvokeArgs();
    }


    [OutputType]
    public sealed class GetFileEventTriggerResult
    {
        /// <summary>
        /// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
        /// </summary>
        public readonly string? CustomContextTag;
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Trigger Kind.
        /// Expected value is 'FileEvent'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The object name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Role sink info.
        /// </summary>
        public readonly Outputs.RoleSinkInfoResponse SinkInfo;
        /// <summary>
        /// File event source details.
        /// </summary>
        public readonly Outputs.FileSourceInfoResponse SourceInfo;
        /// <summary>
        /// Metadata pertaining to creation and last modification of Trigger
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFileEventTriggerResult(
            string? customContextTag,

            string id,

            string kind,

            string name,

            Outputs.RoleSinkInfoResponse sinkInfo,

            Outputs.FileSourceInfoResponse sourceInfo,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            CustomContextTag = customContextTag;
            Id = id;
            Kind = kind;
            Name = name;
            SinkInfo = sinkInfo;
            SourceInfo = sourceInfo;
            SystemData = systemData;
            Type = type;
        }
    }
}
