// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BillingBenefits.Inputs
{

    /// <summary>
    /// Discount type properties including product family name, product id, and sku id.
    /// </summary>
    public sealed class DiscountTypeProductSkuArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required, one of supported values.
        /// </summary>
        [Input("applyDiscountOn", required: true)]
        public InputUnion<string, Pulumi.AzureNative.BillingBenefits.ApplyDiscountOn> ApplyDiscountOn { get; set; } = null!;

        [Input("conditions")]
        private InputList<Inputs.ConditionsItemArgs>? _conditions;

        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        public InputList<Inputs.ConditionsItemArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.ConditionsItemArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values are Stackable and BestOf.
        /// </summary>
        [Input("discountCombinationRule")]
        public InputUnion<string, Pulumi.AzureNative.BillingBenefits.DiscountCombinationRule>? DiscountCombinationRule { get; set; }

        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        [Input("discountPercentage")]
        public Input<double>? DiscountPercentage { get; set; }

        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// Expected value is 'Sku'.
        /// </summary>
        [Input("discountType", required: true)]
        public Input<string> DiscountType { get; set; } = null!;

        /// <summary>
        /// Set only in price guarantee scenario.
        /// </summary>
        [Input("priceGuaranteeProperties")]
        public Input<Inputs.PriceGuaranteePropertiesArgs>? PriceGuaranteeProperties { get; set; }

        /// <summary>
        /// Product family for which the discount is given. Validation: Optional
        /// </summary>
        [Input("productFamilyName")]
        public Input<string>? ProductFamilyName { get; set; }

        /// <summary>
        /// Product ID for which the discount is given. Validation: Optional. No specific format, example: DZH318Z09V6F
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// ResourceSku for the given discount. Validation: Optional.
        /// </summary>
        [Input("skuId")]
        public Input<string>? SkuId { get; set; }

        public DiscountTypeProductSkuArgs()
        {
        }
        public static new DiscountTypeProductSkuArgs Empty => new DiscountTypeProductSkuArgs();
    }
}
