// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.BillingBenefits
{
    /// <summary>
    /// Resource definition for Discounts.
    /// 
    /// Uses Azure REST API version 2024-11-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-11-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:billingbenefits:Discount")]
    public partial class Discount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of applied scopes supported for discounts.
        /// </summary>
        [Output("appliedScopeType")]
        public Output<string?> AppliedScopeType { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Fully-qualified identifier of the benefit under applicable benefit list.
        /// </summary>
        [Output("benefitResourceId")]
        public Output<string> BenefitResourceId { get; private set; } = null!;

        /// <summary>
        /// Billing account resource id where the discount metadata is present.
        /// </summary>
        [Output("billingAccountResourceId")]
        public Output<string> BillingAccountResourceId { get; private set; } = null!;

        /// <summary>
        /// Billing profile resource id where the discount is scoped to.
        /// </summary>
        [Output("billingProfileResourceId")]
        public Output<string> BillingProfileResourceId { get; private set; } = null!;

        /// <summary>
        /// Customer resource id where the discount is scoped to.
        /// </summary>
        [Output("customerResourceId")]
        public Output<string> CustomerResourceId { get; private set; } = null!;

        /// <summary>
        /// This defines a user friendly display name for the discount.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values.
        /// </summary>
        [Output("entityType")]
        public Output<string> EntityType { get; private set; } = null!;

        /// <summary>
        /// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Managed service identity (system assigned and/or user assigned identities)
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        [Output("managedBy")]
        public Output<string?> ManagedBy { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Plan for the resource.
        /// </summary>
        [Output("plan")]
        public Output<Outputs.PlanResponse?> Plan { get; private set; } = null!;

        /// <summary>
        /// This is the catalog UPN for the product.
        /// </summary>
        [Output("productCode")]
        public Output<string> ProductCode { get; private set; } = null!;

        /// <summary>
        /// The state of the resource. Supported values are Pending, Failed, Succeeded, Canceled.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The resource model definition representing SKU
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Start date of the discount. Value is the date the discount started or will start in the future.
        /// </summary>
        [Output("startAt")]
        public Output<string> StartAt { get; private set; } = null!;

        /// <summary>
        /// Represents the current status of the discount.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount.
        /// </summary>
        [Output("systemId")]
        public Output<string?> SystemId { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Discount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Discount(string name, DiscountArgs args, CustomResourceOptions? options = null)
            : base("azure-native:billingbenefits:Discount", name, args ?? new DiscountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Discount(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:billingbenefits:Discount", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:billingbenefits/v20241101preview:Discount" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Discount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Discount Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Discount(name, id, options);
        }
    }

    public sealed class DiscountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// List of applied scopes supported for discounts.
        /// </summary>
        [Input("appliedScopeType")]
        public InputUnion<string, Pulumi.AzureNative.BillingBenefits.DiscountAppliedScopeType>? AppliedScopeType { get; set; }

        /// <summary>
        /// Name of the discount
        /// </summary>
        [Input("discountName")]
        public Input<string>? DiscountName { get; set; }

        /// <summary>
        /// This defines a user friendly display name for the discount.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values.
        /// </summary>
        [Input("entityType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.BillingBenefits.DiscountEntityType> EntityType { get; set; } = null!;

        /// <summary>
        /// Managed service identity (system assigned and/or user assigned identities)
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        [Input("managedBy")]
        public Input<string>? ManagedBy { get; set; }

        /// <summary>
        /// Plan for the resource.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.PlanArgs>? Plan { get; set; }

        /// <summary>
        /// This is the catalog UPN for the product.
        /// </summary>
        [Input("productCode", required: true)]
        public Input<string> ProductCode { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource model definition representing SKU
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        /// <summary>
        /// Start date of the discount. Value is the date the discount started or will start in the future.
        /// </summary>
        [Input("startAt", required: true)]
        public Input<string> StartAt { get; set; } = null!;

        /// <summary>
        /// This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount.
        /// </summary>
        [Input("systemId")]
        public Input<string>? SystemId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DiscountArgs()
        {
        }
        public static new DiscountArgs Empty => new DiscountArgs();
    }
}
