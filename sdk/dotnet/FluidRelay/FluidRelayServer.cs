// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.FluidRelay
{
    /// <summary>
    /// A FluidRelay Server.
    /// Azure REST API version: 2022-06-01. Prior API version in Azure Native 1.x: 2021-03-12-preview.
    /// 
    /// Other available API versions: 2021-06-15-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:fluidrelay:FluidRelayServer")]
    public partial class FluidRelayServer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// All encryption configuration for a resource.
        /// </summary>
        [Output("encryption")]
        public Output<Outputs.EncryptionPropertiesResponse?> Encryption { get; private set; } = null!;

        /// <summary>
        /// The Fluid Relay Service endpoints for this server.
        /// </summary>
        [Output("fluidRelayEndpoints")]
        public Output<Outputs.FluidRelayEndpointsResponse> FluidRelayEndpoints { get; private set; } = null!;

        /// <summary>
        /// The Fluid tenantId for this server
        /// </summary>
        [Output("frsTenantId")]
        public Output<string> FrsTenantId { get; private set; } = null!;

        /// <summary>
        /// The type of identity used for the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provision states for FluidRelay RP
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Sku of the storage associated with the resource
        /// </summary>
        [Output("storagesku")]
        public Output<string?> Storagesku { get; private set; } = null!;

        /// <summary>
        /// System meta data for this resource, including creation and modification information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FluidRelayServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FluidRelayServer(string name, FluidRelayServerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:fluidrelay:FluidRelayServer", name, args ?? new FluidRelayServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FluidRelayServer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:fluidrelay:FluidRelayServer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20210312preview:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20210615preview:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20210830preview:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20210910preview:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20220215:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20220421:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20220511:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20220526:FluidRelayServer" },
                    new global::Pulumi.Alias { Type = "azure-native:fluidrelay/v20220601:FluidRelayServer" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FluidRelayServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FluidRelayServer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FluidRelayServer(name, id, options);
        }
    }

    public sealed class FluidRelayServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// All encryption configuration for a resource.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionPropertiesArgs>? Encryption { get; set; }

        /// <summary>
        /// The Fluid Relay server resource name.
        /// </summary>
        [Input("fluidRelayServerName")]
        public Input<string>? FluidRelayServerName { get; set; }

        /// <summary>
        /// The type of identity used for the resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Provision states for FluidRelay RP
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.FluidRelay.ProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// The resource group containing the resource.
        /// </summary>
        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        /// <summary>
        /// Sku of the storage associated with the resource
        /// </summary>
        [Input("storagesku")]
        public InputUnion<string, Pulumi.AzureNative.FluidRelay.StorageSKU>? Storagesku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FluidRelayServerArgs()
        {
        }
        public static new FluidRelayServerArgs Empty => new FluidRelayServerArgs();
    }
}
