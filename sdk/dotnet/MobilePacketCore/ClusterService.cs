// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobilePacketCore
{
    /// <summary>
    /// Azure for Operators 5G Core Cluster Service Resource
    /// Azure REST API version: 2023-10-15-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:mobilepacketcore:ClusterService")]
    public partial class ClusterService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster type specific data.  Contents depend on the cluster type
        /// </summary>
        [Output("clusterTypeSpecificData")]
        public Output<Union<Outputs.ClusterServiceAksClusterDataResponse, Outputs.ClusterServiceNexusAksClusterDataResponse>> ClusterTypeSpecificData { get; private set; } = null!;

        /// <summary>
        /// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
        /// </summary>
        [Output("componentParameters")]
        public Output<ImmutableArray<Outputs.QualifiedComponentDeploymentParametersResponse>> ComponentParameters { get; private set; } = null!;

        /// <summary>
        /// Cluster type (Lab or Production)
        /// </summary>
        [Output("deploymentType")]
        public Output<string> DeploymentType { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Operational status
        /// </summary>
        [Output("operationalStatus")]
        public Output<Outputs.OperationalStatusResponse> OperationalStatus { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
        /// </summary>
        [Output("releaseVersion")]
        public Output<string> ReleaseVersion { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterService(string name, ClusterServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mobilepacketcore:ClusterService", name, args ?? new ClusterServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mobilepacketcore:ClusterService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mobilepacketcore/v20231015preview:ClusterService" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ClusterService(name, id, options);
        }
    }

    public sealed class ClusterServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Cluster Service
        /// </summary>
        [Input("clusterServiceName")]
        public Input<string>? ClusterServiceName { get; set; }

        /// <summary>
        /// Cluster type specific data.  Contents depend on the cluster type
        /// </summary>
        [Input("clusterTypeSpecificData", required: true)]
        public InputUnion<Inputs.ClusterServiceAksClusterDataArgs, Inputs.ClusterServiceNexusAksClusterDataArgs> ClusterTypeSpecificData { get; set; } = null!;

        [Input("componentParameters", required: true)]
        private InputList<Inputs.QualifiedComponentDeploymentParametersArgs>? _componentParameters;

        /// <summary>
        /// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
        /// </summary>
        public InputList<Inputs.QualifiedComponentDeploymentParametersArgs> ComponentParameters
        {
            get => _componentParameters ?? (_componentParameters = new InputList<Inputs.QualifiedComponentDeploymentParametersArgs>());
            set => _componentParameters = value;
        }

        /// <summary>
        /// Cluster type (Lab or Production)
        /// </summary>
        [Input("deploymentType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MobilePacketCore.SkuDeploymentType> DeploymentType { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
        /// </summary>
        [Input("releaseVersion", required: true)]
        public Input<string> ReleaseVersion { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ClusterServiceArgs()
        {
        }
        public static new ClusterServiceArgs Empty => new ClusterServiceArgs();
    }
}
