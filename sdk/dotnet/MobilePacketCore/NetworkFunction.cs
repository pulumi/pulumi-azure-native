// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobilePacketCore
{
    /// <summary>
    /// AO5GC Network Function Resource
    /// Azure REST API version: 2023-05-15-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:mobilepacketcore:NetworkFunction")]
    public partial class NetworkFunction : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
        /// </summary>
        [Output("capacity")]
        public Output<int?> Capacity { get; private set; } = null!;

        /// <summary>
        /// User provided deployment notes.  This is used to optionally provide details about the NF deployment
        /// </summary>
        [Output("deploymentNotes")]
        public Output<string?> DeploymentNotes { get; private set; } = null!;

        /// <summary>
        /// Count of infrastructure elements used by this network function (vCPUs, in units of 8)
        /// </summary>
        [Output("infrastructureElementCount")]
        public Output<int> InfrastructureElementCount { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Administrative state of the network function
        /// </summary>
        [Output("networkFunctionAdministrativeState")]
        public Output<string> NetworkFunctionAdministrativeState { get; private set; } = null!;

        /// <summary>
        /// Operational state of the network function
        /// </summary>
        [Output("networkFunctionOperationalStatus")]
        public Output<string> NetworkFunctionOperationalStatus { get; private set; } = null!;

        /// <summary>
        /// Type of network function
        /// </summary>
        [Output("networkFunctionType")]
        public Output<string> NetworkFunctionType { get; private set; } = null!;

        /// <summary>
        /// The status of the last operation.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Provisioned SKU Value.
        /// </summary>
        [Output("sku")]
        public Output<string> Sku { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// User provided description
        /// </summary>
        [Output("userDescription")]
        public Output<string?> UserDescription { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkFunction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkFunction(string name, NetworkFunctionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:mobilepacketcore:NetworkFunction", name, args ?? new NetworkFunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkFunction(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:mobilepacketcore:NetworkFunction", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:mobilepacketcore/v20230515preview:NetworkFunction" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkFunction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkFunction Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkFunction(name, id, options);
        }
    }

    public sealed class NetworkFunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// User provided deployment notes.  This is used to optionally provide details about the NF deployment
        /// </summary>
        [Input("deploymentNotes")]
        public Input<string>? DeploymentNotes { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Administrative state of the network function
        /// </summary>
        [Input("networkFunctionAdministrativeState", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MobilePacketCore.NetworkFunctionAdministrativeState> NetworkFunctionAdministrativeState { get; set; } = null!;

        /// <summary>
        /// The name of the network function
        /// </summary>
        [Input("networkFunctionName")]
        public Input<string>? NetworkFunctionName { get; set; }

        /// <summary>
        /// Type of network function
        /// </summary>
        [Input("networkFunctionType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MobilePacketCore.NetworkFunctionType> NetworkFunctionType { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Provisioned SKU Value.
        /// </summary>
        [Input("sku", required: true)]
        public InputUnion<string, Pulumi.AzureNative.MobilePacketCore.SkuDefinitions> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// User provided description
        /// </summary>
        [Input("userDescription")]
        public Input<string>? UserDescription { get; set; }

        public NetworkFunctionArgs()
        {
        }
        public static new NetworkFunctionArgs Empty => new NetworkFunctionArgs();
    }
}
