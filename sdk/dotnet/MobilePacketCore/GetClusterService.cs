// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MobilePacketCore
{
    public static class GetClusterService
    {
        /// <summary>
        /// Get a ClusterServiceResource
        /// Azure REST API version: 2023-10-15-preview.
        /// </summary>
        public static Task<GetClusterServiceResult> InvokeAsync(GetClusterServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterServiceResult>("azure-native:mobilepacketcore:getClusterService", args ?? new GetClusterServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a ClusterServiceResource
        /// Azure REST API version: 2023-10-15-preview.
        /// </summary>
        public static Output<GetClusterServiceResult> Invoke(GetClusterServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterServiceResult>("azure-native:mobilepacketcore:getClusterService", args ?? new GetClusterServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Cluster Service
        /// </summary>
        [Input("clusterServiceName", required: true)]
        public string ClusterServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClusterServiceArgs()
        {
        }
        public static new GetClusterServiceArgs Empty => new GetClusterServiceArgs();
    }

    public sealed class GetClusterServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Cluster Service
        /// </summary>
        [Input("clusterServiceName", required: true)]
        public Input<string> ClusterServiceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetClusterServiceInvokeArgs()
        {
        }
        public static new GetClusterServiceInvokeArgs Empty => new GetClusterServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterServiceResult
    {
        /// <summary>
        /// Cluster type specific data.  Contents depend on the cluster type
        /// </summary>
        public readonly Union<Outputs.ClusterServiceAksClusterDataResponse, Outputs.ClusterServiceNexusAksClusterDataResponse> ClusterTypeSpecificData;
        /// <summary>
        /// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
        /// </summary>
        public readonly ImmutableArray<Outputs.QualifiedComponentDeploymentParametersResponse> ComponentParameters;
        /// <summary>
        /// Cluster type (Lab or Production)
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Operational status
        /// </summary>
        public readonly Outputs.OperationalStatusResponse OperationalStatus;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
        /// </summary>
        public readonly string ReleaseVersion;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetClusterServiceResult(
            Union<Outputs.ClusterServiceAksClusterDataResponse, Outputs.ClusterServiceNexusAksClusterDataResponse> clusterTypeSpecificData,

            ImmutableArray<Outputs.QualifiedComponentDeploymentParametersResponse> componentParameters,

            string deploymentType,

            string id,

            string location,

            string name,

            Outputs.OperationalStatusResponse operationalStatus,

            string provisioningState,

            string releaseVersion,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ClusterTypeSpecificData = clusterTypeSpecificData;
            ComponentParameters = componentParameters;
            DeploymentType = deploymentType;
            Id = id;
            Location = location;
            Name = name;
            OperationalStatus = operationalStatus;
            ProvisioningState = provisioningState;
            ReleaseVersion = releaseVersion;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
