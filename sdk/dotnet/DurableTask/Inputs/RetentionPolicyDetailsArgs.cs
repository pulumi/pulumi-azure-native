// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DurableTask.Inputs
{

    /// <summary>
    /// The properties of a retention policy
    /// </summary>
    public sealed class RetentionPolicyDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The orchestration state to which this policy applies. If omitted, the policy applies to all purgeable orchestration states.
        /// </summary>
        [Input("orchestrationState")]
        public InputUnion<string, Pulumi.AzureNative.DurableTask.PurgeableOrchestrationState>? OrchestrationState { get; set; }

        /// <summary>
        /// The retention period in days after which the orchestration will be purged automatically
        /// </summary>
        [Input("retentionPeriodInDays", required: true)]
        public Input<int> RetentionPeriodInDays { get; set; } = null!;

        public RetentionPolicyDetailsArgs()
        {
        }
        public static new RetentionPolicyDetailsArgs Empty => new RetentionPolicyDetailsArgs();
    }
}
