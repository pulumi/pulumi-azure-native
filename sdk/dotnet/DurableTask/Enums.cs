// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.DurableTask
{
    /// <summary>
    /// The orchestration state to which this policy applies. If omitted, the policy applies to all purgeable orchestration states.
    /// </summary>
    [EnumType]
    public readonly struct PurgeableOrchestrationState : IEquatable<PurgeableOrchestrationState>
    {
        private readonly string _value;

        private PurgeableOrchestrationState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The orchestration is completed
        /// </summary>
        public static PurgeableOrchestrationState Completed { get; } = new PurgeableOrchestrationState("Completed");
        /// <summary>
        /// The orchestration is failed
        /// </summary>
        public static PurgeableOrchestrationState Failed { get; } = new PurgeableOrchestrationState("Failed");
        /// <summary>
        /// The orchestration is terminated
        /// </summary>
        public static PurgeableOrchestrationState Terminated { get; } = new PurgeableOrchestrationState("Terminated");
        /// <summary>
        /// The orchestration is canceled
        /// </summary>
        public static PurgeableOrchestrationState Canceled { get; } = new PurgeableOrchestrationState("Canceled");

        public static bool operator ==(PurgeableOrchestrationState left, PurgeableOrchestrationState right) => left.Equals(right);
        public static bool operator !=(PurgeableOrchestrationState left, PurgeableOrchestrationState right) => !left.Equals(right);

        public static explicit operator string(PurgeableOrchestrationState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PurgeableOrchestrationState other && Equals(other);
        public bool Equals(PurgeableOrchestrationState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
