// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ManufacturingPlatform.Outputs
{

    /// <summary>
    /// Details of the ManufacturingPlatform MdsResource.
    /// </summary>
    [OutputType]
    public sealed class MdsResourcePropertiesResponse
    {
        /// <summary>
        /// AAD Application Id.
        /// </summary>
        public readonly string AadApplicationId;
        /// <summary>
        /// Profile of Adx Created.
        /// </summary>
        public readonly Outputs.AdxProfileResponse AdxProfile;
        /// <summary>
        /// AKS Admin Group Id.
        /// </summary>
        public readonly string? AksAdminGroupId;
        /// <summary>
        /// Profile of AKS Created.
        /// </summary>
        public readonly Outputs.AksProfileResponse AksProfile;
        /// <summary>
        /// Profile of CMK Settings.
        /// </summary>
        public readonly Outputs.CmkProfileResponse? CmkProfile;
        /// <summary>
        /// Profile of Database Created.
        /// </summary>
        public readonly Outputs.DatabaseProfileResponse DatabaseProfile;
        /// <summary>
        /// Deny Assignments exclusion list.
        /// </summary>
        public readonly ImmutableArray<Outputs.DenyAssignmentExclusionResponse> DenyAssignmentExclusions;
        /// <summary>
        /// Enable Copilot.
        /// </summary>
        public readonly bool? EnableCopilot;
        /// <summary>
        /// Enable Diagnostic Settings.
        /// </summary>
        public readonly bool? EnableDiagnosticSettings;
        /// <summary>
        /// Profile of EventHub Resource.
        /// </summary>
        public readonly Outputs.EventHubProfileResponse EventHubProfile;
        /// <summary>
        /// Profile of Fabric resources.
        /// </summary>
        public readonly Outputs.FabricProfileResponse? FabricProfile;
        /// <summary>
        /// Profile of Function App Resource.
        /// </summary>
        public readonly Outputs.FunctionAppProfileResponse FunctionAppProfile;
        /// <summary>
        /// Managed On Behalf Of Configuration.
        /// </summary>
        public readonly Outputs.ManagedOnBehalfOfConfigurationResponse ManagedOnBehalfOfConfiguration;
        /// <summary>
        /// Configuration of the managed resource group associated with the resource.
        /// </summary>
        public readonly Outputs.ManagedResourceGroupConfigurationResponse ManagedResourceGroupConfiguration;
        /// <summary>
        /// Profile of Monitoring Resource Created.
        /// </summary>
        public readonly Outputs.MonitoringProfileResponse MonitoringProfile;
        /// <summary>
        /// Profile of OpenAI Resource.
        /// </summary>
        public readonly Outputs.OpenAIProfileResponse? OpenAIProfile;
        /// <summary>
        /// The status of the last operation.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Profile of Azure Redis Created.
        /// </summary>
        public readonly Outputs.RedisProfileResponse RedisProfile;
        /// <summary>
        /// Zone redundancy state for resources
        /// </summary>
        public readonly string? RedundancyState;
        /// <summary>
        /// State of the resource
        /// </summary>
        public readonly string? ResourceState;
        /// <summary>
        /// Service Url
        /// </summary>
        public readonly string ServiceUrl;
        /// <summary>
        /// Profile of Storage Created.
        /// </summary>
        public readonly Outputs.StorageProfileResponse StorageProfile;
        /// <summary>
        /// Profile of User Managed OpenAI Resource.
        /// </summary>
        public readonly Outputs.UserManagedOpenAIProfileResponse? UserManagedOpenAIProfile;
        /// <summary>
        /// Mds Resource Version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private MdsResourcePropertiesResponse(
            string aadApplicationId,

            Outputs.AdxProfileResponse adxProfile,

            string? aksAdminGroupId,

            Outputs.AksProfileResponse aksProfile,

            Outputs.CmkProfileResponse? cmkProfile,

            Outputs.DatabaseProfileResponse databaseProfile,

            ImmutableArray<Outputs.DenyAssignmentExclusionResponse> denyAssignmentExclusions,

            bool? enableCopilot,

            bool? enableDiagnosticSettings,

            Outputs.EventHubProfileResponse eventHubProfile,

            Outputs.FabricProfileResponse? fabricProfile,

            Outputs.FunctionAppProfileResponse functionAppProfile,

            Outputs.ManagedOnBehalfOfConfigurationResponse managedOnBehalfOfConfiguration,

            Outputs.ManagedResourceGroupConfigurationResponse managedResourceGroupConfiguration,

            Outputs.MonitoringProfileResponse monitoringProfile,

            Outputs.OpenAIProfileResponse? openAIProfile,

            string provisioningState,

            Outputs.RedisProfileResponse redisProfile,

            string? redundancyState,

            string? resourceState,

            string serviceUrl,

            Outputs.StorageProfileResponse storageProfile,

            Outputs.UserManagedOpenAIProfileResponse? userManagedOpenAIProfile,

            string? version)
        {
            AadApplicationId = aadApplicationId;
            AdxProfile = adxProfile;
            AksAdminGroupId = aksAdminGroupId;
            AksProfile = aksProfile;
            CmkProfile = cmkProfile;
            DatabaseProfile = databaseProfile;
            DenyAssignmentExclusions = denyAssignmentExclusions;
            EnableCopilot = enableCopilot;
            EnableDiagnosticSettings = enableDiagnosticSettings;
            EventHubProfile = eventHubProfile;
            FabricProfile = fabricProfile;
            FunctionAppProfile = functionAppProfile;
            ManagedOnBehalfOfConfiguration = managedOnBehalfOfConfiguration;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            MonitoringProfile = monitoringProfile;
            OpenAIProfile = openAIProfile;
            ProvisioningState = provisioningState;
            RedisProfile = redisProfile;
            RedundancyState = redundancyState;
            ResourceState = resourceState;
            ServiceUrl = serviceUrl;
            StorageProfile = storageProfile;
            UserManagedOpenAIProfile = userManagedOpenAIProfile;
            Version = version;
        }
    }
}
