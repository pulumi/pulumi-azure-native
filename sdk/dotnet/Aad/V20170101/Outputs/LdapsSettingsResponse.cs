// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Aad.V20170101.Outputs
{

    [OutputType]
    public sealed class LdapsSettingsResponse
    {
        /// <summary>
        /// NotAfter DateTime of configure ldaps certificate.
        /// </summary>
        public readonly string CertificateNotAfter;
        /// <summary>
        /// Thumbprint of configure ldaps certificate.
        /// </summary>
        public readonly string CertificateThumbprint;
        /// <summary>
        /// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
        /// </summary>
        public readonly string? ExternalAccess;
        /// <summary>
        /// External access ip address.
        /// </summary>
        public readonly string ExternalAccessIpAddress;
        /// <summary>
        /// A flag to determine whether or not Secure LDAP is enabled or disabled.
        /// </summary>
        public readonly string? Ldaps;
        /// <summary>
        /// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
        /// </summary>
        public readonly string? PfxCertificate;
        /// <summary>
        /// The password to decrypt the provided Secure LDAP certificate pfx file.
        /// </summary>
        public readonly string? PfxCertificatePassword;
        /// <summary>
        /// Public certificate used to configure secure ldap.
        /// </summary>
        public readonly string PublicCertificate;

        [OutputConstructor]
        private LdapsSettingsResponse(
            string certificateNotAfter,

            string certificateThumbprint,

            string? externalAccess,

            string externalAccessIpAddress,

            string? ldaps,

            string? pfxCertificate,

            string? pfxCertificatePassword,

            string publicCertificate)
        {
            CertificateNotAfter = certificateNotAfter;
            CertificateThumbprint = certificateThumbprint;
            ExternalAccess = externalAccess;
            ExternalAccessIpAddress = externalAccessIpAddress;
            Ldaps = ldaps;
            PfxCertificate = pfxCertificate;
            PfxCertificatePassword = pfxCertificatePassword;
            PublicCertificate = publicCertificate;
        }
    }
}
