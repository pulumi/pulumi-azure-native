// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Attestation
{
    public static class GetAttestationProvider
    {
        /// <summary>
        /// Get the status of Attestation Provider.
        /// Azure REST API version: 2021-06-01.
        /// </summary>
        public static Task<GetAttestationProviderResult> InvokeAsync(GetAttestationProviderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttestationProviderResult>("azure-native:attestation:getAttestationProvider", args ?? new GetAttestationProviderArgs(), options.WithDefaults());

        /// <summary>
        /// Get the status of Attestation Provider.
        /// Azure REST API version: 2021-06-01.
        /// </summary>
        public static Output<GetAttestationProviderResult> Invoke(GetAttestationProviderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttestationProviderResult>("azure-native:attestation:getAttestationProvider", args ?? new GetAttestationProviderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttestationProviderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the attestation provider.
        /// </summary>
        [Input("providerName", required: true)]
        public string ProviderName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAttestationProviderArgs()
        {
        }
        public static new GetAttestationProviderArgs Empty => new GetAttestationProviderArgs();
    }

    public sealed class GetAttestationProviderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the attestation provider.
        /// </summary>
        [Input("providerName", required: true)]
        public Input<string> ProviderName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAttestationProviderInvokeArgs()
        {
        }
        public static new GetAttestationProviderInvokeArgs Empty => new GetAttestationProviderInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttestationProviderResult
    {
        /// <summary>
        /// Gets the uri of attestation service
        /// </summary>
        public readonly string? AttestUri;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of private endpoint connections associated with the attestation provider.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Status of attestation service.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The setting that controls whether authentication is enabled or disabled for TPM Attestation REST APIs.
        /// </summary>
        public readonly string? TpmAttestationAuthentication;
        /// <summary>
        /// Trust model for the attestation provider.
        /// </summary>
        public readonly string? TrustModel;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAttestationProviderResult(
            string? attestUri,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string? publicNetworkAccess,

            string? status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string? tpmAttestationAuthentication,

            string? trustModel,

            string type)
        {
            AttestUri = attestUri;
            Id = id;
            Location = location;
            Name = name;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            TpmAttestationAuthentication = tpmAttestationAuthentication;
            TrustModel = trustModel;
            Type = type;
        }
    }
}
