// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.KeyVault.Inputs
{

    /// <summary>
    /// A set of rules governing the network accessibility of a vault.
    /// </summary>
    public sealed class NetworkRuleSetResponseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
        /// </summary>
        [Input("bypass")]
        public Input<string>? Bypass { get; set; }

        /// <summary>
        /// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        [Input("ipRules")]
        private InputList<Inputs.IPRuleResponseArgs>? _ipRules;

        /// <summary>
        /// The list of IP address rules.
        /// </summary>
        public InputList<Inputs.IPRuleResponseArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Inputs.IPRuleResponseArgs>());
            set => _ipRules = value;
        }

        [Input("virtualNetworkRules")]
        private InputList<Inputs.VirtualNetworkRuleResponseArgs>? _virtualNetworkRules;

        /// <summary>
        /// The list of virtual network rules.
        /// </summary>
        public InputList<Inputs.VirtualNetworkRuleResponseArgs> VirtualNetworkRules
        {
            get => _virtualNetworkRules ?? (_virtualNetworkRules = new InputList<Inputs.VirtualNetworkRuleResponseArgs>());
            set => _virtualNetworkRules = value;
        }

        public NetworkRuleSetResponseArgs()
        {
        }
    }
}
