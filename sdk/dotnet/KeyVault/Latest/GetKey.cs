// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.KeyVault.Latest
{
    public static class GetKey
    {
        public static Task<GetKeyResult> InvokeAsync(GetKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKeyResult>("azure-nextgen:keyvault/latest:getKey", args ?? new GetKeyArgs(), options.WithVersion());
    }


    public sealed class GetKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the key to be retrieved.
        /// </summary>
        [Input("keyName", required: true)]
        public string KeyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group which contains the specified key vault.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the vault which contains the key to be retrieved.
        /// </summary>
        [Input("vaultName", required: true)]
        public string VaultName { get; set; } = null!;

        public GetKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKeyResult
    {
        /// <summary>
        /// The attributes of the key.
        /// </summary>
        public readonly Outputs.KeyAttributesResponse? Attributes;
        /// <summary>
        /// The elliptic curve name. For valid values, see JsonWebKeyCurveName.
        /// </summary>
        public readonly string? CurveName;
        /// <summary>
        /// Fully qualified identifier of the key vault resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> KeyOps;
        /// <summary>
        /// The key size in bits. For example: 2048, 3072, or 4096 for RSA.
        /// </summary>
        public readonly int? KeySize;
        /// <summary>
        /// The URI to retrieve the current version of the key.
        /// </summary>
        public readonly string KeyUri;
        /// <summary>
        /// The URI to retrieve the specific version of the key.
        /// </summary>
        public readonly string KeyUriWithVersion;
        /// <summary>
        /// The type of the key. For valid values, see JsonWebKeyType.
        /// </summary>
        public readonly string? Kty;
        /// <summary>
        /// Azure location of the key vault resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of the key vault resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Tags assigned to the key vault resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Resource type of the key vault resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKeyResult(
            Outputs.KeyAttributesResponse? attributes,

            string? curveName,

            string id,

            ImmutableArray<string> keyOps,

            int? keySize,

            string keyUri,

            string keyUriWithVersion,

            string? kty,

            string location,

            string name,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Attributes = attributes;
            CurveName = curveName;
            Id = id;
            KeyOps = keyOps;
            KeySize = keySize;
            KeyUri = keyUri;
            KeyUriWithVersion = keyUriWithVersion;
            Kty = kty;
            Location = location;
            Name = name;
            Tags = tags;
            Type = type;
        }
    }
}
