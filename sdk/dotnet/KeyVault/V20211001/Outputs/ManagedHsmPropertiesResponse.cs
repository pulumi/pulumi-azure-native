// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.KeyVault.V20211001.Outputs
{

    /// <summary>
    /// Properties of the managed HSM Pool
    /// </summary>
    [OutputType]
    public sealed class ManagedHsmPropertiesResponse
    {
        /// <summary>
        /// Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. Enabling this functionality is irreversible.
        /// </summary>
        public readonly bool? EnablePurgeProtection;
        /// <summary>
        /// Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. Soft delete is enabled by default for all managed HSMs and is immutable.
        /// </summary>
        public readonly bool? EnableSoftDelete;
        /// <summary>
        /// The URI of the managed hsm pool for performing operations on keys.
        /// </summary>
        public readonly string HsmUri;
        /// <summary>
        /// Array of initial administrators object ids for this managed hsm pool.
        /// </summary>
        public readonly ImmutableArray<string> InitialAdminObjectIds;
        /// <summary>
        /// Rules governing the accessibility of the key vault from specific network locations.
        /// </summary>
        public readonly Outputs.MHSMNetworkRuleSetResponse? NetworkAcls;
        /// <summary>
        /// List of private endpoint connections associated with the managed hsm pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.MHSMPrivateEndpointConnectionItemResponse> PrivateEndpointConnections;
        /// <summary>
        /// Provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Control permission to the managed HSM from public networks.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// The scheduled purge date in UTC.
        /// </summary>
        public readonly string ScheduledPurgeDate;
        /// <summary>
        /// Soft deleted data retention days. When you delete an HSM or a key, it will remain recoverable for the configured retention period or for a default period of 90 days. It accepts values between 7 and 90.
        /// </summary>
        public readonly int? SoftDeleteRetentionInDays;
        /// <summary>
        /// Resource Status Message.
        /// </summary>
        public readonly string StatusMessage;
        /// <summary>
        /// The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool.
        /// </summary>
        public readonly string? TenantId;

        [OutputConstructor]
        private ManagedHsmPropertiesResponse(
            bool? enablePurgeProtection,

            bool? enableSoftDelete,

            string hsmUri,

            ImmutableArray<string> initialAdminObjectIds,

            Outputs.MHSMNetworkRuleSetResponse? networkAcls,

            ImmutableArray<Outputs.MHSMPrivateEndpointConnectionItemResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            string scheduledPurgeDate,

            int? softDeleteRetentionInDays,

            string statusMessage,

            string? tenantId)
        {
            EnablePurgeProtection = enablePurgeProtection;
            EnableSoftDelete = enableSoftDelete;
            HsmUri = hsmUri;
            InitialAdminObjectIds = initialAdminObjectIds;
            NetworkAcls = networkAcls;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            ScheduledPurgeDate = scheduledPurgeDate;
            SoftDeleteRetentionInDays = softDeleteRetentionInDays;
            StatusMessage = statusMessage;
            TenantId = tenantId;
        }
    }
}
