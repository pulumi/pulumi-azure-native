// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20220401Preview
{
    /// <summary>
    /// The Test Base Account resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:testbase/v20220401preview:TestBaseAccount")]
    public partial class TestBaseAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access level of the Test Base Account.
        /// </summary>
        [Output("accessLevel")]
        public Output<string> AccessLevel { get; private set; } = null!;

        /// <summary>
        /// Resource Etag.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The SKU of the Test Base Account.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.TestBaseAccountSKUResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The tags of the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a TestBaseAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TestBaseAccount(string name, TestBaseAccountArgs args, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20220401preview:TestBaseAccount", name, args ?? new TestBaseAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TestBaseAccount(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20220401preview:TestBaseAccount", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:testbase:TestBaseAccount" },
                    new global::Pulumi.Alias { Type = "azure-native:testbase/v20201216preview:TestBaseAccount" },
                    new global::Pulumi.Alias { Type = "azure-native:testbase/v20231101preview:TestBaseAccount" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TestBaseAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TestBaseAccount Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TestBaseAccount(name, id, options);
        }
    }

    public sealed class TestBaseAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The flag indicating if we would like to restore the Test Base Accounts which were soft deleted before.
        /// </summary>
        [Input("restore")]
        public Input<bool>? Restore { get; set; }

        /// <summary>
        /// The SKU of the Test Base Account.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.TestBaseAccountSKUArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName")]
        public Input<string>? TestBaseAccountName { get; set; }

        public TestBaseAccountArgs()
        {
        }
        public static new TestBaseAccountArgs Empty => new TestBaseAccountArgs();
    }
}
