// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20220401Preview
{
    public static class GetBillingHubServiceUsage
    {
        public static Task<GetBillingHubServiceUsageResult> InvokeAsync(GetBillingHubServiceUsageArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBillingHubServiceUsageResult>("azure-native:testbase/v20220401preview:getBillingHubServiceUsage", args ?? new GetBillingHubServiceUsageArgs(), options.WithDefaults());

        public static Output<GetBillingHubServiceUsageResult> Invoke(GetBillingHubServiceUsageInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBillingHubServiceUsageResult>("azure-native:testbase/v20220401preview:getBillingHubServiceUsage", args ?? new GetBillingHubServiceUsageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBillingHubServiceUsageArgs : Pulumi.InvokeArgs
    {
        [Input("endTimeStamp", required: true)]
        public string EndTimeStamp { get; set; } = null!;

        [Input("pageIndex")]
        public int? PageIndex { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("startTimeStamp", required: true)]
        public string StartTimeStamp { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public string TestBaseAccountName { get; set; } = null!;

        public GetBillingHubServiceUsageArgs()
        {
        }
    }

    public sealed class GetBillingHubServiceUsageInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("endTimeStamp", required: true)]
        public Input<string> EndTimeStamp { get; set; } = null!;

        [Input("pageIndex")]
        public Input<int>? PageIndex { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("startTimeStamp", required: true)]
        public Input<string> StartTimeStamp { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public GetBillingHubServiceUsageInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBillingHubServiceUsageResult
    {
        public readonly Outputs.BillingHubGetUsageRequestResponse? NextRequest;
        public readonly ImmutableArray<Outputs.BillingHubPackageUsageResponse> PackageUsageEntries;
        public readonly double? TotalCharges;
        public readonly double? TotalUsedBillableHours;
        public readonly double? TotalUsedFreeHours;

        [OutputConstructor]
        private GetBillingHubServiceUsageResult(
            Outputs.BillingHubGetUsageRequestResponse? nextRequest,

            ImmutableArray<Outputs.BillingHubPackageUsageResponse> packageUsageEntries,

            double? totalCharges,

            double? totalUsedBillableHours,

            double? totalUsedFreeHours)
        {
            NextRequest = nextRequest;
            PackageUsageEntries = packageUsageEntries;
            TotalCharges = totalCharges;
            TotalUsedBillableHours = totalUsedBillableHours;
            TotalUsedFreeHours = totalUsedFreeHours;
        }
    }
}
