// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase
{
    public static class GetDraftPackagePath
    {
        /// <summary>
        /// Gets draft package path and temp working path with SAS.
        /// Azure REST API version: 2023-11-01-preview.
        /// </summary>
        public static Task<GetDraftPackagePathResult> InvokeAsync(GetDraftPackagePathArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDraftPackagePathResult>("azure-native:testbase:getDraftPackagePath", args ?? new GetDraftPackagePathArgs(), options.WithDefaults());

        /// <summary>
        /// Gets draft package path and temp working path with SAS.
        /// Azure REST API version: 2023-11-01-preview.
        /// </summary>
        public static Output<GetDraftPackagePathResult> Invoke(GetDraftPackagePathInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDraftPackagePathResult>("azure-native:testbase:getDraftPackagePath", args ?? new GetDraftPackagePathInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDraftPackagePathArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the Test Base Draft Package.
        /// </summary>
        [Input("draftPackageName", required: true)]
        public string DraftPackageName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public string TestBaseAccountName { get; set; } = null!;

        public GetDraftPackagePathArgs()
        {
        }
        public static new GetDraftPackagePathArgs Empty => new GetDraftPackagePathArgs();
    }

    public sealed class GetDraftPackagePathInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the Test Base Draft Package.
        /// </summary>
        [Input("draftPackageName", required: true)]
        public Input<string> DraftPackageName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public GetDraftPackagePathInvokeArgs()
        {
        }
        public static new GetDraftPackagePathInvokeArgs Empty => new GetDraftPackagePathInvokeArgs();
    }


    [OutputType]
    public sealed class GetDraftPackagePathResult
    {
        /// <summary>
        /// The base URL of the storage account.
        /// </summary>
        public readonly string BaseUrl;
        /// <summary>
        /// The relative path of the folder hosting package files.
        /// </summary>
        public readonly string DraftPackagePath;
        /// <summary>
        /// Expiry date of the SAS token.
        /// </summary>
        public readonly string ExpirationTime;
        /// <summary>
        /// A SAS token for the storage account to access workspace.
        /// </summary>
        public readonly string SasToken;
        /// <summary>
        /// The relative path for a temporary folder for package creation work.
        /// </summary>
        public readonly string WorkingPath;

        [OutputConstructor]
        private GetDraftPackagePathResult(
            string baseUrl,

            string draftPackagePath,

            string expirationTime,

            string sasToken,

            string workingPath)
        {
            BaseUrl = baseUrl;
            DraftPackagePath = draftPackagePath;
            ExpirationTime = expirationTime;
            SasToken = sasToken;
            WorkingPath = workingPath;
        }
    }
}
