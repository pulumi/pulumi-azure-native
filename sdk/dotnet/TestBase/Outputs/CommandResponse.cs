// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.Outputs
{

    /// <summary>
    /// The command used in the test
    /// </summary>
    [OutputType]
    public sealed class CommandResponse
    {
        /// <summary>
        /// The action of the command.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Specifies whether to run the command even if a previous command is failed.
        /// </summary>
        public readonly bool? AlwaysRun;
        /// <summary>
        /// Specifies whether to apply update before the command.
        /// </summary>
        public readonly bool? ApplyUpdateBefore;
        /// <summary>
        /// The content of the command. The content depends on source type.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// The type of command content.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// Specifies whether to enroll Intune before the command.
        /// </summary>
        public readonly bool? EnrollIntuneBefore;
        /// <summary>
        /// Specifies whether to install first party applications before running the command.
        /// </summary>
        public readonly bool? Install1PAppBefore;
        /// <summary>
        /// Specifies the max run time of the command.
        /// </summary>
        public readonly int? MaxRunTime;
        /// <summary>
        /// The name of the command.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies whether the command is assigned to be executed after in-place upgrade.
        /// </summary>
        public readonly bool? PostUpgrade;
        /// <summary>
        /// Specifies whether the command is assigned to be executed before in-place upgrade.
        /// </summary>
        public readonly bool? PreUpgrade;
        /// <summary>
        /// Specifies whether to restart the VM after the command executed.
        /// </summary>
        public readonly bool? RestartAfter;
        /// <summary>
        /// Specifies whether to run the command in interactive mode.
        /// </summary>
        public readonly bool? RunAsInteractive;
        /// <summary>
        /// Specifies whether to run the command as administrator.
        /// </summary>
        public readonly bool? RunElevated;

        [OutputConstructor]
        private CommandResponse(
            string action,

            bool? alwaysRun,

            bool? applyUpdateBefore,

            string content,

            string contentType,

            bool? enrollIntuneBefore,

            bool? install1PAppBefore,

            int? maxRunTime,

            string name,

            bool? postUpgrade,

            bool? preUpgrade,

            bool? restartAfter,

            bool? runAsInteractive,

            bool? runElevated)
        {
            Action = action;
            AlwaysRun = alwaysRun;
            ApplyUpdateBefore = applyUpdateBefore;
            Content = content;
            ContentType = contentType;
            EnrollIntuneBefore = enrollIntuneBefore;
            Install1PAppBefore = install1PAppBefore;
            MaxRunTime = maxRunTime;
            Name = name;
            PostUpgrade = postUpgrade;
            PreUpgrade = preUpgrade;
            RestartAfter = restartAfter;
            RunAsInteractive = runAsInteractive;
            RunElevated = runElevated;
        }
    }
}
