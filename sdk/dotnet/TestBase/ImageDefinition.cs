// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase
{
    /// <summary>
    /// The test base image definition resource.
    /// Azure REST API version: 2023-11-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:testbase:ImageDefinition")]
    public partial class ImageDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom image architecture.
        /// </summary>
        [Output("architecture")]
        public Output<string> Architecture { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Custom image OS state.
        /// </summary>
        [Output("osState")]
        public Output<string> OsState { get; private set; } = null!;

        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Custom image security type.
        /// </summary>
        [Output("securityType")]
        public Output<string> SecurityType { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ImageDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageDefinition(string name, ImageDefinitionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:testbase:ImageDefinition", name, args ?? new ImageDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageDefinition(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:testbase:ImageDefinition", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:testbase/v20231101preview:ImageDefinition" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageDefinition Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ImageDefinition(name, id, options);
        }
    }

    public sealed class ImageDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom image architecture.
        /// </summary>
        [Input("architecture", required: true)]
        public InputUnion<string, Pulumi.AzureNative.TestBase.ImageArchitecture> Architecture { get; set; } = null!;

        /// <summary>
        /// The resource name of the test base image definition.
        /// </summary>
        [Input("imageDefinitionName")]
        public Input<string>? ImageDefinitionName { get; set; }

        /// <summary>
        /// Custom image OS state.
        /// </summary>
        [Input("osState", required: true)]
        public InputUnion<string, Pulumi.AzureNative.TestBase.ImageOSState> OsState { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Custom image security type.
        /// </summary>
        [Input("securityType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.TestBase.ImageSecurityType> SecurityType { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public ImageDefinitionArgs()
        {
        }
        public static new ImageDefinitionArgs Empty => new ImageDefinitionArgs();
    }
}
