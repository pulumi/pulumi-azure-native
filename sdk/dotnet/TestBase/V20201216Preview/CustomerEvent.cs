// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20201216Preview
{
    /// <summary>
    /// The Customer Notification Event resource.
    /// </summary>
    [Obsolete(@"Version 2020-12-16-preview will be removed in v2 of the provider.")]
    [AzureNativeResourceType("azure-native:testbase/v20201216preview:CustomerEvent")]
    public partial class CustomerEvent : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the event subscribed to.
        /// </summary>
        [Output("eventName")]
        public Output<string> EventName { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The notification event receivers.
        /// </summary>
        [Output("receivers")]
        public Output<ImmutableArray<Outputs.NotificationEventReceiverResponse>> Receivers { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CustomerEvent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomerEvent(string name, CustomerEventArgs args, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20201216preview:CustomerEvent", name, args ?? new CustomerEventArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomerEvent(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20201216preview:CustomerEvent", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:testbase:CustomerEvent"},
                    new Pulumi.Alias { Type = "azure-native:testbase/v20220401preview:CustomerEvent"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomerEvent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomerEvent Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CustomerEvent(name, id, options);
        }
    }

    public sealed class CustomerEventArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource name of the Test Base Customer event.
        /// </summary>
        [Input("customerEventName")]
        public Input<string>? CustomerEventName { get; set; }

        /// <summary>
        /// The name of the event subscribed to.
        /// </summary>
        [Input("eventName", required: true)]
        public Input<string> EventName { get; set; } = null!;

        [Input("receivers", required: true)]
        private InputList<Inputs.NotificationEventReceiverArgs>? _receivers;

        /// <summary>
        /// The notification event receivers.
        /// </summary>
        public InputList<Inputs.NotificationEventReceiverArgs> Receivers
        {
            get => _receivers ?? (_receivers = new InputList<Inputs.NotificationEventReceiverArgs>());
            set => _receivers = value;
        }

        /// <summary>
        /// The name of the resource group that contains the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public CustomerEventArgs()
        {
        }
    }
}
