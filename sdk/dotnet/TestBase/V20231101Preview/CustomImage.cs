// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20231101Preview
{
    /// <summary>
    /// The test base custom image resource.
    /// </summary>
    [AzureNativeResourceType("azure-native:testbase/v20231101preview:CustomImage")]
    public partial class CustomImage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UTC timestamp when the custom image was published.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Image definition name.
        /// </summary>
        [Output("definitionName")]
        public Output<string> DefinitionName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// This property indicates the size of the VHD to be created.
        /// </summary>
        [Output("osDiskImageSizeInGB")]
        public Output<double> OsDiskImageSizeInGB { get; private set; } = null!;

        /// <summary>
        /// Product of the custom image.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Release of the custom image OS.
        /// </summary>
        [Output("release")]
        public Output<string> Release { get; private set; } = null!;

        /// <summary>
        /// The release version date of the release of the custom image OS.
        /// </summary>
        [Output("releaseVersionDate")]
        public Output<string> ReleaseVersionDate { get; private set; } = null!;

        /// <summary>
        /// Custom image source type.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Status of the custom image.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The validation result of the custom image.
        /// </summary>
        [Output("validationResults")]
        public Output<Outputs.ImageValidationResultsResponse> ValidationResults { get; private set; } = null!;

        /// <summary>
        /// Image version name.
        /// </summary>
        [Output("versionName")]
        public Output<string> VersionName { get; private set; } = null!;

        /// <summary>
        /// The file name of the associated VHD resource.
        /// </summary>
        [Output("vhdFileName")]
        public Output<string> VhdFileName { get; private set; } = null!;

        /// <summary>
        /// The Id of the associated VHD resource.
        /// </summary>
        [Output("vhdId")]
        public Output<string?> VhdId { get; private set; } = null!;


        /// <summary>
        /// Create a CustomImage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomImage(string name, CustomImageArgs args, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20231101preview:CustomImage", name, args ?? new CustomImageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomImage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:testbase/v20231101preview:CustomImage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:testbase:CustomImage" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomImage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomImage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CustomImage(name, id, options);
        }
    }

    public sealed class CustomImageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource name of the test base custom image.
        /// </summary>
        [Input("customImageName")]
        public Input<string>? CustomImageName { get; set; }

        /// <summary>
        /// Image definition name.
        /// </summary>
        [Input("definitionName", required: true)]
        public Input<string> DefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Custom image source type.
        /// </summary>
        [Input("source", required: true)]
        public InputUnion<string, Pulumi.AzureNative.TestBase.V20231101Preview.ImageSource> Source { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        /// <summary>
        /// Image version name.
        /// </summary>
        [Input("versionName", required: true)]
        public Input<string> VersionName { get; set; } = null!;

        /// <summary>
        /// The Id of the associated VHD resource.
        /// </summary>
        [Input("vhdId")]
        public Input<string>? VhdId { get; set; }

        public CustomImageArgs()
        {
            Source = "VHD";
        }
        public static new CustomImageArgs Empty => new CustomImageArgs();
    }
}
