// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20231101Preview
{
    public static class GetCustomImage
    {
        /// <summary>
        /// Gets a test base custom image.
        /// </summary>
        public static Task<GetCustomImageResult> InvokeAsync(GetCustomImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomImageResult>("azure-native:testbase/v20231101preview:getCustomImage", args ?? new GetCustomImageArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a test base custom image.
        /// </summary>
        public static Output<GetCustomImageResult> Invoke(GetCustomImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomImageResult>("azure-native:testbase/v20231101preview:getCustomImage", args ?? new GetCustomImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the test base custom image.
        /// </summary>
        [Input("customImageName", required: true)]
        public string CustomImageName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public string TestBaseAccountName { get; set; } = null!;

        public GetCustomImageArgs()
        {
        }
        public static new GetCustomImageArgs Empty => new GetCustomImageArgs();
    }

    public sealed class GetCustomImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the test base custom image.
        /// </summary>
        [Input("customImageName", required: true)]
        public Input<string> CustomImageName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public GetCustomImageInvokeArgs()
        {
        }
        public static new GetCustomImageInvokeArgs Empty => new GetCustomImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomImageResult
    {
        /// <summary>
        /// The UTC timestamp when the custom image was published.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Image definition name.
        /// </summary>
        public readonly string DefinitionName;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// This property indicates the size of the VHD to be created.
        /// </summary>
        public readonly double OsDiskImageSizeInGB;
        /// <summary>
        /// Product of the custom image.
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Release of the custom image OS.
        /// </summary>
        public readonly string Release;
        /// <summary>
        /// The release version date of the release of the custom image OS.
        /// </summary>
        public readonly string ReleaseVersionDate;
        /// <summary>
        /// Custom image source type.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Status of the custom image.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The validation result of the custom image.
        /// </summary>
        public readonly Outputs.ImageValidationResultsResponse ValidationResults;
        /// <summary>
        /// Image version name.
        /// </summary>
        public readonly string VersionName;
        /// <summary>
        /// The file name of the associated VHD resource.
        /// </summary>
        public readonly string VhdFileName;
        /// <summary>
        /// The Id of the associated VHD resource.
        /// </summary>
        public readonly string? VhdId;

        [OutputConstructor]
        private GetCustomImageResult(
            string creationTime,

            string definitionName,

            string id,

            string name,

            double osDiskImageSizeInGB,

            string product,

            string provisioningState,

            string release,

            string releaseVersionDate,

            string source,

            string status,

            Outputs.SystemDataResponse systemData,

            string type,

            Outputs.ImageValidationResultsResponse validationResults,

            string versionName,

            string vhdFileName,

            string? vhdId)
        {
            CreationTime = creationTime;
            DefinitionName = definitionName;
            Id = id;
            Name = name;
            OsDiskImageSizeInGB = osDiskImageSizeInGB;
            Product = product;
            ProvisioningState = provisioningState;
            Release = release;
            ReleaseVersionDate = releaseVersionDate;
            Source = source;
            Status = status;
            SystemData = systemData;
            Type = type;
            ValidationResults = validationResults;
            VersionName = versionName;
            VhdFileName = vhdFileName;
            VhdId = vhdId;
        }
    }
}
