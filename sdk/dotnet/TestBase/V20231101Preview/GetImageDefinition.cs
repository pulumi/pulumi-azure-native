// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.TestBase.V20231101Preview
{
    public static class GetImageDefinition
    {
        /// <summary>
        /// Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
        /// </summary>
        public static Task<GetImageDefinitionResult> InvokeAsync(GetImageDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageDefinitionResult>("azure-native:testbase/v20231101preview:getImageDefinition", args ?? new GetImageDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
        /// </summary>
        public static Output<GetImageDefinitionResult> Invoke(GetImageDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageDefinitionResult>("azure-native:testbase/v20231101preview:getImageDefinition", args ?? new GetImageDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the test base image definition.
        /// </summary>
        [Input("imageDefinitionName", required: true)]
        public string ImageDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public string TestBaseAccountName { get; set; } = null!;

        public GetImageDefinitionArgs()
        {
        }
        public static new GetImageDefinitionArgs Empty => new GetImageDefinitionArgs();
    }

    public sealed class GetImageDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the test base image definition.
        /// </summary>
        [Input("imageDefinitionName", required: true)]
        public Input<string> ImageDefinitionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource name of the Test Base Account.
        /// </summary>
        [Input("testBaseAccountName", required: true)]
        public Input<string> TestBaseAccountName { get; set; } = null!;

        public GetImageDefinitionInvokeArgs()
        {
        }
        public static new GetImageDefinitionInvokeArgs Empty => new GetImageDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageDefinitionResult
    {
        /// <summary>
        /// Custom image architecture.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Custom image OS state.
        /// </summary>
        public readonly string OsState;
        public readonly string ProvisioningState;
        /// <summary>
        /// Custom image security type.
        /// </summary>
        public readonly string SecurityType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetImageDefinitionResult(
            string architecture,

            string id,

            string name,

            string osState,

            string provisioningState,

            string securityType,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Architecture = architecture;
            Id = id;
            Name = name;
            OsState = osState;
            ProvisioningState = provisioningState;
            SecurityType = securityType;
            SystemData = systemData;
            Type = type;
        }
    }
}
