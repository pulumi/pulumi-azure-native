// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AnalysisServices.Latest
{
    [Obsolete(@"The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-nextgen:analysisservices:listServerGatewayStatus'.")]
    public static class ListServerGatewayStatus
    {
        /// <summary>
        /// Status of gateway is live.
        /// Latest API Version: 2017-08-01.
        /// </summary>
        public static Task<ListServerGatewayStatusResult> InvokeAsync(ListServerGatewayStatusArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListServerGatewayStatusResult>("azure-nextgen:analysisservices/latest:listServerGatewayStatus", args ?? new ListServerGatewayStatusArgs(), options.WithVersion());
    }


    public sealed class ListServerGatewayStatusArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure Resource group of which a given Analysis Services server is part. This name must be at least 1 character in length, and no more than 90.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Analysis Services server.
        /// </summary>
        [Input("serverName", required: true)]
        public string ServerName { get; set; } = null!;

        public ListServerGatewayStatusArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListServerGatewayStatusResult
    {
        /// <summary>
        /// Live message of list gateway. Status: 0 - Live
        /// </summary>
        public readonly int? Status;

        [OutputConstructor]
        private ListServerGatewayStatusResult(int? status)
        {
            Status = status;
        }
    }
}
