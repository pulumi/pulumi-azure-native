// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DeploymentManager.V20180901Preview
{
    public static class GetArtifactSource
    {
        public static Task<GetArtifactSourceResult> InvokeAsync(GetArtifactSourceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetArtifactSourceResult>("azure-nextgen:deploymentmanager/v20180901preview:getArtifactSource", args ?? new GetArtifactSourceArgs(), options.WithVersion());
    }


    public sealed class GetArtifactSourceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the artifact source.
        /// </summary>
        [Input("artifactSourceName", required: true)]
        public string ArtifactSourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArtifactSourceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetArtifactSourceResult
    {
        /// <summary>
        /// The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.
        /// </summary>
        public readonly string? ArtifactRoot;
        /// <summary>
        /// The authentication method to use to access the artifact source.
        /// </summary>
        public readonly Outputs.SasAuthenticationResponse Authentication;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of artifact source used.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetArtifactSourceResult(
            string? artifactRoot,

            Outputs.SasAuthenticationResponse authentication,

            string location,

            string name,

            string sourceType,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            ArtifactRoot = artifactRoot;
            Authentication = authentication;
            Location = location;
            Name = name;
            SourceType = sourceType;
            Tags = tags;
            Type = type;
        }
    }
}
