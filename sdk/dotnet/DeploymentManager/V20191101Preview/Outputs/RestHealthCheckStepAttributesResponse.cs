// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DeploymentManager.V20191101Preview.Outputs
{

    [OutputType]
    public sealed class RestHealthCheckStepAttributesResponse
    {
        /// <summary>
        /// The list of checks that form the health check step.
        /// </summary>
        public readonly ImmutableArray<Outputs.RestHealthCheckResponse> HealthChecks;
        /// <summary>
        /// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
        /// </summary>
        public readonly string HealthyStateDuration;
        /// <summary>
        /// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
        /// </summary>
        public readonly string? MaxElasticDuration;
        /// <summary>
        /// The type of health check.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The duration in ISO 8601 format for which health check waits idly without any checks.
        /// </summary>
        public readonly string? WaitDuration;

        [OutputConstructor]
        private RestHealthCheckStepAttributesResponse(
            ImmutableArray<Outputs.RestHealthCheckResponse> healthChecks,

            string healthyStateDuration,

            string? maxElasticDuration,

            string type,

            string? waitDuration)
        {
            HealthChecks = healthChecks;
            HealthyStateDuration = healthyStateDuration;
            MaxElasticDuration = maxElasticDuration;
            Type = type;
            WaitDuration = waitDuration;
        }
    }
}
