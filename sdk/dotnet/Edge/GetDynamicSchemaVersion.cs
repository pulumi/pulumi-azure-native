// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Edge
{
    public static class GetDynamicSchemaVersion
    {
        /// <summary>
        /// Get a Dynamic Schema Version Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// 
        /// Other available API versions: 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native edge [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetDynamicSchemaVersionResult> InvokeAsync(GetDynamicSchemaVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDynamicSchemaVersionResult>("azure-native:edge:getDynamicSchemaVersion", args ?? new GetDynamicSchemaVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Dynamic Schema Version Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// 
        /// Other available API versions: 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native edge [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetDynamicSchemaVersionResult> Invoke(GetDynamicSchemaVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDynamicSchemaVersionResult>("azure-native:edge:getDynamicSchemaVersion", args ?? new GetDynamicSchemaVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Dynamic Schema Version Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// 
        /// Other available API versions: 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native edge [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetDynamicSchemaVersionResult> Invoke(GetDynamicSchemaVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDynamicSchemaVersionResult>("azure-native:edge:getDynamicSchemaVersion", args ?? new GetDynamicSchemaVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDynamicSchemaVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DynamicSchema
        /// </summary>
        [Input("dynamicSchemaName", required: true)]
        public string DynamicSchemaName { get; set; } = null!;

        /// <summary>
        /// The name of the DynamicSchemaVersion
        /// </summary>
        [Input("dynamicSchemaVersionName", required: true)]
        public string DynamicSchemaVersionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Schema
        /// </summary>
        [Input("schemaName", required: true)]
        public string SchemaName { get; set; } = null!;

        public GetDynamicSchemaVersionArgs()
        {
        }
        public static new GetDynamicSchemaVersionArgs Empty => new GetDynamicSchemaVersionArgs();
    }

    public sealed class GetDynamicSchemaVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DynamicSchema
        /// </summary>
        [Input("dynamicSchemaName", required: true)]
        public Input<string> DynamicSchemaName { get; set; } = null!;

        /// <summary>
        /// The name of the DynamicSchemaVersion
        /// </summary>
        [Input("dynamicSchemaVersionName", required: true)]
        public Input<string> DynamicSchemaVersionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Schema
        /// </summary>
        [Input("schemaName", required: true)]
        public Input<string> SchemaName { get; set; } = null!;

        public GetDynamicSchemaVersionInvokeArgs()
        {
        }
        public static new GetDynamicSchemaVersionInvokeArgs Empty => new GetDynamicSchemaVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetDynamicSchemaVersionResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.SchemaVersionPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDynamicSchemaVersionResult(
            string azureApiVersion,

            string eTag,

            string id,

            string name,

            Outputs.SchemaVersionPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ETag = eTag;
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
