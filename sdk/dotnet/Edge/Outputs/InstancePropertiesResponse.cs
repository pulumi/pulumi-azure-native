// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Edge.Outputs
{

    /// <summary>
    /// Instance Properties
    /// </summary>
    [OutputType]
    public sealed class InstancePropertiesResponse
    {
        /// <summary>
        /// State of instance
        /// </summary>
        public readonly string? ActiveState;
        /// <summary>
        /// Deployment timestamp of instance
        /// </summary>
        public readonly double DeploymentTimestampEpoch;
        /// <summary>
        /// Provisioning state of resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Reconciliation policy of instance
        /// </summary>
        public readonly Outputs.ReconciliationPolicyPropertiesResponse? ReconciliationPolicy;
        /// <summary>
        /// Scope of instance
        /// </summary>
        public readonly string? SolutionScope;
        /// <summary>
        /// Solution version of instance
        /// </summary>
        public readonly string SolutionVersionId;
        /// <summary>
        /// Status of instance
        /// </summary>
        public readonly Outputs.DeploymentStatusResponse Status;
        /// <summary>
        /// Target of instance
        /// </summary>
        public readonly string TargetId;

        [OutputConstructor]
        private InstancePropertiesResponse(
            string? activeState,

            double deploymentTimestampEpoch,

            string provisioningState,

            Outputs.ReconciliationPolicyPropertiesResponse? reconciliationPolicy,

            string? solutionScope,

            string solutionVersionId,

            Outputs.DeploymentStatusResponse status,

            string targetId)
        {
            ActiveState = activeState;
            DeploymentTimestampEpoch = deploymentTimestampEpoch;
            ProvisioningState = provisioningState;
            ReconciliationPolicy = reconciliationPolicy;
            SolutionScope = solutionScope;
            SolutionVersionId = solutionVersionId;
            Status = status;
            TargetId = targetId;
        }
    }
}
