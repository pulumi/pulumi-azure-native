// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Edge
{
    public static class GetConfigTemplate
    {
        /// <summary>
        /// Get a Config Template Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// </summary>
        public static Task<GetConfigTemplateResult> InvokeAsync(GetConfigTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigTemplateResult>("azure-native:edge:getConfigTemplate", args ?? new GetConfigTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Config Template Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// </summary>
        public static Output<GetConfigTemplateResult> Invoke(GetConfigTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigTemplateResult>("azure-native:edge:getConfigTemplate", args ?? new GetConfigTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Config Template Resource
        /// 
        /// Uses Azure REST API version 2025-06-01.
        /// </summary>
        public static Output<GetConfigTemplateResult> Invoke(GetConfigTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigTemplateResult>("azure-native:edge:getConfigTemplate", args ?? new GetConfigTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ConfigTemplate
        /// </summary>
        [Input("configTemplateName", required: true)]
        public string ConfigTemplateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConfigTemplateArgs()
        {
        }
        public static new GetConfigTemplateArgs Empty => new GetConfigTemplateArgs();
    }

    public sealed class GetConfigTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ConfigTemplate
        /// </summary>
        [Input("configTemplateName", required: true)]
        public Input<string> ConfigTemplateName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetConfigTemplateInvokeArgs()
        {
        }
        public static new GetConfigTemplateInvokeArgs Empty => new GetConfigTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigTemplateResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource-specific properties for this resource.
        /// </summary>
        public readonly Outputs.ConfigTemplatePropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConfigTemplateResult(
            string azureApiVersion,

            string eTag,

            string id,

            string location,

            string name,

            Outputs.ConfigTemplatePropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            ETag = eTag;
            Id = id;
            Location = location;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
