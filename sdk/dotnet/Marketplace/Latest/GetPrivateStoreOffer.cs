// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Marketplace.Latest
{
    public static class GetPrivateStoreOffer
    {
        public static Task<GetPrivateStoreOfferResult> InvokeAsync(GetPrivateStoreOfferArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPrivateStoreOfferResult>("azure-nextgen:marketplace/latest:getPrivateStoreOffer", args ?? new GetPrivateStoreOfferArgs(), options.WithVersion());
    }


    public sealed class GetPrivateStoreOfferArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The offer ID to update or delete
        /// </summary>
        [Input("offerId", required: true)]
        public string OfferId { get; set; } = null!;

        /// <summary>
        /// The store ID - must use the tenant ID
        /// </summary>
        [Input("privateStoreId", required: true)]
        public string PrivateStoreId { get; set; } = null!;

        public GetPrivateStoreOfferArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPrivateStoreOfferResult
    {
        /// <summary>
        /// Private store offer creator name
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Private store offer created date
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// Identifier for purposes of race condition
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// It will be displayed prominently in the marketplace
        /// </summary>
        public readonly string OfferDisplayName;
        /// <summary>
        /// Private store unique id
        /// </summary>
        public readonly string PrivateStoreId;
        /// <summary>
        /// Publisher name that will be displayed prominently in the marketplace
        /// </summary>
        public readonly string PublisherDisplayName;
        /// <summary>
        /// Plan ids limitation for this offer
        /// </summary>
        public readonly ImmutableArray<string> SpecificPlanIdsLimitation;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Offers unique id
        /// </summary>
        public readonly string UniqueOfferId;

        [OutputConstructor]
        private GetPrivateStoreOfferResult(
            string createdBy,

            string createdDate,

            string? eTag,

            string name,

            string offerDisplayName,

            string privateStoreId,

            string publisherDisplayName,

            ImmutableArray<string> specificPlanIdsLimitation,

            string type,

            string uniqueOfferId)
        {
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            ETag = eTag;
            Name = name;
            OfferDisplayName = offerDisplayName;
            PrivateStoreId = privateStoreId;
            PublisherDisplayName = publisherDisplayName;
            SpecificPlanIdsLimitation = specificPlanIdsLimitation;
            Type = type;
            UniqueOfferId = uniqueOfferId;
        }
    }
}
