// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Marketplace
{
    /// <summary>
    /// The Collection data structure.
    /// API Version: 2021-12-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:marketplace:PrivateStoreCollection")]
    public partial class PrivateStoreCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicating whether all subscriptions are selected (=true) or not (=false).
        /// </summary>
        [Output("allSubscriptions")]
        public Output<bool?> AllSubscriptions { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the association with Commercial's Billing Account.
        /// </summary>
        [Output("claim")]
        public Output<string?> Claim { get; private set; } = null!;

        /// <summary>
        /// Gets collection Id.
        /// </summary>
        [Output("collectionId")]
        public Output<string> CollectionId { get; private set; } = null!;

        /// <summary>
        /// Gets or sets collection name.
        /// </summary>
        [Output("collectionName")]
        public Output<string?> CollectionName { get; private set; } = null!;

        /// <summary>
        /// Indicating whether the collection is enabled or disabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets the number of offers associated with the collection.
        /// </summary>
        [Output("numberOfOffers")]
        public Output<double> NumberOfOffers { get; private set; } = null!;

        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
        /// </summary>
        [Output("subscriptionsList")]
        public Output<ImmutableArray<string>> SubscriptionsList { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateStoreCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateStoreCollection(string name, PrivateStoreCollectionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:marketplace:PrivateStoreCollection", name, args ?? new PrivateStoreCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateStoreCollection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:marketplace:PrivateStoreCollection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:marketplace/v20210601:PrivateStoreCollection"},
                    new global::Pulumi.Alias { Type = "azure-native:marketplace/v20211201:PrivateStoreCollection"},
                    new global::Pulumi.Alias { Type = "azure-native:marketplace/v20220301:PrivateStoreCollection"},
                    new global::Pulumi.Alias { Type = "azure-native:marketplace/v20220901:PrivateStoreCollection"},
                    new global::Pulumi.Alias { Type = "azure-native:marketplace/v20230101:PrivateStoreCollection"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateStoreCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateStoreCollection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PrivateStoreCollection(name, id, options);
        }
    }

    public sealed class PrivateStoreCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicating whether all subscriptions are selected (=true) or not (=false).
        /// </summary>
        [Input("allSubscriptions")]
        public Input<bool>? AllSubscriptions { get; set; }

        /// <summary>
        /// Gets or sets the association with Commercial's Billing Account.
        /// </summary>
        [Input("claim")]
        public Input<string>? Claim { get; set; }

        /// <summary>
        /// The collection ID
        /// </summary>
        [Input("collectionId")]
        public Input<string>? CollectionId { get; set; }

        /// <summary>
        /// Gets or sets collection name.
        /// </summary>
        [Input("collectionName")]
        public Input<string>? CollectionName { get; set; }

        /// <summary>
        /// Indicating whether the collection is enabled or disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The store ID - must use the tenant ID
        /// </summary>
        [Input("privateStoreId", required: true)]
        public Input<string> PrivateStoreId { get; set; } = null!;

        [Input("subscriptionsList")]
        private InputList<string>? _subscriptionsList;

        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
        /// </summary>
        public InputList<string> SubscriptionsList
        {
            get => _subscriptionsList ?? (_subscriptionsList = new InputList<string>());
            set => _subscriptionsList = value;
        }

        public PrivateStoreCollectionArgs()
        {
        }
        public static new PrivateStoreCollectionArgs Empty => new PrivateStoreCollectionArgs();
    }
}
