// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CognitiveServices
{
    public static class GetAgentDeployment
    {
        /// <summary>
        /// Agent Deployment resource
        /// 
        /// Uses Azure REST API version 2025-10-01-preview.
        /// </summary>
        public static Task<GetAgentDeploymentResult> InvokeAsync(GetAgentDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentDeploymentResult>("azure-native:cognitiveservices:getAgentDeployment", args ?? new GetAgentDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// Agent Deployment resource
        /// 
        /// Uses Azure REST API version 2025-10-01-preview.
        /// </summary>
        public static Output<GetAgentDeploymentResult> Invoke(GetAgentDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentDeploymentResult>("azure-native:cognitiveservices:getAgentDeployment", args ?? new GetAgentDeploymentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Agent Deployment resource
        /// 
        /// Uses Azure REST API version 2025-10-01-preview.
        /// </summary>
        public static Output<GetAgentDeploymentResult> Invoke(GetAgentDeploymentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentDeploymentResult>("azure-native:cognitiveservices:getAgentDeployment", args ?? new GetAgentDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentDeploymentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Cognitive Services account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the application associated with the Cognitive Services Account
        /// </summary>
        [Input("appName", required: true)]
        public string AppName { get; set; } = null!;

        /// <summary>
        /// The name of the deployment associated with the Cognitive Services Account
        /// </summary>
        [Input("deploymentName", required: true)]
        public string DeploymentName { get; set; } = null!;

        /// <summary>
        /// The name of Cognitive Services account's project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAgentDeploymentArgs()
        {
        }
        public static new GetAgentDeploymentArgs Empty => new GetAgentDeploymentArgs();
    }

    public sealed class GetAgentDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Cognitive Services account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the application associated with the Cognitive Services Account
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// The name of the deployment associated with the Cognitive Services Account
        /// </summary>
        [Input("deploymentName", required: true)]
        public Input<string> DeploymentName { get; set; } = null!;

        /// <summary>
        /// The name of Cognitive Services account's project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAgentDeploymentInvokeArgs()
        {
        }
        public static new GetAgentDeploymentInvokeArgs Empty => new GetAgentDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentDeploymentResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        public readonly Union<Outputs.HostedAgentDeploymentResponse, Outputs.ManagedAgentDeploymentResponse> Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAgentDeploymentResult(
            string azureApiVersion,

            string id,

            string name,

            Union<Outputs.HostedAgentDeploymentResponse, Outputs.ManagedAgentDeploymentResponse> properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
