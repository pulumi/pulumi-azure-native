// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CognitiveServices.Inputs
{

    /// <summary>
    /// Resource type representing an agentic application as a management construct.
    /// </summary>
    public sealed class AgenticApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The EntraId Agentic Blueprint of the application.
        /// </summary>
        [Input("agentIdentityBlueprint")]
        public Input<Inputs.AssignedIdentityArgs>? AgentIdentityBlueprint { get; set; }

        [Input("agents")]
        private InputList<Inputs.AgentReferenceArgs>? _agents;

        /// <summary>
        /// The list of agent definitions comprising this application, returned as references to the objects under the parent project; use this to obtain a flat list of all agent-version pairs represented by this application.
        /// </summary>
        public InputList<Inputs.AgentReferenceArgs> Agents
        {
            get => _agents ?? (_agents = new InputList<Inputs.AgentReferenceArgs>());
            set => _agents = value;
        }

        /// <summary>
        /// Gets or sets the authorization policy associated with this agentic application instance.
        /// </summary>
        [Input("authorizationPolicy")]
        public object? AuthorizationPolicy { get; set; }

        /// <summary>
        /// The application's dedicated invocation endpoint.
        /// </summary>
        [Input("baseUrl")]
        public Input<string>? BaseUrl { get; set; }

        /// <summary>
        /// The (default) agent instance identity of the application.
        /// </summary>
        [Input("defaultInstanceIdentity")]
        public Input<Inputs.AssignedIdentityArgs>? DefaultInstanceIdentity { get; set; }

        /// <summary>
        /// The asset description text.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the application.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag dictionary. Tags can be added, removed, and updated.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Gets or sets the traffic routing policy for the application's deployments.
        /// </summary>
        [Input("trafficRoutingPolicy")]
        public Input<Inputs.ApplicationTrafficRoutingPolicyArgs>? TrafficRoutingPolicy { get; set; }

        public AgenticApplicationArgs()
        {
        }
        public static new AgenticApplicationArgs Empty => new AgenticApplicationArgs();
    }
}
