// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CognitiveServices.Outputs
{

    /// <summary>
    /// RAI External SafetyProvider schema properties.
    /// </summary>
    [OutputType]
    public sealed class RaiExternalSafetyProviderSchemaPropertiesResponse
    {
        /// <summary>
        /// Creation time of the safety provider.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The Key Vault URI that contains the api key for safety provider urls.
        /// </summary>
        public readonly string? KeyVaultUri;
        /// <summary>
        /// Last modified time of the safety provider.
        /// </summary>
        public readonly string LastModifiedAt;
        /// <summary>
        /// The managed identity to access the Key Vault.
        /// </summary>
        public readonly string? ManagedIdentity;
        /// <summary>
        /// Safety provider mode sync/async.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The unique identifier of the safety provider.
        /// </summary>
        public readonly string? ProviderId;
        /// <summary>
        /// Name of the safety provider.
        /// </summary>
        public readonly string? ProviderName;
        /// <summary>
        /// The name of the secret in Key Vault that contains the api key to access the webhook.
        /// </summary>
        public readonly string? SecretName;
        /// <summary>
        /// Webhook URL for the safety provider.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private RaiExternalSafetyProviderSchemaPropertiesResponse(
            string createdAt,

            string? keyVaultUri,

            string lastModifiedAt,

            string? managedIdentity,

            string? mode,

            string? providerId,

            string? providerName,

            string? secretName,

            string? url)
        {
            CreatedAt = createdAt;
            KeyVaultUri = keyVaultUri;
            LastModifiedAt = lastModifiedAt;
            ManagedIdentity = managedIdentity;
            Mode = mode;
            ProviderId = providerId;
            ProviderName = providerName;
            SecretName = secretName;
            Url = url;
        }
    }
}
