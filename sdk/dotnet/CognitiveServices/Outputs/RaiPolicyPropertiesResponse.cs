// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CognitiveServices.Outputs
{

    /// <summary>
    /// Azure OpenAI Content Filters properties.
    /// </summary>
    [OutputType]
    public sealed class RaiPolicyPropertiesResponse
    {
        /// <summary>
        /// Name of Rai policy.
        /// </summary>
        public readonly string? BasePolicyName;
        /// <summary>
        /// The list of Content Filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.RaiPolicyContentFilterResponse> ContentFilters;
        /// <summary>
        /// The list of custom Blocklist.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomBlocklistConfigResponse> CustomBlocklists;
        /// <summary>
        /// The list of custom rai topics.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomTopicConfigResponse> CustomTopics;
        /// <summary>
        /// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2025-06-01. It is the same as 'Deferred' in previous version.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The list of Safety Providers.
        /// </summary>
        public readonly ImmutableArray<Outputs.SafetyProviderConfigResponse> SafetyProviders;
        /// <summary>
        /// Content Filters policy type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private RaiPolicyPropertiesResponse(
            string? basePolicyName,

            ImmutableArray<Outputs.RaiPolicyContentFilterResponse> contentFilters,

            ImmutableArray<Outputs.CustomBlocklistConfigResponse> customBlocklists,

            ImmutableArray<Outputs.CustomTopicConfigResponse> customTopics,

            string? mode,

            ImmutableArray<Outputs.SafetyProviderConfigResponse> safetyProviders,

            string type)
        {
            BasePolicyName = basePolicyName;
            ContentFilters = contentFilters;
            CustomBlocklists = customBlocklists;
            CustomTopics = customTopics;
            Mode = mode;
            SafetyProviders = safetyProviders;
            Type = type;
        }
    }
}
