// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CognitiveServices.Outputs
{

    /// <summary>
    /// Azure OpenAI Content Filters properties.
    /// </summary>
    [OutputType]
    public sealed class RaiPolicyPropertiesResponse
    {
        /// <summary>
        /// Name of the base Content Filters.
        /// </summary>
        public readonly string? BasePolicyName;
        /// <summary>
        /// The list of blocklists for completion.
        /// </summary>
        public readonly ImmutableArray<Outputs.RaiBlocklistConfigResponse> CompletionBlocklists;
        /// <summary>
        /// The list of Content Filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.RaiPolicyContentFilterResponse> ContentFilters;
        /// <summary>
        /// Content Filters mode.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Content Filters policy type.
        /// </summary>
        public readonly string PolicyType;
        /// <summary>
        /// The list of blocklists for prompt.
        /// </summary>
        public readonly ImmutableArray<Outputs.RaiBlocklistConfigResponse> PromptBlocklists;

        [OutputConstructor]
        private RaiPolicyPropertiesResponse(
            string? basePolicyName,

            ImmutableArray<Outputs.RaiBlocklistConfigResponse> completionBlocklists,

            ImmutableArray<Outputs.RaiPolicyContentFilterResponse> contentFilters,

            string? mode,

            string policyType,

            ImmutableArray<Outputs.RaiBlocklistConfigResponse> promptBlocklists)
        {
            BasePolicyName = basePolicyName;
            CompletionBlocklists = completionBlocklists;
            ContentFilters = contentFilters;
            Mode = mode;
            PolicyType = policyType;
            PromptBlocklists = promptBlocklists;
        }
    }
}
