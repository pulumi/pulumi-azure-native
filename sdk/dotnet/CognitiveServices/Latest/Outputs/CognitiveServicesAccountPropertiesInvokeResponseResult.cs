// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CognitiveServices.Latest.Outputs
{

    [OutputType]
    public sealed class CognitiveServicesAccountPropertiesInvokeResponseResult
    {
        /// <summary>
        /// The api properties for special APIs.
        /// </summary>
        public readonly Outputs.CognitiveServicesAccountApiPropertiesInvokeResponseResult? ApiProperties;
        /// <summary>
        /// Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
        /// </summary>
        public readonly ImmutableArray<Outputs.SkuCapabilityInvokeResponseResult> Capabilities;
        /// <summary>
        /// Optional subdomain name used for token-based authentication.
        /// </summary>
        public readonly string? CustomSubDomainName;
        /// <summary>
        /// Gets the date of cognitive services account creation.
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// The encryption properties for this resource.
        /// </summary>
        public readonly Outputs.EncryptionInvokeResponseResult? Encryption;
        /// <summary>
        /// Endpoint of the created account.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The internal identifier.
        /// </summary>
        public readonly string InternalId;
        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        public readonly Outputs.NetworkRuleSetInvokeResponseResult? NetworkAcls;
        /// <summary>
        /// The private endpoint connection associated with the Cognitive Services account.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionInvokeResponseResult> PrivateEndpointConnections;
        /// <summary>
        /// Gets the status of the cognitive services account at the time the operation was called.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// The storage accounts for this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserOwnedStorageInvokeResponseResult> UserOwnedStorage;

        [OutputConstructor]
        private CognitiveServicesAccountPropertiesInvokeResponseResult(
            Outputs.CognitiveServicesAccountApiPropertiesInvokeResponseResult? apiProperties,

            ImmutableArray<Outputs.SkuCapabilityInvokeResponseResult> capabilities,

            string? customSubDomainName,

            string dateCreated,

            Outputs.EncryptionInvokeResponseResult? encryption,

            string endpoint,

            string internalId,

            Outputs.NetworkRuleSetInvokeResponseResult? networkAcls,

            ImmutableArray<Outputs.PrivateEndpointConnectionInvokeResponseResult> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            ImmutableArray<Outputs.UserOwnedStorageInvokeResponseResult> userOwnedStorage)
        {
            ApiProperties = apiProperties;
            Capabilities = capabilities;
            CustomSubDomainName = customSubDomainName;
            DateCreated = dateCreated;
            Encryption = encryption;
            Endpoint = endpoint;
            InternalId = internalId;
            NetworkAcls = networkAcls;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            UserOwnedStorage = userOwnedStorage;
        }
    }
}
