// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StoragePool
{
    public static class GetIscsiTarget
    {
        public static Task<GetIscsiTargetResult> InvokeAsync(GetIscsiTargetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIscsiTargetResult>("azure-nextgen:storagepool:getIscsiTarget", args ?? new GetIscsiTargetArgs(), options.WithVersion());
    }


    public sealed class GetIscsiTargetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Disk pool.
        /// </summary>
        [Input("diskPoolName", required: true)]
        public string DiskPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the iSCSI target.
        /// </summary>
        [Input("iscsiTargetName", required: true)]
        public string IscsiTargetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIscsiTargetArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIscsiTargetResult
    {
        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of the operation on the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Operational status of the iSCSI target.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// iSCSI target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        public readonly string TargetIqn;
        /// <summary>
        /// List of iSCSI target portal groups. Can have 1 portal group at most.
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetPortalGroupResponse> Tpgs;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIscsiTargetResult(
            string id,

            string name,

            string provisioningState,

            string status,

            string targetIqn,

            ImmutableArray<Outputs.TargetPortalGroupResponse> tpgs,

            string type)
        {
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            Status = status;
            TargetIqn = targetIqn;
            Tpgs = tpgs;
            Type = type;
        }
    }
}
