// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StoragePool.V20200315Preview
{
    public static class GetIscsiTarget
    {
        /// <summary>
        /// Get an iSCSI target.
        /// </summary>
        public static Task<GetIscsiTargetResult> InvokeAsync(GetIscsiTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIscsiTargetResult>("azure-native:storagepool/v20200315preview:getIscsiTarget", args ?? new GetIscsiTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Get an iSCSI target.
        /// </summary>
        public static Output<GetIscsiTargetResult> Invoke(GetIscsiTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIscsiTargetResult>("azure-native:storagepool/v20200315preview:getIscsiTarget", args ?? new GetIscsiTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIscsiTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Disk pool.
        /// </summary>
        [Input("diskPoolName", required: true)]
        public string DiskPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the iSCSI target.
        /// </summary>
        [Input("iscsiTargetName", required: true)]
        public string IscsiTargetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetIscsiTargetArgs()
        {
        }
        public static new GetIscsiTargetArgs Empty => new GetIscsiTargetArgs();
    }

    public sealed class GetIscsiTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Disk pool.
        /// </summary>
        [Input("diskPoolName", required: true)]
        public Input<string> DiskPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the iSCSI target.
        /// </summary>
        [Input("iscsiTargetName", required: true)]
        public Input<string> IscsiTargetName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetIscsiTargetInvokeArgs()
        {
        }
        public static new GetIscsiTargetInvokeArgs Empty => new GetIscsiTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetIscsiTargetResult
    {
        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties for iSCSI target operations.
        /// </summary>
        public readonly Outputs.IscsiTargetPropertiesResponse Properties;
        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIscsiTargetResult(
            string id,

            string name,

            Outputs.IscsiTargetPropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
