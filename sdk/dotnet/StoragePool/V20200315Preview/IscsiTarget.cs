// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StoragePool.V20200315Preview
{
    /// <summary>
    /// Response for iSCSI target requests.
    /// </summary>
    [AzureNextGenResourceType("azure-nextgen:storagepool/v20200315preview:IscsiTarget")]
    public partial class IscsiTarget : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// State of the operation on the resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Operational status of the iSCSI target.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// iSCSI target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Output("targetIqn")]
        public Output<string> TargetIqn { get; private set; } = null!;

        /// <summary>
        /// List of iSCSI target portal groups. Can have 1 portal group at most.
        /// </summary>
        [Output("tpgs")]
        public Output<ImmutableArray<Outputs.TargetPortalGroupResponse>> Tpgs { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IscsiTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IscsiTarget(string name, IscsiTargetArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagepool/v20200315preview:IscsiTarget", name, args ?? new IscsiTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IscsiTarget(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagepool/v20200315preview:IscsiTarget", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storagepool:IscsiTarget"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IscsiTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IscsiTarget Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IscsiTarget(name, id, options);
        }
    }

    public sealed class IscsiTargetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Disk pool.
        /// </summary>
        [Input("diskPoolName", required: true)]
        public Input<string> DiskPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the iSCSI target.
        /// </summary>
        [Input("iscsiTargetName")]
        public Input<string>? IscsiTargetName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// iSCSI target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Input("targetIqn")]
        public Input<string>? TargetIqn { get; set; }

        [Input("tpgs", required: true)]
        private InputList<Inputs.TargetPortalGroupCreateArgs>? _tpgs;

        /// <summary>
        /// List of iSCSI target portal groups. Can have 1 portal group at most.
        /// </summary>
        public InputList<Inputs.TargetPortalGroupCreateArgs> Tpgs
        {
            get => _tpgs ?? (_tpgs = new InputList<Inputs.TargetPortalGroupCreateArgs>());
            set => _tpgs = value;
        }

        public IscsiTargetArgs()
        {
        }
    }
}
