// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AzureActiveDirectory.V20200501Preview
{
    public static class GetGuestUsage
    {
        public static Task<GetGuestUsageResult> InvokeAsync(GetGuestUsageArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGuestUsageResult>("azure-nextgen:azureactivedirectory/v20200501preview:getGuestUsage", args ?? new GetGuestUsageArgs(), options.WithVersion());
    }


    public sealed class GetGuestUsageArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The initial domain name of the AAD tenant.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetGuestUsageArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGuestUsageResult
    {
        /// <summary>
        /// Location of the Guest Usages resource.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of the Guest Usages resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Key-value pairs of additional resource provisioning properties.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// An identifier for the tenant for which the resource is being created
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// The type of the Guest Usages resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGuestUsageResult(
            string? location,

            string name,

            ImmutableDictionary<string, string>? tags,

            string? tenantId,

            string type)
        {
            Location = location;
            Name = name;
            Tags = tags;
            TenantId = tenantId;
            Type = type;
        }
    }
}
