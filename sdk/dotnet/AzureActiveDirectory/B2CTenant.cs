// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AzureActiveDirectory
{
    /// <summary>
    /// API Version: 2019-01-01-preview.
    /// </summary>
    [AzureNextGenResourceType("azure-nextgen:azureactivedirectory:B2CTenant")]
    public partial class B2CTenant : Pulumi.CustomResource
    {
        /// <summary>
        /// The billing configuration for the tenant.
        /// </summary>
        [Output("billingConfig")]
        public Output<Outputs.B2CTenantResourcePropertiesResponseBillingConfig?> BillingConfig { get; private set; } = null!;

        /// <summary>
        /// The location in which the resource is hosted and data resides. Refer to [this documentation](https://aka.ms/B2CDataResidency) to see valid data residency locations. Please choose one of 'United States', 'Europe', and 'Asia Pacific'.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the B2C tenant resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling).
        /// </summary>
        [Output("sku")]
        public Output<Outputs.B2CResourceSKUResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource Tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// An identifier of the B2C tenant.
        /// </summary>
        [Output("tenantId")]
        public Output<string?> TenantId { get; private set; } = null!;

        /// <summary>
        /// The type of the B2C tenant resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a B2CTenant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public B2CTenant(string name, B2CTenantArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:azureactivedirectory:B2CTenant", name, args ?? new B2CTenantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private B2CTenant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:azureactivedirectory:B2CTenant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:azureactivedirectory/v20190101preview:B2CTenant"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing B2CTenant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static B2CTenant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new B2CTenant(name, id, options);
        }
    }

    public sealed class B2CTenantArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The location in which the resource is hosted and data resides. Refer to [this documentation](https://aka.ms/B2CDataResidency) to see valid data residency locations. Please choose one of 'United States', 'Europe', and 'Asia Pacific'.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("properties", required: true)]
        public Input<Inputs.CreateTenantRequestBodyPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The initial domain name of the B2C tenant.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling).
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.B2CResourceSKUArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource Tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public B2CTenantArgs()
        {
        }
    }
}
