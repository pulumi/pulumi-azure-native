// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization
{
    /// <summary>
    /// Schema for MSIX Package properties.
    /// API Version: 2021-02-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:desktopvirtualization:MSIXPackage")]
    public partial class MSIXPackage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Detailed properties for MSIX Package
        /// </summary>
        [Output("properties")]
        public Output<Outputs.MSIXPackagePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MSIXPackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MSIXPackage(string name, MSIXPackageArgs args, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization:MSIXPackage", name, args ?? new MSIXPackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MSIXPackage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization:MSIXPackage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20200921preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201019preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201102preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201110preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210114preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210201preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210309preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210401preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210712:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210903preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220210preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220401preview:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220909:MSIXPackage"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20221014preview:MSIXPackage"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MSIXPackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MSIXPackage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MSIXPackage(name, id, options);
        }
    }

    public sealed class MSIXPackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public Input<string> HostPoolName { get; set; } = null!;

        /// <summary>
        /// The version specific package full name of the MSIX package within specified hostpool
        /// </summary>
        [Input("msixPackageFullName")]
        public Input<string>? MsixPackageFullName { get; set; }

        /// <summary>
        /// Detailed properties for MSIX Package
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.MSIXPackagePropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public MSIXPackageArgs()
        {
        }
        public static new MSIXPackageArgs Empty => new MSIXPackageArgs();
    }
}
