// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization
{
    public static class GetHostPool
    {
        /// <summary>
        /// Get a host pool.
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Task<GetHostPoolResult> InvokeAsync(GetHostPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostPoolResult>("azure-native:desktopvirtualization:getHostPool", args ?? new GetHostPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Get a host pool.
        /// API Version: 2021-02-01-preview.
        /// </summary>
        public static Output<GetHostPoolResult> Invoke(GetHostPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostPoolResult>("azure-native:desktopvirtualization:getHostPool", args ?? new GetHostPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public string HostPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHostPoolArgs()
        {
        }
        public static new GetHostPoolArgs Empty => new GetHostPoolArgs();
    }

    public sealed class GetHostPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public Input<string> HostPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetHostPoolInvokeArgs()
        {
        }
        public static new GetHostPoolInvokeArgs Empty => new GetHostPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostPoolResult
    {
        /// <summary>
        /// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        public readonly Outputs.ResourceModelWithAllowedPropertySetResponseIdentity? Identity;
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        public readonly string? ManagedBy;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        public readonly Outputs.ResourceModelWithAllowedPropertySetResponsePlan? Plan;
        /// <summary>
        /// Detailed properties for HostPool
        /// </summary>
        public readonly Outputs.HostPoolPropertiesResponse Properties;
        public readonly Outputs.ResourceModelWithAllowedPropertySetResponseSku? Sku;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHostPoolResult(
            string etag,

            string id,

            Outputs.ResourceModelWithAllowedPropertySetResponseIdentity? identity,

            string? kind,

            string? location,

            string? managedBy,

            string name,

            Outputs.ResourceModelWithAllowedPropertySetResponsePlan? plan,

            Outputs.HostPoolPropertiesResponse properties,

            Outputs.ResourceModelWithAllowedPropertySetResponseSku? sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Id = id;
            Identity = identity;
            Kind = kind;
            Location = location;
            ManagedBy = managedBy;
            Name = name;
            Plan = plan;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
