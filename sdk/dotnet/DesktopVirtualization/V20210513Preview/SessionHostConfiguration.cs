// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20210513Preview
{
    /// <summary>
    /// Represents a SessionHostConfiguration definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:desktopvirtualization/v20210513preview:SessionHostConfiguration")]
    public partial class SessionHostConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// The disk type used by virtual machine in hostpool session host.
        /// </summary>
        [Output("diskType")]
        public Output<string?> DiskType { get; private set; } = null!;

        /// <summary>
        /// Domain configurations of session hosts.
        /// </summary>
        [Output("domainInfo")]
        public Output<Outputs.DomainInfoPropertiesResponse?> DomainInfo { get; private set; } = null!;

        /// <summary>
        /// Image configurations of HostPool.
        /// </summary>
        [Output("imageInfo")]
        public Output<Outputs.ImageInfoPropertiesResponse?> ImageInfo { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The id of the size of a virtual machine connected to a hostpool.
        /// </summary>
        [Output("vMSizeId")]
        public Output<string?> VMSizeId { get; private set; } = null!;

        /// <summary>
        /// The time when session host configuration was last modified and something was changed.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// The uri to the storage blob containing scripts to be run on the virtual machine after provisioning.
        /// </summary>
        [Output("vmCustomConfigurationUri")]
        public Output<string?> VmCustomConfigurationUri { get; private set; } = null!;


        /// <summary>
        /// Create a SessionHostConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SessionHostConfiguration(string name, SessionHostConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20210513preview:SessionHostConfiguration", name, args ?? new SessionHostConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SessionHostConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20210513preview:SessionHostConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:desktopvirtualization/v20210513preview:SessionHostConfiguration"},
                    new Pulumi.Alias { Type = "azure-native:desktopvirtualization:SessionHostConfiguration"},
                    new Pulumi.Alias { Type = "azure-nextgen:desktopvirtualization:SessionHostConfiguration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SessionHostConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SessionHostConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SessionHostConfiguration(name, id, options);
        }
    }

    public sealed class SessionHostConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The disk type used by virtual machine in hostpool session host.
        /// </summary>
        [Input("diskType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210513Preview.VirtualMachineDiskType>? DiskType { get; set; }

        /// <summary>
        /// Domain configurations of session hosts.
        /// </summary>
        [Input("domainInfo")]
        public Input<Inputs.DomainInfoPropertiesArgs>? DomainInfo { get; set; }

        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public Input<string> HostPoolName { get; set; } = null!;

        /// <summary>
        /// Image configurations of HostPool.
        /// </summary>
        [Input("imageInfo")]
        public Input<Inputs.ImageInfoPropertiesArgs>? ImageInfo { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The id of the size of a virtual machine connected to a hostpool.
        /// </summary>
        [Input("vMSizeId")]
        public Input<string>? VMSizeId { get; set; }

        /// <summary>
        /// The uri to the storage blob containing scripts to be run on the virtual machine after provisioning.
        /// </summary>
        [Input("vmCustomConfigurationUri")]
        public Input<string>? VmCustomConfigurationUri { get; set; }

        public SessionHostConfigurationArgs()
        {
        }
    }
}
