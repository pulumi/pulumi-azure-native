// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20210513Preview.Inputs
{

    /// <summary>
    /// The session host configuration for updating agent, monitoring agent, and stack component.
    /// </summary>
    public sealed class SessionHostComponentUpdateConfigurationPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of maintenance for session host components.
        /// </summary>
        [Input("maintenanceType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210513Preview.SessionHostComponentUpdateType>? MaintenanceType { get; set; }

        /// <summary>
        /// Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true.
        /// </summary>
        [Input("maintenanceWindowTimeZone")]
        public Input<string>? MaintenanceWindowTimeZone { get; set; }

        /// <summary>
        /// Primary Window of the maintenance. Maintenance windows are 2 hours long. We try to push component update in this window first.
        /// </summary>
        [Input("primaryWindow")]
        public Input<Inputs.MaintenanceWindowPropertiesArgs>? PrimaryWindow { get; set; }

        /// <summary>
        /// Secondary maintenance windows. Maintenance windows are 2 hours long. We try to exercise this only when the primary window update fails.
        /// </summary>
        [Input("secondaryWindow")]
        public Input<Inputs.SecondaryWindowPropertiesArgs>? SecondaryWindow { get; set; }

        /// <summary>
        /// Whether to use localTime of the virtual machine.
        /// </summary>
        [Input("useSessionHostLocalTime")]
        public Input<bool>? UseSessionHostLocalTime { get; set; }

        public SessionHostComponentUpdateConfigurationPropertiesArgs()
        {
        }
    }
}
