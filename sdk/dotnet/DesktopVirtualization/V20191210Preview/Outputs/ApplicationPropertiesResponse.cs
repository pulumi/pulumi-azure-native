// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20191210Preview.Outputs
{

    /// <summary>
    /// Schema for Application properties.
    /// </summary>
    [OutputType]
    public sealed class ApplicationPropertiesResponse
    {
        /// <summary>
        /// Command Line Arguments for Application.
        /// </summary>
        public readonly string? CommandLineArguments;
        /// <summary>
        /// Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
        /// </summary>
        public readonly string CommandLineSetting;
        /// <summary>
        /// Description of Application.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specifies a path for the executable file for the application.
        /// </summary>
        public readonly string? FilePath;
        /// <summary>
        /// Friendly name of Application.
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// the icon a 64 bit string as a byte array.
        /// </summary>
        public readonly string IconContent;
        /// <summary>
        /// Hash of the icon.
        /// </summary>
        public readonly string IconHash;
        /// <summary>
        /// Index of the icon.
        /// </summary>
        public readonly int? IconIndex;
        /// <summary>
        /// Path to icon.
        /// </summary>
        public readonly string? IconPath;
        /// <summary>
        /// Specifies whether to show the RemoteApp program in the RD Web Access server.
        /// </summary>
        public readonly bool? ShowInPortal;

        [OutputConstructor]
        private ApplicationPropertiesResponse(
            string? commandLineArguments,

            string commandLineSetting,

            string? description,

            string? filePath,

            string? friendlyName,

            string iconContent,

            string iconHash,

            int? iconIndex,

            string? iconPath,

            bool? showInPortal)
        {
            CommandLineArguments = commandLineArguments;
            CommandLineSetting = commandLineSetting;
            Description = description;
            FilePath = filePath;
            FriendlyName = friendlyName;
            IconContent = iconContent;
            IconHash = iconHash;
            IconIndex = iconIndex;
            IconPath = iconPath;
            ShowInPortal = showInPortal;
        }
    }
}
