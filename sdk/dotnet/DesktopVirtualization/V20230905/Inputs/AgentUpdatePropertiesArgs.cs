// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20230905.Inputs
{

    /// <summary>
    /// The session host configuration for updating agent, monitoring agent, and stack component.
    /// </summary>
    public sealed class AgentUpdatePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true.
        /// </summary>
        [Input("maintenanceWindowTimeZone")]
        public Input<string>? MaintenanceWindowTimeZone { get; set; }

        [Input("maintenanceWindows")]
        private InputList<Inputs.MaintenanceWindowPropertiesArgs>? _maintenanceWindows;

        /// <summary>
        /// List of maintenance windows. Maintenance windows are 2 hours long.
        /// </summary>
        public InputList<Inputs.MaintenanceWindowPropertiesArgs> MaintenanceWindows
        {
            get => _maintenanceWindows ?? (_maintenanceWindows = new InputList<Inputs.MaintenanceWindowPropertiesArgs>());
            set => _maintenanceWindows = value;
        }

        /// <summary>
        /// The type of maintenance for session host components.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20230905.SessionHostComponentUpdateType>? Type { get; set; }

        /// <summary>
        /// Whether to use localTime of the virtual machine.
        /// </summary>
        [Input("useSessionHostLocalTime")]
        public Input<bool>? UseSessionHostLocalTime { get; set; }

        public AgentUpdatePropertiesArgs()
        {
        }
        public static new AgentUpdatePropertiesArgs Empty => new AgentUpdatePropertiesArgs();
    }
}
