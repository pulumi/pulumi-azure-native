// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20240403
{
    public static class GetHostPoolRegistrationToken
    {
        /// <summary>
        /// Registration token of the host pool.
        /// </summary>
        public static Task<GetHostPoolRegistrationTokenResult> InvokeAsync(GetHostPoolRegistrationTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostPoolRegistrationTokenResult>("azure-native:desktopvirtualization/v20240403:getHostPoolRegistrationToken", args ?? new GetHostPoolRegistrationTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Registration token of the host pool.
        /// </summary>
        public static Output<GetHostPoolRegistrationTokenResult> Invoke(GetHostPoolRegistrationTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostPoolRegistrationTokenResult>("azure-native:desktopvirtualization/v20240403:getHostPoolRegistrationToken", args ?? new GetHostPoolRegistrationTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostPoolRegistrationTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public string HostPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHostPoolRegistrationTokenArgs()
        {
        }
        public static new GetHostPoolRegistrationTokenArgs Empty => new GetHostPoolRegistrationTokenArgs();
    }

    public sealed class GetHostPoolRegistrationTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName", required: true)]
        public Input<string> HostPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetHostPoolRegistrationTokenInvokeArgs()
        {
        }
        public static new GetHostPoolRegistrationTokenInvokeArgs Empty => new GetHostPoolRegistrationTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostPoolRegistrationTokenResult
    {
        /// <summary>
        /// Expiration time of registration token.
        /// </summary>
        public readonly string? ExpirationTime;
        /// <summary>
        /// The type of resetting the token.
        /// </summary>
        public readonly string? RegistrationTokenOperation;
        /// <summary>
        /// The registration token base64 encoded string.
        /// </summary>
        public readonly string? Token;

        [OutputConstructor]
        private GetHostPoolRegistrationTokenResult(
            string? expirationTime,

            string? registrationTokenOperation,

            string? token)
        {
            ExpirationTime = expirationTime;
            RegistrationTokenOperation = registrationTokenOperation;
            Token = token;
        }
    }
}
