// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20240403.Outputs
{

    /// <summary>
    /// Schema for Import Package Information properties.
    /// </summary>
    [OutputType]
    public sealed class AppAttachPackageInfoPropertiesResponse
    {
        /// <summary>
        /// Date certificate expires, found in the appxmanifest.xml. 
        /// </summary>
        public readonly string? CertificateExpiry;
        /// <summary>
        /// Certificate name found in the appxmanifest.xml. 
        /// </summary>
        public readonly string? CertificateName;
        /// <summary>
        /// User friendly Name to be displayed in the portal. 
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// VHD/CIM image path on Network Share.
        /// </summary>
        public readonly string? ImagePath;
        /// <summary>
        /// Make this version of the package the active one across the hostpool. 
        /// </summary>
        public readonly bool? IsActive;
        /// <summary>
        /// Is package timestamped so it can ignore the certificate expiry date
        /// </summary>
        public readonly string? IsPackageTimestamped;
        /// <summary>
        /// Specifies how to register Package in feed.
        /// </summary>
        public readonly bool? IsRegularRegistration;
        /// <summary>
        /// Date Package was last updated, found in the appxmanifest.xml. 
        /// </summary>
        public readonly string? LastUpdated;
        /// <summary>
        /// Alias of App Attach Package. Assigned at import time
        /// </summary>
        public readonly string? PackageAlias;
        /// <summary>
        /// List of package applications. 
        /// </summary>
        public readonly ImmutableArray<Outputs.MsixPackageApplicationsResponse> PackageApplications;
        /// <summary>
        /// List of package dependencies. 
        /// </summary>
        public readonly ImmutableArray<Outputs.MsixPackageDependenciesResponse> PackageDependencies;
        /// <summary>
        /// Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. 
        /// </summary>
        public readonly string? PackageFamilyName;
        /// <summary>
        /// Package Full Name from appxmanifest.xml. 
        /// </summary>
        public readonly string? PackageFullName;
        /// <summary>
        /// Package Name from appxmanifest.xml. 
        /// </summary>
        public readonly string? PackageName;
        /// <summary>
        /// Relative Path to the package inside the image. 
        /// </summary>
        public readonly string? PackageRelativePath;
        /// <summary>
        /// Package version found in the appxmanifest.xml. 
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private AppAttachPackageInfoPropertiesResponse(
            string? certificateExpiry,

            string? certificateName,

            string? displayName,

            string? imagePath,

            bool? isActive,

            string? isPackageTimestamped,

            bool? isRegularRegistration,

            string? lastUpdated,

            string? packageAlias,

            ImmutableArray<Outputs.MsixPackageApplicationsResponse> packageApplications,

            ImmutableArray<Outputs.MsixPackageDependenciesResponse> packageDependencies,

            string? packageFamilyName,

            string? packageFullName,

            string? packageName,

            string? packageRelativePath,

            string? version)
        {
            CertificateExpiry = certificateExpiry;
            CertificateName = certificateName;
            DisplayName = displayName;
            ImagePath = imagePath;
            IsActive = isActive;
            IsPackageTimestamped = isPackageTimestamped;
            IsRegularRegistration = isRegularRegistration;
            LastUpdated = lastUpdated;
            PackageAlias = packageAlias;
            PackageApplications = packageApplications;
            PackageDependencies = packageDependencies;
            PackageFamilyName = packageFamilyName;
            PackageFullName = packageFullName;
            PackageName = packageName;
            PackageRelativePath = packageRelativePath;
            Version = version;
        }
    }
}
