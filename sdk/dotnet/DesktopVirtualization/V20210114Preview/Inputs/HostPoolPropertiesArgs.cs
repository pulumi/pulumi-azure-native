// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.Inputs
{

    /// <summary>
    /// Properties of HostPool.
    /// </summary>
    public sealed class HostPoolPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom rdp property of HostPool.
        /// </summary>
        [Input("customRdpProperty")]
        public Input<string>? CustomRdpProperty { get; set; }

        /// <summary>
        /// Description of HostPool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Friendly name of HostPool.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// HostPool type for desktop.
        /// </summary>
        [Input("hostPoolType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.HostPoolType> HostPoolType { get; set; } = null!;

        /// <summary>
        /// The type of the load balancer.
        /// </summary>
        [Input("loadBalancerType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.LoadBalancerType> LoadBalancerType { get; set; } = null!;

        /// <summary>
        /// The max session limit of HostPool.
        /// </summary>
        [Input("maxSessionLimit")]
        public Input<int>? MaxSessionLimit { get; set; }

        /// <summary>
        /// The registration info of HostPool.
        /// </summary>
        [Input("migrationRequest")]
        public Input<Inputs.MigrationRequestPropertiesArgs>? MigrationRequest { get; set; }

        /// <summary>
        /// PersonalDesktopAssignment type for HostPool.
        /// </summary>
        [Input("personalDesktopAssignmentType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.PersonalDesktopAssignmentType>? PersonalDesktopAssignmentType { get; set; }

        /// <summary>
        /// The type of preferred application group type, default to Desktop Application Group
        /// </summary>
        [Input("preferredAppGroupType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.PreferredAppGroupType> PreferredAppGroupType { get; set; } = null!;

        /// <summary>
        /// The registration info of HostPool.
        /// </summary>
        [Input("registrationInfo")]
        public Input<Inputs.RegistrationInfoArgs>? RegistrationInfo { get; set; }

        /// <summary>
        /// The ring number of HostPool.
        /// </summary>
        [Input("ring")]
        public Input<int>? Ring { get; set; }

        /// <summary>
        /// ClientId for the registered Relying Party used to issue WVD SSO certificates.
        /// </summary>
        [Input("ssoClientId")]
        public Input<string>? SsoClientId { get; set; }

        /// <summary>
        /// Path to Azure KeyVault storing the secret used for communication to ADFS.
        /// </summary>
        [Input("ssoClientSecretKeyVaultPath")]
        public Input<string>? SsoClientSecretKeyVaultPath { get; set; }

        /// <summary>
        /// The type of single sign on Secret Type.
        /// </summary>
        [Input("ssoSecretType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20210114Preview.SSOSecretType>? SsoSecretType { get; set; }

        /// <summary>
        /// URL to customer ADFS server for signing WVD SSO certificates.
        /// </summary>
        [Input("ssoadfsAuthority")]
        public Input<string>? SsoadfsAuthority { get; set; }

        /// <summary>
        /// The flag to turn on/off StartVMOnConnect feature.
        /// </summary>
        [Input("startVMOnConnect")]
        public Input<bool>? StartVMOnConnect { get; set; }

        /// <summary>
        /// Is validation environment.
        /// </summary>
        [Input("validationEnvironment")]
        public Input<bool>? ValidationEnvironment { get; set; }

        /// <summary>
        /// VM template for sessionhosts configuration within hostpool.
        /// </summary>
        [Input("vmTemplate")]
        public Input<string>? VmTemplate { get; set; }

        public HostPoolPropertiesArgs()
        {
        }
        public static new HostPoolPropertiesArgs Empty => new HostPoolPropertiesArgs();
    }
}
