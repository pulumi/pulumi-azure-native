// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DesktopVirtualization.V20210114Preview.Outputs
{

    [OutputType]
    public sealed class ScalingScheduleResponse
    {
        /// <summary>
        /// Set of days of the week on which this schedule is active.
        /// </summary>
        public readonly ImmutableArray<string> DaysOfWeek;
        /// <summary>
        /// Name of the scaling schedule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Load balancing algorithm for off-peak period.
        /// </summary>
        public readonly string? OffPeakLoadBalancingAlgorithm;
        /// <summary>
        /// Starting time for off-peak period.
        /// </summary>
        public readonly string? OffPeakStartTime;
        /// <summary>
        /// Load balancing algorithm for peak period.
        /// </summary>
        public readonly string? PeakLoadBalancingAlgorithm;
        /// <summary>
        /// Starting time for peak period.
        /// </summary>
        public readonly string? PeakStartTime;
        /// <summary>
        /// Capacity threshold for ramp down period.
        /// </summary>
        public readonly int? RampDownCapacityThresholdPct;
        /// <summary>
        /// Should users be logged off forcefully from hosts.
        /// </summary>
        public readonly bool? RampDownForceLogoffUsers;
        /// <summary>
        /// Load balancing algorithm for ramp down period.
        /// </summary>
        public readonly string? RampDownLoadBalancingAlgorithm;
        /// <summary>
        /// Minimum host percentage for ramp down period.
        /// </summary>
        public readonly int? RampDownMinimumHostsPct;
        /// <summary>
        /// Notification message for users during ramp down period.
        /// </summary>
        public readonly string? RampDownNotificationMessage;
        /// <summary>
        /// Number of minutes to wait to stop hosts during ramp down period.
        /// </summary>
        public readonly int? RampDownNotificationMinutes;
        /// <summary>
        /// Starting time for ramp down period.
        /// </summary>
        public readonly string? RampDownStartTime;
        /// <summary>
        /// Specifies when to stop hosts during ramp down period.
        /// </summary>
        public readonly string? RampDownStopHostsWhen;
        /// <summary>
        /// Load balancing algorithm for ramp up period.
        /// </summary>
        public readonly string? RampUpAlgorithm;
        /// <summary>
        /// Capacity threshold for ramp up period.
        /// </summary>
        public readonly int? RampUpCapacityThresholdPct;
        /// <summary>
        /// Minimum host percentage for ramp up period.
        /// </summary>
        public readonly int? RampUpMinimumHostPct;
        /// <summary>
        /// Starting time for ramp up period.
        /// </summary>
        public readonly string? RampUpStartTime;

        [OutputConstructor]
        private ScalingScheduleResponse(
            ImmutableArray<string> daysOfWeek,

            string? name,

            string? offPeakLoadBalancingAlgorithm,

            string? offPeakStartTime,

            string? peakLoadBalancingAlgorithm,

            string? peakStartTime,

            int? rampDownCapacityThresholdPct,

            bool? rampDownForceLogoffUsers,

            string? rampDownLoadBalancingAlgorithm,

            int? rampDownMinimumHostsPct,

            string? rampDownNotificationMessage,

            int? rampDownNotificationMinutes,

            string? rampDownStartTime,

            string? rampDownStopHostsWhen,

            string? rampUpAlgorithm,

            int? rampUpCapacityThresholdPct,

            int? rampUpMinimumHostPct,

            string? rampUpStartTime)
        {
            DaysOfWeek = daysOfWeek;
            Name = name;
            OffPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
            OffPeakStartTime = offPeakStartTime;
            PeakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
            PeakStartTime = peakStartTime;
            RampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
            RampDownForceLogoffUsers = rampDownForceLogoffUsers;
            RampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
            RampDownMinimumHostsPct = rampDownMinimumHostsPct;
            RampDownNotificationMessage = rampDownNotificationMessage;
            RampDownNotificationMinutes = rampDownNotificationMinutes;
            RampDownStartTime = rampDownStartTime;
            RampDownStopHostsWhen = rampDownStopHostsWhen;
            RampUpAlgorithm = rampUpAlgorithm;
            RampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
            RampUpMinimumHostPct = rampUpMinimumHostPct;
            RampUpStartTime = rampUpStartTime;
        }
    }
}
