// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20201102Preview.Inputs
{

    /// <summary>
    /// Schema for Application properties.
    /// </summary>
    public sealed class ApplicationPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource Type of Application.
        /// </summary>
        [Input("applicationType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20201102Preview.RemoteApplicationType>? ApplicationType { get; set; }

        /// <summary>
        /// Command Line Arguments for Application.
        /// </summary>
        [Input("commandLineArguments")]
        public Input<string>? CommandLineArguments { get; set; }

        /// <summary>
        /// Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
        /// </summary>
        [Input("commandLineSetting", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20201102Preview.CommandLineSetting> CommandLineSetting { get; set; } = null!;

        /// <summary>
        /// Description of Application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies a path for the executable file for the application.
        /// </summary>
        [Input("filePath")]
        public Input<string>? FilePath { get; set; }

        /// <summary>
        /// Friendly name of Application.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Index of the icon.
        /// </summary>
        [Input("iconIndex")]
        public Input<int>? IconIndex { get; set; }

        /// <summary>
        /// Path to icon.
        /// </summary>
        [Input("iconPath")]
        public Input<string>? IconPath { get; set; }

        /// <summary>
        /// Specifies the package application Id for MSIX applications
        /// </summary>
        [Input("msixPackageApplicationId")]
        public Input<string>? MsixPackageApplicationId { get; set; }

        /// <summary>
        /// Specifies the package family name for MSIX applications
        /// </summary>
        [Input("msixPackageFamilyName")]
        public Input<string>? MsixPackageFamilyName { get; set; }

        /// <summary>
        /// Specifies whether to show the RemoteApp program in the RD Web Access server.
        /// </summary>
        [Input("showInPortal")]
        public Input<bool>? ShowInPortal { get; set; }

        public ApplicationPropertiesArgs()
        {
        }
        public static new ApplicationPropertiesArgs Empty => new ApplicationPropertiesArgs();
    }
}
