// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20231101Preview.Outputs
{

    /// <summary>
    /// Schema for App Attach Package properties.
    /// </summary>
    [OutputType]
    public sealed class AppAttachPackagePropertiesResponse
    {
        /// <summary>
        /// Parameter indicating how the health check should behave if this package fails staging
        /// </summary>
        public readonly string? FailHealthCheckOnStagingFailure;
        /// <summary>
        /// List of Hostpool resource Ids.
        /// </summary>
        public readonly ImmutableArray<string> HostPoolReferences;
        /// <summary>
        /// Detailed properties for App Attach Package
        /// </summary>
        public readonly Outputs.AppAttachPackageInfoPropertiesResponse? Image;
        /// <summary>
        /// URL of keyvault location to store certificate
        /// </summary>
        public readonly string? KeyVaultURL;
        /// <summary>
        /// The provisioning state of the App Attach Package.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private AppAttachPackagePropertiesResponse(
            string? failHealthCheckOnStagingFailure,

            ImmutableArray<string> hostPoolReferences,

            Outputs.AppAttachPackageInfoPropertiesResponse? image,

            string? keyVaultURL,

            string provisioningState)
        {
            FailHealthCheckOnStagingFailure = failHealthCheckOnStagingFailure;
            HostPoolReferences = hostPoolReferences;
            Image = image;
            KeyVaultURL = keyVaultURL;
            ProvisioningState = provisioningState;
        }
    }
}
