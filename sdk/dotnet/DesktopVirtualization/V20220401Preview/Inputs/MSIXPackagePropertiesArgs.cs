// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20220401Preview.Inputs
{

    /// <summary>
    /// Schema for MSIX Package properties.
    /// </summary>
    public sealed class MSIXPackagePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User friendly Name to be displayed in the portal. 
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// VHD/CIM image path on Network Share.
        /// </summary>
        [Input("imagePath")]
        public Input<string>? ImagePath { get; set; }

        /// <summary>
        /// Make this version of the package the active one across the hostpool. 
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// Specifies how to register Package in feed.
        /// </summary>
        [Input("isRegularRegistration")]
        public Input<bool>? IsRegularRegistration { get; set; }

        /// <summary>
        /// Date Package was last updated, found in the appxmanifest.xml. 
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        [Input("packageApplications")]
        private InputList<Inputs.MsixPackageApplicationsArgs>? _packageApplications;

        /// <summary>
        /// List of package applications. 
        /// </summary>
        public InputList<Inputs.MsixPackageApplicationsArgs> PackageApplications
        {
            get => _packageApplications ?? (_packageApplications = new InputList<Inputs.MsixPackageApplicationsArgs>());
            set => _packageApplications = value;
        }

        [Input("packageDependencies")]
        private InputList<Inputs.MsixPackageDependenciesArgs>? _packageDependencies;

        /// <summary>
        /// List of package dependencies. 
        /// </summary>
        public InputList<Inputs.MsixPackageDependenciesArgs> PackageDependencies
        {
            get => _packageDependencies ?? (_packageDependencies = new InputList<Inputs.MsixPackageDependenciesArgs>());
            set => _packageDependencies = value;
        }

        /// <summary>
        /// Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. 
        /// </summary>
        [Input("packageFamilyName")]
        public Input<string>? PackageFamilyName { get; set; }

        /// <summary>
        /// Package Name from appxmanifest.xml. 
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// Relative Path to the package inside the image. 
        /// </summary>
        [Input("packageRelativePath")]
        public Input<string>? PackageRelativePath { get; set; }

        /// <summary>
        /// Package Version found in the appxmanifest.xml. 
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public MSIXPackagePropertiesArgs()
        {
        }
        public static new MSIXPackagePropertiesArgs Empty => new MSIXPackagePropertiesArgs();
    }
}
