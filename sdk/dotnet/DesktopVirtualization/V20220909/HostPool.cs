// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20220909
{
    /// <summary>
    /// Represents a HostPool definition.
    /// </summary>
    [AzureNativeResourceType("azure-native:desktopvirtualization/v20220909:HostPool")]
    public partial class HostPool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The session host configuration for updating agent, monitoring agent, and stack component.
        /// </summary>
        [Output("agentUpdate")]
        public Output<Outputs.AgentUpdatePropertiesResponse?> AgentUpdate { get; private set; } = null!;

        /// <summary>
        /// List of applicationGroup links.
        /// </summary>
        [Output("applicationGroupReferences")]
        public Output<ImmutableArray<string>> ApplicationGroupReferences { get; private set; } = null!;

        /// <summary>
        /// Is cloud pc resource.
        /// </summary>
        [Output("cloudPcResource")]
        public Output<bool> CloudPcResource { get; private set; } = null!;

        /// <summary>
        /// Custom rdp property of HostPool.
        /// </summary>
        [Output("customRdpProperty")]
        public Output<string?> CustomRdpProperty { get; private set; } = null!;

        /// <summary>
        /// Description of HostPool.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Friendly name of HostPool.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// HostPool type for desktop.
        /// </summary>
        [Output("hostPoolType")]
        public Output<string> HostPoolType { get; private set; } = null!;

        [Output("identity")]
        public Output<Outputs.ResourceModelWithAllowedPropertySetResponseIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The type of the load balancer.
        /// </summary>
        [Output("loadBalancerType")]
        public Output<string> LoadBalancerType { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        [Output("managedBy")]
        public Output<string?> ManagedBy { get; private set; } = null!;

        /// <summary>
        /// The max session limit of HostPool.
        /// </summary>
        [Output("maxSessionLimit")]
        public Output<int?> MaxSessionLimit { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ObjectId of HostPool. (internal use)
        /// </summary>
        [Output("objectId")]
        public Output<string> ObjectId { get; private set; } = null!;

        /// <summary>
        /// PersonalDesktopAssignment type for HostPool.
        /// </summary>
        [Output("personalDesktopAssignmentType")]
        public Output<string?> PersonalDesktopAssignmentType { get; private set; } = null!;

        [Output("plan")]
        public Output<Outputs.ResourceModelWithAllowedPropertySetResponsePlan?> Plan { get; private set; } = null!;

        /// <summary>
        /// The type of preferred application group type, default to Desktop Application Group
        /// </summary>
        [Output("preferredAppGroupType")]
        public Output<string> PreferredAppGroupType { get; private set; } = null!;

        /// <summary>
        /// The registration info of HostPool.
        /// </summary>
        [Output("registrationInfo")]
        public Output<Outputs.RegistrationInfoResponse?> RegistrationInfo { get; private set; } = null!;

        /// <summary>
        /// The ring number of HostPool.
        /// </summary>
        [Output("ring")]
        public Output<int?> Ring { get; private set; } = null!;

        [Output("sku")]
        public Output<Outputs.ResourceModelWithAllowedPropertySetResponseSku?> Sku { get; private set; } = null!;

        /// <summary>
        /// ClientId for the registered Relying Party used to issue WVD SSO certificates.
        /// </summary>
        [Output("ssoClientId")]
        public Output<string?> SsoClientId { get; private set; } = null!;

        /// <summary>
        /// Path to Azure KeyVault storing the secret used for communication to ADFS.
        /// </summary>
        [Output("ssoClientSecretKeyVaultPath")]
        public Output<string?> SsoClientSecretKeyVaultPath { get; private set; } = null!;

        /// <summary>
        /// The type of single sign on Secret Type.
        /// </summary>
        [Output("ssoSecretType")]
        public Output<string?> SsoSecretType { get; private set; } = null!;

        /// <summary>
        /// URL to customer ADFS server for signing WVD SSO certificates.
        /// </summary>
        [Output("ssoadfsAuthority")]
        public Output<string?> SsoadfsAuthority { get; private set; } = null!;

        /// <summary>
        /// The flag to turn on/off StartVMOnConnect feature.
        /// </summary>
        [Output("startVMOnConnect")]
        public Output<bool?> StartVMOnConnect { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Is validation environment.
        /// </summary>
        [Output("validationEnvironment")]
        public Output<bool?> ValidationEnvironment { get; private set; } = null!;

        /// <summary>
        /// VM template for sessionhosts configuration within hostpool.
        /// </summary>
        [Output("vmTemplate")]
        public Output<string?> VmTemplate { get; private set; } = null!;


        /// <summary>
        /// Create a HostPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostPool(string name, HostPoolArgs args, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20220909:HostPool", name, args ?? new HostPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostPool(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20220909:HostPool", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20190123preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20190924preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20191210preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20200921preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201019preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201102preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20201110preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210114preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210201preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210309preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210401preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210712:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210903preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220210preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220401preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20221014preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20230707preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20230905:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20231004preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20231101preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20240116preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20240306preview:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20240403:HostPool" },
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20240408preview:HostPool" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostPool Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HostPool(name, id, options);
        }
    }

    public sealed class HostPoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The session host configuration for updating agent, monitoring agent, and stack component.
        /// </summary>
        [Input("agentUpdate")]
        public Input<Inputs.AgentUpdatePropertiesArgs>? AgentUpdate { get; set; }

        /// <summary>
        /// Custom rdp property of HostPool.
        /// </summary>
        [Input("customRdpProperty")]
        public Input<string>? CustomRdpProperty { get; set; }

        /// <summary>
        /// Description of HostPool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Friendly name of HostPool.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// The name of the host pool within the specified resource group
        /// </summary>
        [Input("hostPoolName")]
        public Input<string>? HostPoolName { get; set; }

        /// <summary>
        /// HostPool type for desktop.
        /// </summary>
        [Input("hostPoolType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20220909.HostPoolType> HostPoolType { get; set; } = null!;

        [Input("identity")]
        public Input<Inputs.ResourceModelWithAllowedPropertySetIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The type of the load balancer.
        /// </summary>
        [Input("loadBalancerType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20220909.LoadBalancerType> LoadBalancerType { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        /// </summary>
        [Input("managedBy")]
        public Input<string>? ManagedBy { get; set; }

        /// <summary>
        /// The max session limit of HostPool.
        /// </summary>
        [Input("maxSessionLimit")]
        public Input<int>? MaxSessionLimit { get; set; }

        /// <summary>
        /// PersonalDesktopAssignment type for HostPool.
        /// </summary>
        [Input("personalDesktopAssignmentType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20220909.PersonalDesktopAssignmentType>? PersonalDesktopAssignmentType { get; set; }

        [Input("plan")]
        public Input<Inputs.ResourceModelWithAllowedPropertySetPlanArgs>? Plan { get; set; }

        /// <summary>
        /// The type of preferred application group type, default to Desktop Application Group
        /// </summary>
        [Input("preferredAppGroupType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20220909.PreferredAppGroupType> PreferredAppGroupType { get; set; } = null!;

        /// <summary>
        /// The registration info of HostPool.
        /// </summary>
        [Input("registrationInfo")]
        public Input<Inputs.RegistrationInfoArgs>? RegistrationInfo { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ring number of HostPool.
        /// </summary>
        [Input("ring")]
        public Input<int>? Ring { get; set; }

        [Input("sku")]
        public Input<Inputs.ResourceModelWithAllowedPropertySetSkuArgs>? Sku { get; set; }

        /// <summary>
        /// ClientId for the registered Relying Party used to issue WVD SSO certificates.
        /// </summary>
        [Input("ssoClientId")]
        public Input<string>? SsoClientId { get; set; }

        /// <summary>
        /// Path to Azure KeyVault storing the secret used for communication to ADFS.
        /// </summary>
        [Input("ssoClientSecretKeyVaultPath")]
        public Input<string>? SsoClientSecretKeyVaultPath { get; set; }

        /// <summary>
        /// The type of single sign on Secret Type.
        /// </summary>
        [Input("ssoSecretType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20220909.SSOSecretType>? SsoSecretType { get; set; }

        /// <summary>
        /// URL to customer ADFS server for signing WVD SSO certificates.
        /// </summary>
        [Input("ssoadfsAuthority")]
        public Input<string>? SsoadfsAuthority { get; set; }

        /// <summary>
        /// The flag to turn on/off StartVMOnConnect feature.
        /// </summary>
        [Input("startVMOnConnect")]
        public Input<bool>? StartVMOnConnect { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Is validation environment.
        /// </summary>
        [Input("validationEnvironment")]
        public Input<bool>? ValidationEnvironment { get; set; }

        /// <summary>
        /// VM template for sessionhosts configuration within hostpool.
        /// </summary>
        [Input("vmTemplate")]
        public Input<string>? VmTemplate { get; set; }

        public HostPoolArgs()
        {
        }
        public static new HostPoolArgs Empty => new HostPoolArgs();
    }
}
