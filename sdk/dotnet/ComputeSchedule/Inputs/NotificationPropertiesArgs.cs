// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ComputeSchedule.Inputs
{

    /// <summary>
    /// The information about notifications to be send to about upcoming operations.
    /// </summary>
    public sealed class NotificationPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Where the notification should be sent. For email, it should follow email format.
        /// </summary>
        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        /// <summary>
        /// Tells if the notification is enabled or not.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// The language the notification should be sent on.
        /// </summary>
        [Input("language", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ComputeSchedule.Language> Language { get; set; } = null!;

        /// <summary>
        /// Type of notification to be sent.
        /// </summary>
        [Input("type", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ComputeSchedule.NotificationType> Type { get; set; } = null!;

        public NotificationPropertiesArgs()
        {
            Disabled = false;
        }
        public static new NotificationPropertiesArgs Empty => new NotificationPropertiesArgs();
    }
}
