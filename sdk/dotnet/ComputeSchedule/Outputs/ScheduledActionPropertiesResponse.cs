// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ComputeSchedule.Outputs
{

    /// <summary>
    /// Scheduled action properties
    /// </summary>
    [OutputType]
    public sealed class ScheduledActionPropertiesResponse
    {
        /// <summary>
        /// The action the scheduled action should perform in the resources
        /// </summary>
        public readonly string ActionType;
        /// <summary>
        /// Tell if the scheduled action is disabled or not
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// The time when the scheduled action is supposed to stop scheduling
        /// </summary>
        public readonly string? EndTime;
        /// <summary>
        /// The notification settings for the scheduled action
        /// </summary>
        public readonly ImmutableArray<Outputs.NotificationPropertiesResponse> NotificationSettings;
        /// <summary>
        /// The status of the last provisioning operation performed on the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of resource the scheduled action is targeting
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// The schedule the scheduled action is supposed to follow
        /// </summary>
        public readonly Outputs.ScheduledActionsScheduleResponse Schedule;
        /// <summary>
        /// The time which the scheduled action is supposed to start running
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private ScheduledActionPropertiesResponse(
            string actionType,

            bool? disabled,

            string? endTime,

            ImmutableArray<Outputs.NotificationPropertiesResponse> notificationSettings,

            string provisioningState,

            string resourceType,

            Outputs.ScheduledActionsScheduleResponse schedule,

            string startTime)
        {
            ActionType = actionType;
            Disabled = disabled;
            EndTime = endTime;
            NotificationSettings = notificationSettings;
            ProvisioningState = provisioningState;
            ResourceType = resourceType;
            Schedule = schedule;
            StartTime = startTime;
        }
    }
}
