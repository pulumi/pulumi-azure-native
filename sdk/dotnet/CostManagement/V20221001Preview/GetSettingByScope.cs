// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement.V20221001Preview
{
    [Obsolete(@"Please use one of the variants: TagInheritanceSetting.")]
    public static class GetSettingByScope
    {
        /// <summary>
        /// Setting definition.
        /// </summary>
        public static Task<GetSettingByScopeResult> InvokeAsync(GetSettingByScopeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSettingByScopeResult>("azure-native:costmanagement/v20221001preview:getSettingByScope", args ?? new GetSettingByScopeArgs(), options.WithDefaults());

        /// <summary>
        /// Setting definition.
        /// </summary>
        public static Output<GetSettingByScopeResult> Invoke(GetSettingByScopeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSettingByScopeResult>("azure-native:costmanagement/v20221001preview:getSettingByScope", args ?? new GetSettingByScopeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSettingByScopeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The scope associated with setting. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billing profile scope.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        /// <summary>
        /// Setting type.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetSettingByScopeArgs()
        {
        }
        public static new GetSettingByScopeArgs Empty => new GetSettingByScopeArgs();
    }

    public sealed class GetSettingByScopeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The scope associated with setting. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billing profile scope.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// Setting type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetSettingByScopeInvokeArgs()
        {
        }
        public static new GetSettingByScopeInvokeArgs Empty => new GetSettingByScopeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSettingByScopeResult
    {
        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies the kind of settings.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSettingByScopeResult(
            string? eTag,

            string id,

            string kind,

            string name,

            string type)
        {
            ETag = eTag;
            Id = id;
            Kind = kind;
            Name = name;
            Type = type;
        }
    }
}
