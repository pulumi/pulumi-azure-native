// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement
{
    /// <summary>
    /// State of the myscope setting.
    /// API Version: 2019-11-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:costmanagement:Setting")]
    public partial class Setting : Pulumi.CustomResource
    {
        /// <summary>
        /// Array of scopes with additional details used by Cost Management in the Azure portal.
        /// </summary>
        [Output("cache")]
        public Output<ImmutableArray<Outputs.SettingsPropertiesResponseCache>> Cache { get; private set; } = null!;

        /// <summary>
        /// Resource kind.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Sets the default scope the current user will see when they sign into Azure Cost Management in the Azure portal.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// Indicates what scope Cost Management in the Azure portal should default to. Allowed values: LastUsed.
        /// </summary>
        [Output("startOn")]
        public Output<string?> StartOn { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Setting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Setting(string name, SettingArgs args, CustomResourceOptions? options = null)
            : base("azure-native:costmanagement:Setting", name, args ?? new SettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Setting(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:costmanagement:Setting", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:costmanagement/v20191101:Setting"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Setting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Setting Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Setting(name, id, options);
        }
    }

    public sealed class SettingArgs : Pulumi.ResourceArgs
    {
        [Input("cache")]
        private InputList<Inputs.SettingsPropertiesCacheArgs>? _cache;

        /// <summary>
        /// Array of scopes with additional details used by Cost Management in the Azure portal.
        /// </summary>
        public InputList<Inputs.SettingsPropertiesCacheArgs> Cache
        {
            get => _cache ?? (_cache = new InputList<Inputs.SettingsPropertiesCacheArgs>());
            set => _cache = value;
        }

        /// <summary>
        /// Sets the default scope the current user will see when they sign into Azure Cost Management in the Azure portal.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// Name of the setting. Allowed values: myscope
        /// </summary>
        [Input("settingName")]
        public Input<string>? SettingName { get; set; }

        /// <summary>
        /// Indicates what scope Cost Management in the Azure portal should default to. Allowed values: LastUsed.
        /// </summary>
        [Input("startOn")]
        public Input<string>? StartOn { get; set; }

        public SettingArgs()
        {
        }
    }
}
