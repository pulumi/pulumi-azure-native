// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CostManagement.Outputs
{

    [OutputType]
    public sealed class ViewPropertiesResponseResult
    {
        /// <summary>
        /// Show costs accumulated over time.
        /// </summary>
        public readonly string? Accumulated;
        /// <summary>
        /// Chart type of the main view in Cost Analysis. Required.
        /// </summary>
        public readonly string? Chart;
        /// <summary>
        /// Date the user created this view.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// User input name of the view. Required.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// List of KPIs to show in Cost Analysis UI.
        /// </summary>
        public readonly ImmutableArray<Outputs.KpiPropertiesResponseResult> Kpis;
        /// <summary>
        /// Metric to use when displaying costs.
        /// </summary>
        public readonly string? Metric;
        /// <summary>
        /// Date when the user last modified this view.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// Configuration of 3 sub-views in the Cost Analysis UI.
        /// </summary>
        public readonly ImmutableArray<Outputs.PivotPropertiesResponseResult> Pivots;
        /// <summary>
        /// Query body configuration. Required.
        /// </summary>
        public readonly Outputs.ReportConfigDefinitionResponseResult? Query;
        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.
        /// </summary>
        public readonly string? Scope;

        [OutputConstructor]
        private ViewPropertiesResponseResult(
            string? accumulated,

            string? chart,

            string createdOn,

            string? displayName,

            ImmutableArray<Outputs.KpiPropertiesResponseResult> kpis,

            string? metric,

            string modifiedOn,

            ImmutableArray<Outputs.PivotPropertiesResponseResult> pivots,

            Outputs.ReportConfigDefinitionResponseResult? query,

            string? scope)
        {
            Accumulated = accumulated;
            Chart = chart;
            CreatedOn = createdOn;
            DisplayName = displayName;
            Kpis = kpis;
            Metric = metric;
            ModifiedOn = modifiedOn;
            Pivots = pivots;
            Query = query;
            Scope = scope;
        }
    }
}
