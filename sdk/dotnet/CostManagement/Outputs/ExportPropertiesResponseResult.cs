// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.CostManagement.Outputs
{

    [OutputType]
    public sealed class ExportPropertiesResponseResult
    {
        /// <summary>
        /// Has the definition for the export.
        /// </summary>
        public readonly Outputs.ExportDefinitionResponseResult Definition;
        /// <summary>
        /// Has delivery information for the export.
        /// </summary>
        public readonly Outputs.ExportDeliveryInfoResponseResult DeliveryInfo;
        /// <summary>
        /// The format of the export being delivered. Currently only 'Csv' is supported.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// If the export has an active schedule, provides an estimate of the next execution time.
        /// </summary>
        public readonly string NextRunTimeEstimate;
        /// <summary>
        /// If requested, has the most recent execution history for the export.
        /// </summary>
        public readonly Outputs.ExportExecutionListResultResponseResult? RunHistory;
        /// <summary>
        /// Has schedule information for the export.
        /// </summary>
        public readonly Outputs.ExportScheduleResponseResult? Schedule;

        [OutputConstructor]
        private ExportPropertiesResponseResult(
            Outputs.ExportDefinitionResponseResult definition,

            Outputs.ExportDeliveryInfoResponseResult deliveryInfo,

            string? format,

            string nextRunTimeEstimate,

            Outputs.ExportExecutionListResultResponseResult? runHistory,

            Outputs.ExportScheduleResponseResult? schedule)
        {
            Definition = definition;
            DeliveryInfo = deliveryInfo;
            Format = format;
            NextRunTimeEstimate = nextRunTimeEstimate;
            RunHistory = runHistory;
            Schedule = schedule;
        }
    }
}
