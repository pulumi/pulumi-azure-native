// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement
{
    public static class GetMarkupRule
    {
        /// <summary>
        /// Get a markup rule by its rule name.
        /// API Version: 2022-10-05-preview.
        /// </summary>
        public static Task<GetMarkupRuleResult> InvokeAsync(GetMarkupRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMarkupRuleResult>("azure-native:costmanagement:getMarkupRule", args ?? new GetMarkupRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Get a markup rule by its rule name.
        /// API Version: 2022-10-05-preview.
        /// </summary>
        public static Output<GetMarkupRuleResult> Invoke(GetMarkupRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMarkupRuleResult>("azure-native:costmanagement:getMarkupRule", args ?? new GetMarkupRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMarkupRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// BillingAccount ID
        /// </summary>
        [Input("billingAccountId", required: true)]
        public string BillingAccountId { get; set; } = null!;

        /// <summary>
        /// BillingProfile ID
        /// </summary>
        [Input("billingProfileId", required: true)]
        public string BillingProfileId { get; set; } = null!;

        /// <summary>
        /// Markup rule name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMarkupRuleArgs()
        {
        }
        public static new GetMarkupRuleArgs Empty => new GetMarkupRuleArgs();
    }

    public sealed class GetMarkupRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// BillingAccount ID
        /// </summary>
        [Input("billingAccountId", required: true)]
        public Input<string> BillingAccountId { get; set; } = null!;

        /// <summary>
        /// BillingProfile ID
        /// </summary>
        [Input("billingProfileId", required: true)]
        public Input<string> BillingProfileId { get; set; } = null!;

        /// <summary>
        /// Markup rule name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetMarkupRuleInvokeArgs()
        {
        }
        public static new GetMarkupRuleInvokeArgs Empty => new GetMarkupRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetMarkupRuleResult
    {
        /// <summary>
        /// Customer information for the markup rule.
        /// </summary>
        public readonly Outputs.CustomerMetadataResponse CustomerDetails;
        /// <summary>
        /// The description of the markup rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
        /// </summary>
        public readonly string? ETag;
        /// <summary>
        /// Ending date of the markup rule.
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The markup percentage of the rule.
        /// </summary>
        public readonly double Percentage;
        /// <summary>
        /// Starting date of the markup rule.
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMarkupRuleResult(
            Outputs.CustomerMetadataResponse customerDetails,

            string? description,

            string? eTag,

            string? endDate,

            string id,

            string name,

            double percentage,

            string startDate,

            string type)
        {
            CustomerDetails = customerDetails;
            Description = description;
            ETag = eTag;
            EndDate = endDate;
            Id = id;
            Name = name;
            Percentage = percentage;
            StartDate = startDate;
            Type = type;
        }
    }
}
