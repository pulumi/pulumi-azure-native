// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement.V20231101.Outputs
{

    /// <summary>
    /// The properties of the schedule.
    /// </summary>
    [OutputType]
    public sealed class SchedulePropertiesResponse
    {
        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        public readonly int? DayOfMonth;
        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.
        /// </summary>
        public readonly ImmutableArray<string> DaysOfWeek;
        /// <summary>
        /// The end date and time of the scheduled action (UTC).
        /// </summary>
        public readonly string EndDate;
        /// <summary>
        /// Frequency of the schedule.
        /// </summary>
        public readonly string Frequency;
        /// <summary>
        /// UTC time at which cost analysis data will be emailed.
        /// </summary>
        public readonly int? HourOfDay;
        /// <summary>
        /// The start date and time of the scheduled action (UTC).
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.
        /// </summary>
        public readonly ImmutableArray<string> WeeksOfMonth;

        [OutputConstructor]
        private SchedulePropertiesResponse(
            int? dayOfMonth,

            ImmutableArray<string> daysOfWeek,

            string endDate,

            string frequency,

            int? hourOfDay,

            string startDate,

            ImmutableArray<string> weeksOfMonth)
        {
            DayOfMonth = dayOfMonth;
            DaysOfWeek = daysOfWeek;
            EndDate = endDate;
            Frequency = frequency;
            HourOfDay = hourOfDay;
            StartDate = startDate;
            WeeksOfMonth = weeksOfMonth;
        }
    }
}
