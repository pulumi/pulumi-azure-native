// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement
{
    public static class GetReportByResourceGroupName
    {
        /// <summary>
        /// Gets the report for a resource group under a subscription by report name.
        /// Azure REST API version: 2018-08-01-preview.
        /// </summary>
        public static Task<GetReportByResourceGroupNameResult> InvokeAsync(GetReportByResourceGroupNameArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReportByResourceGroupNameResult>("azure-native:costmanagement:getReportByResourceGroupName", args ?? new GetReportByResourceGroupNameArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the report for a resource group under a subscription by report name.
        /// Azure REST API version: 2018-08-01-preview.
        /// </summary>
        public static Output<GetReportByResourceGroupNameResult> Invoke(GetReportByResourceGroupNameInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReportByResourceGroupNameResult>("azure-native:costmanagement:getReportByResourceGroupName", args ?? new GetReportByResourceGroupNameInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportByResourceGroupNameArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName", required: true)]
        public string ReportName { get; set; } = null!;

        /// <summary>
        /// Azure Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetReportByResourceGroupNameArgs()
        {
        }
        public static new GetReportByResourceGroupNameArgs Empty => new GetReportByResourceGroupNameArgs();
    }

    public sealed class GetReportByResourceGroupNameInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report Name.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        /// <summary>
        /// Azure Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetReportByResourceGroupNameInvokeArgs()
        {
        }
        public static new GetReportByResourceGroupNameInvokeArgs Empty => new GetReportByResourceGroupNameInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportByResourceGroupNameResult
    {
        /// <summary>
        /// Has definition for the report.
        /// </summary>
        public readonly Outputs.ReportDefinitionResponse Definition;
        /// <summary>
        /// Has delivery information for the report.
        /// </summary>
        public readonly Outputs.ReportDeliveryInfoResponse DeliveryInfo;
        /// <summary>
        /// The format of the report being delivered.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Has schedule information for the report.
        /// </summary>
        public readonly Outputs.ReportScheduleResponse? Schedule;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetReportByResourceGroupNameResult(
            Outputs.ReportDefinitionResponse definition,

            Outputs.ReportDeliveryInfoResponse deliveryInfo,

            string? format,

            string id,

            string name,

            Outputs.ReportScheduleResponse? schedule,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Definition = definition;
            DeliveryInfo = deliveryInfo;
            Format = format;
            Id = id;
            Name = name;
            Schedule = schedule;
            Tags = tags;
            Type = type;
        }
    }
}
