// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CostManagement.V20180801Preview.Inputs
{

    /// <summary>
    /// The definition of data present in the report.
    /// </summary>
    public sealed class ReportDatasetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation")]
        private InputMap<Inputs.ReportAggregationArgs>? _aggregation;

        /// <summary>
        /// Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses.
        /// </summary>
        public InputMap<Inputs.ReportAggregationArgs> Aggregation
        {
            get => _aggregation ?? (_aggregation = new InputMap<Inputs.ReportAggregationArgs>());
            set => _aggregation = value;
        }

        /// <summary>
        /// Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.ReportDatasetConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// Has filter expression to use in the report.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.ReportFilterArgs>? Filter { get; set; }

        /// <summary>
        /// The granularity of rows in the report.
        /// </summary>
        [Input("granularity")]
        public Input<string>? Granularity { get; set; }

        [Input("grouping")]
        private InputList<Inputs.ReportGroupingArgs>? _grouping;

        /// <summary>
        /// Array of group by expression to use in the report. Report can have up to 2 group by clauses.
        /// </summary>
        public InputList<Inputs.ReportGroupingArgs> Grouping
        {
            get => _grouping ?? (_grouping = new InputList<Inputs.ReportGroupingArgs>());
            set => _grouping = value;
        }

        public ReportDatasetArgs()
        {
        }
    }
}
