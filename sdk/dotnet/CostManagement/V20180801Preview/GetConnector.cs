// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CostManagement.V20180801Preview
{
    public static class GetConnector
    {
        public static Task<GetConnectorResult> InvokeAsync(GetConnectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConnectorResult>("azure-nextgen:costmanagement/v20180801preview:getConnector", args ?? new GetConnectorArgs(), options.WithVersion());
    }


    public sealed class GetConnectorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Connector Name.
        /// </summary>
        [Input("connectorName", required: true)]
        public string ConnectorName { get; set; } = null!;

        /// <summary>
        /// Azure Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConnectorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConnectorResult
    {
        /// <summary>
        /// Collection information
        /// </summary>
        public readonly Outputs.ConnectorCollectionInfoResponse Collection;
        /// <summary>
        /// Connector definition creation datetime
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Credentials authentication key (eg AWS ARN)
        /// </summary>
        public readonly string? CredentialsKey;
        /// <summary>
        /// Credentials secret (eg AWS ExternalId)
        /// </summary>
        public readonly string? CredentialsSecret;
        /// <summary>
        /// Connector DisplayName (defaults to Name)
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Connector kind (eg aws)
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Connector location
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Connector last modified datetime
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// Connector name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Connector providerAccountId (determined from credentials)
        /// </summary>
        public readonly string ProviderAccountId;
        /// <summary>
        /// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
        /// </summary>
        public readonly string? ReportId;
        /// <summary>
        /// Connector status
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Connector type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConnectorResult(
            Outputs.ConnectorCollectionInfoResponse collection,

            string createdOn,

            string? credentialsKey,

            string? credentialsSecret,

            string? displayName,

            string? kind,

            string? location,

            string modifiedOn,

            string name,

            string providerAccountId,

            string? reportId,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Collection = collection;
            CreatedOn = createdOn;
            CredentialsKey = credentialsKey;
            CredentialsSecret = credentialsSecret;
            DisplayName = displayName;
            Kind = kind;
            Location = location;
            ModifiedOn = modifiedOn;
            Name = name;
            ProviderAccountId = providerAccountId;
            ReportId = reportId;
            Status = status;
            Tags = tags;
            Type = type;
        }
    }
}
