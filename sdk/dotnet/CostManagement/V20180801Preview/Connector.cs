// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CostManagement.V20180801Preview
{
    /// <summary>
    /// The Connector model definition
    /// </summary>
    public partial class Connector : Pulumi.CustomResource
    {
        /// <summary>
        /// Collection information
        /// </summary>
        [Output("collection")]
        public Output<Outputs.ConnectorCollectionInfoResponse> Collection { get; private set; } = null!;

        /// <summary>
        /// Connector definition creation datetime
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Credentials authentication key (eg AWS ARN)
        /// </summary>
        [Output("credentialsKey")]
        public Output<string?> CredentialsKey { get; private set; } = null!;

        /// <summary>
        /// Credentials secret (eg AWS ExternalId)
        /// </summary>
        [Output("credentialsSecret")]
        public Output<string?> CredentialsSecret { get; private set; } = null!;

        /// <summary>
        /// Connector DisplayName (defaults to Name)
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Connector kind (eg aws)
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Connector location
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Connector last modified datetime
        /// </summary>
        [Output("modifiedOn")]
        public Output<string> ModifiedOn { get; private set; } = null!;

        /// <summary>
        /// Connector name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Connector providerAccountId (determined from credentials)
        /// </summary>
        [Output("providerAccountId")]
        public Output<string> ProviderAccountId { get; private set; } = null!;

        /// <summary>
        /// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
        /// </summary>
        [Output("reportId")]
        public Output<string?> ReportId { get; private set; } = null!;

        /// <summary>
        /// Connector status
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Connector type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Connector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connector(string name, ConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:costmanagement/v20180801preview:Connector", name, args ?? new ConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:costmanagement/v20180801preview:Connector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Connector(name, id, options);
        }
    }

    public sealed class ConnectorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connector Name.
        /// </summary>
        [Input("connectorName", required: true)]
        public Input<string> ConnectorName { get; set; } = null!;

        /// <summary>
        /// Credentials authentication key (eg AWS ARN)
        /// </summary>
        [Input("credentialsKey")]
        public Input<string>? CredentialsKey { get; set; }

        /// <summary>
        /// Credentials secret (eg AWS ExternalId)
        /// </summary>
        [Input("credentialsSecret")]
        public Input<string>? CredentialsSecret { get; set; }

        /// <summary>
        /// Connector DisplayName (defaults to Name)
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Connector kind (eg aws)
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Connector location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
        /// </summary>
        [Input("reportId")]
        public Input<string>? ReportId { get; set; }

        /// <summary>
        /// Azure Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Connector status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ConnectorArgs()
        {
        }
    }
}
