// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.CostManagement.Latest
{
    [Obsolete(@"The 'latest' version is deprecated. Please migrate to the function in the top-level module: 'azure-native:costmanagement:getSetting'.")]
    public static class GetSetting
    {
        /// <summary>
        /// State of Setting
        /// Latest API Version: 2019-11-01.
        /// </summary>
        public static Task<GetSettingResult> InvokeAsync(GetSettingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSettingResult>("azure-native:costmanagement/latest:getSetting", args ?? new GetSettingArgs(), options.WithVersion());
    }


    public sealed class GetSettingArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the setting. Allowed values: myscope
        /// </summary>
        [Input("settingName", required: true)]
        public string SettingName { get; set; } = null!;

        public GetSettingArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSettingResult
    {
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource kind
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// For the myscope setting, sets the default scope the current user will see when they sign into Azure Cost Management in the Azure portal.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSettingResult(
            string id,

            string kind,

            string name,

            string? scope,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            Scope = scope;
            Type = type;
        }
    }
}
