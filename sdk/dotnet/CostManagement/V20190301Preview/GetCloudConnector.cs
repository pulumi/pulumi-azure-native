// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CostManagement.V20190301Preview
{
    public static class GetCloudConnector
    {
        public static Task<GetCloudConnectorResult> InvokeAsync(GetCloudConnectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudConnectorResult>("azure-nextgen:costmanagement/v20190301preview:getCloudConnector", args ?? new GetCloudConnectorArgs(), options.WithVersion());
    }


    public sealed class GetCloudConnectorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Connector Name.
        /// </summary>
        [Input("connectorName", required: true)]
        public string ConnectorName { get; set; } = null!;

        /// <summary>
        /// May be used to expand the collectionInfo property. By default, collectionInfo is not included.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        public GetCloudConnectorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCloudConnectorResult
    {
        /// <summary>
        /// Connector billing model
        /// </summary>
        public readonly string? BillingModel;
        /// <summary>
        /// Collection information
        /// </summary>
        public readonly Outputs.ConnectorCollectionInfoResponse CollectionInfo;
        /// <summary>
        /// Connector definition creation datetime
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Credentials authentication key (eg AWS ARN)
        /// </summary>
        public readonly string? CredentialsKey;
        /// <summary>
        /// Credentials secret (eg AWS ExternalId)
        /// </summary>
        public readonly string? CredentialsSecret;
        /// <summary>
        /// Number of days remaining of trial
        /// </summary>
        public readonly int DaysTrialRemaining;
        /// <summary>
        /// Default ManagementGroupId
        /// </summary>
        public readonly string? DefaultManagementGroupId;
        /// <summary>
        /// Connector DisplayName
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Associated ExternalBillingAccountId
        /// </summary>
        public readonly string ExternalBillingAccountId;
        /// <summary>
        /// Connector kind (eg aws)
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Connector last modified datetime
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// Connector name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The display name of the providerBillingAccountId as defined on the external provider
        /// </summary>
        public readonly string ProviderBillingAccountDisplayName;
        /// <summary>
        /// Connector providerBillingAccountId, determined from credentials (eg AWS Consolidated account number)
        /// </summary>
        public readonly string ProviderBillingAccountId;
        /// <summary>
        /// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
        /// </summary>
        public readonly string? ReportId;
        /// <summary>
        /// Connector status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Billing SubscriptionId
        /// </summary>
        public readonly string? SubscriptionId;
        /// <summary>
        /// Connector type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCloudConnectorResult(
            string? billingModel,

            Outputs.ConnectorCollectionInfoResponse collectionInfo,

            string createdOn,

            string? credentialsKey,

            string? credentialsSecret,

            int daysTrialRemaining,

            string? defaultManagementGroupId,

            string? displayName,

            string externalBillingAccountId,

            string? kind,

            string modifiedOn,

            string name,

            string providerBillingAccountDisplayName,

            string providerBillingAccountId,

            string? reportId,

            string status,

            string? subscriptionId,

            string type)
        {
            BillingModel = billingModel;
            CollectionInfo = collectionInfo;
            CreatedOn = createdOn;
            CredentialsKey = credentialsKey;
            CredentialsSecret = credentialsSecret;
            DaysTrialRemaining = daysTrialRemaining;
            DefaultManagementGroupId = defaultManagementGroupId;
            DisplayName = displayName;
            ExternalBillingAccountId = externalBillingAccountId;
            Kind = kind;
            ModifiedOn = modifiedOn;
            Name = name;
            ProviderBillingAccountDisplayName = providerBillingAccountDisplayName;
            ProviderBillingAccountId = providerBillingAccountId;
            ReportId = reportId;
            Status = status;
            SubscriptionId = subscriptionId;
            Type = type;
        }
    }
}
