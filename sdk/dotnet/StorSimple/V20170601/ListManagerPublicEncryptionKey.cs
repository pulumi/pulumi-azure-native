// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorSimple.V20170601
{
    public static class ListManagerPublicEncryptionKey
    {
        public static Task<ListManagerPublicEncryptionKeyResult> InvokeAsync(ListManagerPublicEncryptionKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListManagerPublicEncryptionKeyResult>("azure-nextgen:storsimple/v20170601:listManagerPublicEncryptionKey", args ?? new ListManagerPublicEncryptionKeyArgs(), options.WithVersion());
    }


    public sealed class ListManagerPublicEncryptionKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public string ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListManagerPublicEncryptionKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListManagerPublicEncryptionKeyResult
    {
        /// <summary>
        /// The algorithm used to encrypt the "Value".
        /// </summary>
        public readonly string EncryptionAlgorithm;
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// The thumbprint of the cert that was used to encrypt "Value".
        /// </summary>
        public readonly string? ValueCertificateThumbprint;

        [OutputConstructor]
        private ListManagerPublicEncryptionKeyResult(
            string encryptionAlgorithm,

            string value,

            string? valueCertificateThumbprint)
        {
            EncryptionAlgorithm = encryptionAlgorithm;
            Value = value;
            ValueCertificateThumbprint = valueCertificateThumbprint;
        }
    }
}
