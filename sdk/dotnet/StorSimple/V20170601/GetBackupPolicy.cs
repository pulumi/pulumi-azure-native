// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorSimple.V20170601
{
    public static class GetBackupPolicy
    {
        public static Task<GetBackupPolicyResult> InvokeAsync(GetBackupPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBackupPolicyResult>("azure-nextgen:storsimple/v20170601:getBackupPolicy", args ?? new GetBackupPolicyArgs(), options.WithVersion());
    }


    public sealed class GetBackupPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of backup policy to be fetched.
        /// </summary>
        [Input("backupPolicyName", required: true)]
        public string BackupPolicyName { get; set; } = null!;

        /// <summary>
        /// The device name
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public string ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBackupPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBackupPolicyResult
    {
        /// <summary>
        /// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
        /// </summary>
        public readonly string BackupPolicyCreationType;
        /// <summary>
        /// The Kind of the object. Currently only Series8000 is supported
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The time of the last backup for the backup policy.
        /// </summary>
        public readonly string LastBackupTime;
        /// <summary>
        /// The name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The time of the next backup for the backup policy.
        /// </summary>
        public readonly string NextBackupTime;
        /// <summary>
        /// Indicates whether at least one of the schedules in the backup policy is active or not.
        /// </summary>
        public readonly string ScheduledBackupStatus;
        /// <summary>
        /// The count of schedules the backup policy contains.
        /// </summary>
        public readonly int SchedulesCount;
        /// <summary>
        /// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
        /// </summary>
        public readonly string SsmHostName;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The path IDs of the volumes which are part of the backup policy.
        /// </summary>
        public readonly ImmutableArray<string> VolumeIds;

        [OutputConstructor]
        private GetBackupPolicyResult(
            string backupPolicyCreationType,

            string? kind,

            string lastBackupTime,

            string name,

            string nextBackupTime,

            string scheduledBackupStatus,

            int schedulesCount,

            string ssmHostName,

            string type,

            ImmutableArray<string> volumeIds)
        {
            BackupPolicyCreationType = backupPolicyCreationType;
            Kind = kind;
            LastBackupTime = lastBackupTime;
            Name = name;
            NextBackupTime = nextBackupTime;
            ScheduledBackupStatus = scheduledBackupStatus;
            SchedulesCount = schedulesCount;
            SsmHostName = ssmHostName;
            Type = type;
            VolumeIds = volumeIds;
        }
    }
}
