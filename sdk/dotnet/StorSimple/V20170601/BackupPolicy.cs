// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorSimple.V20170601
{
    /// <summary>
    /// The backup policy.
    /// </summary>
    public partial class BackupPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
        /// </summary>
        [Output("backupPolicyCreationType")]
        public Output<string> BackupPolicyCreationType { get; private set; } = null!;

        /// <summary>
        /// The Kind of the object. Currently only Series8000 is supported
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The time of the last backup for the backup policy.
        /// </summary>
        [Output("lastBackupTime")]
        public Output<string> LastBackupTime { get; private set; } = null!;

        /// <summary>
        /// The name of the object.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The time of the next backup for the backup policy.
        /// </summary>
        [Output("nextBackupTime")]
        public Output<string> NextBackupTime { get; private set; } = null!;

        /// <summary>
        /// Indicates whether at least one of the schedules in the backup policy is active or not.
        /// </summary>
        [Output("scheduledBackupStatus")]
        public Output<string> ScheduledBackupStatus { get; private set; } = null!;

        /// <summary>
        /// The count of schedules the backup policy contains.
        /// </summary>
        [Output("schedulesCount")]
        public Output<int> SchedulesCount { get; private set; } = null!;

        /// <summary>
        /// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
        /// </summary>
        [Output("ssmHostName")]
        public Output<string> SsmHostName { get; private set; } = null!;

        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The path IDs of the volumes which are part of the backup policy.
        /// </summary>
        [Output("volumeIds")]
        public Output<ImmutableArray<string>> VolumeIds { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPolicy(string name, BackupPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storsimple/v20170601:BackupPolicy", name, args ?? new BackupPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storsimple/v20170601:BackupPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storsimple/latest:BackupPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BackupPolicy(name, id, options);
        }
    }

    public sealed class BackupPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the backup policy to be created/updated.
        /// </summary>
        [Input("backupPolicyName", required: true)]
        public Input<string> BackupPolicyName { get; set; } = null!;

        /// <summary>
        /// The device name
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The Kind of the object. Currently only Series8000 is supported
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public Input<string> ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("volumeIds", required: true)]
        private InputList<string>? _volumeIds;

        /// <summary>
        /// The path IDs of the volumes which are part of the backup policy.
        /// </summary>
        public InputList<string> VolumeIds
        {
            get => _volumeIds ?? (_volumeIds = new InputList<string>());
            set => _volumeIds = value;
        }

        public BackupPolicyArgs()
        {
        }
    }
}
