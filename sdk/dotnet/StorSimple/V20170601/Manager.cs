// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorSimple.V20170601
{
    /// <summary>
    /// The StorSimple Manager.
    /// </summary>
    public partial class Manager : Pulumi.CustomResource
    {
        /// <summary>
        /// Represents the type of StorSimple Manager.
        /// </summary>
        [Output("cisIntrinsicSettings")]
        public Output<Outputs.ManagerIntrinsicSettingsResponse?> CisIntrinsicSettings { get; private set; } = null!;

        /// <summary>
        /// The etag of the manager.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The geo location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Specifies the Sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ManagerSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// The tags attached to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Manager resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Manager(string name, ManagerArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storsimple/v20170601:Manager", name, args ?? new ManagerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Manager(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storsimple/v20170601:Manager", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storsimple/latest:Manager"},
                    new Pulumi.Alias { Type = "azure-nextgen:storsimple/v20161001:Manager"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Manager resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Manager Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Manager(name, id, options);
        }
    }

    public sealed class ManagerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents the type of StorSimple Manager.
        /// </summary>
        [Input("cisIntrinsicSettings")]
        public Input<Inputs.ManagerIntrinsicSettingsArgs>? CisIntrinsicSettings { get; set; }

        /// <summary>
        /// The etag of the manager.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The geo location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public Input<string> ManagerName { get; set; } = null!;

        /// <summary>
        /// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the Sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ManagerSkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags attached to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ManagerArgs()
        {
        }
    }
}
