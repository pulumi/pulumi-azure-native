// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorSimple.V20170601
{
    public static class GetStorageAccountCredential
    {
        /// <summary>
        /// Gets the properties of the specified storage account credential name.
        /// </summary>
        public static Task<GetStorageAccountCredentialResult> InvokeAsync(GetStorageAccountCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageAccountCredentialResult>("azure-native:storsimple/v20170601:getStorageAccountCredential", args ?? new GetStorageAccountCredentialArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the properties of the specified storage account credential name.
        /// </summary>
        public static Output<GetStorageAccountCredentialResult> Invoke(GetStorageAccountCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageAccountCredentialResult>("azure-native:storsimple/v20170601:getStorageAccountCredential", args ?? new GetStorageAccountCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageAccountCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public string ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of storage account credential to be fetched.
        /// </summary>
        [Input("storageAccountCredentialName", required: true)]
        public string StorageAccountCredentialName { get; set; } = null!;

        public GetStorageAccountCredentialArgs()
        {
        }
        public static new GetStorageAccountCredentialArgs Empty => new GetStorageAccountCredentialArgs();
    }

    public sealed class GetStorageAccountCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public Input<string> ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of storage account credential to be fetched.
        /// </summary>
        [Input("storageAccountCredentialName", required: true)]
        public Input<string> StorageAccountCredentialName { get; set; } = null!;

        public GetStorageAccountCredentialInvokeArgs()
        {
        }
        public static new GetStorageAccountCredentialInvokeArgs Empty => new GetStorageAccountCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageAccountCredentialResult
    {
        /// <summary>
        /// The path ID that uniquely identifies the object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Kind of the object. Currently only Series8000 is supported
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The storage account credential properties.
        /// </summary>
        public readonly Outputs.StorageAccountCredentialPropertiesResponse Properties;
        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageAccountCredentialResult(
            string id,

            string? kind,

            string name,

            Outputs.StorageAccountCredentialPropertiesResponse properties,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
