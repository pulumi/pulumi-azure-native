// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorSimple
{
    public static class GetManager
    {
        /// <summary>
        /// The StorSimple Manager.
        /// API Version: 2017-06-01.
        /// </summary>
        public static Task<GetManagerResult> InvokeAsync(GetManagerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagerResult>("azure-native:storsimple:getManager", args ?? new GetManagerArgs(), options.WithDefaults());

        /// <summary>
        /// The StorSimple Manager.
        /// API Version: 2017-06-01.
        /// </summary>
        public static Output<GetManagerResult> Invoke(GetManagerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagerResult>("azure-native:storsimple:getManager", args ?? new GetManagerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagerArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public string ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagerArgs()
        {
        }
    }

    public sealed class GetManagerInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public Input<string> ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagerInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagerResult
    {
        /// <summary>
        /// Represents the type of StorSimple Manager.
        /// </summary>
        public readonly Outputs.ManagerIntrinsicSettingsResponse? CisIntrinsicSettings;
        /// <summary>
        /// The etag of the manager.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo location of the resource.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Specifies the Sku.
        /// </summary>
        public readonly Outputs.ManagerSkuResponse? Sku;
        /// <summary>
        /// The tags attached to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagerResult(
            Outputs.ManagerIntrinsicSettingsResponse? cisIntrinsicSettings,

            string? etag,

            string id,

            string location,

            string name,

            string? provisioningState,

            Outputs.ManagerSkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CisIntrinsicSettings = cisIntrinsicSettings;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
