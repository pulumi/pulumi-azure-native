// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorSimple.Inputs
{

    /// <summary>
    /// The iSCSI disk properties.
    /// </summary>
    public sealed class ISCSIDiskPropertiesResponseArgs : Pulumi.ResourceArgs
    {
        [Input("accessControlRecords", required: true)]
        private InputList<string>? _accessControlRecords;

        /// <summary>
        /// The access control records.
        /// </summary>
        public InputList<string> AccessControlRecords
        {
            get => _accessControlRecords ?? (_accessControlRecords = new InputList<string>());
            set => _accessControlRecords = value;
        }

        /// <summary>
        /// The data policy.
        /// </summary>
        [Input("dataPolicy", required: true)]
        public Input<string> DataPolicy { get; set; } = null!;

        /// <summary>
        /// The description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The disk status.
        /// </summary>
        [Input("diskStatus", required: true)]
        public Input<string> DiskStatus { get; set; } = null!;

        /// <summary>
        /// The local used capacity in bytes.
        /// </summary>
        [Input("localUsedCapacityInBytes", required: true)]
        public Input<int> LocalUsedCapacityInBytes { get; set; } = null!;

        /// <summary>
        /// The monitoring.
        /// </summary>
        [Input("monitoringStatus", required: true)]
        public Input<string> MonitoringStatus { get; set; } = null!;

        /// <summary>
        /// The provisioned capacity in bytes.
        /// </summary>
        [Input("provisionedCapacityInBytes", required: true)]
        public Input<int> ProvisionedCapacityInBytes { get; set; } = null!;

        /// <summary>
        /// The used capacity in bytes.
        /// </summary>
        [Input("usedCapacityInBytes", required: true)]
        public Input<int> UsedCapacityInBytes { get; set; } = null!;

        public ISCSIDiskPropertiesResponseArgs()
        {
        }
    }
}
