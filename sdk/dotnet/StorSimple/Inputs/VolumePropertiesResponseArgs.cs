// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorSimple.Inputs
{

    /// <summary>
    /// The properties of volume.
    /// </summary>
    public sealed class VolumePropertiesResponseArgs : Pulumi.ResourceArgs
    {
        [Input("accessControlRecordIds", required: true)]
        private InputList<string>? _accessControlRecordIds;

        /// <summary>
        /// The IDs of the access control records, associated with the volume.
        /// </summary>
        public InputList<string> AccessControlRecordIds
        {
            get => _accessControlRecordIds ?? (_accessControlRecordIds = new InputList<string>());
            set => _accessControlRecordIds = value;
        }

        [Input("backupPolicyIds", required: true)]
        private InputList<string>? _backupPolicyIds;

        /// <summary>
        /// The IDs of the backup policies, in which this volume is part of.
        /// </summary>
        public InputList<string> BackupPolicyIds
        {
            get => _backupPolicyIds ?? (_backupPolicyIds = new InputList<string>());
            set => _backupPolicyIds = value;
        }

        /// <summary>
        /// The backup status of the volume.
        /// </summary>
        [Input("backupStatus", required: true)]
        public Input<string> BackupStatus { get; set; } = null!;

        /// <summary>
        /// The monitoring status of the volume.
        /// </summary>
        [Input("monitoringStatus", required: true)]
        public Input<string> MonitoringStatus { get; set; } = null!;

        /// <summary>
        /// The operation status on the volume.
        /// </summary>
        [Input("operationStatus", required: true)]
        public Input<string> OperationStatus { get; set; } = null!;

        /// <summary>
        /// The size of the volume in bytes.
        /// </summary>
        [Input("sizeInBytes", required: true)]
        public Input<int> SizeInBytes { get; set; } = null!;

        /// <summary>
        /// The ID of the volume container, in which this volume is created.
        /// </summary>
        [Input("volumeContainerId", required: true)]
        public Input<string> VolumeContainerId { get; set; } = null!;

        /// <summary>
        /// The volume status.
        /// </summary>
        [Input("volumeStatus", required: true)]
        public Input<string> VolumeStatus { get; set; } = null!;

        /// <summary>
        /// The type of the volume.
        /// </summary>
        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        public VolumePropertiesResponseArgs()
        {
        }
    }
}
