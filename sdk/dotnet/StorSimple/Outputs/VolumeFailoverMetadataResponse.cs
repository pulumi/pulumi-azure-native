// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorSimple.Outputs
{

    /// <summary>
    /// The metadata of a volume that has valid cloud snapshot.
    /// </summary>
    [OutputType]
    public sealed class VolumeFailoverMetadataResponse
    {
        /// <summary>
        /// The date at which the snapshot was taken.
        /// </summary>
        public readonly string? BackupCreatedDate;
        /// <summary>
        /// The path ID of the backup-element for this volume, inside the backup set.
        /// </summary>
        public readonly string? BackupElementId;
        /// <summary>
        /// The path ID of the backup set.
        /// </summary>
        public readonly string? BackupId;
        /// <summary>
        /// The path ID of the backup policy using which the snapshot was taken.
        /// </summary>
        public readonly string? BackupPolicyId;
        /// <summary>
        /// The size of the volume in bytes at the time the snapshot was taken.
        /// </summary>
        public readonly double? SizeInBytes;
        /// <summary>
        /// The path ID of the volume.
        /// </summary>
        public readonly string? VolumeId;
        /// <summary>
        /// The type of the volume.
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private VolumeFailoverMetadataResponse(
            string? backupCreatedDate,

            string? backupElementId,

            string? backupId,

            string? backupPolicyId,

            double? sizeInBytes,

            string? volumeId,

            string? volumeType)
        {
            BackupCreatedDate = backupCreatedDate;
            BackupElementId = backupElementId;
            BackupId = backupId;
            BackupPolicyId = backupPolicyId;
            SizeInBytes = sizeInBytes;
            VolumeId = volumeId;
            VolumeType = volumeType;
        }
    }
}
