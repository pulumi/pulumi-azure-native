// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorSimple.Outputs
{

    [OutputType]
    public sealed class ISCSIDiskPropertiesResponseResult
    {
        /// <summary>
        /// The access control records.
        /// </summary>
        public readonly ImmutableArray<string> AccessControlRecords;
        /// <summary>
        /// The data policy.
        /// </summary>
        public readonly string DataPolicy;
        /// <summary>
        /// The description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The disk status.
        /// </summary>
        public readonly string DiskStatus;
        /// <summary>
        /// The local used capacity in bytes.
        /// </summary>
        public readonly int LocalUsedCapacityInBytes;
        /// <summary>
        /// The monitoring.
        /// </summary>
        public readonly string MonitoringStatus;
        /// <summary>
        /// The provisioned capacity in bytes.
        /// </summary>
        public readonly int ProvisionedCapacityInBytes;
        /// <summary>
        /// The used capacity in bytes.
        /// </summary>
        public readonly int UsedCapacityInBytes;

        [OutputConstructor]
        private ISCSIDiskPropertiesResponseResult(
            ImmutableArray<string> accessControlRecords,

            string dataPolicy,

            string? description,

            string diskStatus,

            int localUsedCapacityInBytes,

            string monitoringStatus,

            int provisionedCapacityInBytes,

            int usedCapacityInBytes)
        {
            AccessControlRecords = accessControlRecords;
            DataPolicy = dataPolicy;
            Description = description;
            DiskStatus = diskStatus;
            LocalUsedCapacityInBytes = localUsedCapacityInBytes;
            MonitoringStatus = monitoringStatus;
            ProvisionedCapacityInBytes = provisionedCapacityInBytes;
            UsedCapacityInBytes = usedCapacityInBytes;
        }
    }
}
