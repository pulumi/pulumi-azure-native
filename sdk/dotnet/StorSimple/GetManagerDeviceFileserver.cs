// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorSimple
{
    public static class GetManagerDeviceFileserver
    {
        public static Task<GetManagerDeviceFileserverResult> InvokeAsync(GetManagerDeviceFileserverArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagerDeviceFileserverResult>("azurerm:storsimple:getManagerDeviceFileserver", args ?? new GetManagerDeviceFileserverArgs(), options.WithVersion());
    }


    public sealed class GetManagerDeviceFileserverArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public string ManagerName { get; set; } = null!;

        /// <summary>
        /// The file server name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagerDeviceFileserverArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagerDeviceFileserverResult
    {
        /// <summary>
        /// The name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The properties.
        /// </summary>
        public readonly Outputs.FileServerPropertiesResponseResult Properties;
        /// <summary>
        /// The type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetManagerDeviceFileserverResult(
            string name,

            Outputs.FileServerPropertiesResponseResult properties,

            string type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
