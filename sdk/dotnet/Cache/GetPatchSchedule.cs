// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cache
{
    public static class GetPatchSchedule
    {
        /// <summary>
        /// Gets the patching schedule of a redis cache.
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2023-05-01-preview, 2023-08-01, 2024-03-01, 2024-04-01-preview, 2024-11-01.
        /// </summary>
        public static Task<GetPatchScheduleResult> InvokeAsync(GetPatchScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPatchScheduleResult>("azure-native:cache:getPatchSchedule", args ?? new GetPatchScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the patching schedule of a redis cache.
        /// Azure REST API version: 2023-04-01.
        /// 
        /// Other available API versions: 2023-05-01-preview, 2023-08-01, 2024-03-01, 2024-04-01-preview, 2024-11-01.
        /// </summary>
        public static Output<GetPatchScheduleResult> Invoke(GetPatchScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPatchScheduleResult>("azure-native:cache:getPatchSchedule", args ?? new GetPatchScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPatchScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Default string modeled as parameter for auto generation to work correctly.
        /// </summary>
        [Input("default", required: true)]
        public string Default { get; set; } = null!;

        /// <summary>
        /// The name of the redis cache.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPatchScheduleArgs()
        {
        }
        public static new GetPatchScheduleArgs Empty => new GetPatchScheduleArgs();
    }

    public sealed class GetPatchScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Default string modeled as parameter for auto generation to work correctly.
        /// </summary>
        [Input("default", required: true)]
        public Input<string> Default { get; set; } = null!;

        /// <summary>
        /// The name of the redis cache.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPatchScheduleInvokeArgs()
        {
        }
        public static new GetPatchScheduleInvokeArgs Empty => new GetPatchScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetPatchScheduleResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of patch schedules for a Redis cache.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScheduleEntryResponse> ScheduleEntries;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPatchScheduleResult(
            string id,

            string location,

            string name,

            ImmutableArray<Outputs.ScheduleEntryResponse> scheduleEntries,

            string type)
        {
            Id = id;
            Location = location;
            Name = name;
            ScheduleEntries = scheduleEntries;
            Type = type;
        }
    }
}
