// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cache.V20170201
{
    [Obsolete(@"Version 2017-02-01 will be removed in v2 of the provider.")]
    public static class GetRedisLinkedServer
    {
        /// <summary>
        /// Response to put/get linked server (with properties) for Redis cache.
        /// </summary>
        public static Task<GetRedisLinkedServerResult> InvokeAsync(GetRedisLinkedServerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRedisLinkedServerResult>("azure-native:cache/v20170201:getRedisLinkedServer", args ?? new GetRedisLinkedServerArgs(), options.WithDefaults());

        /// <summary>
        /// Response to put/get linked server (with properties) for Redis cache.
        /// </summary>
        public static Output<GetRedisLinkedServerResult> Invoke(GetRedisLinkedServerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRedisLinkedServerResult>("azure-native:cache/v20170201:getRedisLinkedServer", args ?? new GetRedisLinkedServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRedisLinkedServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the linked server.
        /// </summary>
        [Input("linkedServerName", required: true)]
        public string LinkedServerName { get; set; } = null!;

        /// <summary>
        /// The name of the redis cache.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetRedisLinkedServerArgs()
        {
        }
        public static new GetRedisLinkedServerArgs Empty => new GetRedisLinkedServerArgs();
    }

    public sealed class GetRedisLinkedServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the linked server.
        /// </summary>
        [Input("linkedServerName", required: true)]
        public Input<string> LinkedServerName { get; set; } = null!;

        /// <summary>
        /// The name of the redis cache.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetRedisLinkedServerInvokeArgs()
        {
        }
        public static new GetRedisLinkedServerInvokeArgs Empty => new GetRedisLinkedServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetRedisLinkedServerResult
    {
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Fully qualified resourceId of the linked redis cache.
        /// </summary>
        public readonly string LinkedRedisCacheId;
        /// <summary>
        /// Location of the linked redis cache.
        /// </summary>
        public readonly string LinkedRedisCacheLocation;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Terminal state of the link between primary and secondary redis cache.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Role of the linked server.
        /// </summary>
        public readonly string ServerRole;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRedisLinkedServerResult(
            string id,

            string linkedRedisCacheId,

            string linkedRedisCacheLocation,

            string name,

            string provisioningState,

            string serverRole,

            string type)
        {
            Id = id;
            LinkedRedisCacheId = linkedRedisCacheId;
            LinkedRedisCacheLocation = linkedRedisCacheLocation;
            Name = name;
            ProvisioningState = provisioningState;
            ServerRole = serverRole;
            Type = type;
        }
    }
}
