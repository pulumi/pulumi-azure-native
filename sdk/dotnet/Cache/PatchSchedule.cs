// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cache
{
    /// <summary>
    /// Response to put/get patch schedules for Redis cache.
    /// Azure REST API version: 2023-04-01. Prior API version in Azure Native 1.x: 2020-06-01.
    /// 
    /// Other available API versions: 2023-05-01-preview, 2023-08-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:cache:PatchSchedule")]
    public partial class PatchSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of patch schedules for a Redis cache.
        /// </summary>
        [Output("scheduleEntries")]
        public Output<ImmutableArray<Outputs.ScheduleEntryResponse>> ScheduleEntries { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PatchSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PatchSchedule(string name, PatchScheduleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cache:PatchSchedule", name, args ?? new PatchScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PatchSchedule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cache:PatchSchedule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20171001:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20180301:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20190701:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20200601:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20201201:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20210601:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20220501:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20220601:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20230401:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20230501preview:PatchSchedule" },
                    new global::Pulumi.Alias { Type = "azure-native:cache/v20230801:PatchSchedule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PatchSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PatchSchedule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PatchSchedule(name, id, options);
        }
    }

    public sealed class PatchScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Default string modeled as parameter for auto generation to work correctly.
        /// </summary>
        [Input("default")]
        public Input<string>? Default { get; set; }

        /// <summary>
        /// The name of the Redis cache.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("scheduleEntries", required: true)]
        private InputList<Inputs.ScheduleEntryArgs>? _scheduleEntries;

        /// <summary>
        /// List of patch schedules for a Redis cache.
        /// </summary>
        public InputList<Inputs.ScheduleEntryArgs> ScheduleEntries
        {
            get => _scheduleEntries ?? (_scheduleEntries = new InputList<Inputs.ScheduleEntryArgs>());
            set => _scheduleEntries = value;
        }

        public PatchScheduleArgs()
        {
        }
        public static new PatchScheduleArgs Empty => new PatchScheduleArgs();
    }
}
