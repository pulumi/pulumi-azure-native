// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cache.Outputs
{

    /// <summary>
    /// All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.
    /// </summary>
    [OutputType]
    public sealed class RedisCommonPropertiesResponseRedisConfiguration
    {
        /// <summary>
        /// Specifies whether the aof backup is enabled
        /// </summary>
        public readonly string? AofBackupEnabled;
        /// <summary>
        /// First storage account connection string
        /// </summary>
        public readonly string? AofStorageConnectionString0;
        /// <summary>
        /// Second storage account connection string
        /// </summary>
        public readonly string? AofStorageConnectionString1;
        /// <summary>
        /// Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view.
        /// </summary>
        public readonly string? Authnotrequired;
        /// <summary>
        /// The max clients config
        /// </summary>
        public readonly string Maxclients;
        /// <summary>
        /// Value in megabytes reserved for fragmentation per shard
        /// </summary>
        public readonly string? MaxfragmentationmemoryReserved;
        /// <summary>
        /// Value in megabytes reserved for non-cache usage per shard e.g. failover.
        /// </summary>
        public readonly string? MaxmemoryDelta;
        /// <summary>
        /// The eviction strategy used when your data won't fit within its memory limit.
        /// </summary>
        public readonly string? MaxmemoryPolicy;
        /// <summary>
        /// Value in megabytes reserved for non-cache usage per shard e.g. failover.
        /// </summary>
        public readonly string? MaxmemoryReserved;
        /// <summary>
        /// Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
        /// </summary>
        public readonly string PreferredDataArchiveAuthMethod;
        /// <summary>
        /// Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS
        /// </summary>
        public readonly string? PreferredDataPersistenceAuthMethod;
        /// <summary>
        /// Specifies whether the rdb backup is enabled
        /// </summary>
        public readonly string? RdbBackupEnabled;
        /// <summary>
        /// Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)
        /// </summary>
        public readonly string? RdbBackupFrequency;
        /// <summary>
        /// Specifies the maximum number of snapshots for rdb backup
        /// </summary>
        public readonly string? RdbBackupMaxSnapshotCount;
        /// <summary>
        /// The storage account connection string for storing rdb file
        /// </summary>
        public readonly string? RdbStorageConnectionString;
        /// <summary>
        /// Zonal Configuration
        /// </summary>
        public readonly string ZonalConfiguration;

        [OutputConstructor]
        private RedisCommonPropertiesResponseRedisConfiguration(
            string? aofBackupEnabled,

            string? aofStorageConnectionString0,

            string? aofStorageConnectionString1,

            string? authnotrequired,

            string maxclients,

            string? maxfragmentationmemoryReserved,

            string? maxmemoryDelta,

            string? maxmemoryPolicy,

            string? maxmemoryReserved,

            string preferredDataArchiveAuthMethod,

            string? preferredDataPersistenceAuthMethod,

            string? rdbBackupEnabled,

            string? rdbBackupFrequency,

            string? rdbBackupMaxSnapshotCount,

            string? rdbStorageConnectionString,

            string zonalConfiguration)
        {
            AofBackupEnabled = aofBackupEnabled;
            AofStorageConnectionString0 = aofStorageConnectionString0;
            AofStorageConnectionString1 = aofStorageConnectionString1;
            Authnotrequired = authnotrequired;
            Maxclients = maxclients;
            MaxfragmentationmemoryReserved = maxfragmentationmemoryReserved;
            MaxmemoryDelta = maxmemoryDelta;
            MaxmemoryPolicy = maxmemoryPolicy;
            MaxmemoryReserved = maxmemoryReserved;
            PreferredDataArchiveAuthMethod = preferredDataArchiveAuthMethod;
            PreferredDataPersistenceAuthMethod = preferredDataPersistenceAuthMethod;
            RdbBackupEnabled = rdbBackupEnabled;
            RdbBackupFrequency = rdbBackupFrequency;
            RdbBackupMaxSnapshotCount = rdbBackupMaxSnapshotCount;
            RdbStorageConnectionString = rdbStorageConnectionString;
            ZonalConfiguration = zonalConfiguration;
        }
    }
}
