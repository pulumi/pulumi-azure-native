// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cache.V20230801
{
    public static class GetAccessPolicy
    {
        /// <summary>
        /// Gets the detailed information about an access policy of a redis cache
        /// </summary>
        public static Task<GetAccessPolicyResult> InvokeAsync(GetAccessPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessPolicyResult>("azure-native:cache/v20230801:getAccessPolicy", args ?? new GetAccessPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the detailed information about an access policy of a redis cache
        /// </summary>
        public static Output<GetAccessPolicyResult> Invoke(GetAccessPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPolicyResult>("azure-native:cache/v20230801:getAccessPolicy", args ?? new GetAccessPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the access policy that is being added to the Redis cache.
        /// </summary>
        [Input("accessPolicyName", required: true)]
        public string AccessPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the Redis cache.
        /// </summary>
        [Input("cacheName", required: true)]
        public string CacheName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccessPolicyArgs()
        {
        }
        public static new GetAccessPolicyArgs Empty => new GetAccessPolicyArgs();
    }

    public sealed class GetAccessPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the access policy that is being added to the Redis cache.
        /// </summary>
        [Input("accessPolicyName", required: true)]
        public Input<string> AccessPolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the Redis cache.
        /// </summary>
        [Input("cacheName", required: true)]
        public Input<string> CacheName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAccessPolicyInvokeArgs()
        {
        }
        public static new GetAccessPolicyInvokeArgs Empty => new GetAccessPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessPolicyResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Permissions for the access policy. Learn how to configure permissions at https://aka.ms/redis/AADPreRequisites
        /// </summary>
        public readonly string Permissions;
        /// <summary>
        /// Provisioning state of access policy
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAccessPolicyResult(
            string id,

            string name,

            string permissions,

            string provisioningState,

            string type)
        {
            Id = id;
            Name = name;
            Permissions = permissions;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
