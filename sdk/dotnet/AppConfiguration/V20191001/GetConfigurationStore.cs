// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AppConfiguration.V20191001
{
    public static class GetConfigurationStore
    {
        public static Task<GetConfigurationStoreResult> InvokeAsync(GetConfigurationStoreArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationStoreResult>("azure-nextgen:appconfiguration/v20191001:getConfigurationStore", args ?? new GetConfigurationStoreArgs(), options.WithVersion());
    }


    public sealed class GetConfigurationStoreArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the configuration store.
        /// </summary>
        [Input("configStoreName", required: true)]
        public string ConfigStoreName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConfigurationStoreArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigurationStoreResult
    {
        /// <summary>
        /// The creation date of configuration store.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The DNS endpoint where the configuration store API will be available.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The managed identity information, if configured.
        /// </summary>
        public readonly Outputs.ResourceIdentityResponse? Identity;
        /// <summary>
        /// The location of the resource. This cannot be changed after the resource is created.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the configuration store.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The sku of the configuration store.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetConfigurationStoreResult(
            string creationDate,

            string endpoint,

            Outputs.ResourceIdentityResponse? identity,

            string location,

            string name,

            string provisioningState,

            Outputs.SkuResponse sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CreationDate = creationDate;
            Endpoint = endpoint;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
