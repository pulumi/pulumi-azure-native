// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.AppConfiguration.V20200601
{
    public static class ListConfigurationStoreKeyValue
    {
        public static Task<ListConfigurationStoreKeyValueResult> InvokeAsync(ListConfigurationStoreKeyValueArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListConfigurationStoreKeyValueResult>("azure-nextgen:appconfiguration/v20200601:listConfigurationStoreKeyValue", args ?? new ListConfigurationStoreKeyValueArgs(), options.WithVersion());
    }


    public sealed class ListConfigurationStoreKeyValueArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the configuration store.
        /// </summary>
        [Input("configStoreName", required: true)]
        public string ConfigStoreName { get; set; } = null!;

        /// <summary>
        /// The key to retrieve.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// The label of the key.
        /// </summary>
        [Input("label")]
        public string? Label { get; set; }

        /// <summary>
        /// The name of the resource group to which the container registry belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListConfigurationStoreKeyValueArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListConfigurationStoreKeyValueResult
    {
        /// <summary>
        /// The content type of the key-value's value.
        /// Providing a proper content-type can enable transformations of values when they are retrieved by applications.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// An ETag indicating the state of a key-value within a configuration store.
        /// </summary>
        public readonly string ETag;
        /// <summary>
        /// The primary identifier of a key-value.
        /// The key is used in unison with the label to uniquely identify a key-value.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A value used to group key-values.
        /// The label is used in unison with the key to uniquely identify a key-value.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// The last time a modifying operation was performed on the given key-value.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// A value indicating whether the key-value is locked.
        /// A locked key-value may not be modified until it is unlocked.
        /// </summary>
        public readonly bool Locked;
        /// <summary>
        /// A dictionary of tags that can help identify what a key-value may be applicable for.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The value of the key-value.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private ListConfigurationStoreKeyValueResult(
            string contentType,

            string eTag,

            string key,

            string label,

            string lastModified,

            bool locked,

            ImmutableDictionary<string, string> tags,

            string value)
        {
            ContentType = contentType;
            ETag = eTag;
            Key = key;
            Label = label;
            LastModified = lastModified;
            Locked = locked;
            Tags = tags;
            Value = value;
        }
    }
}
