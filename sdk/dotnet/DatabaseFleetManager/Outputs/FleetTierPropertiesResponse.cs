// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DatabaseFleetManager.Outputs
{

    /// <summary>
    /// A Fleet tier properties.
    /// </summary>
    [OutputType]
    public sealed class FleetTierPropertiesResponse
    {
        /// <summary>
        /// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
        /// </summary>
        public readonly int? Capacity;
        /// <summary>
        /// Maximum allocated capacity per database, in units matching the specified service tier.
        /// </summary>
        public readonly double? DatabaseCapacityMax;
        /// <summary>
        /// Minimum allocated capacity per database, in units matching the specified service tier.
        /// </summary>
        public readonly double? DatabaseCapacityMin;
        /// <summary>
        /// Maximum database size in Gb.
        /// </summary>
        public readonly int? DatabaseSizeGbMax;
        /// <summary>
        /// If true, tier is disabled.
        /// </summary>
        public readonly bool Disabled;
        /// <summary>
        /// Family of provisioned resources, for example Gen5.
        /// </summary>
        public readonly string? Family;
        /// <summary>
        /// Number of high availability replicas for databases in this tier.
        /// </summary>
        public readonly int? HighAvailabilityReplicaCount;
        /// <summary>
        /// Maximum number of databases per pool.
        /// </summary>
        public readonly int? PoolNumOfDatabasesMax;
        /// <summary>
        /// If true, databases are pooled.
        /// </summary>
        public readonly bool? Pooled;
        /// <summary>
        /// Provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// If true, serverless resources are provisioned in the tier.
        /// </summary>
        public readonly bool? Serverless;
        /// <summary>
        /// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
        /// </summary>
        public readonly string? ServiceTier;
        /// <summary>
        /// Enable zone redundancy for all databases in this tier.
        /// </summary>
        public readonly string? ZoneRedundancy;

        [OutputConstructor]
        private FleetTierPropertiesResponse(
            int? capacity,

            double? databaseCapacityMax,

            double? databaseCapacityMin,

            int? databaseSizeGbMax,

            bool disabled,

            string? family,

            int? highAvailabilityReplicaCount,

            int? poolNumOfDatabasesMax,

            bool? pooled,

            string provisioningState,

            bool? serverless,

            string? serviceTier,

            string? zoneRedundancy)
        {
            Capacity = capacity;
            DatabaseCapacityMax = databaseCapacityMax;
            DatabaseCapacityMin = databaseCapacityMin;
            DatabaseSizeGbMax = databaseSizeGbMax;
            Disabled = disabled;
            Family = family;
            HighAvailabilityReplicaCount = highAvailabilityReplicaCount;
            PoolNumOfDatabasesMax = poolNumOfDatabasesMax;
            Pooled = pooled;
            ProvisioningState = provisioningState;
            Serverless = serverless;
            ServiceTier = serviceTier;
            ZoneRedundancy = zoneRedundancy;
        }
    }
}
