// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DatabaseFleetManager.Outputs
{

    /// <summary>
    /// Fleet database properties.
    /// </summary>
    [OutputType]
    public sealed class FleetDatabasePropertiesResponse
    {
        /// <summary>
        /// Backup retention in days.
        /// </summary>
        public readonly int BackupRetentionDays;
        /// <summary>
        /// Database collation.
        /// </summary>
        public readonly string? Collation;
        /// <summary>
        /// Connection string to connect to the database with.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
        /// </summary>
        public readonly string? CreateMode;
        /// <summary>
        /// Maximum database size in Gb.
        /// </summary>
        public readonly int DatabaseSizeGbMax;
        /// <summary>
        /// Earliest restore time.
        /// </summary>
        public readonly string EarliestRestoreTime;
        /// <summary>
        /// Identity property.
        /// </summary>
        public readonly Outputs.IdentityResponse? Identity;
        /// <summary>
        /// Latest restore time.
        /// </summary>
        public readonly string LatestRestoreTime;
        /// <summary>
        /// Resource identifier for the underlying database resource.
        /// </summary>
        public readonly string OriginalDatabaseId;
        /// <summary>
        /// Database state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// If true, database is recoverable.
        /// </summary>
        public readonly bool Recoverable;
        /// <summary>
        /// Additional database properties to be applied as the underlying database resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ResourceTags;
        /// <summary>
        /// Restore from time when CreateMode is PointInTimeRestore.
        /// </summary>
        public readonly string? RestoreFromTime;
        /// <summary>
        /// Source database name used when CreateMode is Copy or PointInTimeRestore.
        /// </summary>
        public readonly string? SourceDatabaseName;
        /// <summary>
        /// Name of the tier this database belongs to.
        /// </summary>
        public readonly string? TierName;
        /// <summary>
        /// Transparent Data Encryption properties
        /// </summary>
        public readonly Outputs.TransparentDataEncryptionResponse? TransparentDataEncryption;

        [OutputConstructor]
        private FleetDatabasePropertiesResponse(
            int backupRetentionDays,

            string? collation,

            string connectionString,

            string? createMode,

            int databaseSizeGbMax,

            string earliestRestoreTime,

            Outputs.IdentityResponse? identity,

            string latestRestoreTime,

            string originalDatabaseId,

            string provisioningState,

            bool recoverable,

            ImmutableDictionary<string, string>? resourceTags,

            string? restoreFromTime,

            string? sourceDatabaseName,

            string? tierName,

            Outputs.TransparentDataEncryptionResponse? transparentDataEncryption)
        {
            BackupRetentionDays = backupRetentionDays;
            Collation = collation;
            ConnectionString = connectionString;
            CreateMode = createMode;
            DatabaseSizeGbMax = databaseSizeGbMax;
            EarliestRestoreTime = earliestRestoreTime;
            Identity = identity;
            LatestRestoreTime = latestRestoreTime;
            OriginalDatabaseId = originalDatabaseId;
            ProvisioningState = provisioningState;
            Recoverable = recoverable;
            ResourceTags = resourceTags;
            RestoreFromTime = restoreFromTime;
            SourceDatabaseName = sourceDatabaseName;
            TierName = tierName;
            TransparentDataEncryption = transparentDataEncryption;
        }
    }
}
