// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Logz.V20220101Preview
{
    public static class GetSubAccountTagRule
    {
        /// <summary>
        /// Capture logs and metrics of Azure resources based on ARM tags.
        /// </summary>
        public static Task<GetSubAccountTagRuleResult> InvokeAsync(GetSubAccountTagRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubAccountTagRuleResult>("azure-native:logz/v20220101preview:getSubAccountTagRule", args ?? new GetSubAccountTagRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Capture logs and metrics of Azure resources based on ARM tags.
        /// </summary>
        public static Output<GetSubAccountTagRuleResult> Invoke(GetSubAccountTagRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubAccountTagRuleResult>("azure-native:logz/v20220101preview:getSubAccountTagRule", args ?? new GetSubAccountTagRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubAccountTagRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("ruleSetName", required: true)]
        public string RuleSetName { get; set; } = null!;

        /// <summary>
        /// Sub Account resource name
        /// </summary>
        [Input("subAccountName", required: true)]
        public string SubAccountName { get; set; } = null!;

        public GetSubAccountTagRuleArgs()
        {
        }
        public static new GetSubAccountTagRuleArgs Empty => new GetSubAccountTagRuleArgs();
    }

    public sealed class GetSubAccountTagRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Monitor resource name
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("ruleSetName", required: true)]
        public Input<string> RuleSetName { get; set; } = null!;

        /// <summary>
        /// Sub Account resource name
        /// </summary>
        [Input("subAccountName", required: true)]
        public Input<string> SubAccountName { get; set; } = null!;

        public GetSubAccountTagRuleInvokeArgs()
        {
        }
        public static new GetSubAccountTagRuleInvokeArgs Empty => new GetSubAccountTagRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubAccountTagRuleResult
    {
        /// <summary>
        /// The id of the rule set.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the rule set.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Definition of the properties for a TagRules resource.
        /// </summary>
        public readonly Outputs.MonitoringTagRulesPropertiesResponse Properties;
        /// <summary>
        /// The system metadata relating to this resource
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the rule set.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSubAccountTagRuleResult(
            string id,

            string name,

            Outputs.MonitoringTagRulesPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            SystemData = systemData;
            Type = type;
        }
    }
}
