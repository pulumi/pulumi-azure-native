// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DatabaseWatcher
{
    public static class GetTarget
    {
        /// <summary>
        /// Get a Target
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-07-19-preview.
        /// </summary>
        public static Task<GetTargetResult> InvokeAsync(GetTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetResult>("azure-native:databasewatcher:getTarget", args ?? new GetTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Target
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-07-19-preview.
        /// </summary>
        public static Output<GetTargetResult> Invoke(GetTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetResult>("azure-native:databasewatcher:getTarget", args ?? new GetTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The target resource name.
        /// </summary>
        [Input("targetName", required: true)]
        public string TargetName { get; set; } = null!;

        /// <summary>
        /// The database watcher name.
        /// </summary>
        [Input("watcherName", required: true)]
        public string WatcherName { get; set; } = null!;

        public GetTargetArgs()
        {
        }
        public static new GetTargetArgs Empty => new GetTargetArgs();
    }

    public sealed class GetTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The target resource name.
        /// </summary>
        [Input("targetName", required: true)]
        public Input<string> TargetName { get; set; } = null!;

        /// <summary>
        /// The database watcher name.
        /// </summary>
        [Input("watcherName", required: true)]
        public Input<string> WatcherName { get; set; } = null!;

        public GetTargetInvokeArgs()
        {
        }
        public static new GetTargetInvokeArgs Empty => new GetTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetResult
    {
        /// <summary>
        /// The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
        /// </summary>
        public readonly string ConnectionServerName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of authentication to use when connecting to a target.
        /// </summary>
        public readonly string TargetAuthenticationType;
        /// <summary>
        /// Discriminator property for TargetProperties.
        /// </summary>
        public readonly string TargetType;
        /// <summary>
        /// To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        /// </summary>
        public readonly Outputs.VaultSecretResponse? TargetVault;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTargetResult(
            string connectionServerName,

            string id,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string targetAuthenticationType,

            string targetType,

            Outputs.VaultSecretResponse? targetVault,

            string type)
        {
            ConnectionServerName = connectionServerName;
            Id = id;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            TargetAuthenticationType = targetAuthenticationType;
            TargetType = targetType;
            TargetVault = targetVault;
            Type = type;
        }
    }
}
