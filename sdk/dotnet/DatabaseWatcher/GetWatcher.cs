// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DatabaseWatcher
{
    public static class GetWatcher
    {
        /// <summary>
        /// Get a Watcher
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-07-19-preview, 2024-10-01-preview.
        /// </summary>
        public static Task<GetWatcherResult> InvokeAsync(GetWatcherArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWatcherResult>("azure-native:databasewatcher:getWatcher", args ?? new GetWatcherArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Watcher
        /// Azure REST API version: 2023-09-01-preview.
        /// 
        /// Other available API versions: 2024-07-19-preview, 2024-10-01-preview.
        /// </summary>
        public static Output<GetWatcherResult> Invoke(GetWatcherInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWatcherResult>("azure-native:databasewatcher:getWatcher", args ?? new GetWatcherInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWatcherArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The database watcher name.
        /// </summary>
        [Input("watcherName", required: true)]
        public string WatcherName { get; set; } = null!;

        public GetWatcherArgs()
        {
        }
        public static new GetWatcherArgs Empty => new GetWatcherArgs();
    }

    public sealed class GetWatcherInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The database watcher name.
        /// </summary>
        [Input("watcherName", required: true)]
        public Input<string> WatcherName { get; set; } = null!;

        public GetWatcherInvokeArgs()
        {
        }
        public static new GetWatcherInvokeArgs Empty => new GetWatcherInvokeArgs();
    }


    [OutputType]
    public sealed class GetWatcherResult
    {
        /// <summary>
        /// The data store for collected monitoring data.
        /// </summary>
        public readonly Outputs.DatastoreResponse? Datastore;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the resource watcher.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The monitoring collection status of the watcher.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWatcherResult(
            Outputs.DatastoreResponse? datastore,

            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            string name,

            string provisioningState,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Datastore = datastore;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
