// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn
{
    /// <summary>
    /// AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from Azure Front Door.
    /// 
    /// Uses Azure REST API version 2025-06-01. In version 2.x of the Azure Native provider, it used API version 2023-05-01.
    /// 
    /// Other available API versions: 2023-05-01, 2023-07-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-09-01, 2025-01-01-preview, 2025-04-15. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cdn [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:cdn:AFDOriginGroup")]
    public partial class AFDOriginGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Authentication settings for origin in origin group.
        /// </summary>
        [Output("authentication")]
        public Output<Outputs.OriginAuthenticationPropertiesResponse?> Authentication { get; private set; } = null!;

        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        [Output("deploymentStatus")]
        public Output<string> DeploymentStatus { get; private set; } = null!;

        /// <summary>
        /// Health probe settings to the origin that is used to determine the health of the origin.
        /// </summary>
        [Output("healthProbeSettings")]
        public Output<Outputs.HealthProbeParametersResponse?> HealthProbeSettings { get; private set; } = null!;

        /// <summary>
        /// Load balancing settings for a backend pool
        /// </summary>
        [Output("loadBalancingSettings")]
        public Output<Outputs.LoadBalancingSettingsParametersResponse?> LoadBalancingSettings { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the profile which holds the origin group.
        /// </summary>
        [Output("profileName")]
        public Output<string> ProfileName { get; private set; } = null!;

        /// <summary>
        /// Provisioning status
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
        /// </summary>
        [Output("sessionAffinityState")]
        public Output<string?> SessionAffinityState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Output("trafficRestorationTimeToHealedOrNewEndpointsInMinutes")]
        public Output<int?> TrafficRestorationTimeToHealedOrNewEndpointsInMinutes { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AFDOriginGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AFDOriginGroup(string name, AFDOriginGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cdn:AFDOriginGroup", name, args ?? new AFDOriginGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AFDOriginGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cdn:AFDOriginGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20200901:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20210601:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20220501preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20221101preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20230501:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20230701preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240201:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240501preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240601preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240901:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20250101preview:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20250415:AFDOriginGroup" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20250601:AFDOriginGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AFDOriginGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AFDOriginGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AFDOriginGroup(name, id, options);
        }
    }

    public sealed class AFDOriginGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication settings for origin in origin group.
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.OriginAuthenticationPropertiesArgs>? Authentication { get; set; }

        /// <summary>
        /// Health probe settings to the origin that is used to determine the health of the origin.
        /// </summary>
        [Input("healthProbeSettings")]
        public Input<Inputs.HealthProbeParametersArgs>? HealthProbeSettings { get; set; }

        /// <summary>
        /// Load balancing settings for a backend pool
        /// </summary>
        [Input("loadBalancingSettings")]
        public Input<Inputs.LoadBalancingSettingsParametersArgs>? LoadBalancingSettings { get; set; }

        /// <summary>
        /// Name of the origin group which is unique within the endpoint.
        /// </summary>
        [Input("originGroupName")]
        public Input<string>? OriginGroupName { get; set; }

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
        /// </summary>
        [Input("sessionAffinityState")]
        public InputUnion<string, Pulumi.AzureNative.Cdn.EnabledState>? SessionAffinityState { get; set; }

        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Input("trafficRestorationTimeToHealedOrNewEndpointsInMinutes")]
        public Input<int>? TrafficRestorationTimeToHealedOrNewEndpointsInMinutes { get; set; }

        public AFDOriginGroupArgs()
        {
        }
        public static new AFDOriginGroupArgs Empty => new AFDOriginGroupArgs();
    }
}
