// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn
{
    public static class GetEdgeActionVersion
    {
        /// <summary>
        /// Get EdgeActionVersion resource
        /// 
        /// Uses Azure REST API version 2024-07-22-preview.
        /// </summary>
        public static Task<GetEdgeActionVersionResult> InvokeAsync(GetEdgeActionVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeActionVersionResult>("azure-native:cdn:getEdgeActionVersion", args ?? new GetEdgeActionVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Get EdgeActionVersion resource
        /// 
        /// Uses Azure REST API version 2024-07-22-preview.
        /// </summary>
        public static Output<GetEdgeActionVersionResult> Invoke(GetEdgeActionVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeActionVersionResult>("azure-native:cdn:getEdgeActionVersion", args ?? new GetEdgeActionVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get EdgeActionVersion resource
        /// 
        /// Uses Azure REST API version 2024-07-22-preview.
        /// </summary>
        public static Output<GetEdgeActionVersionResult> Invoke(GetEdgeActionVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeActionVersionResult>("azure-native:cdn:getEdgeActionVersion", args ?? new GetEdgeActionVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeActionVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Edge Action
        /// </summary>
        [Input("edgeActionName", required: true)]
        public string EdgeActionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Edge Action version
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetEdgeActionVersionArgs()
        {
        }
        public static new GetEdgeActionVersionArgs Empty => new GetEdgeActionVersionArgs();
    }

    public sealed class GetEdgeActionVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Edge Action
        /// </summary>
        [Input("edgeActionName", required: true)]
        public Input<string> EdgeActionName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Edge Action version
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetEdgeActionVersionInvokeArgs()
        {
        }
        public static new GetEdgeActionVersionInvokeArgs Empty => new GetEdgeActionVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeActionVersionResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The deployment type
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The active state
        /// </summary>
        public readonly string IsDefaultVersion;
        /// <summary>
        /// The last update time in UTC for package update
        /// </summary>
        public readonly string LastPackageUpdateTime;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The validation status
        /// </summary>
        public readonly string ValidationStatus;

        [OutputConstructor]
        private GetEdgeActionVersionResult(
            string azureApiVersion,

            string deploymentType,

            string id,

            string isDefaultVersion,

            string lastPackageUpdateTime,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string validationStatus)
        {
            AzureApiVersion = azureApiVersion;
            DeploymentType = deploymentType;
            Id = id;
            IsDefaultVersion = isDefaultVersion;
            LastPackageUpdateTime = lastPackageUpdateTime;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            ValidationStatus = validationStatus;
        }
    }
}
