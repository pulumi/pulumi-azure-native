// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Cdn.Latest.Outputs
{

    [OutputType]
    public sealed class DeliveryRuleResponseResult
    {
        /// <summary>
        /// A list of actions that are executed when all the conditions of a rule are satisfied.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.DeliveryRuleCacheExpirationActionResponseResult, Union<Outputs.DeliveryRuleCacheKeyQueryStringActionResponseResult, Union<Outputs.DeliveryRuleRequestHeaderActionResponseResult, Union<Outputs.DeliveryRuleResponseHeaderActionResponseResult, Union<Outputs.UrlRedirectActionResponseResult, Union<Outputs.UrlRewriteActionResponseResult, Outputs.UrlSigningActionResponseResult>>>>>>> Actions;
        /// <summary>
        /// A list of conditions that must be matched for the actions to be executed
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.DeliveryRuleCookiesConditionResponseResult, Union<Outputs.DeliveryRuleHttpVersionConditionResponseResult, Union<Outputs.DeliveryRuleIsDeviceConditionResponseResult, Union<Outputs.DeliveryRulePostArgsConditionResponseResult, Union<Outputs.DeliveryRuleQueryStringConditionResponseResult, Union<Outputs.DeliveryRuleRemoteAddressConditionResponseResult, Union<Outputs.DeliveryRuleRequestBodyConditionResponseResult, Union<Outputs.DeliveryRuleRequestHeaderConditionResponseResult, Union<Outputs.DeliveryRuleRequestMethodConditionResponseResult, Union<Outputs.DeliveryRuleRequestSchemeConditionResponseResult, Union<Outputs.DeliveryRuleRequestUriConditionResponseResult, Union<Outputs.DeliveryRuleUrlFileExtensionConditionResponseResult, Union<Outputs.DeliveryRuleUrlFileNameConditionResponseResult, Outputs.DeliveryRuleUrlPathConditionResponseResult>>>>>>>>>>>>>> Conditions;
        /// <summary>
        /// Name of the rule
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
        /// </summary>
        public readonly int Order;

        [OutputConstructor]
        private DeliveryRuleResponseResult(
            ImmutableArray<Union<Outputs.DeliveryRuleCacheExpirationActionResponseResult, Union<Outputs.DeliveryRuleCacheKeyQueryStringActionResponseResult, Union<Outputs.DeliveryRuleRequestHeaderActionResponseResult, Union<Outputs.DeliveryRuleResponseHeaderActionResponseResult, Union<Outputs.UrlRedirectActionResponseResult, Union<Outputs.UrlRewriteActionResponseResult, Outputs.UrlSigningActionResponseResult>>>>>>> actions,

            ImmutableArray<Union<Outputs.DeliveryRuleCookiesConditionResponseResult, Union<Outputs.DeliveryRuleHttpVersionConditionResponseResult, Union<Outputs.DeliveryRuleIsDeviceConditionResponseResult, Union<Outputs.DeliveryRulePostArgsConditionResponseResult, Union<Outputs.DeliveryRuleQueryStringConditionResponseResult, Union<Outputs.DeliveryRuleRemoteAddressConditionResponseResult, Union<Outputs.DeliveryRuleRequestBodyConditionResponseResult, Union<Outputs.DeliveryRuleRequestHeaderConditionResponseResult, Union<Outputs.DeliveryRuleRequestMethodConditionResponseResult, Union<Outputs.DeliveryRuleRequestSchemeConditionResponseResult, Union<Outputs.DeliveryRuleRequestUriConditionResponseResult, Union<Outputs.DeliveryRuleUrlFileExtensionConditionResponseResult, Union<Outputs.DeliveryRuleUrlFileNameConditionResponseResult, Outputs.DeliveryRuleUrlPathConditionResponseResult>>>>>>>>>>>>>> conditions,

            string? name,

            int order)
        {
            Actions = actions;
            Conditions = conditions;
            Name = name;
            Order = order;
        }
    }
}
