// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Cdn.V20200901
{
    public static class GetSecret
    {
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("azure-nextgen:cdn/v20200901:getSecret", args ?? new GetSecretArgs(), options.WithVersion());
    }


    public sealed class GetSecretArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the CDN profile which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public string ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Secret under the profile.
        /// </summary>
        [Input("secretName", required: true)]
        public string SecretName { get; set; } = null!;

        public GetSecretArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly string DeploymentStatus;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// object which contains secret parameters
        /// </summary>
        public readonly Union<Outputs.CustomerCertificateParametersResponse, Union<Outputs.ManagedCertificateParametersResponse, Outputs.UrlSigningKeyParametersResponse>>? Parameters;
        /// <summary>
        /// Provisioning status
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Read only system data
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSecretResult(
            string deploymentStatus,

            string name,

            Union<Outputs.CustomerCertificateParametersResponse, Union<Outputs.ManagedCertificateParametersResponse, Outputs.UrlSigningKeyParametersResponse>>? parameters,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DeploymentStatus = deploymentStatus;
            Name = name;
            Parameters = parameters;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
