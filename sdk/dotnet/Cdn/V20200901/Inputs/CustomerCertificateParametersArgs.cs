// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Cdn.V20200901.Inputs
{

    /// <summary>
    /// Customer Certificate used for https
    /// </summary>
    public sealed class CustomerCertificateParametersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Certificate issuing authority.
        /// </summary>
        [Input("certificateAuthority")]
        public Input<string>? CertificateAuthority { get; set; }

        /// <summary>
        /// Certificate expiration date.
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// Resource reference to the KV secret
        /// </summary>
        [Input("secretSource", required: true)]
        public Input<Inputs.ResourceReferenceArgs> SecretSource { get; set; } = null!;

        /// <summary>
        /// Version of the secret to be used
        /// </summary>
        [Input("secretVersion")]
        public Input<string>? SecretVersion { get; set; }

        /// <summary>
        /// Subject name in the certificate.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        [Input("subjectAlternativeNames")]
        private InputList<string>? _subjectAlternativeNames;

        /// <summary>
        /// The list of SANs.
        /// </summary>
        public InputList<string> SubjectAlternativeNames
        {
            get => _subjectAlternativeNames ?? (_subjectAlternativeNames = new InputList<string>());
            set => _subjectAlternativeNames = value;
        }

        /// <summary>
        /// Certificate thumbprint.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        /// <summary>
        /// The type of the Secret to create.
        /// Expected value is 'CustomerCertificate'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Whether to use the latest version for the certificate
        /// </summary>
        [Input("useLatestVersion")]
        public Input<bool>? UseLatestVersion { get; set; }

        public CustomerCertificateParametersArgs()
        {
        }
    }
}
