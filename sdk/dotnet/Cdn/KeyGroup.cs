// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn
{
    /// <summary>
    /// Contains a list of references of UrlSigningKey type secret objects.
    /// Azure REST API version: 2023-07-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:cdn:KeyGroup")]
    public partial class KeyGroup : global::Pulumi.CustomResource
    {
        [Output("deploymentStatus")]
        public Output<string> DeploymentStatus { get; private set; } = null!;

        /// <summary>
        /// Names of UrlSigningKey type secret objects
        /// </summary>
        [Output("keyReferences")]
        public Output<ImmutableArray<Outputs.ResourceReferenceResponse>> KeyReferences { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning status
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Read only system data
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a KeyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyGroup(string name, KeyGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cdn:KeyGroup", name, args ?? new KeyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cdn:KeyGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20230701preview:KeyGroup" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KeyGroup(name, id, options);
        }
    }

    public sealed class KeyGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the KeyGroup under the profile.
        /// </summary>
        [Input("keyGroupName")]
        public Input<string>? KeyGroupName { get; set; }

        [Input("keyReferences")]
        private InputList<Inputs.ResourceReferenceArgs>? _keyReferences;

        /// <summary>
        /// Names of UrlSigningKey type secret objects
        /// </summary>
        public InputList<Inputs.ResourceReferenceArgs> KeyReferences
        {
            get => _keyReferences ?? (_keyReferences = new InputList<Inputs.ResourceReferenceArgs>());
            set => _keyReferences = value;
        }

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public KeyGroupArgs()
        {
        }
        public static new KeyGroupArgs Empty => new KeyGroupArgs();
    }
}
