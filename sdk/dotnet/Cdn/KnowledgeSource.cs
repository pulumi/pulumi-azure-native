// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn
{
    /// <summary>
    /// Defines a knowledge source resource for a web agent.
    /// 
    /// Uses Azure REST API version 2025-09-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:cdn:KnowledgeSource")]
    public partial class KnowledgeSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Description of the knowledge source.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The last time the knowledge source was updated.
        /// </summary>
        [Output("lastRefreshedTime")]
        public Output<string> LastRefreshedTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning status of the knowledge source.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Format or origin of the knowledge source.
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the units of time for scheduling update intervals for the knowledge source.
        /// </summary>
        [Output("updateFrequency")]
        public Output<string?> UpdateFrequency { get; private set; } = null!;

        /// <summary>
        /// Endpoint or location of the knowledge source.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a KnowledgeSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KnowledgeSource(string name, KnowledgeSourceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cdn:KnowledgeSource", name, args ?? new KnowledgeSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KnowledgeSource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cdn:KnowledgeSource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20250901preview:KnowledgeSource" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KnowledgeSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KnowledgeSource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KnowledgeSource(name, id, options);
        }
    }

    public sealed class KnowledgeSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the knowledge source.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the knowledge source.
        /// </summary>
        [Input("knowledgeSourceName")]
        public Input<string>? KnowledgeSourceName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Format or origin of the knowledge source.
        /// </summary>
        [Input("sourceType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Cdn.KnowledgeSourceType> SourceType { get; set; } = null!;

        /// <summary>
        /// Specifies the units of time for scheduling update intervals for the knowledge source.
        /// </summary>
        [Input("updateFrequency")]
        public InputUnion<string, Pulumi.AzureNative.Cdn.KnowledgeSourceUpdateFrequency>? UpdateFrequency { get; set; }

        /// <summary>
        /// Endpoint or location of the knowledge source.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// The name of the web agent.
        /// </summary>
        [Input("webAgentName", required: true)]
        public Input<string> WebAgentName { get; set; } = null!;

        public KnowledgeSourceArgs()
        {
        }
        public static new KnowledgeSourceArgs Empty => new KnowledgeSourceArgs();
    }
}
