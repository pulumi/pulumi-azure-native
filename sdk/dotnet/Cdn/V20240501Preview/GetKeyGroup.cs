// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240501Preview
{
    public static class GetKeyGroup
    {
        /// <summary>
        /// Gets an existing KeyGroup within a profile.
        /// </summary>
        public static Task<GetKeyGroupResult> InvokeAsync(GetKeyGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyGroupResult>("azure-native:cdn/v20240501preview:getKeyGroup", args ?? new GetKeyGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an existing KeyGroup within a profile.
        /// </summary>
        public static Output<GetKeyGroupResult> Invoke(GetKeyGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyGroupResult>("azure-native:cdn/v20240501preview:getKeyGroup", args ?? new GetKeyGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the KeyGroup under the profile.
        /// </summary>
        [Input("keyGroupName", required: true)]
        public string KeyGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public string ProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetKeyGroupArgs()
        {
        }
        public static new GetKeyGroupArgs Empty => new GetKeyGroupArgs();
    }

    public sealed class GetKeyGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the KeyGroup under the profile.
        /// </summary>
        [Input("keyGroupName", required: true)]
        public Input<string> KeyGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetKeyGroupInvokeArgs()
        {
        }
        public static new GetKeyGroupInvokeArgs Empty => new GetKeyGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyGroupResult
    {
        public readonly string DeploymentStatus;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Names of UrlSigningKey type secret objects
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceReferenceResponse> KeyReferences;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning status
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Read only system data
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKeyGroupResult(
            string deploymentStatus,

            string id,

            ImmutableArray<Outputs.ResourceReferenceResponse> keyReferences,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            DeploymentStatus = deploymentStatus;
            Id = id;
            KeyReferences = keyReferences;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
