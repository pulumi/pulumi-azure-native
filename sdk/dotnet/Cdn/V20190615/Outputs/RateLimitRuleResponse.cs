// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Cdn.V20190615.Outputs
{

    [OutputType]
    public sealed class RateLimitRuleResponse
    {
        /// <summary>
        /// Describes what action to be applied when rule matches
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
        /// </summary>
        public readonly string? EnabledState;
        /// <summary>
        /// List of match conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.MatchConditionResponse> MatchConditions;
        /// <summary>
        /// Defines the name of the custom rule
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines in what order this rule be evaluated in the overall list of custom rules
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Defines rate limit duration. Default is 1 minute.
        /// </summary>
        public readonly int RateLimitDurationInMinutes;
        /// <summary>
        /// Defines rate limit threshold.
        /// </summary>
        public readonly int RateLimitThreshold;

        [OutputConstructor]
        private RateLimitRuleResponse(
            string action,

            string? enabledState,

            ImmutableArray<Outputs.MatchConditionResponse> matchConditions,

            string name,

            int priority,

            int rateLimitDurationInMinutes,

            int rateLimitThreshold)
        {
            Action = action;
            EnabledState = enabledState;
            MatchConditions = matchConditions;
            Name = name;
            Priority = priority;
            RateLimitDurationInMinutes = rateLimitDurationInMinutes;
            RateLimitThreshold = rateLimitThreshold;
        }
    }
}
