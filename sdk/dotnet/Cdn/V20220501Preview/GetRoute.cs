// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20220501Preview
{
    public static class GetRoute
    {
        /// <summary>
        /// Gets an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
        /// </summary>
        public static Task<GetRouteResult> InvokeAsync(GetRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteResult>("azure-native:cdn/v20220501preview:getRoute", args ?? new GetRouteArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
        /// </summary>
        public static Output<GetRouteResult> Invoke(GetRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteResult>("azure-native:cdn/v20220501preview:getRoute", args ?? new GetRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the endpoint under the profile which is unique globally.
        /// </summary>
        [Input("endpointName", required: true)]
        public string EndpointName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public string ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the routing rule.
        /// </summary>
        [Input("routeName", required: true)]
        public string RouteName { get; set; } = null!;

        public GetRouteArgs()
        {
        }
        public static new GetRouteArgs Empty => new GetRouteArgs();
    }

    public sealed class GetRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the endpoint under the profile which is unique globally.
        /// </summary>
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
        /// </summary>
        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the routing rule.
        /// </summary>
        [Input("routeName", required: true)]
        public Input<string> RouteName { get; set; } = null!;

        public GetRouteInvokeArgs()
        {
        }
        public static new GetRouteInvokeArgs Empty => new GetRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteResult
    {
        /// <summary>
        /// The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object.
        /// </summary>
        public readonly Outputs.AfdRouteCacheConfigurationResponse? CacheConfiguration;
        /// <summary>
        /// Domains referenced by this endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.ActivatedResourceReferenceResponse> CustomDomains;
        public readonly string DeploymentStatus;
        /// <summary>
        /// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        public readonly string? EnabledState;
        /// <summary>
        /// The name of the endpoint which holds the route.
        /// </summary>
        public readonly string EndpointName;
        /// <summary>
        /// Protocol this rule will use when forwarding traffic to backends.
        /// </summary>
        public readonly string? ForwardingProtocol;
        /// <summary>
        /// Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
        /// </summary>
        public readonly string? HttpsRedirect;
        /// <summary>
        /// Resource ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// whether this route will be linked to the default endpoint domain.
        /// </summary>
        public readonly string? LinkToDefaultDomain;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A reference to the origin group.
        /// </summary>
        public readonly Outputs.ResourceReferenceResponse OriginGroup;
        /// <summary>
        /// A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        public readonly string? OriginPath;
        /// <summary>
        /// The route patterns of the rule.
        /// </summary>
        public readonly ImmutableArray<string> PatternsToMatch;
        /// <summary>
        /// Provisioning status
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// rule sets referenced by this endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceReferenceResponse> RuleSets;
        /// <summary>
        /// List of supported protocols for this route.
        /// </summary>
        public readonly ImmutableArray<string> SupportedProtocols;
        /// <summary>
        /// Read only system data
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRouteResult(
            Outputs.AfdRouteCacheConfigurationResponse? cacheConfiguration,

            ImmutableArray<Outputs.ActivatedResourceReferenceResponse> customDomains,

            string deploymentStatus,

            string? enabledState,

            string endpointName,

            string? forwardingProtocol,

            string? httpsRedirect,

            string id,

            string? linkToDefaultDomain,

            string name,

            Outputs.ResourceReferenceResponse originGroup,

            string? originPath,

            ImmutableArray<string> patternsToMatch,

            string provisioningState,

            ImmutableArray<Outputs.ResourceReferenceResponse> ruleSets,

            ImmutableArray<string> supportedProtocols,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            CacheConfiguration = cacheConfiguration;
            CustomDomains = customDomains;
            DeploymentStatus = deploymentStatus;
            EnabledState = enabledState;
            EndpointName = endpointName;
            ForwardingProtocol = forwardingProtocol;
            HttpsRedirect = httpsRedirect;
            Id = id;
            LinkToDefaultDomain = linkToDefaultDomain;
            Name = name;
            OriginGroup = originGroup;
            OriginPath = originPath;
            PatternsToMatch = patternsToMatch;
            ProvisioningState = provisioningState;
            RuleSets = ruleSets;
            SupportedProtocols = supportedProtocols;
            SystemData = systemData;
            Type = type;
        }
    }
}
