// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240601Preview.Outputs
{

    /// <summary>
    /// The JSON object that contains the properties to configure mutual TLS for a custom domain with FQDN. Mutual TLS cannot be configured for custom domains with wildcard host names.
    /// </summary>
    [OutputType]
    public sealed class AFDDomainMtlsParametersResponse
    {
        /// <summary>
        /// Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using reserved header.
        /// </summary>
        public readonly string? CertificatePassthrough;
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be skipped.
        /// </summary>
        public readonly string? CertificateValidation;
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing mutual TLS connection.
        /// </summary>
        public readonly string? Ocsp;
        /// <summary>
        /// List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.
        /// </summary>
        public readonly ImmutableArray<string> OtherAllowedFqdn;
        /// <summary>
        /// List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use in mutual TLS handshake.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceReferenceResponse> Secrets;

        [OutputConstructor]
        private AFDDomainMtlsParametersResponse(
            string? certificatePassthrough,

            string? certificateValidation,

            string? ocsp,

            ImmutableArray<string> otherAllowedFqdn,

            ImmutableArray<Outputs.ResourceReferenceResponse> secrets)
        {
            CertificatePassthrough = certificatePassthrough;
            CertificateValidation = certificateValidation;
            Ocsp = ocsp;
            OtherAllowedFqdn = otherAllowedFqdn;
            Secrets = secrets;
        }
    }
}
