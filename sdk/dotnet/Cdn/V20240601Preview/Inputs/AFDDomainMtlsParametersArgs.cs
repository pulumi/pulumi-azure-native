// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240601Preview.Inputs
{

    /// <summary>
    /// The JSON object that contains the properties to configure mutual TLS for a custom domain with FQDN. Mutual TLS cannot be configured for custom domains with wildcard host names.
    /// </summary>
    public sealed class AFDDomainMtlsParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using reserved header.
        /// </summary>
        [Input("certificatePassthrough")]
        public InputUnion<string, Pulumi.AzureNative.Cdn.V20240601Preview.EnabledState>? CertificatePassthrough { get; set; }

        /// <summary>
        /// Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be skipped.
        /// </summary>
        [Input("certificateValidation")]
        public InputUnion<string, Pulumi.AzureNative.Cdn.V20240601Preview.EnabledState>? CertificateValidation { get; set; }

        /// <summary>
        /// Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing mutual TLS connection.
        /// </summary>
        [Input("ocsp")]
        public InputUnion<string, Pulumi.AzureNative.Cdn.V20240601Preview.EnabledState>? Ocsp { get; set; }

        [Input("otherAllowedFqdn")]
        private InputList<string>? _otherAllowedFqdn;

        /// <summary>
        /// List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.
        /// </summary>
        public InputList<string> OtherAllowedFqdn
        {
            get => _otherAllowedFqdn ?? (_otherAllowedFqdn = new InputList<string>());
            set => _otherAllowedFqdn = value;
        }

        [Input("secrets")]
        private InputList<Inputs.ResourceReferenceArgs>? _secrets;

        /// <summary>
        /// List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use in mutual TLS handshake.
        /// </summary>
        public InputList<Inputs.ResourceReferenceArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.ResourceReferenceArgs>());
            set => _secrets = value;
        }

        public AFDDomainMtlsParametersArgs()
        {
        }
        public static new AFDDomainMtlsParametersArgs Empty => new AFDDomainMtlsParametersArgs();
    }
}
