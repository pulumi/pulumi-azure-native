// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20230501
{
    /// <summary>
    /// A profile is a logical grouping of endpoints that share the same settings.
    /// </summary>
    [AzureNativeResourceType("azure-native:cdn/v20230501:Profile")]
    public partial class Profile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Key-Value pair representing additional properties for profiles.
        /// </summary>
        [Output("extendedProperties")]
        public Output<ImmutableDictionary<string, string>> ExtendedProperties { get; private set; } = null!;

        /// <summary>
        /// The Id of the frontdoor.
        /// </summary>
        [Output("frontDoorId")]
        public Output<string> FrontDoorId { get; private set; } = null!;

        /// <summary>
        /// Managed service identity (system assigned and/or user assigned identities).
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
        /// </summary>
        [Output("originResponseTimeoutSeconds")]
        public Output<int?> OriginResponseTimeoutSeconds { get; private set; } = null!;

        /// <summary>
        /// Provisioning status of the profile.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource status of the profile.
        /// </summary>
        [Output("resourceState")]
        public Output<string> ResourceState { get; private set; } = null!;

        /// <summary>
        /// The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// Read only system data
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Profile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Profile(string name, ProfileArgs args, CustomResourceOptions? options = null)
            : base("azure-native:cdn/v20230501:Profile", name, args ?? new ProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Profile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:cdn/v20230501:Profile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:cdn:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20150601:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20160402:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20161002:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20170402:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20171012:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20190415:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20190615:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20190615preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20191231:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20200331:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20200415:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20200901:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20210601:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20220501preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20221101preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20230701preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240201:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240501preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240601preview:Profile" },
                    new global::Pulumi.Alias { Type = "azure-native:cdn/v20240901:Profile" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Profile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Profile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Profile(name, id, options);
        }
    }

    public sealed class ProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Managed service identity (system assigned and/or user assigned identities).
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
        /// </summary>
        [Input("originResponseTimeoutSeconds")]
        public Input<int>? OriginResponseTimeoutSeconds { get; set; }

        /// <summary>
        /// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
        /// </summary>
        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.SkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProfileArgs()
        {
        }
        public static new ProfileArgs Empty => new ProfileArgs();
    }
}
