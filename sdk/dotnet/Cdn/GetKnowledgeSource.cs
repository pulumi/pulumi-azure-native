// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn
{
    public static class GetKnowledgeSource
    {
        /// <summary>
        /// Gets a knowledge source with the specified name within a web agent.
        /// 
        /// Uses Azure REST API version 2025-09-01-preview.
        /// </summary>
        public static Task<GetKnowledgeSourceResult> InvokeAsync(GetKnowledgeSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKnowledgeSourceResult>("azure-native:cdn:getKnowledgeSource", args ?? new GetKnowledgeSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a knowledge source with the specified name within a web agent.
        /// 
        /// Uses Azure REST API version 2025-09-01-preview.
        /// </summary>
        public static Output<GetKnowledgeSourceResult> Invoke(GetKnowledgeSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKnowledgeSourceResult>("azure-native:cdn:getKnowledgeSource", args ?? new GetKnowledgeSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a knowledge source with the specified name within a web agent.
        /// 
        /// Uses Azure REST API version 2025-09-01-preview.
        /// </summary>
        public static Output<GetKnowledgeSourceResult> Invoke(GetKnowledgeSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKnowledgeSourceResult>("azure-native:cdn:getKnowledgeSource", args ?? new GetKnowledgeSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKnowledgeSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the knowledge source.
        /// </summary>
        [Input("knowledgeSourceName", required: true)]
        public string KnowledgeSourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the web agent.
        /// </summary>
        [Input("webAgentName", required: true)]
        public string WebAgentName { get; set; } = null!;

        public GetKnowledgeSourceArgs()
        {
        }
        public static new GetKnowledgeSourceArgs Empty => new GetKnowledgeSourceArgs();
    }

    public sealed class GetKnowledgeSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the knowledge source.
        /// </summary>
        [Input("knowledgeSourceName", required: true)]
        public Input<string> KnowledgeSourceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the web agent.
        /// </summary>
        [Input("webAgentName", required: true)]
        public Input<string> WebAgentName { get; set; } = null!;

        public GetKnowledgeSourceInvokeArgs()
        {
        }
        public static new GetKnowledgeSourceInvokeArgs Empty => new GetKnowledgeSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetKnowledgeSourceResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Description of the knowledge source.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last time the knowledge source was updated.
        /// </summary>
        public readonly string LastRefreshedTime;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning status of the knowledge source.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Format or origin of the knowledge source.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the units of time for scheduling update intervals for the knowledge source.
        /// </summary>
        public readonly string? UpdateFrequency;
        /// <summary>
        /// Endpoint or location of the knowledge source.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetKnowledgeSourceResult(
            string azureApiVersion,

            string? description,

            string id,

            string lastRefreshedTime,

            string name,

            string provisioningState,

            string sourceType,

            Outputs.SystemDataResponse systemData,

            string type,

            string? updateFrequency,

            string url)
        {
            AzureApiVersion = azureApiVersion;
            Description = description;
            Id = id;
            LastRefreshedTime = lastRefreshedTime;
            Name = name;
            ProvisioningState = provisioningState;
            SourceType = sourceType;
            SystemData = systemData;
            Type = type;
            UpdateFrequency = updateFrequency;
            Url = url;
        }
    }
}
