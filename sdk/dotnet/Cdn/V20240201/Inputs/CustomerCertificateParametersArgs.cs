// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240201.Inputs
{

    /// <summary>
    /// Customer Certificate used for https
    /// </summary>
    public sealed class CustomerCertificateParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
        /// </summary>
        [Input("secretSource", required: true)]
        public Input<Inputs.ResourceReferenceArgs> SecretSource { get; set; } = null!;

        /// <summary>
        /// Version of the secret to be used
        /// </summary>
        [Input("secretVersion")]
        public Input<string>? SecretVersion { get; set; }

        [Input("subjectAlternativeNames")]
        private InputList<string>? _subjectAlternativeNames;

        /// <summary>
        /// The list of SANs.
        /// </summary>
        public InputList<string> SubjectAlternativeNames
        {
            get => _subjectAlternativeNames ?? (_subjectAlternativeNames = new InputList<string>());
            set => _subjectAlternativeNames = value;
        }

        /// <summary>
        /// The type of the secret resource.
        /// Expected value is 'CustomerCertificate'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Whether to use the latest version for the certificate
        /// </summary>
        [Input("useLatestVersion")]
        public Input<bool>? UseLatestVersion { get; set; }

        public CustomerCertificateParametersArgs()
        {
        }
        public static new CustomerCertificateParametersArgs Empty => new CustomerCertificateParametersArgs();
    }
}
