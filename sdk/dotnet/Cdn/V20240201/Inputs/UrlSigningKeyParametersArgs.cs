// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240201.Inputs
{

    /// <summary>
    /// Url signing key parameters
    /// </summary>
    public sealed class UrlSigningKeyParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
        /// </summary>
        [Input("keyId", required: true)]
        public Input<string> KeyId { get; set; } = null!;

        /// <summary>
        /// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
        /// </summary>
        [Input("secretSource", required: true)]
        public Input<Inputs.ResourceReferenceArgs> SecretSource { get; set; } = null!;

        /// <summary>
        /// Version of the secret to be used
        /// </summary>
        [Input("secretVersion")]
        public Input<string>? SecretVersion { get; set; }

        /// <summary>
        /// The type of the secret resource.
        /// Expected value is 'UrlSigningKey'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public UrlSigningKeyParametersArgs()
        {
        }
        public static new UrlSigningKeyParametersArgs Empty => new UrlSigningKeyParametersArgs();
    }
}
