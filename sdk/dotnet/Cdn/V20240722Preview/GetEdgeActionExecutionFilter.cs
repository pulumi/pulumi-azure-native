// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Cdn.V20240722Preview
{
    public static class GetEdgeActionExecutionFilter
    {
        /// <summary>
        /// Get EdgeActionExecutionFilter resource
        /// </summary>
        public static Task<GetEdgeActionExecutionFilterResult> InvokeAsync(GetEdgeActionExecutionFilterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeActionExecutionFilterResult>("azure-native:cdn/v20240722preview:getEdgeActionExecutionFilter", args ?? new GetEdgeActionExecutionFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Get EdgeActionExecutionFilter resource
        /// </summary>
        public static Output<GetEdgeActionExecutionFilterResult> Invoke(GetEdgeActionExecutionFilterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeActionExecutionFilterResult>("azure-native:cdn/v20240722preview:getEdgeActionExecutionFilter", args ?? new GetEdgeActionExecutionFilterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get EdgeActionExecutionFilter resource
        /// </summary>
        public static Output<GetEdgeActionExecutionFilterResult> Invoke(GetEdgeActionExecutionFilterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeActionExecutionFilterResult>("azure-native:cdn/v20240722preview:getEdgeActionExecutionFilter", args ?? new GetEdgeActionExecutionFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeActionExecutionFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Edge Action
        /// </summary>
        [Input("edgeActionName", required: true)]
        public string EdgeActionName { get; set; } = null!;

        /// <summary>
        /// The name of the execution filter
        /// </summary>
        [Input("executionFilter", required: true)]
        public string ExecutionFilter { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetEdgeActionExecutionFilterArgs()
        {
        }
        public static new GetEdgeActionExecutionFilterArgs Empty => new GetEdgeActionExecutionFilterArgs();
    }

    public sealed class GetEdgeActionExecutionFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Edge Action
        /// </summary>
        [Input("edgeActionName", required: true)]
        public Input<string> EdgeActionName { get; set; } = null!;

        /// <summary>
        /// The name of the execution filter
        /// </summary>
        [Input("executionFilter", required: true)]
        public Input<string> ExecutionFilter { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetEdgeActionExecutionFilterInvokeArgs()
        {
        }
        public static new GetEdgeActionExecutionFilterInvokeArgs Empty => new GetEdgeActionExecutionFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeActionExecutionFilterResult
    {
        /// <summary>
        /// Custom Header Key associated with the execution filter
        /// </summary>
        public readonly string ExecutionFilterIdentifierHeaderName;
        /// <summary>
        /// Custom Header Value associated with the execution filter
        /// </summary>
        public readonly string ExecutionFilterIdentifierHeaderValue;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last update time in UTC for the execution filter
        /// </summary>
        public readonly string LastUpdateTime;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The referenced versionId of the edgeAction version
        /// </summary>
        public readonly string VersionId;

        [OutputConstructor]
        private GetEdgeActionExecutionFilterResult(
            string executionFilterIdentifierHeaderName,

            string executionFilterIdentifierHeaderValue,

            string id,

            string lastUpdateTime,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string versionId)
        {
            ExecutionFilterIdentifierHeaderName = executionFilterIdentifierHeaderName;
            ExecutionFilterIdentifierHeaderValue = executionFilterIdentifierHeaderValue;
            Id = id;
            LastUpdateTime = lastUpdateTime;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VersionId = versionId;
        }
    }
}
