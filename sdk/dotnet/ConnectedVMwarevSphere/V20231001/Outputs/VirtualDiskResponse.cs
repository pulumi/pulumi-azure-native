// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20231001.Outputs
{

    /// <summary>
    /// Virtual disk model
    /// </summary>
    [OutputType]
    public sealed class VirtualDiskResponse
    {
        /// <summary>
        /// Gets or sets the controller id.
        /// </summary>
        public readonly int? ControllerKey;
        /// <summary>
        /// Gets or sets the device key value.
        /// </summary>
        public readonly int? DeviceKey;
        /// <summary>
        /// Gets or sets the device name.
        /// </summary>
        public readonly string? DeviceName;
        /// <summary>
        /// Gets or sets the disk mode.
        /// </summary>
        public readonly string? DiskMode;
        /// <summary>
        /// Gets or sets the disk object id.
        /// </summary>
        public readonly string DiskObjectId;
        /// <summary>
        /// Gets or sets the disk total size.
        /// </summary>
        public readonly int? DiskSizeGB;
        /// <summary>
        /// Gets or sets the disk backing type.
        /// </summary>
        public readonly string? DiskType;
        /// <summary>
        /// Gets or sets the label of the virtual disk in vCenter.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// Gets or sets the name of the virtual disk.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Gets or sets the unit number of the disk on the controller.
        /// </summary>
        public readonly int? UnitNumber;

        [OutputConstructor]
        private VirtualDiskResponse(
            int? controllerKey,

            int? deviceKey,

            string? deviceName,

            string? diskMode,

            string diskObjectId,

            int? diskSizeGB,

            string? diskType,

            string label,

            string? name,

            int? unitNumber)
        {
            ControllerKey = controllerKey;
            DeviceKey = deviceKey;
            DeviceName = deviceName;
            DiskMode = diskMode;
            DiskObjectId = diskObjectId;
            DiskSizeGB = diskSizeGB;
            DiskType = diskType;
            Label = label;
            Name = name;
            UnitNumber = unitNumber;
        }
    }
}
