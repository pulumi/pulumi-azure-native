// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20230301Preview.Outputs
{

    /// <summary>
    /// Specifies the guest agent settings for the virtual machine.
    /// </summary>
    [OutputType]
    public sealed class GuestAgentProfileResponse
    {
        /// <summary>
        /// The hybrid machine agent full version.
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// Gets or sets the Public Key provided by the client for enabling guest management.
        /// </summary>
        public readonly string? ClientPublicKey;
        /// <summary>
        /// Details about the error state.
        /// </summary>
        public readonly ImmutableArray<Outputs.ErrorDetailResponse> ErrorDetails;
        /// <summary>
        /// The time of the last status change.
        /// </summary>
        public readonly string LastStatusChange;
        /// <summary>
        /// Specifies whether any MS SQL instance is discovered on the machine.
        /// </summary>
        public readonly string MssqlDiscovered;
        /// <summary>
        /// The status of the hybrid machine agent.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Specifies the VM's unique SMBIOS ID.
        /// </summary>
        public readonly string VmUuid;

        [OutputConstructor]
        private GuestAgentProfileResponse(
            string agentVersion,

            string? clientPublicKey,

            ImmutableArray<Outputs.ErrorDetailResponse> errorDetails,

            string lastStatusChange,

            string mssqlDiscovered,

            string status,

            string vmUuid)
        {
            AgentVersion = agentVersion;
            ClientPublicKey = clientPublicKey;
            ErrorDetails = errorDetails;
            LastStatusChange = lastStatusChange;
            MssqlDiscovered = mssqlDiscovered;
            Status = status;
            VmUuid = vmUuid;
        }
    }
}
