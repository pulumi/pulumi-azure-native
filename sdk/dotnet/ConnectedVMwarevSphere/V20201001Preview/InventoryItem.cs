// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20201001Preview
{
    /// <summary>
    /// Defines the inventory item.
    /// </summary>
    [AzureNativeResourceType("azure-native:connectedvmwarevsphere/v20201001preview:InventoryItem")]
    public partial class InventoryItem : Pulumi.CustomResource
    {
        /// <summary>
        /// They inventory type.
        /// </summary>
        [Output("inventoryType")]
        public Output<string> InventoryType { get; private set; } = null!;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the tracked resource id corresponding to the inventory resource.
        /// </summary>
        [Output("managedResourceId")]
        public Output<string?> ManagedResourceId { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the inventory item.
        /// </summary>
        [Output("moName")]
        public Output<string?> MoName { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
        /// </summary>
        [Output("moRefId")]
        public Output<string?> MoRefId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system data.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a InventoryItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InventoryItem(string name, InventoryItemArgs args, CustomResourceOptions? options = null)
            : base("azure-native:connectedvmwarevsphere/v20201001preview:InventoryItem", name, args ?? new InventoryItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InventoryItem(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:connectedvmwarevsphere/v20201001preview:InventoryItem", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere:InventoryItem"},
                    new Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere/v20220110preview:InventoryItem"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InventoryItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InventoryItem Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new InventoryItem(name, id, options);
        }
    }

    public sealed class InventoryItemArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the inventoryItem.
        /// </summary>
        [Input("inventoryItemName")]
        public Input<string>? InventoryItemName { get; set; }

        /// <summary>
        /// They inventory type.
        /// </summary>
        [Input("inventoryType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.ConnectedVMwarevSphere.V20201001Preview.InventoryType> InventoryType { get; set; } = null!;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Gets or sets the tracked resource id corresponding to the inventory resource.
        /// </summary>
        [Input("managedResourceId")]
        public Input<string>? ManagedResourceId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the inventory item.
        /// </summary>
        [Input("moName")]
        public Input<string>? MoName { get; set; }

        /// <summary>
        /// Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
        /// </summary>
        [Input("moRefId")]
        public Input<string>? MoRefId { get; set; }

        /// <summary>
        /// The Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vCenter.
        /// </summary>
        [Input("vcenterName", required: true)]
        public Input<string> VcenterName { get; set; } = null!;

        public InventoryItemArgs()
        {
        }
    }
}
