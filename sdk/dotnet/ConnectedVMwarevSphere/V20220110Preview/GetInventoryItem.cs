// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20220110Preview
{
    public static class GetInventoryItem
    {
        /// <summary>
        /// Defines the inventory item.
        /// </summary>
        public static Task<GetInventoryItemResult> InvokeAsync(GetInventoryItemArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInventoryItemResult>("azure-native:connectedvmwarevsphere/v20220110preview:getInventoryItem", args ?? new GetInventoryItemArgs(), options.WithDefaults());

        /// <summary>
        /// Defines the inventory item.
        /// </summary>
        public static Output<GetInventoryItemResult> Invoke(GetInventoryItemInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInventoryItemResult>("azure-native:connectedvmwarevsphere/v20220110preview:getInventoryItem", args ?? new GetInventoryItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInventoryItemArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the inventoryItem.
        /// </summary>
        [Input("inventoryItemName", required: true)]
        public string InventoryItemName { get; set; } = null!;

        /// <summary>
        /// The Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vCenter.
        /// </summary>
        [Input("vcenterName", required: true)]
        public string VcenterName { get; set; } = null!;

        public GetInventoryItemArgs()
        {
        }
    }

    public sealed class GetInventoryItemInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the inventoryItem.
        /// </summary>
        [Input("inventoryItemName", required: true)]
        public Input<string> InventoryItemName { get; set; } = null!;

        /// <summary>
        /// The Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vCenter.
        /// </summary>
        [Input("vcenterName", required: true)]
        public Input<string> VcenterName { get; set; } = null!;

        public GetInventoryItemInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInventoryItemResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// They inventory type.
        /// </summary>
        public readonly string InventoryType;
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Gets or sets the tracked resource id corresponding to the inventory resource.
        /// </summary>
        public readonly string? ManagedResourceId;
        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the inventory item.
        /// </summary>
        public readonly string? MoName;
        /// <summary>
        /// Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
        /// </summary>
        public readonly string? MoRefId;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The system data.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInventoryItemResult(
            string id,

            string inventoryType,

            string? kind,

            string? managedResourceId,

            string? moName,

            string? moRefId,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Id = id;
            InventoryType = inventoryType;
            Kind = kind;
            ManagedResourceId = managedResourceId;
            MoName = moName;
            MoRefId = moRefId;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
