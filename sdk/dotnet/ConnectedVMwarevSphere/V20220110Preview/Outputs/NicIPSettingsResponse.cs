// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20220110Preview.Outputs
{

    /// <summary>
    /// Defines the network interface ip settings.
    /// </summary>
    [OutputType]
    public sealed class NicIPSettingsResponse
    {
        /// <summary>
        /// Gets or sets the nic allocation method.
        /// </summary>
        public readonly string? AllocationMethod;
        /// <summary>
        /// Gets or sets the dns servers.
        /// </summary>
        public readonly ImmutableArray<string> DnsServers;
        /// <summary>
        /// Gets or sets the gateway.
        /// </summary>
        public readonly ImmutableArray<string> Gateway;
        /// <summary>
        /// Gets or sets the ip address for the nic.
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.
        /// </summary>
        public readonly ImmutableArray<Outputs.NicIPAddressSettingsResponse> IpAddressInfo;
        /// <summary>
        /// Gets or sets the primary server.
        /// </summary>
        public readonly string PrimaryWinsServer;
        /// <summary>
        /// Gets or sets the secondary server.
        /// </summary>
        public readonly string SecondaryWinsServer;
        /// <summary>
        /// Gets or sets the mask.
        /// </summary>
        public readonly string? SubnetMask;

        [OutputConstructor]
        private NicIPSettingsResponse(
            string? allocationMethod,

            ImmutableArray<string> dnsServers,

            ImmutableArray<string> gateway,

            string? ipAddress,

            ImmutableArray<Outputs.NicIPAddressSettingsResponse> ipAddressInfo,

            string primaryWinsServer,

            string secondaryWinsServer,

            string? subnetMask)
        {
            AllocationMethod = allocationMethod;
            DnsServers = dnsServers;
            Gateway = gateway;
            IpAddress = ipAddress;
            IpAddressInfo = ipAddressInfo;
            PrimaryWinsServer = primaryWinsServer;
            SecondaryWinsServer = secondaryWinsServer;
            SubnetMask = subnetMask;
        }
    }
}
