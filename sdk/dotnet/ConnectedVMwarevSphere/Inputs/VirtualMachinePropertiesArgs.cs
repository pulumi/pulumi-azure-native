// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.Inputs
{

    /// <summary>
    /// Defines the resource properties.
    /// </summary>
    public sealed class VirtualMachinePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Firmware type
        /// </summary>
        [Input("firmwareType")]
        public InputUnion<string, Pulumi.AzureNative.ConnectedVMwarevSphere.FirmwareType>? FirmwareType { get; set; }

        /// <summary>
        /// Hardware properties.
        /// </summary>
        [Input("hardwareProfile")]
        public Input<Inputs.HardwareProfileArgs>? HardwareProfile { get; set; }

        /// <summary>
        /// Gets or sets the inventory Item ID for the virtual machine.
        /// </summary>
        [Input("inventoryItemId")]
        public Input<string>? InventoryItemId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
        /// </summary>
        [Input("moRefId")]
        public Input<string>? MoRefId { get; set; }

        /// <summary>
        /// Network properties.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.NetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// OS properties.
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.OsProfileArgs>? OsProfile { get; set; }

        /// <summary>
        /// Placement properties.
        /// </summary>
        [Input("placementProfile")]
        public Input<Inputs.PlacementProfileArgs>? PlacementProfile { get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
        /// deploy.
        /// </summary>
        [Input("resourcePoolId")]
        public Input<string>? ResourcePoolId { get; set; }

        /// <summary>
        /// Gets or sets the SMBIOS UUID of the vm.
        /// </summary>
        [Input("smbiosUuid")]
        public Input<string>? SmbiosUuid { get; set; }

        /// <summary>
        /// Storage properties.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.StorageProfileArgs>? StorageProfile { get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the template resource to deploy the virtual machine.
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Input("vCenterId")]
        public Input<string>? VCenterId { get; set; }

        public VirtualMachinePropertiesArgs()
        {
        }
        public static new VirtualMachinePropertiesArgs Empty => new VirtualMachinePropertiesArgs();
    }
}
