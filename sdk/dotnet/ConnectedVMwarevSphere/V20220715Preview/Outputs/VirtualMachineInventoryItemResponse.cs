// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20220715Preview.Outputs
{

    /// <summary>
    /// The VM inventory item.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineInventoryItemResponse
    {
        /// <summary>
        /// Cluster inventory resource details.
        /// </summary>
        public readonly Outputs.InventoryItemDetailsResponse? Cluster;
        /// <summary>
        /// Gets or sets the folder path of the vm.
        /// </summary>
        public readonly string? FolderPath;
        /// <summary>
        /// Host inventory resource details.
        /// </summary>
        public readonly Outputs.InventoryItemDetailsResponse? Host;
        /// <summary>
        /// Gets or sets the instance uuid of the vm.
        /// </summary>
        public readonly string? InstanceUuid;
        /// <summary>
        /// The inventory type.
        /// Expected value is 'VirtualMachine'.
        /// </summary>
        public readonly string InventoryType;
        /// <summary>
        /// Gets or sets the nic ip addresses.
        /// </summary>
        public readonly ImmutableArray<string> IpAddresses;
        /// <summary>
        /// Gets or sets the tracked resource id corresponding to the inventory resource.
        /// </summary>
        public readonly string? ManagedResourceId;
        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the inventory item.
        /// </summary>
        public readonly string? MoName;
        /// <summary>
        /// Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
        /// </summary>
        public readonly string? MoRefId;
        /// <summary>
        /// Gets or sets os name.
        /// </summary>
        public readonly string? OsName;
        /// <summary>
        /// Gets or sets the type of the os.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// Gets the power state of the virtual machine.
        /// </summary>
        public readonly string PowerState;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// ResourcePool inventory resource details.
        /// </summary>
        public readonly Outputs.InventoryItemDetailsResponse? ResourcePool;
        /// <summary>
        /// Gets or sets the SMBIOS UUID of the vm.
        /// </summary>
        public readonly string? SmbiosUuid;
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        public readonly string ToolsRunningStatus;
        /// <summary>
        /// Gets or sets the current version of VMware Tools.
        /// </summary>
        public readonly string ToolsVersion;
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        public readonly string ToolsVersionStatus;

        [OutputConstructor]
        private VirtualMachineInventoryItemResponse(
            Outputs.InventoryItemDetailsResponse? cluster,

            string? folderPath,

            Outputs.InventoryItemDetailsResponse? host,

            string? instanceUuid,

            string inventoryType,

            ImmutableArray<string> ipAddresses,

            string? managedResourceId,

            string? moName,

            string? moRefId,

            string? osName,

            string? osType,

            string powerState,

            string provisioningState,

            Outputs.InventoryItemDetailsResponse? resourcePool,

            string? smbiosUuid,

            string toolsRunningStatus,

            string toolsVersion,

            string toolsVersionStatus)
        {
            Cluster = cluster;
            FolderPath = folderPath;
            Host = host;
            InstanceUuid = instanceUuid;
            InventoryType = inventoryType;
            IpAddresses = ipAddresses;
            ManagedResourceId = managedResourceId;
            MoName = moName;
            MoRefId = moRefId;
            OsName = osName;
            OsType = osType;
            PowerState = powerState;
            ProvisioningState = provisioningState;
            ResourcePool = resourcePool;
            SmbiosUuid = smbiosUuid;
            ToolsRunningStatus = toolsRunningStatus;
            ToolsVersion = toolsVersion;
            ToolsVersionStatus = toolsVersionStatus;
        }
    }
}
