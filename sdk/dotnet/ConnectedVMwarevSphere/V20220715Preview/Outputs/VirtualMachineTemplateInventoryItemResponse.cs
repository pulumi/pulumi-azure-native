// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20220715Preview.Outputs
{

    /// <summary>
    /// The VM Template inventory item.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachineTemplateInventoryItemResponse
    {
        /// <summary>
        /// Gets or sets the folder path of the template.
        /// </summary>
        public readonly string? FolderPath;
        /// <summary>
        /// The inventory type.
        /// Expected value is 'VirtualMachineTemplate'.
        /// </summary>
        public readonly string InventoryType;
        /// <summary>
        /// Gets or sets the tracked resource id corresponding to the inventory resource.
        /// </summary>
        public readonly string? ManagedResourceId;
        /// <summary>
        /// Gets or sets memory size in MBs for the template.
        /// </summary>
        public readonly int? MemorySizeMB;
        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the inventory item.
        /// </summary>
        public readonly string? MoName;
        /// <summary>
        /// Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
        /// </summary>
        public readonly string? MoRefId;
        /// <summary>
        /// Gets or sets the number of vCPUs for the template.
        /// </summary>
        public readonly int? NumCPUs;
        /// <summary>
        /// Gets or sets the number of cores per socket for the template.
        /// Defaults to 1 if unspecified.
        /// </summary>
        public readonly int? NumCoresPerSocket;
        /// <summary>
        /// Gets or sets os name.
        /// </summary>
        public readonly string? OsName;
        /// <summary>
        /// Gets or sets the type of the os.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Gets or sets the current version of VMware Tools.
        /// </summary>
        public readonly string ToolsVersion;
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        public readonly string ToolsVersionStatus;

        [OutputConstructor]
        private VirtualMachineTemplateInventoryItemResponse(
            string? folderPath,

            string inventoryType,

            string? managedResourceId,

            int? memorySizeMB,

            string? moName,

            string? moRefId,

            int? numCPUs,

            int? numCoresPerSocket,

            string? osName,

            string? osType,

            string provisioningState,

            string toolsVersion,

            string toolsVersionStatus)
        {
            FolderPath = folderPath;
            InventoryType = inventoryType;
            ManagedResourceId = managedResourceId;
            MemorySizeMB = memorySizeMB;
            MoName = moName;
            MoRefId = moRefId;
            NumCPUs = numCPUs;
            NumCoresPerSocket = numCoresPerSocket;
            OsName = osName;
            OsType = osType;
            ProvisioningState = provisioningState;
            ToolsVersion = toolsVersion;
            ToolsVersionStatus = toolsVersionStatus;
        }
    }
}
