// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConnectedVMwarevSphere.V20220715Preview
{
    /// <summary>
    /// Defines the HybridIdentityMetadata.
    /// </summary>
    [AzureNativeResourceType("azure-native:connectedvmwarevsphere/v20220715preview:HybridIdentityMetadatum")]
    public partial class HybridIdentityMetadatum : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identity of the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse> Identity { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Public Key.
        /// </summary>
        [Output("publicKey")]
        public Output<string?> PublicKey { get; private set; } = null!;

        /// <summary>
        /// The system data.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the Vm Id.
        /// </summary>
        [Output("vmId")]
        public Output<string?> VmId { get; private set; } = null!;


        /// <summary>
        /// Create a HybridIdentityMetadatum resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HybridIdentityMetadatum(string name, HybridIdentityMetadatumArgs args, CustomResourceOptions? options = null)
            : base("azure-native:connectedvmwarevsphere/v20220715preview:HybridIdentityMetadatum", name, args ?? new HybridIdentityMetadatumArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HybridIdentityMetadatum(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:connectedvmwarevsphere/v20220715preview:HybridIdentityMetadatum", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere:HybridIdentityMetadatum" },
                    new global::Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere/v20201001preview:HybridIdentityMetadatum" },
                    new global::Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere/v20220110preview:HybridIdentityMetadatum" },
                    new global::Pulumi.Alias { Type = "azure-native:connectedvmwarevsphere/v20230301preview:HybridIdentityMetadatum" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HybridIdentityMetadatum resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HybridIdentityMetadatum Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HybridIdentityMetadatum(name, id, options);
        }
    }

    public sealed class HybridIdentityMetadatumArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the hybridIdentityMetadata.
        /// </summary>
        [Input("metadataName")]
        public Input<string>? MetadataName { get; set; }

        /// <summary>
        /// Gets or sets the Public Key.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        /// <summary>
        /// The Resource Group Name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the vm.
        /// </summary>
        [Input("virtualMachineName", required: true)]
        public Input<string> VirtualMachineName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the Vm Id.
        /// </summary>
        [Input("vmId")]
        public Input<string>? VmId { get; set; }

        public HybridIdentityMetadatumArgs()
        {
        }
        public static new HybridIdentityMetadatumArgs Empty => new HybridIdentityMetadatumArgs();
    }
}
