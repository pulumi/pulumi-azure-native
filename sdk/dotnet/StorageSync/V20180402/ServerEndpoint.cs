// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorageSync.V20180402
{
    /// <summary>
    /// Server Endpoint object.
    /// </summary>
    public partial class ServerEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        [Output("cloudTiering")]
        public Output<string?> CloudTiering { get; private set; } = null!;

        /// <summary>
        /// Friendly Name
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// Resource Last Operation Name
        /// </summary>
        [Output("lastOperationName")]
        public Output<string?> LastOperationName { get; private set; } = null!;

        /// <summary>
        /// ServerEndpoint lastWorkflowId
        /// </summary>
        [Output("lastWorkflowId")]
        public Output<string?> LastWorkflowId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ServerEndpoint Provisioning State
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Server Local path.
        /// </summary>
        [Output("serverLocalPath")]
        public Output<string?> ServerLocalPath { get; private set; } = null!;

        /// <summary>
        /// Server Resource Id.
        /// </summary>
        [Output("serverResourceId")]
        public Output<string?> ServerResourceId { get; private set; } = null!;

        /// <summary>
        /// Sync Health Status
        /// </summary>
        [Output("syncStatus")]
        public Output<object?> SyncStatus { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        [Output("volumeFreeSpacePercent")]
        public Output<int?> VolumeFreeSpacePercent { get; private set; } = null!;


        /// <summary>
        /// Create a ServerEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerEndpoint(string name, ServerEndpointArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagesync/v20180402:ServerEndpoint", name, args ?? new ServerEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagesync/v20180402:ServerEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/latest:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20170605preview:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20180701:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20181001:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190201:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190301:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190601:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20191001:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20200301:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20200901:ServerEndpoint"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServerEndpoint(name, id, options);
        }
    }

    public sealed class ServerEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        [Input("cloudTiering")]
        public Input<string>? CloudTiering { get; set; }

        /// <summary>
        /// Friendly Name
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Server Endpoint object.
        /// </summary>
        [Input("serverEndpointName", required: true)]
        public Input<string> ServerEndpointName { get; set; } = null!;

        /// <summary>
        /// Server Local path.
        /// </summary>
        [Input("serverLocalPath")]
        public Input<string>? ServerLocalPath { get; set; }

        /// <summary>
        /// Server Resource Id.
        /// </summary>
        [Input("serverResourceId")]
        public Input<string>? ServerResourceId { get; set; }

        /// <summary>
        /// Name of Storage Sync Service resource.
        /// </summary>
        [Input("storageSyncServiceName", required: true)]
        public Input<string> StorageSyncServiceName { get; set; } = null!;

        /// <summary>
        /// Name of Sync Group resource.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public Input<string> SyncGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        [Input("volumeFreeSpacePercent")]
        public Input<int>? VolumeFreeSpacePercent { get; set; }

        public ServerEndpointArgs()
        {
        }
    }
}
