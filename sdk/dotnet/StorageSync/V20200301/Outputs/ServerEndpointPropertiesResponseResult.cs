// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.StorageSync.V20200301.Outputs
{

    [OutputType]
    public sealed class ServerEndpointPropertiesResponseResult
    {
        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        public readonly string? CloudTiering;
        /// <summary>
        /// Cloud tiering status. Only populated if cloud tiering is enabled.
        /// </summary>
        public readonly Outputs.ServerEndpointCloudTieringStatusResponseResult CloudTieringStatus;
        /// <summary>
        /// Friendly Name
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// Policy for how namespace and files are recalled during FastDr.
        /// </summary>
        public readonly string? InitialDownloadPolicy;
        /// <summary>
        /// Resource Last Operation Name
        /// </summary>
        public readonly string LastOperationName;
        /// <summary>
        /// ServerEndpoint lastWorkflowId
        /// </summary>
        public readonly string LastWorkflowId;
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        public readonly string? LocalCacheMode;
        /// <summary>
        /// Offline data transfer
        /// </summary>
        public readonly string? OfflineDataTransfer;
        /// <summary>
        /// Offline data transfer share name
        /// </summary>
        public readonly string? OfflineDataTransferShareName;
        /// <summary>
        /// Offline data transfer storage account resource ID
        /// </summary>
        public readonly string OfflineDataTransferStorageAccountResourceId;
        /// <summary>
        /// Offline data transfer storage account tenant ID
        /// </summary>
        public readonly string OfflineDataTransferStorageAccountTenantId;
        /// <summary>
        /// ServerEndpoint Provisioning State
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Recall status. Only populated if cloud tiering is enabled.
        /// </summary>
        public readonly Outputs.ServerEndpointRecallStatusResponseResult RecallStatus;
        /// <summary>
        /// Server Local path.
        /// </summary>
        public readonly string? ServerLocalPath;
        /// <summary>
        /// Server Resource Id.
        /// </summary>
        public readonly string? ServerResourceId;
        /// <summary>
        /// Server Endpoint sync status
        /// </summary>
        public readonly Outputs.ServerEndpointSyncStatusResponseResult SyncStatus;
        /// <summary>
        /// Tier files older than days.
        /// </summary>
        public readonly int? TierFilesOlderThanDays;
        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        public readonly int? VolumeFreeSpacePercent;

        [OutputConstructor]
        private ServerEndpointPropertiesResponseResult(
            string? cloudTiering,

            Outputs.ServerEndpointCloudTieringStatusResponseResult cloudTieringStatus,

            string? friendlyName,

            string? initialDownloadPolicy,

            string lastOperationName,

            string lastWorkflowId,

            string? localCacheMode,

            string? offlineDataTransfer,

            string? offlineDataTransferShareName,

            string offlineDataTransferStorageAccountResourceId,

            string offlineDataTransferStorageAccountTenantId,

            string provisioningState,

            Outputs.ServerEndpointRecallStatusResponseResult recallStatus,

            string? serverLocalPath,

            string? serverResourceId,

            Outputs.ServerEndpointSyncStatusResponseResult syncStatus,

            int? tierFilesOlderThanDays,

            int? volumeFreeSpacePercent)
        {
            CloudTiering = cloudTiering;
            CloudTieringStatus = cloudTieringStatus;
            FriendlyName = friendlyName;
            InitialDownloadPolicy = initialDownloadPolicy;
            LastOperationName = lastOperationName;
            LastWorkflowId = lastWorkflowId;
            LocalCacheMode = localCacheMode;
            OfflineDataTransfer = offlineDataTransfer;
            OfflineDataTransferShareName = offlineDataTransferShareName;
            OfflineDataTransferStorageAccountResourceId = offlineDataTransferStorageAccountResourceId;
            OfflineDataTransferStorageAccountTenantId = offlineDataTransferStorageAccountTenantId;
            ProvisioningState = provisioningState;
            RecallStatus = recallStatus;
            ServerLocalPath = serverLocalPath;
            ServerResourceId = serverResourceId;
            SyncStatus = syncStatus;
            TierFilesOlderThanDays = tierFilesOlderThanDays;
            VolumeFreeSpacePercent = volumeFreeSpacePercent;
        }
    }
}
