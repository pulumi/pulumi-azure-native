// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageSync
{
    public static class GetStorageSyncService
    {
        /// <summary>
        /// Get a given StorageSyncService.
        /// API Version: 2020-03-01.
        /// </summary>
        public static Task<GetStorageSyncServiceResult> InvokeAsync(GetStorageSyncServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageSyncServiceResult>("azure-native:storagesync:getStorageSyncService", args ?? new GetStorageSyncServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a given StorageSyncService.
        /// API Version: 2020-03-01.
        /// </summary>
        public static Output<GetStorageSyncServiceResult> Invoke(GetStorageSyncServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageSyncServiceResult>("azure-native:storagesync:getStorageSyncService", args ?? new GetStorageSyncServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageSyncServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Storage Sync Service resource.
        /// </summary>
        [Input("storageSyncServiceName", required: true)]
        public string StorageSyncServiceName { get; set; } = null!;

        public GetStorageSyncServiceArgs()
        {
        }
        public static new GetStorageSyncServiceArgs Empty => new GetStorageSyncServiceArgs();
    }

    public sealed class GetStorageSyncServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Storage Sync Service resource.
        /// </summary>
        [Input("storageSyncServiceName", required: true)]
        public Input<string> StorageSyncServiceName { get; set; } = null!;

        public GetStorageSyncServiceInvokeArgs()
        {
        }
        public static new GetStorageSyncServiceInvokeArgs Empty => new GetStorageSyncServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageSyncServiceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Incoming Traffic Policy
        /// </summary>
        public readonly string? IncomingTrafficPolicy;
        /// <summary>
        /// Resource Last Operation Name
        /// </summary>
        public readonly string LastOperationName;
        /// <summary>
        /// StorageSyncService lastWorkflowId
        /// </summary>
        public readonly string LastWorkflowId;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of private endpoint connection associated with the specified storage sync service
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// StorageSyncService Provisioning State
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Storage Sync service status.
        /// </summary>
        public readonly int StorageSyncServiceStatus;
        /// <summary>
        /// Storage Sync service Uid
        /// </summary>
        public readonly string StorageSyncServiceUid;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageSyncServiceResult(
            string id,

            string? incomingTrafficPolicy,

            string lastOperationName,

            string lastWorkflowId,

            string location,

            string name,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            int storageSyncServiceStatus,

            string storageSyncServiceUid,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            IncomingTrafficPolicy = incomingTrafficPolicy;
            LastOperationName = lastOperationName;
            LastWorkflowId = lastWorkflowId;
            Location = location;
            Name = name;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            StorageSyncServiceStatus = storageSyncServiceStatus;
            StorageSyncServiceUid = storageSyncServiceUid;
            Tags = tags;
            Type = type;
        }
    }
}
