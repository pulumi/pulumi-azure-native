// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorageSync.V20170605Preview
{
    /// <summary>
    /// Server Endpoint object.
    /// </summary>
    public partial class ServerEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Bytes in progress
        /// </summary>
        [Output("byteProgress")]
        public Output<int?> ByteProgress { get; private set; } = null!;

        /// <summary>
        /// Bytes total
        /// </summary>
        [Output("byteTotal")]
        public Output<int?> ByteTotal { get; private set; } = null!;

        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        [Output("cloudTiering")]
        public Output<string?> CloudTiering { get; private set; } = null!;

        /// <summary>
        /// current progress type.
        /// </summary>
        [Output("currentProgressType")]
        public Output<string?> CurrentProgressType { get; private set; } = null!;

        /// <summary>
        /// Friendly Name
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// Item download error count.
        /// </summary>
        [Output("itemDownloadErrorCount")]
        public Output<int?> ItemDownloadErrorCount { get; private set; } = null!;

        /// <summary>
        /// Item Progress Count
        /// </summary>
        [Output("itemProgressCount")]
        public Output<int?> ItemProgressCount { get; private set; } = null!;

        /// <summary>
        /// Item Total Count
        /// </summary>
        [Output("itemTotalCount")]
        public Output<int?> ItemTotalCount { get; private set; } = null!;

        /// <summary>
        /// Item Upload Error Count.
        /// </summary>
        [Output("itemUploadErrorCount")]
        public Output<int?> ItemUploadErrorCount { get; private set; } = null!;

        /// <summary>
        /// Last Sync Success
        /// </summary>
        [Output("lastSyncSuccess")]
        public Output<string?> LastSyncSuccess { get; private set; } = null!;

        /// <summary>
        /// ServerEndpoint lastWorkflowId
        /// </summary>
        [Output("lastWorkflowId")]
        public Output<string?> LastWorkflowId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ServerEndpoint Provisioning State
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Server Local path.
        /// </summary>
        [Output("serverLocalPath")]
        public Output<string?> ServerLocalPath { get; private set; } = null!;

        /// <summary>
        /// Server Resource Id.
        /// </summary>
        [Output("serverResourceId")]
        public Output<string?> ServerResourceId { get; private set; } = null!;

        /// <summary>
        /// sync error context.
        /// </summary>
        [Output("syncErrorContext")]
        public Output<string?> SyncErrorContext { get; private set; } = null!;

        /// <summary>
        /// Sync Error Direction.
        /// </summary>
        [Output("syncErrorDirection")]
        public Output<string?> SyncErrorDirection { get; private set; } = null!;

        /// <summary>
        /// Sync Error State
        /// </summary>
        [Output("syncErrorState")]
        public Output<string?> SyncErrorState { get; private set; } = null!;

        /// <summary>
        /// Sync Error State Timestamp
        /// </summary>
        [Output("syncErrorStateTimestamp")]
        public Output<string?> SyncErrorStateTimestamp { get; private set; } = null!;

        /// <summary>
        /// Total progress
        /// </summary>
        [Output("totalProgress")]
        public Output<int?> TotalProgress { get; private set; } = null!;

        /// <summary>
        /// The type of the resource
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        [Output("volumeFreeSpacePercent")]
        public Output<int?> VolumeFreeSpacePercent { get; private set; } = null!;


        /// <summary>
        /// Create a ServerEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerEndpoint(string name, ServerEndpointArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagesync/v20170605preview:ServerEndpoint", name, args ?? new ServerEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:storagesync/v20170605preview:ServerEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/latest:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20180402:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20180701:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20181001:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190201:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190301:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20190601:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20191001:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20200301:ServerEndpoint"},
                    new Pulumi.Alias { Type = "azure-nextgen:storagesync/v20200901:ServerEndpoint"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServerEndpoint(name, id, options);
        }
    }

    public sealed class ServerEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bytes in progress
        /// </summary>
        [Input("byteProgress")]
        public Input<int>? ByteProgress { get; set; }

        /// <summary>
        /// Bytes total
        /// </summary>
        [Input("byteTotal")]
        public Input<int>? ByteTotal { get; set; }

        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        [Input("cloudTiering")]
        public Input<string>? CloudTiering { get; set; }

        /// <summary>
        /// current progress type.
        /// </summary>
        [Input("currentProgressType")]
        public Input<string>? CurrentProgressType { get; set; }

        /// <summary>
        /// Friendly Name
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Item download error count.
        /// </summary>
        [Input("itemDownloadErrorCount")]
        public Input<int>? ItemDownloadErrorCount { get; set; }

        /// <summary>
        /// Item Progress Count
        /// </summary>
        [Input("itemProgressCount")]
        public Input<int>? ItemProgressCount { get; set; }

        /// <summary>
        /// Item Total Count
        /// </summary>
        [Input("itemTotalCount")]
        public Input<int>? ItemTotalCount { get; set; }

        /// <summary>
        /// Item Upload Error Count.
        /// </summary>
        [Input("itemUploadErrorCount")]
        public Input<int>? ItemUploadErrorCount { get; set; }

        /// <summary>
        /// Last Sync Success
        /// </summary>
        [Input("lastSyncSuccess")]
        public Input<string>? LastSyncSuccess { get; set; }

        /// <summary>
        /// ServerEndpoint lastWorkflowId
        /// </summary>
        [Input("lastWorkflowId")]
        public Input<string>? LastWorkflowId { get; set; }

        /// <summary>
        /// ServerEndpoint Provisioning State
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Server Endpoint object.
        /// </summary>
        [Input("serverEndpointName", required: true)]
        public Input<string> ServerEndpointName { get; set; } = null!;

        /// <summary>
        /// Server Local path.
        /// </summary>
        [Input("serverLocalPath")]
        public Input<string>? ServerLocalPath { get; set; }

        /// <summary>
        /// Server Resource Id.
        /// </summary>
        [Input("serverResourceId")]
        public Input<string>? ServerResourceId { get; set; }

        /// <summary>
        /// Name of Storage Sync Service resource.
        /// </summary>
        [Input("storageSyncServiceName", required: true)]
        public Input<string> StorageSyncServiceName { get; set; } = null!;

        /// <summary>
        /// sync error context.
        /// </summary>
        [Input("syncErrorContext")]
        public Input<string>? SyncErrorContext { get; set; }

        /// <summary>
        /// Sync Error Direction.
        /// </summary>
        [Input("syncErrorDirection")]
        public Input<string>? SyncErrorDirection { get; set; }

        /// <summary>
        /// Sync Error State
        /// </summary>
        [Input("syncErrorState")]
        public Input<string>? SyncErrorState { get; set; }

        /// <summary>
        /// Sync Error State Timestamp
        /// </summary>
        [Input("syncErrorStateTimestamp")]
        public Input<string>? SyncErrorStateTimestamp { get; set; }

        /// <summary>
        /// Name of Sync Group resource.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public Input<string> SyncGroupName { get; set; } = null!;

        /// <summary>
        /// Total progress
        /// </summary>
        [Input("totalProgress")]
        public Input<int>? TotalProgress { get; set; }

        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        [Input("volumeFreeSpacePercent")]
        public Input<int>? VolumeFreeSpacePercent { get; set; }

        public ServerEndpointArgs()
        {
        }
    }
}
