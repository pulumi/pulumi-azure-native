// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.StorageSync.V20170605Preview
{
    public static class GetServerEndpoint
    {
        public static Task<GetServerEndpointResult> InvokeAsync(GetServerEndpointArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerEndpointResult>("azure-nextgen:storagesync/v20170605preview:getServerEndpoint", args ?? new GetServerEndpointArgs(), options.WithVersion());
    }


    public sealed class GetServerEndpointArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Server Endpoint object.
        /// </summary>
        [Input("serverEndpointName", required: true)]
        public string ServerEndpointName { get; set; } = null!;

        /// <summary>
        /// Name of Storage Sync Service resource.
        /// </summary>
        [Input("storageSyncServiceName", required: true)]
        public string StorageSyncServiceName { get; set; } = null!;

        /// <summary>
        /// Name of Sync Group resource.
        /// </summary>
        [Input("syncGroupName", required: true)]
        public string SyncGroupName { get; set; } = null!;

        public GetServerEndpointArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerEndpointResult
    {
        /// <summary>
        /// Bytes in progress
        /// </summary>
        public readonly int? ByteProgress;
        /// <summary>
        /// Bytes total
        /// </summary>
        public readonly int? ByteTotal;
        /// <summary>
        /// Cloud Tiering.
        /// </summary>
        public readonly string? CloudTiering;
        /// <summary>
        /// current progress type.
        /// </summary>
        public readonly string? CurrentProgressType;
        /// <summary>
        /// Friendly Name
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// Item download error count.
        /// </summary>
        public readonly int? ItemDownloadErrorCount;
        /// <summary>
        /// Item Progress Count
        /// </summary>
        public readonly int? ItemProgressCount;
        /// <summary>
        /// Item Total Count
        /// </summary>
        public readonly int? ItemTotalCount;
        /// <summary>
        /// Item Upload Error Count.
        /// </summary>
        public readonly int? ItemUploadErrorCount;
        /// <summary>
        /// Last Sync Success
        /// </summary>
        public readonly string? LastSyncSuccess;
        /// <summary>
        /// ServerEndpoint lastWorkflowId
        /// </summary>
        public readonly string? LastWorkflowId;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ServerEndpoint Provisioning State
        /// </summary>
        public readonly string? ProvisioningState;
        /// <summary>
        /// Server Local path.
        /// </summary>
        public readonly string? ServerLocalPath;
        /// <summary>
        /// Server Resource Id.
        /// </summary>
        public readonly string? ServerResourceId;
        /// <summary>
        /// sync error context.
        /// </summary>
        public readonly string? SyncErrorContext;
        /// <summary>
        /// Sync Error Direction.
        /// </summary>
        public readonly string? SyncErrorDirection;
        /// <summary>
        /// Sync Error State
        /// </summary>
        public readonly string? SyncErrorState;
        /// <summary>
        /// Sync Error State Timestamp
        /// </summary>
        public readonly string? SyncErrorStateTimestamp;
        /// <summary>
        /// Total progress
        /// </summary>
        public readonly int? TotalProgress;
        /// <summary>
        /// The type of the resource
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Level of free space to be maintained by Cloud Tiering if it is enabled.
        /// </summary>
        public readonly int? VolumeFreeSpacePercent;

        [OutputConstructor]
        private GetServerEndpointResult(
            int? byteProgress,

            int? byteTotal,

            string? cloudTiering,

            string? currentProgressType,

            string? friendlyName,

            int? itemDownloadErrorCount,

            int? itemProgressCount,

            int? itemTotalCount,

            int? itemUploadErrorCount,

            string? lastSyncSuccess,

            string? lastWorkflowId,

            string name,

            string? provisioningState,

            string? serverLocalPath,

            string? serverResourceId,

            string? syncErrorContext,

            string? syncErrorDirection,

            string? syncErrorState,

            string? syncErrorStateTimestamp,

            int? totalProgress,

            string type,

            int? volumeFreeSpacePercent)
        {
            ByteProgress = byteProgress;
            ByteTotal = byteTotal;
            CloudTiering = cloudTiering;
            CurrentProgressType = currentProgressType;
            FriendlyName = friendlyName;
            ItemDownloadErrorCount = itemDownloadErrorCount;
            ItemProgressCount = itemProgressCount;
            ItemTotalCount = itemTotalCount;
            ItemUploadErrorCount = itemUploadErrorCount;
            LastSyncSuccess = lastSyncSuccess;
            LastWorkflowId = lastWorkflowId;
            Name = name;
            ProvisioningState = provisioningState;
            ServerLocalPath = serverLocalPath;
            ServerResourceId = serverResourceId;
            SyncErrorContext = syncErrorContext;
            SyncErrorDirection = syncErrorDirection;
            SyncErrorState = syncErrorState;
            SyncErrorStateTimestamp = syncErrorStateTimestamp;
            TotalProgress = totalProgress;
            Type = type;
            VolumeFreeSpacePercent = volumeFreeSpacePercent;
        }
    }
}
