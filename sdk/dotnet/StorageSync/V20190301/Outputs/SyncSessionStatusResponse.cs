// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageSync.V20190301.Outputs
{

    /// <summary>
    /// Sync Session status object.
    /// </summary>
    [OutputType]
    public sealed class SyncSessionStatusResponse
    {
        /// <summary>
        /// Array of per-item errors coming from the last sync session. Reserved for future use.
        /// </summary>
        public readonly ImmutableArray<Outputs.FilesNotSyncingErrorResponse> FilesNotSyncingErrors;
        /// <summary>
        /// Last sync per item error count.
        /// </summary>
        public readonly double LastSyncPerItemErrorCount;
        /// <summary>
        /// Last sync result (HResult)
        /// </summary>
        public readonly int LastSyncResult;
        /// <summary>
        /// Last sync success timestamp
        /// </summary>
        public readonly string LastSyncSuccessTimestamp;
        /// <summary>
        /// Last sync timestamp
        /// </summary>
        public readonly string LastSyncTimestamp;
        /// <summary>
        /// Count of persistent files not syncing. Reserved for future use.
        /// </summary>
        public readonly double PersistentFilesNotSyncingCount;
        /// <summary>
        /// Count of transient files not syncing. Reserved for future use.
        /// </summary>
        public readonly double TransientFilesNotSyncingCount;

        [OutputConstructor]
        private SyncSessionStatusResponse(
            ImmutableArray<Outputs.FilesNotSyncingErrorResponse> filesNotSyncingErrors,

            double lastSyncPerItemErrorCount,

            int lastSyncResult,

            string lastSyncSuccessTimestamp,

            string lastSyncTimestamp,

            double persistentFilesNotSyncingCount,

            double transientFilesNotSyncingCount)
        {
            FilesNotSyncingErrors = filesNotSyncingErrors;
            LastSyncPerItemErrorCount = lastSyncPerItemErrorCount;
            LastSyncResult = lastSyncResult;
            LastSyncSuccessTimestamp = lastSyncSuccessTimestamp;
            LastSyncTimestamp = lastSyncTimestamp;
            PersistentFilesNotSyncingCount = persistentFilesNotSyncingCount;
            TransientFilesNotSyncingCount = transientFilesNotSyncingCount;
        }
    }
}
