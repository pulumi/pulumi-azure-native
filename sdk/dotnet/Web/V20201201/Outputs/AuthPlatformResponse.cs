// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20201201.Outputs
{

    /// <summary>
    /// The configuration settings of the platform of App Service Authentication/Authorization.
    /// </summary>
    [OutputType]
    public sealed class AuthPlatformResponse
    {
        /// <summary>
        /// The path of the config file containing auth settings if they come from a file.
        /// If the path is relative, base will the site's root directory.
        /// </summary>
        public readonly string? ConfigFilePath;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the Authentication / Authorization feature is enabled for the current app; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        public readonly string? RuntimeVersion;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AuthPlatformResponse(
            string? configFilePath,

            bool? enabled,

            string id,

            string? kind,

            string name,

            string? runtimeVersion,

            string type)
        {
            ConfigFilePath = configFilePath;
            Enabled = enabled;
            Id = id;
            Kind = kind;
            Name = name;
            RuntimeVersion = runtimeVersion;
            Type = type;
        }
    }
}
