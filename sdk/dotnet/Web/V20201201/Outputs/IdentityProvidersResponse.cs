// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20201201.Outputs
{

    [OutputType]
    public sealed class IdentityProvidersResponse
    {
        public readonly Outputs.AppleResponse? Apple;
        public readonly Outputs.AzureActiveDirectoryResponse? AzureActiveDirectory;
        public readonly Outputs.AzureStaticWebAppsResponse? AzureStaticWebApps;
        public readonly ImmutableDictionary<string, Outputs.CustomOpenIdConnectProviderResponse>? CustomOpenIdConnectProviders;
        public readonly Outputs.FacebookResponse? Facebook;
        public readonly Outputs.GitHubResponse? GitHub;
        public readonly Outputs.GoogleResponse? Google;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        public readonly Outputs.LegacyMicrosoftAccountResponse? LegacyMicrosoftAccount;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.TwitterResponse? Twitter;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private IdentityProvidersResponse(
            Outputs.AppleResponse? apple,

            Outputs.AzureActiveDirectoryResponse? azureActiveDirectory,

            Outputs.AzureStaticWebAppsResponse? azureStaticWebApps,

            ImmutableDictionary<string, Outputs.CustomOpenIdConnectProviderResponse>? customOpenIdConnectProviders,

            Outputs.FacebookResponse? facebook,

            Outputs.GitHubResponse? gitHub,

            Outputs.GoogleResponse? google,

            string id,

            string? kind,

            Outputs.LegacyMicrosoftAccountResponse? legacyMicrosoftAccount,

            string name,

            Outputs.TwitterResponse? twitter,

            string type)
        {
            Apple = apple;
            AzureActiveDirectory = azureActiveDirectory;
            AzureStaticWebApps = azureStaticWebApps;
            CustomOpenIdConnectProviders = customOpenIdConnectProviders;
            Facebook = facebook;
            GitHub = gitHub;
            Google = google;
            Id = id;
            Kind = kind;
            LegacyMicrosoftAccount = legacyMicrosoftAccount;
            Name = name;
            Twitter = twitter;
            Type = type;
        }
    }
}
