// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    public static class ListWebAppWorkflowsConnections
    {
        /// <summary>
        /// Workflow properties definition.
        /// Azure REST API version: 2022-09-01.
        /// 
        /// Other available API versions: 2023-01-01, 2023-12-01.
        /// </summary>
        public static Task<ListWebAppWorkflowsConnectionsResult> InvokeAsync(ListWebAppWorkflowsConnectionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWebAppWorkflowsConnectionsResult>("azure-native:web:listWebAppWorkflowsConnections", args ?? new ListWebAppWorkflowsConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// Workflow properties definition.
        /// Azure REST API version: 2022-09-01.
        /// 
        /// Other available API versions: 2023-01-01, 2023-12-01.
        /// </summary>
        public static Output<ListWebAppWorkflowsConnectionsResult> Invoke(ListWebAppWorkflowsConnectionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWebAppWorkflowsConnectionsResult>("azure-native:web:listWebAppWorkflowsConnections", args ?? new ListWebAppWorkflowsConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListWebAppWorkflowsConnectionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Site name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListWebAppWorkflowsConnectionsArgs()
        {
        }
        public static new ListWebAppWorkflowsConnectionsArgs Empty => new ListWebAppWorkflowsConnectionsArgs();
    }

    public sealed class ListWebAppWorkflowsConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Site name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListWebAppWorkflowsConnectionsInvokeArgs()
        {
        }
        public static new ListWebAppWorkflowsConnectionsInvokeArgs Empty => new ListWebAppWorkflowsConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class ListWebAppWorkflowsConnectionsResult
    {
        /// <summary>
        /// The resource id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource kind.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Gets the resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Additional workflow properties.
        /// </summary>
        public readonly Outputs.WorkflowEnvelopeResponseProperties Properties;
        /// <summary>
        /// Gets the resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ListWebAppWorkflowsConnectionsResult(
            string id,

            string? kind,

            string? location,

            string name,

            Outputs.WorkflowEnvelopeResponseProperties properties,

            string type)
        {
            Id = id;
            Kind = kind;
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
