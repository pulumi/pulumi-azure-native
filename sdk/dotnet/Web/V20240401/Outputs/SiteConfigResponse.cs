// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20240401.Outputs
{

    /// <summary>
    /// Configuration of an App Service app.
    /// </summary>
    [OutputType]
    public sealed class SiteConfigResponse
    {
        /// <summary>
        /// Flag to use Managed Identity Creds for ACR pull
        /// </summary>
        public readonly bool? AcrUseManagedIdentityCreds;
        /// <summary>
        /// If using user managed identity, the user managed identity ClientId
        /// </summary>
        public readonly string? AcrUserManagedIdentityID;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if Always On is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? AlwaysOn;
        /// <summary>
        /// Information about the formal API definition for the app.
        /// </summary>
        public readonly Outputs.ApiDefinitionInfoResponse? ApiDefinition;
        /// <summary>
        /// Azure API management settings linked to the app.
        /// </summary>
        public readonly Outputs.ApiManagementConfigResponse? ApiManagementConfig;
        /// <summary>
        /// App command line to launch.
        /// </summary>
        public readonly string? AppCommandLine;
        /// <summary>
        /// Application settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.NameValuePairResponse> AppSettings;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if Auto Heal is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? AutoHealEnabled;
        /// <summary>
        /// Auto Heal rules.
        /// </summary>
        public readonly Outputs.AutoHealRulesResponse? AutoHealRules;
        /// <summary>
        /// Auto-swap slot name.
        /// </summary>
        public readonly string? AutoSwapSlotName;
        /// <summary>
        /// List of Azure Storage Accounts.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.AzureStorageInfoValueResponse>? AzureStorageAccounts;
        /// <summary>
        /// Connection strings.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnStringInfoResponse> ConnectionStrings;
        /// <summary>
        /// Cross-Origin Resource Sharing (CORS) settings.
        /// </summary>
        public readonly Outputs.CorsSettingsResponse? Cors;
        /// <summary>
        /// Default documents.
        /// </summary>
        public readonly ImmutableArray<string> DefaultDocuments;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if detailed error logging is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? DetailedErrorLoggingEnabled;
        /// <summary>
        /// Document root.
        /// </summary>
        public readonly string? DocumentRoot;
        /// <summary>
        /// Maximum number of workers that a site can scale out to.
        /// This setting only applies to apps in plans where ElasticScaleEnabled is &lt;code&gt;true&lt;/code&gt;
        /// </summary>
        public readonly int? ElasticWebAppScaleLimit;
        /// <summary>
        /// This is work around for polymorphic types.
        /// </summary>
        public readonly Outputs.ExperimentsResponse? Experiments;
        /// <summary>
        /// State of FTP / FTPS service
        /// </summary>
        public readonly string? FtpsState;
        /// <summary>
        /// Maximum number of workers that a site can scale out to.
        /// This setting only applies to the Consumption and Elastic Premium Plans
        /// </summary>
        public readonly int? FunctionAppScaleLimit;
        /// <summary>
        /// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
        /// the ScaleController will not monitor event sources directly, but will instead call to the
        /// runtime to get scale status.
        /// </summary>
        public readonly bool? FunctionsRuntimeScaleMonitoringEnabled;
        /// <summary>
        /// Handler mappings.
        /// </summary>
        public readonly ImmutableArray<Outputs.HandlerMappingResponse> HandlerMappings;
        /// <summary>
        /// Health check path
        /// </summary>
        public readonly string? HealthCheckPath;
        /// <summary>
        /// Http20Enabled: configures a web site to allow clients to connect over http2.0
        /// </summary>
        public readonly bool? Http20Enabled;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if HTTP logging is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? HttpLoggingEnabled;
        /// <summary>
        /// IP security restrictions for main.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpSecurityRestrictionResponse> IpSecurityRestrictions;
        /// <summary>
        /// Default action for main access restriction if no rules are matched.
        /// </summary>
        public readonly string? IpSecurityRestrictionsDefaultAction;
        /// <summary>
        /// Java container.
        /// </summary>
        public readonly string? JavaContainer;
        /// <summary>
        /// Java container version.
        /// </summary>
        public readonly string? JavaContainerVersion;
        /// <summary>
        /// Java version.
        /// </summary>
        public readonly string? JavaVersion;
        /// <summary>
        /// Identity to use for Key Vault Reference authentication.
        /// </summary>
        public readonly string? KeyVaultReferenceIdentity;
        /// <summary>
        /// Site limits.
        /// </summary>
        public readonly Outputs.SiteLimitsResponse? Limits;
        /// <summary>
        /// Linux App Framework and version
        /// </summary>
        public readonly string? LinuxFxVersion;
        /// <summary>
        /// Site load balancing.
        /// </summary>
        public readonly string? LoadBalancing;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to enable local MySQL; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? LocalMySqlEnabled;
        /// <summary>
        /// HTTP logs directory size limit.
        /// </summary>
        public readonly int? LogsDirectorySizeLimit;
        /// <summary>
        /// Site MachineKey.
        /// </summary>
        public readonly Outputs.SiteMachineKeyResponse MachineKey;
        /// <summary>
        /// Managed pipeline mode.
        /// </summary>
        public readonly string? ManagedPipelineMode;
        /// <summary>
        /// Managed Service Identity Id
        /// </summary>
        public readonly int? ManagedServiceIdentityId;
        /// <summary>
        /// The minimum strength TLS cipher suite allowed for an application
        /// </summary>
        public readonly string? MinTlsCipherSuite;
        /// <summary>
        /// MinTlsVersion: configures the minimum version of TLS required for SSL requests
        /// </summary>
        public readonly string? MinTlsVersion;
        /// <summary>
        /// Number of minimum instance count for a site
        /// This setting only applies to the Elastic Plans
        /// </summary>
        public readonly int? MinimumElasticInstanceCount;
        /// <summary>
        /// .NET Framework version.
        /// </summary>
        public readonly string? NetFrameworkVersion;
        /// <summary>
        /// Version of Node.js.
        /// </summary>
        public readonly string? NodeVersion;
        /// <summary>
        /// Number of workers.
        /// </summary>
        public readonly int? NumberOfWorkers;
        /// <summary>
        /// Version of PHP.
        /// </summary>
        public readonly string? PhpVersion;
        /// <summary>
        /// Version of PowerShell.
        /// </summary>
        public readonly string? PowerShellVersion;
        /// <summary>
        /// Number of preWarmed instances.
        /// This setting only applies to the Consumption and Elastic Plans
        /// </summary>
        public readonly int? PreWarmedInstanceCount;
        /// <summary>
        /// Property to allow or block all public traffic.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Publishing user name.
        /// </summary>
        public readonly string? PublishingUsername;
        /// <summary>
        /// Push endpoint settings.
        /// </summary>
        public readonly Outputs.PushSettingsResponse? Push;
        /// <summary>
        /// Version of Python.
        /// </summary>
        public readonly string? PythonVersion;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if remote debugging is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? RemoteDebuggingEnabled;
        /// <summary>
        /// Remote debugging version.
        /// </summary>
        public readonly string? RemoteDebuggingVersion;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if request tracing is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? RequestTracingEnabled;
        /// <summary>
        /// Request tracing expiration time.
        /// </summary>
        public readonly string? RequestTracingExpirationTime;
        /// <summary>
        /// IP security restrictions for scm.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpSecurityRestrictionResponse> ScmIpSecurityRestrictions;
        /// <summary>
        /// Default action for scm access restriction if no rules are matched.
        /// </summary>
        public readonly string? ScmIpSecurityRestrictionsDefaultAction;
        /// <summary>
        /// IP security restrictions for scm to use main.
        /// </summary>
        public readonly bool? ScmIpSecurityRestrictionsUseMain;
        /// <summary>
        /// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
        /// </summary>
        public readonly string? ScmMinTlsVersion;
        /// <summary>
        /// SCM type.
        /// </summary>
        public readonly string? ScmType;
        /// <summary>
        /// Tracing options.
        /// </summary>
        public readonly string? TracingOptions;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to use 32-bit worker process; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? Use32BitWorkerProcess;
        /// <summary>
        /// Virtual applications.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualApplicationResponse> VirtualApplications;
        /// <summary>
        /// Virtual Network name.
        /// </summary>
        public readonly string? VnetName;
        /// <summary>
        /// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
        /// </summary>
        public readonly int? VnetPrivatePortsCount;
        /// <summary>
        /// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
        /// </summary>
        public readonly bool? VnetRouteAllEnabled;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if WebSocket is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? WebSocketsEnabled;
        /// <summary>
        /// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
        /// </summary>
        public readonly string? WebsiteTimeZone;
        /// <summary>
        /// Xenon App Framework and version
        /// </summary>
        public readonly string? WindowsFxVersion;
        /// <summary>
        /// Explicit Managed Service Identity Id
        /// </summary>
        public readonly int? XManagedServiceIdentityId;

        [OutputConstructor]
        private SiteConfigResponse(
            bool? acrUseManagedIdentityCreds,

            string? acrUserManagedIdentityID,

            bool? alwaysOn,

            Outputs.ApiDefinitionInfoResponse? apiDefinition,

            Outputs.ApiManagementConfigResponse? apiManagementConfig,

            string? appCommandLine,

            ImmutableArray<Outputs.NameValuePairResponse> appSettings,

            bool? autoHealEnabled,

            Outputs.AutoHealRulesResponse? autoHealRules,

            string? autoSwapSlotName,

            ImmutableDictionary<string, Outputs.AzureStorageInfoValueResponse>? azureStorageAccounts,

            ImmutableArray<Outputs.ConnStringInfoResponse> connectionStrings,

            Outputs.CorsSettingsResponse? cors,

            ImmutableArray<string> defaultDocuments,

            bool? detailedErrorLoggingEnabled,

            string? documentRoot,

            int? elasticWebAppScaleLimit,

            Outputs.ExperimentsResponse? experiments,

            string? ftpsState,

            int? functionAppScaleLimit,

            bool? functionsRuntimeScaleMonitoringEnabled,

            ImmutableArray<Outputs.HandlerMappingResponse> handlerMappings,

            string? healthCheckPath,

            bool? http20Enabled,

            bool? httpLoggingEnabled,

            ImmutableArray<Outputs.IpSecurityRestrictionResponse> ipSecurityRestrictions,

            string? ipSecurityRestrictionsDefaultAction,

            string? javaContainer,

            string? javaContainerVersion,

            string? javaVersion,

            string? keyVaultReferenceIdentity,

            Outputs.SiteLimitsResponse? limits,

            string? linuxFxVersion,

            string? loadBalancing,

            bool? localMySqlEnabled,

            int? logsDirectorySizeLimit,

            Outputs.SiteMachineKeyResponse machineKey,

            string? managedPipelineMode,

            int? managedServiceIdentityId,

            string? minTlsCipherSuite,

            string? minTlsVersion,

            int? minimumElasticInstanceCount,

            string? netFrameworkVersion,

            string? nodeVersion,

            int? numberOfWorkers,

            string? phpVersion,

            string? powerShellVersion,

            int? preWarmedInstanceCount,

            string? publicNetworkAccess,

            string? publishingUsername,

            Outputs.PushSettingsResponse? push,

            string? pythonVersion,

            bool? remoteDebuggingEnabled,

            string? remoteDebuggingVersion,

            bool? requestTracingEnabled,

            string? requestTracingExpirationTime,

            ImmutableArray<Outputs.IpSecurityRestrictionResponse> scmIpSecurityRestrictions,

            string? scmIpSecurityRestrictionsDefaultAction,

            bool? scmIpSecurityRestrictionsUseMain,

            string? scmMinTlsVersion,

            string? scmType,

            string? tracingOptions,

            bool? use32BitWorkerProcess,

            ImmutableArray<Outputs.VirtualApplicationResponse> virtualApplications,

            string? vnetName,

            int? vnetPrivatePortsCount,

            bool? vnetRouteAllEnabled,

            bool? webSocketsEnabled,

            string? websiteTimeZone,

            string? windowsFxVersion,

            int? xManagedServiceIdentityId)
        {
            AcrUseManagedIdentityCreds = acrUseManagedIdentityCreds;
            AcrUserManagedIdentityID = acrUserManagedIdentityID;
            AlwaysOn = alwaysOn;
            ApiDefinition = apiDefinition;
            ApiManagementConfig = apiManagementConfig;
            AppCommandLine = appCommandLine;
            AppSettings = appSettings;
            AutoHealEnabled = autoHealEnabled;
            AutoHealRules = autoHealRules;
            AutoSwapSlotName = autoSwapSlotName;
            AzureStorageAccounts = azureStorageAccounts;
            ConnectionStrings = connectionStrings;
            Cors = cors;
            DefaultDocuments = defaultDocuments;
            DetailedErrorLoggingEnabled = detailedErrorLoggingEnabled;
            DocumentRoot = documentRoot;
            ElasticWebAppScaleLimit = elasticWebAppScaleLimit;
            Experiments = experiments;
            FtpsState = ftpsState;
            FunctionAppScaleLimit = functionAppScaleLimit;
            FunctionsRuntimeScaleMonitoringEnabled = functionsRuntimeScaleMonitoringEnabled;
            HandlerMappings = handlerMappings;
            HealthCheckPath = healthCheckPath;
            Http20Enabled = http20Enabled;
            HttpLoggingEnabled = httpLoggingEnabled;
            IpSecurityRestrictions = ipSecurityRestrictions;
            IpSecurityRestrictionsDefaultAction = ipSecurityRestrictionsDefaultAction;
            JavaContainer = javaContainer;
            JavaContainerVersion = javaContainerVersion;
            JavaVersion = javaVersion;
            KeyVaultReferenceIdentity = keyVaultReferenceIdentity;
            Limits = limits;
            LinuxFxVersion = linuxFxVersion;
            LoadBalancing = loadBalancing;
            LocalMySqlEnabled = localMySqlEnabled;
            LogsDirectorySizeLimit = logsDirectorySizeLimit;
            MachineKey = machineKey;
            ManagedPipelineMode = managedPipelineMode;
            ManagedServiceIdentityId = managedServiceIdentityId;
            MinTlsCipherSuite = minTlsCipherSuite;
            MinTlsVersion = minTlsVersion;
            MinimumElasticInstanceCount = minimumElasticInstanceCount;
            NetFrameworkVersion = netFrameworkVersion;
            NodeVersion = nodeVersion;
            NumberOfWorkers = numberOfWorkers;
            PhpVersion = phpVersion;
            PowerShellVersion = powerShellVersion;
            PreWarmedInstanceCount = preWarmedInstanceCount;
            PublicNetworkAccess = publicNetworkAccess;
            PublishingUsername = publishingUsername;
            Push = push;
            PythonVersion = pythonVersion;
            RemoteDebuggingEnabled = remoteDebuggingEnabled;
            RemoteDebuggingVersion = remoteDebuggingVersion;
            RequestTracingEnabled = requestTracingEnabled;
            RequestTracingExpirationTime = requestTracingExpirationTime;
            ScmIpSecurityRestrictions = scmIpSecurityRestrictions;
            ScmIpSecurityRestrictionsDefaultAction = scmIpSecurityRestrictionsDefaultAction;
            ScmIpSecurityRestrictionsUseMain = scmIpSecurityRestrictionsUseMain;
            ScmMinTlsVersion = scmMinTlsVersion;
            ScmType = scmType;
            TracingOptions = tracingOptions;
            Use32BitWorkerProcess = use32BitWorkerProcess;
            VirtualApplications = virtualApplications;
            VnetName = vnetName;
            VnetPrivatePortsCount = vnetPrivatePortsCount;
            VnetRouteAllEnabled = vnetRouteAllEnabled;
            WebSocketsEnabled = webSocketsEnabled;
            WebsiteTimeZone = websiteTimeZone;
            WindowsFxVersion = windowsFxVersion;
            XManagedServiceIdentityId = xManagedServiceIdentityId;
        }
    }
}
