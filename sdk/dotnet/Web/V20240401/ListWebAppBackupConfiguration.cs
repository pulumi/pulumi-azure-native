// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20240401
{
    public static class ListWebAppBackupConfiguration
    {
        /// <summary>
        /// Description for Gets the backup configuration of an app.
        /// </summary>
        public static Task<ListWebAppBackupConfigurationResult> InvokeAsync(ListWebAppBackupConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWebAppBackupConfigurationResult>("azure-native:web/v20240401:listWebAppBackupConfiguration", args ?? new ListWebAppBackupConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Description for Gets the backup configuration of an app.
        /// </summary>
        public static Output<ListWebAppBackupConfigurationResult> Invoke(ListWebAppBackupConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWebAppBackupConfigurationResult>("azure-native:web/v20240401:listWebAppBackupConfiguration", args ?? new ListWebAppBackupConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListWebAppBackupConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListWebAppBackupConfigurationArgs()
        {
        }
        public static new ListWebAppBackupConfigurationArgs Empty => new ListWebAppBackupConfigurationArgs();
    }

    public sealed class ListWebAppBackupConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListWebAppBackupConfigurationInvokeArgs()
        {
        }
        public static new ListWebAppBackupConfigurationInvokeArgs Empty => new ListWebAppBackupConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class ListWebAppBackupConfigurationResult
    {
        /// <summary>
        /// Name of the backup.
        /// </summary>
        public readonly string? BackupName;
        /// <summary>
        /// Schedule for the backup if it is executed periodically.
        /// </summary>
        public readonly Outputs.BackupScheduleResponse? BackupSchedule;
        /// <summary>
        /// Databases included in the backup.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatabaseBackupSettingResponse> Databases;
        /// <summary>
        /// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SAS URL to the container.
        /// </summary>
        public readonly string StorageAccountUrl;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ListWebAppBackupConfigurationResult(
            string? backupName,

            Outputs.BackupScheduleResponse? backupSchedule,

            ImmutableArray<Outputs.DatabaseBackupSettingResponse> databases,

            bool? enabled,

            string id,

            string? kind,

            string name,

            string storageAccountUrl,

            string type)
        {
            BackupName = backupName;
            BackupSchedule = backupSchedule;
            Databases = databases;
            Enabled = enabled;
            Id = id;
            Kind = kind;
            Name = name;
            StorageAccountUrl = storageAccountUrl;
            Type = type;
        }
    }
}
