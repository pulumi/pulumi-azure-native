// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20240401
{
    /// <summary>
    /// Container App.
    /// </summary>
    [AzureNativeResourceType("azure-native:web/v20240401:ContainerApp")]
    public partial class ContainerApp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.ConfigurationResponse?> Configuration { get; private set; } = null!;

        /// <summary>
        /// Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the Container App's KubeEnvironment.
        /// </summary>
        [Output("kubeEnvironmentId")]
        public Output<string?> KubeEnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Fully Qualified Domain Name of the latest revision of the Container App.
        /// </summary>
        [Output("latestRevisionFqdn")]
        public Output<string> LatestRevisionFqdn { get; private set; } = null!;

        /// <summary>
        /// Name of the latest revision of the Container App.
        /// </summary>
        [Output("latestRevisionName")]
        public Output<string> LatestRevisionName { get; private set; } = null!;

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the Container App.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        [Output("template")]
        public Output<Outputs.TemplateResponse?> Template { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerApp(string name, ContainerAppArgs args, CustomResourceOptions? options = null)
            : base("azure-native:web/v20240401:ContainerApp", name, args ?? new ContainerAppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerApp(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:web/v20240401:ContainerApp", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:web:ContainerApp" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20210301:ContainerApp" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20220301:ContainerApp" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20220901:ContainerApp" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20230101:ContainerApp" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20231201:ContainerApp" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerApp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerApp Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContainerApp(name, id, options);
        }
    }

    public sealed class ContainerAppArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.ConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource ID of the Container App's KubeEnvironment.
        /// </summary>
        [Input("kubeEnvironmentId")]
        public Input<string>? KubeEnvironmentId { get; set; }

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        [Input("template")]
        public Input<Inputs.TemplateArgs>? Template { get; set; }

        public ContainerAppArgs()
        {
        }
        public static new ContainerAppArgs Empty => new ContainerAppArgs();
    }
}
