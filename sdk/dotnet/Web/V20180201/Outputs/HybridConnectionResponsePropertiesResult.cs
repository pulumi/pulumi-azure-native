// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20180201.Outputs
{

    [OutputType]
    public sealed class HybridConnectionResponsePropertiesResult
    {
        /// <summary>
        /// The hostname of the endpoint.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// The port of the endpoint.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The ARM URI to the Service Bus relay.
        /// </summary>
        public readonly string? RelayArmUri;
        /// <summary>
        /// The name of the Service Bus relay.
        /// </summary>
        public readonly string? RelayName;
        /// <summary>
        /// The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
        /// </summary>
        public readonly string? SendKeyName;
        /// <summary>
        /// The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
        /// normally, use the POST /listKeys API instead.
        /// </summary>
        public readonly string? SendKeyValue;
        /// <summary>
        /// The name of the Service Bus namespace.
        /// </summary>
        public readonly string? ServiceBusNamespace;
        /// <summary>
        /// The suffix for the service bus endpoint. By default this is .servicebus.windows.net
        /// </summary>
        public readonly string? ServiceBusSuffix;

        [OutputConstructor]
        private HybridConnectionResponsePropertiesResult(
            string? hostname,

            int? port,

            string? relayArmUri,

            string? relayName,

            string? sendKeyName,

            string? sendKeyValue,

            string? serviceBusNamespace,

            string? serviceBusSuffix)
        {
            Hostname = hostname;
            Port = port;
            RelayArmUri = relayArmUri;
            RelayName = relayName;
            SendKeyName = sendKeyName;
            SendKeyValue = sendKeyValue;
            ServiceBusNamespace = serviceBusNamespace;
            ServiceBusSuffix = serviceBusSuffix;
        }
    }
}
