// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20180201.Outputs
{

    [OutputType]
    public sealed class CloningInfoResponse
    {
        /// <summary>
        /// Application setting overrides for cloned app. If specified, these settings override the settings cloned 
        /// from source app. Otherwise, application settings from source app are retained.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? AppSettingsOverrides;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to clone custom hostnames from source app; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? CloneCustomHostNames;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to clone source control from source app; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? CloneSourceControl;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to configure load balancing for source and destination app.
        /// </summary>
        public readonly bool? ConfigureLoadBalancing;
        /// <summary>
        /// Correlation ID of cloning operation. This ID ties multiple cloning operations
        /// together to use the same snapshot.
        /// </summary>
        public readonly string? CorrelationId;
        /// <summary>
        /// App Service Environment.
        /// </summary>
        public readonly string? HostingEnvironment;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to overwrite destination app; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? Overwrite;
        /// <summary>
        /// ARM resource ID of the source app. App resource ID is of the form 
        /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and 
        /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
        /// </summary>
        public readonly string SourceWebAppId;
        /// <summary>
        /// Location of source app ex: West US or North Europe
        /// </summary>
        public readonly string? SourceWebAppLocation;
        /// <summary>
        /// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form 
        /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
        /// </summary>
        public readonly string? TrafficManagerProfileId;
        /// <summary>
        /// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
        /// </summary>
        public readonly string? TrafficManagerProfileName;

        [OutputConstructor]
        private CloningInfoResponse(
            ImmutableDictionary<string, string>? appSettingsOverrides,

            bool? cloneCustomHostNames,

            bool? cloneSourceControl,

            bool? configureLoadBalancing,

            string? correlationId,

            string? hostingEnvironment,

            bool? overwrite,

            string sourceWebAppId,

            string? sourceWebAppLocation,

            string? trafficManagerProfileId,

            string? trafficManagerProfileName)
        {
            AppSettingsOverrides = appSettingsOverrides;
            CloneCustomHostNames = cloneCustomHostNames;
            CloneSourceControl = cloneSourceControl;
            ConfigureLoadBalancing = configureLoadBalancing;
            CorrelationId = correlationId;
            HostingEnvironment = hostingEnvironment;
            Overwrite = overwrite;
            SourceWebAppId = sourceWebAppId;
            SourceWebAppLocation = sourceWebAppLocation;
            TrafficManagerProfileId = trafficManagerProfileId;
            TrafficManagerProfileName = trafficManagerProfileName;
        }
    }
}
