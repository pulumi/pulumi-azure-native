// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20180201.Outputs
{

    [OutputType]
    public sealed class BackupScheduleResponseResult
    {
        /// <summary>
        /// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
        /// </summary>
        public readonly int FrequencyInterval;
        /// <summary>
        /// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
        /// </summary>
        public readonly string FrequencyUnit;
        /// <summary>
        /// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
        /// </summary>
        public readonly bool KeepAtLeastOneBackup;
        /// <summary>
        /// Last time when this schedule was triggered.
        /// </summary>
        public readonly string LastExecutionTime;
        /// <summary>
        /// After how many days backups should be deleted.
        /// </summary>
        public readonly int RetentionPeriodInDays;
        /// <summary>
        /// When the schedule should start working.
        /// </summary>
        public readonly string? StartTime;

        [OutputConstructor]
        private BackupScheduleResponseResult(
            int frequencyInterval,

            string frequencyUnit,

            bool keepAtLeastOneBackup,

            string lastExecutionTime,

            int retentionPeriodInDays,

            string? startTime)
        {
            FrequencyInterval = frequencyInterval;
            FrequencyUnit = frequencyUnit;
            KeepAtLeastOneBackup = keepAtLeastOneBackup;
            LastExecutionTime = lastExecutionTime;
            RetentionPeriodInDays = retentionPeriodInDays;
            StartTime = startTime;
        }
    }
}
