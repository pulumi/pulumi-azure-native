// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20210301.Inputs
{

    /// <summary>
    /// Triggers for auto-heal.
    /// </summary>
    public sealed class AutoHealTriggersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A rule based on private bytes.
        /// </summary>
        [Input("privateBytesInKB")]
        public Input<int>? PrivateBytesInKB { get; set; }

        /// <summary>
        /// A rule based on total requests.
        /// </summary>
        [Input("requests")]
        public Input<Inputs.RequestsBasedTriggerArgs>? Requests { get; set; }

        /// <summary>
        /// A rule based on request execution time.
        /// </summary>
        [Input("slowRequests")]
        public Input<Inputs.SlowRequestsBasedTriggerArgs>? SlowRequests { get; set; }

        [Input("slowRequestsWithPath")]
        private InputList<Inputs.SlowRequestsBasedTriggerArgs>? _slowRequestsWithPath;

        /// <summary>
        /// A rule based on multiple Slow Requests Rule with path
        /// </summary>
        public InputList<Inputs.SlowRequestsBasedTriggerArgs> SlowRequestsWithPath
        {
            get => _slowRequestsWithPath ?? (_slowRequestsWithPath = new InputList<Inputs.SlowRequestsBasedTriggerArgs>());
            set => _slowRequestsWithPath = value;
        }

        [Input("statusCodes")]
        private InputList<Inputs.StatusCodesBasedTriggerArgs>? _statusCodes;

        /// <summary>
        /// A rule based on status codes.
        /// </summary>
        public InputList<Inputs.StatusCodesBasedTriggerArgs> StatusCodes
        {
            get => _statusCodes ?? (_statusCodes = new InputList<Inputs.StatusCodesBasedTriggerArgs>());
            set => _statusCodes = value;
        }

        [Input("statusCodesRange")]
        private InputList<Inputs.StatusCodesRangeBasedTriggerArgs>? _statusCodesRange;

        /// <summary>
        /// A rule based on status codes ranges.
        /// </summary>
        public InputList<Inputs.StatusCodesRangeBasedTriggerArgs> StatusCodesRange
        {
            get => _statusCodesRange ?? (_statusCodesRange = new InputList<Inputs.StatusCodesRangeBasedTriggerArgs>());
            set => _statusCodesRange = value;
        }

        public AutoHealTriggersArgs()
        {
        }
        public static new AutoHealTriggersArgs Empty => new AutoHealTriggersArgs();
    }
}
