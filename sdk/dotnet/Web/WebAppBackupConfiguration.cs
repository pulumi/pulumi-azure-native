// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    /// <summary>
    /// Description of a backup which will be performed.
    /// 
    /// Uses Azure REST API version 2024-04-01. In version 2.x of the Azure Native provider, it used API version 2022-09-01.
    /// 
    /// Other available API versions: 2016-08-01, 2018-02-01, 2018-11-01, 2019-08-01, 2020-06-01, 2020-09-01, 2020-10-01, 2020-12-01, 2021-01-01, 2021-01-15, 2021-02-01, 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:web:WebAppBackupConfiguration")]
    public partial class WebAppBackupConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// Name of the backup.
        /// </summary>
        [Output("backupName")]
        public Output<string?> BackupName { get; private set; } = null!;

        /// <summary>
        /// Schedule for the backup if it is executed periodically.
        /// </summary>
        [Output("backupSchedule")]
        public Output<Outputs.BackupScheduleResponse?> BackupSchedule { get; private set; } = null!;

        /// <summary>
        /// Databases included in the backup.
        /// </summary>
        [Output("databases")]
        public Output<ImmutableArray<Outputs.DatabaseBackupSettingResponse>> Databases { get; private set; } = null!;

        /// <summary>
        /// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// SAS URL to the container.
        /// </summary>
        [Output("storageAccountUrl")]
        public Output<string> StorageAccountUrl { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WebAppBackupConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAppBackupConfiguration(string name, WebAppBackupConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:web:WebAppBackupConfiguration", name, args ?? new WebAppBackupConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAppBackupConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:web:WebAppBackupConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:web/v20160801:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20201001:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20220901:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20230101:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20231201:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20240401:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20150801:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20160801:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20180201:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20181101:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20190801:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20200601:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20200901:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20201001:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20201201:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210101:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210115:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210201:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210301:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20220301:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20220901:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20230101:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20231201:web:WebAppBackupConfiguration" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20240401:web:WebAppBackupConfiguration" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAppBackupConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAppBackupConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WebAppBackupConfiguration(name, id, options);
        }
    }

    public sealed class WebAppBackupConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the backup.
        /// </summary>
        [Input("backupName")]
        public Input<string>? BackupName { get; set; }

        /// <summary>
        /// Schedule for the backup if it is executed periodically.
        /// </summary>
        [Input("backupSchedule")]
        public Input<Inputs.BackupScheduleArgs>? BackupSchedule { get; set; }

        [Input("databases")]
        private InputList<Inputs.DatabaseBackupSettingArgs>? _databases;

        /// <summary>
        /// Databases included in the backup.
        /// </summary>
        public InputList<Inputs.DatabaseBackupSettingArgs> Databases
        {
            get => _databases ?? (_databases = new InputList<Inputs.DatabaseBackupSettingArgs>());
            set => _databases = value;
        }

        /// <summary>
        /// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SAS URL to the container.
        /// </summary>
        [Input("storageAccountUrl", required: true)]
        public Input<string> StorageAccountUrl { get; set; } = null!;

        public WebAppBackupConfigurationArgs()
        {
        }
        public static new WebAppBackupConfigurationArgs Empty => new WebAppBackupConfigurationArgs();
    }
}
