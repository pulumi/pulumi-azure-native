// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    public static class GetWebAppSlotConfigurationNames
    {
        /// <summary>
        /// Description for Gets the names of app settings and connection strings that stick to the slot (not swapped).
        /// Azure REST API version: 2022-09-01.
        /// </summary>
        public static Task<GetWebAppSlotConfigurationNamesResult> InvokeAsync(GetWebAppSlotConfigurationNamesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAppSlotConfigurationNamesResult>("azure-native:web:getWebAppSlotConfigurationNames", args ?? new GetWebAppSlotConfigurationNamesArgs(), options.WithDefaults());

        /// <summary>
        /// Description for Gets the names of app settings and connection strings that stick to the slot (not swapped).
        /// Azure REST API version: 2022-09-01.
        /// </summary>
        public static Output<GetWebAppSlotConfigurationNamesResult> Invoke(GetWebAppSlotConfigurationNamesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAppSlotConfigurationNamesResult>("azure-native:web:getWebAppSlotConfigurationNames", args ?? new GetWebAppSlotConfigurationNamesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAppSlotConfigurationNamesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetWebAppSlotConfigurationNamesArgs()
        {
        }
        public static new GetWebAppSlotConfigurationNamesArgs Empty => new GetWebAppSlotConfigurationNamesArgs();
    }

    public sealed class GetWebAppSlotConfigurationNamesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetWebAppSlotConfigurationNamesInvokeArgs()
        {
        }
        public static new GetWebAppSlotConfigurationNamesInvokeArgs Empty => new GetWebAppSlotConfigurationNamesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAppSlotConfigurationNamesResult
    {
        /// <summary>
        /// List of application settings names.
        /// </summary>
        public readonly ImmutableArray<string> AppSettingNames;
        /// <summary>
        /// List of external Azure storage account identifiers.
        /// </summary>
        public readonly ImmutableArray<string> AzureStorageConfigNames;
        /// <summary>
        /// List of connection string names.
        /// </summary>
        public readonly ImmutableArray<string> ConnectionStringNames;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWebAppSlotConfigurationNamesResult(
            ImmutableArray<string> appSettingNames,

            ImmutableArray<string> azureStorageConfigNames,

            ImmutableArray<string> connectionStringNames,

            string id,

            string? kind,

            string name,

            string type)
        {
            AppSettingNames = appSettingNames;
            AzureStorageConfigNames = azureStorageConfigNames;
            ConnectionStringNames = connectionStringNames;
            Id = id;
            Kind = kind;
            Name = name;
            Type = type;
        }
    }
}
