// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20160901.Outputs
{

    [OutputType]
    public sealed class AppServicePlanResponsePropertiesResult
    {
        /// <summary>
        /// App Service plan administration site.
        /// </summary>
        public readonly string? AdminSiteName;
        /// <summary>
        /// Geographical location for the App Service plan.
        /// </summary>
        public readonly string GeoRegion;
        /// <summary>
        /// Specification for the App Service Environment to use for the App Service plan.
        /// </summary>
        public readonly Outputs.HostingEnvironmentProfileResponseResult? HostingEnvironmentProfile;
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, this App Service Plan owns spot instances.
        /// </summary>
        public readonly bool? IsSpot;
        /// <summary>
        /// Maximum number of instances that can be assigned to this App Service plan.
        /// </summary>
        public readonly int MaximumNumberOfWorkers;
        /// <summary>
        /// Name for the App Service plan.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of apps assigned to this App Service plan.
        /// </summary>
        public readonly int NumberOfSites;
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, apps assigned to this App Service plan can be scaled independently.
        /// If &lt;code&gt;false&lt;/code&gt;, apps assigned to this App Service plan will scale to all instances of the plan.
        /// </summary>
        public readonly bool? PerSiteScaling;
        /// <summary>
        /// Provisioning state of the App Service Environment.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// If Linux app service plan &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.
        /// </summary>
        public readonly bool? Reserved;
        /// <summary>
        /// Resource group of the App Service plan.
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// The time when the server farm expires. Valid only if it is a spot server farm.
        /// </summary>
        public readonly string? SpotExpirationTime;
        /// <summary>
        /// App Service plan status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// App Service plan subscription.
        /// </summary>
        public readonly string Subscription;
        /// <summary>
        /// Scaling worker count.
        /// </summary>
        public readonly int? TargetWorkerCount;
        /// <summary>
        /// Scaling worker size ID.
        /// </summary>
        public readonly int? TargetWorkerSizeId;
        /// <summary>
        /// Target worker tier assigned to the App Service plan.
        /// </summary>
        public readonly string? WorkerTierName;

        [OutputConstructor]
        private AppServicePlanResponsePropertiesResult(
            string? adminSiteName,

            string geoRegion,

            Outputs.HostingEnvironmentProfileResponseResult? hostingEnvironmentProfile,

            bool? isSpot,

            int maximumNumberOfWorkers,

            string name,

            int numberOfSites,

            bool? perSiteScaling,

            string provisioningState,

            bool? reserved,

            string resourceGroup,

            string? spotExpirationTime,

            string status,

            string subscription,

            int? targetWorkerCount,

            int? targetWorkerSizeId,

            string? workerTierName)
        {
            AdminSiteName = adminSiteName;
            GeoRegion = geoRegion;
            HostingEnvironmentProfile = hostingEnvironmentProfile;
            IsSpot = isSpot;
            MaximumNumberOfWorkers = maximumNumberOfWorkers;
            Name = name;
            NumberOfSites = numberOfSites;
            PerSiteScaling = perSiteScaling;
            ProvisioningState = provisioningState;
            Reserved = reserved;
            ResourceGroup = resourceGroup;
            SpotExpirationTime = spotExpirationTime;
            Status = status;
            Subscription = subscription;
            TargetWorkerCount = targetWorkerCount;
            TargetWorkerSizeId = targetWorkerSizeId;
            WorkerTierName = workerTierName;
        }
    }
}
