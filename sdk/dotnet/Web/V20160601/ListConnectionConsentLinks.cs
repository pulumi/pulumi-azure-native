// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20160601
{
    public static class ListConnectionConsentLinks
    {
        /// <summary>
        /// Collection of consent links
        /// </summary>
        public static Task<ListConnectionConsentLinksResult> InvokeAsync(ListConnectionConsentLinksArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListConnectionConsentLinksResult>("azure-native:web/v20160601:listConnectionConsentLinks", args ?? new ListConnectionConsentLinksArgs(), options.WithVersion());
    }


    public sealed class ListConnectionConsentLinksArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Connection name
        /// </summary>
        [Input("connectionName", required: true)]
        public string ConnectionName { get; set; } = null!;

        [Input("parameters")]
        private List<Inputs.ConsentLinkParameterDefinition>? _parameters;

        /// <summary>
        /// Collection of resources
        /// </summary>
        public List<Inputs.ConsentLinkParameterDefinition> Parameters
        {
            get => _parameters ?? (_parameters = new List<Inputs.ConsentLinkParameterDefinition>());
            set => _parameters = value;
        }

        /// <summary>
        /// The resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Subscription Id
        /// </summary>
        [Input("subscriptionId")]
        public string? SubscriptionId { get; set; }

        public ListConnectionConsentLinksArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListConnectionConsentLinksResult
    {
        /// <summary>
        /// Collection of resources
        /// </summary>
        public readonly ImmutableArray<Outputs.ConsentLinkDefinitionResponse> Value;

        [OutputConstructor]
        private ListConnectionConsentLinksResult(ImmutableArray<Outputs.ConsentLinkDefinitionResponse> value)
        {
            Value = value;
        }
    }
}
