// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.Inputs
{

    /// <summary>
    /// Certificate resource specific properties
    /// </summary>
    public sealed class CertificateResponsePropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// CNAME of the certificate to be issued via free certificate
        /// </summary>
        [Input("canonicalName")]
        public Input<string>? CanonicalName { get; set; }

        /// <summary>
        /// Raw bytes of .cer file
        /// </summary>
        [Input("cerBlob", required: true)]
        public Input<string> CerBlob { get; set; } = null!;

        /// <summary>
        /// Certificate expiration date.
        /// </summary>
        [Input("expirationDate", required: true)]
        public Input<string> ExpirationDate { get; set; } = null!;

        /// <summary>
        /// Friendly name of the certificate.
        /// </summary>
        [Input("friendlyName", required: true)]
        public Input<string> FriendlyName { get; set; } = null!;

        [Input("hostNames")]
        private InputList<string>? _hostNames;

        /// <summary>
        /// Host names the certificate applies to.
        /// </summary>
        public InputList<string> HostNames
        {
            get => _hostNames ?? (_hostNames = new InputList<string>());
            set => _hostNames = value;
        }

        /// <summary>
        /// Specification for the App Service Environment to use for the certificate.
        /// </summary>
        [Input("hostingEnvironmentProfile", required: true)]
        public Input<Inputs.HostingEnvironmentProfileResponseArgs> HostingEnvironmentProfile { get; set; } = null!;

        /// <summary>
        /// Certificate issue Date.
        /// </summary>
        [Input("issueDate", required: true)]
        public Input<string> IssueDate { get; set; } = null!;

        /// <summary>
        /// Certificate issuer.
        /// </summary>
        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        /// <summary>
        /// Key Vault Csm resource Id.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Key Vault secret name.
        /// </summary>
        [Input("keyVaultSecretName")]
        public Input<string>? KeyVaultSecretName { get; set; }

        /// <summary>
        /// Status of the Key Vault secret.
        /// </summary>
        [Input("keyVaultSecretStatus", required: true)]
        public Input<string> KeyVaultSecretStatus { get; set; } = null!;

        /// <summary>
        /// Certificate password.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Pfx blob.
        /// </summary>
        [Input("pfxBlob")]
        public Input<string>? PfxBlob { get; set; }

        /// <summary>
        /// Public key hash.
        /// </summary>
        [Input("publicKeyHash", required: true)]
        public Input<string> PublicKeyHash { get; set; } = null!;

        /// <summary>
        /// Self link.
        /// </summary>
        [Input("selfLink", required: true)]
        public Input<string> SelfLink { get; set; } = null!;

        /// <summary>
        /// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
        /// </summary>
        [Input("serverFarmId")]
        public Input<string>? ServerFarmId { get; set; }

        /// <summary>
        /// App name.
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// Subject name of the certificate.
        /// </summary>
        [Input("subjectName", required: true)]
        public Input<string> SubjectName { get; set; } = null!;

        /// <summary>
        /// Certificate thumbprint.
        /// </summary>
        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        /// <summary>
        /// Is the certificate valid?.
        /// </summary>
        [Input("valid", required: true)]
        public Input<bool> Valid { get; set; } = null!;

        public CertificateResponsePropertiesArgs()
        {
        }
    }
}
