// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    public static class GetWebAppSiteContainerSlot
    {
        /// <summary>
        /// Container of a site
        /// 
        /// Uses Azure REST API version 2024-04-01.
        /// 
        /// Other available API versions: 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetWebAppSiteContainerSlotResult> InvokeAsync(GetWebAppSiteContainerSlotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAppSiteContainerSlotResult>("azure-native:web:getWebAppSiteContainerSlot", args ?? new GetWebAppSiteContainerSlotArgs(), options.WithDefaults());

        /// <summary>
        /// Container of a site
        /// 
        /// Uses Azure REST API version 2024-04-01.
        /// 
        /// Other available API versions: 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetWebAppSiteContainerSlotResult> Invoke(GetWebAppSiteContainerSlotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAppSiteContainerSlotResult>("azure-native:web:getWebAppSiteContainerSlot", args ?? new GetWebAppSiteContainerSlotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Container of a site
        /// 
        /// Uses Azure REST API version 2024-04-01.
        /// 
        /// Other available API versions: 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetWebAppSiteContainerSlotResult> Invoke(GetWebAppSiteContainerSlotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAppSiteContainerSlotResult>("azure-native:web:getWebAppSiteContainerSlot", args ?? new GetWebAppSiteContainerSlotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAppSiteContainerSlotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Site Container Name
        /// </summary>
        [Input("containerName", required: true)]
        public string ContainerName { get; set; } = null!;

        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment slot. If a slot is not specified, the API will get the Site Container for the production slot.
        /// </summary>
        [Input("slot", required: true)]
        public string Slot { get; set; } = null!;

        public GetWebAppSiteContainerSlotArgs()
        {
        }
        public static new GetWebAppSiteContainerSlotArgs Empty => new GetWebAppSiteContainerSlotArgs();
    }

    public sealed class GetWebAppSiteContainerSlotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Site Container Name
        /// </summary>
        [Input("containerName", required: true)]
        public Input<string> ContainerName { get; set; } = null!;

        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment slot. If a slot is not specified, the API will get the Site Container for the production slot.
        /// </summary>
        [Input("slot", required: true)]
        public Input<string> Slot { get; set; } = null!;

        public GetWebAppSiteContainerSlotInvokeArgs()
        {
        }
        public static new GetWebAppSiteContainerSlotInvokeArgs Empty => new GetWebAppSiteContainerSlotInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAppSiteContainerSlotResult
    {
        /// <summary>
        /// Auth Type
        /// </summary>
        public readonly string? AuthType;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Created Time
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// List of environment variables
        /// </summary>
        public readonly ImmutableArray<Outputs.EnvironmentVariableResponse> EnvironmentVariables;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Image Name
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the container is the main site container; &lt;code&gt;false&lt;/code&gt; otherwise.
        /// </summary>
        public readonly bool IsMain;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Last Modified Time
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Password Secret
        /// </summary>
        public readonly string? PasswordSecret;
        /// <summary>
        /// StartUp Command
        /// </summary>
        public readonly string? StartUpCommand;
        /// <summary>
        /// Target Port
        /// </summary>
        public readonly string? TargetPort;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// UserManagedIdentity ClientId
        /// </summary>
        public readonly string? UserManagedIdentityClientId;
        /// <summary>
        /// User Name
        /// </summary>
        public readonly string? UserName;
        /// <summary>
        /// List of volume mounts
        /// </summary>
        public readonly ImmutableArray<Outputs.VolumeMountResponse> VolumeMounts;

        [OutputConstructor]
        private GetWebAppSiteContainerSlotResult(
            string? authType,

            string azureApiVersion,

            string createdTime,

            ImmutableArray<Outputs.EnvironmentVariableResponse> environmentVariables,

            string id,

            string image,

            bool isMain,

            string? kind,

            string lastModifiedTime,

            string name,

            string? passwordSecret,

            string? startUpCommand,

            string? targetPort,

            string type,

            string? userManagedIdentityClientId,

            string? userName,

            ImmutableArray<Outputs.VolumeMountResponse> volumeMounts)
        {
            AuthType = authType;
            AzureApiVersion = azureApiVersion;
            CreatedTime = createdTime;
            EnvironmentVariables = environmentVariables;
            Id = id;
            Image = image;
            IsMain = isMain;
            Kind = kind;
            LastModifiedTime = lastModifiedTime;
            Name = name;
            PasswordSecret = passwordSecret;
            StartUpCommand = startUpCommand;
            TargetPort = targetPort;
            Type = type;
            UserManagedIdentityClientId = userManagedIdentityClientId;
            UserName = userName;
            VolumeMounts = volumeMounts;
        }
    }
}
