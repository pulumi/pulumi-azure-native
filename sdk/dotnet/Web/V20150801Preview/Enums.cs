// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNextGen.Web.V20150801Preview
{
    /// <summary>
    /// Type of the parameter
    /// </summary>
    [EnumType]
    public readonly struct ConnectionParameterType : IEquatable<ConnectionParameterType>
    {
        private readonly string _value;

        private ConnectionParameterType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConnectionParameterType @String { get; } = new ConnectionParameterType("string");
        public static ConnectionParameterType Securestring { get; } = new ConnectionParameterType("securestring");
        public static ConnectionParameterType Secureobject { get; } = new ConnectionParameterType("secureobject");
        public static ConnectionParameterType @Int { get; } = new ConnectionParameterType("int");
        public static ConnectionParameterType @Bool { get; } = new ConnectionParameterType("bool");
        public static ConnectionParameterType @Object { get; } = new ConnectionParameterType("object");
        public static ConnectionParameterType Array { get; } = new ConnectionParameterType("array");
        public static ConnectionParameterType OauthSetting { get; } = new ConnectionParameterType("oauthSetting");
        public static ConnectionParameterType Connection { get; } = new ConnectionParameterType("connection");

        public static bool operator ==(ConnectionParameterType left, ConnectionParameterType right) => left.Equals(right);
        public static bool operator !=(ConnectionParameterType left, ConnectionParameterType right) => !left.Equals(right);

        public static explicit operator string(ConnectionParameterType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConnectionParameterType other && Equals(other);
        public bool Equals(ConnectionParameterType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Principal type
    /// </summary>
    [EnumType]
    public readonly struct PrincipalType : IEquatable<PrincipalType>
    {
        private readonly string _value;

        private PrincipalType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PrincipalType ActiveDirectory { get; } = new PrincipalType("ActiveDirectory");
        public static PrincipalType Connection { get; } = new PrincipalType("Connection");
        public static PrincipalType MicrosoftAccount { get; } = new PrincipalType("MicrosoftAccount");

        public static bool operator ==(PrincipalType left, PrincipalType right) => left.Equals(right);
        public static bool operator !=(PrincipalType left, PrincipalType right) => !left.Equals(right);

        public static explicit operator string(PrincipalType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PrincipalType other && Equals(other);
        public bool Equals(PrincipalType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
