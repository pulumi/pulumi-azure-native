// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20150801Preview
{
    public static class ListConnectionConsentLinks
    {
        public static Task<ListConnectionConsentLinksResult> InvokeAsync(ListConnectionConsentLinksArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListConnectionConsentLinksResult>("azure-nextgen:web/v20150801preview:listConnectionConsentLinks", args ?? new ListConnectionConsentLinksArgs(), options.WithVersion());
    }


    public sealed class ListConnectionConsentLinksArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The connection name.
        /// </summary>
        [Input("connectionName", required: true)]
        public string ConnectionName { get; set; } = null!;

        /// <summary>
        /// Resource Id
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Kind of resource
        /// </summary>
        [Input("kind")]
        public string? Kind { get; set; }

        /// <summary>
        /// Resource Location
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("parameters")]
        private List<Inputs.ConsentLinkInputParameterArgs>? _parameters;

        /// <summary>
        /// Array of links
        /// </summary>
        public List<Inputs.ConsentLinkInputParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new List<Inputs.ConsentLinkInputParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Resource type
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public ListConnectionConsentLinksArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListConnectionConsentLinksResult
    {
        /// <summary>
        /// Collection of resources
        /// </summary>
        public readonly ImmutableArray<Outputs.ConsentLinkResponseResult> Value;

        [OutputConstructor]
        private ListConnectionConsentLinksResult(ImmutableArray<Outputs.ConsentLinkResponseResult> value)
        {
            Value = value;
        }
    }
}
