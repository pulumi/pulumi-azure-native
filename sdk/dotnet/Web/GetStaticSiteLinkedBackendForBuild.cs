// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    public static class GetStaticSiteLinkedBackendForBuild
    {
        /// <summary>
        /// Static Site Linked Backend ARM resource.
        /// Azure REST API version: 2022-09-01.
        /// </summary>
        public static Task<GetStaticSiteLinkedBackendForBuildResult> InvokeAsync(GetStaticSiteLinkedBackendForBuildArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticSiteLinkedBackendForBuildResult>("azure-native:web:getStaticSiteLinkedBackendForBuild", args ?? new GetStaticSiteLinkedBackendForBuildArgs(), options.WithDefaults());

        /// <summary>
        /// Static Site Linked Backend ARM resource.
        /// Azure REST API version: 2022-09-01.
        /// </summary>
        public static Output<GetStaticSiteLinkedBackendForBuildResult> Invoke(GetStaticSiteLinkedBackendForBuildInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticSiteLinkedBackendForBuildResult>("azure-native:web:getStaticSiteLinkedBackendForBuild", args ?? new GetStaticSiteLinkedBackendForBuildInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticSiteLinkedBackendForBuildArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The stage site identifier
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the linked backend that should be retrieved
        /// </summary>
        [Input("linkedBackendName", required: true)]
        public string LinkedBackendName { get; set; } = null!;

        /// <summary>
        /// Name of the static site
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetStaticSiteLinkedBackendForBuildArgs()
        {
        }
        public static new GetStaticSiteLinkedBackendForBuildArgs Empty => new GetStaticSiteLinkedBackendForBuildArgs();
    }

    public sealed class GetStaticSiteLinkedBackendForBuildInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The stage site identifier
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the linked backend that should be retrieved
        /// </summary>
        [Input("linkedBackendName", required: true)]
        public Input<string> LinkedBackendName { get; set; } = null!;

        /// <summary>
        /// Name of the static site
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetStaticSiteLinkedBackendForBuildInvokeArgs()
        {
        }
        public static new GetStaticSiteLinkedBackendForBuildInvokeArgs Empty => new GetStaticSiteLinkedBackendForBuildInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticSiteLinkedBackendForBuildResult
    {
        /// <summary>
        /// The resource id of the backend linked to the static site
        /// </summary>
        public readonly string? BackendResourceId;
        /// <summary>
        /// The date and time on which the backend was linked to the static site.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the linking process.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The region of the backend linked to the static site
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStaticSiteLinkedBackendForBuildResult(
            string? backendResourceId,

            string createdOn,

            string id,

            string? kind,

            string name,

            string provisioningState,

            string? region,

            string type)
        {
            BackendResourceId = backendResourceId;
            CreatedOn = createdOn;
            Id = id;
            Kind = kind;
            Name = name;
            ProvisioningState = provisioningState;
            Region = region;
            Type = type;
        }
    }
}
