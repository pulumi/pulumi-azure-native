// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20231201.Outputs
{

    /// <summary>
    /// Scale and concurrency settings for the function app.
    /// </summary>
    [OutputType]
    public sealed class FunctionsScaleAndConcurrencyResponse
    {
        /// <summary>
        /// 'Always Ready' configuration for the function app.
        /// </summary>
        public readonly ImmutableArray<Outputs.FunctionsAlwaysReadyConfigResponse> AlwaysReady;
        /// <summary>
        /// Set the amount of memory allocated to each instance of the function app in MB. CPU and network bandwidth are allocated proportionally.
        /// </summary>
        public readonly double? InstanceMemoryMB;
        /// <summary>
        /// The maximum number of instances for the function app.
        /// </summary>
        public readonly double? MaximumInstanceCount;
        /// <summary>
        /// Scale and concurrency settings for the function app triggers.
        /// </summary>
        public readonly Outputs.FunctionsScaleAndConcurrencyResponseTriggers? Triggers;

        [OutputConstructor]
        private FunctionsScaleAndConcurrencyResponse(
            ImmutableArray<Outputs.FunctionsAlwaysReadyConfigResponse> alwaysReady,

            double? instanceMemoryMB,

            double? maximumInstanceCount,

            Outputs.FunctionsScaleAndConcurrencyResponseTriggers? triggers)
        {
            AlwaysReady = alwaysReady;
            InstanceMemoryMB = instanceMemoryMB;
            MaximumInstanceCount = maximumInstanceCount;
            Triggers = triggers;
        }
    }
}
