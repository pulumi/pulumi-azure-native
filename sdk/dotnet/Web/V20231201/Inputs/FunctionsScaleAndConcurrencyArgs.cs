// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20231201.Inputs
{

    /// <summary>
    /// Scale and concurrency settings for the function app.
    /// </summary>
    public sealed class FunctionsScaleAndConcurrencyArgs : global::Pulumi.ResourceArgs
    {
        [Input("alwaysReady")]
        private InputList<Inputs.FunctionsAlwaysReadyConfigArgs>? _alwaysReady;

        /// <summary>
        /// 'Always Ready' configuration for the function app.
        /// </summary>
        public InputList<Inputs.FunctionsAlwaysReadyConfigArgs> AlwaysReady
        {
            get => _alwaysReady ?? (_alwaysReady = new InputList<Inputs.FunctionsAlwaysReadyConfigArgs>());
            set => _alwaysReady = value;
        }

        /// <summary>
        /// Set the amount of memory allocated to each instance of the function app in MB. CPU and network bandwidth are allocated proportionally.
        /// </summary>
        [Input("instanceMemoryMB")]
        public Input<int>? InstanceMemoryMB { get; set; }

        /// <summary>
        /// The maximum number of instances for the function app.
        /// </summary>
        [Input("maximumInstanceCount")]
        public Input<int>? MaximumInstanceCount { get; set; }

        /// <summary>
        /// Scale and concurrency settings for the function app triggers.
        /// </summary>
        [Input("triggers")]
        public Input<Inputs.FunctionsScaleAndConcurrencyTriggersArgs>? Triggers { get; set; }

        public FunctionsScaleAndConcurrencyArgs()
        {
        }
        public static new FunctionsScaleAndConcurrencyArgs Empty => new FunctionsScaleAndConcurrencyArgs();
    }
}
