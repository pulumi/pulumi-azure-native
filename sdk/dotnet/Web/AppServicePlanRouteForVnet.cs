// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    /// <summary>
    /// Virtual Network route contract used to pass routing information for a Virtual Network.
    /// 
    /// Uses Azure REST API version 2024-04-01. In version 2.x of the Azure Native provider, it used API version 2022-09-01.
    /// 
    /// Other available API versions: 2016-09-01, 2018-02-01, 2019-08-01, 2020-06-01, 2020-09-01, 2020-10-01, 2020-12-01, 2021-01-01, 2021-01-15, 2021-02-01, 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
    /// </summary>
    [AzureNativeResourceType("azure-native:web:AppServicePlanRouteForVnet")]
    public partial class AppServicePlanRouteForVnet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        [Output("azureApiVersion")]
        public Output<string> AzureApiVersion { get; private set; } = null!;

        /// <summary>
        /// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
        /// </summary>
        [Output("endAddress")]
        public Output<string?> EndAddress { get; private set; } = null!;

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type of route this is:
        /// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
        /// INHERITED - Routes inherited from the real Virtual Network routes
        /// STATIC - Static route set on the app only
        /// 
        /// These values will be used for syncing an app's routes with those from a Virtual Network.
        /// </summary>
        [Output("routeType")]
        public Output<string?> RouteType { get; private set; } = null!;

        /// <summary>
        /// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
        /// </summary>
        [Output("startAddress")]
        public Output<string?> StartAddress { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AppServicePlanRouteForVnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppServicePlanRouteForVnet(string name, AppServicePlanRouteForVnetArgs args, CustomResourceOptions? options = null)
            : base("azure-native:web:AppServicePlanRouteForVnet", name, args ?? new AppServicePlanRouteForVnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppServicePlanRouteForVnet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:web:AppServicePlanRouteForVnet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:web/v20160901:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20201001:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20220901:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20230101:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20231201:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20240401:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20150801:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20160901:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20180201:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20190801:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20200601:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20200901:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20201001:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20201201:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210101:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210115:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210201:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20210301:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20220301:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20220901:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20230101:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20231201:web:AppServicePlanRouteForVnet" },
                    new global::Pulumi.Alias { Type = "azure-native_web_v20240401:web:AppServicePlanRouteForVnet" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppServicePlanRouteForVnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppServicePlanRouteForVnet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AppServicePlanRouteForVnet(name, id, options);
        }
    }

    public sealed class AppServicePlanRouteForVnetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
        /// </summary>
        [Input("endAddress")]
        public Input<string>? EndAddress { get; set; }

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the App Service plan.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the Virtual Network route.
        /// </summary>
        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        /// <summary>
        /// The type of route this is:
        /// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
        /// INHERITED - Routes inherited from the real Virtual Network routes
        /// STATIC - Static route set on the app only
        /// 
        /// These values will be used for syncing an app's routes with those from a Virtual Network.
        /// </summary>
        [Input("routeType")]
        public InputUnion<string, Pulumi.AzureNative.Web.RouteType>? RouteType { get; set; }

        /// <summary>
        /// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
        /// </summary>
        [Input("startAddress")]
        public Input<string>? StartAddress { get; set; }

        /// <summary>
        /// Name of the Virtual Network.
        /// </summary>
        [Input("vnetName", required: true)]
        public Input<string> VnetName { get; set; } = null!;

        public AppServicePlanRouteForVnetArgs()
        {
        }
        public static new AppServicePlanRouteForVnetArgs Empty => new AppServicePlanRouteForVnetArgs();
    }
}
