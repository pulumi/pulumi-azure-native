// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20230101.Outputs
{

    /// <summary>
    /// A remote private endpoint connection
    /// </summary>
    [OutputType]
    public sealed class RemotePrivateEndpointConnectionResponse
    {
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Private IPAddresses mapped to the remote private endpoint
        /// </summary>
        public readonly ImmutableArray<string> IpAddresses;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// PrivateEndpoint of a remote private endpoint connection
        /// </summary>
        public readonly Outputs.ArmIdWrapperResponse? PrivateEndpoint;
        /// <summary>
        /// The state of a private link connection
        /// </summary>
        public readonly Outputs.PrivateLinkConnectionStateResponse? PrivateLinkServiceConnectionState;
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private RemotePrivateEndpointConnectionResponse(
            string id,

            ImmutableArray<string> ipAddresses,

            string? kind,

            string name,

            Outputs.ArmIdWrapperResponse? privateEndpoint,

            Outputs.PrivateLinkConnectionStateResponse? privateLinkServiceConnectionState,

            string provisioningState,

            string type)
        {
            Id = id;
            IpAddresses = ipAddresses;
            Kind = kind;
            Name = name;
            PrivateEndpoint = privateEndpoint;
            PrivateLinkServiceConnectionState = privateLinkServiceConnectionState;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
