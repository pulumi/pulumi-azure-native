// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20220901
{
    public static class GetContainerApp
    {
        /// <summary>
        /// Container App.
        /// </summary>
        public static Task<GetContainerAppResult> InvokeAsync(GetContainerAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerAppResult>("azure-native:web/v20220901:getContainerApp", args ?? new GetContainerAppArgs(), options.WithDefaults());

        /// <summary>
        /// Container App.
        /// </summary>
        public static Output<GetContainerAppResult> Invoke(GetContainerAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerAppResult>("azure-native:web/v20220901:getContainerApp", args ?? new GetContainerAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetContainerAppArgs()
        {
        }
        public static new GetContainerAppArgs Empty => new GetContainerAppArgs();
    }

    public sealed class GetContainerAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetContainerAppInvokeArgs()
        {
        }
        public static new GetContainerAppInvokeArgs Empty => new GetContainerAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerAppResult
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        public readonly Outputs.ConfigurationResponse? Configuration;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource ID of the Container App's KubeEnvironment.
        /// </summary>
        public readonly string? KubeEnvironmentId;
        /// <summary>
        /// Fully Qualified Domain Name of the latest revision of the Container App.
        /// </summary>
        public readonly string LatestRevisionFqdn;
        /// <summary>
        /// Name of the latest revision of the Container App.
        /// </summary>
        public readonly string LatestRevisionName;
        /// <summary>
        /// Resource Location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state of the Container App.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        public readonly Outputs.TemplateResponse? Template;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContainerAppResult(
            Outputs.ConfigurationResponse? configuration,

            string id,

            string? kind,

            string? kubeEnvironmentId,

            string latestRevisionFqdn,

            string latestRevisionName,

            string location,

            string name,

            string provisioningState,

            ImmutableDictionary<string, string>? tags,

            Outputs.TemplateResponse? template,

            string type)
        {
            Configuration = configuration;
            Id = id;
            Kind = kind;
            KubeEnvironmentId = kubeEnvironmentId;
            LatestRevisionFqdn = latestRevisionFqdn;
            LatestRevisionName = latestRevisionName;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Tags = tags;
            Template = template;
            Type = type;
        }
    }
}
