// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20220901
{
    /// <summary>
    /// A Kubernetes cluster specialized for web workloads by Azure App Service
    /// </summary>
    [AzureNativeResourceType("azure-native:web/v20220901:KubeEnvironment")]
    public partial class KubeEnvironment : global::Pulumi.CustomResource
    {
        [Output("aksResourceID")]
        public Output<string?> AksResourceID { get; private set; } = null!;

        /// <summary>
        /// Cluster configuration which enables the log daemon to export
        /// app logs to a destination. Currently only "log-analytics" is
        /// supported
        /// </summary>
        [Output("appLogsConfiguration")]
        public Output<Outputs.AppLogsConfigurationResponse?> AppLogsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Cluster configuration which determines the ARC cluster
        /// components types. Eg: Choosing between BuildService kind,
        /// FrontEnd Service ArtifactsStorageType etc.
        /// </summary>
        [Output("arcConfiguration")]
        public Output<Outputs.ArcConfigurationResponse?> ArcConfiguration { get; private set; } = null!;

        /// <summary>
        /// Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration
        /// </summary>
        [Output("containerAppsConfiguration")]
        public Output<Outputs.ContainerAppsConfigurationResponse?> ContainerAppsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Default Domain Name for the cluster
        /// </summary>
        [Output("defaultDomain")]
        public Output<string> DefaultDomain { get; private set; } = null!;

        /// <summary>
        /// Any errors that occurred during deployment or deployment validation
        /// </summary>
        [Output("deploymentErrors")]
        public Output<string> DeploymentErrors { get; private set; } = null!;

        /// <summary>
        /// Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed
        /// </summary>
        [Output("environmentType")]
        public Output<string?> EnvironmentType { get; private set; } = null!;

        /// <summary>
        /// Extended Location.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// Only visible within Vnet/Subnet
        /// </summary>
        [Output("internalLoadBalancerEnabled")]
        public Output<bool?> InternalLoadBalancerEnabled { get; private set; } = null!;

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the Kubernetes Environment.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Static IP of the KubeEnvironment
        /// </summary>
        [Output("staticIp")]
        public Output<string?> StaticIp { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a KubeEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubeEnvironment(string name, KubeEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:web/v20220901:KubeEnvironment", name, args ?? new KubeEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubeEnvironment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:web/v20220901:KubeEnvironment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:web:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20210101:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20210115:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20210201:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20210301:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20220301:KubeEnvironment" },
                    new global::Pulumi.Alias { Type = "azure-native:web/v20230101:KubeEnvironment" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubeEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubeEnvironment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KubeEnvironment(name, id, options);
        }
    }

    public sealed class KubeEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("aksResourceID")]
        public Input<string>? AksResourceID { get; set; }

        /// <summary>
        /// Cluster configuration which enables the log daemon to export
        /// app logs to a destination. Currently only "log-analytics" is
        /// supported
        /// </summary>
        [Input("appLogsConfiguration")]
        public Input<Inputs.AppLogsConfigurationArgs>? AppLogsConfiguration { get; set; }

        /// <summary>
        /// Cluster configuration which determines the ARC cluster
        /// components types. Eg: Choosing between BuildService kind,
        /// FrontEnd Service ArtifactsStorageType etc.
        /// </summary>
        [Input("arcConfiguration")]
        public Input<Inputs.ArcConfigurationArgs>? ArcConfiguration { get; set; }

        /// <summary>
        /// Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration
        /// </summary>
        [Input("containerAppsConfiguration")]
        public Input<Inputs.ContainerAppsConfigurationArgs>? ContainerAppsConfiguration { get; set; }

        /// <summary>
        /// Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed
        /// </summary>
        [Input("environmentType")]
        public Input<string>? EnvironmentType { get; set; }

        /// <summary>
        /// Extended Location.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// Only visible within Vnet/Subnet
        /// </summary>
        [Input("internalLoadBalancerEnabled")]
        public Input<bool>? InternalLoadBalancerEnabled { get; set; }

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Kubernetes Environment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Static IP of the KubeEnvironment
        /// </summary>
        [Input("staticIp")]
        public Input<string>? StaticIp { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public KubeEnvironmentArgs()
        {
        }
        public static new KubeEnvironmentArgs Empty => new KubeEnvironmentArgs();
    }
}
