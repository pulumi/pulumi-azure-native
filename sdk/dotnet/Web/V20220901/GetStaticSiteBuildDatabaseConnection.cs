// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20220901
{
    public static class GetStaticSiteBuildDatabaseConnection
    {
        /// <summary>
        /// Static Site Database Connection resource.
        /// </summary>
        public static Task<GetStaticSiteBuildDatabaseConnectionResult> InvokeAsync(GetStaticSiteBuildDatabaseConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticSiteBuildDatabaseConnectionResult>("azure-native:web/v20220901:getStaticSiteBuildDatabaseConnection", args ?? new GetStaticSiteBuildDatabaseConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Static Site Database Connection resource.
        /// </summary>
        public static Output<GetStaticSiteBuildDatabaseConnectionResult> Invoke(GetStaticSiteBuildDatabaseConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticSiteBuildDatabaseConnectionResult>("azure-native:web/v20220901:getStaticSiteBuildDatabaseConnection", args ?? new GetStaticSiteBuildDatabaseConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticSiteBuildDatabaseConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the database connection.
        /// </summary>
        [Input("databaseConnectionName", required: true)]
        public string DatabaseConnectionName { get; set; } = null!;

        /// <summary>
        /// The stage site identifier.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the static site
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetStaticSiteBuildDatabaseConnectionArgs()
        {
        }
        public static new GetStaticSiteBuildDatabaseConnectionArgs Empty => new GetStaticSiteBuildDatabaseConnectionArgs();
    }

    public sealed class GetStaticSiteBuildDatabaseConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the database connection.
        /// </summary>
        [Input("databaseConnectionName", required: true)]
        public Input<string> DatabaseConnectionName { get; set; } = null!;

        /// <summary>
        /// The stage site identifier.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// Name of the static site
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetStaticSiteBuildDatabaseConnectionInvokeArgs()
        {
        }
        public static new GetStaticSiteBuildDatabaseConnectionInvokeArgs Empty => new GetStaticSiteBuildDatabaseConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticSiteBuildDatabaseConnectionResult
    {
        /// <summary>
        /// A list of configuration files associated with this database connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.StaticSiteDatabaseConnectionConfigurationFileOverviewResponse> ConfigurationFiles;
        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.
        /// </summary>
        public readonly string? ConnectionIdentity;
        /// <summary>
        /// The connection string to use to connect to the database.
        /// </summary>
        public readonly string? ConnectionString;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The region of the database resource.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The resource id of the database.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStaticSiteBuildDatabaseConnectionResult(
            ImmutableArray<Outputs.StaticSiteDatabaseConnectionConfigurationFileOverviewResponse> configurationFiles,

            string? connectionIdentity,

            string? connectionString,

            string id,

            string? kind,

            string name,

            string region,

            string resourceId,

            string type)
        {
            ConfigurationFiles = configurationFiles;
            ConnectionIdentity = connectionIdentity;
            ConnectionString = connectionString;
            Id = id;
            Kind = kind;
            Name = name;
            Region = region;
            ResourceId = resourceId;
            Type = type;
        }
    }
}
