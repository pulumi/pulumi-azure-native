// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web
{
    public static class ListWebAppPublishingCredentialsSlot
    {
        /// <summary>
        /// Gets the Git/FTP publishing credentials of an app.
        /// API Version: 2020-12-01.
        /// </summary>
        public static Task<ListWebAppPublishingCredentialsSlotResult> InvokeAsync(ListWebAppPublishingCredentialsSlotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWebAppPublishingCredentialsSlotResult>("azure-native:web:listWebAppPublishingCredentialsSlot", args ?? new ListWebAppPublishingCredentialsSlotArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the Git/FTP publishing credentials of an app.
        /// API Version: 2020-12-01.
        /// </summary>
        public static Output<ListWebAppPublishingCredentialsSlotResult> Invoke(ListWebAppPublishingCredentialsSlotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWebAppPublishingCredentialsSlotResult>("azure-native:web:listWebAppPublishingCredentialsSlot", args ?? new ListWebAppPublishingCredentialsSlotInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListWebAppPublishingCredentialsSlotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials for the production slot.
        /// </summary>
        [Input("slot", required: true)]
        public string Slot { get; set; } = null!;

        public ListWebAppPublishingCredentialsSlotArgs()
        {
        }
        public static new ListWebAppPublishingCredentialsSlotArgs Empty => new ListWebAppPublishingCredentialsSlotArgs();
    }

    public sealed class ListWebAppPublishingCredentialsSlotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials for the production slot.
        /// </summary>
        [Input("slot", required: true)]
        public Input<string> Slot { get; set; } = null!;

        public ListWebAppPublishingCredentialsSlotInvokeArgs()
        {
        }
        public static new ListWebAppPublishingCredentialsSlotInvokeArgs Empty => new ListWebAppPublishingCredentialsSlotInvokeArgs();
    }


    [OutputType]
    public sealed class ListWebAppPublishingCredentialsSlotResult
    {
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Password used for publishing.
        /// </summary>
        public readonly string? PublishingPassword;
        /// <summary>
        /// Password hash used for publishing.
        /// </summary>
        public readonly string? PublishingPasswordHash;
        /// <summary>
        /// Password hash salt used for publishing.
        /// </summary>
        public readonly string? PublishingPasswordHashSalt;
        /// <summary>
        /// Username used for publishing.
        /// </summary>
        public readonly string PublishingUserName;
        /// <summary>
        /// Url of SCM site.
        /// </summary>
        public readonly string? ScmUri;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ListWebAppPublishingCredentialsSlotResult(
            string id,

            string? kind,

            string name,

            string? publishingPassword,

            string? publishingPasswordHash,

            string? publishingPasswordHashSalt,

            string publishingUserName,

            string? scmUri,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            PublishingPassword = publishingPassword;
            PublishingPasswordHash = publishingPasswordHash;
            PublishingPasswordHashSalt = publishingPasswordHashSalt;
            PublishingUserName = publishingUserName;
            ScmUri = scmUri;
            Type = type;
        }
    }
}
