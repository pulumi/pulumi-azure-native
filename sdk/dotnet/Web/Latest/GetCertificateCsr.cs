// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.Latest
{
    public static class GetCertificateCsr
    {
        public static Task<GetCertificateCsrResult> InvokeAsync(GetCertificateCsrArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateCsrResult>("azure-nextgen:web/latest:getCertificateCsr", args ?? new GetCertificateCsrArgs(), options.WithVersion());
    }


    public sealed class GetCertificateCsrArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the certificate.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCertificateCsrArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateCsrResult
    {
        /// <summary>
        /// Actual CSR string created
        /// </summary>
        public readonly string? CsrString;
        /// <summary>
        /// Distinguished name of certificate to be created
        /// </summary>
        public readonly string? DistinguishedName;
        /// <summary>
        /// Hosting environment
        /// </summary>
        public readonly string? HostingEnvironment;
        /// <summary>
        /// Kind of resource
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// PFX password
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// PFX certificate of created certificate
        /// </summary>
        public readonly string? PfxBlob;
        /// <summary>
        /// Hash of the certificates public key
        /// </summary>
        public readonly string? PublicKeyHash;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetCertificateCsrResult(
            string? csrString,

            string? distinguishedName,

            string? hostingEnvironment,

            string? kind,

            string location,

            string? name,

            string? password,

            string? pfxBlob,

            string? publicKeyHash,

            ImmutableDictionary<string, string>? tags,

            string? type)
        {
            CsrString = csrString;
            DistinguishedName = distinguishedName;
            HostingEnvironment = hostingEnvironment;
            Kind = kind;
            Location = location;
            Name = name;
            Password = password;
            PfxBlob = pfxBlob;
            PublicKeyHash = publicKeyHash;
            Tags = tags;
            Type = type;
        }
    }
}
