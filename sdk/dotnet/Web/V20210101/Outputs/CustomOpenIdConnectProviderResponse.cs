// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20210101.Outputs
{

    [OutputType]
    public sealed class CustomOpenIdConnectProviderResponse
    {
        /// <summary>
        /// &lt;code&gt;false&lt;/code&gt; if the custom Open ID provider provider should not be enabled; otherwise, &lt;code&gt;true&lt;/code&gt;.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Resource Id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of resource.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The configuration settings of the login flow of the custom Open ID Connect provider.
        /// </summary>
        public readonly Outputs.OpenIdConnectLoginResponse? Login;
        /// <summary>
        /// Resource Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The configuration settings of the app registration for the custom Open ID Connect provider.
        /// </summary>
        public readonly Outputs.OpenIdConnectRegistrationResponse? Registration;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private CustomOpenIdConnectProviderResponse(
            bool? enabled,

            string id,

            string? kind,

            Outputs.OpenIdConnectLoginResponse? login,

            string name,

            Outputs.OpenIdConnectRegistrationResponse? registration,

            string type)
        {
            Enabled = enabled;
            Id = id;
            Kind = kind;
            Login = login;
            Name = name;
            Registration = registration;
            Type = type;
        }
    }
}
