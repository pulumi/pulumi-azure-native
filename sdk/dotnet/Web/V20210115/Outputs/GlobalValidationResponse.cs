// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20210115.Outputs
{

    /// <summary>
    /// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
    /// </summary>
    [OutputType]
    public sealed class GlobalValidationResponse
    {
        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedPaths;
        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        public readonly string? RedirectToProvider;
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the authentication flow is required any request is made; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool? RequireAuthentication;
        /// <summary>
        /// The action to take when an unauthenticated client attempts to access the app.
        /// </summary>
        public readonly string? UnauthenticatedClientAction;

        [OutputConstructor]
        private GlobalValidationResponse(
            ImmutableArray<string> excludedPaths,

            string? redirectToProvider,

            bool? requireAuthentication,

            string? unauthenticatedClientAction)
        {
            ExcludedPaths = excludedPaths;
            RedirectToProvider = redirectToProvider;
            RequireAuthentication = requireAuthentication;
            UnauthenticatedClientAction = unauthenticatedClientAction;
        }
    }
}
