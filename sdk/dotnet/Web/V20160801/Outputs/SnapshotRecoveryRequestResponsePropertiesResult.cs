// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20160801.Outputs
{

    [OutputType]
    public sealed class SnapshotRecoveryRequestResponsePropertiesResult
    {
        /// <summary>
        /// If true, custom hostname conflicts will be ignored when recovering to a target web app.
        /// This setting is only necessary when RecoverConfiguration is enabled.
        /// </summary>
        public readonly bool? IgnoreConflictingHostNames;
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt; the recovery operation can overwrite source app; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        public readonly bool Overwrite;
        /// <summary>
        /// If true, site configuration, in addition to content, will be reverted.
        /// </summary>
        public readonly bool? RecoverConfiguration;
        /// <summary>
        /// Specifies the web app that snapshot contents will be written to.
        /// </summary>
        public readonly Outputs.SnapshotRecoveryTargetResponseResult? RecoveryTarget;
        /// <summary>
        /// Point in time in which the app recovery should be attempted, formatted as a DateTime string.
        /// </summary>
        public readonly string? SnapshotTime;

        [OutputConstructor]
        private SnapshotRecoveryRequestResponsePropertiesResult(
            bool? ignoreConflictingHostNames,

            bool overwrite,

            bool? recoverConfiguration,

            Outputs.SnapshotRecoveryTargetResponseResult? recoveryTarget,

            string? snapshotTime)
        {
            IgnoreConflictingHostNames = ignoreConflictingHostNames;
            Overwrite = overwrite;
            RecoverConfiguration = recoverConfiguration;
            RecoveryTarget = recoveryTarget;
            SnapshotTime = snapshotTime;
        }
    }
}
