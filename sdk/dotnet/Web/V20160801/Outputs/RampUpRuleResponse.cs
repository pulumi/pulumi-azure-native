// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20160801.Outputs
{

    [OutputType]
    public sealed class RampUpRuleResponse
    {
        /// <summary>
        /// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
        /// </summary>
        public readonly string? ActionHostName;
        /// <summary>
        /// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
        /// https://www.siteextensions.net/packages/TiPCallback/
        /// </summary>
        public readonly string? ChangeDecisionCallbackUrl;
        /// <summary>
        /// Specifies interval in minutes to reevaluate ReroutePercentage.
        /// </summary>
        public readonly int? ChangeIntervalInMinutes;
        /// <summary>
        /// In auto ramp up scenario this is the step to add/remove from &lt;code&gt;ReroutePercentage&lt;/code&gt; until it reaches 
        /// &lt;code&gt;MinReroutePercentage&lt;/code&gt; or &lt;code&gt;MaxReroutePercentage&lt;/code&gt;. Site metrics are checked every N minutes specified in &lt;code&gt;ChangeIntervalInMinutes&lt;/code&gt;.
        /// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in &lt;code&gt;ChangeDecisionCallbackUrl&lt;/code&gt;.
        /// </summary>
        public readonly double? ChangeStep;
        /// <summary>
        /// Specifies upper boundary below which ReroutePercentage will stay.
        /// </summary>
        public readonly double? MaxReroutePercentage;
        /// <summary>
        /// Specifies lower boundary above which ReroutePercentage will stay.
        /// </summary>
        public readonly double? MinReroutePercentage;
        /// <summary>
        /// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Percentage of the traffic which will be redirected to &lt;code&gt;ActionHostName&lt;/code&gt;.
        /// </summary>
        public readonly double? ReroutePercentage;

        [OutputConstructor]
        private RampUpRuleResponse(
            string? actionHostName,

            string? changeDecisionCallbackUrl,

            int? changeIntervalInMinutes,

            double? changeStep,

            double? maxReroutePercentage,

            double? minReroutePercentage,

            string? name,

            double? reroutePercentage)
        {
            ActionHostName = actionHostName;
            ChangeDecisionCallbackUrl = changeDecisionCallbackUrl;
            ChangeIntervalInMinutes = changeIntervalInMinutes;
            ChangeStep = changeStep;
            MaxReroutePercentage = maxReroutePercentage;
            MinReroutePercentage = minReroutePercentage;
            Name = name;
            ReroutePercentage = reroutePercentage;
        }
    }
}
