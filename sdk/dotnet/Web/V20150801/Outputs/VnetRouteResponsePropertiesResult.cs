// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20150801.Outputs
{

    [OutputType]
    public sealed class VnetRouteResponsePropertiesResult
    {
        /// <summary>
        /// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
        /// </summary>
        public readonly string? EndAddress;
        /// <summary>
        /// The name of this route. This is only returned by the server and does not need to be set by the client.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The type of route this is:
        ///             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
        ///             INHERITED - Routes inherited from the real Virtual Network routes
        ///             STATIC - Static route set on the web app only
        ///             
        ///             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
        ///             with new INHERITED routes.
        /// </summary>
        public readonly string? RouteType;
        /// <summary>
        /// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
        /// </summary>
        public readonly string? StartAddress;

        [OutputConstructor]
        private VnetRouteResponsePropertiesResult(
            string? endAddress,

            string? name,

            string? routeType,

            string? startAddress)
        {
            EndAddress = endAddress;
            Name = name;
            RouteType = routeType;
            StartAddress = startAddress;
        }
    }
}
