// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20150801
{
    /// <summary>
    /// A host name binding object
    /// </summary>
    public partial class SiteHostNameBindingSlot : Pulumi.CustomResource
    {
        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("azureResourceName")]
        public Output<string?> AzureResourceName { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("azureResourceType")]
        public Output<string?> AzureResourceType { get; private set; } = null!;

        /// <summary>
        /// Custom DNS record type
        /// </summary>
        [Output("customHostNameDnsRecordType")]
        public Output<string?> CustomHostNameDnsRecordType { get; private set; } = null!;

        /// <summary>
        /// Fully qualified ARM domain resource URI
        /// </summary>
        [Output("domainId")]
        public Output<string?> DomainId { get; private set; } = null!;

        /// <summary>
        /// Host name type
        /// </summary>
        [Output("hostNameType")]
        public Output<string?> HostNameType { get; private set; } = null!;

        /// <summary>
        /// Kind of resource
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Web app name
        /// </summary>
        [Output("siteName")]
        public Output<string?> SiteName { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SiteHostNameBindingSlot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SiteHostNameBindingSlot(string name, SiteHostNameBindingSlotArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:web/v20150801:SiteHostNameBindingSlot", name, args ?? new SiteHostNameBindingSlotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SiteHostNameBindingSlot(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:web/v20150801:SiteHostNameBindingSlot", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:web/latest:SiteHostNameBindingSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20160801:SiteHostNameBindingSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20180201:SiteHostNameBindingSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20181101:SiteHostNameBindingSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20190801:SiteHostNameBindingSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20200601:SiteHostNameBindingSlot"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SiteHostNameBindingSlot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SiteHostNameBindingSlot Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SiteHostNameBindingSlot(name, id, options);
        }
    }

    public sealed class SiteHostNameBindingSlotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure resource name
        /// </summary>
        [Input("azureResourceName")]
        public Input<string>? AzureResourceName { get; set; }

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Input("azureResourceType")]
        public Input<string>? AzureResourceType { get; set; }

        /// <summary>
        /// Custom DNS record type
        /// </summary>
        [Input("customHostNameDnsRecordType")]
        public Input<string>? CustomHostNameDnsRecordType { get; set; }

        /// <summary>
        /// Fully qualified ARM domain resource URI
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Name of host
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        /// <summary>
        /// Host name type
        /// </summary>
        [Input("hostNameType")]
        public Input<string>? HostNameType { get; set; }

        /// <summary>
        /// Resource Id
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Kind of resource
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource Location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Web app name
        /// </summary>
        [Input("siteName")]
        public Input<string>? SiteName { get; set; }

        /// <summary>
        /// Name of web app slot. If not specified then will default to production slot.
        /// </summary>
        [Input("slot", required: true)]
        public Input<string> Slot { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Resource type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SiteHostNameBindingSlotArgs()
        {
        }
    }
}
