// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20150801.Inputs
{

    public sealed class SitePropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        /// <summary>
        /// Specifies if the client certificate is enabled for the web app
        /// </summary>
        [Input("clientCertEnabled")]
        public Input<bool>? ClientCertEnabled { get; set; }

        /// <summary>
        /// This is only valid for web app creation. If specified, web app is cloned from 
        ///             a source web app
        /// </summary>
        [Input("cloningInfo")]
        public Input<Inputs.CloningInfoArgs>? CloningInfo { get; set; }

        /// <summary>
        /// Size of a function container
        /// </summary>
        [Input("containerSize")]
        public Input<int>? ContainerSize { get; set; }

        /// <summary>
        /// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Name of gateway app associated with web app
        /// </summary>
        [Input("gatewaySiteName")]
        public Input<string>? GatewaySiteName { get; set; }

        [Input("hostNameSslStates")]
        private InputList<Inputs.HostNameSslStateArgs>? _hostNameSslStates;

        /// <summary>
        /// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
        /// </summary>
        public InputList<Inputs.HostNameSslStateArgs> HostNameSslStates
        {
            get => _hostNameSslStates ?? (_hostNameSslStates = new InputList<Inputs.HostNameSslStateArgs>());
            set => _hostNameSslStates = value;
        }

        /// <summary>
        /// Specifies if the public hostnames are disabled the web app.
        ///             If set to true the app is only accessible via API Management process
        /// </summary>
        [Input("hostNamesDisabled")]
        public Input<bool>? HostNamesDisabled { get; set; }

        /// <summary>
        /// Specification for the hosting environment (App Service Environment) to use for the web app
        /// </summary>
        [Input("hostingEnvironmentProfile")]
        public Input<Inputs.HostingEnvironmentProfileArgs>? HostingEnvironmentProfile { get; set; }

        /// <summary>
        /// Maximum number of workers
        ///             This only applies to function container
        /// </summary>
        [Input("maxNumberOfWorkers")]
        public Input<int>? MaxNumberOfWorkers { get; set; }

        [Input("microService")]
        public Input<string>? MicroService { get; set; }

        /// <summary>
        /// Name of web app
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
        /// </summary>
        [Input("scmSiteAlsoStopped")]
        public Input<bool>? ScmSiteAlsoStopped { get; set; }

        [Input("serverFarmId")]
        public Input<string>? ServerFarmId { get; set; }

        /// <summary>
        /// Configuration of web app
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.SiteConfigArgs>? SiteConfig { get; set; }

        public SitePropertiesArgs()
        {
        }
    }
}
