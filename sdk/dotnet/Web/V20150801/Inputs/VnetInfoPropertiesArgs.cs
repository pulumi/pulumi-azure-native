// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Web.V20150801.Inputs
{

    public sealed class VnetInfoPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A certificate file (.cer) blob containing the public key of the private key used to authenticate a 
        ///             Point-To-Site VPN connection.
        /// </summary>
        [Input("certBlob")]
        public Input<string>? CertBlob { get; set; }

        /// <summary>
        /// The client certificate thumbprint
        /// </summary>
        [Input("certThumbprint")]
        public Input<string>? CertThumbprint { get; set; }

        /// <summary>
        /// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
        /// </summary>
        [Input("dnsServers")]
        public Input<string>? DnsServers { get; set; }

        /// <summary>
        /// Flag to determine if a resync is required
        /// </summary>
        [Input("resyncRequired")]
        public Input<bool>? ResyncRequired { get; set; }

        [Input("routes")]
        private InputList<Inputs.VnetRouteArgs>? _routes;

        /// <summary>
        /// The routes that this virtual network connection uses.
        /// </summary>
        public InputList<Inputs.VnetRouteArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.VnetRouteArgs>());
            set => _routes = value;
        }

        /// <summary>
        /// The vnet resource id
        /// </summary>
        [Input("vnetResourceId")]
        public Input<string>? VnetResourceId { get; set; }

        public VnetInfoPropertiesArgs()
        {
        }
    }
}
