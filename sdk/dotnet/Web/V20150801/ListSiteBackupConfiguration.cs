// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20150801
{
    public static class ListSiteBackupConfiguration
    {
        public static Task<ListSiteBackupConfigurationResult> InvokeAsync(ListSiteBackupConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListSiteBackupConfigurationResult>("azure-nextgen:web/v20150801:listSiteBackupConfiguration", args ?? new ListSiteBackupConfigurationArgs(), options.WithVersion());
    }


    public sealed class ListSiteBackupConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of web app
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListSiteBackupConfigurationArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListSiteBackupConfigurationResult
    {
        /// <summary>
        /// Schedule for the backup if it is executed periodically
        /// </summary>
        public readonly Outputs.BackupScheduleResponseResult? BackupSchedule;
        /// <summary>
        /// Databases included in the backup
        /// </summary>
        public readonly ImmutableArray<Outputs.DatabaseBackupSettingResponseResult> Databases;
        /// <summary>
        /// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Kind of resource
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// SAS URL to the container
        /// </summary>
        public readonly string? StorageAccountUrl;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ListSiteBackupConfigurationResult(
            Outputs.BackupScheduleResponseResult? backupSchedule,

            ImmutableArray<Outputs.DatabaseBackupSettingResponseResult> databases,

            bool? enabled,

            string? kind,

            string location,

            string? name,

            string? storageAccountUrl,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            BackupSchedule = backupSchedule;
            Databases = databases;
            Enabled = enabled;
            Kind = kind;
            Location = location;
            Name = name;
            StorageAccountUrl = storageAccountUrl;
            Tags = tags;
            Type = type;
        }
    }
}
