// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Web.V20150801
{
    /// <summary>
    /// Describes the source control configuration for web app
    /// </summary>
    public partial class SiteSourceControlSlot : Pulumi.CustomResource
    {
        /// <summary>
        /// Name of branch to use for deployment
        /// </summary>
        [Output("branch")]
        public Output<string?> Branch { get; private set; } = null!;

        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        [Output("deploymentRollbackEnabled")]
        public Output<bool?> DeploymentRollbackEnabled { get; private set; } = null!;

        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        [Output("isManualIntegration")]
        public Output<bool?> IsManualIntegration { get; private set; } = null!;

        /// <summary>
        /// Mercurial or Git repository type
        /// </summary>
        [Output("isMercurial")]
        public Output<bool?> IsMercurial { get; private set; } = null!;

        /// <summary>
        /// Kind of resource
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Resource Location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Repository or source control url
        /// </summary>
        [Output("repoUrl")]
        public Output<string?> RepoUrl { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SiteSourceControlSlot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SiteSourceControlSlot(string name, SiteSourceControlSlotArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:web/v20150801:SiteSourceControlSlot", name, args ?? new SiteSourceControlSlotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SiteSourceControlSlot(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:web/v20150801:SiteSourceControlSlot", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:web/latest:SiteSourceControlSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20160801:SiteSourceControlSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20180201:SiteSourceControlSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20181101:SiteSourceControlSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20190801:SiteSourceControlSlot"},
                    new Pulumi.Alias { Type = "azure-nextgen:web/v20200601:SiteSourceControlSlot"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SiteSourceControlSlot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SiteSourceControlSlot Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SiteSourceControlSlot(name, id, options);
        }
    }

    public sealed class SiteSourceControlSlotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of branch to use for deployment
        /// </summary>
        [Input("branch")]
        public Input<string>? Branch { get; set; }

        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        [Input("deploymentRollbackEnabled")]
        public Input<bool>? DeploymentRollbackEnabled { get; set; }

        /// <summary>
        /// Resource Id
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        [Input("isManualIntegration")]
        public Input<bool>? IsManualIntegration { get; set; }

        /// <summary>
        /// Mercurial or Git repository type
        /// </summary>
        [Input("isMercurial")]
        public Input<bool>? IsMercurial { get; set; }

        /// <summary>
        /// Kind of resource
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource Location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Resource Name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Repository or source control url
        /// </summary>
        [Input("repoUrl")]
        public Input<string>? RepoUrl { get; set; }

        /// <summary>
        /// Name of resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of web app slot. If not specified then will default to production slot.
        /// </summary>
        [Input("slot", required: true)]
        public Input<string> Slot { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Resource type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SiteSourceControlSlotArgs()
        {
        }
    }
}
