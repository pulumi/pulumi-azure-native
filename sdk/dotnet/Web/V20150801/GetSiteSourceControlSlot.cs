// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Web.V20150801
{
    [Obsolete(@"Version 2015-08-01 will be removed in v2 of the provider.")]
    public static class GetSiteSourceControlSlot
    {
        /// <summary>
        /// Describes the source control configuration for web app
        /// </summary>
        public static Task<GetSiteSourceControlSlotResult> InvokeAsync(GetSiteSourceControlSlotArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSiteSourceControlSlotResult>("azure-native:web/v20150801:getSiteSourceControlSlot", args ?? new GetSiteSourceControlSlotArgs(), options.WithDefaults());

        /// <summary>
        /// Describes the source control configuration for web app
        /// </summary>
        public static Output<GetSiteSourceControlSlotResult> Invoke(GetSiteSourceControlSlotInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSiteSourceControlSlotResult>("azure-native:web/v20150801:getSiteSourceControlSlot", args ?? new GetSiteSourceControlSlotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSiteSourceControlSlotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of web app
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of web app slot. If not specified then will default to production slot.
        /// </summary>
        [Input("slot", required: true)]
        public string Slot { get; set; } = null!;

        public GetSiteSourceControlSlotArgs()
        {
        }
        public static new GetSiteSourceControlSlotArgs Empty => new GetSiteSourceControlSlotArgs();
    }

    public sealed class GetSiteSourceControlSlotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of web app
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of web app slot. If not specified then will default to production slot.
        /// </summary>
        [Input("slot", required: true)]
        public Input<string> Slot { get; set; } = null!;

        public GetSiteSourceControlSlotInvokeArgs()
        {
        }
        public static new GetSiteSourceControlSlotInvokeArgs Empty => new GetSiteSourceControlSlotInvokeArgs();
    }


    [OutputType]
    public sealed class GetSiteSourceControlSlotResult
    {
        /// <summary>
        /// Name of branch to use for deployment
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        public readonly bool? DeploymentRollbackEnabled;
        /// <summary>
        /// Resource Id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Whether to manual or continuous integration
        /// </summary>
        public readonly bool? IsManualIntegration;
        /// <summary>
        /// Mercurial or Git repository type
        /// </summary>
        public readonly bool? IsMercurial;
        /// <summary>
        /// Kind of resource
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// Resource Location
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource Name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Repository or source control url
        /// </summary>
        public readonly string? RepoUrl;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetSiteSourceControlSlotResult(
            string? branch,

            bool? deploymentRollbackEnabled,

            string? id,

            bool? isManualIntegration,

            bool? isMercurial,

            string? kind,

            string location,

            string? name,

            string? repoUrl,

            ImmutableDictionary<string, string>? tags,

            string? type)
        {
            Branch = branch;
            DeploymentRollbackEnabled = deploymentRollbackEnabled;
            Id = id;
            IsManualIntegration = isManualIntegration;
            IsMercurial = isMercurial;
            Kind = kind;
            Location = location;
            Name = name;
            RepoUrl = repoUrl;
            Tags = tags;
            Type = type;
        }
    }
}
