// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240601Preview.Outputs
{

    [OutputType]
    public sealed class NetworkConfigurationResponse
    {
        /// <summary>
        /// The configuration of networks being attached to the cluster for use by the workloads that run on this Kubernetes cluster.
        /// </summary>
        public readonly Outputs.AttachedNetworkConfigurationResponse? AttachedNetworkConfiguration;
        /// <summary>
        /// The configuration of the BGP service load balancer for this Kubernetes cluster. A maximum of one service load balancer may be specified, either Layer 2 or BGP.
        /// </summary>
        public readonly Outputs.BgpServiceLoadBalancerConfigurationResponse? BgpServiceLoadBalancerConfiguration;
        /// <summary>
        /// The resource ID of the associated Cloud Services network.
        /// </summary>
        public readonly string CloudServicesNetworkId;
        /// <summary>
        /// The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.
        /// </summary>
        public readonly string CniNetworkId;
        /// <summary>
        /// The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in service CIDR.
        /// </summary>
        public readonly string? DnsServiceIp;
        /// <summary>
        /// The configuration of the Layer 2 service load balancer for this Kubernetes cluster. A maximum of one service load balancer may be specified, either Layer 2 or BGP.
        /// </summary>
        public readonly Outputs.L2ServiceLoadBalancerConfigurationResponse? L2ServiceLoadBalancerConfiguration;
        /// <summary>
        /// The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        public readonly ImmutableArray<string> PodCidrs;
        /// <summary>
        /// The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        public readonly ImmutableArray<string> ServiceCidrs;

        [OutputConstructor]
        private NetworkConfigurationResponse(
            Outputs.AttachedNetworkConfigurationResponse? attachedNetworkConfiguration,

            Outputs.BgpServiceLoadBalancerConfigurationResponse? bgpServiceLoadBalancerConfiguration,

            string cloudServicesNetworkId,

            string cniNetworkId,

            string? dnsServiceIp,

            Outputs.L2ServiceLoadBalancerConfigurationResponse? l2ServiceLoadBalancerConfiguration,

            ImmutableArray<string> podCidrs,

            ImmutableArray<string> serviceCidrs)
        {
            AttachedNetworkConfiguration = attachedNetworkConfiguration;
            BgpServiceLoadBalancerConfiguration = bgpServiceLoadBalancerConfiguration;
            CloudServicesNetworkId = cloudServicesNetworkId;
            CniNetworkId = cniNetworkId;
            DnsServiceIp = dnsServiceIp;
            L2ServiceLoadBalancerConfiguration = l2ServiceLoadBalancerConfiguration;
            PodCidrs = podCidrs;
            ServiceCidrs = serviceCidrs;
        }
    }
}
