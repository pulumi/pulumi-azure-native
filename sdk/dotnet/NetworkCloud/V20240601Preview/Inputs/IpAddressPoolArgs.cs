// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240601Preview.Inputs
{

    public sealed class IpAddressPoolArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses", required: true)]
        private InputList<string>? _addresses;

        /// <summary>
        /// The list of IP address ranges. Each range can be a either a subnet in CIDR format or an explicit start-end range of IP addresses. For a BGP service load balancer configuration, only CIDR format is supported and excludes /32 (IPv4) and /128 (IPv6) prefixes.
        /// </summary>
        public InputList<string> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<string>());
            set => _addresses = value;
        }

        /// <summary>
        /// The indicator to determine if automatic allocation from the pool should occur.
        /// </summary>
        [Input("autoAssign")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20240601Preview.BfdEnabled>? AutoAssign { get; set; }

        /// <summary>
        /// The name used to identify this IP address pool for association with a BGP advertisement.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The indicator to prevent the use of IP addresses ending with .0 and .255 for this pool. Enabling this option will only use IP addresses between .1 and .254 inclusive.
        /// </summary>
        [Input("onlyUseHostIps")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20240601Preview.BfdEnabled>? OnlyUseHostIps { get; set; }

        public IpAddressPoolArgs()
        {
            AutoAssign = "True";
            OnlyUseHostIps = "True";
        }
        public static new IpAddressPoolArgs Empty => new IpAddressPoolArgs();
    }
}
