// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240601Preview
{
    [AzureNativeResourceType("azure-native:networkcloud/v20240601preview:StorageAppliance")]
    public partial class StorageAppliance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The credentials of the administrative interface on this storage appliance.
        /// </summary>
        [Output("administratorCredentials")]
        public Output<Outputs.AdministrativeCredentialsResponse> AdministratorCredentials { get; private set; } = null!;

        /// <summary>
        /// The total capacity of the storage appliance.
        /// </summary>
        [Output("capacity")]
        public Output<double> Capacity { get; private set; } = null!;

        /// <summary>
        /// The amount of storage consumed.
        /// </summary>
        [Output("capacityUsed")]
        public Output<double> CapacityUsed { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the cluster this storage appliance is associated with.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The detailed status of the storage appliance.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The endpoint for the management interface of the storage appliance.
        /// </summary>
        [Output("managementIpv4Address")]
        public Output<string> ManagementIpv4Address { get; private set; } = null!;

        /// <summary>
        /// The manufacturer of the storage appliance.
        /// </summary>
        [Output("manufacturer")]
        public Output<string> Manufacturer { get; private set; } = null!;

        /// <summary>
        /// The model of the storage appliance.
        /// </summary>
        [Output("model")]
        public Output<string> Model { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the storage appliance.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the rack where this storage appliance resides.
        /// </summary>
        [Output("rackId")]
        public Output<string> RackId { get; private set; } = null!;

        /// <summary>
        /// The slot the storage appliance is in the rack based on the BOM configuration.
        /// </summary>
        [Output("rackSlot")]
        public Output<double> RackSlot { get; private set; } = null!;

        /// <summary>
        /// The indicator of whether the storage appliance supports remote vendor management.
        /// </summary>
        [Output("remoteVendorManagementFeature")]
        public Output<string> RemoteVendorManagementFeature { get; private set; } = null!;

        /// <summary>
        /// The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported feature.
        /// </summary>
        [Output("remoteVendorManagementStatus")]
        public Output<string> RemoteVendorManagementStatus { get; private set; } = null!;

        /// <summary>
        /// The list of statuses that represent secret rotation activity.
        /// </summary>
        [Output("secretRotationStatus")]
        public Output<ImmutableArray<Outputs.SecretRotationStatusResponse>> SecretRotationStatus { get; private set; } = null!;

        /// <summary>
        /// The serial number for the storage appliance.
        /// </summary>
        [Output("serialNumber")]
        public Output<string> SerialNumber { get; private set; } = null!;

        /// <summary>
        /// The SKU for the storage appliance.
        /// </summary>
        [Output("storageApplianceSkuId")]
        public Output<string> StorageApplianceSkuId { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the storage appliance.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a StorageAppliance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageAppliance(string name, StorageApplianceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20240601preview:StorageAppliance", name, args ?? new StorageApplianceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageAppliance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20240601preview:StorageAppliance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud:StorageAppliance" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230701:StorageAppliance" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20231001preview:StorageAppliance" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20240701:StorageAppliance" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageAppliance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageAppliance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageAppliance(name, id, options);
        }
    }

    public sealed class StorageApplianceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credentials of the administrative interface on this storage appliance.
        /// </summary>
        [Input("administratorCredentials", required: true)]
        public Input<Inputs.AdministrativeCredentialsArgs> AdministratorCredentials { get; set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource ID of the rack where this storage appliance resides.
        /// </summary>
        [Input("rackId", required: true)]
        public Input<string> RackId { get; set; } = null!;

        /// <summary>
        /// The slot the storage appliance is in the rack based on the BOM configuration.
        /// </summary>
        [Input("rackSlot", required: true)]
        public Input<double> RackSlot { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The serial number for the storage appliance.
        /// </summary>
        [Input("serialNumber", required: true)]
        public Input<string> SerialNumber { get; set; } = null!;

        /// <summary>
        /// The name of the storage appliance.
        /// </summary>
        [Input("storageApplianceName")]
        public Input<string>? StorageApplianceName { get; set; }

        /// <summary>
        /// The SKU for the storage appliance.
        /// </summary>
        [Input("storageApplianceSkuId", required: true)]
        public Input<string> StorageApplianceSkuId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public StorageApplianceArgs()
        {
        }
        public static new StorageApplianceArgs Empty => new StorageApplianceArgs();
    }
}
