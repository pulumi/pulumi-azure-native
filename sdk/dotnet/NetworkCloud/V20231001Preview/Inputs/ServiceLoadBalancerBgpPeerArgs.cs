// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20231001Preview.Inputs
{

    public sealed class ServiceLoadBalancerBgpPeerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The indicator of BFD enablement for this BgpPeer.
        /// </summary>
        [Input("bfdEnabled")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20231001Preview.BfdEnabled>? BfdEnabled { get; set; }

        /// <summary>
        /// The indicator to enable multi-hop peering support.
        /// </summary>
        [Input("bgpMultiHop")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20231001Preview.BgpMultiHop>? BgpMultiHop { get; set; }

        /// <summary>
        /// The requested BGP hold time value. This field uses ISO 8601 duration format, for example P1H.
        /// </summary>
        [Input("holdTime")]
        public Input<string>? HoldTime { get; set; }

        /// <summary>
        /// The requested BGP keepalive time value. This field uses ISO 8601 duration format, for example P1H.
        /// </summary>
        [Input("keepAliveTime")]
        public Input<string>? KeepAliveTime { get; set; }

        /// <summary>
        /// The autonomous system number used for the local end of the BGP session.
        /// </summary>
        [Input("myAsn")]
        public Input<double>? MyAsn { get; set; }

        /// <summary>
        /// The name used to identify this BGP peer for association with a BGP advertisement.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The authentication password for routers enforcing TCP MD5 authenticated sessions.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The IPv4 or IPv6 address used to connect this BGP session.
        /// </summary>
        [Input("peerAddress", required: true)]
        public Input<string> PeerAddress { get; set; } = null!;

        /// <summary>
        /// The autonomous system number expected from the remote end of the BGP session.
        /// </summary>
        [Input("peerAsn", required: true)]
        public Input<double> PeerAsn { get; set; } = null!;

        /// <summary>
        /// The port used to connect this BGP session.
        /// </summary>
        [Input("peerPort")]
        public Input<double>? PeerPort { get; set; }

        public ServiceLoadBalancerBgpPeerArgs()
        {
            BfdEnabled = "False";
            BgpMultiHop = "False";
            PeerPort = 179;
        }
        public static new ServiceLoadBalancerBgpPeerArgs Empty => new ServiceLoadBalancerBgpPeerArgs();
    }
}
