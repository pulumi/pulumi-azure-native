// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20231001Preview
{
    [AzureNativeResourceType("azure-native:networkcloud/v20231001preview:KubernetesCluster")]
    public partial class KubernetesCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure Active Directory Integration properties.
        /// </summary>
        [Output("aadConfiguration")]
        public Output<Outputs.AadConfigurationResponse?> AadConfiguration { get; private set; } = null!;

        /// <summary>
        /// The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their own values.
        /// </summary>
        [Output("administratorConfiguration")]
        public Output<Outputs.AdministratorConfigurationResponse?> AdministratorConfiguration { get; private set; } = null!;

        /// <summary>
        /// The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent pools.
        /// </summary>
        [Output("attachedNetworkIds")]
        public Output<ImmutableArray<string>> AttachedNetworkIds { get; private set; } = null!;

        /// <summary>
        /// The list of versions that this Kubernetes cluster can be upgraded to.
        /// </summary>
        [Output("availableUpgrades")]
        public Output<ImmutableArray<Outputs.AvailableUpgradeResponse>> AvailableUpgrades { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Network Cloud cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the connected cluster set up when this Kubernetes cluster is created.
        /// </summary>
        [Output("connectedClusterId")]
        public Output<string> ConnectedClusterId { get; private set; } = null!;

        /// <summary>
        /// The current running version of Kubernetes on the control plane.
        /// </summary>
        [Output("controlPlaneKubernetesVersion")]
        public Output<string> ControlPlaneKubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// The defining characteristics of the control plane for this Kubernetes Cluster.
        /// </summary>
        [Output("controlPlaneNodeConfiguration")]
        public Output<Outputs.ControlPlaneNodeConfigurationResponse> ControlPlaneNodeConfiguration { get; private set; } = null!;

        /// <summary>
        /// The current status of the Kubernetes cluster.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The current feature settings.
        /// </summary>
        [Output("featureStatuses")]
        public Output<ImmutableArray<Outputs.FeatureStatusResponse>> FeatureStatuses { get; private set; } = null!;

        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        [Output("initialAgentPoolConfigurations")]
        public Output<ImmutableArray<Outputs.InitialAgentPoolConfigurationResponse>> InitialAgentPoolConfigurations { get; private set; } = null!;

        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update.
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        [Output("managedResourceGroupConfiguration")]
        public Output<Outputs.ManagedResourceGroupConfigurationResponse?> ManagedResourceGroupConfiguration { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.NetworkConfigurationResponse> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// The details of the nodes in this cluster.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.KubernetesClusterNodeResponse>> Nodes { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the Kubernetes cluster resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesCluster(string name, KubernetesClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20231001preview:KubernetesCluster", name, args ?? new KubernetesClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20231001preview:KubernetesCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud:KubernetesCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230501preview:KubernetesCluster" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230701:KubernetesCluster" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KubernetesCluster(name, id, options);
        }
    }

    public sealed class KubernetesClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Active Directory Integration properties.
        /// </summary>
        [Input("aadConfiguration")]
        public Input<Inputs.AadConfigurationArgs>? AadConfiguration { get; set; }

        /// <summary>
        /// The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their own values.
        /// </summary>
        [Input("administratorConfiguration")]
        public Input<Inputs.AdministratorConfigurationArgs>? AdministratorConfiguration { get; set; }

        /// <summary>
        /// The defining characteristics of the control plane for this Kubernetes Cluster.
        /// </summary>
        [Input("controlPlaneNodeConfiguration", required: true)]
        public Input<Inputs.ControlPlaneNodeConfigurationArgs> ControlPlaneNodeConfiguration { get; set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        [Input("initialAgentPoolConfigurations", required: true)]
        private InputList<Inputs.InitialAgentPoolConfigurationArgs>? _initialAgentPoolConfigurations;

        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        public InputList<Inputs.InitialAgentPoolConfigurationArgs> InitialAgentPoolConfigurations
        {
            get => _initialAgentPoolConfigurations ?? (_initialAgentPoolConfigurations = new InputList<Inputs.InitialAgentPoolConfigurationArgs>());
            set => _initialAgentPoolConfigurations = value;
        }

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName")]
        public Input<string>? KubernetesClusterName { get; set; }

        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update.
        /// </summary>
        [Input("kubernetesVersion", required: true)]
        public Input<string> KubernetesVersion { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        [Input("managedResourceGroupConfiguration")]
        public Input<Inputs.ManagedResourceGroupConfigurationArgs>? ManagedResourceGroupConfiguration { get; set; }

        /// <summary>
        /// The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
        /// </summary>
        [Input("networkConfiguration", required: true)]
        public Input<Inputs.NetworkConfigurationArgs> NetworkConfiguration { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public KubernetesClusterArgs()
        {
        }
        public static new KubernetesClusterArgs Empty => new KubernetesClusterArgs();
    }
}
