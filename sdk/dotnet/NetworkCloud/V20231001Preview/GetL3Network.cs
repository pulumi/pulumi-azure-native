// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20231001Preview
{
    public static class GetL3Network
    {
        /// <summary>
        /// Get properties of the provided layer 3 (L3) network.
        /// </summary>
        public static Task<GetL3NetworkResult> InvokeAsync(GetL3NetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetL3NetworkResult>("azure-native:networkcloud/v20231001preview:getL3Network", args ?? new GetL3NetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided layer 3 (L3) network.
        /// </summary>
        public static Output<GetL3NetworkResult> Invoke(GetL3NetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetL3NetworkResult>("azure-native:networkcloud/v20231001preview:getL3Network", args ?? new GetL3NetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetL3NetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the L3 network.
        /// </summary>
        [Input("l3NetworkName", required: true)]
        public string L3NetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetL3NetworkArgs()
        {
        }
        public static new GetL3NetworkArgs Empty => new GetL3NetworkArgs();
    }

    public sealed class GetL3NetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the L3 network.
        /// </summary>
        [Input("l3NetworkName", required: true)]
        public Input<string> L3NetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetL3NetworkInvokeArgs()
        {
        }
        public static new GetL3NetworkInvokeArgs Empty => new GetL3NetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetL3NetworkResult
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedResourceIds;
        /// <summary>
        /// The resource ID of the Network Cloud cluster this L3 network is associated with.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The more detailed status of the L3 network.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.
        /// </summary>
        public readonly ImmutableArray<string> HybridAksClustersAssociatedIds;
        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
        /// </summary>
        public readonly string? HybridAksIpamEnabled;
        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
        /// </summary>
        public readonly string? HybridAksPluginType;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
        /// </summary>
        public readonly string? InterfaceName;
        /// <summary>
        /// The type of the IP address allocation, defaulted to "DualStack".
        /// </summary>
        public readonly string? IpAllocationType;
        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        public readonly string? Ipv4ConnectedPrefix;
        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        public readonly string? Ipv6ConnectedPrefix;
        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        public readonly string L3IsolationDomainId;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the L3 network.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.
        /// </summary>
        public readonly ImmutableArray<string> VirtualMachinesAssociatedIds;
        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        public readonly double Vlan;

        [OutputConstructor]
        private GetL3NetworkResult(
            ImmutableArray<string> associatedResourceIds,

            string clusterId,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse extendedLocation,

            ImmutableArray<string> hybridAksClustersAssociatedIds,

            string? hybridAksIpamEnabled,

            string? hybridAksPluginType,

            string id,

            string? interfaceName,

            string? ipAllocationType,

            string? ipv4ConnectedPrefix,

            string? ipv6ConnectedPrefix,

            string l3IsolationDomainId,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> virtualMachinesAssociatedIds,

            double vlan)
        {
            AssociatedResourceIds = associatedResourceIds;
            ClusterId = clusterId;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            HybridAksClustersAssociatedIds = hybridAksClustersAssociatedIds;
            HybridAksIpamEnabled = hybridAksIpamEnabled;
            HybridAksPluginType = hybridAksPluginType;
            Id = id;
            InterfaceName = interfaceName;
            IpAllocationType = ipAllocationType;
            Ipv4ConnectedPrefix = ipv4ConnectedPrefix;
            Ipv6ConnectedPrefix = ipv6ConnectedPrefix;
            L3IsolationDomainId = l3IsolationDomainId;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualMachinesAssociatedIds = virtualMachinesAssociatedIds;
            Vlan = vlan;
        }
    }
}
