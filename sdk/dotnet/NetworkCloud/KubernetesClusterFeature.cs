// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    /// <summary>
    /// Azure REST API version: 2024-06-01-preview.
    /// 
    /// Other available API versions: 2024-07-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:networkcloud:KubernetesClusterFeature")]
    public partial class KubernetesClusterFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The lifecycle indicator of the feature.
        /// </summary>
        [Output("availabilityLifecycle")]
        public Output<string> AvailabilityLifecycle { get; private set; } = null!;

        /// <summary>
        /// The detailed status of the feature.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message for the detailed status of the feature.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The configured options for the feature.
        /// </summary>
        [Output("options")]
        public Output<ImmutableArray<Outputs.StringKeyValuePairResponse>> Options { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the Kubernetes cluster feature.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle.
        /// </summary>
        [Output("required")]
        public Output<string> Required { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the feature.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesClusterFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesClusterFeature(string name, KubernetesClusterFeatureArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:KubernetesClusterFeature", name, args ?? new KubernetesClusterFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesClusterFeature(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:KubernetesClusterFeature", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20240601preview:KubernetesClusterFeature" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20240701:KubernetesClusterFeature" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesClusterFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesClusterFeature Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KubernetesClusterFeature(name, id, options);
        }
    }

    public sealed class KubernetesClusterFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the feature.
        /// </summary>
        [Input("featureName")]
        public Input<string>? FeatureName { get; set; }

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public Input<string> KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("options")]
        private InputList<Inputs.StringKeyValuePairArgs>? _options;

        /// <summary>
        /// The configured options for the feature.
        /// </summary>
        public InputList<Inputs.StringKeyValuePairArgs> Options
        {
            get => _options ?? (_options = new InputList<Inputs.StringKeyValuePairArgs>());
            set => _options = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public KubernetesClusterFeatureArgs()
        {
        }
        public static new KubernetesClusterFeatureArgs Empty => new KubernetesClusterFeatureArgs();
    }
}
