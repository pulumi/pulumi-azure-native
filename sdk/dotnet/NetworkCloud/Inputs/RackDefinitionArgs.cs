// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.Inputs
{

    public sealed class RackDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The zone name used for this rack when created.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("bareMetalMachineConfigurationData")]
        private InputList<Inputs.BareMetalMachineConfigurationDataArgs>? _bareMetalMachineConfigurationData;

        /// <summary>
        /// The unordered list of bare metal machine configuration.
        /// </summary>
        public InputList<Inputs.BareMetalMachineConfigurationDataArgs> BareMetalMachineConfigurationData
        {
            get => _bareMetalMachineConfigurationData ?? (_bareMetalMachineConfigurationData = new InputList<Inputs.BareMetalMachineConfigurationDataArgs>());
            set => _bareMetalMachineConfigurationData = value;
        }

        /// <summary>
        /// The resource ID of the network rack that matches this rack definition.
        /// </summary>
        [Input("networkRackId", required: true)]
        public Input<string> NetworkRackId { get; set; } = null!;

        /// <summary>
        /// The free-form description of the rack's location.
        /// </summary>
        [Input("rackLocation")]
        public Input<string>? RackLocation { get; set; }

        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
        /// </summary>
        [Input("rackSerialNumber", required: true)]
        public Input<string> RackSerialNumber { get; set; } = null!;

        /// <summary>
        /// The resource ID of the sku for the rack being added.
        /// </summary>
        [Input("rackSkuId", required: true)]
        public Input<string> RackSkuId { get; set; } = null!;

        [Input("storageApplianceConfigurationData")]
        private InputList<Inputs.StorageApplianceConfigurationDataArgs>? _storageApplianceConfigurationData;

        /// <summary>
        /// The list of storage appliance configuration data for this rack.
        /// </summary>
        public InputList<Inputs.StorageApplianceConfigurationDataArgs> StorageApplianceConfigurationData
        {
            get => _storageApplianceConfigurationData ?? (_storageApplianceConfigurationData = new InputList<Inputs.StorageApplianceConfigurationDataArgs>());
            set => _storageApplianceConfigurationData = value;
        }

        public RackDefinitionArgs()
        {
        }
        public static new RackDefinitionArgs Empty => new RackDefinitionArgs();
    }
}
