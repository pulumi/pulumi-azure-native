// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.Inputs
{

    public sealed class DefaultCniNetworkPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("cniBgpConfiguration")]
        public Input<Inputs.CniBgpConfigurationArgs>? CniBgpConfiguration { get; set; }

        /// <summary>
        /// The type of the IP address allocation.
        /// </summary>
        [Input("ipAllocationType")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.IpAllocationType>? IpAllocationType { get; set; }

        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        [Input("ipv4ConnectedPrefix")]
        public Input<string>? Ipv4ConnectedPrefix { get; set; }

        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        [Input("ipv6ConnectedPrefix")]
        public Input<string>? Ipv6ConnectedPrefix { get; set; }

        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        [Input("l3IsolationDomainId", required: true)]
        public Input<string> L3IsolationDomainId { get; set; } = null!;

        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        [Input("vlan", required: true)]
        public Input<double> Vlan { get; set; } = null!;

        public DefaultCniNetworkPropertiesArgs()
        {
            IpAllocationType = "DualStack";
        }
        public static new DefaultCniNetworkPropertiesArgs Empty => new DefaultCniNetworkPropertiesArgs();
    }
}
