// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    /// <summary>
    /// Azure REST API version: 2023-10-01-preview. Prior API version in Azure Native 1.x: 2022-12-12-preview.
    /// 
    /// Other available API versions: 2023-07-01, 2024-06-01-preview, 2024-07-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:networkcloud:BareMetalMachine")]
    public partial class BareMetalMachine : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        [Output("associatedResourceIds")]
        public Output<ImmutableArray<string>> AssociatedResourceIds { get; private set; } = null!;

        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        [Output("bmcConnectionString")]
        public Output<string> BmcConnectionString { get; private set; } = null!;

        /// <summary>
        /// The credentials of the baseboard management controller on this bare metal machine.
        /// </summary>
        [Output("bmcCredentials")]
        public Output<Outputs.AdministrativeCredentialsResponse> BmcCredentials { get; private set; } = null!;

        /// <summary>
        /// The MAC address of the BMC device.
        /// </summary>
        [Output("bmcMacAddress")]
        public Output<string> BmcMacAddress { get; private set; } = null!;

        /// <summary>
        /// The MAC address of a NIC connected to the PXE network.
        /// </summary>
        [Output("bootMacAddress")]
        public Output<string> BootMacAddress { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the cluster this bare metal machine is associated with.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The cordon status of the bare metal machine.
        /// </summary>
        [Output("cordonStatus")]
        public Output<string> CordonStatus { get; private set; } = null!;

        /// <summary>
        /// The more detailed status of the bare metal machine.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The hardware inventory, including information acquired from the model/sku information and from the ironic inspector.
        /// </summary>
        [Output("hardwareInventory")]
        public Output<Outputs.HardwareInventoryResponse> HardwareInventory { get; private set; } = null!;

        /// <summary>
        /// The details of the latest hardware validation performed for this bare metal machine.
        /// </summary>
        [Output("hardwareValidationStatus")]
        public Output<Outputs.HardwareValidationStatusResponse> HardwareValidationStatus { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have nodes hosted on this bare metal machine.
        /// </summary>
        [Output("hybridAksClustersAssociatedIds")]
        public Output<ImmutableArray<string>> HybridAksClustersAssociatedIds { get; private set; } = null!;

        /// <summary>
        /// The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
        /// </summary>
        [Output("kubernetesNodeName")]
        public Output<string> KubernetesNodeName { get; private set; } = null!;

        /// <summary>
        /// The version of Kubernetes running on this machine.
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The custom details provided by the customer.
        /// </summary>
        [Output("machineDetails")]
        public Output<string> MachineDetails { get; private set; } = null!;

        /// <summary>
        /// The OS-level hostname assigned to this machine.
        /// </summary>
        [Output("machineName")]
        public Output<string> MachineName { get; private set; } = null!;

        /// <summary>
        /// The list of roles that are assigned to the cluster node running on this machine.
        /// </summary>
        [Output("machineRoles")]
        public Output<ImmutableArray<string>> MachineRoles { get; private set; } = null!;

        /// <summary>
        /// The unique internal identifier of the bare metal machine SKU.
        /// </summary>
        [Output("machineSkuId")]
        public Output<string> MachineSkuId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Output("oamIpv4Address")]
        public Output<string> OamIpv4Address { get; private set; } = null!;

        /// <summary>
        /// The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Output("oamIpv6Address")]
        public Output<string> OamIpv6Address { get; private set; } = null!;

        /// <summary>
        /// The image that is currently provisioned to the OS disk.
        /// </summary>
        [Output("osImage")]
        public Output<string> OsImage { get; private set; } = null!;

        /// <summary>
        /// The power state derived from the baseboard management controller.
        /// </summary>
        [Output("powerState")]
        public Output<string> PowerState { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the bare metal machine.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the rack where this bare metal machine resides.
        /// </summary>
        [Output("rackId")]
        public Output<string> RackId { get; private set; } = null!;

        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        [Output("rackSlot")]
        public Output<double> RackSlot { get; private set; } = null!;

        /// <summary>
        /// The indicator of whether the bare metal machine is ready to receive workloads.
        /// </summary>
        [Output("readyState")]
        public Output<string> ReadyState { get; private set; } = null!;

        /// <summary>
        /// The runtime protection status of the bare metal machine.
        /// </summary>
        [Output("runtimeProtectionStatus")]
        public Output<Outputs.RuntimeProtectionStatusResponse> RuntimeProtectionStatus { get; private set; } = null!;

        /// <summary>
        /// The serial number of the bare metal machine.
        /// </summary>
        [Output("serialNumber")]
        public Output<string> SerialNumber { get; private set; } = null!;

        /// <summary>
        /// The discovered value of the machine's service tag.
        /// </summary>
        [Output("serviceTag")]
        public Output<string> ServiceTag { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted on this bare metal machine.
        /// </summary>
        [Output("virtualMachinesAssociatedIds")]
        public Output<ImmutableArray<string>> VirtualMachinesAssociatedIds { get; private set; } = null!;


        /// <summary>
        /// Create a BareMetalMachine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BareMetalMachine(string name, BareMetalMachineArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:BareMetalMachine", name, args ?? new BareMetalMachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BareMetalMachine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:BareMetalMachine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230701:BareMetalMachine" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20231001preview:BareMetalMachine" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20240601preview:BareMetalMachine" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20240701:BareMetalMachine" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BareMetalMachine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BareMetalMachine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BareMetalMachine(name, id, options);
        }
    }

    public sealed class BareMetalMachineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bare metal machine.
        /// </summary>
        [Input("bareMetalMachineName")]
        public Input<string>? BareMetalMachineName { get; set; }

        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        [Input("bmcConnectionString", required: true)]
        public Input<string> BmcConnectionString { get; set; } = null!;

        /// <summary>
        /// The credentials of the baseboard management controller on this bare metal machine.
        /// </summary>
        [Input("bmcCredentials", required: true)]
        public Input<Inputs.AdministrativeCredentialsArgs> BmcCredentials { get; set; } = null!;

        /// <summary>
        /// The MAC address of the BMC device.
        /// </summary>
        [Input("bmcMacAddress", required: true)]
        public Input<string> BmcMacAddress { get; set; } = null!;

        /// <summary>
        /// The MAC address of a NIC connected to the PXE network.
        /// </summary>
        [Input("bootMacAddress", required: true)]
        public Input<string> BootMacAddress { get; set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The custom details provided by the customer.
        /// </summary>
        [Input("machineDetails", required: true)]
        public Input<string> MachineDetails { get; set; } = null!;

        /// <summary>
        /// The OS-level hostname assigned to this machine.
        /// </summary>
        [Input("machineName", required: true)]
        public Input<string> MachineName { get; set; } = null!;

        /// <summary>
        /// The unique internal identifier of the bare metal machine SKU.
        /// </summary>
        [Input("machineSkuId", required: true)]
        public Input<string> MachineSkuId { get; set; } = null!;

        /// <summary>
        /// The resource ID of the rack where this bare metal machine resides.
        /// </summary>
        [Input("rackId", required: true)]
        public Input<string> RackId { get; set; } = null!;

        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        [Input("rackSlot", required: true)]
        public Input<double> RackSlot { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The serial number of the bare metal machine.
        /// </summary>
        [Input("serialNumber", required: true)]
        public Input<string> SerialNumber { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public BareMetalMachineArgs()
        {
        }
        public static new BareMetalMachineArgs Empty => new BareMetalMachineArgs();
    }
}
