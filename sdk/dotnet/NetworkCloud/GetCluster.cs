// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    public static class GetCluster
    {
        /// <summary>
        /// Get properties of the provided cluster.
        /// Azure REST API version: 2023-10-01-preview.
        /// 
        /// Other available API versions: 2023-07-01, 2024-06-01-preview.
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("azure-native:networkcloud:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided cluster.
        /// Azure REST API version: 2023-10-01-preview.
        /// 
        /// Other available API versions: 2023-07-01, 2024-06-01-preview.
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("azure-native:networkcloud:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in a multi-rack cluster.
        /// </summary>
        public readonly Outputs.RackDefinitionResponse AggregatorOrSingleRackDefinition;
        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        public readonly string? AnalyticsWorkspaceId;
        /// <summary>
        /// The list of cluster runtime version upgrades available for this cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAvailableUpgradeVersionResponse> AvailableUpgradeVersions;
        /// <summary>
        /// The capacity supported by this cluster.
        /// </summary>
        public readonly Outputs.ClusterCapacityResponse ClusterCapacity;
        /// <summary>
        /// The latest heartbeat status between the cluster manager and the cluster.
        /// </summary>
        public readonly string ClusterConnectionStatus;
        /// <summary>
        /// The extended location (custom location) that represents the cluster's control plane location. This extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ClusterExtendedLocation;
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        public readonly string? ClusterLocation;
        /// <summary>
        /// The latest connectivity status between cluster manager and the cluster.
        /// </summary>
        public readonly string ClusterManagerConnectionStatus;
        /// <summary>
        /// The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.
        /// </summary>
        public readonly string ClusterManagerId;
        /// <summary>
        /// The service principal to be used by the cluster during Arc Appliance installation.
        /// </summary>
        public readonly Outputs.ServicePrincipalInformationResponse? ClusterServicePrincipal;
        /// <summary>
        /// The type of rack configuration for the cluster.
        /// </summary>
        public readonly string ClusterType;
        /// <summary>
        /// The current runtime version of the cluster.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
        /// </summary>
        public readonly Outputs.ValidationThresholdResponse? ComputeDeploymentThreshold;
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.RackDefinitionResponse> ComputeRackDefinitions;
        /// <summary>
        /// The current detailed status of the cluster.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster manager associated with the cluster.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Field Deprecated. This field will not be populated in an upcoming version. The extended location (custom location) that represents the Hybrid AKS control plane location. This extended location is used when creating provisioned clusters (Hybrid AKS clusters).
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse HybridAksExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        public readonly Outputs.ManagedResourceGroupConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The count of Manual Action Taken (MAT) events that have not been validated.
        /// </summary>
        public readonly double ManualActionCount;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resource ID of the Network Fabric associated with the cluster.
        /// </summary>
        public readonly string NetworkFabricId;
        /// <summary>
        /// The provisioning state of the cluster.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The settings for cluster runtime protection.
        /// </summary>
        public readonly Outputs.RuntimeProtectionConfigurationResponse? RuntimeProtectionConfiguration;
        /// <summary>
        /// The configuration for use of a key vault to store secrets for later retrieval by the operator.
        /// </summary>
        public readonly Outputs.ClusterSecretArchiveResponse? SecretArchive;
        /// <summary>
        /// The support end date of the runtime version of the cluster.
        /// </summary>
        public readonly string SupportExpiryDate;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The strategy for updating the cluster.
        /// </summary>
        public readonly Outputs.ClusterUpdateStrategyResponse? UpdateStrategy;
        /// <summary>
        /// The list of workload resource IDs that are hosted within this cluster.
        /// </summary>
        public readonly ImmutableArray<string> WorkloadResourceIds;

        [OutputConstructor]
        private GetClusterResult(
            Outputs.RackDefinitionResponse aggregatorOrSingleRackDefinition,

            string? analyticsWorkspaceId,

            ImmutableArray<Outputs.ClusterAvailableUpgradeVersionResponse> availableUpgradeVersions,

            Outputs.ClusterCapacityResponse clusterCapacity,

            string clusterConnectionStatus,

            Outputs.ExtendedLocationResponse clusterExtendedLocation,

            string? clusterLocation,

            string clusterManagerConnectionStatus,

            string clusterManagerId,

            Outputs.ServicePrincipalInformationResponse? clusterServicePrincipal,

            string clusterType,

            string clusterVersion,

            Outputs.ValidationThresholdResponse? computeDeploymentThreshold,

            ImmutableArray<Outputs.RackDefinitionResponse> computeRackDefinitions,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse extendedLocation,

            Outputs.ExtendedLocationResponse hybridAksExtendedLocation,

            string id,

            string location,

            Outputs.ManagedResourceGroupConfigurationResponse? managedResourceGroupConfiguration,

            double manualActionCount,

            string name,

            string networkFabricId,

            string provisioningState,

            Outputs.RuntimeProtectionConfigurationResponse? runtimeProtectionConfiguration,

            Outputs.ClusterSecretArchiveResponse? secretArchive,

            string supportExpiryDate,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.ClusterUpdateStrategyResponse? updateStrategy,

            ImmutableArray<string> workloadResourceIds)
        {
            AggregatorOrSingleRackDefinition = aggregatorOrSingleRackDefinition;
            AnalyticsWorkspaceId = analyticsWorkspaceId;
            AvailableUpgradeVersions = availableUpgradeVersions;
            ClusterCapacity = clusterCapacity;
            ClusterConnectionStatus = clusterConnectionStatus;
            ClusterExtendedLocation = clusterExtendedLocation;
            ClusterLocation = clusterLocation;
            ClusterManagerConnectionStatus = clusterManagerConnectionStatus;
            ClusterManagerId = clusterManagerId;
            ClusterServicePrincipal = clusterServicePrincipal;
            ClusterType = clusterType;
            ClusterVersion = clusterVersion;
            ComputeDeploymentThreshold = computeDeploymentThreshold;
            ComputeRackDefinitions = computeRackDefinitions;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            HybridAksExtendedLocation = hybridAksExtendedLocation;
            Id = id;
            Location = location;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ManualActionCount = manualActionCount;
            Name = name;
            NetworkFabricId = networkFabricId;
            ProvisioningState = provisioningState;
            RuntimeProtectionConfiguration = runtimeProtectionConfiguration;
            SecretArchive = secretArchive;
            SupportExpiryDate = supportExpiryDate;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            UpdateStrategy = updateStrategy;
            WorkloadResourceIds = workloadResourceIds;
        }
    }
}
