// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    public static class GetKubernetesClusterFeature
    {
        /// <summary>
        /// Get properties of the provided the Kubernetes cluster feature.
        /// Azure REST API version: 2024-06-01-preview.
        /// 
        /// Other available API versions: 2024-07-01.
        /// </summary>
        public static Task<GetKubernetesClusterFeatureResult> InvokeAsync(GetKubernetesClusterFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesClusterFeatureResult>("azure-native:networkcloud:getKubernetesClusterFeature", args ?? new GetKubernetesClusterFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided the Kubernetes cluster feature.
        /// Azure REST API version: 2024-06-01-preview.
        /// 
        /// Other available API versions: 2024-07-01.
        /// </summary>
        public static Output<GetKubernetesClusterFeatureResult> Invoke(GetKubernetesClusterFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesClusterFeatureResult>("azure-native:networkcloud:getKubernetesClusterFeature", args ?? new GetKubernetesClusterFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesClusterFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the feature.
        /// </summary>
        [Input("featureName", required: true)]
        public string FeatureName { get; set; } = null!;

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public string KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetKubernetesClusterFeatureArgs()
        {
        }
        public static new GetKubernetesClusterFeatureArgs Empty => new GetKubernetesClusterFeatureArgs();
    }

    public sealed class GetKubernetesClusterFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the feature.
        /// </summary>
        [Input("featureName", required: true)]
        public Input<string> FeatureName { get; set; } = null!;

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public Input<string> KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetKubernetesClusterFeatureInvokeArgs()
        {
        }
        public static new GetKubernetesClusterFeatureInvokeArgs Empty => new GetKubernetesClusterFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesClusterFeatureResult
    {
        /// <summary>
        /// The lifecycle indicator of the feature.
        /// </summary>
        public readonly string AvailabilityLifecycle;
        /// <summary>
        /// The detailed status of the feature.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message for the detailed status of the feature.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The configured options for the feature.
        /// </summary>
        public readonly ImmutableArray<Outputs.StringKeyValuePairResponse> Options;
        /// <summary>
        /// The provisioning state of the Kubernetes cluster feature.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle.
        /// </summary>
        public readonly string Required;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the feature.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetKubernetesClusterFeatureResult(
            string availabilityLifecycle,

            string detailedStatus,

            string detailedStatusMessage,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.StringKeyValuePairResponse> options,

            string provisioningState,

            string required,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            string version)
        {
            AvailabilityLifecycle = availabilityLifecycle;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            Id = id;
            Location = location;
            Name = name;
            Options = options;
            ProvisioningState = provisioningState;
            Required = required;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
