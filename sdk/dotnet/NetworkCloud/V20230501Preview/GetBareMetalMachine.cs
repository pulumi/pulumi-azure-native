// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20230501Preview
{
    public static class GetBareMetalMachine
    {
        /// <summary>
        /// Get properties of the provided bare metal machine.
        /// </summary>
        public static Task<GetBareMetalMachineResult> InvokeAsync(GetBareMetalMachineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBareMetalMachineResult>("azure-native:networkcloud/v20230501preview:getBareMetalMachine", args ?? new GetBareMetalMachineArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided bare metal machine.
        /// </summary>
        public static Output<GetBareMetalMachineResult> Invoke(GetBareMetalMachineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBareMetalMachineResult>("azure-native:networkcloud/v20230501preview:getBareMetalMachine", args ?? new GetBareMetalMachineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBareMetalMachineArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bare metal machine.
        /// </summary>
        [Input("bareMetalMachineName", required: true)]
        public string BareMetalMachineName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBareMetalMachineArgs()
        {
        }
        public static new GetBareMetalMachineArgs Empty => new GetBareMetalMachineArgs();
    }

    public sealed class GetBareMetalMachineInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bare metal machine.
        /// </summary>
        [Input("bareMetalMachineName", required: true)]
        public Input<string> BareMetalMachineName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBareMetalMachineInvokeArgs()
        {
        }
        public static new GetBareMetalMachineInvokeArgs Empty => new GetBareMetalMachineInvokeArgs();
    }


    [OutputType]
    public sealed class GetBareMetalMachineResult
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedResourceIds;
        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        public readonly string BmcConnectionString;
        /// <summary>
        /// The credentials of the baseboard management controller on this bare metal machine.
        /// </summary>
        public readonly Outputs.AdministrativeCredentialsResponse BmcCredentials;
        /// <summary>
        /// The MAC address of the BMC device.
        /// </summary>
        public readonly string BmcMacAddress;
        /// <summary>
        /// The MAC address of a NIC connected to the PXE network.
        /// </summary>
        public readonly string BootMacAddress;
        /// <summary>
        /// The resource ID of the cluster this bare metal machine is associated with.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The cordon status of the bare metal machine.
        /// </summary>
        public readonly string CordonStatus;
        /// <summary>
        /// The more detailed status of the bare metal machine.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// The hardware inventory, including information acquired from the model/sku information and from the ironic inspector.
        /// </summary>
        public readonly Outputs.HardwareInventoryResponse HardwareInventory;
        /// <summary>
        /// The details of the latest hardware validation performed for this bare metal machine.
        /// </summary>
        public readonly Outputs.HardwareValidationStatusResponse HardwareValidationStatus;
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have nodes hosted on this bare metal machine.
        /// </summary>
        public readonly ImmutableArray<string> HybridAksClustersAssociatedIds;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
        /// </summary>
        public readonly string KubernetesNodeName;
        /// <summary>
        /// The version of Kubernetes running on this machine.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The custom details provided by the customer.
        /// </summary>
        public readonly string MachineDetails;
        /// <summary>
        /// The OS-level hostname assigned to this machine.
        /// </summary>
        public readonly string MachineName;
        /// <summary>
        /// The unique internal identifier of the bare metal machine SKU.
        /// </summary>
        public readonly string MachineSkuId;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        public readonly string OamIpv4Address;
        /// <summary>
        /// The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        public readonly string OamIpv6Address;
        /// <summary>
        /// The image that is currently provisioned to the OS disk.
        /// </summary>
        public readonly string OsImage;
        /// <summary>
        /// The power state derived from the baseboard management controller.
        /// </summary>
        public readonly string PowerState;
        /// <summary>
        /// The provisioning state of the bare metal machine.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource ID of the rack where this bare metal machine resides.
        /// </summary>
        public readonly string RackId;
        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        public readonly double RackSlot;
        /// <summary>
        /// The indicator of whether the bare metal machine is ready to receive workloads.
        /// </summary>
        public readonly string ReadyState;
        /// <summary>
        /// The serial number of the bare metal machine.
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// The discovered value of the machine's service tag.
        /// </summary>
        public readonly string ServiceTag;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted on this bare metal machine.
        /// </summary>
        public readonly ImmutableArray<string> VirtualMachinesAssociatedIds;

        [OutputConstructor]
        private GetBareMetalMachineResult(
            ImmutableArray<string> associatedResourceIds,

            string bmcConnectionString,

            Outputs.AdministrativeCredentialsResponse bmcCredentials,

            string bmcMacAddress,

            string bootMacAddress,

            string clusterId,

            string cordonStatus,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse extendedLocation,

            Outputs.HardwareInventoryResponse hardwareInventory,

            Outputs.HardwareValidationStatusResponse hardwareValidationStatus,

            ImmutableArray<string> hybridAksClustersAssociatedIds,

            string id,

            string kubernetesNodeName,

            string kubernetesVersion,

            string location,

            string machineDetails,

            string machineName,

            string machineSkuId,

            string name,

            string oamIpv4Address,

            string oamIpv6Address,

            string osImage,

            string powerState,

            string provisioningState,

            string rackId,

            double rackSlot,

            string readyState,

            string serialNumber,

            string serviceTag,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> virtualMachinesAssociatedIds)
        {
            AssociatedResourceIds = associatedResourceIds;
            BmcConnectionString = bmcConnectionString;
            BmcCredentials = bmcCredentials;
            BmcMacAddress = bmcMacAddress;
            BootMacAddress = bootMacAddress;
            ClusterId = clusterId;
            CordonStatus = cordonStatus;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            HardwareInventory = hardwareInventory;
            HardwareValidationStatus = hardwareValidationStatus;
            HybridAksClustersAssociatedIds = hybridAksClustersAssociatedIds;
            Id = id;
            KubernetesNodeName = kubernetesNodeName;
            KubernetesVersion = kubernetesVersion;
            Location = location;
            MachineDetails = machineDetails;
            MachineName = machineName;
            MachineSkuId = machineSkuId;
            Name = name;
            OamIpv4Address = oamIpv4Address;
            OamIpv6Address = oamIpv6Address;
            OsImage = osImage;
            PowerState = powerState;
            ProvisioningState = provisioningState;
            RackId = rackId;
            RackSlot = rackSlot;
            ReadyState = readyState;
            SerialNumber = serialNumber;
            ServiceTag = serviceTag;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualMachinesAssociatedIds = virtualMachinesAssociatedIds;
        }
    }
}
