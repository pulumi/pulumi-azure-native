// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20230501Preview
{
    public static class GetStorageAppliance
    {
        /// <summary>
        /// Get properties of the provided storage appliance.
        /// </summary>
        public static Task<GetStorageApplianceResult> InvokeAsync(GetStorageApplianceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageApplianceResult>("azure-native:networkcloud/v20230501preview:getStorageAppliance", args ?? new GetStorageApplianceArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided storage appliance.
        /// </summary>
        public static Output<GetStorageApplianceResult> Invoke(GetStorageApplianceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageApplianceResult>("azure-native:networkcloud/v20230501preview:getStorageAppliance", args ?? new GetStorageApplianceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageApplianceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the storage appliance.
        /// </summary>
        [Input("storageApplianceName", required: true)]
        public string StorageApplianceName { get; set; } = null!;

        public GetStorageApplianceArgs()
        {
        }
        public static new GetStorageApplianceArgs Empty => new GetStorageApplianceArgs();
    }

    public sealed class GetStorageApplianceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the storage appliance.
        /// </summary>
        [Input("storageApplianceName", required: true)]
        public Input<string> StorageApplianceName { get; set; } = null!;

        public GetStorageApplianceInvokeArgs()
        {
        }
        public static new GetStorageApplianceInvokeArgs Empty => new GetStorageApplianceInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageApplianceResult
    {
        /// <summary>
        /// The credentials of the administrative interface on this storage appliance.
        /// </summary>
        public readonly Outputs.AdministrativeCredentialsResponse AdministratorCredentials;
        /// <summary>
        /// The total capacity of the storage appliance.
        /// </summary>
        public readonly double Capacity;
        /// <summary>
        /// The amount of storage consumed.
        /// </summary>
        public readonly double CapacityUsed;
        /// <summary>
        /// The resource ID of the cluster this storage appliance is associated with.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The detailed status of the storage appliance.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The endpoint for the management interface of the storage appliance.
        /// </summary>
        public readonly string ManagementIpv4Address;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the storage appliance.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The resource ID of the rack where this storage appliance resides.
        /// </summary>
        public readonly string RackId;
        /// <summary>
        /// The slot the storage appliance is in the rack based on the BOM configuration.
        /// </summary>
        public readonly double RackSlot;
        /// <summary>
        /// The indicator of whether the storage appliance supports remote vendor management.
        /// </summary>
        public readonly string RemoteVendorManagementFeature;
        /// <summary>
        /// The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported feature.
        /// </summary>
        public readonly string RemoteVendorManagementStatus;
        /// <summary>
        /// The serial number for the storage appliance.
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// The SKU for the storage appliance.
        /// </summary>
        public readonly string StorageApplianceSkuId;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageApplianceResult(
            Outputs.AdministrativeCredentialsResponse administratorCredentials,

            double capacity,

            double capacityUsed,

            string clusterId,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse extendedLocation,

            string id,

            string location,

            string managementIpv4Address,

            string name,

            string provisioningState,

            string rackId,

            double rackSlot,

            string remoteVendorManagementFeature,

            string remoteVendorManagementStatus,

            string serialNumber,

            string storageApplianceSkuId,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AdministratorCredentials = administratorCredentials;
            Capacity = capacity;
            CapacityUsed = capacityUsed;
            ClusterId = clusterId;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            Id = id;
            Location = location;
            ManagementIpv4Address = managementIpv4Address;
            Name = name;
            ProvisioningState = provisioningState;
            RackId = rackId;
            RackSlot = rackSlot;
            RemoteVendorManagementFeature = remoteVendorManagementFeature;
            RemoteVendorManagementStatus = remoteVendorManagementStatus;
            SerialNumber = serialNumber;
            StorageApplianceSkuId = storageApplianceSkuId;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
