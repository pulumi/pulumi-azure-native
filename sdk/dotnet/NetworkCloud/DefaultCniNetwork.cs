// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    /// <summary>
    /// API Version: 2022-12-12-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:networkcloud:DefaultCniNetwork")]
    public partial class DefaultCniNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID of the Network Cloud cluster this default CNI network is associated with.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The autonomous system number that the fabric expects to peer with, derived from the associated L3 isolation domain.
        /// </summary>
        [Output("cniAsNumber")]
        public Output<double> CniAsNumber { get; private set; } = null!;

        /// <summary>
        /// The Calico BGP configuration.
        /// </summary>
        [Output("cniBgpConfiguration")]
        public Output<Outputs.CniBgpConfigurationResponse?> CniBgpConfiguration { get; private set; } = null!;

        /// <summary>
        /// The more detailed status of the default CNI network.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The L3 isolation fabric BGP peering connectivity information necessary for BGP peering the Hybrid AKS Cluster with the switch fabric.
        /// </summary>
        [Output("fabricBgpPeers")]
        public Output<ImmutableArray<Outputs.BgpPeerResponse>> FabricBgpPeers { get; private set; } = null!;

        /// <summary>
        /// The list of Hybrid AKS cluster resource ID(s) that are associated with this default CNI network.
        /// </summary>
        [Output("hybridAksClustersAssociatedIds")]
        public Output<ImmutableArray<string>> HybridAksClustersAssociatedIds { get; private set; } = null!;

        /// <summary>
        /// The name of the interface that will be present in the virtual machine to represent this network.
        /// </summary>
        [Output("interfaceName")]
        public Output<string> InterfaceName { get; private set; } = null!;

        /// <summary>
        /// The type of the IP address allocation.
        /// </summary>
        [Output("ipAllocationType")]
        public Output<string?> IpAllocationType { get; private set; } = null!;

        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        [Output("ipv4ConnectedPrefix")]
        public Output<string?> Ipv4ConnectedPrefix { get; private set; } = null!;

        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        [Output("ipv6ConnectedPrefix")]
        public Output<string?> Ipv6ConnectedPrefix { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        [Output("l3IsolationDomainId")]
        public Output<string> L3IsolationDomainId { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the default CNI network.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        [Output("vlan")]
        public Output<double> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultCniNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultCniNetwork(string name, DefaultCniNetworkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:DefaultCniNetwork", name, args ?? new DefaultCniNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultCniNetwork(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud:DefaultCniNetwork", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20221212preview:DefaultCniNetwork"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultCniNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultCniNetwork Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DefaultCniNetwork(name, id, options);
        }
    }

    public sealed class DefaultCniNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Calico BGP configuration.
        /// </summary>
        [Input("cniBgpConfiguration")]
        public Input<Inputs.CniBgpConfigurationArgs>? CniBgpConfiguration { get; set; }

        /// <summary>
        /// The name of the default CNI network.
        /// </summary>
        [Input("defaultCniNetworkName")]
        public Input<string>? DefaultCniNetworkName { get; set; }

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// The type of the IP address allocation.
        /// </summary>
        [Input("ipAllocationType")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.IpAllocationType>? IpAllocationType { get; set; }

        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        [Input("ipv4ConnectedPrefix")]
        public Input<string>? Ipv4ConnectedPrefix { get; set; }

        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        [Input("ipv6ConnectedPrefix")]
        public Input<string>? Ipv6ConnectedPrefix { get; set; }

        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        [Input("l3IsolationDomainId", required: true)]
        public Input<string> L3IsolationDomainId { get; set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        [Input("vlan", required: true)]
        public Input<double> Vlan { get; set; } = null!;

        public DefaultCniNetworkArgs()
        {
            IpAllocationType = "DualStack";
        }
        public static new DefaultCniNetworkArgs Empty => new DefaultCniNetworkArgs();
    }
}
