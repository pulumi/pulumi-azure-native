// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20230701
{
    [AzureNativeResourceType("azure-native:networkcloud/v20230701:BareMetalMachineKeySet")]
    public partial class BareMetalMachineKeySet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
        /// </summary>
        [Output("azureGroupId")]
        public Output<string> AzureGroupId { get; private set; } = null!;

        /// <summary>
        /// The more detailed status of the key set.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The date and time after which the users in this key set will be removed from the bare metal machines.
        /// </summary>
        [Output("expiration")]
        public Output<string> Expiration { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users.
        /// </summary>
        [Output("jumpHostsAllowed")]
        public Output<ImmutableArray<string>> JumpHostsAllowed { get; private set; } = null!;

        /// <summary>
        /// The last time this key set was validated.
        /// </summary>
        [Output("lastValidation")]
        public Output<string> LastValidation { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the group that users will be assigned to on the operating system of the machines.
        /// </summary>
        [Output("osGroupName")]
        public Output<string?> OsGroupName { get; private set; } = null!;

        /// <summary>
        /// The access level allowed for the users in this key set.
        /// </summary>
        [Output("privilegeLevel")]
        public Output<string> PrivilegeLevel { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the bare metal machine key set.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The unique list of permitted users.
        /// </summary>
        [Output("userList")]
        public Output<ImmutableArray<Outputs.KeySetUserResponse>> UserList { get; private set; } = null!;

        /// <summary>
        /// The status evaluation of each user.
        /// </summary>
        [Output("userListStatus")]
        public Output<ImmutableArray<Outputs.KeySetUserStatusResponse>> UserListStatus { get; private set; } = null!;


        /// <summary>
        /// Create a BareMetalMachineKeySet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BareMetalMachineKeySet(string name, BareMetalMachineKeySetArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20230701:BareMetalMachineKeySet", name, args ?? new BareMetalMachineKeySetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BareMetalMachineKeySet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20230701:BareMetalMachineKeySet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud:BareMetalMachineKeySet" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230501preview:BareMetalMachineKeySet" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20231001preview:BareMetalMachineKeySet" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BareMetalMachineKeySet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BareMetalMachineKeySet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BareMetalMachineKeySet(name, id, options);
        }
    }

    public sealed class BareMetalMachineKeySetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
        /// </summary>
        [Input("azureGroupId", required: true)]
        public Input<string> AzureGroupId { get; set; } = null!;

        /// <summary>
        /// The name of the bare metal machine key set.
        /// </summary>
        [Input("bareMetalMachineKeySetName")]
        public Input<string>? BareMetalMachineKeySetName { get; set; }

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The date and time after which the users in this key set will be removed from the bare metal machines.
        /// </summary>
        [Input("expiration", required: true)]
        public Input<string> Expiration { get; set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        [Input("jumpHostsAllowed", required: true)]
        private InputList<string>? _jumpHostsAllowed;

        /// <summary>
        /// The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users.
        /// </summary>
        public InputList<string> JumpHostsAllowed
        {
            get => _jumpHostsAllowed ?? (_jumpHostsAllowed = new InputList<string>());
            set => _jumpHostsAllowed = value;
        }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the group that users will be assigned to on the operating system of the machines.
        /// </summary>
        [Input("osGroupName")]
        public Input<string>? OsGroupName { get; set; }

        /// <summary>
        /// The access level allowed for the users in this key set.
        /// </summary>
        [Input("privilegeLevel", required: true)]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20230701.BareMetalMachineKeySetPrivilegeLevel> PrivilegeLevel { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("userList", required: true)]
        private InputList<Inputs.KeySetUserArgs>? _userList;

        /// <summary>
        /// The unique list of permitted users.
        /// </summary>
        public InputList<Inputs.KeySetUserArgs> UserList
        {
            get => _userList ?? (_userList = new InputList<Inputs.KeySetUserArgs>());
            set => _userList = value;
        }

        public BareMetalMachineKeySetArgs()
        {
        }
        public static new BareMetalMachineKeySetArgs Empty => new BareMetalMachineKeySetArgs();
    }
}
