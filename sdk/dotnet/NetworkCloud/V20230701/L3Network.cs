// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20230701
{
    [AzureNativeResourceType("azure-native:networkcloud/v20230701:L3Network")]
    public partial class L3Network : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        [Output("associatedResourceIds")]
        public Output<ImmutableArray<string>> AssociatedResourceIds { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Network Cloud cluster this L3 network is associated with.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The more detailed status of the L3 network.
        /// </summary>
        [Output("detailedStatus")]
        public Output<string> DetailedStatus { get; private set; } = null!;

        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        [Output("detailedStatusMessage")]
        public Output<string> DetailedStatusMessage { get; private set; } = null!;

        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.
        /// </summary>
        [Output("hybridAksClustersAssociatedIds")]
        public Output<ImmutableArray<string>> HybridAksClustersAssociatedIds { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
        /// </summary>
        [Output("hybridAksIpamEnabled")]
        public Output<string?> HybridAksIpamEnabled { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
        /// </summary>
        [Output("hybridAksPluginType")]
        public Output<string?> HybridAksPluginType { get; private set; } = null!;

        /// <summary>
        /// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
        /// </summary>
        [Output("interfaceName")]
        public Output<string?> InterfaceName { get; private set; } = null!;

        /// <summary>
        /// The type of the IP address allocation, defaulted to "DualStack".
        /// </summary>
        [Output("ipAllocationType")]
        public Output<string?> IpAllocationType { get; private set; } = null!;

        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        [Output("ipv4ConnectedPrefix")]
        public Output<string?> Ipv4ConnectedPrefix { get; private set; } = null!;

        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        [Output("ipv6ConnectedPrefix")]
        public Output<string?> Ipv6ConnectedPrefix { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        [Output("l3IsolationDomainId")]
        public Output<string> L3IsolationDomainId { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the L3 network.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.
        /// </summary>
        [Output("virtualMachinesAssociatedIds")]
        public Output<ImmutableArray<string>> VirtualMachinesAssociatedIds { get; private set; } = null!;

        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        [Output("vlan")]
        public Output<double> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a L3Network resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public L3Network(string name, L3NetworkArgs args, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20230701:L3Network", name, args ?? new L3NetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private L3Network(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:networkcloud/v20230701:L3Network", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud:L3Network" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20230501preview:L3Network" },
                    new global::Pulumi.Alias { Type = "azure-native:networkcloud/v20231001preview:L3Network" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing L3Network resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static L3Network Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new L3Network(name, id, options);
        }
    }

    public sealed class L3NetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        [Input("extendedLocation", required: true)]
        public Input<Inputs.ExtendedLocationArgs> ExtendedLocation { get; set; } = null!;

        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
        /// </summary>
        [Input("hybridAksIpamEnabled")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20230701.HybridAksIpamEnabled>? HybridAksIpamEnabled { get; set; }

        /// <summary>
        /// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
        /// </summary>
        [Input("hybridAksPluginType")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20230701.HybridAksPluginType>? HybridAksPluginType { get; set; }

        /// <summary>
        /// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
        /// </summary>
        [Input("interfaceName")]
        public Input<string>? InterfaceName { get; set; }

        /// <summary>
        /// The type of the IP address allocation, defaulted to "DualStack".
        /// </summary>
        [Input("ipAllocationType")]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20230701.IpAllocationType>? IpAllocationType { get; set; }

        /// <summary>
        /// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV4 or DualStack.
        /// </summary>
        [Input("ipv4ConnectedPrefix")]
        public Input<string>? Ipv4ConnectedPrefix { get; set; }

        /// <summary>
        /// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
        /// is IPV6 or DualStack.
        /// </summary>
        [Input("ipv6ConnectedPrefix")]
        public Input<string>? Ipv6ConnectedPrefix { get; set; }

        /// <summary>
        /// The resource ID of the Network Fabric l3IsolationDomain.
        /// </summary>
        [Input("l3IsolationDomainId", required: true)]
        public Input<string> L3IsolationDomainId { get; set; } = null!;

        /// <summary>
        /// The name of the L3 network.
        /// </summary>
        [Input("l3NetworkName")]
        public Input<string>? L3NetworkName { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VLAN from the l3IsolationDomain that is used for this network.
        /// </summary>
        [Input("vlan", required: true)]
        public Input<double> Vlan { get; set; } = null!;

        public L3NetworkArgs()
        {
            HybridAksIpamEnabled = "True";
            HybridAksPluginType = "SRIOV";
            IpAllocationType = "DualStack";
        }
        public static new L3NetworkArgs Empty => new L3NetworkArgs();
    }
}
