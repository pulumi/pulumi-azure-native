// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20230701
{
    public static class GetBareMetalMachineKeySet
    {
        /// <summary>
        /// Get bare metal machine key set of the provided cluster.
        /// </summary>
        public static Task<GetBareMetalMachineKeySetResult> InvokeAsync(GetBareMetalMachineKeySetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBareMetalMachineKeySetResult>("azure-native:networkcloud/v20230701:getBareMetalMachineKeySet", args ?? new GetBareMetalMachineKeySetArgs(), options.WithDefaults());

        /// <summary>
        /// Get bare metal machine key set of the provided cluster.
        /// </summary>
        public static Output<GetBareMetalMachineKeySetResult> Invoke(GetBareMetalMachineKeySetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBareMetalMachineKeySetResult>("azure-native:networkcloud/v20230701:getBareMetalMachineKeySet", args ?? new GetBareMetalMachineKeySetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBareMetalMachineKeySetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bare metal machine key set.
        /// </summary>
        [Input("bareMetalMachineKeySetName", required: true)]
        public string BareMetalMachineKeySetName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBareMetalMachineKeySetArgs()
        {
        }
        public static new GetBareMetalMachineKeySetArgs Empty => new GetBareMetalMachineKeySetArgs();
    }

    public sealed class GetBareMetalMachineKeySetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bare metal machine key set.
        /// </summary>
        [Input("bareMetalMachineKeySetName", required: true)]
        public Input<string> BareMetalMachineKeySetName { get; set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBareMetalMachineKeySetInvokeArgs()
        {
        }
        public static new GetBareMetalMachineKeySetInvokeArgs Empty => new GetBareMetalMachineKeySetInvokeArgs();
    }


    [OutputType]
    public sealed class GetBareMetalMachineKeySetResult
    {
        /// <summary>
        /// The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
        /// </summary>
        public readonly string AzureGroupId;
        /// <summary>
        /// The more detailed status of the key set.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The date and time after which the users in this key set will be removed from the bare metal machines.
        /// </summary>
        public readonly string Expiration;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users.
        /// </summary>
        public readonly ImmutableArray<string> JumpHostsAllowed;
        /// <summary>
        /// The last time this key set was validated.
        /// </summary>
        public readonly string LastValidation;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the group that users will be assigned to on the operating system of the machines.
        /// </summary>
        public readonly string? OsGroupName;
        /// <summary>
        /// The access level allowed for the users in this key set.
        /// </summary>
        public readonly string PrivilegeLevel;
        /// <summary>
        /// The provisioning state of the bare metal machine key set.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The unique list of permitted users.
        /// </summary>
        public readonly ImmutableArray<Outputs.KeySetUserResponse> UserList;
        /// <summary>
        /// The status evaluation of each user.
        /// </summary>
        public readonly ImmutableArray<Outputs.KeySetUserStatusResponse> UserListStatus;

        [OutputConstructor]
        private GetBareMetalMachineKeySetResult(
            string azureGroupId,

            string detailedStatus,

            string detailedStatusMessage,

            string expiration,

            Outputs.ExtendedLocationResponse extendedLocation,

            string id,

            ImmutableArray<string> jumpHostsAllowed,

            string lastValidation,

            string location,

            string name,

            string? osGroupName,

            string privilegeLevel,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.KeySetUserResponse> userList,

            ImmutableArray<Outputs.KeySetUserStatusResponse> userListStatus)
        {
            AzureGroupId = azureGroupId;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            Expiration = expiration;
            ExtendedLocation = extendedLocation;
            Id = id;
            JumpHostsAllowed = jumpHostsAllowed;
            LastValidation = lastValidation;
            Location = location;
            Name = name;
            OsGroupName = osGroupName;
            PrivilegeLevel = privilegeLevel;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            UserList = userList;
            UserListStatus = userListStatus;
        }
    }
}
