// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.Outputs
{

    [OutputType]
    public sealed class CniBgpConfigurationResponse
    {
        /// <summary>
        /// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
        /// </summary>
        public readonly ImmutableArray<Outputs.BgpPeerResponse> BgpPeers;
        /// <summary>
        /// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
        /// communities that should be associated with that prefix when it is announced.
        /// </summary>
        public readonly ImmutableArray<Outputs.CommunityAdvertisementResponse> CommunityAdvertisements;
        /// <summary>
        /// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
        /// </summary>
        public readonly ImmutableArray<string> ServiceExternalPrefixes;
        /// <summary>
        /// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
        /// are within one of these blocks.
        /// </summary>
        public readonly ImmutableArray<string> ServiceLoadBalancerPrefixes;

        [OutputConstructor]
        private CniBgpConfigurationResponse(
            ImmutableArray<Outputs.BgpPeerResponse> bgpPeers,

            ImmutableArray<Outputs.CommunityAdvertisementResponse> communityAdvertisements,

            ImmutableArray<string> serviceExternalPrefixes,

            ImmutableArray<string> serviceLoadBalancerPrefixes)
        {
            BgpPeers = bgpPeers;
            CommunityAdvertisements = communityAdvertisements;
            ServiceExternalPrefixes = serviceExternalPrefixes;
            ServiceLoadBalancerPrefixes = serviceLoadBalancerPrefixes;
        }
    }
}
