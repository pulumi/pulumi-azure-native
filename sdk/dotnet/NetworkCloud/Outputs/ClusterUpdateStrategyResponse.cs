// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.Outputs
{

    [OutputType]
    public sealed class ClusterUpdateStrategyResponse
    {
        /// <summary>
        /// The maximum number of worker nodes that can be offline within the increment of update, e.g., rack-by-rack.
        /// Limited by the maximum number of machines in the increment. Defaults to the whole increment size.
        /// </summary>
        public readonly double? MaxUnavailable;
        /// <summary>
        /// The mode of operation for runtime protection.
        /// </summary>
        public readonly string StrategyType;
        /// <summary>
        /// Selection of how the threshold should be evaluated.
        /// </summary>
        public readonly string ThresholdType;
        /// <summary>
        /// The numeric threshold value.
        /// </summary>
        public readonly double ThresholdValue;
        /// <summary>
        /// The time to wait between the increments of update defined by the strategy.
        /// </summary>
        public readonly double? WaitTimeMinutes;

        [OutputConstructor]
        private ClusterUpdateStrategyResponse(
            double? maxUnavailable,

            string strategyType,

            string thresholdType,

            double thresholdValue,

            double? waitTimeMinutes)
        {
            MaxUnavailable = maxUnavailable;
            StrategyType = strategyType;
            ThresholdType = thresholdType;
            ThresholdValue = thresholdValue;
            WaitTimeMinutes = waitTimeMinutes;
        }
    }
}
