// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240701.Outputs
{

    [OutputType]
    public sealed class AgentPoolUpgradeSettingsResponse
    {
        /// <summary>
        /// The maximum time in seconds that is allowed for a node drain to complete before proceeding with the upgrade of the agent pool. If not specified during creation, a value of 1800 seconds is used.
        /// </summary>
        public readonly double? DrainTimeout;
        /// <summary>
        /// The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified during creation, a value of 1 is used. One of MaxSurge and MaxUnavailable must be greater than 0.
        /// </summary>
        public readonly string? MaxSurge;
        /// <summary>
        /// The maximum number or percentage of nodes that can be unavailable during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified during creation, a value of 0 is used. One of MaxSurge and MaxUnavailable must be greater than 0.
        /// </summary>
        public readonly string? MaxUnavailable;

        [OutputConstructor]
        private AgentPoolUpgradeSettingsResponse(
            double? drainTimeout,

            string? maxSurge,

            string? maxUnavailable)
        {
            DrainTimeout = drainTimeout;
            MaxSurge = maxSurge;
            MaxUnavailable = maxUnavailable;
        }
    }
}
