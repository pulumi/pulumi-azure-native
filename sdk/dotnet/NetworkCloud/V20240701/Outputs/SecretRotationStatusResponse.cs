// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240701.Outputs
{

    [OutputType]
    public sealed class SecretRotationStatusResponse
    {
        /// <summary>
        /// The maximum number of days the secret may be used before it must be changed.
        /// </summary>
        public readonly double ExpirePeriodDays;
        /// <summary>
        /// The date and time when the secret was last changed.
        /// </summary>
        public readonly string LastRotationTime;
        /// <summary>
        /// The number of days a secret exists before rotations will be attempted.
        /// </summary>
        public readonly double RotationPeriodDays;
        /// <summary>
        /// The reference to the secret in a key vault.
        /// </summary>
        public readonly Outputs.SecretArchiveReferenceResponse SecretArchiveReference;
        /// <summary>
        /// The type name used to identify the purpose of the secret.
        /// </summary>
        public readonly string SecretType;

        [OutputConstructor]
        private SecretRotationStatusResponse(
            double expirePeriodDays,

            string lastRotationTime,

            double rotationPeriodDays,

            Outputs.SecretArchiveReferenceResponse secretArchiveReference,

            string secretType)
        {
            ExpirePeriodDays = expirePeriodDays;
            LastRotationTime = lastRotationTime;
            RotationPeriodDays = rotationPeriodDays;
            SecretArchiveReference = secretArchiveReference;
            SecretType = secretType;
        }
    }
}
