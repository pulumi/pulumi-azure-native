// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20240701
{
    public static class GetAgentPool
    {
        /// <summary>
        /// Get properties of the provided Kubernetes cluster agent pool.
        /// </summary>
        public static Task<GetAgentPoolResult> InvokeAsync(GetAgentPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentPoolResult>("azure-native:networkcloud/v20240701:getAgentPool", args ?? new GetAgentPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided Kubernetes cluster agent pool.
        /// </summary>
        public static Output<GetAgentPoolResult> Invoke(GetAgentPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentPoolResult>("azure-native:networkcloud/v20240701:getAgentPool", args ?? new GetAgentPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kubernetes cluster agent pool.
        /// </summary>
        [Input("agentPoolName", required: true)]
        public string AgentPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public string KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAgentPoolArgs()
        {
        }
        public static new GetAgentPoolArgs Empty => new GetAgentPoolArgs();
    }

    public sealed class GetAgentPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kubernetes cluster agent pool.
        /// </summary>
        [Input("agentPoolName", required: true)]
        public Input<string> AgentPoolName { get; set; } = null!;

        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public Input<string> KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAgentPoolInvokeArgs()
        {
        }
        public static new GetAgentPoolInvokeArgs Empty => new GetAgentPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentPoolResult
    {
        /// <summary>
        /// The administrator credentials to be used for the nodes in this agent pool.
        /// </summary>
        public readonly Outputs.AdministratorConfigurationResponse? AdministratorConfiguration;
        /// <summary>
        /// The configurations that will be applied to each agent in this agent pool.
        /// </summary>
        public readonly Outputs.AgentOptionsResponse? AgentOptions;
        /// <summary>
        /// The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster.
        /// </summary>
        public readonly Outputs.AttachedNetworkConfigurationResponse? AttachedNetworkConfiguration;
        /// <summary>
        /// The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// The number of virtual machines that use this configuration.
        /// </summary>
        public readonly double Count;
        /// <summary>
        /// The current status of the agent pool.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse? ExtendedLocation;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Kubernetes version running in this agent pool.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// The labels applied to the nodes in this agent pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.KubernetesLabelResponse> Labels;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the agent pool.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The taints applied to the nodes in this agent pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.KubernetesLabelResponse> Taints;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The configuration of the agent pool.
        /// </summary>
        public readonly Outputs.AgentPoolUpgradeSettingsResponse? UpgradeSettings;
        /// <summary>
        /// The name of the VM SKU that determines the size of resources allocated for node VMs.
        /// </summary>
        public readonly string VmSkuName;

        [OutputConstructor]
        private GetAgentPoolResult(
            Outputs.AdministratorConfigurationResponse? administratorConfiguration,

            Outputs.AgentOptionsResponse? agentOptions,

            Outputs.AttachedNetworkConfigurationResponse? attachedNetworkConfiguration,

            ImmutableArray<string> availabilityZones,

            double count,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse? extendedLocation,

            string id,

            string kubernetesVersion,

            ImmutableArray<Outputs.KubernetesLabelResponse> labels,

            string location,

            string mode,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<Outputs.KubernetesLabelResponse> taints,

            string type,

            Outputs.AgentPoolUpgradeSettingsResponse? upgradeSettings,

            string vmSkuName)
        {
            AdministratorConfiguration = administratorConfiguration;
            AgentOptions = agentOptions;
            AttachedNetworkConfiguration = attachedNetworkConfiguration;
            AvailabilityZones = availabilityZones;
            Count = count;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            Id = id;
            KubernetesVersion = kubernetesVersion;
            Labels = labels;
            Location = location;
            Mode = mode;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Taints = taints;
            Type = type;
            UpgradeSettings = upgradeSettings;
            VmSkuName = vmSkuName;
        }
    }
}
