// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud
{
    public static class GetKubernetesCluster
    {
        /// <summary>
        /// Get properties of the provided the Kubernetes cluster.
        /// Azure REST API version: 2023-10-01-preview.
        /// 
        /// Other available API versions: 2023-07-01.
        /// </summary>
        public static Task<GetKubernetesClusterResult> InvokeAsync(GetKubernetesClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesClusterResult>("azure-native:networkcloud:getKubernetesCluster", args ?? new GetKubernetesClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided the Kubernetes cluster.
        /// Azure REST API version: 2023-10-01-preview.
        /// 
        /// Other available API versions: 2023-07-01.
        /// </summary>
        public static Output<GetKubernetesClusterResult> Invoke(GetKubernetesClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesClusterResult>("azure-native:networkcloud:getKubernetesCluster", args ?? new GetKubernetesClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public string KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetKubernetesClusterArgs()
        {
        }
        public static new GetKubernetesClusterArgs Empty => new GetKubernetesClusterArgs();
    }

    public sealed class GetKubernetesClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kubernetes cluster.
        /// </summary>
        [Input("kubernetesClusterName", required: true)]
        public Input<string> KubernetesClusterName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetKubernetesClusterInvokeArgs()
        {
        }
        public static new GetKubernetesClusterInvokeArgs Empty => new GetKubernetesClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesClusterResult
    {
        /// <summary>
        /// The Azure Active Directory Integration properties.
        /// </summary>
        public readonly Outputs.AadConfigurationResponse? AadConfiguration;
        /// <summary>
        /// The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their own values.
        /// </summary>
        public readonly Outputs.AdministratorConfigurationResponse? AdministratorConfiguration;
        /// <summary>
        /// The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent pools.
        /// </summary>
        public readonly ImmutableArray<string> AttachedNetworkIds;
        /// <summary>
        /// The list of versions that this Kubernetes cluster can be upgraded to.
        /// </summary>
        public readonly ImmutableArray<Outputs.AvailableUpgradeResponse> AvailableUpgrades;
        /// <summary>
        /// The resource ID of the Network Cloud cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The resource ID of the connected cluster set up when this Kubernetes cluster is created.
        /// </summary>
        public readonly string ConnectedClusterId;
        /// <summary>
        /// The current running version of Kubernetes on the control plane.
        /// </summary>
        public readonly string ControlPlaneKubernetesVersion;
        /// <summary>
        /// The defining characteristics of the control plane for this Kubernetes Cluster.
        /// </summary>
        public readonly Outputs.ControlPlaneNodeConfigurationResponse ControlPlaneNodeConfiguration;
        /// <summary>
        /// The current status of the Kubernetes cluster.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// The current feature settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.FeatureStatusResponse> FeatureStatuses;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.InitialAgentPoolConfigurationResponse> InitialAgentPoolConfigurations;
        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        public readonly Outputs.ManagedResourceGroupConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
        /// </summary>
        public readonly Outputs.NetworkConfigurationResponse NetworkConfiguration;
        /// <summary>
        /// The details of the nodes in this cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.KubernetesClusterNodeResponse> Nodes;
        /// <summary>
        /// The provisioning state of the Kubernetes cluster resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetKubernetesClusterResult(
            Outputs.AadConfigurationResponse? aadConfiguration,

            Outputs.AdministratorConfigurationResponse? administratorConfiguration,

            ImmutableArray<string> attachedNetworkIds,

            ImmutableArray<Outputs.AvailableUpgradeResponse> availableUpgrades,

            string clusterId,

            string connectedClusterId,

            string controlPlaneKubernetesVersion,

            Outputs.ControlPlaneNodeConfigurationResponse controlPlaneNodeConfiguration,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse extendedLocation,

            ImmutableArray<Outputs.FeatureStatusResponse> featureStatuses,

            string id,

            ImmutableArray<Outputs.InitialAgentPoolConfigurationResponse> initialAgentPoolConfigurations,

            string kubernetesVersion,

            string location,

            Outputs.ManagedResourceGroupConfigurationResponse? managedResourceGroupConfiguration,

            string name,

            Outputs.NetworkConfigurationResponse networkConfiguration,

            ImmutableArray<Outputs.KubernetesClusterNodeResponse> nodes,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AadConfiguration = aadConfiguration;
            AdministratorConfiguration = administratorConfiguration;
            AttachedNetworkIds = attachedNetworkIds;
            AvailableUpgrades = availableUpgrades;
            ClusterId = clusterId;
            ConnectedClusterId = connectedClusterId;
            ControlPlaneKubernetesVersion = controlPlaneKubernetesVersion;
            ControlPlaneNodeConfiguration = controlPlaneNodeConfiguration;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            ExtendedLocation = extendedLocation;
            FeatureStatuses = featureStatuses;
            Id = id;
            InitialAgentPoolConfigurations = initialAgentPoolConfigurations;
            KubernetesVersion = kubernetesVersion;
            Location = location;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            Name = name;
            NetworkConfiguration = networkConfiguration;
            Nodes = nodes;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
