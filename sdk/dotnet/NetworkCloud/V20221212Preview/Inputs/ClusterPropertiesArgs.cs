// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20221212Preview.Inputs
{

    public sealed class ClusterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("aggregatorOrSingleRackDefinition", required: true)]
        public Input<Inputs.RackDefinitionArgs> AggregatorOrSingleRackDefinition { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        [Input("analyticsWorkspaceId", required: true)]
        public Input<string> AnalyticsWorkspaceId { get; set; } = null!;

        [Input("clusterCapacity")]
        public Input<Inputs.ClusterCapacityArgs>? ClusterCapacity { get; set; }

        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        [Input("clusterLocation")]
        public Input<string>? ClusterLocation { get; set; }

        [Input("clusterServicePrincipal")]
        public Input<Inputs.ServicePrincipalInformationArgs>? ClusterServicePrincipal { get; set; }

        /// <summary>
        /// The type of rack configuration for the cluster.
        /// </summary>
        [Input("clusterType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.NetworkCloud.V20221212Preview.ClusterType> ClusterType { get; set; } = null!;

        /// <summary>
        /// The current runtime version of the cluster.
        /// </summary>
        [Input("clusterVersion", required: true)]
        public Input<string> ClusterVersion { get; set; } = null!;

        [Input("computeDeploymentThreshold")]
        public Input<Inputs.ValidationThresholdArgs>? ComputeDeploymentThreshold { get; set; }

        [Input("computeRackDefinitions")]
        private InputList<Inputs.RackDefinitionArgs>? _computeRackDefinitions;

        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        public InputList<Inputs.RackDefinitionArgs> ComputeRackDefinitions
        {
            get => _computeRackDefinitions ?? (_computeRackDefinitions = new InputList<Inputs.RackDefinitionArgs>());
            set => _computeRackDefinitions = value;
        }

        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        [Input("managedResourceGroupConfiguration")]
        public Input<Inputs.ManagedResourceGroupConfigurationArgs>? ManagedResourceGroupConfiguration { get; set; }

        /// <summary>
        /// The resource ID of the Network Fabric associated with the cluster.
        /// </summary>
        [Input("networkFabricId", required: true)]
        public Input<string> NetworkFabricId { get; set; } = null!;

        public ClusterPropertiesArgs()
        {
        }
        public static new ClusterPropertiesArgs Empty => new ClusterPropertiesArgs();
    }
}
