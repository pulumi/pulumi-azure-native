// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20221212Preview
{
    public static class GetCloudServicesNetwork
    {
        /// <summary>
        /// Get properties of the provided cloud services network.
        /// </summary>
        public static Task<GetCloudServicesNetworkResult> InvokeAsync(GetCloudServicesNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudServicesNetworkResult>("azure-native:networkcloud/v20221212preview:getCloudServicesNetwork", args ?? new GetCloudServicesNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Get properties of the provided cloud services network.
        /// </summary>
        public static Output<GetCloudServicesNetworkResult> Invoke(GetCloudServicesNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudServicesNetworkResult>("azure-native:networkcloud/v20221212preview:getCloudServicesNetwork", args ?? new GetCloudServicesNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudServicesNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cloud services network.
        /// </summary>
        [Input("cloudServicesNetworkName", required: true)]
        public string CloudServicesNetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCloudServicesNetworkArgs()
        {
        }
        public static new GetCloudServicesNetworkArgs Empty => new GetCloudServicesNetworkArgs();
    }

    public sealed class GetCloudServicesNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cloud services network.
        /// </summary>
        [Input("cloudServicesNetworkName", required: true)]
        public Input<string> CloudServicesNetworkName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCloudServicesNetworkInvokeArgs()
        {
        }
        public static new GetCloudServicesNetworkInvokeArgs Empty => new GetCloudServicesNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudServicesNetworkResult
    {
        /// <summary>
        /// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.EgressEndpointResponse> AdditionalEgressEndpoints;
        /// <summary>
        /// The resource ID of the Network Cloud cluster this cloud services network is associated with.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The more detailed status of the cloud services network.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the current detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The indicator of whether the platform default endpoints are allowed for the egress traffic.
        /// </summary>
        public readonly string? EnableDefaultEgressEndpoints;
        /// <summary>
        /// The full list of additional and default egress endpoints that are currently enabled.
        /// </summary>
        public readonly ImmutableArray<Outputs.EgressEndpointResponse> EnabledEgressEndpoints;
        /// <summary>
        /// The extended location of the cluster associated with the resource.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ExtendedLocation;
        /// <summary>
        /// The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
        /// </summary>
        public readonly ImmutableArray<string> HybridAksClustersAssociatedIds;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the interface that will be present in the virtual machine to represent this network.
        /// </summary>
        public readonly string InterfaceName;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the cloud services network.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
        /// </summary>
        public readonly ImmutableArray<string> VirtualMachinesAssociatedIds;

        [OutputConstructor]
        private GetCloudServicesNetworkResult(
            ImmutableArray<Outputs.EgressEndpointResponse> additionalEgressEndpoints,

            string clusterId,

            string detailedStatus,

            string detailedStatusMessage,

            string? enableDefaultEgressEndpoints,

            ImmutableArray<Outputs.EgressEndpointResponse> enabledEgressEndpoints,

            Outputs.ExtendedLocationResponse extendedLocation,

            ImmutableArray<string> hybridAksClustersAssociatedIds,

            string id,

            string interfaceName,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<string> virtualMachinesAssociatedIds)
        {
            AdditionalEgressEndpoints = additionalEgressEndpoints;
            ClusterId = clusterId;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            EnableDefaultEgressEndpoints = enableDefaultEgressEndpoints;
            EnabledEgressEndpoints = enabledEgressEndpoints;
            ExtendedLocation = extendedLocation;
            HybridAksClustersAssociatedIds = hybridAksClustersAssociatedIds;
            Id = id;
            InterfaceName = interfaceName;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VirtualMachinesAssociatedIds = virtualMachinesAssociatedIds;
        }
    }
}
