// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.NetworkCloud.V20221212Preview.Outputs
{

    [OutputType]
    public sealed class ClusterPropertiesResponse
    {
        public readonly Outputs.RackDefinitionResponse AggregatorOrSingleRackDefinition;
        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        public readonly string AnalyticsWorkspaceId;
        /// <summary>
        /// The list of cluster runtime version upgrades available for this cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAvailableUpgradeVersionResponse> AvailableUpgradeVersions;
        public readonly Outputs.ClusterCapacityResponse? ClusterCapacity;
        /// <summary>
        /// The latest heartbeat status between the cluster manager and the cluster.
        /// </summary>
        public readonly string ClusterConnectionStatus;
        /// <summary>
        /// The extended location (custom location) that represents the cluster's control plane location.
        /// This extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse ClusterExtendedLocation;
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        public readonly string? ClusterLocation;
        /// <summary>
        /// The latest connectivity status between cluster manager and the cluster.
        /// </summary>
        public readonly string ClusterManagerConnectionStatus;
        /// <summary>
        /// The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.
        /// </summary>
        public readonly string ClusterManagerId;
        public readonly Outputs.ServicePrincipalInformationResponse? ClusterServicePrincipal;
        /// <summary>
        /// The type of rack configuration for the cluster.
        /// </summary>
        public readonly string ClusterType;
        /// <summary>
        /// The current runtime version of the cluster.
        /// </summary>
        public readonly string ClusterVersion;
        public readonly Outputs.ValidationThresholdResponse? ComputeDeploymentThreshold;
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.RackDefinitionResponse> ComputeRackDefinitions;
        /// <summary>
        /// The current detailed status of the cluster.
        /// </summary>
        public readonly string DetailedStatus;
        /// <summary>
        /// The descriptive message about the detailed status.
        /// </summary>
        public readonly string DetailedStatusMessage;
        /// <summary>
        /// The extended location (custom location) that represents the Hybrid AKS control plane location.
        /// This extended location is used when creating provisioned clusters (Hybrid AKS clusters).
        /// </summary>
        public readonly Outputs.ExtendedLocationResponse HybridAksExtendedLocation;
        /// <summary>
        /// The configuration of the managed resource group associated with the resource.
        /// </summary>
        public readonly Outputs.ManagedResourceGroupConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The count of Manual Action Taken (MAT) events that have not been validated.
        /// </summary>
        public readonly double ManualActionCount;
        /// <summary>
        /// The resource ID of the Network Fabric associated with the cluster.
        /// </summary>
        public readonly string NetworkFabricId;
        /// <summary>
        /// The provisioning state of the cluster.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The support end date of the runtime version of the cluster.
        /// </summary>
        public readonly string SupportExpiryDate;
        /// <summary>
        /// The list of workload resource IDs that are hosted within this cluster.
        /// </summary>
        public readonly ImmutableArray<string> WorkloadResourceIds;

        [OutputConstructor]
        private ClusterPropertiesResponse(
            Outputs.RackDefinitionResponse aggregatorOrSingleRackDefinition,

            string analyticsWorkspaceId,

            ImmutableArray<Outputs.ClusterAvailableUpgradeVersionResponse> availableUpgradeVersions,

            Outputs.ClusterCapacityResponse? clusterCapacity,

            string clusterConnectionStatus,

            Outputs.ExtendedLocationResponse clusterExtendedLocation,

            string? clusterLocation,

            string clusterManagerConnectionStatus,

            string clusterManagerId,

            Outputs.ServicePrincipalInformationResponse? clusterServicePrincipal,

            string clusterType,

            string clusterVersion,

            Outputs.ValidationThresholdResponse? computeDeploymentThreshold,

            ImmutableArray<Outputs.RackDefinitionResponse> computeRackDefinitions,

            string detailedStatus,

            string detailedStatusMessage,

            Outputs.ExtendedLocationResponse hybridAksExtendedLocation,

            Outputs.ManagedResourceGroupConfigurationResponse? managedResourceGroupConfiguration,

            double manualActionCount,

            string networkFabricId,

            string provisioningState,

            string supportExpiryDate,

            ImmutableArray<string> workloadResourceIds)
        {
            AggregatorOrSingleRackDefinition = aggregatorOrSingleRackDefinition;
            AnalyticsWorkspaceId = analyticsWorkspaceId;
            AvailableUpgradeVersions = availableUpgradeVersions;
            ClusterCapacity = clusterCapacity;
            ClusterConnectionStatus = clusterConnectionStatus;
            ClusterExtendedLocation = clusterExtendedLocation;
            ClusterLocation = clusterLocation;
            ClusterManagerConnectionStatus = clusterManagerConnectionStatus;
            ClusterManagerId = clusterManagerId;
            ClusterServicePrincipal = clusterServicePrincipal;
            ClusterType = clusterType;
            ClusterVersion = clusterVersion;
            ComputeDeploymentThreshold = computeDeploymentThreshold;
            ComputeRackDefinitions = computeRackDefinitions;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            HybridAksExtendedLocation = hybridAksExtendedLocation;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ManualActionCount = manualActionCount;
            NetworkFabricId = networkFabricId;
            ProvisioningState = provisioningState;
            SupportExpiryDate = supportExpiryDate;
            WorkloadResourceIds = workloadResourceIds;
        }
    }
}
