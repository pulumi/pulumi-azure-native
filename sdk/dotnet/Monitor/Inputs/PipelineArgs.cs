// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Monitor.Inputs
{

    /// <summary>
    /// Pipeline Info.
    /// </summary>
    public sealed class PipelineArgs : global::Pulumi.ResourceArgs
    {
        [Input("exporters", required: true)]
        private InputList<string>? _exporters;

        /// <summary>
        /// Reference to exporters configured for the pipeline.
        /// </summary>
        public InputList<string> Exporters
        {
            get => _exporters ?? (_exporters = new InputList<string>());
            set => _exporters = value;
        }

        /// <summary>
        /// Name of the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<string>? _processors;

        /// <summary>
        /// Reference to processors configured for the pipeline.
        /// </summary>
        public InputList<string> Processors
        {
            get => _processors ?? (_processors = new InputList<string>());
            set => _processors = value;
        }

        [Input("receivers", required: true)]
        private InputList<string>? _receivers;

        /// <summary>
        /// Reference to receivers configured for the pipeline.
        /// </summary>
        public InputList<string> Receivers
        {
            get => _receivers ?? (_receivers = new InputList<string>());
            set => _receivers = value;
        }

        /// <summary>
        /// The type of pipeline
        /// </summary>
        [Input("type", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Monitor.PipelineType> Type { get; set; } = null!;

        public PipelineArgs()
        {
        }
        public static new PipelineArgs Empty => new PipelineArgs();
    }
}
