// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Monitor.Inputs
{

    /// <summary>
    /// Prometheus Metrics Signal Definition properties
    /// </summary>
    public sealed class PrometheusMetricsSignalDefinitionPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
        /// </summary>
        [Input("dataUnit")]
        public Input<string>? DataUnit { get; set; }

        /// <summary>
        /// Display name
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Evaluation rules for the signal definition
        /// </summary>
        [Input("evaluationRules", required: true)]
        public Input<Inputs.EvaluationRuleArgs> EvaluationRules { get; set; } = null!;

        /// <summary>
        /// Query text in PromQL syntax
        /// </summary>
        [Input("queryText", required: true)]
        public Input<string> QueryText { get; set; } = null!;

        /// <summary>
        /// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
        /// </summary>
        [Input("refreshInterval")]
        public InputUnion<string, Pulumi.AzureNative.Monitor.RefreshInterval>? RefreshInterval { get; set; }

        /// <summary>
        /// Supported signal kinds as discriminator
        /// Expected value is 'PrometheusMetricsQuery'.
        /// </summary>
        [Input("signalKind", required: true)]
        public Input<string> SignalKind { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Optional set of labels (key-value pairs)
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Time range of signal. ISO duration format like PT10M.
        /// </summary>
        [Input("timeGrain")]
        public Input<string>? TimeGrain { get; set; }

        public PrometheusMetricsSignalDefinitionPropertiesArgs()
        {
            RefreshInterval = "PT1M";
        }
        public static new PrometheusMetricsSignalDefinitionPropertiesArgs Empty => new PrometheusMetricsSignalDefinitionPropertiesArgs();
    }
}
