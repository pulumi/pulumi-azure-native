// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Monitor.V20241001Preview.Outputs
{

    /// <summary>
    /// Properties that need to be specified to create a new pipeline group instance.
    /// </summary>
    [OutputType]
    public sealed class PipelineGroupPropertiesResponse
    {
        /// <summary>
        /// The exporters specified for a pipeline group instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExporterResponse> Exporters;
        /// <summary>
        /// Networking configurations for the pipeline group instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkingConfigurationResponse> NetworkingConfigurations;
        /// <summary>
        /// The processors specified for a pipeline group instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessorResponse> Processors;
        /// <summary>
        /// The provisioning state of a pipeline group instance. Set to Succeeded if everything is healthy.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The receivers specified for a pipeline group instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReceiverResponse> Receivers;
        /// <summary>
        /// Defines the amount of replicas of the pipeline group instance.
        /// </summary>
        public readonly int? Replicas;
        /// <summary>
        /// The service section for a given pipeline group instance.
        /// </summary>
        public readonly Outputs.ServiceResponse Service;

        [OutputConstructor]
        private PipelineGroupPropertiesResponse(
            ImmutableArray<Outputs.ExporterResponse> exporters,

            ImmutableArray<Outputs.NetworkingConfigurationResponse> networkingConfigurations,

            ImmutableArray<Outputs.ProcessorResponse> processors,

            string provisioningState,

            ImmutableArray<Outputs.ReceiverResponse> receivers,

            int? replicas,

            Outputs.ServiceResponse service)
        {
            Exporters = exporters;
            NetworkingConfigurations = networkingConfigurations;
            Processors = processors;
            ProvisioningState = provisioningState;
            Receivers = receivers;
            Replicas = replicas;
            Service = service;
        }
    }
}
