// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Monitor.V20210603Preview
{
    public static class GetAzureMonitorWorkspace
    {
        /// <summary>
        /// Returns the specific Azure Monitor workspace
        /// </summary>
        public static Task<GetAzureMonitorWorkspaceResult> InvokeAsync(GetAzureMonitorWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureMonitorWorkspaceResult>("azure-native:monitor/v20210603preview:getAzureMonitorWorkspace", args ?? new GetAzureMonitorWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the specific Azure Monitor workspace
        /// </summary>
        public static Output<GetAzureMonitorWorkspaceResult> Invoke(GetAzureMonitorWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureMonitorWorkspaceResult>("azure-native:monitor/v20210603preview:getAzureMonitorWorkspace", args ?? new GetAzureMonitorWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureMonitorWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure Monitor workspace.  The name is case insensitive
        /// </summary>
        [Input("azureMonitorWorkspaceName", required: true)]
        public string AzureMonitorWorkspaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAzureMonitorWorkspaceArgs()
        {
        }
        public static new GetAzureMonitorWorkspaceArgs Empty => new GetAzureMonitorWorkspaceArgs();
    }

    public sealed class GetAzureMonitorWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure Monitor workspace.  The name is case insensitive
        /// </summary>
        [Input("azureMonitorWorkspaceName", required: true)]
        public Input<string> AzureMonitorWorkspaceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAzureMonitorWorkspaceInvokeArgs()
        {
        }
        public static new GetAzureMonitorWorkspaceInvokeArgs Empty => new GetAzureMonitorWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureMonitorWorkspaceResult
    {
        /// <summary>
        /// The immutable ID of the Azure Monitor workspace. This property is read-only.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The Data Collection Rule and Endpoint used for ingestion by default.
        /// </summary>
        public readonly Outputs.AzureMonitorWorkspaceResponseDefaultIngestionSettings DefaultIngestionSettings;
        /// <summary>
        /// Resource entity tag (ETag)
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Information about metrics for the Azure Monitor workspace
        /// </summary>
        public readonly Outputs.AzureMonitorWorkspaceResponseMetrics Metrics;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the Azure Monitor workspace. Set to Succeeded if everything is healthy.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAzureMonitorWorkspaceResult(
            string accountId,

            Outputs.AzureMonitorWorkspaceResponseDefaultIngestionSettings defaultIngestionSettings,

            string etag,

            string id,

            string location,

            Outputs.AzureMonitorWorkspaceResponseMetrics metrics,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AccountId = accountId;
            DefaultIngestionSettings = defaultIngestionSettings;
            Etag = etag;
            Id = id;
            Location = location;
            Metrics = metrics;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
