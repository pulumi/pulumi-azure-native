// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Orbital.V20221101
{
    public static class GetSpacecraft
    {
        /// <summary>
        /// Gets the specified spacecraft in a specified resource group.
        /// </summary>
        public static Task<GetSpacecraftResult> InvokeAsync(GetSpacecraftArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpacecraftResult>("azure-native:orbital/v20221101:getSpacecraft", args ?? new GetSpacecraftArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified spacecraft in a specified resource group.
        /// </summary>
        public static Output<GetSpacecraftResult> Invoke(GetSpacecraftInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpacecraftResult>("azure-native:orbital/v20221101:getSpacecraft", args ?? new GetSpacecraftInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpacecraftArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Spacecraft ID.
        /// </summary>
        [Input("spacecraftName", required: true)]
        public string SpacecraftName { get; set; } = null!;

        public GetSpacecraftArgs()
        {
        }
        public static new GetSpacecraftArgs Empty => new GetSpacecraftArgs();
    }

    public sealed class GetSpacecraftInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Spacecraft ID.
        /// </summary>
        [Input("spacecraftName", required: true)]
        public Input<string> SpacecraftName { get; set; } = null!;

        public GetSpacecraftInvokeArgs()
        {
        }
        public static new GetSpacecraftInvokeArgs Empty => new GetSpacecraftInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpacecraftResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Immutable list of Spacecraft links.
        /// </summary>
        public readonly ImmutableArray<Outputs.SpacecraftLinkResponse> Links;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// NORAD ID of the spacecraft.
        /// </summary>
        public readonly string? NoradId;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Title line of the two-line element set (TLE).
        /// </summary>
        public readonly string TitleLine;
        /// <summary>
        /// Line 1 of the two-line element set (TLE).
        /// </summary>
        public readonly string TleLine1;
        /// <summary>
        /// Line 2 of the two-line element set (TLE).
        /// </summary>
        public readonly string TleLine2;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSpacecraftResult(
            string id,

            ImmutableArray<Outputs.SpacecraftLinkResponse> links,

            string location,

            string name,

            string? noradId,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string titleLine,

            string tleLine1,

            string tleLine2,

            string type)
        {
            Id = id;
            Links = links;
            Location = location;
            Name = name;
            NoradId = noradId;
            SystemData = systemData;
            Tags = tags;
            TitleLine = titleLine;
            TleLine1 = tleLine1;
            TleLine2 = tleLine2;
            Type = type;
        }
    }
}
