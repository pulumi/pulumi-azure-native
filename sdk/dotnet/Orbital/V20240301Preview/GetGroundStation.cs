// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Orbital.V20240301Preview
{
    public static class GetGroundStation
    {
        /// <summary>
        /// Gets the specified ground station in a specified resource group.
        /// </summary>
        public static Task<GetGroundStationResult> InvokeAsync(GetGroundStationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroundStationResult>("azure-native:orbital/v20240301preview:getGroundStation", args ?? new GetGroundStationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified ground station in a specified resource group.
        /// </summary>
        public static Output<GetGroundStationResult> Invoke(GetGroundStationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroundStationResult>("azure-native:orbital/v20240301preview:getGroundStation", args ?? new GetGroundStationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroundStationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Ground Station name.
        /// </summary>
        [Input("groundStationName", required: true)]
        public string GroundStationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetGroundStationArgs()
        {
        }
        public static new GetGroundStationArgs Empty => new GetGroundStationArgs();
    }

    public sealed class GetGroundStationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Ground Station name.
        /// </summary>
        [Input("groundStationName", required: true)]
        public Input<string> GroundStationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetGroundStationInvokeArgs()
        {
        }
        public static new GetGroundStationInvokeArgs Empty => new GetGroundStationInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroundStationResult
    {
        /// <summary>
        /// Altitude of the ground station.
        /// </summary>
        public readonly double? AltitudeMeters;
        /// <summary>
        /// Ground station capabilities.
        /// </summary>
        public readonly ImmutableArray<string> Capabilities;
        /// <summary>
        /// City of ground station.
        /// </summary>
        public readonly string? City;
        /// <summary>
        /// A reference to global communications site.
        /// </summary>
        public readonly Outputs.GroundStationsPropertiesResponseGlobalCommunicationsSite GlobalCommunicationsSite;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Latitude of the ground station in decimal degrees.
        /// </summary>
        public readonly double? LatitudeDegrees;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Longitude of the ground station in decimal degrees.
        /// </summary>
        public readonly double? LongitudeDegrees;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Ground station provider name.
        /// </summary>
        public readonly string? ProviderName;
        /// <summary>
        /// Release Status of a ground station.
        /// </summary>
        public readonly string ReleaseMode;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGroundStationResult(
            double? altitudeMeters,

            ImmutableArray<string> capabilities,

            string? city,

            Outputs.GroundStationsPropertiesResponseGlobalCommunicationsSite globalCommunicationsSite,

            string id,

            double? latitudeDegrees,

            string location,

            double? longitudeDegrees,

            string name,

            string? providerName,

            string releaseMode,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AltitudeMeters = altitudeMeters;
            Capabilities = capabilities;
            City = city;
            GlobalCommunicationsSite = globalCommunicationsSite;
            Id = id;
            LatitudeDegrees = latitudeDegrees;
            Location = location;
            LongitudeDegrees = longitudeDegrees;
            Name = name;
            ProviderName = providerName;
            ReleaseMode = releaseMode;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
