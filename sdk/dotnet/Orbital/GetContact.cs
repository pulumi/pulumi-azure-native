// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Orbital
{
    public static class GetContact
    {
        /// <summary>
        /// Gets the specified contact in a specified resource group.
        /// Azure REST API version: 2022-11-01.
        /// 
        /// Other available API versions: 2022-03-01.
        /// </summary>
        public static Task<GetContactResult> InvokeAsync(GetContactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContactResult>("azure-native:orbital:getContact", args ?? new GetContactArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified contact in a specified resource group.
        /// Azure REST API version: 2022-11-01.
        /// 
        /// Other available API versions: 2022-03-01.
        /// </summary>
        public static Output<GetContactResult> Invoke(GetContactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContactResult>("azure-native:orbital:getContact", args ?? new GetContactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Contact name.
        /// </summary>
        [Input("contactName", required: true)]
        public string ContactName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Spacecraft ID.
        /// </summary>
        [Input("spacecraftName", required: true)]
        public string SpacecraftName { get; set; } = null!;

        public GetContactArgs()
        {
        }
        public static new GetContactArgs Empty => new GetContactArgs();
    }

    public sealed class GetContactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Contact name.
        /// </summary>
        [Input("contactName", required: true)]
        public Input<string> ContactName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Spacecraft ID.
        /// </summary>
        [Input("spacecraftName", required: true)]
        public Input<string> SpacecraftName { get; set; } = null!;

        public GetContactInvokeArgs()
        {
        }
        public static new GetContactInvokeArgs Empty => new GetContactInvokeArgs();
    }


    [OutputType]
    public sealed class GetContactResult
    {
        /// <summary>
        /// The configuration associated with the allocated antenna.
        /// </summary>
        public readonly Outputs.ContactsPropertiesResponseAntennaConfiguration AntennaConfiguration;
        /// <summary>
        /// The reference to the contact profile resource.
        /// </summary>
        public readonly Outputs.ContactsPropertiesResponseContactProfile ContactProfile;
        /// <summary>
        /// Azimuth of the antenna at the end of the contact in decimal degrees.
        /// </summary>
        public readonly double EndAzimuthDegrees;
        /// <summary>
        /// Spacecraft elevation above the horizon at contact end.
        /// </summary>
        public readonly double EndElevationDegrees;
        /// <summary>
        /// Any error message while scheduling a contact.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Azure Ground Station name.
        /// </summary>
        public readonly string GroundStationName;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Maximum elevation of the antenna during the contact in decimal degrees.
        /// </summary>
        public readonly double MaximumElevationDegrees;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Reservation end time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string ReservationEndTime;
        /// <summary>
        /// Reservation start time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string ReservationStartTime;
        /// <summary>
        /// Receive end time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string RxEndTime;
        /// <summary>
        /// Receive start time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string RxStartTime;
        /// <summary>
        /// Azimuth of the antenna at the start of the contact in decimal degrees.
        /// </summary>
        public readonly double StartAzimuthDegrees;
        /// <summary>
        /// Spacecraft elevation above the horizon at contact start.
        /// </summary>
        public readonly double StartElevationDegrees;
        /// <summary>
        /// Status of a contact.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Transmit end time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string TxEndTime;
        /// <summary>
        /// Transmit start time of a contact (ISO 8601 UTC standard).
        /// </summary>
        public readonly string TxStartTime;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetContactResult(
            Outputs.ContactsPropertiesResponseAntennaConfiguration antennaConfiguration,

            Outputs.ContactsPropertiesResponseContactProfile contactProfile,

            double endAzimuthDegrees,

            double endElevationDegrees,

            string errorMessage,

            string groundStationName,

            string id,

            double maximumElevationDegrees,

            string name,

            string reservationEndTime,

            string reservationStartTime,

            string rxEndTime,

            string rxStartTime,

            double startAzimuthDegrees,

            double startElevationDegrees,

            string status,

            Outputs.SystemDataResponse systemData,

            string txEndTime,

            string txStartTime,

            string type)
        {
            AntennaConfiguration = antennaConfiguration;
            ContactProfile = contactProfile;
            EndAzimuthDegrees = endAzimuthDegrees;
            EndElevationDegrees = endElevationDegrees;
            ErrorMessage = errorMessage;
            GroundStationName = groundStationName;
            Id = id;
            MaximumElevationDegrees = maximumElevationDegrees;
            Name = name;
            ReservationEndTime = reservationEndTime;
            ReservationStartTime = reservationStartTime;
            RxEndTime = rxEndTime;
            RxStartTime = rxStartTime;
            StartAzimuthDegrees = startAzimuthDegrees;
            StartElevationDegrees = startElevationDegrees;
            Status = status;
            SystemData = systemData;
            TxEndTime = txEndTime;
            TxStartTime = txStartTime;
            Type = type;
        }
    }
}
