// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Orbital
{
    /// <summary>
    /// Ground Station contains one or more antennas.
    /// Azure REST API version: 2024-03-01-preview.
    /// 
    /// Other available API versions: 2024-03-01.
    /// </summary>
    [AzureNativeResourceType("azure-native:orbital:GroundStation")]
    public partial class GroundStation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Altitude of the ground station.
        /// </summary>
        [Output("altitudeMeters")]
        public Output<double?> AltitudeMeters { get; private set; } = null!;

        /// <summary>
        /// Ground station capabilities.
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// City of ground station.
        /// </summary>
        [Output("city")]
        public Output<string?> City { get; private set; } = null!;

        /// <summary>
        /// A reference to global communications site.
        /// </summary>
        [Output("globalCommunicationsSite")]
        public Output<Outputs.GroundStationsPropertiesResponseGlobalCommunicationsSite> GlobalCommunicationsSite { get; private set; } = null!;

        /// <summary>
        /// Latitude of the ground station in decimal degrees.
        /// </summary>
        [Output("latitudeDegrees")]
        public Output<double?> LatitudeDegrees { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Longitude of the ground station in decimal degrees.
        /// </summary>
        [Output("longitudeDegrees")]
        public Output<double?> LongitudeDegrees { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Ground station provider name.
        /// </summary>
        [Output("providerName")]
        public Output<string?> ProviderName { get; private set; } = null!;

        /// <summary>
        /// Release Status of a ground station.
        /// </summary>
        [Output("releaseMode")]
        public Output<string> ReleaseMode { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GroundStation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroundStation(string name, GroundStationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:orbital:GroundStation", name, args ?? new GroundStationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroundStation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:orbital:GroundStation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:orbital/v20240301:GroundStation" },
                    new global::Pulumi.Alias { Type = "azure-native:orbital/v20240301preview:GroundStation" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroundStation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroundStation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GroundStation(name, id, options);
        }
    }

    public sealed class GroundStationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Altitude of the ground station.
        /// </summary>
        [Input("altitudeMeters")]
        public Input<double>? AltitudeMeters { get; set; }

        [Input("capabilities", required: true)]
        private InputList<Union<string, Pulumi.AzureNative.Orbital.Capability>>? _capabilities;

        /// <summary>
        /// Ground station capabilities.
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.Orbital.Capability>> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<Union<string, Pulumi.AzureNative.Orbital.Capability>>());
            set => _capabilities = value;
        }

        /// <summary>
        /// City of ground station.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// A reference to global communications site.
        /// </summary>
        [Input("globalCommunicationsSite", required: true)]
        public Input<Inputs.GroundStationsPropertiesGlobalCommunicationsSiteArgs> GlobalCommunicationsSite { get; set; } = null!;

        /// <summary>
        /// Ground Station name.
        /// </summary>
        [Input("groundStationName")]
        public Input<string>? GroundStationName { get; set; }

        /// <summary>
        /// Latitude of the ground station in decimal degrees.
        /// </summary>
        [Input("latitudeDegrees")]
        public Input<double>? LatitudeDegrees { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Longitude of the ground station in decimal degrees.
        /// </summary>
        [Input("longitudeDegrees")]
        public Input<double>? LongitudeDegrees { get; set; }

        /// <summary>
        /// Ground station provider name.
        /// </summary>
        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GroundStationArgs()
        {
        }
        public static new GroundStationArgs Empty => new GroundStationArgs();
    }
}
