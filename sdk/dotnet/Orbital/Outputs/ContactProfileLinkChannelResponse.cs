// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Orbital.Outputs
{

    /// <summary>
    /// Contact Profile Link Channel
    /// </summary>
    [OutputType]
    public sealed class ContactProfileLinkChannelResponse
    {
        /// <summary>
        /// Bandwidth in MHz
        /// </summary>
        public readonly double BandwidthMHz;
        /// <summary>
        /// Center Frequency in MHz
        /// </summary>
        public readonly double CenterFrequencyMHz;
        /// <summary>
        /// Configuration for decoding
        /// </summary>
        public readonly string? DecodingConfiguration;
        /// <summary>
        /// Configuration for demodulation
        /// </summary>
        public readonly string? DemodulationConfiguration;
        /// <summary>
        /// Configuration for encoding
        /// </summary>
        public readonly string? EncodingConfiguration;
        /// <summary>
        /// Customer End point to store/retrieve data during a contact.
        /// </summary>
        public readonly Outputs.EndPointResponse EndPoint;
        /// <summary>
        /// Configuration for modulation
        /// </summary>
        public readonly string? ModulationConfiguration;
        /// <summary>
        /// Channel name
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ContactProfileLinkChannelResponse(
            double bandwidthMHz,

            double centerFrequencyMHz,

            string? decodingConfiguration,

            string? demodulationConfiguration,

            string? encodingConfiguration,

            Outputs.EndPointResponse endPoint,

            string? modulationConfiguration,

            string name)
        {
            BandwidthMHz = bandwidthMHz;
            CenterFrequencyMHz = centerFrequencyMHz;
            DecodingConfiguration = decodingConfiguration;
            DemodulationConfiguration = demodulationConfiguration;
            EncodingConfiguration = encodingConfiguration;
            EndPoint = endPoint;
            ModulationConfiguration = modulationConfiguration;
            Name = name;
        }
    }
}
