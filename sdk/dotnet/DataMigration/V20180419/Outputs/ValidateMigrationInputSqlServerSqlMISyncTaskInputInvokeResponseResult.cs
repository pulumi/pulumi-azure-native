// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataMigration.V20180419.Outputs
{

    [OutputType]
    public sealed class ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseResult
    {
        /// <summary>
        /// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
        /// </summary>
        public readonly Outputs.AzureActiveDirectoryAppInvokeResponseResult AzureApp;
        /// <summary>
        /// Backup file share information for all selected databases.
        /// </summary>
        public readonly Outputs.FileShareInvokeResponseResult? BackupFileShare;
        /// <summary>
        /// Databases to migrate
        /// </summary>
        public readonly ImmutableArray<Outputs.MigrateSqlServerSqlMIDatabaseInputInvokeResponseResult> SelectedDatabases;
        /// <summary>
        /// Connection information for source SQL Server
        /// </summary>
        public readonly Outputs.SqlConnectionInfoInvokeResponseResult SourceConnectionInfo;
        /// <summary>
        /// Fully qualified resourceId of storage
        /// </summary>
        public readonly string StorageResourceId;
        /// <summary>
        /// Connection information for Azure SQL Database Managed Instance
        /// </summary>
        public readonly Outputs.MiSqlConnectionInfoInvokeResponseResult TargetConnectionInfo;

        [OutputConstructor]
        private ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseResult(
            Outputs.AzureActiveDirectoryAppInvokeResponseResult azureApp,

            Outputs.FileShareInvokeResponseResult? backupFileShare,

            ImmutableArray<Outputs.MigrateSqlServerSqlMIDatabaseInputInvokeResponseResult> selectedDatabases,

            Outputs.SqlConnectionInfoInvokeResponseResult sourceConnectionInfo,

            string storageResourceId,

            Outputs.MiSqlConnectionInfoInvokeResponseResult targetConnectionInfo)
        {
            AzureApp = azureApp;
            BackupFileShare = backupFileShare;
            SelectedDatabases = selectedDatabases;
            SourceConnectionInfo = sourceConnectionInfo;
            StorageResourceId = storageResourceId;
            TargetConnectionInfo = targetConnectionInfo;
        }
    }
}
