// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataMigration.V20180419.Outputs
{

    [OutputType]
    public sealed class ConnectToSourceSqlServerTaskOutputTaskLevelResponse
    {
        /// <summary>
        /// Source agent jobs as a map from agent job name to id.
        /// </summary>
        public readonly ImmutableDictionary<string, string> AgentJobs;
        /// <summary>
        /// Source databases as a map from database name to database id
        /// </summary>
        public readonly ImmutableDictionary<string, string> Databases;
        /// <summary>
        /// Result identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Source logins as a map from login name to login id.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Logins;
        /// <summary>
        /// Type of result - database level or task level
        /// </summary>
        public readonly string ResultType;
        /// <summary>
        /// Source server brand version
        /// </summary>
        public readonly string SourceServerBrandVersion;
        /// <summary>
        /// Source server version
        /// </summary>
        public readonly string SourceServerVersion;
        /// <summary>
        /// Validation errors
        /// </summary>
        public readonly ImmutableArray<Outputs.ReportableExceptionResponse> ValidationErrors;

        [OutputConstructor]
        private ConnectToSourceSqlServerTaskOutputTaskLevelResponse(
            ImmutableDictionary<string, string> agentJobs,

            ImmutableDictionary<string, string> databases,

            string id,

            ImmutableDictionary<string, string> logins,

            string resultType,

            string sourceServerBrandVersion,

            string sourceServerVersion,

            ImmutableArray<Outputs.ReportableExceptionResponse> validationErrors)
        {
            AgentJobs = agentJobs;
            Databases = databases;
            Id = id;
            Logins = logins;
            ResultType = resultType;
            SourceServerBrandVersion = sourceServerBrandVersion;
            SourceServerVersion = sourceServerVersion;
            ValidationErrors = validationErrors;
        }
    }
}
