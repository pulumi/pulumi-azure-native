// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.Outputs
{

    /// <summary>
    /// Information of backup file
    /// </summary>
    [OutputType]
    public sealed class SqlBackupFileInfoResponse
    {
        /// <summary>
        /// Copy Duration in seconds
        /// </summary>
        public readonly int CopyDuration;
        /// <summary>
        /// Copy throughput in KBps
        /// </summary>
        public readonly double CopyThroughput;
        /// <summary>
        /// Bytes read
        /// </summary>
        public readonly double DataRead;
        /// <summary>
        /// Bytes written
        /// </summary>
        public readonly double DataWritten;
        /// <summary>
        /// Media family sequence number
        /// </summary>
        public readonly int FamilySequenceNumber;
        /// <summary>
        /// File name.
        /// </summary>
        public readonly string FileName;
        /// <summary>
        /// Status of the file. (Initial, Uploading, Uploaded, Restoring, Restored or Skipped)
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// File size in bytes
        /// </summary>
        public readonly double TotalSize;

        [OutputConstructor]
        private SqlBackupFileInfoResponse(
            int copyDuration,

            double copyThroughput,

            double dataRead,

            double dataWritten,

            int familySequenceNumber,

            string fileName,

            string status,

            double totalSize)
        {
            CopyDuration = copyDuration;
            CopyThroughput = copyThroughput;
            DataRead = dataRead;
            DataWritten = dataWritten;
            FamilySequenceNumber = familySequenceNumber;
            FileName = fileName;
            Status = status;
            TotalSize = totalSize;
        }
    }
}
