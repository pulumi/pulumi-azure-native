// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20230715Preview
{
    public static class GetDatabaseMigrationsMongoToCosmosDbRUMongo
    {
        /// <summary>
        /// Get Database Migration resource.
        /// </summary>
        public static Task<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult> InvokeAsync(GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult>("azure-native:datamigration/v20230715preview:getDatabaseMigrationsMongoToCosmosDbRUMongo", args ?? new GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs(), options.WithDefaults());

        /// <summary>
        /// Get Database Migration resource.
        /// </summary>
        public static Output<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult> Invoke(GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseMigrationsMongoToCosmosDbRUMongoResult>("azure-native:datamigration/v20230715preview:getDatabaseMigrationsMongoToCosmosDbRUMongo", args ?? new GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the migration.
        /// </summary>
        [Input("migrationName", required: true)]
        public string MigrationName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the target resource/account.
        /// </summary>
        [Input("targetResourceName", required: true)]
        public string TargetResourceName { get; set; } = null!;

        public GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs()
        {
        }
        public static new GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs Empty => new GetDatabaseMigrationsMongoToCosmosDbRUMongoArgs();
    }

    public sealed class GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the migration.
        /// </summary>
        [Input("migrationName", required: true)]
        public Input<string> MigrationName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the target resource/account.
        /// </summary>
        [Input("targetResourceName", required: true)]
        public Input<string> TargetResourceName { get; set; } = null!;

        public GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs()
        {
        }
        public static new GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs Empty => new GetDatabaseMigrationsMongoToCosmosDbRUMongoInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseMigrationsMongoToCosmosDbRUMongoResult
    {
        /// <summary>
        /// List of Mongo Collections to be migrated.
        /// </summary>
        public readonly ImmutableArray<Outputs.MongoMigrationCollectionResponse> CollectionList;
        /// <summary>
        /// Database migration end time.
        /// </summary>
        public readonly string EndedOn;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 
        /// Expected value is 'MongoToCosmosDbMongo'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Error details in case of migration failure.
        /// </summary>
        public readonly Outputs.ErrorInfoResponse MigrationFailureError;
        /// <summary>
        /// ID for current migration operation.
        /// </summary>
        public readonly string? MigrationOperationId;
        /// <summary>
        /// Resource Id of the Migration Service.
        /// </summary>
        public readonly string? MigrationService;
        /// <summary>
        /// Migration status.
        /// </summary>
        public readonly string MigrationStatus;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Error message for migration provisioning failure, if any.
        /// </summary>
        public readonly string? ProvisioningError;
        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Resource Id of the target resource.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Source Mongo connection details.
        /// </summary>
        public readonly Outputs.MongoConnectionInformationResponse? SourceMongoConnection;
        /// <summary>
        /// Database migration start time.
        /// </summary>
        public readonly string StartedOn;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Target Cosmos DB Mongo connection details.
        /// </summary>
        public readonly Outputs.MongoConnectionInformationResponse? TargetMongoConnection;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDatabaseMigrationsMongoToCosmosDbRUMongoResult(
            ImmutableArray<Outputs.MongoMigrationCollectionResponse> collectionList,

            string endedOn,

            string id,

            string kind,

            Outputs.ErrorInfoResponse migrationFailureError,

            string? migrationOperationId,

            string? migrationService,

            string migrationStatus,

            string name,

            string? provisioningError,

            string provisioningState,

            string? scope,

            Outputs.MongoConnectionInformationResponse? sourceMongoConnection,

            string startedOn,

            Outputs.SystemDataResponse systemData,

            Outputs.MongoConnectionInformationResponse? targetMongoConnection,

            string type)
        {
            CollectionList = collectionList;
            EndedOn = endedOn;
            Id = id;
            Kind = kind;
            MigrationFailureError = migrationFailureError;
            MigrationOperationId = migrationOperationId;
            MigrationService = migrationService;
            MigrationStatus = migrationStatus;
            Name = name;
            ProvisioningError = provisioningError;
            ProvisioningState = provisioningState;
            Scope = scope;
            SourceMongoConnection = sourceMongoConnection;
            StartedOn = startedOn;
            SystemData = systemData;
            TargetMongoConnection = targetMongoConnection;
            Type = type;
        }
    }
}
