// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20230715Preview
{
    public static class GetMigrationService
    {
        /// <summary>
        /// Retrieve the Database Migration Service
        /// </summary>
        public static Task<GetMigrationServiceResult> InvokeAsync(GetMigrationServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationServiceResult>("azure-native:datamigration/v20230715preview:getMigrationService", args ?? new GetMigrationServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Database Migration Service
        /// </summary>
        public static Output<GetMigrationServiceResult> Invoke(GetMigrationServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationServiceResult>("azure-native:datamigration/v20230715preview:getMigrationService", args ?? new GetMigrationServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Migration Service.
        /// </summary>
        [Input("migrationServiceName", required: true)]
        public string MigrationServiceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetMigrationServiceArgs()
        {
        }
        public static new GetMigrationServiceArgs Empty => new GetMigrationServiceArgs();
    }

    public sealed class GetMigrationServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Migration Service.
        /// </summary>
        [Input("migrationServiceName", required: true)]
        public Input<string> MigrationServiceName { get; set; } = null!;

        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetMigrationServiceInvokeArgs()
        {
        }
        public static new GetMigrationServiceInvokeArgs Empty => new GetMigrationServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationServiceResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Current state of the Integration runtime.
        /// </summary>
        public readonly string IntegrationRuntimeState;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning state to track the async operation status.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMigrationServiceResult(
            string id,

            string integrationRuntimeState,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            IntegrationRuntimeState = integrationRuntimeState;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
