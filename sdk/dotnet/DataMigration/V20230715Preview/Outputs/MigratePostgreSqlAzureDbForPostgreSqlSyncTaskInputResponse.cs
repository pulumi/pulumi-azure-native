// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20230715Preview.Outputs
{

    /// <summary>
    /// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
    /// </summary>
    [OutputType]
    public sealed class MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse
    {
        /// <summary>
        /// encrypted key for secure fields
        /// </summary>
        public readonly string? EncryptedKeyForSecureFields;
        /// <summary>
        /// Databases to migrate
        /// </summary>
        public readonly ImmutableArray<Outputs.MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse> SelectedDatabases;
        /// <summary>
        /// Connection information for source PostgreSQL
        /// </summary>
        public readonly Outputs.PostgreSqlConnectionInfoResponse SourceConnectionInfo;
        /// <summary>
        /// Migration start time
        /// </summary>
        public readonly string StartedOn;
        /// <summary>
        /// Connection information for target Azure Database for PostgreSQL
        /// </summary>
        public readonly Outputs.PostgreSqlConnectionInfoResponse TargetConnectionInfo;

        [OutputConstructor]
        private MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse(
            string? encryptedKeyForSecureFields,

            ImmutableArray<Outputs.MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse> selectedDatabases,

            Outputs.PostgreSqlConnectionInfoResponse sourceConnectionInfo,

            string startedOn,

            Outputs.PostgreSqlConnectionInfoResponse targetConnectionInfo)
        {
            EncryptedKeyForSecureFields = encryptedKeyForSecureFields;
            SelectedDatabases = selectedDatabases;
            SourceConnectionInfo = sourceConnectionInfo;
            StartedOn = startedOn;
            TargetConnectionInfo = targetConnectionInfo;
        }
    }
}
