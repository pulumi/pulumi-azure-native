// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.Inputs
{

    /// <summary>
    /// Database Migration Resource properties for SQL database.
    /// </summary>
    public sealed class DatabaseMigrationPropertiesSqlDbArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 
        /// Expected value is 'SqlDb'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// ID tracking current migration operation.
        /// </summary>
        [Input("migrationOperationId")]
        public Input<string>? MigrationOperationId { get; set; }

        /// <summary>
        /// Resource Id of the Migration Service.
        /// </summary>
        [Input("migrationService")]
        public Input<string>? MigrationService { get; set; }

        /// <summary>
        /// Error message for migration provisioning failure, if any.
        /// </summary>
        [Input("provisioningError")]
        public Input<string>? ProvisioningError { get; set; }

        /// <summary>
        /// Resource Id of the target resource (SQL VM or SQL Managed Instance).
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Name of the source database.
        /// </summary>
        [Input("sourceDatabaseName")]
        public Input<string>? SourceDatabaseName { get; set; }

        /// <summary>
        /// Source SQL Server connection details.
        /// </summary>
        [Input("sourceSqlConnection")]
        public Input<Inputs.SqlConnectionInformationArgs>? SourceSqlConnection { get; set; }

        [Input("tableList")]
        private InputList<string>? _tableList;

        /// <summary>
        /// List of tables to copy.
        /// </summary>
        public InputList<string> TableList
        {
            get => _tableList ?? (_tableList = new InputList<string>());
            set => _tableList = value;
        }

        /// <summary>
        /// Database collation to be used for the target database.
        /// </summary>
        [Input("targetDatabaseCollation")]
        public Input<string>? TargetDatabaseCollation { get; set; }

        /// <summary>
        /// Target SQL DB connection details.
        /// </summary>
        [Input("targetSqlConnection")]
        public Input<Inputs.SqlConnectionInformationArgs>? TargetSqlConnection { get; set; }

        public DatabaseMigrationPropertiesSqlDbArgs()
        {
        }
        public static new DatabaseMigrationPropertiesSqlDbArgs Empty => new DatabaseMigrationPropertiesSqlDbArgs();
    }
}
