// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.Inputs
{

    /// <summary>
    /// Database Migration Resource properties for SQL Virtual Machine.
    /// </summary>
    public sealed class DatabaseMigrationPropertiesSqlVmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup configuration info.
        /// </summary>
        [Input("backupConfiguration")]
        public Input<Inputs.BackupConfigurationArgs>? BackupConfiguration { get; set; }

        /// <summary>
        /// 
        /// Expected value is 'SqlVm'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// ID for current migration operation.
        /// </summary>
        [Input("migrationOperationId")]
        public Input<string>? MigrationOperationId { get; set; }

        /// <summary>
        /// Resource Id of the Migration Service.
        /// </summary>
        [Input("migrationService")]
        public Input<string>? MigrationService { get; set; }

        /// <summary>
        /// Offline configuration.
        /// </summary>
        [Input("offlineConfiguration")]
        public Input<Inputs.OfflineConfigurationArgs>? OfflineConfiguration { get; set; }

        /// <summary>
        /// Error message for migration provisioning failure, if any.
        /// </summary>
        [Input("provisioningError")]
        public Input<string>? ProvisioningError { get; set; }

        /// <summary>
        /// Resource Id of the target resource.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Name of the source database.
        /// </summary>
        [Input("sourceDatabaseName")]
        public Input<string>? SourceDatabaseName { get; set; }

        /// <summary>
        /// Source SQL Server connection details.
        /// </summary>
        [Input("sourceSqlConnection")]
        public Input<Inputs.SqlConnectionInformationArgs>? SourceSqlConnection { get; set; }

        /// <summary>
        /// Database collation to be used for the target database.
        /// </summary>
        [Input("targetDatabaseCollation")]
        public Input<string>? TargetDatabaseCollation { get; set; }

        public DatabaseMigrationPropertiesSqlVmArgs()
        {
        }
        public static new DatabaseMigrationPropertiesSqlVmArgs Empty => new DatabaseMigrationPropertiesSqlVmArgs();
    }
}
