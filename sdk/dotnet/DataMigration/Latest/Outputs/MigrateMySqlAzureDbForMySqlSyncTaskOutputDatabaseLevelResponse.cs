// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataMigration.Latest.Outputs
{

    [OutputType]
    public sealed class MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse
    {
        /// <summary>
        /// Number of applied changes
        /// </summary>
        public readonly int AppliedChanges;
        /// <summary>
        /// Number of cdc deletes
        /// </summary>
        public readonly int CdcDeleteCounter;
        /// <summary>
        /// Number of cdc inserts
        /// </summary>
        public readonly int CdcInsertCounter;
        /// <summary>
        /// Number of cdc updates
        /// </summary>
        public readonly int CdcUpdateCounter;
        /// <summary>
        /// Name of the database
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// Migration end time
        /// </summary>
        public readonly string EndedOn;
        /// <summary>
        /// Number of tables completed in full load
        /// </summary>
        public readonly int FullLoadCompletedTables;
        /// <summary>
        /// Number of tables errored in full load
        /// </summary>
        public readonly int FullLoadErroredTables;
        /// <summary>
        /// Number of tables loading in full load
        /// </summary>
        public readonly int FullLoadLoadingTables;
        /// <summary>
        /// Number of tables queued in full load
        /// </summary>
        public readonly int FullLoadQueuedTables;
        /// <summary>
        /// Result identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of incoming changes
        /// </summary>
        public readonly int IncomingChanges;
        /// <summary>
        /// Indicates if initial load (full load) has been completed
        /// </summary>
        public readonly bool InitializationCompleted;
        /// <summary>
        /// CDC apply latency
        /// </summary>
        public readonly int Latency;
        /// <summary>
        /// Migration state that this database is in
        /// </summary>
        public readonly string MigrationState;
        /// <summary>
        /// Result type
        /// </summary>
        public readonly string ResultType;
        /// <summary>
        /// Migration start time
        /// </summary>
        public readonly string StartedOn;

        [OutputConstructor]
        private MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse(
            int appliedChanges,

            int cdcDeleteCounter,

            int cdcInsertCounter,

            int cdcUpdateCounter,

            string databaseName,

            string endedOn,

            int fullLoadCompletedTables,

            int fullLoadErroredTables,

            int fullLoadLoadingTables,

            int fullLoadQueuedTables,

            string id,

            int incomingChanges,

            bool initializationCompleted,

            int latency,

            string migrationState,

            string resultType,

            string startedOn)
        {
            AppliedChanges = appliedChanges;
            CdcDeleteCounter = cdcDeleteCounter;
            CdcInsertCounter = cdcInsertCounter;
            CdcUpdateCounter = cdcUpdateCounter;
            DatabaseName = databaseName;
            EndedOn = endedOn;
            FullLoadCompletedTables = fullLoadCompletedTables;
            FullLoadErroredTables = fullLoadErroredTables;
            FullLoadLoadingTables = fullLoadLoadingTables;
            FullLoadQueuedTables = fullLoadQueuedTables;
            Id = id;
            IncomingChanges = incomingChanges;
            InitializationCompleted = initializationCompleted;
            Latency = latency;
            MigrationState = migrationState;
            ResultType = resultType;
            StartedOn = startedOn;
        }
    }
}
