// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataMigration.Latest.Outputs
{

    [OutputType]
    public sealed class MigrateSqlServerSqlMISyncTaskInputResponse
    {
        /// <summary>
        /// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
        /// </summary>
        public readonly Outputs.AzureActiveDirectoryAppResponse AzureApp;
        /// <summary>
        /// Backup file share information for all selected databases.
        /// </summary>
        public readonly Outputs.FileShareResponse? BackupFileShare;
        /// <summary>
        /// Databases to migrate
        /// </summary>
        public readonly ImmutableArray<Outputs.MigrateSqlServerSqlMIDatabaseInputResponse> SelectedDatabases;
        /// <summary>
        /// Connection information for source SQL Server
        /// </summary>
        public readonly Outputs.SqlConnectionInfoResponse SourceConnectionInfo;
        /// <summary>
        /// Fully qualified resourceId of storage
        /// </summary>
        public readonly string StorageResourceId;
        /// <summary>
        /// Connection information for Azure SQL Database Managed Instance
        /// </summary>
        public readonly Outputs.MiSqlConnectionInfoResponse TargetConnectionInfo;

        [OutputConstructor]
        private MigrateSqlServerSqlMISyncTaskInputResponse(
            Outputs.AzureActiveDirectoryAppResponse azureApp,

            Outputs.FileShareResponse? backupFileShare,

            ImmutableArray<Outputs.MigrateSqlServerSqlMIDatabaseInputResponse> selectedDatabases,

            Outputs.SqlConnectionInfoResponse sourceConnectionInfo,

            string storageResourceId,

            Outputs.MiSqlConnectionInfoResponse targetConnectionInfo)
        {
            AzureApp = azureApp;
            BackupFileShare = backupFileShare;
            SelectedDatabases = selectedDatabases;
            SourceConnectionInfo = sourceConnectionInfo;
            StorageResourceId = storageResourceId;
            TargetConnectionInfo = targetConnectionInfo;
        }
    }
}
