// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20211030Preview.Outputs
{

    /// <summary>
    /// Input for the task that migrates MySQL databases to Azure Database for MySQL for offline migrations
    /// </summary>
    [OutputType]
    public sealed class MigrateMySqlAzureDbForMySqlOfflineTaskInputResponse
    {
        /// <summary>
        /// Setting to set the source server read only
        /// </summary>
        public readonly bool? MakeSourceServerReadOnly;
        /// <summary>
        /// Optional parameters for fine tuning the data transfer rate during migration
        /// </summary>
        public readonly ImmutableDictionary<string, string>? OptionalAgentSettings;
        /// <summary>
        /// Databases to migrate
        /// </summary>
        public readonly ImmutableArray<Outputs.MigrateMySqlAzureDbForMySqlOfflineDatabaseInputResponse> SelectedDatabases;
        /// <summary>
        /// Connection information for source MySQL
        /// </summary>
        public readonly Outputs.MySqlConnectionInfoResponse SourceConnectionInfo;
        /// <summary>
        /// Parameter to specify when the migration started
        /// </summary>
        public readonly string? StartedOn;
        /// <summary>
        /// Connection information for target Azure Database for MySQL
        /// </summary>
        public readonly Outputs.MySqlConnectionInfoResponse TargetConnectionInfo;

        [OutputConstructor]
        private MigrateMySqlAzureDbForMySqlOfflineTaskInputResponse(
            bool? makeSourceServerReadOnly,

            ImmutableDictionary<string, string>? optionalAgentSettings,

            ImmutableArray<Outputs.MigrateMySqlAzureDbForMySqlOfflineDatabaseInputResponse> selectedDatabases,

            Outputs.MySqlConnectionInfoResponse sourceConnectionInfo,

            string? startedOn,

            Outputs.MySqlConnectionInfoResponse targetConnectionInfo)
        {
            MakeSourceServerReadOnly = makeSourceServerReadOnly;
            OptionalAgentSettings = optionalAgentSettings;
            SelectedDatabases = selectedDatabases;
            SourceConnectionInfo = sourceConnectionInfo;
            StartedOn = startedOn;
            TargetConnectionInfo = targetConnectionInfo;
        }
    }
}
