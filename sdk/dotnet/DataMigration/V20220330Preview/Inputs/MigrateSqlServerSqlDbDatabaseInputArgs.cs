// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20220330Preview.Inputs
{

    /// <summary>
    /// Database specific information for SQL to Azure SQL DB migration task inputs
    /// </summary>
    public sealed class MigrateSqlServerSqlDbDatabaseInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// id of the database
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Whether to set database read only before migration
        /// </summary>
        [Input("makeSourceDbReadOnly")]
        public Input<bool>? MakeSourceDbReadOnly { get; set; }

        /// <summary>
        /// Name of the database
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Settings selected for DB schema migration.
        /// </summary>
        [Input("schemaSetting")]
        public Input<object>? SchemaSetting { get; set; }

        [Input("tableMap")]
        private InputMap<string>? _tableMap;

        /// <summary>
        /// Mapping of source to target tables
        /// </summary>
        public InputMap<string> TableMap
        {
            get => _tableMap ?? (_tableMap = new InputMap<string>());
            set => _tableMap = value;
        }

        /// <summary>
        /// Name of target database. Note: Target database will be truncated before starting migration.
        /// </summary>
        [Input("targetDatabaseName")]
        public Input<string>? TargetDatabaseName { get; set; }

        public MigrateSqlServerSqlDbDatabaseInputArgs()
        {
        }
        public static new MigrateSqlServerSqlDbDatabaseInputArgs Empty => new MigrateSqlServerSqlDbDatabaseInputArgs();
    }
}
