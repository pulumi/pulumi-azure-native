// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DataMigration.V20180715Preview.Inputs
{

    /// <summary>
    /// Describes how a MongoDB data migration should be performed
    /// </summary>
    public sealed class MongoDbMigrationSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The RU limit on a CosmosDB target that collections will be temporarily increased to (if lower) during the initial copy of a migration, from 10,000 to 1,000,000, or 0 to use the default boost (which is generally the maximum), or null to not boost the RUs. This setting has no effect on non-CosmosDB targets.
        /// </summary>
        [Input("boostRUs")]
        public Input<int>? BoostRUs { get; set; }

        [Input("databases", required: true)]
        private InputMap<Inputs.MongoDbDatabaseSettingsArgs>? _databases;

        /// <summary>
        /// The databases on the source cluster to migrate to the target. The keys are the names of the databases.
        /// </summary>
        public InputMap<Inputs.MongoDbDatabaseSettingsArgs> Databases
        {
            get => _databases ?? (_databases = new InputMap<Inputs.MongoDbDatabaseSettingsArgs>());
            set => _databases = value;
        }

        /// <summary>
        /// Describes how changes will be replicated from the source to the target. The default is OneTime.
        /// </summary>
        [Input("replication")]
        public Input<string>? Replication { get; set; }

        /// <summary>
        /// Settings used to connect to the source cluster
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.MongoDbConnectionInfoArgs> Source { get; set; } = null!;

        /// <summary>
        /// Settings used to connect to the target cluster
        /// </summary>
        [Input("target", required: true)]
        public Input<Inputs.MongoDbConnectionInfoArgs> Target { get; set; } = null!;

        /// <summary>
        /// Settings used to limit the resource usage of the migration
        /// </summary>
        [Input("throttling")]
        public Input<Inputs.MongoDbThrottlingSettingsArgs>? Throttling { get; set; }

        public MongoDbMigrationSettingsArgs()
        {
        }
    }
}
