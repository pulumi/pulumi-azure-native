// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration
{
    public static class GetProject
    {
        /// <summary>
        /// The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.
        /// 
        /// Uses Azure REST API version 2023-07-15-preview.
        /// 
        /// Other available API versions: 2021-06-30, 2021-10-30-preview, 2022-01-30-preview, 2022-03-30-preview, 2025-03-15-preview, 2025-06-30. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native datamigration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("azure-native:datamigration:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.
        /// 
        /// Uses Azure REST API version 2023-07-15-preview.
        /// 
        /// Other available API versions: 2021-06-30, 2021-10-30-preview, 2022-01-30-preview, 2022-03-30-preview, 2025-03-15-preview, 2025-06-30. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native datamigration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("azure-native:datamigration:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.
        /// 
        /// Uses Azure REST API version 2023-07-15-preview.
        /// 
        /// Other available API versions: 2021-06-30, 2021-10-30-preview, 2022-01-30-preview, 2022-03-30-preview, 2025-03-15-preview, 2025-06-30. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native datamigration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("azure-native:datamigration:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// Name of the project
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the service
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetProjectArgs()
        {
        }
        public static new GetProjectArgs Empty => new GetProjectArgs();
    }

    public sealed class GetProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// Name of the project
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// Name of the service
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
        public static new GetProjectInvokeArgs Empty => new GetProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// Field that defines the Azure active directory application info, used to connect to the target Azure resource
        /// </summary>
        public readonly Outputs.AzureActiveDirectoryAppResponse? AzureAuthenticationInfo;
        /// <summary>
        /// UTC Date and time when project was created
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// List of DatabaseInfo
        /// </summary>
        public readonly ImmutableArray<Outputs.DatabaseInfoResponse> DatabasesInfo;
        /// <summary>
        /// HTTP strong entity tag value. This is ignored if submitted.
        /// </summary>
        public readonly string? Etag;
        public readonly string Id;
        public readonly string? Location;
        public readonly string Name;
        /// <summary>
        /// The project's provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Information for connecting to source
        /// </summary>
        public readonly object? SourceConnectionInfo;
        /// <summary>
        /// Source platform for the project
        /// </summary>
        public readonly string SourcePlatform;
        public readonly Outputs.SystemDataResponse SystemData;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Information for connecting to target
        /// </summary>
        public readonly object? TargetConnectionInfo;
        /// <summary>
        /// Target platform for the project
        /// </summary>
        public readonly string TargetPlatform;
        public readonly string Type;

        [OutputConstructor]
        private GetProjectResult(
            string azureApiVersion,

            Outputs.AzureActiveDirectoryAppResponse? azureAuthenticationInfo,

            string creationTime,

            ImmutableArray<Outputs.DatabaseInfoResponse> databasesInfo,

            string? etag,

            string id,

            string? location,

            string name,

            string provisioningState,

            object? sourceConnectionInfo,

            string sourcePlatform,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            object? targetConnectionInfo,

            string targetPlatform,

            string type)
        {
            AzureApiVersion = azureApiVersion;
            AzureAuthenticationInfo = azureAuthenticationInfo;
            CreationTime = creationTime;
            DatabasesInfo = databasesInfo;
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SourceConnectionInfo = sourceConnectionInfo;
            SourcePlatform = sourcePlatform;
            SystemData = systemData;
            Tags = tags;
            TargetConnectionInfo = targetConnectionInfo;
            TargetPlatform = targetPlatform;
            Type = type;
        }
    }
}
