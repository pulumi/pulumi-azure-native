// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataMigration.V20220130Preview
{
    public static class GetSqlMigrationService
    {
        /// <summary>
        /// Retrieve the Database Migration Service
        /// </summary>
        public static Task<GetSqlMigrationServiceResult> InvokeAsync(GetSqlMigrationServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlMigrationServiceResult>("azure-native:datamigration/v20220130preview:getSqlMigrationService", args ?? new GetSqlMigrationServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Database Migration Service
        /// </summary>
        public static Output<GetSqlMigrationServiceResult> Invoke(GetSqlMigrationServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlMigrationServiceResult>("azure-native:datamigration/v20220130preview:getSqlMigrationService", args ?? new GetSqlMigrationServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlMigrationServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the SQL Migration Service.
        /// </summary>
        [Input("sqlMigrationServiceName", required: true)]
        public string SqlMigrationServiceName { get; set; } = null!;

        public GetSqlMigrationServiceArgs()
        {
        }
        public static new GetSqlMigrationServiceArgs Empty => new GetSqlMigrationServiceArgs();
    }

    public sealed class GetSqlMigrationServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the SQL Migration Service.
        /// </summary>
        [Input("sqlMigrationServiceName", required: true)]
        public Input<string> SqlMigrationServiceName { get; set; } = null!;

        public GetSqlMigrationServiceInvokeArgs()
        {
        }
        public static new GetSqlMigrationServiceInvokeArgs Empty => new GetSqlMigrationServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlMigrationServiceResult
    {
        public readonly string Id;
        /// <summary>
        /// Current state of the Integration runtime.
        /// </summary>
        public readonly string IntegrationRuntimeState;
        public readonly string? Location;
        public readonly string Name;
        /// <summary>
        /// Provisioning state to track the async operation status.
        /// </summary>
        public readonly string ProvisioningState;
        public readonly Outputs.SystemDataResponse SystemData;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetSqlMigrationServiceResult(
            string id,

            string integrationRuntimeState,

            string? location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            IntegrationRuntimeState = integrationRuntimeState;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
