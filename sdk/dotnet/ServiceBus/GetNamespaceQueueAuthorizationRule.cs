// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.ServiceBus
{
    public static class GetNamespaceQueueAuthorizationRule
    {
        public static Task<GetNamespaceQueueAuthorizationRuleResult> InvokeAsync(GetNamespaceQueueAuthorizationRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceQueueAuthorizationRuleResult>("azurerm:servicebus:getNamespaceQueueAuthorizationRule", args ?? new GetNamespaceQueueAuthorizationRuleArgs(), options.WithVersion());
    }


    public sealed class GetNamespaceQueueAuthorizationRuleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The authorization rule name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// The queue name.
        /// </summary>
        [Input("queueName", required: true)]
        public string QueueName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceQueueAuthorizationRuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNamespaceQueueAuthorizationRuleResult
    {
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// AuthorizationRule properties.
        /// </summary>
        public readonly Outputs.SBAuthorizationRuleResponsePropertiesResult Properties;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceQueueAuthorizationRuleResult(
            string name,

            Outputs.SBAuthorizationRuleResponsePropertiesResult properties,

            string type)
        {
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
