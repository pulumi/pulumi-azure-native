// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceBus
{
    /// <summary>
    /// Description of a namespace resource.
    /// Azure REST API version: 2022-01-01-preview. Prior API version in Azure Native 1.x: 2017-04-01
    /// </summary>
    [AzureNativeResourceType("azure-native:servicebus:Namespace")]
    public partial class Namespace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alternate name for namespace
        /// </summary>
        [Output("alternateName")]
        public Output<string?> AlternateName { get; private set; } = null!;

        /// <summary>
        /// The time the namespace was created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// This property disables SAS authentication for the Service Bus namespace.
        /// </summary>
        [Output("disableLocalAuth")]
        public Output<bool?> DisableLocalAuth { get; private set; } = null!;

        /// <summary>
        /// Properties of BYOK Encryption description
        /// </summary>
        [Output("encryption")]
        public Output<Outputs.EncryptionResponse?> Encryption { get; private set; } = null!;

        /// <summary>
        /// Properties of BYOK Identity description
        /// </summary>
        [Output("identity")]
        public Output<Outputs.IdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The Geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier for Azure Insights metrics
        /// </summary>
        [Output("metricId")]
        public Output<string> MetricId { get; private set; } = null!;

        /// <summary>
        /// The minimum TLS version for the cluster to support, e.g. '1.2'
        /// </summary>
        [Output("minimumTlsVersion")]
        public Output<string?> MinimumTlsVersion { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of private endpoint connections.
        /// </summary>
        [Output("privateEndpointConnections")]
        public Output<ImmutableArray<Outputs.PrivateEndpointConnectionResponse>> PrivateEndpointConnections { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the namespace.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// </summary>
        [Output("publicNetworkAccess")]
        public Output<string?> PublicNetworkAccess { get; private set; } = null!;

        /// <summary>
        /// Endpoint you can use to perform Service Bus operations.
        /// </summary>
        [Output("serviceBusEndpoint")]
        public Output<string> ServiceBusEndpoint { get; private set; } = null!;

        /// <summary>
        /// Properties of SKU
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SBSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Status of the namespace.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The system meta data relating to this resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The time the namespace was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.
        /// </summary>
        [Output("zoneRedundant")]
        public Output<bool?> ZoneRedundant { get; private set; } = null!;


        /// <summary>
        /// Create a Namespace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Namespace(string name, NamespaceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:servicebus:Namespace", name, args ?? new NamespaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Namespace(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:servicebus:Namespace", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20140901:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20150801:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20170401:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20180101preview:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20210101preview:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20210601preview:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20211101:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20220101preview:Namespace"},
                    new global::Pulumi.Alias { Type = "azure-native:servicebus/v20221001preview:Namespace"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Namespace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Namespace Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Namespace(name, id, options);
        }
    }

    public sealed class NamespaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alternate name for namespace
        /// </summary>
        [Input("alternateName")]
        public Input<string>? AlternateName { get; set; }

        /// <summary>
        /// This property disables SAS authentication for the Service Bus namespace.
        /// </summary>
        [Input("disableLocalAuth")]
        public Input<bool>? DisableLocalAuth { get; set; }

        /// <summary>
        /// Properties of BYOK Encryption description
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// Properties of BYOK Identity description
        /// </summary>
        [Input("identity")]
        public Input<Inputs.IdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The minimum TLS version for the cluster to support, e.g. '1.2'
        /// </summary>
        [Input("minimumTlsVersion")]
        public InputUnion<string, Pulumi.AzureNative.ServiceBus.TlsVersion>? MinimumTlsVersion { get; set; }

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName")]
        public Input<string>? NamespaceName { get; set; }

        [Input("privateEndpointConnections")]
        private InputList<Inputs.PrivateEndpointConnectionArgs>? _privateEndpointConnections;

        /// <summary>
        /// List of private endpoint connections.
        /// </summary>
        public InputList<Inputs.PrivateEndpointConnectionArgs> PrivateEndpointConnections
        {
            get => _privateEndpointConnections ?? (_privateEndpointConnections = new InputList<Inputs.PrivateEndpointConnectionArgs>());
            set => _privateEndpointConnections = value;
        }

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// </summary>
        [Input("publicNetworkAccess")]
        public InputUnion<string, Pulumi.AzureNative.ServiceBus.PublicNetworkAccess>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Properties of SKU
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SBSkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.
        /// </summary>
        [Input("zoneRedundant")]
        public Input<bool>? ZoneRedundant { get; set; }

        public NamespaceArgs()
        {
            PublicNetworkAccess = "Enabled";
        }
        public static new NamespaceArgs Empty => new NamespaceArgs();
    }
}
