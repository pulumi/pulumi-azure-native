// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.ServiceBus.V20180101Preview
{
    public static class GetNamespace
    {
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("azure-nextgen:servicebus/v20180101preview:getNamespace", args ?? new GetNamespaceArgs(), options.WithVersion());
    }


    public sealed class GetNamespaceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The namespace name
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetNamespaceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// The time the namespace was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Enumerates the possible value of keySource for Encryption
        /// </summary>
        public readonly string? KeySource;
        /// <summary>
        /// Properties of KeyVault
        /// </summary>
        public readonly Outputs.KeyVaultPropertiesResponse? KeyVaultProperties;
        /// <summary>
        /// The Geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Identifier for Azure Insights metrics
        /// </summary>
        public readonly string MetricId;
        /// <summary>
        /// Resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ObjectId from the KeyVault
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// Provisioning state of the namespace.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Endpoint you can use to perform Service Bus operations.
        /// </summary>
        public readonly string ServiceBusEndpoint;
        /// <summary>
        /// Properties of SKU
        /// </summary>
        public readonly Outputs.SBSkuResponse? Sku;
        /// <summary>
        /// Resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// TenantId from the KeyVault
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The time the namespace was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.
        /// </summary>
        public readonly bool? ZoneRedundant;

        [OutputConstructor]
        private GetNamespaceResult(
            string createdAt,

            string? keySource,

            Outputs.KeyVaultPropertiesResponse? keyVaultProperties,

            string location,

            string metricId,

            string name,

            string? principalId,

            string provisioningState,

            string serviceBusEndpoint,

            Outputs.SBSkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string? tenantId,

            string type,

            string updatedAt,

            bool? zoneRedundant)
        {
            CreatedAt = createdAt;
            KeySource = keySource;
            KeyVaultProperties = keyVaultProperties;
            Location = location;
            MetricId = metricId;
            Name = name;
            PrincipalId = principalId;
            ProvisioningState = provisioningState;
            ServiceBusEndpoint = serviceBusEndpoint;
            Sku = sku;
            Tags = tags;
            TenantId = tenantId;
            Type = type;
            UpdatedAt = updatedAt;
            ZoneRedundant = zoneRedundant;
        }
    }
}
