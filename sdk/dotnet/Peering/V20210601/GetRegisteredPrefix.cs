// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Peering.V20210601
{
    public static class GetRegisteredPrefix
    {
        /// <summary>
        /// The customer's prefix that is registered by the peering service provider.
        /// </summary>
        public static Task<GetRegisteredPrefixResult> InvokeAsync(GetRegisteredPrefixArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegisteredPrefixResult>("azure-native:peering/v20210601:getRegisteredPrefix", args ?? new GetRegisteredPrefixArgs(), options.WithDefaults());

        /// <summary>
        /// The customer's prefix that is registered by the peering service provider.
        /// </summary>
        public static Output<GetRegisteredPrefixResult> Invoke(GetRegisteredPrefixInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegisteredPrefixResult>("azure-native:peering/v20210601:getRegisteredPrefix", args ?? new GetRegisteredPrefixInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegisteredPrefixArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the peering.
        /// </summary>
        [Input("peeringName", required: true)]
        public string PeeringName { get; set; } = null!;

        /// <summary>
        /// The name of the registered prefix.
        /// </summary>
        [Input("registeredPrefixName", required: true)]
        public string RegisteredPrefixName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetRegisteredPrefixArgs()
        {
        }
        public static new GetRegisteredPrefixArgs Empty => new GetRegisteredPrefixArgs();
    }

    public sealed class GetRegisteredPrefixInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the peering.
        /// </summary>
        [Input("peeringName", required: true)]
        public Input<string> PeeringName { get; set; } = null!;

        /// <summary>
        /// The name of the registered prefix.
        /// </summary>
        [Input("registeredPrefixName", required: true)]
        public Input<string> RegisteredPrefixName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetRegisteredPrefixInvokeArgs()
        {
        }
        public static new GetRegisteredPrefixInvokeArgs Empty => new GetRegisteredPrefixInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegisteredPrefixResult
    {
        /// <summary>
        /// The error message associated with the validation state, if any.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// The ID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The peering service prefix key that is to be shared with the customer.
        /// </summary>
        public readonly string PeeringServicePrefixKey;
        /// <summary>
        /// The customer's prefix from which traffic originates.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// The prefix validation state.
        /// </summary>
        public readonly string PrefixValidationState;
        /// <summary>
        /// The provisioning state of the resource.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegisteredPrefixResult(
            string errorMessage,

            string id,

            string name,

            string peeringServicePrefixKey,

            string? prefix,

            string prefixValidationState,

            string provisioningState,

            string type)
        {
            ErrorMessage = errorMessage;
            Id = id;
            Name = name;
            PeeringServicePrefixKey = peeringServicePrefixKey;
            Prefix = prefix;
            PrefixValidationState = prefixValidationState;
            ProvisioningState = provisioningState;
            Type = type;
        }
    }
}
