// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceUpdate.V20221001.Outputs
{

    /// <summary>
    /// Remote private endpoint details.
    /// </summary>
    [OutputType]
    public sealed class RemotePrivateEndpointResponse
    {
        /// <summary>
        /// List of connection details.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectionDetailsResponse> ConnectionDetails;
        /// <summary>
        /// Remote endpoint resource ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Original resource ID needed by Microsoft.Network.
        /// </summary>
        public readonly string? ImmutableResourceId;
        /// <summary>
        /// Original subscription ID needed by Microsoft.Network.
        /// </summary>
        public readonly string? ImmutableSubscriptionId;
        /// <summary>
        /// ARM location of the remote private endpoint.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// List of private link service connections that need manual approval.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> ManualPrivateLinkServiceConnections;
        /// <summary>
        /// List of automatically approved private link service connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> PrivateLinkServiceConnections;
        /// <summary>
        /// List of private link service proxies.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateLinkServiceProxyResponse> PrivateLinkServiceProxies;
        /// <summary>
        /// Virtual network traffic tag.
        /// </summary>
        public readonly string? VnetTrafficTag;

        [OutputConstructor]
        private RemotePrivateEndpointResponse(
            ImmutableArray<Outputs.ConnectionDetailsResponse> connectionDetails,

            string? id,

            string? immutableResourceId,

            string? immutableSubscriptionId,

            string? location,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections,

            ImmutableArray<Outputs.PrivateLinkServiceConnectionResponse> privateLinkServiceConnections,

            ImmutableArray<Outputs.PrivateLinkServiceProxyResponse> privateLinkServiceProxies,

            string? vnetTrafficTag)
        {
            ConnectionDetails = connectionDetails;
            Id = id;
            ImmutableResourceId = immutableResourceId;
            ImmutableSubscriptionId = immutableSubscriptionId;
            Location = location;
            ManualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            PrivateLinkServiceConnections = privateLinkServiceConnections;
            PrivateLinkServiceProxies = privateLinkServiceProxies;
            VnetTrafficTag = vnetTrafficTag;
        }
    }
}
