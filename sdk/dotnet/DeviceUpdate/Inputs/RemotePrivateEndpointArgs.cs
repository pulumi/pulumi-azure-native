// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DeviceUpdate.Inputs
{

    /// <summary>
    /// Remote private endpoint details.
    /// </summary>
    public sealed class RemotePrivateEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Remote endpoint resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Original resource ID needed by Microsoft.Network.
        /// </summary>
        [Input("immutableResourceId")]
        public Input<string>? ImmutableResourceId { get; set; }

        /// <summary>
        /// Original subscription ID needed by Microsoft.Network.
        /// </summary>
        [Input("immutableSubscriptionId")]
        public Input<string>? ImmutableSubscriptionId { get; set; }

        /// <summary>
        /// ARM location of the remote private endpoint.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("manualPrivateLinkServiceConnections")]
        private InputList<Inputs.PrivateLinkServiceConnectionArgs>? _manualPrivateLinkServiceConnections;

        /// <summary>
        /// List of private link service connections that need manual approval.
        /// </summary>
        public InputList<Inputs.PrivateLinkServiceConnectionArgs> ManualPrivateLinkServiceConnections
        {
            get => _manualPrivateLinkServiceConnections ?? (_manualPrivateLinkServiceConnections = new InputList<Inputs.PrivateLinkServiceConnectionArgs>());
            set => _manualPrivateLinkServiceConnections = value;
        }

        [Input("privateLinkServiceConnections")]
        private InputList<Inputs.PrivateLinkServiceConnectionArgs>? _privateLinkServiceConnections;

        /// <summary>
        /// List of automatically approved private link service connections.
        /// </summary>
        public InputList<Inputs.PrivateLinkServiceConnectionArgs> PrivateLinkServiceConnections
        {
            get => _privateLinkServiceConnections ?? (_privateLinkServiceConnections = new InputList<Inputs.PrivateLinkServiceConnectionArgs>());
            set => _privateLinkServiceConnections = value;
        }

        [Input("privateLinkServiceProxies")]
        private InputList<Inputs.PrivateLinkServiceProxyArgs>? _privateLinkServiceProxies;

        /// <summary>
        /// List of private link service proxies.
        /// </summary>
        public InputList<Inputs.PrivateLinkServiceProxyArgs> PrivateLinkServiceProxies
        {
            get => _privateLinkServiceProxies ?? (_privateLinkServiceProxies = new InputList<Inputs.PrivateLinkServiceProxyArgs>());
            set => _privateLinkServiceProxies = value;
        }

        /// <summary>
        /// Virtual network traffic tag.
        /// </summary>
        [Input("vnetTrafficTag")]
        public Input<string>? VnetTrafficTag { get; set; }

        public RemotePrivateEndpointArgs()
        {
        }
        public static new RemotePrivateEndpointArgs Empty => new RemotePrivateEndpointArgs();
    }
}
