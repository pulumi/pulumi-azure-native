// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Subscription.V20191001Preview
{
    [Obsolete(@"Version 2019-10-01-preview will be removed in v2 of the provider.")]
    public static class GetSubscriptionAlias
    {
        /// <summary>
        /// Get Alias Subscription.
        /// </summary>
        public static Task<GetSubscriptionAliasResult> InvokeAsync(GetSubscriptionAliasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionAliasResult>("azure-native:subscription/v20191001preview:getSubscriptionAlias", args ?? new GetSubscriptionAliasArgs(), options.WithDefaults());

        /// <summary>
        /// Get Alias Subscription.
        /// </summary>
        public static Output<GetSubscriptionAliasResult> Invoke(GetSubscriptionAliasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionAliasResult>("azure-native:subscription/v20191001preview:getSubscriptionAlias", args ?? new GetSubscriptionAliasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionAliasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
        /// </summary>
        [Input("aliasName", required: true)]
        public string AliasName { get; set; } = null!;

        public GetSubscriptionAliasArgs()
        {
        }
        public static new GetSubscriptionAliasArgs Empty => new GetSubscriptionAliasArgs();
    }

    public sealed class GetSubscriptionAliasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
        /// </summary>
        [Input("aliasName", required: true)]
        public Input<string> AliasName { get; set; } = null!;

        public GetSubscriptionAliasInvokeArgs()
        {
        }
        public static new GetSubscriptionAliasInvokeArgs Empty => new GetSubscriptionAliasInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionAliasResult
    {
        /// <summary>
        /// Fully qualified ID for the alias resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alias ID.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Put Alias response properties.
        /// </summary>
        public readonly Outputs.PutAliasResponsePropertiesResponse Properties;
        /// <summary>
        /// Resource type, Microsoft.Subscription/aliases.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSubscriptionAliasResult(
            string id,

            string name,

            Outputs.PutAliasResponsePropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
