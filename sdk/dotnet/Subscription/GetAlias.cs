// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Subscription
{
    public static class GetAlias
    {
        /// <summary>
        /// Subscription Information with the alias.
        /// API Version: 2020-09-01.
        /// </summary>
        public static Task<GetAliasResult> InvokeAsync(GetAliasArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAliasResult>("azure-native:subscription:getAlias", args ?? new GetAliasArgs(), options.WithDefaults());

        /// <summary>
        /// Subscription Information with the alias.
        /// API Version: 2020-09-01.
        /// </summary>
        public static Output<GetAliasResult> Invoke(GetAliasInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAliasResult>("azure-native:subscription:getAlias", args ?? new GetAliasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAliasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
        /// </summary>
        [Input("aliasName", required: true)]
        public string AliasName { get; set; } = null!;

        public GetAliasArgs()
        {
        }
        public static new GetAliasArgs Empty => new GetAliasArgs();
    }

    public sealed class GetAliasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
        /// </summary>
        [Input("aliasName", required: true)]
        public Input<string> AliasName { get; set; } = null!;

        public GetAliasInvokeArgs()
        {
        }
        public static new GetAliasInvokeArgs Empty => new GetAliasInvokeArgs();
    }


    [OutputType]
    public sealed class GetAliasResult
    {
        /// <summary>
        /// Fully qualified ID for the alias resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alias ID.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Put Alias response properties.
        /// </summary>
        public readonly Outputs.PutAliasResponsePropertiesResponse Properties;
        /// <summary>
        /// Resource type, Microsoft.Subscription/aliases.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAliasResult(
            string id,

            string name,

            Outputs.PutAliasResponsePropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
