// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataLakeAnalytics.Inputs
{

    /// <summary>
    /// The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account.
    /// </summary>
    public sealed class DataLakeAnalyticsAccountPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier associated with this Data Lake Analytics account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("computePolicies", required: true)]
        private InputList<Inputs.ComputePolicyResponseGetArgs>? _computePolicies;

        /// <summary>
        /// The list of compute policies associated with this account.
        /// </summary>
        public InputList<Inputs.ComputePolicyResponseGetArgs> ComputePolicies
        {
            get => _computePolicies ?? (_computePolicies = new InputList<Inputs.ComputePolicyResponseGetArgs>());
            set => _computePolicies = value;
        }

        /// <summary>
        /// The account creation time.
        /// </summary>
        [Input("creationTime", required: true)]
        public Input<string> CreationTime { get; set; } = null!;

        /// <summary>
        /// The commitment tier in use for the current month.
        /// </summary>
        [Input("currentTier", required: true)]
        public Input<string> CurrentTier { get; set; } = null!;

        [Input("dataLakeStoreAccounts", required: true)]
        private InputList<Inputs.DataLakeStoreAccountInformationResponseGetArgs>? _dataLakeStoreAccounts;

        /// <summary>
        /// The list of Data Lake Store accounts associated with this account.
        /// </summary>
        public InputList<Inputs.DataLakeStoreAccountInformationResponseGetArgs> DataLakeStoreAccounts
        {
            get => _dataLakeStoreAccounts ?? (_dataLakeStoreAccounts = new InputList<Inputs.DataLakeStoreAccountInformationResponseGetArgs>());
            set => _dataLakeStoreAccounts = value;
        }

        /// <summary>
        /// The default Data Lake Store account associated with this account.
        /// </summary>
        [Input("defaultDataLakeStoreAccount", required: true)]
        public Input<string> DefaultDataLakeStoreAccount { get; set; } = null!;

        /// <summary>
        /// The full CName endpoint for this account.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        /// </summary>
        [Input("firewallAllowAzureIps", required: true)]
        public Input<string> FirewallAllowAzureIps { get; set; } = null!;

        [Input("firewallRules", required: true)]
        private InputList<Inputs.FirewallRuleResponseGetArgs>? _firewallRules;

        /// <summary>
        /// The list of firewall rules associated with this account.
        /// </summary>
        public InputList<Inputs.FirewallRuleResponseGetArgs> FirewallRules
        {
            get => _firewallRules ?? (_firewallRules = new InputList<Inputs.FirewallRuleResponseGetArgs>());
            set => _firewallRules = value;
        }

        /// <summary>
        /// The current state of the IP address firewall for this account.
        /// </summary>
        [Input("firewallState", required: true)]
        public Input<string> FirewallState { get; set; } = null!;

        /// <summary>
        /// The account last modified time.
        /// </summary>
        [Input("lastModifiedTime", required: true)]
        public Input<string> LastModifiedTime { get; set; } = null!;

        /// <summary>
        /// The maximum supported degree of parallelism for this account.
        /// </summary>
        [Input("maxDegreeOfParallelism", required: true)]
        public Input<int> MaxDegreeOfParallelism { get; set; } = null!;

        /// <summary>
        /// The maximum supported degree of parallelism per job for this account.
        /// </summary>
        [Input("maxDegreeOfParallelismPerJob", required: true)]
        public Input<int> MaxDegreeOfParallelismPerJob { get; set; } = null!;

        /// <summary>
        /// The maximum supported jobs running under the account at the same time.
        /// </summary>
        [Input("maxJobCount", required: true)]
        public Input<int> MaxJobCount { get; set; } = null!;

        /// <summary>
        /// The minimum supported priority per job for this account.
        /// </summary>
        [Input("minPriorityPerJob", required: true)]
        public Input<int> MinPriorityPerJob { get; set; } = null!;

        /// <summary>
        /// The commitment tier for the next month.
        /// </summary>
        [Input("newTier", required: true)]
        public Input<string> NewTier { get; set; } = null!;

        /// <summary>
        /// The provisioning status of the Data Lake Analytics account.
        /// </summary>
        [Input("provisioningState", required: true)]
        public Input<string> ProvisioningState { get; set; } = null!;

        /// <summary>
        /// The number of days that job metadata is retained.
        /// </summary>
        [Input("queryStoreRetention", required: true)]
        public Input<int> QueryStoreRetention { get; set; } = null!;

        /// <summary>
        /// The state of the Data Lake Analytics account.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        [Input("storageAccounts", required: true)]
        private InputList<Inputs.StorageAccountInformationResponseGetArgs>? _storageAccounts;

        /// <summary>
        /// The list of Azure Blob Storage accounts associated with this account.
        /// </summary>
        public InputList<Inputs.StorageAccountInformationResponseGetArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.StorageAccountInformationResponseGetArgs>());
            set => _storageAccounts = value;
        }

        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
        /// </summary>
        [Input("systemMaxDegreeOfParallelism", required: true)]
        public Input<int> SystemMaxDegreeOfParallelism { get; set; } = null!;

        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
        /// </summary>
        [Input("systemMaxJobCount", required: true)]
        public Input<int> SystemMaxJobCount { get; set; } = null!;

        public DataLakeAnalyticsAccountPropertiesResponseGetArgs()
        {
        }
    }
}
