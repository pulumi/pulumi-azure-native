// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataLakeAnalytics.V20191101Preview
{
    public static class GetComputePolicy
    {
        /// <summary>
        /// Gets the specified Data Lake Analytics compute policy.
        /// </summary>
        public static Task<GetComputePolicyResult> InvokeAsync(GetComputePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputePolicyResult>("azure-native:datalakeanalytics/v20191101preview:getComputePolicy", args ?? new GetComputePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified Data Lake Analytics compute policy.
        /// </summary>
        public static Output<GetComputePolicyResult> Invoke(GetComputePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputePolicyResult>("azure-native:datalakeanalytics/v20191101preview:getComputePolicy", args ?? new GetComputePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputePolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Data Lake Analytics account.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the compute policy to retrieve.
        /// </summary>
        [Input("computePolicyName", required: true)]
        public string ComputePolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetComputePolicyArgs()
        {
        }
        public static new GetComputePolicyArgs Empty => new GetComputePolicyArgs();
    }

    public sealed class GetComputePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Data Lake Analytics account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the compute policy to retrieve.
        /// </summary>
        [Input("computePolicyName", required: true)]
        public Input<string> ComputePolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetComputePolicyInvokeArgs()
        {
        }
        public static new GetComputePolicyInvokeArgs Empty => new GetComputePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputePolicyResult
    {
        /// <summary>
        /// The resource identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The maximum degree of parallelism per job this user can use to submit jobs.
        /// </summary>
        public readonly int MaxDegreeOfParallelismPerJob;
        /// <summary>
        /// The minimum priority per job this user can use to submit jobs.
        /// </summary>
        public readonly int MinPriorityPerJob;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The AAD object identifier for the entity to create a policy for.
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// The type of AAD object the object identifier refers to.
        /// </summary>
        public readonly string ObjectType;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetComputePolicyResult(
            string id,

            int maxDegreeOfParallelismPerJob,

            int minPriorityPerJob,

            string name,

            string objectId,

            string objectType,

            string type)
        {
            Id = id;
            MaxDegreeOfParallelismPerJob = maxDegreeOfParallelismPerJob;
            MinPriorityPerJob = minPriorityPerJob;
            Name = name;
            ObjectId = objectId;
            ObjectType = objectType;
            Type = type;
        }
    }
}
