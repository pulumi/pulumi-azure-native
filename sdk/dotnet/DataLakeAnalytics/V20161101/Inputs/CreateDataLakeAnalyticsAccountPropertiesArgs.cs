// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DataLakeAnalytics.V20161101.Inputs
{

    public sealed class CreateDataLakeAnalyticsAccountPropertiesArgs : Pulumi.ResourceArgs
    {
        [Input("computePolicies")]
        private InputList<Inputs.CreateComputePolicyWithAccountParametersArgs>? _computePolicies;

        /// <summary>
        /// The list of compute policies associated with this account.
        /// </summary>
        public InputList<Inputs.CreateComputePolicyWithAccountParametersArgs> ComputePolicies
        {
            get => _computePolicies ?? (_computePolicies = new InputList<Inputs.CreateComputePolicyWithAccountParametersArgs>());
            set => _computePolicies = value;
        }

        [Input("dataLakeStoreAccounts", required: true)]
        private InputList<Inputs.AddDataLakeStoreWithAccountParametersArgs>? _dataLakeStoreAccounts;

        /// <summary>
        /// The list of Data Lake Store accounts associated with this account.
        /// </summary>
        public InputList<Inputs.AddDataLakeStoreWithAccountParametersArgs> DataLakeStoreAccounts
        {
            get => _dataLakeStoreAccounts ?? (_dataLakeStoreAccounts = new InputList<Inputs.AddDataLakeStoreWithAccountParametersArgs>());
            set => _dataLakeStoreAccounts = value;
        }

        /// <summary>
        /// The default Data Lake Store account associated with this account.
        /// </summary>
        [Input("defaultDataLakeStoreAccount", required: true)]
        public Input<string> DefaultDataLakeStoreAccount { get; set; } = null!;

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        /// </summary>
        [Input("firewallAllowAzureIps")]
        public Input<string>? FirewallAllowAzureIps { get; set; }

        [Input("firewallRules")]
        private InputList<Inputs.CreateFirewallRuleWithAccountParametersArgs>? _firewallRules;

        /// <summary>
        /// The list of firewall rules associated with this account.
        /// </summary>
        public InputList<Inputs.CreateFirewallRuleWithAccountParametersArgs> FirewallRules
        {
            get => _firewallRules ?? (_firewallRules = new InputList<Inputs.CreateFirewallRuleWithAccountParametersArgs>());
            set => _firewallRules = value;
        }

        /// <summary>
        /// The current state of the IP address firewall for this account.
        /// </summary>
        [Input("firewallState")]
        public Input<string>? FirewallState { get; set; }

        /// <summary>
        /// The maximum supported degree of parallelism for this account.
        /// </summary>
        [Input("maxDegreeOfParallelism")]
        public Input<int>? MaxDegreeOfParallelism { get; set; }

        /// <summary>
        /// The maximum supported degree of parallelism per job for this account.
        /// </summary>
        [Input("maxDegreeOfParallelismPerJob")]
        public Input<int>? MaxDegreeOfParallelismPerJob { get; set; }

        /// <summary>
        /// The maximum supported jobs running under the account at the same time.
        /// </summary>
        [Input("maxJobCount")]
        public Input<int>? MaxJobCount { get; set; }

        /// <summary>
        /// The minimum supported priority per job for this account.
        /// </summary>
        [Input("minPriorityPerJob")]
        public Input<int>? MinPriorityPerJob { get; set; }

        /// <summary>
        /// The commitment tier for the next month.
        /// </summary>
        [Input("newTier")]
        public Input<string>? NewTier { get; set; }

        /// <summary>
        /// The number of days that job metadata is retained.
        /// </summary>
        [Input("queryStoreRetention")]
        public Input<int>? QueryStoreRetention { get; set; }

        [Input("storageAccounts")]
        private InputList<Inputs.AddStorageAccountWithAccountParametersArgs>? _storageAccounts;

        /// <summary>
        /// The list of Azure Blob Storage accounts associated with this account.
        /// </summary>
        public InputList<Inputs.AddStorageAccountWithAccountParametersArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.AddStorageAccountWithAccountParametersArgs>());
            set => _storageAccounts = value;
        }

        public CreateDataLakeAnalyticsAccountPropertiesArgs()
        {
        }
    }
}
