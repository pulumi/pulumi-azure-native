// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DomainRegistration.V20200901
{
    public static class ListTopLevelDomainAgreements
    {
        /// <summary>
        /// Collection of top-level domain legal agreements.
        /// </summary>
        public static Task<ListTopLevelDomainAgreementsResult> InvokeAsync(ListTopLevelDomainAgreementsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListTopLevelDomainAgreementsResult>("azure-native:domainregistration/v20200901:listTopLevelDomainAgreements", args ?? new ListTopLevelDomainAgreementsArgs(), options.WithDefaults());

        /// <summary>
        /// Collection of top-level domain legal agreements.
        /// </summary>
        public static Output<ListTopLevelDomainAgreementsResult> Invoke(ListTopLevelDomainAgreementsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListTopLevelDomainAgreementsResult>("azure-native:domainregistration/v20200901:listTopLevelDomainAgreements", args ?? new ListTopLevelDomainAgreementsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListTopLevelDomainAgreementsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, then the list of agreements will include agreements for domain transfer as well; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("forTransfer")]
        public bool? ForTransfer { get; set; }

        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, then the list of agreements will include agreements for domain privacy as well; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("includePrivacy")]
        public bool? IncludePrivacy { get; set; }

        /// <summary>
        /// Name of the top-level domain.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public ListTopLevelDomainAgreementsArgs()
        {
        }
    }

    public sealed class ListTopLevelDomainAgreementsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, then the list of agreements will include agreements for domain transfer as well; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("forTransfer")]
        public Input<bool>? ForTransfer { get; set; }

        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, then the list of agreements will include agreements for domain privacy as well; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("includePrivacy")]
        public Input<bool>? IncludePrivacy { get; set; }

        /// <summary>
        /// Name of the top-level domain.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ListTopLevelDomainAgreementsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListTopLevelDomainAgreementsResult
    {
        /// <summary>
        /// Link to next page of resources.
        /// </summary>
        public readonly string NextLink;
        /// <summary>
        /// Collection of resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.TldLegalAgreementResponse> Value;

        [OutputConstructor]
        private ListTopLevelDomainAgreementsResult(
            string nextLink,

            ImmutableArray<Outputs.TldLegalAgreementResponse> value)
        {
            NextLink = nextLink;
            Value = value;
        }
    }
}
