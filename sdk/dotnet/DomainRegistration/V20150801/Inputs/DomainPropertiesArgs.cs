// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.DomainRegistration.V20150801.Inputs
{

    public sealed class DomainPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true then domain will renewed automatically
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// Legal agreement consent
        /// </summary>
        [Input("consent")]
        public Input<Inputs.DomainPurchaseConsentArgs>? Consent { get; set; }

        /// <summary>
        /// Admin contact information
        /// </summary>
        [Input("contactAdmin")]
        public Input<Inputs.ContactArgs>? ContactAdmin { get; set; }

        /// <summary>
        /// Billing contact information
        /// </summary>
        [Input("contactBilling")]
        public Input<Inputs.ContactArgs>? ContactBilling { get; set; }

        /// <summary>
        /// Registrant contact information
        /// </summary>
        [Input("contactRegistrant")]
        public Input<Inputs.ContactArgs>? ContactRegistrant { get; set; }

        /// <summary>
        /// Technical contact information
        /// </summary>
        [Input("contactTech")]
        public Input<Inputs.ContactArgs>? ContactTech { get; set; }

        /// <summary>
        /// Domain creation timestamp
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("domainNotRenewableReasons")]
        private InputList<string>? _domainNotRenewableReasons;

        /// <summary>
        /// Reasons why domain is not renewable
        /// </summary>
        public InputList<string> DomainNotRenewableReasons
        {
            get => _domainNotRenewableReasons ?? (_domainNotRenewableReasons = new InputList<string>());
            set => _domainNotRenewableReasons = value;
        }

        /// <summary>
        /// Domain expiration timestamp
        /// </summary>
        [Input("expirationTime")]
        public Input<string>? ExpirationTime { get; set; }

        /// <summary>
        /// Timestamp when the domain was renewed last time
        /// </summary>
        [Input("lastRenewedTime")]
        public Input<string>? LastRenewedTime { get; set; }

        [Input("managedHostNames")]
        private InputList<Inputs.HostNameArgs>? _managedHostNames;

        /// <summary>
        /// All hostnames derived from the domain and assigned to Azure resources
        /// </summary>
        public InputList<Inputs.HostNameArgs> ManagedHostNames
        {
            get => _managedHostNames ?? (_managedHostNames = new InputList<Inputs.HostNameArgs>());
            set => _managedHostNames = value;
        }

        [Input("nameServers")]
        private InputList<string>? _nameServers;

        /// <summary>
        /// Name servers
        /// </summary>
        public InputList<string> NameServers
        {
            get => _nameServers ?? (_nameServers = new InputList<string>());
            set => _nameServers = value;
        }

        /// <summary>
        /// If true then domain privacy is enabled for this domain
        /// </summary>
        [Input("privacy")]
        public Input<bool>? Privacy { get; set; }

        /// <summary>
        /// Domain provisioning state
        /// </summary>
        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        /// <summary>
        /// If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to
        /// </summary>
        [Input("readyForDnsRecordManagement")]
        public Input<bool>? ReadyForDnsRecordManagement { get; set; }

        /// <summary>
        /// Domain registration status
        /// </summary>
        [Input("registrationStatus")]
        public Input<string>? RegistrationStatus { get; set; }

        public DomainPropertiesArgs()
        {
        }
    }
}
