// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint.V20171111Preview
{
    public static class GetPolicyAssignmentArtifact
    {
        /// <summary>
        /// Get a Blueprint artifact.
        /// </summary>
        public static Task<GetPolicyAssignmentArtifactResult> InvokeAsync(GetPolicyAssignmentArtifactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyAssignmentArtifactResult>("azure-native:blueprint/v20171111preview:getPolicyAssignmentArtifact", args ?? new GetPolicyAssignmentArtifactArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Blueprint artifact.
        /// </summary>
        public static Output<GetPolicyAssignmentArtifactResult> Invoke(GetPolicyAssignmentArtifactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyAssignmentArtifactResult>("azure-native:blueprint/v20171111preview:getPolicyAssignmentArtifact", args ?? new GetPolicyAssignmentArtifactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyAssignmentArtifactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// name of the artifact.
        /// </summary>
        [Input("artifactName", required: true)]
        public string ArtifactName { get; set; } = null!;

        /// <summary>
        /// name of the blueprint.
        /// </summary>
        [Input("blueprintName", required: true)]
        public string BlueprintName { get; set; } = null!;

        /// <summary>
        /// ManagementGroup where blueprint stores.
        /// </summary>
        [Input("managementGroupName", required: true)]
        public string ManagementGroupName { get; set; } = null!;

        public GetPolicyAssignmentArtifactArgs()
        {
        }
        public static new GetPolicyAssignmentArtifactArgs Empty => new GetPolicyAssignmentArtifactArgs();
    }

    public sealed class GetPolicyAssignmentArtifactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// name of the artifact.
        /// </summary>
        [Input("artifactName", required: true)]
        public Input<string> ArtifactName { get; set; } = null!;

        /// <summary>
        /// name of the blueprint.
        /// </summary>
        [Input("blueprintName", required: true)]
        public Input<string> BlueprintName { get; set; } = null!;

        /// <summary>
        /// ManagementGroup where blueprint stores.
        /// </summary>
        [Input("managementGroupName", required: true)]
        public Input<string> ManagementGroupName { get; set; } = null!;

        public GetPolicyAssignmentArtifactInvokeArgs()
        {
        }
        public static new GetPolicyAssignmentArtifactInvokeArgs Empty => new GetPolicyAssignmentArtifactInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyAssignmentArtifactResult
    {
        /// <summary>
        /// Artifacts which need to be deployed before the specified artifact.
        /// </summary>
        public readonly ImmutableArray<string> DependsOn;
        /// <summary>
        /// Multi-line explain this resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// One-liner string explain this resource.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// String Id used to locate any resource on Azure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies the kind of Blueprint artifact.
        /// Expected value is 'policyAssignment'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Parameter values for the policy definition.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterValueBaseResponse> Parameters;
        /// <summary>
        /// Azure resource ID of the policy definition.
        /// </summary>
        public readonly string PolicyDefinitionId;
        /// <summary>
        /// Name of the resource group placeholder to which the policy will be assigned.
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPolicyAssignmentArtifactResult(
            ImmutableArray<string> dependsOn,

            string? description,

            string? displayName,

            string id,

            string kind,

            string name,

            ImmutableDictionary<string, Outputs.ParameterValueBaseResponse> parameters,

            string policyDefinitionId,

            string? resourceGroup,

            string type)
        {
            DependsOn = dependsOn;
            Description = description;
            DisplayName = displayName;
            Id = id;
            Kind = kind;
            Name = name;
            Parameters = parameters;
            PolicyDefinitionId = policyDefinitionId;
            ResourceGroup = resourceGroup;
            Type = type;
        }
    }
}
