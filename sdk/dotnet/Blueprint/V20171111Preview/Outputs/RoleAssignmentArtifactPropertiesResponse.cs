// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint.V20171111Preview.Outputs
{

    /// <summary>
    /// Properties of the Role assignment artifact.
    /// </summary>
    [OutputType]
    public sealed class RoleAssignmentArtifactPropertiesResponse
    {
        /// <summary>
        /// Artifacts which need to be deployed before the specified artifact.
        /// </summary>
        public readonly ImmutableArray<string> DependsOn;
        /// <summary>
        /// Multi-line explain this resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// One-liner string explain this resource.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Array of user or group identities in Azure Active Directory. The roleDefinition will apply to these identity.
        /// </summary>
        public readonly object PrincipalIds;
        /// <summary>
        /// RoleAssignment will be scope to this resourceGroup, if left empty, it would scope to the subscription.
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// Azure resource ID of the RoleDefinition.
        /// </summary>
        public readonly string RoleDefinitionId;

        [OutputConstructor]
        private RoleAssignmentArtifactPropertiesResponse(
            ImmutableArray<string> dependsOn,

            string? description,

            string? displayName,

            object principalIds,

            string? resourceGroup,

            string roleDefinitionId)
        {
            DependsOn = dependsOn;
            Description = description;
            DisplayName = displayName;
            PrincipalIds = principalIds;
            ResourceGroup = resourceGroup;
            RoleDefinitionId = roleDefinitionId;
        }
    }
}
