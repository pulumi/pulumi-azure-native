// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Blueprint.V20181101Preview
{
    public static class GetPublishedBlueprint
    {
        public static Task<GetPublishedBlueprintResult> InvokeAsync(GetPublishedBlueprintArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPublishedBlueprintResult>("azure-nextgen:blueprint/v20181101preview:getPublishedBlueprint", args ?? new GetPublishedBlueprintArgs(), options.WithVersion());
    }


    public sealed class GetPublishedBlueprintArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public string BlueprintName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public string ResourceScope { get; set; } = null!;

        /// <summary>
        /// Version of the published blueprint definition.
        /// </summary>
        [Input("versionId", required: true)]
        public string VersionId { get; set; } = null!;

        public GetPublishedBlueprintArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPublishedBlueprintResult
    {
        /// <summary>
        /// Name of the published blueprint definition.
        /// </summary>
        public readonly string? BlueprintName;
        /// <summary>
        /// Version-specific change notes.
        /// </summary>
        public readonly string? ChangeNotes;
        /// <summary>
        /// Multi-line explain this resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// One-liner string explain this resource.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Parameters required by this blueprint definition.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ParameterDefinitionResponse>? Parameters;
        /// <summary>
        /// Resource group placeholders defined by this blueprint definition.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ResourceGroupDefinitionResponse>? ResourceGroups;
        /// <summary>
        /// Status of the blueprint. This field is readonly.
        /// </summary>
        public readonly Outputs.BlueprintStatusResponse Status;
        /// <summary>
        /// The scope where this blueprint definition can be assigned.
        /// </summary>
        public readonly string? TargetScope;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPublishedBlueprintResult(
            string? blueprintName,

            string? changeNotes,

            string? description,

            string? displayName,

            string name,

            ImmutableDictionary<string, Outputs.ParameterDefinitionResponse>? parameters,

            ImmutableDictionary<string, Outputs.ResourceGroupDefinitionResponse>? resourceGroups,

            Outputs.BlueprintStatusResponse status,

            string? targetScope,

            string type)
        {
            BlueprintName = blueprintName;
            ChangeNotes = changeNotes;
            Description = description;
            DisplayName = displayName;
            Name = name;
            Parameters = parameters;
            ResourceGroups = resourceGroups;
            Status = status;
            TargetScope = targetScope;
            Type = type;
        }
    }
}
