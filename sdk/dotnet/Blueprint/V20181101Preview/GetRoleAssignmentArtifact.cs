// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint.V20181101Preview
{
    public static class GetRoleAssignmentArtifact
    {
        /// <summary>
        /// Get a blueprint artifact.
        /// </summary>
        public static Task<GetRoleAssignmentArtifactResult> InvokeAsync(GetRoleAssignmentArtifactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleAssignmentArtifactResult>("azure-native:blueprint/v20181101preview:getRoleAssignmentArtifact", args ?? new GetRoleAssignmentArtifactArgs(), options.WithDefaults());

        /// <summary>
        /// Get a blueprint artifact.
        /// </summary>
        public static Output<GetRoleAssignmentArtifactResult> Invoke(GetRoleAssignmentArtifactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleAssignmentArtifactResult>("azure-native:blueprint/v20181101preview:getRoleAssignmentArtifact", args ?? new GetRoleAssignmentArtifactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleAssignmentArtifactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint artifact.
        /// </summary>
        [Input("artifactName", required: true)]
        public string ArtifactName { get; set; } = null!;

        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public string BlueprintName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public string ResourceScope { get; set; } = null!;

        public GetRoleAssignmentArtifactArgs()
        {
        }
        public static new GetRoleAssignmentArtifactArgs Empty => new GetRoleAssignmentArtifactArgs();
    }

    public sealed class GetRoleAssignmentArtifactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint artifact.
        /// </summary>
        [Input("artifactName", required: true)]
        public Input<string> ArtifactName { get; set; } = null!;

        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public Input<string> BlueprintName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public Input<string> ResourceScope { get; set; } = null!;

        public GetRoleAssignmentArtifactInvokeArgs()
        {
        }
        public static new GetRoleAssignmentArtifactInvokeArgs Empty => new GetRoleAssignmentArtifactInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleAssignmentArtifactResult
    {
        /// <summary>
        /// String Id used to locate any resource on Azure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies the kind of blueprint artifact.
        /// Expected value is 'roleAssignment'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties for a Role assignment blueprint artifact.
        /// </summary>
        public readonly Outputs.RoleAssignmentArtifactPropertiesResponse Properties;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRoleAssignmentArtifactResult(
            string id,

            string kind,

            string name,

            Outputs.RoleAssignmentArtifactPropertiesResponse properties,

            string type)
        {
            Id = id;
            Kind = kind;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
