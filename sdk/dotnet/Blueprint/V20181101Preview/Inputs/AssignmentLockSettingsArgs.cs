// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Blueprint.V20181101Preview.Inputs
{

    /// <summary>
    /// Defines how resources deployed by a blueprint assignment are locked.
    /// </summary>
    public sealed class AssignmentLockSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("excludedActions")]
        private InputList<string>? _excludedActions;

        /// <summary>
        /// List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted. If the lock mode is set to 'AllResourcesReadOnly', then the following actions are automatically appended to 'excludedActions': '*/read', 'Microsoft.Network/virtualNetworks/subnets/join/action' and 'Microsoft.Authorization/locks/delete'. If the lock mode is set to 'AllResourcesDoNotDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will get removed.
        /// </summary>
        public InputList<string> ExcludedActions
        {
            get => _excludedActions ?? (_excludedActions = new InputList<string>());
            set => _excludedActions = value;
        }

        [Input("excludedPrincipals")]
        private InputList<string>? _excludedPrincipals;

        /// <summary>
        /// List of AAD principals excluded from blueprint locks. Up to 5 principals are permitted.
        /// </summary>
        public InputList<string> ExcludedPrincipals
        {
            get => _excludedPrincipals ?? (_excludedPrincipals = new InputList<string>());
            set => _excludedPrincipals = value;
        }

        /// <summary>
        /// Lock mode.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        public AssignmentLockSettingsArgs()
        {
        }
    }
}
