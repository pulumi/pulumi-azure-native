// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint
{
    public static class GetPublishedBlueprint
    {
        /// <summary>
        /// Get a published version of a blueprint definition.
        /// API Version: 2018-11-01-preview.
        /// </summary>
        public static Task<GetPublishedBlueprintResult> InvokeAsync(GetPublishedBlueprintArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublishedBlueprintResult>("azure-native:blueprint:getPublishedBlueprint", args ?? new GetPublishedBlueprintArgs(), options.WithDefaults());

        /// <summary>
        /// Get a published version of a blueprint definition.
        /// API Version: 2018-11-01-preview.
        /// </summary>
        public static Output<GetPublishedBlueprintResult> Invoke(GetPublishedBlueprintInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublishedBlueprintResult>("azure-native:blueprint:getPublishedBlueprint", args ?? new GetPublishedBlueprintInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublishedBlueprintArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public string BlueprintName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public string ResourceScope { get; set; } = null!;

        /// <summary>
        /// Version of the published blueprint definition.
        /// </summary>
        [Input("versionId", required: true)]
        public string VersionId { get; set; } = null!;

        public GetPublishedBlueprintArgs()
        {
        }
        public static new GetPublishedBlueprintArgs Empty => new GetPublishedBlueprintArgs();
    }

    public sealed class GetPublishedBlueprintInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public Input<string> BlueprintName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public Input<string> ResourceScope { get; set; } = null!;

        /// <summary>
        /// Version of the published blueprint definition.
        /// </summary>
        [Input("versionId", required: true)]
        public Input<string> VersionId { get; set; } = null!;

        public GetPublishedBlueprintInvokeArgs()
        {
        }
        public static new GetPublishedBlueprintInvokeArgs Empty => new GetPublishedBlueprintInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublishedBlueprintResult
    {
        /// <summary>
        /// String Id used to locate any resource on Azure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Detailed properties for published blueprint.
        /// </summary>
        public readonly Outputs.PublishedBlueprintPropertiesResponse Properties;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPublishedBlueprintResult(
            string id,

            string name,

            Outputs.PublishedBlueprintPropertiesResponse properties,

            string type)
        {
            Id = id;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
