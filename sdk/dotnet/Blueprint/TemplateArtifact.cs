// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint
{
    /// <summary>
    /// Blueprint artifact that deploys a Resource Manager template.
    /// API Version: 2018-11-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:blueprint:TemplateArtifact")]
    public partial class TemplateArtifact : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Artifacts which need to be deployed before the specified artifact.
        /// </summary>
        [Output("dependsOn")]
        public Output<ImmutableArray<string>> DependsOn { get; private set; } = null!;

        /// <summary>
        /// Multi-line explain this resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// One-liner string explain this resource.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Specifies the kind of blueprint artifact.
        /// Expected value is 'template'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource Manager template blueprint artifact parameter values.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, Outputs.ParameterValueResponse>> Parameters { get; private set; } = null!;

        /// <summary>
        /// If applicable, the name of the resource group placeholder to which the Resource Manager template blueprint artifact will be deployed.
        /// </summary>
        [Output("resourceGroup")]
        public Output<string?> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The Resource Manager template blueprint artifact body.
        /// </summary>
        [Output("template")]
        public Output<object> Template { get; private set; } = null!;

        /// <summary>
        /// Type of this resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a TemplateArtifact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TemplateArtifact(string name, TemplateArtifactArgs args, CustomResourceOptions? options = null)
            : base("azure-native:blueprint:TemplateArtifact", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private TemplateArtifact(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:blueprint:TemplateArtifact", name, null, MakeResourceOptions(options, id))
        {
        }

        private static TemplateArtifactArgs MakeArgs(TemplateArtifactArgs args)
        {
            args ??= new TemplateArtifactArgs();
            args.Kind = "template";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:blueprint/v20181101preview:TemplateArtifact"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TemplateArtifact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TemplateArtifact Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TemplateArtifact(name, id, options);
        }
    }

    public sealed class TemplateArtifactArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the blueprint artifact.
        /// </summary>
        [Input("artifactName")]
        public Input<string>? ArtifactName { get; set; }

        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public Input<string> BlueprintName { get; set; } = null!;

        [Input("dependsOn")]
        private InputList<string>? _dependsOn;

        /// <summary>
        /// Artifacts which need to be deployed before the specified artifact.
        /// </summary>
        public InputList<string> DependsOn
        {
            get => _dependsOn ?? (_dependsOn = new InputList<string>());
            set => _dependsOn = value;
        }

        /// <summary>
        /// Multi-line explain this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// One-liner string explain this resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Specifies the kind of blueprint artifact.
        /// Expected value is 'template'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        [Input("parameters", required: true)]
        private InputMap<Inputs.ParameterValueArgs>? _parameters;

        /// <summary>
        /// Resource Manager template blueprint artifact parameter values.
        /// </summary>
        public InputMap<Inputs.ParameterValueArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.ParameterValueArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// If applicable, the name of the resource group placeholder to which the Resource Manager template blueprint artifact will be deployed.
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public Input<string> ResourceScope { get; set; } = null!;

        /// <summary>
        /// The Resource Manager template blueprint artifact body.
        /// </summary>
        [Input("template", required: true)]
        public Input<object> Template { get; set; } = null!;

        public TemplateArtifactArgs()
        {
        }
        public static new TemplateArtifactArgs Empty => new TemplateArtifactArgs();
    }
}
