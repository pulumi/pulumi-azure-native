// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Blueprint
{
    public static class GetAssignment
    {
        /// <summary>
        /// Get a blueprint assignment.
        /// API Version: 2018-11-01-preview.
        /// </summary>
        public static Task<GetAssignmentResult> InvokeAsync(GetAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssignmentResult>("azure-native:blueprint:getAssignment", args ?? new GetAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Get a blueprint assignment.
        /// API Version: 2018-11-01-preview.
        /// </summary>
        public static Output<GetAssignmentResult> Invoke(GetAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssignmentResult>("azure-native:blueprint:getAssignment", args ?? new GetAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint assignment.
        /// </summary>
        [Input("assignmentName", required: true)]
        public string AssignmentName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public string ResourceScope { get; set; } = null!;

        public GetAssignmentArgs()
        {
        }
        public static new GetAssignmentArgs Empty => new GetAssignmentArgs();
    }

    public sealed class GetAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the blueprint assignment.
        /// </summary>
        [Input("assignmentName", required: true)]
        public Input<string> AssignmentName { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public Input<string> ResourceScope { get; set; } = null!;

        public GetAssignmentInvokeArgs()
        {
        }
        public static new GetAssignmentInvokeArgs Empty => new GetAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssignmentResult
    {
        /// <summary>
        /// String Id used to locate any resource on Azure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed identity for this blueprint assignment.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse Identity;
        /// <summary>
        /// The location of this blueprint assignment.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Properties for blueprint assignment object.
        /// </summary>
        public readonly Outputs.AssignmentPropertiesResponse Properties;
        /// <summary>
        /// Type of this resource.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAssignmentResult(
            string id,

            Outputs.ManagedServiceIdentityResponse identity,

            string location,

            string name,

            Outputs.AssignmentPropertiesResponse properties,

            string type)
        {
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Properties = properties;
            Type = type;
        }
    }
}
