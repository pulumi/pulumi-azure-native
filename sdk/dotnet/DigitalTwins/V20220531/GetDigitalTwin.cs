// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DigitalTwins.V20220531
{
    public static class GetDigitalTwin
    {
        /// <summary>
        /// The description of the DigitalTwins service.
        /// </summary>
        public static Task<GetDigitalTwinResult> InvokeAsync(GetDigitalTwinArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDigitalTwinResult>("azure-native:digitaltwins/v20220531:getDigitalTwin", args ?? new GetDigitalTwinArgs(), options.WithDefaults());

        /// <summary>
        /// The description of the DigitalTwins service.
        /// </summary>
        public static Output<GetDigitalTwinResult> Invoke(GetDigitalTwinInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDigitalTwinResult>("azure-native:digitaltwins/v20220531:getDigitalTwin", args ?? new GetDigitalTwinInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDigitalTwinArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the DigitalTwinsInstance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the DigitalTwinsInstance.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        public GetDigitalTwinArgs()
        {
        }
    }

    public sealed class GetDigitalTwinInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group that contains the DigitalTwinsInstance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the DigitalTwinsInstance.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public GetDigitalTwinInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDigitalTwinResult
    {
        /// <summary>
        /// Time when DigitalTwinsInstance was created.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Api endpoint to work with DigitalTwinsInstance.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// The resource identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed identity for the DigitalTwinsInstance.
        /// </summary>
        public readonly Outputs.DigitalTwinsIdentityResponse? Identity;
        /// <summary>
        /// Time when DigitalTwinsInstance was updated.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The private endpoint connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Public network access for the DigitalTwinsInstance.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// Metadata pertaining to creation and last modification of the DigitalTwinsInstance.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDigitalTwinResult(
            string createdTime,

            string hostName,

            string id,

            Outputs.DigitalTwinsIdentityResponse? identity,

            string lastUpdatedTime,

            string location,

            string name,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            CreatedTime = createdTime;
            HostName = hostName;
            Id = id;
            Identity = identity;
            LastUpdatedTime = lastUpdatedTime;
            Location = location;
            Name = name;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
