// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.DigitalTwins.V20201201.Outputs
{

    [OutputType]
    public sealed class EventHubResponse
    {
        /// <summary>
        /// Specifies the authentication type being used for connecting to the endpoint.
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
        /// </summary>
        public readonly string? ConnectionStringPrimaryKey;
        /// <summary>
        /// SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
        /// </summary>
        public readonly string? ConnectionStringSecondaryKey;
        /// <summary>
        /// Time when the Endpoint was added to DigitalTwinsInstance.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
        /// </summary>
        public readonly string? DeadLetterSecret;
        /// <summary>
        /// Dead letter storage URL for identity-based authentication.
        /// </summary>
        public readonly string? DeadLetterUri;
        /// <summary>
        /// The type of Digital Twins endpoint
        /// Expected value is 'EventHub'.
        /// </summary>
        public readonly string EndpointType;
        /// <summary>
        /// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
        /// </summary>
        public readonly string? EndpointUri;
        /// <summary>
        /// The EventHub name in the EventHub namespace for identity-based authentication.
        /// </summary>
        public readonly string? EntityPath;
        /// <summary>
        /// The provisioning state.
        /// </summary>
        public readonly string ProvisioningState;

        [OutputConstructor]
        private EventHubResponse(
            string? authenticationType,

            string? connectionStringPrimaryKey,

            string? connectionStringSecondaryKey,

            string createdTime,

            string? deadLetterSecret,

            string? deadLetterUri,

            string endpointType,

            string? endpointUri,

            string? entityPath,

            string provisioningState)
        {
            AuthenticationType = authenticationType;
            ConnectionStringPrimaryKey = connectionStringPrimaryKey;
            ConnectionStringSecondaryKey = connectionStringSecondaryKey;
            CreatedTime = createdTime;
            DeadLetterSecret = deadLetterSecret;
            DeadLetterUri = deadLetterUri;
            EndpointType = endpointType;
            EndpointUri = endpointUri;
            EntityPath = entityPath;
            ProvisioningState = provisioningState;
        }
    }
}
