// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearning.Latest.Inputs
{

    /// <summary>
    /// Properties specific to a Graph based web service.
    /// </summary>
    public sealed class WebServicePropertiesForGraphArgs : Pulumi.ResourceArgs
    {
        [Input("assets")]
        private InputMap<Inputs.AssetItemArgs>? _assets;

        /// <summary>
        /// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
        /// </summary>
        public InputMap<Inputs.AssetItemArgs> Assets
        {
            get => _assets ?? (_assets = new InputMap<Inputs.AssetItemArgs>());
            set => _assets = value;
        }

        /// <summary>
        /// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
        /// </summary>
        [Input("commitmentPlan")]
        public Input<Inputs.CommitmentPlanArgs>? CommitmentPlan { get; set; }

        /// <summary>
        /// The description of the web service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Settings controlling the diagnostics traces collection for the web service.
        /// </summary>
        [Input("diagnostics")]
        public Input<Inputs.DiagnosticsConfigurationArgs>? Diagnostics { get; set; }

        /// <summary>
        /// Defines sample input data for one or more of the service's inputs.
        /// </summary>
        [Input("exampleRequest")]
        public Input<Inputs.ExampleRequestArgs>? ExampleRequest { get; set; }

        /// <summary>
        /// When set to true, sample data is included in the web service's swagger definition. The default value is true.
        /// </summary>
        [Input("exposeSampleData")]
        public Input<bool>? ExposeSampleData { get; set; }

        /// <summary>
        /// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
        /// </summary>
        [Input("input")]
        public Input<Inputs.ServiceInputOutputSpecificationArgs>? Input { get; set; }

        /// <summary>
        /// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
        /// </summary>
        [Input("keys")]
        public Input<Inputs.WebServiceKeysArgs>? Keys { get; set; }

        /// <summary>
        /// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
        /// </summary>
        [Input("machineLearningWorkspace")]
        public Input<Inputs.MachineLearningWorkspaceArgs>? MachineLearningWorkspace { get; set; }

        /// <summary>
        /// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
        /// </summary>
        [Input("output")]
        public Input<Inputs.ServiceInputOutputSpecificationArgs>? Output { get; set; }

        /// <summary>
        /// The definition of the graph package making up this web service.
        /// </summary>
        [Input("package")]
        public Input<Inputs.GraphPackageArgs>? Package { get; set; }

        /// <summary>
        /// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        [Input("parameters")]
        private InputMap<Inputs.WebServiceParameterArgs>? _parameters;

        /// <summary>
        /// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
        /// </summary>
        public InputMap<Inputs.WebServiceParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.WebServiceParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
        /// </summary>
        [Input("payloadsInBlobStorage")]
        public Input<bool>? PayloadsInBlobStorage { get; set; }

        /// <summary>
        /// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
        /// </summary>
        [Input("payloadsLocation")]
        public Input<Inputs.BlobLocationArgs>? PayloadsLocation { get; set; }

        /// <summary>
        /// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// Contains the configuration settings for the web service endpoint.
        /// </summary>
        [Input("realtimeConfiguration")]
        public Input<Inputs.RealtimeConfigurationArgs>? RealtimeConfiguration { get; set; }

        /// <summary>
        /// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
        /// </summary>
        [Input("storageAccount")]
        public Input<Inputs.StorageAccountArgs>? StorageAccount { get; set; }

        /// <summary>
        /// The title of the web service.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public WebServicePropertiesForGraphArgs()
        {
        }
    }
}
