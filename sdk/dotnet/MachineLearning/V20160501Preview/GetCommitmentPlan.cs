// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.MachineLearning.V20160501Preview
{
    public static class GetCommitmentPlan
    {
        public static Task<GetCommitmentPlanResult> InvokeAsync(GetCommitmentPlanArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCommitmentPlanResult>("azure-nextgen:machinelearning/v20160501preview:getCommitmentPlan", args ?? new GetCommitmentPlanArgs(), options.WithVersion());
    }


    public sealed class GetCommitmentPlanArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure ML commitment plan name.
        /// </summary>
        [Input("commitmentPlanName", required: true)]
        public string CommitmentPlanName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCommitmentPlanArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCommitmentPlanResult
    {
        /// <summary>
        /// An entity tag used to enforce optimistic concurrency.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Resource location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The commitment plan properties.
        /// </summary>
        public readonly Outputs.CommitmentPlanPropertiesResponse Properties;
        /// <summary>
        /// The commitment plan SKU.
        /// </summary>
        public readonly Outputs.ResourceSkuResponse? Sku;
        /// <summary>
        /// User-defined tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCommitmentPlanResult(
            string? etag,

            string location,

            string name,

            Outputs.CommitmentPlanPropertiesResponse properties,

            Outputs.ResourceSkuResponse? sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Etag = etag;
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
