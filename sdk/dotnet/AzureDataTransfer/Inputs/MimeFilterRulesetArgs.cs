// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.Inputs
{

    /// <summary>
    /// Rules for filtering files based on Media types (f.k.a MIME types).
    /// </summary>
    public sealed class MimeFilterRulesetArgs : global::Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.MimeTypeFilterArgs>? _filters;

        /// <summary>
        /// Defines the Media types (f.k.a MIME types) and associated file extensions to be filtered. For more detail, please refer to the MimeTypeFiler model.
        /// </summary>
        public InputList<Inputs.MimeTypeFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.MimeTypeFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies whether the filter is an allow list or deny list. For more detail, please refer to the FilterType model.
        /// </summary>
        [Input("type")]
        public InputUnion<string, Pulumi.AzureNative.AzureDataTransfer.FilterType>? Type { get; set; }

        public MimeFilterRulesetArgs()
        {
        }
        public static new MimeFilterRulesetArgs Empty => new MimeFilterRulesetArgs();
    }
}
