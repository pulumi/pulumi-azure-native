// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.Inputs
{

    /// <summary>
    /// Rules for regulating supported archive files (BZip2, Cpio, Deb, GZip, Rpm, Tar, Zip) during data replication. All properties are optional and only the configured options will be applied against archives. As an example, suppose minimumSizeForExpansion is 10 MiB and maximumExpansionSizeLimit is 1 GiB. Then all archives smaller than 10 MiB will be treated as though the archive ruleset is disabled, although other rulesets will apply as usual. Furthermore, all archives at least 10 MiB in size but with a decompressed size greater than 1 GiB will fail the ruleset. All other archives will have their contents extracted and each extracted element will be applied to all rulesets.
    /// </summary>
    public sealed class ArchiveRulesetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Provides the multiplication value for an archive in total based on the initial object being validated. This value takes the root object size and multiplies it by this value to create a maximum. Once this maximum is exceeded, the archive is failed. Used to detect and block archives with suspiciously high compression (e.g., zip bombs).
        /// </summary>
        [Input("maximumCompressionRatioLimit")]
        public Input<double>? MaximumCompressionRatioLimit { get; set; }

        /// <summary>
        /// Optional. The maximum depth of nested archives that can be expanded. Limits how many layers of embedded archives will be processed. Archives exceeding the max limit will be denied for replication.
        /// </summary>
        [Input("maximumDepthLimit")]
        public Input<double>? MaximumDepthLimit { get; set; }

        /// <summary>
        /// Optional. The combined maximum size (in bytes) of all extracted files that an expanded archive is allowed to reach. Archives exceeding the max limit will be denied for replication.
        /// </summary>
        [Input("maximumExpansionSizeLimit")]
        public Input<double>? MaximumExpansionSizeLimit { get; set; }

        /// <summary>
        /// Optional. Default is 0. The minimum archive file size (in bytes) required to trigger expansion during replication. Any archive file size below the configured threshold will skip the rest of the configured rulesets for archives.
        /// </summary>
        [Input("minimumSizeForExpansion")]
        public Input<double>? MinimumSizeForExpansion { get; set; }

        public ArchiveRulesetArgs()
        {
            MinimumSizeForExpansion = 0;
        }
        public static new ArchiveRulesetArgs Empty => new ArchiveRulesetArgs();
    }
}
