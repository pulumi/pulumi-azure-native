// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.Inputs
{

    /// <summary>
    /// Configuration options for the text matching ruleset. For example, if the configuration is to deny "hello world" for partial case-insensitive words then "chello worlds" would get detected and the resulting file would be denied.
    /// </summary>
    public sealed class TextMatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the text matching conditions based on casing. For more detail please refer to the Casing model.
        /// </summary>
        [Input("caseSensitivity", required: true)]
        public InputUnion<string, Pulumi.AzureNative.AzureDataTransfer.Casing> CaseSensitivity { get; set; } = null!;

        /// <summary>
        /// Specifies the text matching condition for text comparison. For more detail please refer to the MatchType model.
        /// </summary>
        [Input("matchType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.AzureDataTransfer.MatchType> MatchType { get; set; } = null!;

        /// <summary>
        /// The word or phrase to match against replicated content. A phrase with spaces will be considered a single substring.
        /// </summary>
        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        public TextMatchArgs()
        {
            CaseSensitivity = "Insensitive";
            MatchType = "Partial";
        }
        public static new TextMatchArgs Empty => new TextMatchArgs();
    }
}
