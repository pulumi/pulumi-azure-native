// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.Outputs
{

    /// <summary>
    /// Properties specific to API Flow Type
    /// </summary>
    [OutputType]
    public sealed class ApiFlowOptionsResponse
    {
        /// <summary>
        /// Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked
        /// </summary>
        public readonly string? ApiMode;
        /// <summary>
        /// Optional field to override the audience of the remote endpoint
        /// </summary>
        public readonly string? AudienceOverride;
        /// <summary>
        /// Unique CNAME to represent the Azure Data Transfer API Flow instance
        /// </summary>
        public readonly string? Cname;
        /// <summary>
        /// Flag for if Azure Data Transfer API Flow should extract the user token
        /// </summary>
        public readonly string? IdentityTranslation;
        /// <summary>
        /// Remote stub app registration Client ID
        /// </summary>
        public readonly string? RemoteCallingModeClientId;
        /// <summary>
        /// Remote host to which communication needs to be made
        /// </summary>
        public readonly string? RemoteEndpoint;
        /// <summary>
        /// Sender's app user assigned Manage Identity client ID
        /// </summary>
        public readonly string? SenderClientId;

        [OutputConstructor]
        private ApiFlowOptionsResponse(
            string? apiMode,

            string? audienceOverride,

            string? cname,

            string? identityTranslation,

            string? remoteCallingModeClientId,

            string? remoteEndpoint,

            string? senderClientId)
        {
            ApiMode = apiMode;
            AudienceOverride = audienceOverride;
            Cname = cname;
            IdentityTranslation = identityTranslation;
            RemoteCallingModeClientId = remoteCallingModeClientId;
            RemoteEndpoint = remoteEndpoint;
            SenderClientId = senderClientId;
        }
    }
}
