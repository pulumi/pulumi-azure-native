// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.Outputs
{

    /// <summary>
    /// Plan for the resource.
    /// </summary>
    [OutputType]
    public sealed class PlanResponse
    {
        /// <summary>
        /// A user defined name of the 3rd Party Artifact that is being procured.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. 
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        /// </summary>
        public readonly string? PromotionCode;
        /// <summary>
        /// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// The version of the desired product/artifact.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private PlanResponse(
            string name,

            string product,

            string? promotionCode,

            string publisher,

            string? version)
        {
            Name = name;
            Product = product;
            PromotionCode = promotionCode;
            Publisher = publisher;
            Version = version;
        }
    }
}
