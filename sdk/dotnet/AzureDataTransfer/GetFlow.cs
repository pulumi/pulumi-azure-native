// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer
{
    public static class GetFlow
    {
        /// <summary>
        /// Gets flow resource.
        /// Azure REST API version: 2023-10-11-preview.
        /// 
        /// Other available API versions: 2024-01-25, 2024-05-07, 2024-09-11, 2024-09-27.
        /// </summary>
        public static Task<GetFlowResult> InvokeAsync(GetFlowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlowResult>("azure-native:azuredatatransfer:getFlow", args ?? new GetFlowArgs(), options.WithDefaults());

        /// <summary>
        /// Gets flow resource.
        /// Azure REST API version: 2023-10-11-preview.
        /// 
        /// Other available API versions: 2024-01-25, 2024-05-07, 2024-09-11, 2024-09-27.
        /// </summary>
        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("azure-native:azuredatatransfer:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the connection that is to be requested.
        /// </summary>
        [Input("connectionName", required: true)]
        public string ConnectionName { get; set; } = null!;

        /// <summary>
        /// The name for the flow that is to be onboarded.
        /// </summary>
        [Input("flowName", required: true)]
        public string FlowName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFlowArgs()
        {
        }
        public static new GetFlowArgs Empty => new GetFlowArgs();
    }

    public sealed class GetFlowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the connection that is to be requested.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// The name for the flow that is to be onboarded.
        /// </summary>
        [Input("flowName", required: true)]
        public Input<string> FlowName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFlowInvokeArgs()
        {
        }
        public static new GetFlowInvokeArgs Empty => new GetFlowInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlowResult
    {
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed identity of the flow resource, if configured.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Plan for the resource.
        /// </summary>
        public readonly Outputs.PlanResponse? Plan;
        /// <summary>
        /// Properties of flow
        /// </summary>
        public readonly Outputs.FlowPropertiesResponse Properties;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFlowResult(
            string id,

            Outputs.ManagedServiceIdentityResponse? identity,

            string location,

            string name,

            Outputs.PlanResponse? plan,

            Outputs.FlowPropertiesResponse properties,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            Plan = plan;
            Properties = properties;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
