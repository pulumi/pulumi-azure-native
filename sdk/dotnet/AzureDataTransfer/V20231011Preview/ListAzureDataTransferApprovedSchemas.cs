// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.V20231011Preview
{
    public static class ListAzureDataTransferApprovedSchemas
    {
        /// <summary>
        /// Lists approved schemas for Azure Data Transfer.
        /// </summary>
        public static Task<ListAzureDataTransferApprovedSchemasResult> InvokeAsync(ListAzureDataTransferApprovedSchemasArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListAzureDataTransferApprovedSchemasResult>("azure-native:azuredatatransfer/v20231011preview:listAzureDataTransferApprovedSchemas", args ?? new ListAzureDataTransferApprovedSchemasArgs(), options.WithDefaults());

        /// <summary>
        /// Lists approved schemas for Azure Data Transfer.
        /// </summary>
        public static Output<ListAzureDataTransferApprovedSchemasResult> Invoke(ListAzureDataTransferApprovedSchemasInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListAzureDataTransferApprovedSchemasResult>("azure-native:azuredatatransfer/v20231011preview:listAzureDataTransferApprovedSchemas", args ?? new ListAzureDataTransferApprovedSchemasInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListAzureDataTransferApprovedSchemasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The direction pipeline to filter approved schemas.
        /// </summary>
        [Input("direction")]
        public Union<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.ListApprovedSchemasDirection>? Direction { get; set; }

        /// <summary>
        /// The name of the pipeline to filter approved schemas.
        /// </summary>
        [Input("pipeline")]
        public string? Pipeline { get; set; }

        public ListAzureDataTransferApprovedSchemasArgs()
        {
        }
        public static new ListAzureDataTransferApprovedSchemasArgs Empty => new ListAzureDataTransferApprovedSchemasArgs();
    }

    public sealed class ListAzureDataTransferApprovedSchemasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The direction pipeline to filter approved schemas.
        /// </summary>
        [Input("direction")]
        public InputUnion<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.ListApprovedSchemasDirection>? Direction { get; set; }

        /// <summary>
        /// The name of the pipeline to filter approved schemas.
        /// </summary>
        [Input("pipeline")]
        public Input<string>? Pipeline { get; set; }

        public ListAzureDataTransferApprovedSchemasInvokeArgs()
        {
        }
        public static new ListAzureDataTransferApprovedSchemasInvokeArgs Empty => new ListAzureDataTransferApprovedSchemasInvokeArgs();
    }


    [OutputType]
    public sealed class ListAzureDataTransferApprovedSchemasResult
    {
        /// <summary>
        /// Schemas array.
        /// </summary>
        public readonly ImmutableArray<Outputs.SchemaResponse> Value;

        [OutputConstructor]
        private ListAzureDataTransferApprovedSchemasResult(ImmutableArray<Outputs.SchemaResponse> value)
        {
            Value = value;
        }
    }
}
