// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.Outputs
{

    /// <summary>
    /// Pending flow object
    /// </summary>
    [OutputType]
    public sealed class PendingFlowResponse
    {
        /// <summary>
        /// The connection associated with this flow
        /// </summary>
        public readonly Outputs.SelectedResourceResponse? Connection;
        /// <summary>
        /// Connection ID of the pending flow.
        /// </summary>
        public readonly string ConnectionId;
        /// <summary>
        /// Transfer Storage Blobs or Tables
        /// </summary>
        public readonly string? DataType;
        /// <summary>
        /// Dataflow GUID associated with this flow
        /// </summary>
        public readonly string FlowId;
        /// <summary>
        /// The flow type for this flow
        /// </summary>
        public readonly string? FlowType;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// AME, PME, or TORUS only! AKV Chain Containing SAS Token
        /// </summary>
        public readonly string? KeyVaultUri;
        /// <summary>
        /// Link status of the current flow
        /// </summary>
        public readonly string LinkStatus;
        /// <summary>
        /// Resource ID of the linked flow
        /// </summary>
        public readonly string LinkedFlowId;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The policies for this flow
        /// </summary>
        public readonly ImmutableArray<string> Policies;
        /// <summary>
        /// Provisioning state of the flow
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The selected schema for this flow
        /// </summary>
        public readonly Outputs.SchemaResponse? Schema;
        /// <summary>
        /// Service Bus Queue ID
        /// </summary>
        public readonly string? ServiceBusQueueId;
        /// <summary>
        /// Status of the current flow
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Storage Account ID
        /// </summary>
        public readonly string? StorageAccountId;
        /// <summary>
        /// Storage Account
        /// </summary>
        public readonly string? StorageAccountName;
        /// <summary>
        /// Storage Container Name
        /// </summary>
        public readonly string? StorageContainerName;
        /// <summary>
        /// Subscription ID of the pending flow.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private PendingFlowResponse(
            Outputs.SelectedResourceResponse? connection,

            string connectionId,

            string? dataType,

            string flowId,

            string? flowType,

            string id,

            string? keyVaultUri,

            string linkStatus,

            string linkedFlowId,

            string location,

            string name,

            ImmutableArray<string> policies,

            string provisioningState,

            Outputs.SchemaResponse? schema,

            string? serviceBusQueueId,

            string? status,

            string? storageAccountId,

            string? storageAccountName,

            string? storageContainerName,

            string subscriptionId,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Connection = connection;
            ConnectionId = connectionId;
            DataType = dataType;
            FlowId = flowId;
            FlowType = flowType;
            Id = id;
            KeyVaultUri = keyVaultUri;
            LinkStatus = linkStatus;
            LinkedFlowId = linkedFlowId;
            Location = location;
            Name = name;
            Policies = policies;
            ProvisioningState = provisioningState;
            Schema = schema;
            ServiceBusQueueId = serviceBusQueueId;
            Status = status;
            StorageAccountId = storageAccountId;
            StorageAccountName = storageAccountName;
            StorageContainerName = storageContainerName;
            SubscriptionId = subscriptionId;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
