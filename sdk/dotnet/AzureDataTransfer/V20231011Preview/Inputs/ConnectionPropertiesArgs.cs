// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.Inputs
{

    /// <summary>
    /// Properties of connection
    /// </summary>
    public sealed class ConnectionPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Direction of data movement
        /// </summary>
        [Input("direction")]
        public InputUnion<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.Direction>? Direction { get; set; }

        [Input("flowTypes")]
        private InputList<Union<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.FlowType>>? _flowTypes;

        /// <summary>
        /// The flow types being requested for this connection
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.FlowType>> FlowTypes
        {
            get => _flowTypes ?? (_flowTypes = new InputList<Union<string, Pulumi.AzureNative.AzureDataTransfer.V20231011Preview.FlowType>>());
            set => _flowTypes = value;
        }

        /// <summary>
        /// Justification for the connection request
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// PIN to link requests together
        /// </summary>
        [Input("pin")]
        public Input<string>? Pin { get; set; }

        /// <summary>
        /// Pipeline to use to transfer data
        /// </summary>
        [Input("pipeline", required: true)]
        public Input<string> Pipeline { get; set; } = null!;

        [Input("policies")]
        private InputList<string>? _policies;

        /// <summary>
        /// The policies for this connection
        /// </summary>
        public InputList<string> Policies
        {
            get => _policies ?? (_policies = new InputList<string>());
            set => _policies = value;
        }

        /// <summary>
        /// The primary contact for this connection request
        /// </summary>
        [Input("primaryContact")]
        public Input<string>? PrimaryContact { get; set; }

        /// <summary>
        /// Subscription ID to link cloud subscriptions together
        /// </summary>
        [Input("remoteSubscriptionId")]
        public Input<string>? RemoteSubscriptionId { get; set; }

        /// <summary>
        /// Requirement ID of the connection
        /// </summary>
        [Input("requirementId")]
        public Input<string>? RequirementId { get; set; }

        [Input("schemas")]
        private InputList<Inputs.SchemaArgs>? _schemas;

        /// <summary>
        /// The schemas for this connection
        /// </summary>
        public InputList<Inputs.SchemaArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.SchemaArgs>());
            set => _schemas = value;
        }

        [Input("secondaryContacts")]
        private InputList<string>? _secondaryContacts;

        /// <summary>
        /// The secondary contacts for this connection request
        /// </summary>
        public InputList<string> SecondaryContacts
        {
            get => _secondaryContacts ?? (_secondaryContacts = new InputList<string>());
            set => _secondaryContacts = value;
        }

        public ConnectionPropertiesArgs()
        {
        }
        public static new ConnectionPropertiesArgs Empty => new ConnectionPropertiesArgs();
    }
}
