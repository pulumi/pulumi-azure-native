// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer
{
    /// <summary>
    /// Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content.
    /// API Version: 2021-11-01-preview.
    /// Previous API Version: 2021-11-01-preview. See https://github.com/pulumi/pulumi-azure-native/discussions/1834 for information on migrating from v1 to v2 of the provider.
    /// </summary>
    [AzureNativeResourceType("azure-native:videoanalyzer:PipelineJob")]
    public partial class PipelineJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An optional description for the pipeline.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Details about the error, in case the pipeline job fails.
        /// </summary>
        [Output("error")]
        public Output<Outputs.PipelineJobErrorResponse> Error { get; private set; } = null!;

        /// <summary>
        /// The date-time by when this pipeline job will be automatically deleted from your account.
        /// </summary>
        [Output("expiration")]
        public Output<string> Expiration { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.ParameterDefinitionResponse>> Parameters { get; private set; } = null!;

        /// <summary>
        /// Current state of the pipeline (read-only).
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
        /// </summary>
        [Output("topologyName")]
        public Output<string> TopologyName { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PipelineJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PipelineJob(string name, PipelineJobArgs args, CustomResourceOptions? options = null)
            : base("azure-native:videoanalyzer:PipelineJob", name, args ?? new PipelineJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PipelineJob(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:videoanalyzer:PipelineJob", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:videoanalyzer/v20211101preview:PipelineJob"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PipelineJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PipelineJob Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PipelineJob(name, id, options);
        }
    }

    public sealed class PipelineJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// An optional description for the pipeline.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("parameters")]
        private InputList<Inputs.ParameterDefinitionArgs>? _parameters;

        /// <summary>
        /// List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
        /// </summary>
        public InputList<Inputs.ParameterDefinitionArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.ParameterDefinitionArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The pipeline job name.
        /// </summary>
        [Input("pipelineJobName")]
        public Input<string>? PipelineJobName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
        /// </summary>
        [Input("topologyName", required: true)]
        public Input<string> TopologyName { get; set; } = null!;

        public PipelineJobArgs()
        {
        }
        public static new PipelineJobArgs Empty => new PipelineJobArgs();
    }
}
