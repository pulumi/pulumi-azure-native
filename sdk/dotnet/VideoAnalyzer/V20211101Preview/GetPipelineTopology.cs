// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview
{
    public static class GetPipelineTopology
    {
        /// <summary>
        /// Retrieves a specific pipeline topology by name. If a topology with that name has been previously created, the call will return the JSON representation of that topology.
        /// </summary>
        public static Task<GetPipelineTopologyResult> InvokeAsync(GetPipelineTopologyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPipelineTopologyResult>("azure-native:videoanalyzer/v20211101preview:getPipelineTopology", args ?? new GetPipelineTopologyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a specific pipeline topology by name. If a topology with that name has been previously created, the call will return the JSON representation of that topology.
        /// </summary>
        public static Output<GetPipelineTopologyResult> Invoke(GetPipelineTopologyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPipelineTopologyResult>("azure-native:videoanalyzer/v20211101preview:getPipelineTopology", args ?? new GetPipelineTopologyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPipelineTopologyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// Pipeline topology unique identifier.
        /// </summary>
        [Input("pipelineTopologyName", required: true)]
        public string PipelineTopologyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPipelineTopologyArgs()
        {
        }
        public static new GetPipelineTopologyArgs Empty => new GetPipelineTopologyArgs();
    }

    public sealed class GetPipelineTopologyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Pipeline topology unique identifier.
        /// </summary>
        [Input("pipelineTopologyName", required: true)]
        public Input<string> PipelineTopologyName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPipelineTopologyInvokeArgs()
        {
        }
        public static new GetPipelineTopologyInvokeArgs Empty => new GetPipelineTopologyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPipelineTopologyResult
    {
        /// <summary>
        /// An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Topology kind.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline.
        /// </summary>
        public readonly ImmutableArray<Outputs.ParameterDeclarationResponse> Parameters;
        /// <summary>
        /// List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        /// </summary>
        public readonly ImmutableArray<Outputs.EncoderProcessorResponse> Processors;
        /// <summary>
        /// List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
        /// </summary>
        public readonly ImmutableArray<Outputs.VideoSinkResponse> Sinks;
        /// <summary>
        /// Describes the properties of a SKU.
        /// </summary>
        public readonly Outputs.SkuResponse Sku;
        /// <summary>
        /// List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.RtspSourceResponse, Outputs.VideoSourceResponse>> Sources;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPipelineTopologyResult(
            string? description,

            string id,

            string kind,

            string name,

            ImmutableArray<Outputs.ParameterDeclarationResponse> parameters,

            ImmutableArray<Outputs.EncoderProcessorResponse> processors,

            ImmutableArray<Outputs.VideoSinkResponse> sinks,

            Outputs.SkuResponse sku,

            ImmutableArray<Union<Outputs.RtspSourceResponse, Outputs.VideoSourceResponse>> sources,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Description = description;
            Id = id;
            Kind = kind;
            Name = name;
            Parameters = parameters;
            Processors = processors;
            Sinks = sinks;
            Sku = sku;
            Sources = sources;
            SystemData = systemData;
            Type = type;
        }
    }
}
