// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview.Outputs
{

    /// <summary>
    /// Encoder processor allows for encoding of the input content. For example, it can used to change the resolution from 4K to 1280x720.
    /// </summary>
    [OutputType]
    public sealed class EncoderProcessorResponse
    {
        /// <summary>
        /// An array of upstream node references within the topology to be used as inputs for this node.
        /// </summary>
        public readonly ImmutableArray<Outputs.NodeInputResponse> Inputs;
        /// <summary>
        /// Node name. Must be unique within the topology.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The encoder preset, which defines the recipe or instructions on how the input content should be processed.
        /// </summary>
        public readonly Union<Outputs.EncoderCustomPresetResponse, Outputs.EncoderSystemPresetResponse> Preset;
        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.VideoAnalyzer.EncoderProcessor'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private EncoderProcessorResponse(
            ImmutableArray<Outputs.NodeInputResponse> inputs,

            string name,

            Union<Outputs.EncoderCustomPresetResponse, Outputs.EncoderSystemPresetResponse> preset,

            string type)
        {
            Inputs = inputs;
            Name = name;
            Preset = preset;
            Type = type;
        }
    }
}
