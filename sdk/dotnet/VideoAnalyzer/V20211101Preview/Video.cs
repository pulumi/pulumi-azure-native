// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview
{
    /// <summary>
    /// Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files.
    /// </summary>
    [AzureNativeResourceType("azure-native:videoanalyzer/v20211101preview:Video")]
    public partial class Video : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Video archival properties.
        /// </summary>
        [Output("archival")]
        public Output<Outputs.VideoArchivalResponse?> Archival { get; private set; } = null!;

        /// <summary>
        /// Set of URLs to the video content.
        /// </summary>
        [Output("contentUrls")]
        public Output<Outputs.VideoContentUrlsResponse> ContentUrls { get; private set; } = null!;

        /// <summary>
        /// Optional video description provided by the user. Value can be up to 2048 characters long.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Video flags contain information about the available video actions and its dynamic properties based on the current video state.
        /// </summary>
        [Output("flags")]
        public Output<Outputs.VideoFlagsResponse> Flags { get; private set; } = null!;

        /// <summary>
        /// Contains information about the video and audio content.
        /// </summary>
        [Output("mediaInfo")]
        public Output<Outputs.VideoMediaInfoResponse?> MediaInfo { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Optional video title provided by the user. Value can be up to 256 characters long.
        /// </summary>
        [Output("title")]
        public Output<string?> Title { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Video resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Video(string name, VideoArgs args, CustomResourceOptions? options = null)
            : base("azure-native:videoanalyzer/v20211101preview:Video", name, args ?? new VideoArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Video(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:videoanalyzer/v20211101preview:Video", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:videoanalyzer:Video"},
                    new global::Pulumi.Alias { Type = "azure-native:videoanalyzer/v20210501preview:Video"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Video resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Video Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Video(name, id, options);
        }
    }

    public sealed class VideoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Video archival properties.
        /// </summary>
        [Input("archival")]
        public Input<Inputs.VideoArchivalArgs>? Archival { get; set; }

        /// <summary>
        /// Optional video description provided by the user. Value can be up to 2048 characters long.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Contains information about the video and audio content.
        /// </summary>
        [Input("mediaInfo")]
        public Input<Inputs.VideoMediaInfoArgs>? MediaInfo { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Optional video title provided by the user. Value can be up to 256 characters long.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The Video name.
        /// </summary>
        [Input("videoName")]
        public Input<string>? VideoName { get; set; }

        public VideoArgs()
        {
        }
        public static new VideoArgs Empty => new VideoArgs();
    }
}
