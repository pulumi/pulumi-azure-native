// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview
{
    public static class GetEdgeModule
    {
        /// <summary>
        /// Retrieves an existing edge module resource with the given name.
        /// </summary>
        public static Task<GetEdgeModuleResult> InvokeAsync(GetEdgeModuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeModuleResult>("azure-native:videoanalyzer/v20211101preview:getEdgeModule", args ?? new GetEdgeModuleArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves an existing edge module resource with the given name.
        /// </summary>
        public static Output<GetEdgeModuleResult> Invoke(GetEdgeModuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeModuleResult>("azure-native:videoanalyzer/v20211101preview:getEdgeModule", args ?? new GetEdgeModuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeModuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The Edge Module name.
        /// </summary>
        [Input("edgeModuleName", required: true)]
        public string EdgeModuleName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetEdgeModuleArgs()
        {
        }
        public static new GetEdgeModuleArgs Empty => new GetEdgeModuleArgs();
    }

    public sealed class GetEdgeModuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The Edge Module name.
        /// </summary>
        [Input("edgeModuleName", required: true)]
        public Input<string> EdgeModuleName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetEdgeModuleInvokeArgs()
        {
        }
        public static new GetEdgeModuleInvokeArgs Empty => new GetEdgeModuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeModuleResult
    {
        /// <summary>
        /// Internal ID generated for the instance of the Video Analyzer edge module.
        /// </summary>
        public readonly string EdgeModuleId;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEdgeModuleResult(
            string edgeModuleId,

            string id,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            EdgeModuleId = edgeModuleId;
            Id = id;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
