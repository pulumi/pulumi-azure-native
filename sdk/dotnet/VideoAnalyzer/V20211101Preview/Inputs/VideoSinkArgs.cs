// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview.Inputs
{

    /// <summary>
    /// Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows for video and audio to be stored as a file, and published via a video resource of type 'file'
    /// </summary>
    public sealed class VideoSinkArgs : Pulumi.ResourceArgs
    {
        [Input("inputs", required: true)]
        private InputList<Inputs.NodeInputArgs>? _inputs;

        /// <summary>
        /// An array of upstream node references within the topology to be used as inputs for this node.
        /// </summary>
        public InputList<Inputs.NodeInputArgs> Inputs
        {
            get => _inputs ?? (_inputs = new InputList<Inputs.NodeInputArgs>());
            set => _inputs = value;
        }

        /// <summary>
        /// Node name. Must be unique within the topology.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.VideoAnalyzer.VideoSink'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Optional video properties to be used in case a new video resource needs to be created on the service.
        /// </summary>
        [Input("videoCreationProperties")]
        public Input<Inputs.VideoCreationPropertiesArgs>? VideoCreationProperties { get; set; }

        /// <summary>
        /// Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived.
        /// </summary>
        [Input("videoName", required: true)]
        public Input<string> VideoName { get; set; } = null!;

        /// <summary>
        /// Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        [Input("videoPublishingOptions")]
        public Input<Inputs.VideoPublishingOptionsArgs>? VideoPublishingOptions { get; set; }

        public VideoSinkArgs()
        {
        }
    }
}
