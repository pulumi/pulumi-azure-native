// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.V20211101Preview
{
    public static class GetVideoAnalyzer
    {
        /// <summary>
        /// Get the details of the specified Video Analyzer account
        /// </summary>
        public static Task<GetVideoAnalyzerResult> InvokeAsync(GetVideoAnalyzerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVideoAnalyzerResult>("azure-native:videoanalyzer/v20211101preview:getVideoAnalyzer", args ?? new GetVideoAnalyzerArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of the specified Video Analyzer account
        /// </summary>
        public static Output<GetVideoAnalyzerResult> Invoke(GetVideoAnalyzerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVideoAnalyzerResult>("azure-native:videoanalyzer/v20211101preview:getVideoAnalyzer", args ?? new GetVideoAnalyzerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVideoAnalyzerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetVideoAnalyzerArgs()
        {
        }
        public static new GetVideoAnalyzerArgs Empty => new GetVideoAnalyzerArgs();
    }

    public sealed class GetVideoAnalyzerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Video Analyzer account name.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetVideoAnalyzerInvokeArgs()
        {
        }
        public static new GetVideoAnalyzerInvokeArgs Empty => new GetVideoAnalyzerInvokeArgs();
    }


    [OutputType]
    public sealed class GetVideoAnalyzerResult
    {
        /// <summary>
        /// The account encryption properties.
        /// </summary>
        public readonly Outputs.AccountEncryptionResponse? Encryption;
        /// <summary>
        /// The endpoints associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.EndpointResponse> Endpoints;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identities associated to the Video Analyzer resource.
        /// </summary>
        public readonly Outputs.VideoAnalyzerIdentityResponse? Identity;
        /// <summary>
        /// The IoT Hubs for this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.IotHubResponse> IotHubs;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network access control for Video Analyzer.
        /// </summary>
        public readonly Outputs.NetworkAccessControlResponse? NetworkAccessControl;
        /// <summary>
        /// Private Endpoint Connections created under Video Analyzer account.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateEndpointConnectionResponse> PrivateEndpointConnections;
        /// <summary>
        /// Provisioning state of the Video Analyzer account.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Whether or not public network access is allowed for resources under the Video Analyzer account.
        /// </summary>
        public readonly string? PublicNetworkAccess;
        /// <summary>
        /// The storage accounts for this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.StorageAccountResponse> StorageAccounts;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetVideoAnalyzerResult(
            Outputs.AccountEncryptionResponse? encryption,

            ImmutableArray<Outputs.EndpointResponse> endpoints,

            string id,

            Outputs.VideoAnalyzerIdentityResponse? identity,

            ImmutableArray<Outputs.IotHubResponse> iotHubs,

            string location,

            string name,

            Outputs.NetworkAccessControlResponse? networkAccessControl,

            ImmutableArray<Outputs.PrivateEndpointConnectionResponse> privateEndpointConnections,

            string provisioningState,

            string? publicNetworkAccess,

            ImmutableArray<Outputs.StorageAccountResponse> storageAccounts,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Encryption = encryption;
            Endpoints = endpoints;
            Id = id;
            Identity = identity;
            IotHubs = iotHubs;
            Location = location;
            Name = name;
            NetworkAccessControl = networkAccessControl;
            PrivateEndpointConnections = privateEndpointConnections;
            ProvisioningState = provisioningState;
            PublicNetworkAccess = publicNetworkAccess;
            StorageAccounts = storageAccounts;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
