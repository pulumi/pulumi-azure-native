// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.VideoAnalyzer.Outputs
{

    /// <summary>
    /// Properties for access validation based on JSON Web Tokens (JWT).
    /// </summary>
    [OutputType]
    public sealed class JwtAuthenticationResponse
    {
        /// <summary>
        /// List of expected token audiences. Token audience is valid if it matches at least one of the given values.
        /// </summary>
        public readonly ImmutableArray<string> Audiences;
        /// <summary>
        /// List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid.
        /// </summary>
        public readonly ImmutableArray<Outputs.TokenClaimResponse> Claims;
        /// <summary>
        /// List of expected token issuers. Token issuer is valid if it matches at least one of the given values.
        /// </summary>
        public readonly ImmutableArray<string> Issuers;
        /// <summary>
        /// List of keys which can be used to validate access tokens. Having multiple keys allow for seamless key rotation of the token signing key. Token signature must match exactly one key.
        /// </summary>
        public readonly ImmutableArray<Union<Outputs.EccTokenKeyResponse, Outputs.RsaTokenKeyResponse>> Keys;
        /// <summary>
        /// The discriminator for derived types.
        /// Expected value is '#Microsoft.VideoAnalyzer.JwtAuthentication'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private JwtAuthenticationResponse(
            ImmutableArray<string> audiences,

            ImmutableArray<Outputs.TokenClaimResponse> claims,

            ImmutableArray<string> issuers,

            ImmutableArray<Union<Outputs.EccTokenKeyResponse, Outputs.RsaTokenKeyResponse>> keys,

            string type)
        {
            Audiences = audiences;
            Claims = claims;
            Issuers = issuers;
            Keys = keys;
            Type = type;
        }
    }
}
