// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.CustomProviders.V20180901Preview
{
    public static class GetAssociation
    {
        public static Task<GetAssociationResult> InvokeAsync(GetAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAssociationResult>("azure-nextgen:customproviders/v20180901preview:getAssociation", args ?? new GetAssociationArgs(), options.WithVersion());
    }


    public sealed class GetAssociationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the association.
        /// </summary>
        [Input("associationName", required: true)]
        public string AssociationName { get; set; } = null!;

        /// <summary>
        /// The scope of the association.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetAssociationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAssociationResult
    {
        /// <summary>
        /// The association name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The provisioning state of the association.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// The REST resource instance of the target resource for this association.
        /// </summary>
        public readonly string? TargetResourceId;
        /// <summary>
        /// The association type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAssociationResult(
            string name,

            string provisioningState,

            string? targetResourceId,

            string type)
        {
            Name = name;
            ProvisioningState = provisioningState;
            TargetResourceId = targetResourceId;
            Type = type;
        }
    }
}
