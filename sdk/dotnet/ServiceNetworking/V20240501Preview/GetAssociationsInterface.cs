// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ServiceNetworking.V20240501Preview
{
    public static class GetAssociationsInterface
    {
        /// <summary>
        /// Get a Association
        /// </summary>
        public static Task<GetAssociationsInterfaceResult> InvokeAsync(GetAssociationsInterfaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssociationsInterfaceResult>("azure-native:servicenetworking/v20240501preview:getAssociationsInterface", args ?? new GetAssociationsInterfaceArgs(), options.WithDefaults());

        /// <summary>
        /// Get a Association
        /// </summary>
        public static Output<GetAssociationsInterfaceResult> Invoke(GetAssociationsInterfaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssociationsInterfaceResult>("azure-native:servicenetworking/v20240501preview:getAssociationsInterface", args ?? new GetAssociationsInterfaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssociationsInterfaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Association
        /// </summary>
        [Input("associationName", required: true)]
        public string AssociationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// traffic controller name for path
        /// </summary>
        [Input("trafficControllerName", required: true)]
        public string TrafficControllerName { get; set; } = null!;

        public GetAssociationsInterfaceArgs()
        {
        }
        public static new GetAssociationsInterfaceArgs Empty => new GetAssociationsInterfaceArgs();
    }

    public sealed class GetAssociationsInterfaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of Association
        /// </summary>
        [Input("associationName", required: true)]
        public Input<string> AssociationName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// traffic controller name for path
        /// </summary>
        [Input("trafficControllerName", required: true)]
        public Input<string> TrafficControllerName { get; set; } = null!;

        public GetAssociationsInterfaceInvokeArgs()
        {
        }
        public static new GetAssociationsInterfaceInvokeArgs Empty => new GetAssociationsInterfaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssociationsInterfaceResult
    {
        /// <summary>
        /// Association Type
        /// </summary>
        public readonly string AssociationType;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provisioning State of Traffic Controller Association Resource
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Association Subnet
        /// </summary>
        public readonly Outputs.AssociationSubnetResponse? Subnet;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAssociationsInterfaceResult(
            string associationType,

            string id,

            string location,

            string name,

            string provisioningState,

            Outputs.AssociationSubnetResponse? subnet,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AssociationType = associationType;
            Id = id;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            Subnet = subnet;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
