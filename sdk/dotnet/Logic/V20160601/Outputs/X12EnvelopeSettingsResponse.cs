// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20160601.Outputs
{

    [OutputType]
    public sealed class X12EnvelopeSettingsResponse
    {
        /// <summary>
        /// The controls standards id.
        /// </summary>
        public readonly int ControlStandardsId;
        /// <summary>
        /// The control version number.
        /// </summary>
        public readonly string ControlVersionNumber;
        /// <summary>
        /// The value indicating whether to enable default group headers.
        /// </summary>
        public readonly bool EnableDefaultGroupHeaders;
        /// <summary>
        /// The functional group id.
        /// </summary>
        public readonly string? FunctionalGroupId;
        /// <summary>
        /// The group control number lower bound.
        /// </summary>
        public readonly int GroupControlNumberLowerBound;
        /// <summary>
        /// The group control number upper bound.
        /// </summary>
        public readonly int GroupControlNumberUpperBound;
        /// <summary>
        /// The group header agency code.
        /// </summary>
        public readonly string GroupHeaderAgencyCode;
        /// <summary>
        /// The group header date format.
        /// </summary>
        public readonly string GroupHeaderDateFormat;
        /// <summary>
        /// The group header time format.
        /// </summary>
        public readonly string GroupHeaderTimeFormat;
        /// <summary>
        /// The group header version.
        /// </summary>
        public readonly string GroupHeaderVersion;
        /// <summary>
        /// The interchange  control number lower bound.
        /// </summary>
        public readonly int InterchangeControlNumberLowerBound;
        /// <summary>
        /// The interchange  control number upper bound.
        /// </summary>
        public readonly int InterchangeControlNumberUpperBound;
        /// <summary>
        /// The value indicating whether to overwrite existing transaction set control number.
        /// </summary>
        public readonly bool OverwriteExistingTransactionSetControlNumber;
        /// <summary>
        /// The receiver application id.
        /// </summary>
        public readonly string ReceiverApplicationId;
        /// <summary>
        /// The value indicating whether to rollover group control number.
        /// </summary>
        public readonly bool RolloverGroupControlNumber;
        /// <summary>
        /// The value indicating whether to rollover interchange control number.
        /// </summary>
        public readonly bool RolloverInterchangeControlNumber;
        /// <summary>
        /// The value indicating whether to rollover transaction set control number.
        /// </summary>
        public readonly bool RolloverTransactionSetControlNumber;
        /// <summary>
        /// The sender application id.
        /// </summary>
        public readonly string SenderApplicationId;
        /// <summary>
        /// The transaction set control number lower bound.
        /// </summary>
        public readonly int TransactionSetControlNumberLowerBound;
        /// <summary>
        /// The transaction set control number prefix.
        /// </summary>
        public readonly string? TransactionSetControlNumberPrefix;
        /// <summary>
        /// The transaction set control number suffix.
        /// </summary>
        public readonly string? TransactionSetControlNumberSuffix;
        /// <summary>
        /// The transaction set control number upper bound.
        /// </summary>
        public readonly int TransactionSetControlNumberUpperBound;
        /// <summary>
        /// The usage indicator.
        /// </summary>
        public readonly string UsageIndicator;
        /// <summary>
        /// The value indicating whether to use control standards id as repetition character.
        /// </summary>
        public readonly bool UseControlStandardsIdAsRepetitionCharacter;

        [OutputConstructor]
        private X12EnvelopeSettingsResponse(
            int controlStandardsId,

            string controlVersionNumber,

            bool enableDefaultGroupHeaders,

            string? functionalGroupId,

            int groupControlNumberLowerBound,

            int groupControlNumberUpperBound,

            string groupHeaderAgencyCode,

            string groupHeaderDateFormat,

            string groupHeaderTimeFormat,

            string groupHeaderVersion,

            int interchangeControlNumberLowerBound,

            int interchangeControlNumberUpperBound,

            bool overwriteExistingTransactionSetControlNumber,

            string receiverApplicationId,

            bool rolloverGroupControlNumber,

            bool rolloverInterchangeControlNumber,

            bool rolloverTransactionSetControlNumber,

            string senderApplicationId,

            int transactionSetControlNumberLowerBound,

            string? transactionSetControlNumberPrefix,

            string? transactionSetControlNumberSuffix,

            int transactionSetControlNumberUpperBound,

            string usageIndicator,

            bool useControlStandardsIdAsRepetitionCharacter)
        {
            ControlStandardsId = controlStandardsId;
            ControlVersionNumber = controlVersionNumber;
            EnableDefaultGroupHeaders = enableDefaultGroupHeaders;
            FunctionalGroupId = functionalGroupId;
            GroupControlNumberLowerBound = groupControlNumberLowerBound;
            GroupControlNumberUpperBound = groupControlNumberUpperBound;
            GroupHeaderAgencyCode = groupHeaderAgencyCode;
            GroupHeaderDateFormat = groupHeaderDateFormat;
            GroupHeaderTimeFormat = groupHeaderTimeFormat;
            GroupHeaderVersion = groupHeaderVersion;
            InterchangeControlNumberLowerBound = interchangeControlNumberLowerBound;
            InterchangeControlNumberUpperBound = interchangeControlNumberUpperBound;
            OverwriteExistingTransactionSetControlNumber = overwriteExistingTransactionSetControlNumber;
            ReceiverApplicationId = receiverApplicationId;
            RolloverGroupControlNumber = rolloverGroupControlNumber;
            RolloverInterchangeControlNumber = rolloverInterchangeControlNumber;
            RolloverTransactionSetControlNumber = rolloverTransactionSetControlNumber;
            SenderApplicationId = senderApplicationId;
            TransactionSetControlNumberLowerBound = transactionSetControlNumberLowerBound;
            TransactionSetControlNumberPrefix = transactionSetControlNumberPrefix;
            TransactionSetControlNumberSuffix = transactionSetControlNumberSuffix;
            TransactionSetControlNumberUpperBound = transactionSetControlNumberUpperBound;
            UsageIndicator = usageIndicator;
            UseControlStandardsIdAsRepetitionCharacter = useControlStandardsIdAsRepetitionCharacter;
        }
    }
}
