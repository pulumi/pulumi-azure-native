// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Logic.Outputs
{

    [OutputType]
    public sealed class IntegrationAccountAgreementPropertiesResponseResult
    {
        /// <summary>
        /// The agreement type.
        /// </summary>
        public readonly string AgreementType;
        /// <summary>
        /// The changed time.
        /// </summary>
        public readonly string ChangedTime;
        /// <summary>
        /// The agreement content.
        /// </summary>
        public readonly Outputs.AgreementContentResponseResult Content;
        /// <summary>
        /// The created time.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// The business identity of the guest partner.
        /// </summary>
        public readonly Outputs.BusinessIdentityResponseResult GuestIdentity;
        /// <summary>
        /// The integration account partner that is set as guest partner for this agreement.
        /// </summary>
        public readonly string GuestPartner;
        /// <summary>
        /// The business identity of the host partner.
        /// </summary>
        public readonly Outputs.BusinessIdentityResponseResult HostIdentity;
        /// <summary>
        /// The integration account partner that is set as host partner for this agreement.
        /// </summary>
        public readonly string HostPartner;
        /// <summary>
        /// The metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;

        [OutputConstructor]
        private IntegrationAccountAgreementPropertiesResponseResult(
            string agreementType,

            string changedTime,

            Outputs.AgreementContentResponseResult content,

            string createdTime,

            Outputs.BusinessIdentityResponseResult guestIdentity,

            string guestPartner,

            Outputs.BusinessIdentityResponseResult hostIdentity,

            string hostPartner,

            ImmutableDictionary<string, string>? metadata)
        {
            AgreementType = agreementType;
            ChangedTime = changedTime;
            Content = content;
            CreatedTime = createdTime;
            GuestIdentity = guestIdentity;
            GuestPartner = guestPartner;
            HostIdentity = hostIdentity;
            HostPartner = hostPartner;
            Metadata = metadata;
        }
    }
}
