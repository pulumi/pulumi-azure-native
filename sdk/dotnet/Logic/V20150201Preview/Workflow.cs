// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20150201Preview
{
    public partial class Workflow : Pulumi.CustomResource
    {
        /// <summary>
        /// Gets the access endpoint.
        /// </summary>
        [Output("accessEndpoint")]
        public Output<string> AccessEndpoint { get; private set; } = null!;

        /// <summary>
        /// Gets the changed time.
        /// </summary>
        [Output("changedTime")]
        public Output<string> ChangedTime { get; private set; } = null!;

        /// <summary>
        /// Gets the created time.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the definition.
        /// </summary>
        [Output("definition")]
        public Output<object?> Definition { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the link to definition.
        /// </summary>
        [Output("definitionLink")]
        public Output<Outputs.ContentLinkResponse?> DefinitionLink { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Gets the resource name.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the parameters.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, Outputs.WorkflowParameterResponse>?> Parameters { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the link to parameters.
        /// </summary>
        [Output("parametersLink")]
        public Output<Outputs.ContentLinkResponse?> ParametersLink { get; private set; } = null!;

        /// <summary>
        /// Gets the provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the state.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Gets the resource type.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// Gets the version.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Workflow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workflow(string name, WorkflowArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:logic/v20150201preview:Workflow", name, args ?? new WorkflowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workflow(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:logic/v20150201preview:Workflow", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:logic/latest:Workflow"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20160601:Workflow"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20180701preview:Workflow"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20190501:Workflow"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workflow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workflow Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Workflow(name, id, options);
        }
    }

    public sealed class WorkflowArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the definition.
        /// </summary>
        [Input("definition")]
        public Input<object>? Definition { get; set; }

        /// <summary>
        /// Gets or sets the link to definition.
        /// </summary>
        [Input("definitionLink")]
        public Input<Inputs.ContentLinkArgs>? DefinitionLink { get; set; }

        /// <summary>
        /// Gets or sets the resource id.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Gets or sets the resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Gets the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputMap<Inputs.WorkflowParameterArgs>? _parameters;

        /// <summary>
        /// Gets or sets the parameters.
        /// </summary>
        public InputMap<Inputs.WorkflowParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<Inputs.WorkflowParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Gets or sets the link to parameters.
        /// </summary>
        [Input("parametersLink")]
        public Input<Inputs.ContentLinkArgs>? ParametersLink { get; set; }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        /// <summary>
        /// Gets or sets the state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Gets the resource type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The workflow name.
        /// </summary>
        [Input("workflowName", required: true)]
        public Input<string> WorkflowName { get; set; } = null!;

        public WorkflowArgs()
        {
        }
    }
}
