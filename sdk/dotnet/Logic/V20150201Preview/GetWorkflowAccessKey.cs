// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20150201Preview
{
    public static class GetWorkflowAccessKey
    {
        public static Task<GetWorkflowAccessKeyResult> InvokeAsync(GetWorkflowAccessKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowAccessKeyResult>("azure-nextgen:logic/v20150201preview:getWorkflowAccessKey", args ?? new GetWorkflowAccessKeyArgs(), options.WithVersion());
    }


    public sealed class GetWorkflowAccessKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The workflow access key name.
        /// </summary>
        [Input("accessKeyName", required: true)]
        public string AccessKeyName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workflow name.
        /// </summary>
        [Input("workflowName", required: true)]
        public string WorkflowName { get; set; } = null!;

        public GetWorkflowAccessKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkflowAccessKeyResult
    {
        /// <summary>
        /// Gets the workflow access key name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets or sets the not-after time.
        /// </summary>
        public readonly string? NotAfter;
        /// <summary>
        /// Gets or sets the not-before time.
        /// </summary>
        public readonly string? NotBefore;
        /// <summary>
        /// Gets the workflow access key type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkflowAccessKeyResult(
            string name,

            string? notAfter,

            string? notBefore,

            string type)
        {
            Name = name;
            NotAfter = notAfter;
            NotBefore = notBefore;
            Type = type;
        }
    }
}
