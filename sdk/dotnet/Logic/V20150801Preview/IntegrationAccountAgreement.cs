// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20150801Preview
{
    public partial class IntegrationAccountAgreement : Pulumi.CustomResource
    {
        /// <summary>
        /// The agreement type.
        /// </summary>
        [Output("agreementType")]
        public Output<string?> AgreementType { get; private set; } = null!;

        /// <summary>
        /// The changed time.
        /// </summary>
        [Output("changedTime")]
        public Output<string> ChangedTime { get; private set; } = null!;

        /// <summary>
        /// The agreement content.
        /// </summary>
        [Output("content")]
        public Output<Outputs.AgreementContentResponse?> Content { get; private set; } = null!;

        /// <summary>
        /// The created time.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// The guest identity.
        /// </summary>
        [Output("guestIdentity")]
        public Output<Outputs.BusinessIdentityResponse?> GuestIdentity { get; private set; } = null!;

        /// <summary>
        /// The guest partner.
        /// </summary>
        [Output("guestPartner")]
        public Output<string?> GuestPartner { get; private set; } = null!;

        /// <summary>
        /// The host identity.
        /// </summary>
        [Output("hostIdentity")]
        public Output<Outputs.BusinessIdentityResponse?> HostIdentity { get; private set; } = null!;

        /// <summary>
        /// The host partner.
        /// </summary>
        [Output("hostPartner")]
        public Output<string?> HostPartner { get; private set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The metadata.
        /// </summary>
        [Output("metadata")]
        public Output<object?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationAccountAgreement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationAccountAgreement(string name, IntegrationAccountAgreementArgs args, CustomResourceOptions? options = null)
            : base("azure-nextgen:logic/v20150801preview:IntegrationAccountAgreement", name, args ?? new IntegrationAccountAgreementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationAccountAgreement(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-nextgen:logic/v20150801preview:IntegrationAccountAgreement", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-nextgen:logic/latest:IntegrationAccountAgreement"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20160601:IntegrationAccountAgreement"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20180701preview:IntegrationAccountAgreement"},
                    new Pulumi.Alias { Type = "azure-nextgen:logic/v20190501:IntegrationAccountAgreement"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationAccountAgreement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationAccountAgreement Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IntegrationAccountAgreement(name, id, options);
        }
    }

    public sealed class IntegrationAccountAgreementArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The integration account agreement name.
        /// </summary>
        [Input("agreementName", required: true)]
        public Input<string> AgreementName { get; set; } = null!;

        /// <summary>
        /// The agreement type.
        /// </summary>
        [Input("agreementType")]
        public Input<string>? AgreementType { get; set; }

        /// <summary>
        /// The agreement content.
        /// </summary>
        [Input("content")]
        public Input<Inputs.AgreementContentArgs>? Content { get; set; }

        /// <summary>
        /// The guest identity.
        /// </summary>
        [Input("guestIdentity")]
        public Input<Inputs.BusinessIdentityArgs>? GuestIdentity { get; set; }

        /// <summary>
        /// The guest partner.
        /// </summary>
        [Input("guestPartner")]
        public Input<string>? GuestPartner { get; set; }

        /// <summary>
        /// The host identity.
        /// </summary>
        [Input("hostIdentity")]
        public Input<Inputs.BusinessIdentityArgs>? HostIdentity { get; set; }

        /// <summary>
        /// The host partner.
        /// </summary>
        [Input("hostPartner")]
        public Input<string>? HostPartner { get; set; }

        /// <summary>
        /// The resource id.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The integration account name.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public Input<string> IntegrationAccountName { get; set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The metadata.
        /// </summary>
        [Input("metadata")]
        public Input<object>? Metadata { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public IntegrationAccountAgreementArgs()
        {
        }
    }
}
