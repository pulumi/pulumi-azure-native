// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20150801Preview.Inputs
{

    public sealed class EdifactAcknowledgementSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The acknowledgement control number lower bound.
        /// </summary>
        [Input("acknowledgementControlNumberLowerBound")]
        public Input<int>? AcknowledgementControlNumberLowerBound { get; set; }

        /// <summary>
        /// The acknowledgement control number prefix.
        /// </summary>
        [Input("acknowledgementControlNumberPrefix")]
        public Input<string>? AcknowledgementControlNumberPrefix { get; set; }

        /// <summary>
        /// The acknowledgement control number suffix.
        /// </summary>
        [Input("acknowledgementControlNumberSuffix")]
        public Input<string>? AcknowledgementControlNumberSuffix { get; set; }

        /// <summary>
        /// The acknowledgement control number upper bound.
        /// </summary>
        [Input("acknowledgementControlNumberUpperBound")]
        public Input<int>? AcknowledgementControlNumberUpperBound { get; set; }

        /// <summary>
        /// The value indicating whether to batch functional acknowledgements.
        /// </summary>
        [Input("batchFunctionalAcknowledgements")]
        public Input<bool>? BatchFunctionalAcknowledgements { get; set; }

        /// <summary>
        /// The value indicating whether to batch the technical acknowledgements.
        /// </summary>
        [Input("batchTechnicalAcknowledgements")]
        public Input<bool>? BatchTechnicalAcknowledgements { get; set; }

        /// <summary>
        /// The value indicating whether functional acknowledgement is needed.
        /// </summary>
        [Input("needFunctionalAcknowledgement")]
        public Input<bool>? NeedFunctionalAcknowledgement { get; set; }

        /// <summary>
        /// The value indicating whether a loop is needed for valid messages.
        /// </summary>
        [Input("needLoopForValidMessages")]
        public Input<bool>? NeedLoopForValidMessages { get; set; }

        /// <summary>
        /// The value indicating whether technical acknowledgement is needed.
        /// </summary>
        [Input("needTechnicalAcknowledgement")]
        public Input<bool>? NeedTechnicalAcknowledgement { get; set; }

        /// <summary>
        /// The value indicating whether to rollover acknowledgement control number.
        /// </summary>
        [Input("rolloverAcknowledgementControlNumber")]
        public Input<bool>? RolloverAcknowledgementControlNumber { get; set; }

        /// <summary>
        /// The value indicating whether to send synchronous acknowledgement.
        /// </summary>
        [Input("sendSynchronousAcknowledgement")]
        public Input<bool>? SendSynchronousAcknowledgement { get; set; }

        public EdifactAcknowledgementSettingsArgs()
        {
        }
    }
}
