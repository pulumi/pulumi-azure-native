// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20150801Preview.Inputs
{

    public sealed class AS2SecuritySettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The value indicating whether to enable NRR for inbound decoded messages.
        /// </summary>
        [Input("enableNrrForInboundDecodedMessages")]
        public Input<bool>? EnableNrrForInboundDecodedMessages { get; set; }

        /// <summary>
        /// The value indicating whether to enable NRR for inbound encoded messages.
        /// </summary>
        [Input("enableNrrForInboundEncodedMessages")]
        public Input<bool>? EnableNrrForInboundEncodedMessages { get; set; }

        /// <summary>
        /// The value indicating whether to enable NRR for inbound MDN.
        /// </summary>
        [Input("enableNrrForInboundMdn")]
        public Input<bool>? EnableNrrForInboundMdn { get; set; }

        /// <summary>
        /// The value indicating whether to enable NRR for outbound decoded messages.
        /// </summary>
        [Input("enableNrrForOutboundDecodedMessages")]
        public Input<bool>? EnableNrrForOutboundDecodedMessages { get; set; }

        /// <summary>
        /// The value indicating whether to enable NRR for outbound encoded messages.
        /// </summary>
        [Input("enableNrrForOutboundEncodedMessages")]
        public Input<bool>? EnableNrrForOutboundEncodedMessages { get; set; }

        /// <summary>
        /// The value indicating whether to enable NRR for outbound MDN.
        /// </summary>
        [Input("enableNrrForOutboundMdn")]
        public Input<bool>? EnableNrrForOutboundMdn { get; set; }

        /// <summary>
        /// The name of the encryption certificate.
        /// </summary>
        [Input("encryptionCertificateName")]
        public Input<string>? EncryptionCertificateName { get; set; }

        /// <summary>
        /// The value indicating whether to send or request a MDN.
        /// </summary>
        [Input("overrideGroupSigningCertificate")]
        public Input<bool>? OverrideGroupSigningCertificate { get; set; }

        /// <summary>
        /// The name of the signing certificate.
        /// </summary>
        [Input("signingCertificateName")]
        public Input<string>? SigningCertificateName { get; set; }

        public AS2SecuritySettingsArgs()
        {
        }
    }
}
