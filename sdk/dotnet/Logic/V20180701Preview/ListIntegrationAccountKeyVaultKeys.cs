// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Logic.V20180701Preview
{
    public static class ListIntegrationAccountKeyVaultKeys
    {
        /// <summary>
        /// Gets the integration account's Key Vault keys.
        /// </summary>
        public static Task<ListIntegrationAccountKeyVaultKeysResult> InvokeAsync(ListIntegrationAccountKeyVaultKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListIntegrationAccountKeyVaultKeysResult>("azure-native:logic/v20180701preview:listIntegrationAccountKeyVaultKeys", args ?? new ListIntegrationAccountKeyVaultKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the integration account's Key Vault keys.
        /// </summary>
        public static Output<ListIntegrationAccountKeyVaultKeysResult> Invoke(ListIntegrationAccountKeyVaultKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListIntegrationAccountKeyVaultKeysResult>("azure-native:logic/v20180701preview:listIntegrationAccountKeyVaultKeys", args ?? new ListIntegrationAccountKeyVaultKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListIntegrationAccountKeyVaultKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration account name.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public string IntegrationAccountName { get; set; } = null!;

        /// <summary>
        /// The key vault reference.
        /// </summary>
        [Input("keyVault", required: true)]
        public Inputs.KeyVaultReference KeyVault { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The skip token.
        /// </summary>
        [Input("skipToken")]
        public string? SkipToken { get; set; }

        public ListIntegrationAccountKeyVaultKeysArgs()
        {
        }
        public static new ListIntegrationAccountKeyVaultKeysArgs Empty => new ListIntegrationAccountKeyVaultKeysArgs();
    }

    public sealed class ListIntegrationAccountKeyVaultKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration account name.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public Input<string> IntegrationAccountName { get; set; } = null!;

        /// <summary>
        /// The key vault reference.
        /// </summary>
        [Input("keyVault", required: true)]
        public Input<Inputs.KeyVaultReferenceArgs> KeyVault { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The skip token.
        /// </summary>
        [Input("skipToken")]
        public Input<string>? SkipToken { get; set; }

        public ListIntegrationAccountKeyVaultKeysInvokeArgs()
        {
        }
        public static new ListIntegrationAccountKeyVaultKeysInvokeArgs Empty => new ListIntegrationAccountKeyVaultKeysInvokeArgs();
    }


    [OutputType]
    public sealed class ListIntegrationAccountKeyVaultKeysResult
    {
        /// <summary>
        /// The skip token.
        /// </summary>
        public readonly string? SkipToken;
        /// <summary>
        /// The key vault keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.KeyVaultKeyResponse> Value;

        [OutputConstructor]
        private ListIntegrationAccountKeyVaultKeysResult(
            string? skipToken,

            ImmutableArray<Outputs.KeyVaultKeyResponse> value)
        {
            SkipToken = skipToken;
            Value = value;
        }
    }
}
