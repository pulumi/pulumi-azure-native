// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Logic.V20180701Preview
{
    public static class ListWorkflowRunActionRepetitionExpressionTraces
    {
        public static Task<ListWorkflowRunActionRepetitionExpressionTracesResult> InvokeAsync(ListWorkflowRunActionRepetitionExpressionTracesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListWorkflowRunActionRepetitionExpressionTracesResult>("azure-native:logic/v20180701preview:listWorkflowRunActionRepetitionExpressionTraces", args ?? new ListWorkflowRunActionRepetitionExpressionTracesArgs(), options.WithDefaults());

        public static Output<ListWorkflowRunActionRepetitionExpressionTracesResult> Invoke(ListWorkflowRunActionRepetitionExpressionTracesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ListWorkflowRunActionRepetitionExpressionTracesResult>("azure-native:logic/v20180701preview:listWorkflowRunActionRepetitionExpressionTraces", args ?? new ListWorkflowRunActionRepetitionExpressionTracesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListWorkflowRunActionRepetitionExpressionTracesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The workflow action name.
        /// </summary>
        [Input("actionName", required: true)]
        public string ActionName { get; set; } = null!;

        /// <summary>
        /// The workflow repetition.
        /// </summary>
        [Input("repetitionName", required: true)]
        public string RepetitionName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workflow run name.
        /// </summary>
        [Input("runName", required: true)]
        public string RunName { get; set; } = null!;

        /// <summary>
        /// The workflow name.
        /// </summary>
        [Input("workflowName", required: true)]
        public string WorkflowName { get; set; } = null!;

        public ListWorkflowRunActionRepetitionExpressionTracesArgs()
        {
        }
    }

    public sealed class ListWorkflowRunActionRepetitionExpressionTracesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The workflow action name.
        /// </summary>
        [Input("actionName", required: true)]
        public Input<string> ActionName { get; set; } = null!;

        /// <summary>
        /// The workflow repetition.
        /// </summary>
        [Input("repetitionName", required: true)]
        public Input<string> RepetitionName { get; set; } = null!;

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The workflow run name.
        /// </summary>
        [Input("runName", required: true)]
        public Input<string> RunName { get; set; } = null!;

        /// <summary>
        /// The workflow name.
        /// </summary>
        [Input("workflowName", required: true)]
        public Input<string> WorkflowName { get; set; } = null!;

        public ListWorkflowRunActionRepetitionExpressionTracesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListWorkflowRunActionRepetitionExpressionTracesResult
    {
        public readonly ImmutableArray<Outputs.ExpressionRootResponse> Inputs;

        [OutputConstructor]
        private ListWorkflowRunActionRepetitionExpressionTracesResult(ImmutableArray<Outputs.ExpressionRootResponse> inputs)
        {
            Inputs = inputs;
        }
    }
}
