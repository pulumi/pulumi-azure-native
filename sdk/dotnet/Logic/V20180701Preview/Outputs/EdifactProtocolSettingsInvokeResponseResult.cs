// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20180701Preview.Outputs
{

    [OutputType]
    public sealed class EdifactProtocolSettingsInvokeResponseResult
    {
        /// <summary>
        /// The EDIFACT acknowledgement settings.
        /// </summary>
        public readonly Outputs.EdifactAcknowledgementSettingsInvokeResponseResult AcknowledgementSettings;
        /// <summary>
        /// The EDIFACT delimiter override settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdifactDelimiterOverrideInvokeResponseResult> EdifactDelimiterOverrides;
        /// <summary>
        /// The EDIFACT envelope override settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdifactEnvelopeOverrideInvokeResponseResult> EnvelopeOverrides;
        /// <summary>
        /// The EDIFACT envelope settings.
        /// </summary>
        public readonly Outputs.EdifactEnvelopeSettingsInvokeResponseResult EnvelopeSettings;
        /// <summary>
        /// The EDIFACT framing settings.
        /// </summary>
        public readonly Outputs.EdifactFramingSettingsInvokeResponseResult FramingSettings;
        /// <summary>
        /// The EDIFACT message filter.
        /// </summary>
        public readonly Outputs.EdifactMessageFilterInvokeResponseResult MessageFilter;
        /// <summary>
        /// The EDIFACT message filter list.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdifactMessageIdentifierInvokeResponseResult> MessageFilterList;
        /// <summary>
        /// The EDIFACT processing Settings.
        /// </summary>
        public readonly Outputs.EdifactProcessingSettingsInvokeResponseResult ProcessingSettings;
        /// <summary>
        /// The EDIFACT schema references.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdifactSchemaReferenceInvokeResponseResult> SchemaReferences;
        /// <summary>
        /// The EDIFACT validation override settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdifactValidationOverrideInvokeResponseResult> ValidationOverrides;
        /// <summary>
        /// The EDIFACT validation settings.
        /// </summary>
        public readonly Outputs.EdifactValidationSettingsInvokeResponseResult ValidationSettings;

        [OutputConstructor]
        private EdifactProtocolSettingsInvokeResponseResult(
            Outputs.EdifactAcknowledgementSettingsInvokeResponseResult acknowledgementSettings,

            ImmutableArray<Outputs.EdifactDelimiterOverrideInvokeResponseResult> edifactDelimiterOverrides,

            ImmutableArray<Outputs.EdifactEnvelopeOverrideInvokeResponseResult> envelopeOverrides,

            Outputs.EdifactEnvelopeSettingsInvokeResponseResult envelopeSettings,

            Outputs.EdifactFramingSettingsInvokeResponseResult framingSettings,

            Outputs.EdifactMessageFilterInvokeResponseResult messageFilter,

            ImmutableArray<Outputs.EdifactMessageIdentifierInvokeResponseResult> messageFilterList,

            Outputs.EdifactProcessingSettingsInvokeResponseResult processingSettings,

            ImmutableArray<Outputs.EdifactSchemaReferenceInvokeResponseResult> schemaReferences,

            ImmutableArray<Outputs.EdifactValidationOverrideInvokeResponseResult> validationOverrides,

            Outputs.EdifactValidationSettingsInvokeResponseResult validationSettings)
        {
            AcknowledgementSettings = acknowledgementSettings;
            EdifactDelimiterOverrides = edifactDelimiterOverrides;
            EnvelopeOverrides = envelopeOverrides;
            EnvelopeSettings = envelopeSettings;
            FramingSettings = framingSettings;
            MessageFilter = messageFilter;
            MessageFilterList = messageFilterList;
            ProcessingSettings = processingSettings;
            SchemaReferences = schemaReferences;
            ValidationOverrides = validationOverrides;
            ValidationSettings = validationSettings;
        }
    }
}
