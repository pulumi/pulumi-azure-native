// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20180701Preview.Outputs
{

    [OutputType]
    public sealed class X12DelimiterOverridesResponse
    {
        /// <summary>
        /// The component separator.
        /// </summary>
        public readonly int ComponentSeparator;
        /// <summary>
        /// The data element separator.
        /// </summary>
        public readonly int DataElementSeparator;
        /// <summary>
        /// The message id.
        /// </summary>
        public readonly string? MessageId;
        /// <summary>
        /// The protocol version.
        /// </summary>
        public readonly string? ProtocolVersion;
        /// <summary>
        /// The replacement character.
        /// </summary>
        public readonly int ReplaceCharacter;
        /// <summary>
        /// The value indicating whether to replace separators in payload.
        /// </summary>
        public readonly bool ReplaceSeparatorsInPayload;
        /// <summary>
        /// The segment terminator.
        /// </summary>
        public readonly int SegmentTerminator;
        /// <summary>
        /// The segment terminator suffix.
        /// </summary>
        public readonly string SegmentTerminatorSuffix;
        /// <summary>
        /// The target namespace on which this delimiter settings has to be applied.
        /// </summary>
        public readonly string? TargetNamespace;

        [OutputConstructor]
        private X12DelimiterOverridesResponse(
            int componentSeparator,

            int dataElementSeparator,

            string? messageId,

            string? protocolVersion,

            int replaceCharacter,

            bool replaceSeparatorsInPayload,

            int segmentTerminator,

            string segmentTerminatorSuffix,

            string? targetNamespace)
        {
            ComponentSeparator = componentSeparator;
            DataElementSeparator = dataElementSeparator;
            MessageId = messageId;
            ProtocolVersion = protocolVersion;
            ReplaceCharacter = replaceCharacter;
            ReplaceSeparatorsInPayload = replaceSeparatorsInPayload;
            SegmentTerminator = segmentTerminator;
            SegmentTerminatorSuffix = segmentTerminatorSuffix;
            TargetNamespace = targetNamespace;
        }
    }
}
