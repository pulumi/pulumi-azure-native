// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20180701Preview.Inputs
{

    /// <summary>
    /// The Edifact validation override settings.
    /// </summary>
    public sealed class EdifactValidationOverrideArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The value indicating whether to allow leading and trailing spaces and zeroes.
        /// </summary>
        [Input("allowLeadingAndTrailingSpacesAndZeroes", required: true)]
        public Input<bool> AllowLeadingAndTrailingSpacesAndZeroes { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to validate character Set.
        /// </summary>
        [Input("enforceCharacterSet", required: true)]
        public Input<bool> EnforceCharacterSet { get; set; } = null!;

        /// <summary>
        /// The message id on which the validation settings has to be applied.
        /// </summary>
        [Input("messageId", required: true)]
        public Input<string> MessageId { get; set; } = null!;

        /// <summary>
        /// The trailing separator policy.
        /// </summary>
        [Input("trailingSeparatorPolicy", required: true)]
        public Input<string> TrailingSeparatorPolicy { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to trim leading and trailing spaces and zeroes.
        /// </summary>
        [Input("trimLeadingAndTrailingSpacesAndZeroes", required: true)]
        public Input<bool> TrimLeadingAndTrailingSpacesAndZeroes { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to validate EDI types.
        /// </summary>
        [Input("validateEDITypes", required: true)]
        public Input<bool> ValidateEDITypes { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to validate XSD types.
        /// </summary>
        [Input("validateXSDTypes", required: true)]
        public Input<bool> ValidateXSDTypes { get; set; } = null!;

        public EdifactValidationOverrideArgs()
        {
        }
    }
}
