// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.V20180701Preview.Inputs
{

    /// <summary>
    /// The X12 agreement envelope settings.
    /// </summary>
    public sealed class X12EnvelopeSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The controls standards id.
        /// </summary>
        [Input("controlStandardsId", required: true)]
        public Input<int> ControlStandardsId { get; set; } = null!;

        /// <summary>
        /// The control version number.
        /// </summary>
        [Input("controlVersionNumber", required: true)]
        public Input<string> ControlVersionNumber { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to enable default group headers.
        /// </summary>
        [Input("enableDefaultGroupHeaders", required: true)]
        public Input<bool> EnableDefaultGroupHeaders { get; set; } = null!;

        /// <summary>
        /// The functional group id.
        /// </summary>
        [Input("functionalGroupId")]
        public Input<string>? FunctionalGroupId { get; set; }

        /// <summary>
        /// The group control number lower bound.
        /// </summary>
        [Input("groupControlNumberLowerBound", required: true)]
        public Input<int> GroupControlNumberLowerBound { get; set; } = null!;

        /// <summary>
        /// The group control number upper bound.
        /// </summary>
        [Input("groupControlNumberUpperBound", required: true)]
        public Input<int> GroupControlNumberUpperBound { get; set; } = null!;

        /// <summary>
        /// The group header agency code.
        /// </summary>
        [Input("groupHeaderAgencyCode", required: true)]
        public Input<string> GroupHeaderAgencyCode { get; set; } = null!;

        /// <summary>
        /// The group header date format.
        /// </summary>
        [Input("groupHeaderDateFormat", required: true)]
        public Input<string> GroupHeaderDateFormat { get; set; } = null!;

        /// <summary>
        /// The group header time format.
        /// </summary>
        [Input("groupHeaderTimeFormat", required: true)]
        public Input<string> GroupHeaderTimeFormat { get; set; } = null!;

        /// <summary>
        /// The group header version.
        /// </summary>
        [Input("groupHeaderVersion", required: true)]
        public Input<string> GroupHeaderVersion { get; set; } = null!;

        /// <summary>
        /// The interchange  control number lower bound.
        /// </summary>
        [Input("interchangeControlNumberLowerBound", required: true)]
        public Input<int> InterchangeControlNumberLowerBound { get; set; } = null!;

        /// <summary>
        /// The interchange  control number upper bound.
        /// </summary>
        [Input("interchangeControlNumberUpperBound", required: true)]
        public Input<int> InterchangeControlNumberUpperBound { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to overwrite existing transaction set control number.
        /// </summary>
        [Input("overwriteExistingTransactionSetControlNumber", required: true)]
        public Input<bool> OverwriteExistingTransactionSetControlNumber { get; set; } = null!;

        /// <summary>
        /// The receiver application id.
        /// </summary>
        [Input("receiverApplicationId", required: true)]
        public Input<string> ReceiverApplicationId { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to rollover group control number.
        /// </summary>
        [Input("rolloverGroupControlNumber", required: true)]
        public Input<bool> RolloverGroupControlNumber { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to rollover interchange control number.
        /// </summary>
        [Input("rolloverInterchangeControlNumber", required: true)]
        public Input<bool> RolloverInterchangeControlNumber { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to rollover transaction set control number.
        /// </summary>
        [Input("rolloverTransactionSetControlNumber", required: true)]
        public Input<bool> RolloverTransactionSetControlNumber { get; set; } = null!;

        /// <summary>
        /// The sender application id.
        /// </summary>
        [Input("senderApplicationId", required: true)]
        public Input<string> SenderApplicationId { get; set; } = null!;

        /// <summary>
        /// The transaction set control number lower bound.
        /// </summary>
        [Input("transactionSetControlNumberLowerBound", required: true)]
        public Input<int> TransactionSetControlNumberLowerBound { get; set; } = null!;

        /// <summary>
        /// The transaction set control number prefix.
        /// </summary>
        [Input("transactionSetControlNumberPrefix")]
        public Input<string>? TransactionSetControlNumberPrefix { get; set; }

        /// <summary>
        /// The transaction set control number suffix.
        /// </summary>
        [Input("transactionSetControlNumberSuffix")]
        public Input<string>? TransactionSetControlNumberSuffix { get; set; }

        /// <summary>
        /// The transaction set control number upper bound.
        /// </summary>
        [Input("transactionSetControlNumberUpperBound", required: true)]
        public Input<int> TransactionSetControlNumberUpperBound { get; set; } = null!;

        /// <summary>
        /// The usage indicator.
        /// </summary>
        [Input("usageIndicator", required: true)]
        public Input<string> UsageIndicator { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to use control standards id as repetition character.
        /// </summary>
        [Input("useControlStandardsIdAsRepetitionCharacter", required: true)]
        public Input<bool> UseControlStandardsIdAsRepetitionCharacter { get; set; } = null!;

        public X12EnvelopeSettingsArgs()
        {
        }
    }
}
