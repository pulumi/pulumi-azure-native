// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.Logic.Latest.Inputs
{

    /// <summary>
    /// The X12 agreement acknowledgement settings.
    /// </summary>
    public sealed class X12AcknowledgementSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The acknowledgement control number lower bound.
        /// </summary>
        [Input("acknowledgementControlNumberLowerBound", required: true)]
        public Input<int> AcknowledgementControlNumberLowerBound { get; set; } = null!;

        /// <summary>
        /// The acknowledgement control number prefix.
        /// </summary>
        [Input("acknowledgementControlNumberPrefix")]
        public Input<string>? AcknowledgementControlNumberPrefix { get; set; }

        /// <summary>
        /// The acknowledgement control number suffix.
        /// </summary>
        [Input("acknowledgementControlNumberSuffix")]
        public Input<string>? AcknowledgementControlNumberSuffix { get; set; }

        /// <summary>
        /// The acknowledgement control number upper bound.
        /// </summary>
        [Input("acknowledgementControlNumberUpperBound", required: true)]
        public Input<int> AcknowledgementControlNumberUpperBound { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to batch functional acknowledgements.
        /// </summary>
        [Input("batchFunctionalAcknowledgements", required: true)]
        public Input<bool> BatchFunctionalAcknowledgements { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to batch implementation acknowledgements.
        /// </summary>
        [Input("batchImplementationAcknowledgements", required: true)]
        public Input<bool> BatchImplementationAcknowledgements { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to batch the technical acknowledgements.
        /// </summary>
        [Input("batchTechnicalAcknowledgements", required: true)]
        public Input<bool> BatchTechnicalAcknowledgements { get; set; } = null!;

        /// <summary>
        /// The functional acknowledgement version.
        /// </summary>
        [Input("functionalAcknowledgementVersion")]
        public Input<string>? FunctionalAcknowledgementVersion { get; set; }

        /// <summary>
        /// The implementation acknowledgement version.
        /// </summary>
        [Input("implementationAcknowledgementVersion")]
        public Input<string>? ImplementationAcknowledgementVersion { get; set; }

        /// <summary>
        /// The value indicating whether functional acknowledgement is needed.
        /// </summary>
        [Input("needFunctionalAcknowledgement", required: true)]
        public Input<bool> NeedFunctionalAcknowledgement { get; set; } = null!;

        /// <summary>
        /// The value indicating whether implementation acknowledgement is needed.
        /// </summary>
        [Input("needImplementationAcknowledgement", required: true)]
        public Input<bool> NeedImplementationAcknowledgement { get; set; } = null!;

        /// <summary>
        /// The value indicating whether a loop is needed for valid messages.
        /// </summary>
        [Input("needLoopForValidMessages", required: true)]
        public Input<bool> NeedLoopForValidMessages { get; set; } = null!;

        /// <summary>
        /// The value indicating whether technical acknowledgement is needed.
        /// </summary>
        [Input("needTechnicalAcknowledgement", required: true)]
        public Input<bool> NeedTechnicalAcknowledgement { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to rollover acknowledgement control number.
        /// </summary>
        [Input("rolloverAcknowledgementControlNumber", required: true)]
        public Input<bool> RolloverAcknowledgementControlNumber { get; set; } = null!;

        /// <summary>
        /// The value indicating whether to send synchronous acknowledgement.
        /// </summary>
        [Input("sendSynchronousAcknowledgement", required: true)]
        public Input<bool> SendSynchronousAcknowledgement { get; set; } = null!;

        public X12AcknowledgementSettingsArgs()
        {
        }
    }
}
