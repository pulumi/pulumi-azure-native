// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Logic
{
    public static class ListIntegrationAccountCallbackUrl
    {
        /// <summary>
        /// Gets the integration account callback URL.
        /// API Version: 2019-05-01.
        /// </summary>
        public static Task<ListIntegrationAccountCallbackUrlResult> InvokeAsync(ListIntegrationAccountCallbackUrlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListIntegrationAccountCallbackUrlResult>("azure-native:logic:listIntegrationAccountCallbackUrl", args ?? new ListIntegrationAccountCallbackUrlArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the integration account callback URL.
        /// API Version: 2019-05-01.
        /// </summary>
        public static Output<ListIntegrationAccountCallbackUrlResult> Invoke(ListIntegrationAccountCallbackUrlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListIntegrationAccountCallbackUrlResult>("azure-native:logic:listIntegrationAccountCallbackUrl", args ?? new ListIntegrationAccountCallbackUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListIntegrationAccountCallbackUrlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration account name.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public string IntegrationAccountName { get; set; } = null!;

        /// <summary>
        /// The key type.
        /// </summary>
        [Input("keyType")]
        public Union<string, Pulumi.AzureNative.Logic.KeyType>? KeyType { get; set; }

        /// <summary>
        /// The expiry time.
        /// </summary>
        [Input("notAfter")]
        public string? NotAfter { get; set; }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public ListIntegrationAccountCallbackUrlArgs()
        {
        }
        public static new ListIntegrationAccountCallbackUrlArgs Empty => new ListIntegrationAccountCallbackUrlArgs();
    }

    public sealed class ListIntegrationAccountCallbackUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration account name.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public Input<string> IntegrationAccountName { get; set; } = null!;

        /// <summary>
        /// The key type.
        /// </summary>
        [Input("keyType")]
        public InputUnion<string, Pulumi.AzureNative.Logic.KeyType>? KeyType { get; set; }

        /// <summary>
        /// The expiry time.
        /// </summary>
        [Input("notAfter")]
        public Input<string>? NotAfter { get; set; }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ListIntegrationAccountCallbackUrlInvokeArgs()
        {
        }
        public static new ListIntegrationAccountCallbackUrlInvokeArgs Empty => new ListIntegrationAccountCallbackUrlInvokeArgs();
    }


    [OutputType]
    public sealed class ListIntegrationAccountCallbackUrlResult
    {
        /// <summary>
        /// The URL value.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private ListIntegrationAccountCallbackUrlResult(string? value)
        {
            Value = value;
        }
    }
}
