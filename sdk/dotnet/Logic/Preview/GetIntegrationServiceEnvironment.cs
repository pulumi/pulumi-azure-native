// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Logic.Preview
{
    public static class GetIntegrationServiceEnvironment
    {
        public static Task<GetIntegrationServiceEnvironmentResult> InvokeAsync(GetIntegrationServiceEnvironmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationServiceEnvironmentResult>("azurerm:logic/preview:getIntegrationServiceEnvironment", args ?? new GetIntegrationServiceEnvironmentArgs(), options.WithVersion());
    }


    public sealed class GetIntegrationServiceEnvironmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration service environment name.
        /// </summary>
        [Input("integrationServiceEnvironmentName", required: true)]
        public string IntegrationServiceEnvironmentName { get; set; } = null!;

        /// <summary>
        /// The resource group.
        /// </summary>
        [Input("resourceGroup", required: true)]
        public string ResourceGroup { get; set; } = null!;

        public GetIntegrationServiceEnvironmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIntegrationServiceEnvironmentResult
    {
        /// <summary>
        /// The resource location.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Gets the resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The integration service environment properties.
        /// </summary>
        public readonly Outputs.IntegrationServiceEnvironmentPropertiesResponseResult Properties;
        /// <summary>
        /// The sku.
        /// </summary>
        public readonly Outputs.IntegrationServiceEnvironmentSkuResponseResult? Sku;
        /// <summary>
        /// The resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Gets the resource type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIntegrationServiceEnvironmentResult(
            string? location,

            string name,

            Outputs.IntegrationServiceEnvironmentPropertiesResponseResult properties,

            Outputs.IntegrationServiceEnvironmentSkuResponseResult? sku,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Location = location;
            Name = name;
            Properties = properties;
            Sku = sku;
            Tags = tags;
            Type = type;
        }
    }
}
