// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20221101Preview.Outputs
{

    /// <summary>
    /// Defines the Virtual Instance for SAP solutions resource properties.
    /// </summary>
    [OutputType]
    public sealed class SAPVirtualInstancePropertiesResponse
    {
        /// <summary>
        /// Defines if the SAP system is being created using Azure Center for SAP solutions (ACSS) or if an existing SAP system is being registered with ACSS
        /// </summary>
        public readonly object Configuration;
        /// <summary>
        /// Defines the environment type - Production/Non Production.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// Indicates any errors on the Virtual Instance for SAP solutions resource.
        /// </summary>
        public readonly Outputs.SAPVirtualInstanceErrorResponse Errors;
        /// <summary>
        /// Defines the health of SAP Instances.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// Managed resource group configuration
        /// </summary>
        public readonly Outputs.ManagedRGConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// Defines the provisioning states.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Defines the SAP Product type.
        /// </summary>
        public readonly string SapProduct;
        /// <summary>
        /// Defines the Virtual Instance for SAP state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Defines the SAP Instance status.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private SAPVirtualInstancePropertiesResponse(
            object configuration,

            string environment,

            Outputs.SAPVirtualInstanceErrorResponse errors,

            string health,

            Outputs.ManagedRGConfigurationResponse? managedResourceGroupConfiguration,

            string provisioningState,

            string sapProduct,

            string state,

            string status)
        {
            Configuration = configuration;
            Environment = environment;
            Errors = errors;
            Health = health;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ProvisioningState = provisioningState;
            SapProduct = sapProduct;
            State = state;
            Status = status;
        }
    }
}
