// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20221101Preview.Outputs
{

    /// <summary>
    /// Gets or sets the PrometheusHaCluster provider properties.
    /// </summary>
    [OutputType]
    public sealed class PrometheusHaClusterProviderInstancePropertiesResponse
    {
        /// <summary>
        /// Gets or sets the clusterName.
        /// </summary>
        public readonly string? ClusterName;
        /// <summary>
        /// Gets or sets the target machine name.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// URL of the Node Exporter endpoint.
        /// </summary>
        public readonly string? PrometheusUrl;
        /// <summary>
        /// The provider type. For example, the value can be SapHana.
        /// Expected value is 'PrometheusHaCluster'.
        /// </summary>
        public readonly string ProviderType;
        /// <summary>
        /// Gets or sets the cluster sid.
        /// </summary>
        public readonly string? Sid;
        /// <summary>
        /// Gets or sets the blob URI to SSL certificate for the HA cluster exporter.
        /// </summary>
        public readonly string? SslCertificateUri;
        /// <summary>
        /// Gets or sets certificate preference if secure communication is enabled.
        /// </summary>
        public readonly string? SslPreference;

        [OutputConstructor]
        private PrometheusHaClusterProviderInstancePropertiesResponse(
            string? clusterName,

            string? hostname,

            string? prometheusUrl,

            string providerType,

            string? sid,

            string? sslCertificateUri,

            string? sslPreference)
        {
            ClusterName = clusterName;
            Hostname = hostname;
            PrometheusUrl = prometheusUrl;
            ProviderType = providerType;
            Sid = sid;
            SslCertificateUri = sslCertificateUri;
            SslPreference = sslPreference;
        }
    }
}
