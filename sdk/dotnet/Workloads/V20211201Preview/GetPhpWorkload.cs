// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20211201Preview
{
    public static class GetPhpWorkload
    {
        /// <summary>
        /// Gets the PHP workload resource.
        /// </summary>
        public static Task<GetPhpWorkloadResult> InvokeAsync(GetPhpWorkloadArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPhpWorkloadResult>("azure-native:workloads/v20211201preview:getPhpWorkload", args ?? new GetPhpWorkloadArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the PHP workload resource.
        /// </summary>
        public static Output<GetPhpWorkloadResult> Invoke(GetPhpWorkloadInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPhpWorkloadResult>("azure-native:workloads/v20211201preview:getPhpWorkload", args ?? new GetPhpWorkloadInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPhpWorkloadArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Php workload name
        /// </summary>
        [Input("phpWorkloadName", required: true)]
        public string PhpWorkloadName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPhpWorkloadArgs()
        {
        }
        public static new GetPhpWorkloadArgs Empty => new GetPhpWorkloadArgs();
    }

    public sealed class GetPhpWorkloadInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Php workload name
        /// </summary>
        [Input("phpWorkloadName", required: true)]
        public Input<string> PhpWorkloadName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPhpWorkloadInvokeArgs()
        {
        }
        public static new GetPhpWorkloadInvokeArgs Empty => new GetPhpWorkloadInvokeArgs();
    }


    [OutputType]
    public sealed class GetPhpWorkloadResult
    {
        /// <summary>
        /// Admin user profile used for VM and VMSS
        /// </summary>
        public readonly Outputs.UserProfileResponse AdminUserProfile;
        /// <summary>
        /// The infra resources for PHP workload will be created in this location
        /// </summary>
        public readonly string AppLocation;
        /// <summary>
        /// Backup profile
        /// </summary>
        public readonly Outputs.BackupProfileResponse? BackupProfile;
        /// <summary>
        /// Cache profile
        /// </summary>
        public readonly Outputs.CacheProfileResponse? CacheProfile;
        /// <summary>
        /// Controller VM profile
        /// </summary>
        public readonly Outputs.NodeProfileResponse ControllerProfile;
        /// <summary>
        /// Database profile
        /// </summary>
        public readonly Outputs.DatabaseProfileResponse DatabaseProfile;
        /// <summary>
        /// File share profile
        /// </summary>
        public readonly Outputs.FileshareProfileResponse? FileshareProfile;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity for the resource. Currently not supported
        /// </summary>
        public readonly Outputs.PhpWorkloadResourceResponseIdentity? Identity;
        /// <summary>
        /// Indicates which kind of php workload this resource represent e.g WordPress
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Managed resource group configuration of the workload
        /// </summary>
        public readonly Outputs.ManagedRGConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network profile
        /// </summary>
        public readonly Outputs.NetworkProfileResponse? NetworkProfile;
        /// <summary>
        /// PHP profile
        /// </summary>
        public readonly Outputs.PhpProfileResponse? PhpProfile;
        /// <summary>
        /// Php workload resource provisioning state
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Search profile
        /// </summary>
        public readonly Outputs.SearchProfileResponse? SearchProfile;
        /// <summary>
        /// Site profile
        /// </summary>
        public readonly Outputs.SiteProfileResponse? SiteProfile;
        /// <summary>
        /// Php workloads SKU
        /// </summary>
        public readonly Outputs.SkuResponse? Sku;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// VMSS web nodes profile
        /// </summary>
        public readonly Outputs.VmssNodesProfileResponse WebNodesProfile;

        [OutputConstructor]
        private GetPhpWorkloadResult(
            Outputs.UserProfileResponse adminUserProfile,

            string appLocation,

            Outputs.BackupProfileResponse? backupProfile,

            Outputs.CacheProfileResponse? cacheProfile,

            Outputs.NodeProfileResponse controllerProfile,

            Outputs.DatabaseProfileResponse databaseProfile,

            Outputs.FileshareProfileResponse? fileshareProfile,

            string id,

            Outputs.PhpWorkloadResourceResponseIdentity? identity,

            string kind,

            string location,

            Outputs.ManagedRGConfigurationResponse? managedResourceGroupConfiguration,

            string name,

            Outputs.NetworkProfileResponse? networkProfile,

            Outputs.PhpProfileResponse? phpProfile,

            string provisioningState,

            Outputs.SearchProfileResponse? searchProfile,

            Outputs.SiteProfileResponse? siteProfile,

            Outputs.SkuResponse? sku,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            Outputs.VmssNodesProfileResponse webNodesProfile)
        {
            AdminUserProfile = adminUserProfile;
            AppLocation = appLocation;
            BackupProfile = backupProfile;
            CacheProfile = cacheProfile;
            ControllerProfile = controllerProfile;
            DatabaseProfile = databaseProfile;
            FileshareProfile = fileshareProfile;
            Id = id;
            Identity = identity;
            Kind = kind;
            Location = location;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            Name = name;
            NetworkProfile = networkProfile;
            PhpProfile = phpProfile;
            ProvisioningState = provisioningState;
            SearchProfile = searchProfile;
            SiteProfile = siteProfile;
            Sku = sku;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            WebNodesProfile = webNodesProfile;
        }
    }
}
