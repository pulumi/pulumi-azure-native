// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20211201Preview.Outputs
{

    /// <summary>
    /// Deployment along with OS Configuration.
    /// </summary>
    [OutputType]
    public sealed class DeploymentWithOSConfigurationResponse
    {
        /// <summary>
        /// The geo-location where the SAP system is to be created.
        /// </summary>
        public readonly string? AppLocation;
        /// <summary>
        /// The configuration Type.
        /// Expected value is 'DeploymentWithOSConfig'.
        /// </summary>
        public readonly string ConfigurationType;
        /// <summary>
        /// The infrastructure configuration.
        /// </summary>
        public readonly Union<Outputs.SingleServerConfigurationResponse, Outputs.ThreeTierConfigurationResponse>? InfrastructureConfiguration;
        /// <summary>
        /// The OS and SAP configuration.
        /// </summary>
        public readonly Outputs.OsSapConfigurationResponse? OsSapConfiguration;
        /// <summary>
        /// The software configuration.
        /// </summary>
        public readonly object? SoftwareConfiguration;

        [OutputConstructor]
        private DeploymentWithOSConfigurationResponse(
            string? appLocation,

            string configurationType,

            Union<Outputs.SingleServerConfigurationResponse, Outputs.ThreeTierConfigurationResponse>? infrastructureConfiguration,

            Outputs.OsSapConfigurationResponse? osSapConfiguration,

            object? softwareConfiguration)
        {
            AppLocation = appLocation;
            ConfigurationType = configurationType;
            InfrastructureConfiguration = infrastructureConfiguration;
            OsSapConfiguration = osSapConfiguration;
            SoftwareConfiguration = softwareConfiguration;
        }
    }
}
