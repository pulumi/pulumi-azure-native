// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20211201Preview.Inputs
{

    /// <summary>
    /// The SAP Software configuration Input when the software is to be installed by service.
    /// </summary>
    public sealed class ServiceInitiatedSoftwareConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL to the SAP Build of Materials(BOM) file.
        /// </summary>
        [Input("bomUrl", required: true)]
        public Input<string> BomUrl { get; set; } = null!;

        /// <summary>
        /// Gets or sets the HA software configuration.
        /// </summary>
        [Input("highAvailabilitySoftwareConfiguration")]
        public Input<Inputs.HighAvailabilitySoftwareConfigurationArgs>? HighAvailabilitySoftwareConfiguration { get; set; }

        /// <summary>
        /// The SAP bits storage account id.
        /// </summary>
        [Input("sapBitsStorageAccountId", required: true)]
        public Input<string> SapBitsStorageAccountId { get; set; } = null!;

        /// <summary>
        /// The FQDN to set for the SAP system during install.
        /// </summary>
        [Input("sapFqdn", required: true)]
        public Input<string> SapFqdn { get; set; } = null!;

        /// <summary>
        /// The SAP software installation Type.
        /// Expected value is 'ServiceInitiated'.
        /// </summary>
        [Input("softwareInstallationType", required: true)]
        public Input<string> SoftwareInstallationType { get; set; } = null!;

        /// <summary>
        /// The software version to install.
        /// </summary>
        [Input("softwareVersion", required: true)]
        public Input<string> SoftwareVersion { get; set; } = null!;

        /// <summary>
        /// The SSH private key.
        /// </summary>
        [Input("sshPrivateKey", required: true)]
        public Input<string> SshPrivateKey { get; set; } = null!;

        public ServiceInitiatedSoftwareConfigurationArgs()
        {
        }
        public static new ServiceInitiatedSoftwareConfigurationArgs Empty => new ServiceInitiatedSoftwareConfigurationArgs();
    }
}
