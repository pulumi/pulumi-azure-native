// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.Outputs
{

    /// <summary>
    /// Gets or sets the single server configuration. For prerequisites for creating the infrastructure, please see [here](https://go.microsoft.com/fwlink/?linkid=2212611&amp;clcid=0x409)
    /// </summary>
    [OutputType]
    public sealed class SingleServerConfigurationResponse
    {
        /// <summary>
        /// The application resource group where SAP system resources will be deployed.
        /// </summary>
        public readonly string AppResourceGroup;
        /// <summary>
        /// The set of custom names to be used for underlying azure resources that are part of the SAP system.
        /// </summary>
        public readonly Outputs.SingleServerFullResourceNamesResponse? CustomResourceNames;
        /// <summary>
        /// The database type.
        /// </summary>
        public readonly string? DatabaseType;
        /// <summary>
        /// Gets or sets the disk configuration.
        /// </summary>
        public readonly Outputs.DiskConfigurationResponse? DbDiskConfiguration;
        /// <summary>
        /// The type of SAP deployment, single server or Three tier.
        /// Expected value is 'SingleServer'.
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// Network configuration for the server
        /// </summary>
        public readonly Outputs.NetworkConfigurationResponse? NetworkConfiguration;
        /// <summary>
        /// The subnet id.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Gets or sets the virtual machine configuration.
        /// </summary>
        public readonly Outputs.VirtualMachineConfigurationResponse VirtualMachineConfiguration;

        [OutputConstructor]
        private SingleServerConfigurationResponse(
            string appResourceGroup,

            Outputs.SingleServerFullResourceNamesResponse? customResourceNames,

            string? databaseType,

            Outputs.DiskConfigurationResponse? dbDiskConfiguration,

            string deploymentType,

            Outputs.NetworkConfigurationResponse? networkConfiguration,

            string subnetId,

            Outputs.VirtualMachineConfigurationResponse virtualMachineConfiguration)
        {
            AppResourceGroup = appResourceGroup;
            CustomResourceNames = customResourceNames;
            DatabaseType = databaseType;
            DbDiskConfiguration = dbDiskConfiguration;
            DeploymentType = deploymentType;
            NetworkConfiguration = networkConfiguration;
            SubnetId = subnetId;
            VirtualMachineConfiguration = virtualMachineConfiguration;
        }
    }
}
