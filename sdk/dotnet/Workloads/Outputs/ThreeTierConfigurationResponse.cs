// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.Outputs
{

    /// <summary>
    /// Gets or sets the three tier SAP configuration.
    /// </summary>
    [OutputType]
    public sealed class ThreeTierConfigurationResponse
    {
        /// <summary>
        /// The application resource group where SAP system resources will be deployed.
        /// </summary>
        public readonly string AppResourceGroup;
        /// <summary>
        /// The application server configuration.
        /// </summary>
        public readonly Outputs.ApplicationServerConfigurationResponse ApplicationServer;
        /// <summary>
        /// The central server configuration.
        /// </summary>
        public readonly Outputs.CentralServerConfigurationResponse CentralServer;
        /// <summary>
        /// The database configuration.
        /// </summary>
        public readonly Outputs.DatabaseConfigurationResponse DatabaseServer;
        /// <summary>
        /// The deployment Type.
        /// Expected value is 'ThreeTier'.
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// The high availability configuration.
        /// </summary>
        public readonly Outputs.HighAvailabilityConfigurationResponse? HighAvailabilityConfig;
        /// <summary>
        /// Network configuration common to all servers
        /// </summary>
        public readonly Outputs.NetworkConfigurationResponse? NetworkConfiguration;

        [OutputConstructor]
        private ThreeTierConfigurationResponse(
            string appResourceGroup,

            Outputs.ApplicationServerConfigurationResponse applicationServer,

            Outputs.CentralServerConfigurationResponse centralServer,

            Outputs.DatabaseConfigurationResponse databaseServer,

            string deploymentType,

            Outputs.HighAvailabilityConfigurationResponse? highAvailabilityConfig,

            Outputs.NetworkConfigurationResponse? networkConfiguration)
        {
            AppResourceGroup = appResourceGroup;
            ApplicationServer = applicationServer;
            CentralServer = centralServer;
            DatabaseServer = databaseServer;
            DeploymentType = deploymentType;
            HighAvailabilityConfig = highAvailabilityConfig;
            NetworkConfiguration = networkConfiguration;
        }
    }
}
