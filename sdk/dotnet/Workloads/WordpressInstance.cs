// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads
{
    /// <summary>
    /// WordPress instance resource
    /// API Version: 2021-12-01-preview.
    /// </summary>
    [AzureNativeResourceType("azure-native:workloads:WordpressInstance")]
    public partial class WordpressInstance : Pulumi.CustomResource
    {
        /// <summary>
        /// Database name used by the application
        /// </summary>
        [Output("databaseName")]
        public Output<string?> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// User name used by the application to connect to database
        /// </summary>
        [Output("databaseUser")]
        public Output<string?> DatabaseUser { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// WordPress instance provisioning state
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Site Url to access the WordPress application
        /// </summary>
        [Output("siteUrl")]
        public Output<string> SiteUrl { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Application version
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a WordpressInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WordpressInstance(string name, WordpressInstanceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:workloads:WordpressInstance", name, args ?? new WordpressInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WordpressInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:workloads:WordpressInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azure-native:workloads/v20211201preview:WordpressInstance"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WordpressInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WordpressInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WordpressInstance(name, id, options);
        }
    }

    public sealed class WordpressInstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Database name used by the application
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// User name used by the application to connect to database
        /// </summary>
        [Input("databaseUser")]
        public Input<string>? DatabaseUser { get; set; }

        /// <summary>
        /// Php workload name
        /// </summary>
        [Input("phpWorkloadName", required: true)]
        public Input<string> PhpWorkloadName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Application version
        /// </summary>
        [Input("version", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Workloads.WordpressVersions> Version { get; set; } = null!;

        public WordpressInstanceArgs()
        {
        }
    }
}
