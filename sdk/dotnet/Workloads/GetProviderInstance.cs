// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads
{
    public static class GetProviderInstance
    {
        /// <summary>
        /// Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and resource name.
        /// Azure REST API version: 2023-04-01.
        /// </summary>
        public static Task<GetProviderInstanceResult> InvokeAsync(GetProviderInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProviderInstanceResult>("azure-native:workloads:getProviderInstance", args ?? new GetProviderInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets properties of a provider instance for the specified subscription, resource group, SAP monitor name, and resource name.
        /// Azure REST API version: 2023-04-01.
        /// </summary>
        public static Output<GetProviderInstanceResult> Invoke(GetProviderInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProviderInstanceResult>("azure-native:workloads:getProviderInstance", args ?? new GetProviderInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProviderInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// Name of the provider instance.
        /// </summary>
        [Input("providerInstanceName", required: true)]
        public string ProviderInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetProviderInstanceArgs()
        {
        }
        public static new GetProviderInstanceArgs Empty => new GetProviderInstanceArgs();
    }

    public sealed class GetProviderInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// Name of the provider instance.
        /// </summary>
        [Input("providerInstanceName", required: true)]
        public Input<string> ProviderInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetProviderInstanceInvokeArgs()
        {
        }
        public static new GetProviderInstanceInvokeArgs Empty => new GetProviderInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetProviderInstanceResult
    {
        /// <summary>
        /// Defines the provider instance errors.
        /// </summary>
        public readonly Outputs.ProviderInstancePropertiesResponseErrors Errors;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// [currently not in use] Managed service identity(user assigned identities)
        /// </summary>
        public readonly Outputs.UserAssignedServiceIdentityResponse? Identity;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the provider specific properties.
        /// </summary>
        public readonly object? ProviderSettings;
        /// <summary>
        /// State of provisioning of the provider instance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetProviderInstanceResult(
            Outputs.ProviderInstancePropertiesResponseErrors errors,

            string id,

            Outputs.UserAssignedServiceIdentityResponse? identity,

            string name,

            object? providerSettings,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Errors = errors;
            Id = id;
            Identity = identity;
            Name = name;
            ProviderSettings = providerSettings;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Type = type;
        }
    }
}
