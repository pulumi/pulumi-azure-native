// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240901.Inputs
{

    /// <summary>
    /// Gets or sets the single server configuration. For prerequisites for creating the infrastructure, please see [here](https://go.microsoft.com/fwlink/?linkid=2212611&amp;clcid=0x409)
    /// </summary>
    public sealed class SingleServerConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application resource group where SAP system resources will be deployed.
        /// </summary>
        [Input("appResourceGroup", required: true)]
        public Input<string> AppResourceGroup { get; set; } = null!;

        /// <summary>
        /// The set of custom names to be used for underlying azure resources that are part of the SAP system.
        /// </summary>
        [Input("customResourceNames")]
        public Input<Inputs.SingleServerFullResourceNamesArgs>? CustomResourceNames { get; set; }

        /// <summary>
        /// The database type.
        /// </summary>
        [Input("databaseType")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.V20240901.SAPDatabaseType>? DatabaseType { get; set; }

        /// <summary>
        /// Gets or sets the disk configuration.
        /// </summary>
        [Input("dbDiskConfiguration")]
        public Input<Inputs.DiskConfigurationArgs>? DbDiskConfiguration { get; set; }

        /// <summary>
        /// The type of SAP deployment, single server or Three tier.
        /// Expected value is 'SingleServer'.
        /// </summary>
        [Input("deploymentType", required: true)]
        public Input<string> DeploymentType { get; set; } = null!;

        /// <summary>
        /// Network configuration for the server
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.NetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// The subnet id.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// Gets or sets the virtual machine configuration.
        /// </summary>
        [Input("virtualMachineConfiguration", required: true)]
        public Input<Inputs.VirtualMachineConfigurationArgs> VirtualMachineConfiguration { get; set; } = null!;

        public SingleServerConfigurationArgs()
        {
        }
        public static new SingleServerConfigurationArgs Empty => new SingleServerConfigurationArgs();
    }
}
