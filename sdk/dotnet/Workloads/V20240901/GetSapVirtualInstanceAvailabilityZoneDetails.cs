// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240901
{
    public static class GetSapVirtualInstanceAvailabilityZoneDetails
    {
        /// <summary>
        /// Get the recommended SAP Availability Zone Pair Details for your region.
        /// </summary>
        public static Task<GetSapVirtualInstanceAvailabilityZoneDetailsResult> InvokeAsync(GetSapVirtualInstanceAvailabilityZoneDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSapVirtualInstanceAvailabilityZoneDetailsResult>("azure-native:workloads/v20240901:getSapVirtualInstanceAvailabilityZoneDetails", args ?? new GetSapVirtualInstanceAvailabilityZoneDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// Get the recommended SAP Availability Zone Pair Details for your region.
        /// </summary>
        public static Output<GetSapVirtualInstanceAvailabilityZoneDetailsResult> Invoke(GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSapVirtualInstanceAvailabilityZoneDetailsResult>("azure-native:workloads/v20240901:getSapVirtualInstanceAvailabilityZoneDetails", args ?? new GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSapVirtualInstanceAvailabilityZoneDetailsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The geo-location where the SAP resources will be created.
        /// </summary>
        [Input("appLocation", required: true)]
        public string AppLocation { get; set; } = null!;

        /// <summary>
        /// The database type. Eg: HANA, DB2, etc
        /// </summary>
        [Input("databaseType", required: true)]
        public Union<string, Pulumi.AzureNative.Workloads.V20240901.SAPDatabaseType> DatabaseType { get; set; } = null!;

        /// <summary>
        /// The name of the Azure region.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// Defines the SAP Product type.
        /// </summary>
        [Input("sapProduct", required: true)]
        public Union<string, Pulumi.AzureNative.Workloads.V20240901.SAPProductType> SapProduct { get; set; } = null!;

        public GetSapVirtualInstanceAvailabilityZoneDetailsArgs()
        {
        }
        public static new GetSapVirtualInstanceAvailabilityZoneDetailsArgs Empty => new GetSapVirtualInstanceAvailabilityZoneDetailsArgs();
    }

    public sealed class GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The geo-location where the SAP resources will be created.
        /// </summary>
        [Input("appLocation", required: true)]
        public Input<string> AppLocation { get; set; } = null!;

        /// <summary>
        /// The database type. Eg: HANA, DB2, etc
        /// </summary>
        [Input("databaseType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Workloads.V20240901.SAPDatabaseType> DatabaseType { get; set; } = null!;

        /// <summary>
        /// The name of the Azure region.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Defines the SAP Product type.
        /// </summary>
        [Input("sapProduct", required: true)]
        public InputUnion<string, Pulumi.AzureNative.Workloads.V20240901.SAPProductType> SapProduct { get; set; } = null!;

        public GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs()
        {
        }
        public static new GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs Empty => new GetSapVirtualInstanceAvailabilityZoneDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSapVirtualInstanceAvailabilityZoneDetailsResult
    {
        /// <summary>
        /// Gets the list of availability zone pairs.
        /// </summary>
        public readonly ImmutableArray<Outputs.SAPAvailabilityZonePairResponse> AvailabilityZonePairs;

        [OutputConstructor]
        private GetSapVirtualInstanceAvailabilityZoneDetailsResult(ImmutableArray<Outputs.SAPAvailabilityZonePairResponse> availabilityZonePairs)
        {
            AvailabilityZonePairs = availabilityZonePairs;
        }
    }
}
