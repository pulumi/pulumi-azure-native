// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240901
{
    public static class GetSapCentralServerInstance
    {
        /// <summary>
        /// Gets the SAP Central Services Instance resource.
        /// </summary>
        public static Task<GetSapCentralServerInstanceResult> InvokeAsync(GetSapCentralServerInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSapCentralServerInstanceResult>("azure-native:workloads/v20240901:getSapCentralServerInstance", args ?? new GetSapCentralServerInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the SAP Central Services Instance resource.
        /// </summary>
        public static Output<GetSapCentralServerInstanceResult> Invoke(GetSapCentralServerInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSapCentralServerInstanceResult>("azure-native:workloads/v20240901:getSapCentralServerInstance", args ?? new GetSapCentralServerInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSapCentralServerInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Central Services Instance resource name string modeled as parameter for auto generation to work correctly.
        /// </summary>
        [Input("centralInstanceName", required: true)]
        public string CentralInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Instances for SAP solutions resource
        /// </summary>
        [Input("sapVirtualInstanceName", required: true)]
        public string SapVirtualInstanceName { get; set; } = null!;

        public GetSapCentralServerInstanceArgs()
        {
        }
        public static new GetSapCentralServerInstanceArgs Empty => new GetSapCentralServerInstanceArgs();
    }

    public sealed class GetSapCentralServerInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Central Services Instance resource name string modeled as parameter for auto generation to work correctly.
        /// </summary>
        [Input("centralInstanceName", required: true)]
        public Input<string> CentralInstanceName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Instances for SAP solutions resource
        /// </summary>
        [Input("sapVirtualInstanceName", required: true)]
        public Input<string> SapVirtualInstanceName { get; set; } = null!;

        public GetSapCentralServerInstanceInvokeArgs()
        {
        }
        public static new GetSapCentralServerInstanceInvokeArgs Empty => new GetSapCentralServerInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSapCentralServerInstanceResult
    {
        /// <summary>
        /// Defines the SAP Enqueue Replication Server (ERS) properties.
        /// </summary>
        public readonly Outputs.EnqueueReplicationServerPropertiesResponse? EnqueueReplicationServerProperties;
        /// <summary>
        /// Defines the SAP Enqueue Server properties.
        /// </summary>
        public readonly Outputs.EnqueueServerPropertiesResponse? EnqueueServerProperties;
        /// <summary>
        /// Defines the errors related to SAP Central Services Instance resource.
        /// </summary>
        public readonly Outputs.SAPVirtualInstanceErrorResponse Errors;
        /// <summary>
        /// Defines the SAP Gateway Server properties.
        /// </summary>
        public readonly Outputs.GatewayServerPropertiesResponse? GatewayServerProperties;
        /// <summary>
        /// Defines the health of SAP Instances.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The central services instance number.
        /// </summary>
        public readonly string InstanceNo;
        /// <summary>
        /// The central services instance Kernel Patch level.
        /// </summary>
        public readonly string KernelPatch;
        /// <summary>
        /// The central services instance Kernel Version.
        /// </summary>
        public readonly string KernelVersion;
        /// <summary>
        /// The Load Balancer details such as LoadBalancer ID attached to ASCS Virtual Machines
        /// </summary>
        public readonly Outputs.LoadBalancerDetailsResponse LoadBalancerDetails;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Defines the SAP message server properties.
        /// </summary>
        public readonly Outputs.MessageServerPropertiesResponse? MessageServerProperties;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the provisioning states.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Defines the SAP Instance status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The central services instance subnet.
        /// </summary>
        public readonly string Subnet;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The list of virtual machines corresponding to the Central Services instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.CentralServerVmDetailsResponse> VmDetails;

        [OutputConstructor]
        private GetSapCentralServerInstanceResult(
            Outputs.EnqueueReplicationServerPropertiesResponse? enqueueReplicationServerProperties,

            Outputs.EnqueueServerPropertiesResponse? enqueueServerProperties,

            Outputs.SAPVirtualInstanceErrorResponse errors,

            Outputs.GatewayServerPropertiesResponse? gatewayServerProperties,

            string health,

            string id,

            string instanceNo,

            string kernelPatch,

            string kernelVersion,

            Outputs.LoadBalancerDetailsResponse loadBalancerDetails,

            string location,

            Outputs.MessageServerPropertiesResponse? messageServerProperties,

            string name,

            string provisioningState,

            string status,

            string subnet,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type,

            ImmutableArray<Outputs.CentralServerVmDetailsResponse> vmDetails)
        {
            EnqueueReplicationServerProperties = enqueueReplicationServerProperties;
            EnqueueServerProperties = enqueueServerProperties;
            Errors = errors;
            GatewayServerProperties = gatewayServerProperties;
            Health = health;
            Id = id;
            InstanceNo = instanceNo;
            KernelPatch = kernelPatch;
            KernelVersion = kernelVersion;
            LoadBalancerDetails = loadBalancerDetails;
            Location = location;
            MessageServerProperties = messageServerProperties;
            Name = name;
            ProvisioningState = provisioningState;
            Status = status;
            Subnet = subnet;
            SystemData = systemData;
            Tags = tags;
            Type = type;
            VmDetails = vmDetails;
        }
    }
}
