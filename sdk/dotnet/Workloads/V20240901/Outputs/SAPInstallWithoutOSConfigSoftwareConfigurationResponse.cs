// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240901.Outputs
{

    /// <summary>
    /// The SAP Software configuration Input when the software is to be installed by service without OS Configurations
    /// </summary>
    [OutputType]
    public sealed class SAPInstallWithoutOSConfigSoftwareConfigurationResponse
    {
        /// <summary>
        /// The URL to the SAP Build of Materials(BOM) file.
        /// </summary>
        public readonly string BomUrl;
        /// <summary>
        /// Gets or sets the HA software configuration.
        /// </summary>
        public readonly Outputs.HighAvailabilitySoftwareConfigurationResponse? HighAvailabilitySoftwareConfiguration;
        /// <summary>
        /// The SAP bits storage account id.
        /// </summary>
        public readonly string SapBitsStorageAccountId;
        /// <summary>
        /// The SAP software installation Type.
        /// Expected value is 'SAPInstallWithoutOSConfig'.
        /// </summary>
        public readonly string SoftwareInstallationType;
        /// <summary>
        /// The software version to install.
        /// </summary>
        public readonly string SoftwareVersion;

        [OutputConstructor]
        private SAPInstallWithoutOSConfigSoftwareConfigurationResponse(
            string bomUrl,

            Outputs.HighAvailabilitySoftwareConfigurationResponse? highAvailabilitySoftwareConfiguration,

            string sapBitsStorageAccountId,

            string softwareInstallationType,

            string softwareVersion)
        {
            BomUrl = bomUrl;
            HighAvailabilitySoftwareConfiguration = highAvailabilitySoftwareConfiguration;
            SapBitsStorageAccountId = sapBitsStorageAccountId;
            SoftwareInstallationType = softwareInstallationType;
            SoftwareVersion = softwareVersion;
        }
    }
}
