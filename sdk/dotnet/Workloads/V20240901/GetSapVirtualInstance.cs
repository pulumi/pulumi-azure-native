// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240901
{
    public static class GetSapVirtualInstance
    {
        /// <summary>
        /// Gets a Virtual Instance for SAP solutions resource
        /// </summary>
        public static Task<GetSapVirtualInstanceResult> InvokeAsync(GetSapVirtualInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSapVirtualInstanceResult>("azure-native:workloads/v20240901:getSapVirtualInstance", args ?? new GetSapVirtualInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a Virtual Instance for SAP solutions resource
        /// </summary>
        public static Output<GetSapVirtualInstanceResult> Invoke(GetSapVirtualInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSapVirtualInstanceResult>("azure-native:workloads/v20240901:getSapVirtualInstance", args ?? new GetSapVirtualInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSapVirtualInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Instances for SAP solutions resource
        /// </summary>
        [Input("sapVirtualInstanceName", required: true)]
        public string SapVirtualInstanceName { get; set; } = null!;

        public GetSapVirtualInstanceArgs()
        {
        }
        public static new GetSapVirtualInstanceArgs Empty => new GetSapVirtualInstanceArgs();
    }

    public sealed class GetSapVirtualInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Instances for SAP solutions resource
        /// </summary>
        [Input("sapVirtualInstanceName", required: true)]
        public Input<string> SapVirtualInstanceName { get; set; } = null!;

        public GetSapVirtualInstanceInvokeArgs()
        {
        }
        public static new GetSapVirtualInstanceInvokeArgs Empty => new GetSapVirtualInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSapVirtualInstanceResult
    {
        /// <summary>
        /// Defines if the SAP system is being created using Azure Center for SAP solutions (ACSS) or if an existing SAP system is being registered with ACSS
        /// </summary>
        public readonly object Configuration;
        /// <summary>
        /// Defines the environment type - Production/Non Production.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// Indicates any errors on the Virtual Instance for SAP solutions resource.
        /// </summary>
        public readonly Outputs.SAPVirtualInstanceErrorResponse Errors;
        /// <summary>
        /// Defines the health of SAP Instances.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identities assigned to this resource.
        /// </summary>
        public readonly Outputs.SAPVirtualInstanceIdentityResponse? Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Managed resource group configuration
        /// </summary>
        public readonly Outputs.ManagedRGConfigurationResponse? ManagedResourceGroupConfiguration;
        /// <summary>
        /// Specifies the network access configuration for the resources that will be deployed in the Managed Resource Group. The options to choose from are Public and Private. If 'Private' is chosen, the Storage Account service tag should be enabled on the subnets in which the SAP VMs exist. This is required for establishing connectivity between VM extensions and the managed resource group storage account. This setting is currently applicable only to Storage Account. Learn more here https://go.microsoft.com/fwlink/?linkid=2247228
        /// </summary>
        public readonly string? ManagedResourcesNetworkAccessType;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the provisioning states.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Defines the SAP Product type.
        /// </summary>
        public readonly string SapProduct;
        /// <summary>
        /// Defines the Virtual Instance for SAP state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Defines the SAP Instance status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSapVirtualInstanceResult(
            object configuration,

            string environment,

            Outputs.SAPVirtualInstanceErrorResponse errors,

            string health,

            string id,

            Outputs.SAPVirtualInstanceIdentityResponse? identity,

            string location,

            Outputs.ManagedRGConfigurationResponse? managedResourceGroupConfiguration,

            string? managedResourcesNetworkAccessType,

            string name,

            string provisioningState,

            string sapProduct,

            string state,

            string status,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Configuration = configuration;
            Environment = environment;
            Errors = errors;
            Health = health;
            Id = id;
            Identity = identity;
            Location = location;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ManagedResourcesNetworkAccessType = managedResourcesNetworkAccessType;
            Name = name;
            ProvisioningState = provisioningState;
            SapProduct = sapProduct;
            State = state;
            Status = status;
            SystemData = systemData;
            Tags = tags;
            Type = type;
        }
    }
}
