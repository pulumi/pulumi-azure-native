// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20231201Preview.Inputs
{

    /// <summary>
    /// Gets or sets the PrometheusHaCluster provider properties.
    /// </summary>
    public sealed class PrometheusHaClusterProviderInstancePropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gets or sets the clusterName.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Gets or sets the target machine name.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// URL of the Node Exporter endpoint.
        /// </summary>
        [Input("prometheusUrl")]
        public Input<string>? PrometheusUrl { get; set; }

        /// <summary>
        /// The provider type. For example, the value can be SapHana.
        /// Expected value is 'PrometheusHaCluster'.
        /// </summary>
        [Input("providerType", required: true)]
        public Input<string> ProviderType { get; set; } = null!;

        /// <summary>
        /// Gets or sets the cluster sid.
        /// </summary>
        [Input("sid")]
        public Input<string>? Sid { get; set; }

        /// <summary>
        /// Gets or sets the blob URI to SSL certificate for the HA cluster exporter.
        /// </summary>
        [Input("sslCertificateUri")]
        public Input<string>? SslCertificateUri { get; set; }

        /// <summary>
        /// Gets or sets certificate preference if secure communication is enabled.
        /// </summary>
        [Input("sslPreference")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.V20231201Preview.SslPreference>? SslPreference { get; set; }

        public PrometheusHaClusterProviderInstancePropertiesArgs()
        {
        }
        public static new PrometheusHaClusterProviderInstancePropertiesArgs Empty => new PrometheusHaClusterProviderInstancePropertiesArgs();
    }
}
