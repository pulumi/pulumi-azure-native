// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20231001Preview.Outputs
{

    /// <summary>
    /// Gets or sets the DB2 provider properties.
    /// </summary>
    [OutputType]
    public sealed class DB2ProviderInstancePropertiesResponse
    {
        /// <summary>
        /// Gets or sets the db2 database name.
        /// </summary>
        public readonly string? DbName;
        /// <summary>
        /// Gets or sets the db2 database password.
        /// </summary>
        public readonly string? DbPassword;
        /// <summary>
        /// Gets or sets the key vault URI to secret with the database password.
        /// </summary>
        public readonly string? DbPasswordUri;
        /// <summary>
        /// Gets or sets the db2 database sql port.
        /// </summary>
        public readonly string? DbPort;
        /// <summary>
        /// Gets or sets the db2 database user name.
        /// </summary>
        public readonly string? DbUsername;
        /// <summary>
        /// Gets or sets the target virtual machine name.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// The provider type. For example, the value can be SapHana.
        /// Expected value is 'Db2'.
        /// </summary>
        public readonly string ProviderType;
        /// <summary>
        /// Gets or sets the SAP System Identifier
        /// </summary>
        public readonly string? SapSid;
        /// <summary>
        /// Gets or sets the blob URI to SSL certificate for the DB2 Database.
        /// </summary>
        public readonly string? SslCertificateUri;
        /// <summary>
        /// Gets or sets certificate preference if secure communication is enabled.
        /// </summary>
        public readonly string? SslPreference;

        [OutputConstructor]
        private DB2ProviderInstancePropertiesResponse(
            string? dbName,

            string? dbPassword,

            string? dbPasswordUri,

            string? dbPort,

            string? dbUsername,

            string? hostname,

            string providerType,

            string? sapSid,

            string? sslCertificateUri,

            string? sslPreference)
        {
            DbName = dbName;
            DbPassword = dbPassword;
            DbPasswordUri = dbPasswordUri;
            DbPort = dbPort;
            DbUsername = dbUsername;
            Hostname = hostname;
            ProviderType = providerType;
            SapSid = sapSid;
            SslCertificateUri = sslCertificateUri;
            SslPreference = sslPreference;
        }
    }
}
