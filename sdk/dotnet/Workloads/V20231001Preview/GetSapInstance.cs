// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20231001Preview
{
    public static class GetSapInstance
    {
        /// <summary>
        /// Gets the SAP Instance resource.
        /// </summary>
        public static Task<GetSapInstanceResult> InvokeAsync(GetSapInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSapInstanceResult>("azure-native:workloads/v20231001preview:getSapInstance", args ?? new GetSapInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the SAP Instance resource.
        /// </summary>
        public static Output<GetSapInstanceResult> Invoke(GetSapInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSapInstanceResult>("azure-native:workloads/v20231001preview:getSapInstance", args ?? new GetSapInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSapInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the discovery site resource for SAP Migration.
        /// </summary>
        [Input("sapDiscoverySiteName", required: true)]
        public string SapDiscoverySiteName { get; set; } = null!;

        /// <summary>
        /// The name of SAP Instance resource for SAP Migration.
        /// </summary>
        [Input("sapInstanceName", required: true)]
        public string SapInstanceName { get; set; } = null!;

        public GetSapInstanceArgs()
        {
        }
        public static new GetSapInstanceArgs Empty => new GetSapInstanceArgs();
    }

    public sealed class GetSapInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the discovery site resource for SAP Migration.
        /// </summary>
        [Input("sapDiscoverySiteName", required: true)]
        public Input<string> SapDiscoverySiteName { get; set; } = null!;

        /// <summary>
        /// The name of SAP Instance resource for SAP Migration.
        /// </summary>
        [Input("sapInstanceName", required: true)]
        public Input<string> SapInstanceName { get; set; } = null!;

        public GetSapInstanceInvokeArgs()
        {
        }
        public static new GetSapInstanceInvokeArgs Empty => new GetSapInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSapInstanceResult
    {
        /// <summary>
        /// Enter a business function/department identifier to group multiple SIDs.
        /// </summary>
        public readonly string Application;
        /// <summary>
        /// The Environment; PRD, QA, DEV, etc to which SAP system belongs to. Select from the list of available dropdown values.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// Defines the errors related to SAP Instance resource.
        /// </summary>
        public readonly Outputs.SAPMigrateErrorResponse Errors;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// This is the SID of the production system in a landscape.  An SAP system could itself be a production SID or a part of a landscape with a different Production SID. This field can be used to relate non-prod SIDs, other components, SID (WEBDISP) to the prod SID. Enter the value of Production SID.
        /// </summary>
        public readonly string LandscapeSid;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Defines the provisioning states.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// This is the SID of SAP System. Keeping this not equal to ID as different landscapes can have repeated System SID IDs.
        /// </summary>
        public readonly string SystemSid;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSapInstanceResult(
            string application,

            string environment,

            Outputs.SAPMigrateErrorResponse errors,

            string id,

            string landscapeSid,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string systemSid,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            Application = application;
            Environment = environment;
            Errors = errors;
            Id = id;
            LandscapeSid = landscapeSid;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            SystemSid = systemSid;
            Tags = tags;
            Type = type;
        }
    }
}
