// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20231001Preview.Inputs
{

    /// <summary>
    /// Defines the HANA Backup data for a virtual instance for SAP.
    /// </summary>
    public sealed class HanaBackupDataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the policy properties for database backup.
        /// </summary>
        [Input("backupPolicy", required: true)]
        public Input<Inputs.DBBackupPolicyPropertiesArgs> BackupPolicy { get; set; } = null!;

        /// <summary>
        /// The type of backup, VM, SQL or HANA.
        /// Expected value is 'HANA'.
        /// </summary>
        [Input("backupType", required: true)]
        public Input<string> BackupType { get; set; } = null!;

        /// <summary>
        /// Defines the policy properties for database backup.
        /// </summary>
        [Input("dbInstanceSnapshotBackupPolicy")]
        public Input<Inputs.DBBackupPolicyPropertiesArgs>? DbInstanceSnapshotBackupPolicy { get; set; }

        /// <summary>
        /// Name of the HANA Database User Store Key.
        /// </summary>
        [Input("hdbuserstoreKeyName", required: true)]
        public Input<string> HdbuserstoreKeyName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the database instance number.
        /// </summary>
        [Input("instanceNumber")]
        public Input<string>? InstanceNumber { get; set; }

        /// <summary>
        /// The properties of the recovery services vault used for backup.
        /// </summary>
        [Input("recoveryServicesVault", required: true)]
        public InputUnion<Inputs.ExistingRecoveryServicesVaultArgs, Inputs.NewRecoveryServicesVaultArgs> RecoveryServicesVault { get; set; } = null!;

        /// <summary>
        /// Path of the SSL key store.
        /// </summary>
        [Input("sslConfiguration")]
        public Input<Inputs.SSLConfigurationArgs>? SslConfiguration { get; set; }

        public HanaBackupDataArgs()
        {
        }
        public static new HanaBackupDataArgs Empty => new HanaBackupDataArgs();
    }
}
