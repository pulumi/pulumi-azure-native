// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240201Preview
{
    /// <summary>
    /// A alert associated with SAP monitor.
    /// </summary>
    [AzureNativeResourceType("azure-native:workloads/v20240201preview:Alert")]
    public partial class Alert : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the properties of an alert.
        /// </summary>
        [Output("alertRuleProperties")]
        public Output<Outputs.AlertRulePropertiesResponse?> AlertRuleProperties { get; private set; } = null!;

        /// <summary>
        /// ID of the alert rule resource created.
        /// </summary>
        [Output("alertRuleResourceId")]
        public Output<string> AlertRuleResourceId { get; private set; } = null!;

        /// <summary>
        /// Defines the alert instance errors.
        /// </summary>
        [Output("errors")]
        public Output<Outputs.ErrorDetailResponse> Errors { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Name of provider instances associated with the alert.
        /// </summary>
        [Output("providerNames")]
        public Output<ImmutableArray<string>> ProviderNames { get; private set; } = null!;

        /// <summary>
        /// The provider type for alert. For example, the value can be SapHana.
        /// </summary>
        [Output("providerType")]
        public Output<string?> ProviderType { get; private set; } = null!;

        /// <summary>
        /// State of provisioning of the alert instance
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Name of the alert template from which it was created.
        /// </summary>
        [Output("templateName")]
        public Output<string?> TemplateName { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Alert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Alert(string name, AlertArgs args, CustomResourceOptions? options = null)
            : base("azure-native:workloads/v20240201preview:Alert", name, args ?? new AlertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Alert(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:workloads/v20240201preview:Alert", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:workloads:Alert" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Alert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Alert Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Alert(name, id, options);
        }
    }

    public sealed class AlertArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the SAP monitor alert resource.
        /// </summary>
        [Input("alertName")]
        public Input<string>? AlertName { get; set; }

        /// <summary>
        /// Describes the properties of an alert.
        /// </summary>
        [Input("alertRuleProperties")]
        public Input<Inputs.AlertRulePropertiesArgs>? AlertRuleProperties { get; set; }

        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        [Input("providerNames")]
        private InputList<string>? _providerNames;

        /// <summary>
        /// Name of provider instances associated with the alert.
        /// </summary>
        public InputList<string> ProviderNames
        {
            get => _providerNames ?? (_providerNames = new InputList<string>());
            set => _providerNames = value;
        }

        /// <summary>
        /// The provider type for alert. For example, the value can be SapHana.
        /// </summary>
        [Input("providerType")]
        public Input<string>? ProviderType { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of the alert template from which it was created.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        public AlertArgs()
        {
        }
        public static new AlertArgs Empty => new AlertArgs();
    }
}
