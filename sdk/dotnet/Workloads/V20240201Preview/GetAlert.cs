// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.V20240201Preview
{
    public static class GetAlert
    {
        /// <summary>
        /// Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
        /// </summary>
        public static Task<GetAlertResult> InvokeAsync(GetAlertArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertResult>("azure-native:workloads/v20240201preview:getAlert", args ?? new GetAlertArgs(), options.WithDefaults());

        /// <summary>
        /// Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
        /// </summary>
        public static Output<GetAlertResult> Invoke(GetAlertInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertResult>("azure-native:workloads/v20240201preview:getAlert", args ?? new GetAlertInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
        /// </summary>
        public static Output<GetAlertResult> Invoke(GetAlertInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertResult>("azure-native:workloads/v20240201preview:getAlert", args ?? new GetAlertInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SAP monitor alert resource.
        /// </summary>
        [Input("alertName", required: true)]
        public string AlertName { get; set; } = null!;

        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("monitorName", required: true)]
        public string MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAlertArgs()
        {
        }
        public static new GetAlertArgs Empty => new GetAlertArgs();
    }

    public sealed class GetAlertInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the SAP monitor alert resource.
        /// </summary>
        [Input("alertName", required: true)]
        public Input<string> AlertName { get; set; } = null!;

        /// <summary>
        /// Name of the SAP monitor resource.
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAlertInvokeArgs()
        {
        }
        public static new GetAlertInvokeArgs Empty => new GetAlertInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertResult
    {
        /// <summary>
        /// Describes the properties of an alert.
        /// </summary>
        public readonly Outputs.AlertRulePropertiesResponse? AlertRuleProperties;
        /// <summary>
        /// ID of the alert rule resource created.
        /// </summary>
        public readonly string AlertRuleResourceId;
        /// <summary>
        /// Defines the alert instance errors.
        /// </summary>
        public readonly Outputs.ErrorDetailResponse Errors;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of provider instances associated with the alert.
        /// </summary>
        public readonly ImmutableArray<string> ProviderNames;
        /// <summary>
        /// The provider type for alert. For example, the value can be SapHana.
        /// </summary>
        public readonly string? ProviderType;
        /// <summary>
        /// State of provisioning of the alert instance
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Name of the alert template from which it was created.
        /// </summary>
        public readonly string? TemplateName;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAlertResult(
            Outputs.AlertRulePropertiesResponse? alertRuleProperties,

            string alertRuleResourceId,

            Outputs.ErrorDetailResponse errors,

            string id,

            string name,

            ImmutableArray<string> providerNames,

            string? providerType,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            string? templateName,

            string type)
        {
            AlertRuleProperties = alertRuleProperties;
            AlertRuleResourceId = alertRuleResourceId;
            Errors = errors;
            Id = id;
            Name = name;
            ProviderNames = providerNames;
            ProviderType = providerType;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            TemplateName = templateName;
            Type = type;
        }
    }
}
