// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Workloads.Inputs
{

    /// <summary>
    /// Describes the properties of an alert.
    /// </summary>
    public sealed class AlertRulePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("actionGroups")]
        private InputList<string>? _actionGroups;

        /// <summary>
        /// Action Group resource Ids to invoke when the alert fires
        /// </summary>
        public InputList<string> ActionGroups
        {
            get => _actionGroups ?? (_actionGroups = new InputList<string>());
            set => _actionGroups = value;
        }

        [Input("alertQueryParameters")]
        private InputList<Inputs.AlertQueryParameterArgs>? _alertQueryParameters;

        /// <summary>
        /// The alert query parameters.
        /// </summary>
        public InputList<Inputs.AlertQueryParameterArgs> AlertQueryParameters
        {
            get => _alertQueryParameters ?? (_alertQueryParameters = new InputList<Inputs.AlertQueryParameterArgs>());
            set => _alertQueryParameters = value;
        }

        /// <summary>
        /// The value that indicates whether the alert should be automatically resolved or not. The default is Disable.
        /// </summary>
        [Input("autoMitigate")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.AlertAutoMitigate>? AutoMitigate { get; set; }

        /// <summary>
        /// Evaluation of metric on a particular column.
        /// </summary>
        [Input("dimension")]
        public Input<string>? Dimension { get; set; }

        /// <summary>
        /// How often the scheduled query rule is evaluated.
        /// </summary>
        [Input("evaluationFrequency")]
        public Input<int>? EvaluationFrequency { get; set; }

        /// <summary>
        /// The operator for failing periods.
        /// </summary>
        [Input("failingPeriodsOperator")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.ConditionalOperator>? FailingPeriodsOperator { get; set; }

        /// <summary>
        /// The number of failing periods to trigger an alert.
        /// </summary>
        [Input("failingPeriodsToAlert")]
        public Input<int>? FailingPeriodsToAlert { get; set; }

        /// <summary>
        /// Mute actions for the chosen period of time after the alert is fired.
        /// </summary>
        [Input("muteActionsDuration")]
        public Input<int>? MuteActionsDuration { get; set; }

        /// <summary>
        /// Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest.
        /// </summary>
        [Input("severity")]
        public Input<int>? Severity { get; set; }

        /// <summary>
        /// Indicates whether the alert is in an enabled state.
        /// </summary>
        [Input("status")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.AlertRuleStatus>? Status { get; set; }

        /// <summary>
        /// The threshold of the alert.
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        /// <summary>
        /// The threshold operator of the alert.
        /// </summary>
        [Input("thresholdOperator")]
        public InputUnion<string, Pulumi.AzureNative.Workloads.ConditionalOperator>? ThresholdOperator { get; set; }

        /// <summary>
        /// The period of time on which the Alert query will be executed.
        /// </summary>
        [Input("windowSize")]
        public Input<int>? WindowSize { get; set; }

        public AlertRulePropertiesArgs()
        {
        }
        public static new AlertRulePropertiesArgs Empty => new AlertRulePropertiesArgs();
    }
}
