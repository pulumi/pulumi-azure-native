// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class GetContentPackage
    {
        /// <summary>
        /// Gets an installed packages by its id.
        /// 
        /// Uses Azure REST API version 2024-09-01.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview, 2024-10-01-preview, 2025-01-01-preview, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Task<GetContentPackageResult> InvokeAsync(GetContentPackageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContentPackageResult>("azure-native:securityinsights:getContentPackage", args ?? new GetContentPackageArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an installed packages by its id.
        /// 
        /// Uses Azure REST API version 2024-09-01.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview, 2024-10-01-preview, 2025-01-01-preview, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetContentPackageResult> Invoke(GetContentPackageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentPackageResult>("azure-native:securityinsights:getContentPackage", args ?? new GetContentPackageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an installed packages by its id.
        /// 
        /// Uses Azure REST API version 2024-09-01.
        /// 
        /// Other available API versions: 2023-04-01-preview, 2023-05-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview, 2024-10-01-preview, 2025-01-01-preview, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native securityinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
        /// </summary>
        public static Output<GetContentPackageResult> Invoke(GetContentPackageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentPackageResult>("azure-native:securityinsights:getContentPackage", args ?? new GetContentPackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContentPackageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// package Id
        /// </summary>
        [Input("packageId", required: true)]
        public string PackageId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetContentPackageArgs()
        {
        }
        public static new GetContentPackageArgs Empty => new GetContentPackageArgs();
    }

    public sealed class GetContentPackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// package Id
        /// </summary>
        [Input("packageId", required: true)]
        public Input<string> PackageId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetContentPackageInvokeArgs()
        {
        }
        public static new GetContentPackageInvokeArgs Empty => new GetContentPackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetContentPackageResult
    {
        /// <summary>
        /// The author of the package
        /// </summary>
        public readonly Outputs.MetadataAuthorResponse? Author;
        /// <summary>
        /// The Azure API version of the resource.
        /// </summary>
        public readonly string AzureApiVersion;
        /// <summary>
        /// The categories of the package
        /// </summary>
        public readonly Outputs.MetadataCategoriesResponse? Categories;
        /// <summary>
        /// The content id of the package
        /// </summary>
        public readonly string ContentId;
        /// <summary>
        /// The package kind
        /// </summary>
        public readonly string ContentKind;
        /// <summary>
        /// Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
        /// </summary>
        public readonly string ContentProductId;
        /// <summary>
        /// The version of the content schema.
        /// </summary>
        public readonly string? ContentSchemaVersion;
        /// <summary>
        /// The support tier of the package
        /// </summary>
        public readonly Outputs.MetadataDependenciesResponse? Dependencies;
        /// <summary>
        /// The description of the package
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the package
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// first publish date package item
        /// </summary>
        public readonly string? FirstPublishDate;
        /// <summary>
        /// the icon identifier. this id can later be fetched from the content metadata
        /// </summary>
        public readonly string? Icon;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Flag indicates if this template is deprecated
        /// </summary>
        public readonly string? IsDeprecated;
        /// <summary>
        /// Flag indicates if this package is among the featured list.
        /// </summary>
        public readonly string? IsFeatured;
        /// <summary>
        /// Flag indicates if this is a newly published package.
        /// </summary>
        public readonly string? IsNew;
        /// <summary>
        /// Flag indicates if this package is in preview.
        /// </summary>
        public readonly string? IsPreview;
        /// <summary>
        /// last publish date for the package item
        /// </summary>
        public readonly string? LastPublishDate;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Providers for the package item
        /// </summary>
        public readonly ImmutableArray<string> Providers;
        /// <summary>
        /// The publisher display name of the package
        /// </summary>
        public readonly string? PublisherDisplayName;
        /// <summary>
        /// The source of the package
        /// </summary>
        public readonly Outputs.MetadataSourceResponse? Source;
        /// <summary>
        /// The support tier of the package
        /// </summary>
        public readonly Outputs.MetadataSupportResponse? Support;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// the tactics the resource covers
        /// </summary>
        public readonly ImmutableArray<string> ThreatAnalysisTactics;
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        public readonly ImmutableArray<string> ThreatAnalysisTechniques;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// the latest version number of the package
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetContentPackageResult(
            Outputs.MetadataAuthorResponse? author,

            string azureApiVersion,

            Outputs.MetadataCategoriesResponse? categories,

            string contentId,

            string contentKind,

            string contentProductId,

            string? contentSchemaVersion,

            Outputs.MetadataDependenciesResponse? dependencies,

            string? description,

            string displayName,

            string? etag,

            string? firstPublishDate,

            string? icon,

            string id,

            string? isDeprecated,

            string? isFeatured,

            string? isNew,

            string? isPreview,

            string? lastPublishDate,

            string name,

            ImmutableArray<string> providers,

            string? publisherDisplayName,

            Outputs.MetadataSourceResponse? source,

            Outputs.MetadataSupportResponse? support,

            Outputs.SystemDataResponse systemData,

            ImmutableArray<string> threatAnalysisTactics,

            ImmutableArray<string> threatAnalysisTechniques,

            string type,

            string version)
        {
            Author = author;
            AzureApiVersion = azureApiVersion;
            Categories = categories;
            ContentId = contentId;
            ContentKind = contentKind;
            ContentProductId = contentProductId;
            ContentSchemaVersion = contentSchemaVersion;
            Dependencies = dependencies;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            FirstPublishDate = firstPublishDate;
            Icon = icon;
            Id = id;
            IsDeprecated = isDeprecated;
            IsFeatured = isFeatured;
            IsNew = isNew;
            IsPreview = isPreview;
            LastPublishDate = lastPublishDate;
            Name = name;
            Providers = providers;
            PublisherDisplayName = publisherDisplayName;
            Source = source;
            Support = support;
            SystemData = systemData;
            ThreatAnalysisTactics = threatAnalysisTactics;
            ThreatAnalysisTechniques = threatAnalysisTechniques;
            Type = type;
            Version = version;
        }
    }
}
