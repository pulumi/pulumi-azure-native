// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230701Preview
{
    /// <summary>
    /// Represents a Hunt Relation in Azure Security Insights.
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20230701preview:HuntRelation")]
    public partial class HuntRelation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// List of labels relevant to this hunt
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The id of the related resource
        /// </summary>
        [Output("relatedResourceId")]
        public Output<string> RelatedResourceId { get; private set; } = null!;

        /// <summary>
        /// The resource that the relation is related to
        /// </summary>
        [Output("relatedResourceKind")]
        public Output<string> RelatedResourceKind { get; private set; } = null!;

        /// <summary>
        /// The name of the related resource
        /// </summary>
        [Output("relatedResourceName")]
        public Output<string> RelatedResourceName { get; private set; } = null!;

        /// <summary>
        /// The type of the hunt relation
        /// </summary>
        [Output("relationType")]
        public Output<string> RelationType { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a HuntRelation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HuntRelation(string name, HuntRelationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230701preview:HuntRelation", name, args ?? new HuntRelationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HuntRelation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230701preview:HuntRelation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230501preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230601preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230801preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230901preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231001preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231201preview:HuntRelation" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20240101preview:HuntRelation" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HuntRelation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HuntRelation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HuntRelation(name, id, options);
        }
    }

    public sealed class HuntRelationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hunt id (GUID)
        /// </summary>
        [Input("huntId", required: true)]
        public Input<string> HuntId { get; set; } = null!;

        /// <summary>
        /// The hunt relation id (GUID)
        /// </summary>
        [Input("huntRelationId")]
        public Input<string>? HuntRelationId { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// List of labels relevant to this hunt
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The id of the related resource
        /// </summary>
        [Input("relatedResourceId", required: true)]
        public Input<string> RelatedResourceId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public HuntRelationArgs()
        {
        }
        public static new HuntRelationArgs Empty => new HuntRelationArgs();
    }
}
