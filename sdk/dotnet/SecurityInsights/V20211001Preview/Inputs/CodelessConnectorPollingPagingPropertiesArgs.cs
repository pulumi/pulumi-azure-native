// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20211001Preview.Inputs
{

    /// <summary>
    /// Describe the properties needed to make a pagination call
    /// </summary>
    public sealed class CodelessConnectorPollingPagingPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the name of a next page attribute
        /// </summary>
        [Input("nextPageParaName")]
        public Input<string>? NextPageParaName { get; set; }

        /// <summary>
        /// Defines the path to a next page token JSON
        /// </summary>
        [Input("nextPageTokenJsonPath")]
        public Input<string>? NextPageTokenJsonPath { get; set; }

        /// <summary>
        /// Defines the path to a page count attribute
        /// </summary>
        [Input("pageCountAttributePath")]
        public Input<string>? PageCountAttributePath { get; set; }

        /// <summary>
        /// Defines the paging size
        /// </summary>
        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        /// <summary>
        /// Defines the name of the page size parameter
        /// </summary>
        [Input("pageSizeParaName")]
        public Input<string>? PageSizeParaName { get; set; }

        /// <summary>
        /// Defines the path to a paging time stamp attribute
        /// </summary>
        [Input("pageTimeStampAttributePath")]
        public Input<string>? PageTimeStampAttributePath { get; set; }

        /// <summary>
        /// Defines the path to a page total count attribute
        /// </summary>
        [Input("pageTotalCountAttributePath")]
        public Input<string>? PageTotalCountAttributePath { get; set; }

        /// <summary>
        /// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
        /// </summary>
        [Input("pagingType", required: true)]
        public Input<string> PagingType { get; set; } = null!;

        /// <summary>
        /// Determines whether to search for the latest time stamp in the events list
        /// </summary>
        [Input("searchTheLatestTimeStampFromEventsList")]
        public Input<string>? SearchTheLatestTimeStampFromEventsList { get; set; }

        public CodelessConnectorPollingPagingPropertiesArgs()
        {
        }
    }
}
