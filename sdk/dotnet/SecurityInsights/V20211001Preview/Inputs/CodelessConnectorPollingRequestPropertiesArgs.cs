// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20211001Preview.Inputs
{

    /// <summary>
    /// Describe the request properties needed to successfully pull from the server
    /// </summary>
    public sealed class CodelessConnectorPollingRequestPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describe the endpoint we should pull the data from
        /// </summary>
        [Input("apiEndpoint", required: true)]
        public Input<string> ApiEndpoint { get; set; } = null!;

        /// <summary>
        /// This will be used the query events from the end of the time window
        /// </summary>
        [Input("endTimeAttributeName")]
        public Input<string>? EndTimeAttributeName { get; set; }

        /// <summary>
        /// Describe the headers sent in the poll request
        /// </summary>
        [Input("headers")]
        public Input<object>? Headers { get; set; }

        /// <summary>
        /// The http method type we will use in the poll request, GET or POST
        /// </summary>
        [Input("httpMethod", required: true)]
        public Input<string> HttpMethod { get; set; } = null!;

        /// <summary>
        /// Describe the query parameters sent in the poll request
        /// </summary>
        [Input("queryParameters")]
        public Input<object>? QueryParameters { get; set; }

        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        [Input("queryParametersTemplate")]
        public Input<string>? QueryParametersTemplate { get; set; }

        /// <summary>
        /// The time format will be used the query events in a specific window
        /// </summary>
        [Input("queryTimeFormat", required: true)]
        public Input<string> QueryTimeFormat { get; set; } = null!;

        /// <summary>
        /// The window interval we will use the pull the data
        /// </summary>
        [Input("queryWindowInMin", required: true)]
        public Input<int> QueryWindowInMin { get; set; } = null!;

        /// <summary>
        /// Defines the rate limit QPS
        /// </summary>
        [Input("rateLimitQps")]
        public Input<int>? RateLimitQps { get; set; }

        /// <summary>
        /// Describe the amount of time we should try and poll the data in case of failure
        /// </summary>
        [Input("retryCount")]
        public Input<int>? RetryCount { get; set; }

        /// <summary>
        /// This will be used the query events from a start of the time window
        /// </summary>
        [Input("startTimeAttributeName")]
        public Input<string>? StartTimeAttributeName { get; set; }

        /// <summary>
        /// The number of seconds we will consider as a request timeout
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        public CodelessConnectorPollingRequestPropertiesArgs()
        {
        }
    }
}
