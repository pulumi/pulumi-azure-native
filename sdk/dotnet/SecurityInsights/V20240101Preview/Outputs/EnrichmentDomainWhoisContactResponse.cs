// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20240101Preview.Outputs
{

    /// <summary>
    /// An individual contact associated with this domain
    /// </summary>
    [OutputType]
    public sealed class EnrichmentDomainWhoisContactResponse
    {
        /// <summary>
        /// The city for this contact
        /// </summary>
        public readonly string? City;
        /// <summary>
        /// The country for this contact
        /// </summary>
        public readonly string? Country;
        /// <summary>
        /// The email address for this contact
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The fax number for this contact
        /// </summary>
        public readonly string? Fax;
        /// <summary>
        /// The name of this contact
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The organization for this contact
        /// </summary>
        public readonly string? Org;
        /// <summary>
        /// The phone number for this contact
        /// </summary>
        public readonly string? Phone;
        /// <summary>
        /// The postal code for this contact
        /// </summary>
        public readonly string? Postal;
        /// <summary>
        /// The state for this contact
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// A list describing the street address for this contact
        /// </summary>
        public readonly ImmutableArray<string> Street;

        [OutputConstructor]
        private EnrichmentDomainWhoisContactResponse(
            string? city,

            string? country,

            string? email,

            string? fax,

            string? name,

            string? org,

            string? phone,

            string? postal,

            string? state,

            ImmutableArray<string> street)
        {
            City = city;
            Country = country;
            Email = email;
            Fax = fax;
            Name = name;
            Org = org;
            Phone = phone;
            Postal = postal;
            State = state;
            Street = street;
        }
    }
}
