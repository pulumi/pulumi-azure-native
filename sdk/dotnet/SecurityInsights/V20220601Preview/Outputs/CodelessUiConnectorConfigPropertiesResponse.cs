// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220601Preview.Outputs
{

    /// <summary>
    /// Config to describe the instructions blade
    /// </summary>
    [OutputType]
    public sealed class CodelessUiConnectorConfigPropertiesResponse
    {
        /// <summary>
        /// Connector Availability Status
        /// </summary>
        public readonly Outputs.AvailabilityResponse Availability;
        /// <summary>
        /// Define the way the connector check connectivity
        /// </summary>
        public readonly ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria> ConnectivityCriteria;
        /// <summary>
        /// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
        /// </summary>
        public readonly string? CustomImage;
        /// <summary>
        /// Data types to check for last data received
        /// </summary>
        public readonly ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseDataTypes> DataTypes;
        /// <summary>
        /// Connector description
        /// </summary>
        public readonly string DescriptionMarkdown;
        /// <summary>
        /// The graph query to show the current data status
        /// </summary>
        public readonly ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseGraphQueries> GraphQueries;
        /// <summary>
        /// Name of the table the connector will insert the data to
        /// </summary>
        public readonly string GraphQueriesTableName;
        /// <summary>
        /// Instruction steps to enable the connector
        /// </summary>
        public readonly ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseInstructionSteps> InstructionSteps;
        /// <summary>
        /// Permissions required for the connector
        /// </summary>
        public readonly Outputs.PermissionsResponse Permissions;
        /// <summary>
        /// Connector publisher name
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// The sample queries for the connector
        /// </summary>
        public readonly ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseSampleQueries> SampleQueries;
        /// <summary>
        /// Connector blade title
        /// </summary>
        public readonly string Title;

        [OutputConstructor]
        private CodelessUiConnectorConfigPropertiesResponse(
            Outputs.AvailabilityResponse availability,

            ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria> connectivityCriteria,

            string? customImage,

            ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseDataTypes> dataTypes,

            string descriptionMarkdown,

            ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseGraphQueries> graphQueries,

            string graphQueriesTableName,

            ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseInstructionSteps> instructionSteps,

            Outputs.PermissionsResponse permissions,

            string publisher,

            ImmutableArray<Outputs.CodelessUiConnectorConfigPropertiesResponseSampleQueries> sampleQueries,

            string title)
        {
            Availability = availability;
            ConnectivityCriteria = connectivityCriteria;
            CustomImage = customImage;
            DataTypes = dataTypes;
            DescriptionMarkdown = descriptionMarkdown;
            GraphQueries = graphQueries;
            GraphQueriesTableName = graphQueriesTableName;
            InstructionSteps = instructionSteps;
            Permissions = permissions;
            Publisher = publisher;
            SampleQueries = sampleQueries;
            Title = title;
        }
    }
}
