// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220601Preview
{
    public static class GetThreatIntelligenceAlertRule
    {
        /// <summary>
        /// Represents Threat Intelligence alert rule.
        /// </summary>
        public static Task<GetThreatIntelligenceAlertRuleResult> InvokeAsync(GetThreatIntelligenceAlertRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetThreatIntelligenceAlertRuleResult>("azure-native:securityinsights/v20220601preview:getThreatIntelligenceAlertRule", args ?? new GetThreatIntelligenceAlertRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Represents Threat Intelligence alert rule.
        /// </summary>
        public static Output<GetThreatIntelligenceAlertRuleResult> Invoke(GetThreatIntelligenceAlertRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetThreatIntelligenceAlertRuleResult>("azure-native:securityinsights/v20220601preview:getThreatIntelligenceAlertRule", args ?? new GetThreatIntelligenceAlertRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThreatIntelligenceAlertRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId", required: true)]
        public string RuleId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetThreatIntelligenceAlertRuleArgs()
        {
        }
        public static new GetThreatIntelligenceAlertRuleArgs Empty => new GetThreatIntelligenceAlertRuleArgs();
    }

    public sealed class GetThreatIntelligenceAlertRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetThreatIntelligenceAlertRuleInvokeArgs()
        {
        }
        public static new GetThreatIntelligenceAlertRuleInvokeArgs Empty => new GetThreatIntelligenceAlertRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetThreatIntelligenceAlertRuleResult
    {
        /// <summary>
        /// The Name of the alert rule template used to create this rule.
        /// </summary>
        public readonly string AlertRuleTemplateName;
        /// <summary>
        /// The description of the alert rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name for alerts created by this alert rule.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Determines whether this alert rule is enabled or disabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of the alert rule
        /// Expected value is 'ThreatIntelligence'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The last time that this alert has been modified.
        /// </summary>
        public readonly string LastModifiedUtc;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The severity for alerts created by this alert rule.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The tactics of the alert rule
        /// </summary>
        public readonly ImmutableArray<string> Tactics;
        /// <summary>
        /// The techniques of the alert rule
        /// </summary>
        public readonly ImmutableArray<string> Techniques;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetThreatIntelligenceAlertRuleResult(
            string alertRuleTemplateName,

            string description,

            string displayName,

            bool enabled,

            string? etag,

            string id,

            string kind,

            string lastModifiedUtc,

            string name,

            string severity,

            Outputs.SystemDataResponse systemData,

            ImmutableArray<string> tactics,

            ImmutableArray<string> techniques,

            string type)
        {
            AlertRuleTemplateName = alertRuleTemplateName;
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            Etag = etag;
            Id = id;
            Kind = kind;
            LastModifiedUtc = lastModifiedUtc;
            Name = name;
            Severity = severity;
            SystemData = systemData;
            Tactics = tactics;
            Techniques = techniques;
            Type = type;
        }
    }
}
