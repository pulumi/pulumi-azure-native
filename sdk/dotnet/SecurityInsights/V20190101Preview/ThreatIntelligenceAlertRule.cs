// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20190101Preview
{
    /// <summary>
    /// Represents Threat Intelligence alert rule.
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20190101preview:ThreatIntelligenceAlertRule")]
    public partial class ThreatIntelligenceAlertRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Name of the alert rule template used to create this rule.
        /// </summary>
        [Output("alertRuleTemplateName")]
        public Output<string> AlertRuleTemplateName { get; private set; } = null!;

        /// <summary>
        /// The description of the alert rule.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The display name for alerts created by this alert rule.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Determines whether this alert rule is enabled or disabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// 
        /// Expected value is 'ThreatIntelligence'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The last time that this alert has been modified.
        /// </summary>
        [Output("lastModifiedUtc")]
        public Output<string> LastModifiedUtc { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The severity for alerts created by this alert rule.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// The tactics of the alert rule
        /// </summary>
        [Output("tactics")]
        public Output<ImmutableArray<string>> Tactics { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ThreatIntelligenceAlertRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ThreatIntelligenceAlertRule(string name, ThreatIntelligenceAlertRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20190101preview:ThreatIntelligenceAlertRule", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private ThreatIntelligenceAlertRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20190101preview:ThreatIntelligenceAlertRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static ThreatIntelligenceAlertRuleArgs MakeArgs(ThreatIntelligenceAlertRuleArgs args)
        {
            args ??= new ThreatIntelligenceAlertRuleArgs();
            args.Kind = "ThreatIntelligence";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20200101:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210301preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210901preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220101preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220401preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220501preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220601preview:ThreatIntelligenceAlertRule"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220701preview:ThreatIntelligenceAlertRule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ThreatIntelligenceAlertRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ThreatIntelligenceAlertRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ThreatIntelligenceAlertRule(name, id, options);
        }
    }

    public sealed class ThreatIntelligenceAlertRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the alert rule template used to create this rule.
        /// </summary>
        [Input("alertRuleTemplateName", required: true)]
        public Input<string> AlertRuleTemplateName { get; set; } = null!;

        /// <summary>
        /// Determines whether this alert rule is enabled or disabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// 
        /// Expected value is 'ThreatIntelligence'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
        /// </summary>
        [Input("operationalInsightsResourceProvider", required: true)]
        public Input<string> OperationalInsightsResourceProvider { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ThreatIntelligenceAlertRuleArgs()
        {
        }
        public static new ThreatIntelligenceAlertRuleArgs Empty => new ThreatIntelligenceAlertRuleArgs();
    }
}
