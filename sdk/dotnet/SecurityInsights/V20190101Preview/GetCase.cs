// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNextGen.SecurityInsights.V20190101Preview
{
    public static class GetCase
    {
        public static Task<GetCaseResult> InvokeAsync(GetCaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCaseResult>("azure-nextgen:securityinsights/v20190101preview:getCase", args ?? new GetCaseArgs(), options.WithVersion());
    }


    public sealed class GetCaseArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Case ID
        /// </summary>
        [Input("caseId", required: true)]
        public string CaseId { get; set; } = null!;

        /// <summary>
        /// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
        /// </summary>
        [Input("operationalInsightsResourceProvider", required: true)]
        public string OperationalInsightsResourceProvider { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetCaseArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCaseResult
    {
        /// <summary>
        /// a sequential number
        /// </summary>
        public readonly int CaseNumber;
        /// <summary>
        /// The reason the case was closed
        /// </summary>
        public readonly string? CloseReason;
        /// <summary>
        /// the case close reason details
        /// </summary>
        public readonly string? ClosedReasonText;
        /// <summary>
        /// The time the case was created
        /// </summary>
        public readonly string CreatedTimeUtc;
        /// <summary>
        /// The description of the case
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The end time of the case
        /// </summary>
        public readonly string? EndTimeUtc;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// List of labels relevant to this case
        /// </summary>
        public readonly ImmutableArray<string> Labels;
        /// <summary>
        /// the last comment in the case
        /// </summary>
        public readonly string LastComment;
        /// <summary>
        /// The last time the case was updated
        /// </summary>
        public readonly string LastUpdatedTimeUtc;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Describes a user that the case is assigned to
        /// </summary>
        public readonly Outputs.UserInfoResponse? Owner;
        /// <summary>
        /// List of related alert identifiers
        /// </summary>
        public readonly ImmutableArray<string> RelatedAlertIds;
        /// <summary>
        /// The severity of the case
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The start time of the case
        /// </summary>
        public readonly string StartTimeUtc;
        /// <summary>
        /// The status of the case
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The tactics associated with case
        /// </summary>
        public readonly ImmutableArray<string> Tactics;
        /// <summary>
        /// The title of the case
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// the number of total comments in the case
        /// </summary>
        public readonly int TotalComments;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCaseResult(
            int caseNumber,

            string? closeReason,

            string? closedReasonText,

            string createdTimeUtc,

            string? description,

            string? endTimeUtc,

            string? etag,

            ImmutableArray<string> labels,

            string lastComment,

            string lastUpdatedTimeUtc,

            string name,

            Outputs.UserInfoResponse? owner,

            ImmutableArray<string> relatedAlertIds,

            string severity,

            string startTimeUtc,

            string status,

            ImmutableArray<string> tactics,

            string title,

            int totalComments,

            string type)
        {
            CaseNumber = caseNumber;
            CloseReason = closeReason;
            ClosedReasonText = closedReasonText;
            CreatedTimeUtc = createdTimeUtc;
            Description = description;
            EndTimeUtc = endTimeUtc;
            Etag = etag;
            Labels = labels;
            LastComment = lastComment;
            LastUpdatedTimeUtc = lastUpdatedTimeUtc;
            Name = name;
            Owner = owner;
            RelatedAlertIds = relatedAlertIds;
            Severity = severity;
            StartTimeUtc = startTimeUtc;
            Status = status;
            Tactics = tactics;
            Title = title;
            TotalComments = totalComments;
            Type = type;
        }
    }
}
