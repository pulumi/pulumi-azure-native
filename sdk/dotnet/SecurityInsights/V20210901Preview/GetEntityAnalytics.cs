// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20210901Preview
{
    public static class GetEntityAnalytics
    {
        /// <summary>
        /// Gets a setting.
        /// </summary>
        public static Task<GetEntityAnalyticsResult> InvokeAsync(GetEntityAnalyticsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntityAnalyticsResult>("azure-native:securityinsights/v20210901preview:getEntityAnalytics", args ?? new GetEntityAnalyticsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a setting.
        /// </summary>
        public static Output<GetEntityAnalyticsResult> Invoke(GetEntityAnalyticsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntityAnalyticsResult>("azure-native:securityinsights/v20210901preview:getEntityAnalytics", args ?? new GetEntityAnalyticsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntityAnalyticsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
        /// </summary>
        [Input("settingsName", required: true)]
        public string SettingsName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetEntityAnalyticsArgs()
        {
        }
        public static new GetEntityAnalyticsArgs Empty => new GetEntityAnalyticsArgs();
    }

    public sealed class GetEntityAnalyticsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
        /// </summary>
        [Input("settingsName", required: true)]
        public Input<string> SettingsName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetEntityAnalyticsInvokeArgs()
        {
        }
        public static new GetEntityAnalyticsInvokeArgs Empty => new GetEntityAnalyticsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntityAnalyticsResult
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Determines whether the setting is enable or disabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// The kind of the setting
        /// Expected value is 'EntityAnalytics'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEntityAnalyticsResult(
            string? etag,

            string id,

            bool isEnabled,

            string kind,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Etag = etag;
            Id = id;
            IsEnabled = isEnabled;
            Kind = kind;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
