// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20210901Preview.Inputs
{

    /// <summary>
    /// Describe the authentication properties needed to successfully authenticate with the server
    /// </summary>
    public sealed class CodelessConnectorPollingAuthPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A prefix send in the header before the actual token
        /// </summary>
        [Input("apiKeyIdentifier")]
        public Input<string>? ApiKeyIdentifier { get; set; }

        /// <summary>
        /// The header name which the token is sent with
        /// </summary>
        [Input("apiKeyName")]
        public Input<string>? ApiKeyName { get; set; }

        /// <summary>
        /// The authentication type
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// The endpoint used to authorize the user, used in Oauth 2.0 flow
        /// </summary>
        [Input("authorizationEndpoint")]
        public Input<string>? AuthorizationEndpoint { get; set; }

        /// <summary>
        /// The query parameters used in authorization request, used in Oauth 2.0 flow
        /// </summary>
        [Input("authorizationEndpointQueryParameters")]
        public Input<object>? AuthorizationEndpointQueryParameters { get; set; }

        /// <summary>
        /// Describes the flow name, for example 'AuthCode' for Oauth 2.0
        /// </summary>
        [Input("flowName")]
        public Input<string>? FlowName { get; set; }

        /// <summary>
        /// Marks if the key should sent in header
        /// </summary>
        [Input("isApiKeyInPostPayload")]
        public Input<string>? IsApiKeyInPostPayload { get; set; }

        /// <summary>
        /// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
        /// </summary>
        [Input("isClientSecretInHeader")]
        public Input<bool>? IsClientSecretInHeader { get; set; }

        /// <summary>
        /// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
        /// </summary>
        [Input("redirectionEndpoint")]
        public Input<string>? RedirectionEndpoint { get; set; }

        /// <summary>
        /// The OAuth token scope
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The endpoint used to issue a token, used in Oauth 2.0 flow
        /// </summary>
        [Input("tokenEndpoint")]
        public Input<string>? TokenEndpoint { get; set; }

        /// <summary>
        /// The query headers used in token request, used in Oauth 2.0 flow
        /// </summary>
        [Input("tokenEndpointHeaders")]
        public Input<object>? TokenEndpointHeaders { get; set; }

        /// <summary>
        /// The query parameters used in token request, used in Oauth 2.0 flow
        /// </summary>
        [Input("tokenEndpointQueryParameters")]
        public Input<object>? TokenEndpointQueryParameters { get; set; }

        public CodelessConnectorPollingAuthPropertiesArgs()
        {
        }
        public static new CodelessConnectorPollingAuthPropertiesArgs Empty => new CodelessConnectorPollingAuthPropertiesArgs();
    }
}
