// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220401Preview.Outputs
{

    /// <summary>
    /// Describe the authentication properties needed to successfully authenticate with the server
    /// </summary>
    [OutputType]
    public sealed class CodelessConnectorPollingAuthPropertiesResponse
    {
        /// <summary>
        /// A prefix send in the header before the actual token
        /// </summary>
        public readonly string? ApiKeyIdentifier;
        /// <summary>
        /// The header name which the token is sent with
        /// </summary>
        public readonly string? ApiKeyName;
        /// <summary>
        /// The authentication type
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// The endpoint used to authorize the user, used in Oauth 2.0 flow
        /// </summary>
        public readonly string? AuthorizationEndpoint;
        /// <summary>
        /// The query parameters used in authorization request, used in Oauth 2.0 flow
        /// </summary>
        public readonly object? AuthorizationEndpointQueryParameters;
        /// <summary>
        /// Describes the flow name, for example 'AuthCode' for Oauth 2.0
        /// </summary>
        public readonly string? FlowName;
        /// <summary>
        /// Marks if the key should sent in header
        /// </summary>
        public readonly string? IsApiKeyInPostPayload;
        /// <summary>
        /// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
        /// </summary>
        public readonly bool? IsClientSecretInHeader;
        /// <summary>
        /// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
        /// </summary>
        public readonly string? RedirectionEndpoint;
        /// <summary>
        /// The OAuth token scope
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The endpoint used to issue a token, used in Oauth 2.0 flow
        /// </summary>
        public readonly string? TokenEndpoint;
        /// <summary>
        /// The query headers used in token request, used in Oauth 2.0 flow
        /// </summary>
        public readonly object? TokenEndpointHeaders;
        /// <summary>
        /// The query parameters used in token request, used in Oauth 2.0 flow
        /// </summary>
        public readonly object? TokenEndpointQueryParameters;

        [OutputConstructor]
        private CodelessConnectorPollingAuthPropertiesResponse(
            string? apiKeyIdentifier,

            string? apiKeyName,

            string authType,

            string? authorizationEndpoint,

            object? authorizationEndpointQueryParameters,

            string? flowName,

            string? isApiKeyInPostPayload,

            bool? isClientSecretInHeader,

            string? redirectionEndpoint,

            string? scope,

            string? tokenEndpoint,

            object? tokenEndpointHeaders,

            object? tokenEndpointQueryParameters)
        {
            ApiKeyIdentifier = apiKeyIdentifier;
            ApiKeyName = apiKeyName;
            AuthType = authType;
            AuthorizationEndpoint = authorizationEndpoint;
            AuthorizationEndpointQueryParameters = authorizationEndpointQueryParameters;
            FlowName = flowName;
            IsApiKeyInPostPayload = isApiKeyInPostPayload;
            IsClientSecretInHeader = isClientSecretInHeader;
            RedirectionEndpoint = redirectionEndpoint;
            Scope = scope;
            TokenEndpoint = tokenEndpoint;
            TokenEndpointHeaders = tokenEndpointHeaders;
            TokenEndpointQueryParameters = tokenEndpointQueryParameters;
        }
    }
}
