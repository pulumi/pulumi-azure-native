// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class GetAction
    {
        /// <summary>
        /// Gets the action of alert rule.
        /// API Version: 2020-01-01.
        /// </summary>
        public static Task<GetActionResult> InvokeAsync(GetActionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActionResult>("azure-native:securityinsights:getAction", args ?? new GetActionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the action of alert rule.
        /// API Version: 2020-01-01.
        /// </summary>
        public static Output<GetActionResult> Invoke(GetActionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionResult>("azure-native:securityinsights:getAction", args ?? new GetActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Action ID
        /// </summary>
        [Input("actionId", required: true)]
        public string ActionId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId", required: true)]
        public string RuleId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetActionArgs()
        {
        }
        public static new GetActionArgs Empty => new GetActionArgs();
    }

    public sealed class GetActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Action ID
        /// </summary>
        [Input("actionId", required: true)]
        public Input<string> ActionId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetActionInvokeArgs()
        {
        }
        public static new GetActionInvokeArgs Empty => new GetActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetActionResult
    {
        /// <summary>
        /// Etag of the action.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
        /// </summary>
        public readonly string LogicAppResourceId;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The name of the logic app's workflow.
        /// </summary>
        public readonly string? WorkflowId;

        [OutputConstructor]
        private GetActionResult(
            string? etag,

            string id,

            string logicAppResourceId,

            string name,

            string type,

            string? workflowId)
        {
            Etag = etag;
            Id = id;
            LogicAppResourceId = logicAppResourceId;
            Name = name;
            Type = type;
            WorkflowId = workflowId;
        }
    }
}
