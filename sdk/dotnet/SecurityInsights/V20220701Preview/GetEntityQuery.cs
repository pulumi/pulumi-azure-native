// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220701Preview
{
    [Obsolete(@"Please use one of the variants: ActivityCustomEntityQuery.")]
    public static class GetEntityQuery
    {
        /// <summary>
        /// Specific entity query.
        /// </summary>
        public static Task<GetEntityQueryResult> InvokeAsync(GetEntityQueryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEntityQueryResult>("azure-native:securityinsights/v20220701preview:getEntityQuery", args ?? new GetEntityQueryArgs(), options.WithDefaults());

        /// <summary>
        /// Specific entity query.
        /// </summary>
        public static Output<GetEntityQueryResult> Invoke(GetEntityQueryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEntityQueryResult>("azure-native:securityinsights/v20220701preview:getEntityQuery", args ?? new GetEntityQueryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntityQueryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// entity query ID
        /// </summary>
        [Input("entityQueryId", required: true)]
        public string EntityQueryId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetEntityQueryArgs()
        {
        }
        public static new GetEntityQueryArgs Empty => new GetEntityQueryArgs();
    }

    public sealed class GetEntityQueryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// entity query ID
        /// </summary>
        [Input("entityQueryId", required: true)]
        public Input<string> EntityQueryId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetEntityQueryInvokeArgs()
        {
        }
        public static new GetEntityQueryInvokeArgs Empty => new GetEntityQueryInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntityQueryResult
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// the entity query kind
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEntityQueryResult(
            string? etag,

            string id,

            string kind,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Etag = etag;
            Id = id;
            Kind = kind;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
