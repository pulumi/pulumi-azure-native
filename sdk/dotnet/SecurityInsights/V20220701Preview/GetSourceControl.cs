// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220701Preview
{
    public static class GetSourceControl
    {
        /// <summary>
        /// Represents a SourceControl in Azure Security Insights.
        /// </summary>
        public static Task<GetSourceControlResult> InvokeAsync(GetSourceControlArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSourceControlResult>("azure-native:securityinsights/v20220701preview:getSourceControl", args ?? new GetSourceControlArgs(), options.WithDefaults());

        /// <summary>
        /// Represents a SourceControl in Azure Security Insights.
        /// </summary>
        public static Output<GetSourceControlResult> Invoke(GetSourceControlInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSourceControlResult>("azure-native:securityinsights/v20220701preview:getSourceControl", args ?? new GetSourceControlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceControlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Source control Id
        /// </summary>
        [Input("sourceControlId", required: true)]
        public string SourceControlId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetSourceControlArgs()
        {
        }
        public static new GetSourceControlArgs Empty => new GetSourceControlArgs();
    }

    public sealed class GetSourceControlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Source control Id
        /// </summary>
        [Input("sourceControlId", required: true)]
        public Input<string> SourceControlId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetSourceControlInvokeArgs()
        {
        }
        public static new GetSourceControlInvokeArgs Empty => new GetSourceControlInvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceControlResult
    {
        /// <summary>
        /// Array of source control content types.
        /// </summary>
        public readonly ImmutableArray<string> ContentTypes;
        /// <summary>
        /// A description of the source control
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the source control
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information regarding the latest deployment for the source control.
        /// </summary>
        public readonly Outputs.DeploymentInfoResponse? LastDeploymentInfo;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The repository type of the source control
        /// </summary>
        public readonly string RepoType;
        /// <summary>
        /// Repository metadata.
        /// </summary>
        public readonly Outputs.RepositoryResponse Repository;
        /// <summary>
        /// Information regarding the resources created in user's repository.
        /// </summary>
        public readonly Outputs.RepositoryResourceInfoResponse? RepositoryResourceInfo;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version number associated with the source control
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetSourceControlResult(
            ImmutableArray<string> contentTypes,

            string? description,

            string displayName,

            string? etag,

            string id,

            Outputs.DeploymentInfoResponse? lastDeploymentInfo,

            string name,

            string repoType,

            Outputs.RepositoryResponse repository,

            Outputs.RepositoryResourceInfoResponse? repositoryResourceInfo,

            Outputs.SystemDataResponse systemData,

            string type,

            string? version)
        {
            ContentTypes = contentTypes;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            Id = id;
            LastDeploymentInfo = lastDeploymentInfo;
            Name = name;
            RepoType = repoType;
            Repository = repository;
            RepositoryResourceInfo = repositoryResourceInfo;
            SystemData = systemData;
            Type = type;
            Version = version;
        }
    }
}
