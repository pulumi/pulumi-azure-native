// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class GetMetadata
    {
        /// <summary>
        /// Metadata resource definition.
        /// API Version: 2021-03-01-preview.
        /// </summary>
        public static Task<GetMetadataResult> InvokeAsync(GetMetadataArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMetadataResult>("azure-native:securityinsights:getMetadata", args ?? new GetMetadataArgs(), options.WithVersion());
    }


    public sealed class GetMetadataArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Metadata name.
        /// </summary>
        [Input("metadataName", required: true)]
        public string MetadataName { get; set; } = null!;

        /// <summary>
        /// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
        /// </summary>
        [Input("operationalInsightsResourceProvider", required: true)]
        public string OperationalInsightsResourceProvider { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetMetadataArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMetadataResult
    {
        /// <summary>
        /// The creator of the content item.
        /// </summary>
        public readonly Outputs.MetadataAuthorResponse? Author;
        /// <summary>
        /// Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name
        /// </summary>
        public readonly string? ContentId;
        /// <summary>
        /// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        /// </summary>
        public readonly Outputs.MetadataDependenciesResponse? Dependencies;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Azure resource Id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of content the metadata is for.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Azure resource name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// Source of the content.  This is where/how it was created.
        /// </summary>
        public readonly Outputs.MetadataSourceResponse? Source;
        /// <summary>
        /// Support information for the metadata - type, name, contact information
        /// </summary>
        public readonly Outputs.MetadataSupportResponse? Support;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Azure resource type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetMetadataResult(
            Outputs.MetadataAuthorResponse? author,

            string? contentId,

            Outputs.MetadataDependenciesResponse? dependencies,

            string? etag,

            string id,

            string kind,

            string name,

            string parentId,

            Outputs.MetadataSourceResponse? source,

            Outputs.MetadataSupportResponse? support,

            Outputs.SystemDataResponse systemData,

            string type,

            string? version)
        {
            Author = author;
            ContentId = contentId;
            Dependencies = dependencies;
            Etag = etag;
            Id = id;
            Kind = kind;
            Name = name;
            ParentId = parentId;
            Source = source;
            Support = support;
            SystemData = systemData;
            Type = type;
            Version = version;
        }
    }
}
