// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20231001Preview.Outputs
{

    /// <summary>
    /// The UiConfig for 'Customizable' connector definition kind.
    /// </summary>
    [OutputType]
    public sealed class CustomizableConnectorUiConfigResponse
    {
        /// <summary>
        /// The exposure status of the connector to the customers.
        /// </summary>
        public readonly Outputs.ConnectorDefinitionsAvailabilityResponse? Availability;
        /// <summary>
        /// Gets or sets the way the connector checks whether the connector is connected.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectivityCriterionResponse> ConnectivityCriteria;
        /// <summary>
        /// Gets or sets the data types to check for last data received.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectorDataTypeResponse> DataTypes;
        /// <summary>
        /// Gets or sets the connector description in markdown format.
        /// </summary>
        public readonly string DescriptionMarkdown;
        /// <summary>
        /// Gets or sets the graph queries to show the current data volume over time.
        /// </summary>
        public readonly ImmutableArray<Outputs.GraphQueryResponse> GraphQueries;
        /// <summary>
        /// Gets or sets the name of the table the connector will insert the data to.
        /// This name can be used in other queries by specifying {{graphQueriesTableName}} placeholder
        ///  in Query and LastDataReceivedQuery values.
        /// </summary>
        public readonly string? GraphQueriesTableName;
        /// <summary>
        /// Gets or sets custom connector id. optional field.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Gets or sets the instruction steps to enable the connector.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstructionStepResponse> InstructionSteps;
        /// <summary>
        /// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
        /// </summary>
        public readonly bool? IsConnectivityCriteriasMatchSome;
        /// <summary>
        /// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
        /// The logo value should be in SVG format.
        /// </summary>
        public readonly string? Logo;
        /// <summary>
        /// The required Permissions for the connector.
        /// </summary>
        public readonly Outputs.ConnectorDefinitionsPermissionsResponse Permissions;
        /// <summary>
        /// Gets or sets the connector publisher name.
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// Gets or sets the sample queries for the connector.
        /// </summary>
        public readonly ImmutableArray<Outputs.SampleQueryResponse> SampleQueries;
        /// <summary>
        /// Gets or sets the connector blade title.
        /// </summary>
        public readonly string Title;

        [OutputConstructor]
        private CustomizableConnectorUiConfigResponse(
            Outputs.ConnectorDefinitionsAvailabilityResponse? availability,

            ImmutableArray<Outputs.ConnectivityCriterionResponse> connectivityCriteria,

            ImmutableArray<Outputs.ConnectorDataTypeResponse> dataTypes,

            string descriptionMarkdown,

            ImmutableArray<Outputs.GraphQueryResponse> graphQueries,

            string? graphQueriesTableName,

            string? id,

            ImmutableArray<Outputs.InstructionStepResponse> instructionSteps,

            bool? isConnectivityCriteriasMatchSome,

            string? logo,

            Outputs.ConnectorDefinitionsPermissionsResponse permissions,

            string publisher,

            ImmutableArray<Outputs.SampleQueryResponse> sampleQueries,

            string title)
        {
            Availability = availability;
            ConnectivityCriteria = connectivityCriteria;
            DataTypes = dataTypes;
            DescriptionMarkdown = descriptionMarkdown;
            GraphQueries = graphQueries;
            GraphQueriesTableName = graphQueriesTableName;
            Id = id;
            InstructionSteps = instructionSteps;
            IsConnectivityCriteriasMatchSome = isConnectivityCriteriasMatchSome;
            Logo = logo;
            Permissions = permissions;
            Publisher = publisher;
            SampleQueries = sampleQueries;
            Title = title;
        }
    }
}
