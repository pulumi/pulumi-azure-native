// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20210401
{
    /// <summary>
    /// Represents a Watchlist in Azure Security Insights.
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20210401:Watchlist")]
    public partial class Watchlist : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The content type of the raw content. For now, only text/csv is valid
        /// </summary>
        [Output("contentType")]
        public Output<string?> ContentType { get; private set; } = null!;

        /// <summary>
        /// The time the watchlist was created
        /// </summary>
        [Output("created")]
        public Output<string?> Created { get; private set; } = null!;

        /// <summary>
        /// Describes a user that created the watchlist
        /// </summary>
        [Output("createdBy")]
        public Output<Outputs.WatchlistUserInfoResponse?> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The default duration of a watchlist (in ISO 8601 duration format)
        /// </summary>
        [Output("defaultDuration")]
        public Output<string?> DefaultDuration { get; private set; } = null!;

        /// <summary>
        /// A description of the watchlist
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the watchlist
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// A flag that indicates if the watchlist is deleted or not
        /// </summary>
        [Output("isDeleted")]
        public Output<bool?> IsDeleted { get; private set; } = null!;

        /// <summary>
        /// The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.
        /// </summary>
        [Output("itemsSearchKey")]
        public Output<string> ItemsSearchKey { get; private set; } = null!;

        /// <summary>
        /// List of labels relevant to this watchlist
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<string>> Labels { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of lines in a csv content to skip before the header
        /// </summary>
        [Output("numberOfLinesToSkip")]
        public Output<int?> NumberOfLinesToSkip { get; private set; } = null!;

        /// <summary>
        /// The provider of the watchlist
        /// </summary>
        [Output("provider")]
        public Output<string> Provider { get; private set; } = null!;

        /// <summary>
        /// The raw content that represents to watchlist items to create. Example : This line will be skipped
        /// header1,header2
        /// value1,value2
        /// </summary>
        [Output("rawContent")]
        public Output<string?> RawContent { get; private set; } = null!;

        /// <summary>
        /// The source of the watchlist
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The tenantId where the watchlist belongs to
        /// </summary>
        [Output("tenantId")]
        public Output<string?> TenantId { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The last time the watchlist was updated
        /// </summary>
        [Output("updated")]
        public Output<string?> Updated { get; private set; } = null!;

        /// <summary>
        /// Describes a user that updated the watchlist
        /// </summary>
        [Output("updatedBy")]
        public Output<Outputs.WatchlistUserInfoResponse?> UpdatedBy { get; private set; } = null!;

        /// <summary>
        /// The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted
        /// </summary>
        [Output("uploadStatus")]
        public Output<string?> UploadStatus { get; private set; } = null!;

        /// <summary>
        /// The alias of the watchlist
        /// </summary>
        [Output("watchlistAlias")]
        public Output<string?> WatchlistAlias { get; private set; } = null!;

        /// <summary>
        /// The id (a Guid) of the watchlist
        /// </summary>
        [Output("watchlistId")]
        public Output<string?> WatchlistId { get; private set; } = null!;

        /// <summary>
        /// The type of the watchlist
        /// </summary>
        [Output("watchlistType")]
        public Output<string?> WatchlistType { get; private set; } = null!;


        /// <summary>
        /// Create a Watchlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Watchlist(string name, WatchlistArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20210401:Watchlist", name, args ?? new WatchlistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Watchlist(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20210401:Watchlist", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20190101preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210301preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210901preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220101preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220401preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220501preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220601preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220701preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220901preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221001preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221201preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230301preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230501preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230601preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230701preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230801preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230901preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231001preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231101:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231201preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20240101preview:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20240301:Watchlist" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20240401preview:Watchlist" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Watchlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Watchlist Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Watchlist(name, id, options);
        }
    }

    public sealed class WatchlistArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The content type of the raw content. For now, only text/csv is valid
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// The time the watchlist was created
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Describes a user that created the watchlist
        /// </summary>
        [Input("createdBy")]
        public Input<Inputs.WatchlistUserInfoArgs>? CreatedBy { get; set; }

        /// <summary>
        /// The default duration of a watchlist (in ISO 8601 duration format)
        /// </summary>
        [Input("defaultDuration")]
        public Input<string>? DefaultDuration { get; set; }

        /// <summary>
        /// A description of the watchlist
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the watchlist
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// A flag that indicates if the watchlist is deleted or not
        /// </summary>
        [Input("isDeleted")]
        public Input<bool>? IsDeleted { get; set; }

        /// <summary>
        /// The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.
        /// </summary>
        [Input("itemsSearchKey", required: true)]
        public Input<string> ItemsSearchKey { get; set; } = null!;

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// List of labels relevant to this watchlist
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The number of lines in a csv content to skip before the header
        /// </summary>
        [Input("numberOfLinesToSkip")]
        public Input<int>? NumberOfLinesToSkip { get; set; }

        /// <summary>
        /// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
        /// </summary>
        [Input("operationalInsightsResourceProvider", required: true)]
        public Input<string> OperationalInsightsResourceProvider { get; set; } = null!;

        /// <summary>
        /// The provider of the watchlist
        /// </summary>
        [Input("provider", required: true)]
        public Input<string> Provider { get; set; } = null!;

        /// <summary>
        /// The raw content that represents to watchlist items to create. Example : This line will be skipped
        /// header1,header2
        /// value1,value2
        /// </summary>
        [Input("rawContent")]
        public Input<string>? RawContent { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The source of the watchlist
        /// </summary>
        [Input("source", required: true)]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20210401.Source> Source { get; set; } = null!;

        /// <summary>
        /// The tenantId where the watchlist belongs to
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The last time the watchlist was updated
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        /// <summary>
        /// Describes a user that updated the watchlist
        /// </summary>
        [Input("updatedBy")]
        public Input<Inputs.WatchlistUserInfoArgs>? UpdatedBy { get; set; }

        /// <summary>
        /// The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted
        /// </summary>
        [Input("uploadStatus")]
        public Input<string>? UploadStatus { get; set; }

        /// <summary>
        /// The alias of the watchlist
        /// </summary>
        [Input("watchlistAlias")]
        public Input<string>? WatchlistAlias { get; set; }

        /// <summary>
        /// The id (a Guid) of the watchlist
        /// </summary>
        [Input("watchlistId")]
        public Input<string>? WatchlistId { get; set; }

        /// <summary>
        /// The type of the watchlist
        /// </summary>
        [Input("watchlistType")]
        public Input<string>? WatchlistType { get; set; }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public WatchlistArgs()
        {
        }
        public static new WatchlistArgs Empty => new WatchlistArgs();
    }
}
