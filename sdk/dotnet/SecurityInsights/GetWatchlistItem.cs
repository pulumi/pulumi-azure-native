// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class GetWatchlistItem
    {
        /// <summary>
        /// Get a watchlist item.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2021-04-01, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview.
        /// </summary>
        public static Task<GetWatchlistItemResult> InvokeAsync(GetWatchlistItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWatchlistItemResult>("azure-native:securityinsights:getWatchlistItem", args ?? new GetWatchlistItemArgs(), options.WithDefaults());

        /// <summary>
        /// Get a watchlist item.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2021-04-01, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview.
        /// </summary>
        public static Output<GetWatchlistItemResult> Invoke(GetWatchlistItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWatchlistItemResult>("azure-native:securityinsights:getWatchlistItem", args ?? new GetWatchlistItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWatchlistItemArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The watchlist alias
        /// </summary>
        [Input("watchlistAlias", required: true)]
        public string WatchlistAlias { get; set; } = null!;

        /// <summary>
        /// The watchlist item id (GUID)
        /// </summary>
        [Input("watchlistItemId", required: true)]
        public string WatchlistItemId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetWatchlistItemArgs()
        {
        }
        public static new GetWatchlistItemArgs Empty => new GetWatchlistItemArgs();
    }

    public sealed class GetWatchlistItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The watchlist alias
        /// </summary>
        [Input("watchlistAlias", required: true)]
        public Input<string> WatchlistAlias { get; set; } = null!;

        /// <summary>
        /// The watchlist item id (GUID)
        /// </summary>
        [Input("watchlistItemId", required: true)]
        public Input<string> WatchlistItemId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetWatchlistItemInvokeArgs()
        {
        }
        public static new GetWatchlistItemInvokeArgs Empty => new GetWatchlistItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetWatchlistItemResult
    {
        /// <summary>
        /// The time the watchlist item was created
        /// </summary>
        public readonly string? Created;
        /// <summary>
        /// Describes a user that created the watchlist item
        /// </summary>
        public readonly Outputs.WatchlistUserInfoResponse? CreatedBy;
        /// <summary>
        /// key-value pairs for a watchlist item entity mapping
        /// </summary>
        public readonly object? EntityMapping;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A flag that indicates if the watchlist item is deleted or not
        /// </summary>
        public readonly bool? IsDeleted;
        /// <summary>
        /// key-value pairs for a watchlist item
        /// </summary>
        public readonly object ItemsKeyValue;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The tenantId to which the watchlist item belongs to
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The last time the watchlist item was updated
        /// </summary>
        public readonly string? Updated;
        /// <summary>
        /// Describes a user that updated the watchlist item
        /// </summary>
        public readonly Outputs.WatchlistUserInfoResponse? UpdatedBy;
        /// <summary>
        /// The id (a Guid) of the watchlist item
        /// </summary>
        public readonly string? WatchlistItemId;
        /// <summary>
        /// The type of the watchlist item
        /// </summary>
        public readonly string? WatchlistItemType;

        [OutputConstructor]
        private GetWatchlistItemResult(
            string? created,

            Outputs.WatchlistUserInfoResponse? createdBy,

            object? entityMapping,

            string? etag,

            string id,

            bool? isDeleted,

            object itemsKeyValue,

            string name,

            Outputs.SystemDataResponse systemData,

            string? tenantId,

            string type,

            string? updated,

            Outputs.WatchlistUserInfoResponse? updatedBy,

            string? watchlistItemId,

            string? watchlistItemType)
        {
            Created = created;
            CreatedBy = createdBy;
            EntityMapping = entityMapping;
            Etag = etag;
            Id = id;
            IsDeleted = isDeleted;
            ItemsKeyValue = itemsKeyValue;
            Name = name;
            SystemData = systemData;
            TenantId = tenantId;
            Type = type;
            Updated = updated;
            UpdatedBy = updatedBy;
            WatchlistItemId = watchlistItemId;
            WatchlistItemType = watchlistItemType;
        }
    }
}
