// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20240401Preview.Inputs
{

    /// <summary>
    /// The request configuration.
    /// </summary>
    public sealed class RestApiPollerRequestConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The API endpoint.
        /// </summary>
        [Input("apiEndpoint", required: true)]
        public Input<string> ApiEndpoint { get; set; } = null!;

        /// <summary>
        /// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
        /// </summary>
        [Input("endTimeAttributeName")]
        public Input<string>? EndTimeAttributeName { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// The header for the request for the remote server.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// The HTTP method, default value GET.
        /// </summary>
        [Input("httpMethod")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20240401Preview.HttpMethodVerb>? HttpMethod { get; set; }

        /// <summary>
        /// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
        /// </summary>
        [Input("isPostPayloadJson")]
        public Input<bool>? IsPostPayloadJson { get; set; }

        /// <summary>
        /// The HTTP query parameters to RESTful API.
        /// </summary>
        [Input("queryParameters")]
        public Input<object>? QueryParameters { get; set; }

        /// <summary>
        /// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
        /// </summary>
        [Input("queryParametersTemplate")]
        public Input<string>? QueryParametersTemplate { get; set; }

        /// <summary>
        /// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
        /// </summary>
        [Input("queryTimeFormat")]
        public Input<string>? QueryTimeFormat { get; set; }

        /// <summary>
        /// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
        /// </summary>
        [Input("queryTimeIntervalAttributeName")]
        public Input<string>? QueryTimeIntervalAttributeName { get; set; }

        /// <summary>
        /// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
        /// </summary>
        [Input("queryTimeIntervalDelimiter")]
        public Input<string>? QueryTimeIntervalDelimiter { get; set; }

        /// <summary>
        /// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
        /// </summary>
        [Input("queryTimeIntervalPrepend")]
        public Input<string>? QueryTimeIntervalPrepend { get; set; }

        /// <summary>
        /// The query window in minutes for the request.
        /// </summary>
        [Input("queryWindowInMin")]
        public Input<int>? QueryWindowInMin { get; set; }

        /// <summary>
        /// The Rate limit queries per second for the request..
        /// </summary>
        [Input("rateLimitQPS")]
        public Input<int>? RateLimitQPS { get; set; }

        /// <summary>
        /// The retry count.
        /// </summary>
        [Input("retryCount")]
        public Input<int>? RetryCount { get; set; }

        /// <summary>
        /// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
        /// </summary>
        [Input("startTimeAttributeName")]
        public Input<string>? StartTimeAttributeName { get; set; }

        /// <summary>
        /// The timeout in seconds.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        public RestApiPollerRequestConfigArgs()
        {
        }
        public static new RestApiPollerRequestConfigArgs Empty => new RestApiPollerRequestConfigArgs();
    }
}
