// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20240401Preview.Outputs
{

    /// <summary>
    /// The request configuration.
    /// </summary>
    [OutputType]
    public sealed class RestApiPollerRequestConfigResponse
    {
        /// <summary>
        /// The API endpoint.
        /// </summary>
        public readonly string ApiEndpoint;
        /// <summary>
        /// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
        /// </summary>
        public readonly string? EndTimeAttributeName;
        /// <summary>
        /// The header for the request for the remote server.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Headers;
        /// <summary>
        /// The HTTP method, default value GET.
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
        /// </summary>
        public readonly bool? IsPostPayloadJson;
        /// <summary>
        /// The HTTP query parameters to RESTful API.
        /// </summary>
        public readonly object? QueryParameters;
        /// <summary>
        /// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
        /// </summary>
        public readonly string? QueryParametersTemplate;
        /// <summary>
        /// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
        /// </summary>
        public readonly string? QueryTimeFormat;
        /// <summary>
        /// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
        /// </summary>
        public readonly string? QueryTimeIntervalAttributeName;
        /// <summary>
        /// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
        /// </summary>
        public readonly string? QueryTimeIntervalDelimiter;
        /// <summary>
        /// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
        /// </summary>
        public readonly string? QueryTimeIntervalPrepend;
        /// <summary>
        /// The query window in minutes for the request.
        /// </summary>
        public readonly int? QueryWindowInMin;
        /// <summary>
        /// The Rate limit queries per second for the request..
        /// </summary>
        public readonly int? RateLimitQPS;
        /// <summary>
        /// The retry count.
        /// </summary>
        public readonly int? RetryCount;
        /// <summary>
        /// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
        /// </summary>
        public readonly string? StartTimeAttributeName;
        /// <summary>
        /// The timeout in seconds.
        /// </summary>
        public readonly int? TimeoutInSeconds;

        [OutputConstructor]
        private RestApiPollerRequestConfigResponse(
            string apiEndpoint,

            string? endTimeAttributeName,

            ImmutableDictionary<string, string>? headers,

            string? httpMethod,

            bool? isPostPayloadJson,

            object? queryParameters,

            string? queryParametersTemplate,

            string? queryTimeFormat,

            string? queryTimeIntervalAttributeName,

            string? queryTimeIntervalDelimiter,

            string? queryTimeIntervalPrepend,

            int? queryWindowInMin,

            int? rateLimitQPS,

            int? retryCount,

            string? startTimeAttributeName,

            int? timeoutInSeconds)
        {
            ApiEndpoint = apiEndpoint;
            EndTimeAttributeName = endTimeAttributeName;
            Headers = headers;
            HttpMethod = httpMethod;
            IsPostPayloadJson = isPostPayloadJson;
            QueryParameters = queryParameters;
            QueryParametersTemplate = queryParametersTemplate;
            QueryTimeFormat = queryTimeFormat;
            QueryTimeIntervalAttributeName = queryTimeIntervalAttributeName;
            QueryTimeIntervalDelimiter = queryTimeIntervalDelimiter;
            QueryTimeIntervalPrepend = queryTimeIntervalPrepend;
            QueryWindowInMin = queryWindowInMin;
            RateLimitQPS = rateLimitQPS;
            RetryCount = retryCount;
            StartTimeAttributeName = startTimeAttributeName;
            TimeoutInSeconds = timeoutInSeconds;
        }
    }
}
