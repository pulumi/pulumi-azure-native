// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230901Preview
{
    public static class GetHunt
    {
        /// <summary>
        /// Gets a hunt, without relations and comments.
        /// </summary>
        public static Task<GetHuntResult> InvokeAsync(GetHuntArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHuntResult>("azure-native:securityinsights/v20230901preview:getHunt", args ?? new GetHuntArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a hunt, without relations and comments.
        /// </summary>
        public static Output<GetHuntResult> Invoke(GetHuntInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHuntResult>("azure-native:securityinsights/v20230901preview:getHunt", args ?? new GetHuntInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHuntArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hunt id (GUID)
        /// </summary>
        [Input("huntId", required: true)]
        public string HuntId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetHuntArgs()
        {
        }
        public static new GetHuntArgs Empty => new GetHuntArgs();
    }

    public sealed class GetHuntInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hunt id (GUID)
        /// </summary>
        [Input("huntId", required: true)]
        public Input<string> HuntId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetHuntInvokeArgs()
        {
        }
        public static new GetHuntInvokeArgs Empty => new GetHuntInvokeArgs();
    }


    [OutputType]
    public sealed class GetHuntResult
    {
        /// <summary>
        /// A list of mitre attack tactics the hunt is associated with
        /// </summary>
        public readonly ImmutableArray<string> AttackTactics;
        /// <summary>
        /// A list of a mitre attack techniques the hunt is associated with
        /// </summary>
        public readonly ImmutableArray<string> AttackTechniques;
        /// <summary>
        /// The description of the hunt
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the hunt
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The hypothesis status of the hunt.
        /// </summary>
        public readonly string? HypothesisStatus;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of labels relevant to this hunt 
        /// </summary>
        public readonly ImmutableArray<string> Labels;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Describes a user that the hunt is assigned to
        /// </summary>
        public readonly Outputs.HuntOwnerResponse? Owner;
        /// <summary>
        /// The status of the hunt.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetHuntResult(
            ImmutableArray<string> attackTactics,

            ImmutableArray<string> attackTechniques,

            string description,

            string displayName,

            string? etag,

            string? hypothesisStatus,

            string id,

            ImmutableArray<string> labels,

            string name,

            Outputs.HuntOwnerResponse? owner,

            string? status,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            AttackTactics = attackTactics;
            AttackTechniques = attackTechniques;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            HypothesisStatus = hypothesisStatus;
            Id = id;
            Labels = labels;
            Name = name;
            Owner = owner;
            Status = status;
            SystemData = systemData;
            Type = type;
        }
    }
}
