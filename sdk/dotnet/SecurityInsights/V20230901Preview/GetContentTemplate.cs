// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230901Preview
{
    public static class GetContentTemplate
    {
        /// <summary>
        /// Gets a template byt its identifier.
        /// </summary>
        public static Task<GetContentTemplateResult> InvokeAsync(GetContentTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContentTemplateResult>("azure-native:securityinsights/v20230901preview:getContentTemplate", args ?? new GetContentTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a template byt its identifier.
        /// </summary>
        public static Output<GetContentTemplateResult> Invoke(GetContentTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentTemplateResult>("azure-native:securityinsights/v20230901preview:getContentTemplate", args ?? new GetContentTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContentTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// template Id
        /// </summary>
        [Input("templateId", required: true)]
        public string TemplateId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetContentTemplateArgs()
        {
        }
        public static new GetContentTemplateArgs Empty => new GetContentTemplateArgs();
    }

    public sealed class GetContentTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// template Id
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetContentTemplateInvokeArgs()
        {
        }
        public static new GetContentTemplateInvokeArgs Empty => new GetContentTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetContentTemplateResult
    {
        /// <summary>
        /// The creator of the content item.
        /// </summary>
        public readonly Outputs.MetadataAuthorResponse? Author;
        /// <summary>
        /// Categories for the item
        /// </summary>
        public readonly Outputs.MetadataCategoriesResponse? Categories;
        /// <summary>
        /// Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name
        /// </summary>
        public readonly string ContentId;
        /// <summary>
        /// The kind of content the template is for.
        /// </summary>
        public readonly string ContentKind;
        /// <summary>
        /// Unique ID for the content. It should be generated based on the contentId of the package, contentId of the template, contentKind of the template and the contentVersion of the template
        /// </summary>
        public readonly string ContentProductId;
        /// <summary>
        /// Schema version of the content. Can be used to distinguish between different flow based on the schema version
        /// </summary>
        public readonly string? ContentSchemaVersion;
        /// <summary>
        /// The custom version of the content. A optional free text
        /// </summary>
        public readonly string? CustomVersion;
        /// <summary>
        /// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        /// </summary>
        public readonly Outputs.MetadataDependenciesResponse? Dependencies;
        /// <summary>
        /// The display name of the template
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// first publish date content item
        /// </summary>
        public readonly string? FirstPublishDate;
        /// <summary>
        /// the icon identifier. this id can later be fetched from the content metadata
        /// </summary>
        public readonly string? Icon;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// last publish date for the content item
        /// </summary>
        public readonly string? LastPublishDate;
        /// <summary>
        /// The JSON of the ARM template to deploy active content
        /// </summary>
        public readonly object? MainTemplate;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// the package Id contains this template
        /// </summary>
        public readonly string PackageId;
        /// <summary>
        /// the packageKind of the package contains this template
        /// </summary>
        public readonly string? PackageKind;
        /// <summary>
        /// the name of the package contains this template
        /// </summary>
        public readonly string? PackageName;
        /// <summary>
        /// Version of the package.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
        /// </summary>
        public readonly string PackageVersion;
        /// <summary>
        /// preview image file names. These will be taken from the solution artifacts
        /// </summary>
        public readonly ImmutableArray<string> PreviewImages;
        /// <summary>
        /// preview image file names. These will be taken from the solution artifacts. used for dark theme support
        /// </summary>
        public readonly ImmutableArray<string> PreviewImagesDark;
        /// <summary>
        /// Providers for the content item
        /// </summary>
        public readonly ImmutableArray<string> Providers;
        /// <summary>
        /// Source of the content.  This is where/how it was created.
        /// </summary>
        public readonly Outputs.MetadataSourceResponse Source;
        /// <summary>
        /// Support information for the template - type, name, contact information
        /// </summary>
        public readonly Outputs.MetadataSupportResponse? Support;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// the tactics the resource covers
        /// </summary>
        public readonly ImmutableArray<string> ThreatAnalysisTactics;
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        public readonly ImmutableArray<string> ThreatAnalysisTechniques;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetContentTemplateResult(
            Outputs.MetadataAuthorResponse? author,

            Outputs.MetadataCategoriesResponse? categories,

            string contentId,

            string contentKind,

            string contentProductId,

            string? contentSchemaVersion,

            string? customVersion,

            Outputs.MetadataDependenciesResponse? dependencies,

            string displayName,

            string? etag,

            string? firstPublishDate,

            string? icon,

            string id,

            string? lastPublishDate,

            object? mainTemplate,

            string name,

            string packageId,

            string? packageKind,

            string? packageName,

            string packageVersion,

            ImmutableArray<string> previewImages,

            ImmutableArray<string> previewImagesDark,

            ImmutableArray<string> providers,

            Outputs.MetadataSourceResponse source,

            Outputs.MetadataSupportResponse? support,

            Outputs.SystemDataResponse systemData,

            ImmutableArray<string> threatAnalysisTactics,

            ImmutableArray<string> threatAnalysisTechniques,

            string type,

            string version)
        {
            Author = author;
            Categories = categories;
            ContentId = contentId;
            ContentKind = contentKind;
            ContentProductId = contentProductId;
            ContentSchemaVersion = contentSchemaVersion;
            CustomVersion = customVersion;
            Dependencies = dependencies;
            DisplayName = displayName;
            Etag = etag;
            FirstPublishDate = firstPublishDate;
            Icon = icon;
            Id = id;
            LastPublishDate = lastPublishDate;
            MainTemplate = mainTemplate;
            Name = name;
            PackageId = packageId;
            PackageKind = packageKind;
            PackageName = packageName;
            PackageVersion = packageVersion;
            PreviewImages = previewImages;
            PreviewImagesDark = previewImagesDark;
            Providers = providers;
            Source = source;
            Support = support;
            SystemData = systemData;
            ThreatAnalysisTactics = threatAnalysisTactics;
            ThreatAnalysisTechniques = threatAnalysisTechniques;
            Type = type;
            Version = version;
        }
    }
}
