// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230901Preview
{
    /// <summary>
    /// Represents a Hunt in Azure Security Insights.
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20230901preview:Hunt")]
    public partial class Hunt : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of mitre attack tactics the hunt is associated with
        /// </summary>
        [Output("attackTactics")]
        public Output<ImmutableArray<string>> AttackTactics { get; private set; } = null!;

        /// <summary>
        /// A list of a mitre attack techniques the hunt is associated with
        /// </summary>
        [Output("attackTechniques")]
        public Output<ImmutableArray<string>> AttackTechniques { get; private set; } = null!;

        /// <summary>
        /// The description of the hunt
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the hunt
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The hypothesis status of the hunt.
        /// </summary>
        [Output("hypothesisStatus")]
        public Output<string?> HypothesisStatus { get; private set; } = null!;

        /// <summary>
        /// List of labels relevant to this hunt 
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Describes a user that the hunt is assigned to
        /// </summary>
        [Output("owner")]
        public Output<Outputs.HuntOwnerResponse?> Owner { get; private set; } = null!;

        /// <summary>
        /// The status of the hunt.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Hunt resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Hunt(string name, HuntArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230901preview:Hunt", name, args ?? new HuntArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Hunt(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230901preview:Hunt", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230501preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230601preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230701preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230801preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231001preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231201preview:Hunt" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20240101preview:Hunt" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Hunt resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Hunt Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Hunt(name, id, options);
        }
    }

    public sealed class HuntArgs : global::Pulumi.ResourceArgs
    {
        [Input("attackTactics")]
        private InputList<Union<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.AttackTactic>>? _attackTactics;

        /// <summary>
        /// A list of mitre attack tactics the hunt is associated with
        /// </summary>
        public InputList<Union<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.AttackTactic>> AttackTactics
        {
            get => _attackTactics ?? (_attackTactics = new InputList<Union<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.AttackTactic>>());
            set => _attackTactics = value;
        }

        [Input("attackTechniques")]
        private InputList<string>? _attackTechniques;

        /// <summary>
        /// A list of a mitre attack techniques the hunt is associated with
        /// </summary>
        public InputList<string> AttackTechniques
        {
            get => _attackTechniques ?? (_attackTechniques = new InputList<string>());
            set => _attackTechniques = value;
        }

        /// <summary>
        /// The description of the hunt
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The display name of the hunt
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The hunt id (GUID)
        /// </summary>
        [Input("huntId")]
        public Input<string>? HuntId { get; set; }

        /// <summary>
        /// The hypothesis status of the hunt.
        /// </summary>
        [Input("hypothesisStatus")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.HypothesisStatus>? HypothesisStatus { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// List of labels relevant to this hunt 
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Describes a user that the hunt is assigned to
        /// </summary>
        [Input("owner")]
        public Input<Inputs.HuntOwnerArgs>? Owner { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The status of the hunt.
        /// </summary>
        [Input("status")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.Status>? Status { get; set; }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public HuntArgs()
        {
            HypothesisStatus = "Unknown";
            Status = "New";
        }
        public static new HuntArgs Empty => new HuntArgs();
    }
}
