// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230901Preview
{
    /// <summary>
    /// Represents a Package in Azure Security Insights.
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20230901preview:ContentPackage")]
    public partial class ContentPackage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The author of the package
        /// </summary>
        [Output("author")]
        public Output<Outputs.MetadataAuthorResponse?> Author { get; private set; } = null!;

        /// <summary>
        /// The categories of the package
        /// </summary>
        [Output("categories")]
        public Output<Outputs.MetadataCategoriesResponse?> Categories { get; private set; } = null!;

        /// <summary>
        /// The content id of the package
        /// </summary>
        [Output("contentId")]
        public Output<string> ContentId { get; private set; } = null!;

        /// <summary>
        /// The package kind
        /// </summary>
        [Output("contentKind")]
        public Output<string> ContentKind { get; private set; } = null!;

        /// <summary>
        /// Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
        /// </summary>
        [Output("contentProductId")]
        public Output<string> ContentProductId { get; private set; } = null!;

        /// <summary>
        /// The version of the content schema.
        /// </summary>
        [Output("contentSchemaVersion")]
        public Output<string?> ContentSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// The support tier of the package
        /// </summary>
        [Output("dependencies")]
        public Output<Outputs.MetadataDependenciesResponse?> Dependencies { get; private set; } = null!;

        /// <summary>
        /// The description of the package
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the package
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// first publish date package item
        /// </summary>
        [Output("firstPublishDate")]
        public Output<string?> FirstPublishDate { get; private set; } = null!;

        /// <summary>
        /// the icon identifier. this id can later be fetched from the content metadata
        /// </summary>
        [Output("icon")]
        public Output<string?> Icon { get; private set; } = null!;

        /// <summary>
        /// Flag indicates if this package is among the featured list.
        /// </summary>
        [Output("isFeatured")]
        public Output<string?> IsFeatured { get; private set; } = null!;

        /// <summary>
        /// Flag indicates if this is a newly published package.
        /// </summary>
        [Output("isNew")]
        public Output<string?> IsNew { get; private set; } = null!;

        /// <summary>
        /// Flag indicates if this package is in preview.
        /// </summary>
        [Output("isPreview")]
        public Output<string?> IsPreview { get; private set; } = null!;

        /// <summary>
        /// last publish date for the package item
        /// </summary>
        [Output("lastPublishDate")]
        public Output<string?> LastPublishDate { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Providers for the package item
        /// </summary>
        [Output("providers")]
        public Output<ImmutableArray<string>> Providers { get; private set; } = null!;

        /// <summary>
        /// The publisher display name of the package
        /// </summary>
        [Output("publisherDisplayName")]
        public Output<string?> PublisherDisplayName { get; private set; } = null!;

        /// <summary>
        /// The source of the package
        /// </summary>
        [Output("source")]
        public Output<Outputs.MetadataSourceResponse?> Source { get; private set; } = null!;

        /// <summary>
        /// The support tier of the package
        /// </summary>
        [Output("support")]
        public Output<Outputs.MetadataSupportResponse?> Support { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// the tactics the resource covers
        /// </summary>
        [Output("threatAnalysisTactics")]
        public Output<ImmutableArray<string>> ThreatAnalysisTactics { get; private set; } = null!;

        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        [Output("threatAnalysisTechniques")]
        public Output<ImmutableArray<string>> ThreatAnalysisTechniques { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// the latest version number of the package
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ContentPackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContentPackage(string name, ContentPackageArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230901preview:ContentPackage", name, args ?? new ContentPackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContentPackage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20230901preview:ContentPackage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230501preview:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230601preview:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230701preview:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230801preview:ContentPackage" },
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20231001preview:ContentPackage" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContentPackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContentPackage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContentPackage(name, id, options);
        }
    }

    public sealed class ContentPackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The author of the package
        /// </summary>
        [Input("author")]
        public Input<Inputs.MetadataAuthorArgs>? Author { get; set; }

        /// <summary>
        /// The categories of the package
        /// </summary>
        [Input("categories")]
        public Input<Inputs.MetadataCategoriesArgs>? Categories { get; set; }

        /// <summary>
        /// The content id of the package
        /// </summary>
        [Input("contentId", required: true)]
        public Input<string> ContentId { get; set; } = null!;

        /// <summary>
        /// The package kind
        /// </summary>
        [Input("contentKind", required: true)]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.PackageKind> ContentKind { get; set; } = null!;

        /// <summary>
        /// Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
        /// </summary>
        [Input("contentProductId", required: true)]
        public Input<string> ContentProductId { get; set; } = null!;

        /// <summary>
        /// The version of the content schema.
        /// </summary>
        [Input("contentSchemaVersion")]
        public Input<string>? ContentSchemaVersion { get; set; }

        /// <summary>
        /// The support tier of the package
        /// </summary>
        [Input("dependencies")]
        public Input<Inputs.MetadataDependenciesArgs>? Dependencies { get; set; }

        /// <summary>
        /// The description of the package
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the package
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// first publish date package item
        /// </summary>
        [Input("firstPublishDate")]
        public Input<string>? FirstPublishDate { get; set; }

        /// <summary>
        /// the icon identifier. this id can later be fetched from the content metadata
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        /// <summary>
        /// Flag indicates if this package is among the featured list.
        /// </summary>
        [Input("isFeatured")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.Flag>? IsFeatured { get; set; }

        /// <summary>
        /// Flag indicates if this is a newly published package.
        /// </summary>
        [Input("isNew")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.Flag>? IsNew { get; set; }

        /// <summary>
        /// Flag indicates if this package is in preview.
        /// </summary>
        [Input("isPreview")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20230901Preview.Flag>? IsPreview { get; set; }

        /// <summary>
        /// last publish date for the package item
        /// </summary>
        [Input("lastPublishDate")]
        public Input<string>? LastPublishDate { get; set; }

        /// <summary>
        /// package Id
        /// </summary>
        [Input("packageId")]
        public Input<string>? PackageId { get; set; }

        [Input("providers")]
        private InputList<string>? _providers;

        /// <summary>
        /// Providers for the package item
        /// </summary>
        public InputList<string> Providers
        {
            get => _providers ?? (_providers = new InputList<string>());
            set => _providers = value;
        }

        /// <summary>
        /// The publisher display name of the package
        /// </summary>
        [Input("publisherDisplayName")]
        public Input<string>? PublisherDisplayName { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The source of the package
        /// </summary>
        [Input("source")]
        public Input<Inputs.MetadataSourceArgs>? Source { get; set; }

        /// <summary>
        /// The support tier of the package
        /// </summary>
        [Input("support")]
        public Input<Inputs.MetadataSupportArgs>? Support { get; set; }

        [Input("threatAnalysisTactics")]
        private InputList<string>? _threatAnalysisTactics;

        /// <summary>
        /// the tactics the resource covers
        /// </summary>
        public InputList<string> ThreatAnalysisTactics
        {
            get => _threatAnalysisTactics ?? (_threatAnalysisTactics = new InputList<string>());
            set => _threatAnalysisTactics = value;
        }

        [Input("threatAnalysisTechniques")]
        private InputList<string>? _threatAnalysisTechniques;

        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        public InputList<string> ThreatAnalysisTechniques
        {
            get => _threatAnalysisTechniques ?? (_threatAnalysisTechniques = new InputList<string>());
            set => _threatAnalysisTechniques = value;
        }

        /// <summary>
        /// the latest version number of the package
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ContentPackageArgs()
        {
        }
        public static new ContentPackageArgs Empty => new ContentPackageArgs();
    }
}
