// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class ListGeodataByIp
    {
        /// <summary>
        /// Get geodata for a single IP address
        /// Azure REST API version: 2024-01-01-preview.
        /// </summary>
        public static Task<ListGeodataByIpResult> InvokeAsync(ListGeodataByIpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListGeodataByIpResult>("azure-native:securityinsights:listGeodataByIp", args ?? new ListGeodataByIpArgs(), options.WithDefaults());

        /// <summary>
        /// Get geodata for a single IP address
        /// Azure REST API version: 2024-01-01-preview.
        /// </summary>
        public static Output<ListGeodataByIpResult> Invoke(ListGeodataByIpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListGeodataByIpResult>("azure-native:securityinsights:listGeodataByIp", args ?? new ListGeodataByIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListGeodataByIpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Enrichment type
        /// </summary>
        [Input("enrichmentType", required: true)]
        public string EnrichmentType { get; set; } = null!;

        /// <summary>
        /// The dotted-decimal or colon-separated string representation of the IP address
        /// </summary>
        [Input("ipAddress")]
        public string? IpAddress { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public ListGeodataByIpArgs()
        {
        }
        public static new ListGeodataByIpArgs Empty => new ListGeodataByIpArgs();
    }

    public sealed class ListGeodataByIpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Enrichment type
        /// </summary>
        [Input("enrichmentType", required: true)]
        public Input<string> EnrichmentType { get; set; } = null!;

        /// <summary>
        /// The dotted-decimal or colon-separated string representation of the IP address
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ListGeodataByIpInvokeArgs()
        {
        }
        public static new ListGeodataByIpInvokeArgs Empty => new ListGeodataByIpInvokeArgs();
    }


    [OutputType]
    public sealed class ListGeodataByIpResult
    {
        /// <summary>
        /// The autonomous system number associated with this IP address
        /// </summary>
        public readonly string? Asn;
        /// <summary>
        /// The name of the carrier for this IP address
        /// </summary>
        public readonly string? Carrier;
        /// <summary>
        /// The city this IP address is located in
        /// </summary>
        public readonly string? City;
        /// <summary>
        /// A numeric rating of confidence that the value in the 'city' field is correct, on a scale of 0-100
        /// </summary>
        public readonly int? CityConfidenceFactor;
        /// <summary>
        /// The continent this IP address is located on
        /// </summary>
        public readonly string? Continent;
        /// <summary>
        /// The county this IP address is located in
        /// </summary>
        public readonly string? Country;
        /// <summary>
        /// A numeric rating of confidence that the value in the 'country' field is correct on a scale of 0-100
        /// </summary>
        public readonly int? CountryConfidenceFactor;
        /// <summary>
        /// The dotted-decimal or colon-separated string representation of the IP address
        /// </summary>
        public readonly string? IpAddr;
        /// <summary>
        /// A description of the connection type of this IP address
        /// </summary>
        public readonly string? IpRoutingType;
        /// <summary>
        /// The latitude of this IP address
        /// </summary>
        public readonly string? Latitude;
        /// <summary>
        /// The longitude of this IP address
        /// </summary>
        public readonly string? Longitude;
        /// <summary>
        /// The name of the organization for this IP address
        /// </summary>
        public readonly string? Organization;
        /// <summary>
        /// The type of the organization for this IP address
        /// </summary>
        public readonly string? OrganizationType;
        /// <summary>
        /// The geographic region this IP address is located in
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// The state this IP address is located in
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The abbreviated name for the state this IP address is located in
        /// </summary>
        public readonly string? StateCode;
        /// <summary>
        /// A numeric rating of confidence that the value in the 'state' field is correct on a scale of 0-100
        /// </summary>
        public readonly int? StateConfidenceFactor;

        [OutputConstructor]
        private ListGeodataByIpResult(
            string? asn,

            string? carrier,

            string? city,

            int? cityConfidenceFactor,

            string? continent,

            string? country,

            int? countryConfidenceFactor,

            string? ipAddr,

            string? ipRoutingType,

            string? latitude,

            string? longitude,

            string? organization,

            string? organizationType,

            string? region,

            string? state,

            string? stateCode,

            int? stateConfidenceFactor)
        {
            Asn = asn;
            Carrier = carrier;
            City = city;
            CityConfidenceFactor = cityConfidenceFactor;
            Continent = continent;
            Country = country;
            CountryConfidenceFactor = countryConfidenceFactor;
            IpAddr = ipAddr;
            IpRoutingType = ipRoutingType;
            Latitude = latitude;
            Longitude = longitude;
            Organization = organization;
            OrganizationType = organizationType;
            Region = region;
            State = state;
            StateCode = stateCode;
            StateConfidenceFactor = stateConfidenceFactor;
        }
    }
}
