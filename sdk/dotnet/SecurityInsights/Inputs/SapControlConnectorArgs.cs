// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.Inputs
{

    /// <summary>
    /// Describes the SapControl connector configuration.
    /// </summary>
    public sealed class SapControlConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents the types of HTTPS configuration to connect to the SapControl service.
        /// </summary>
        [Input("httpsConfiguration")]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.HttpsConfigurationType>? HttpsConfiguration { get; set; }

        /// <summary>
        /// The instance number. Only 2 digits are allowed.
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// The port of the SOAP connection to SAP Control.
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// The server name.
        /// FQDN or IP address.
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// The timezone.
        /// example: "GMT+0" or "GMT-8"
        /// default: "GMT+0"
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Represents the types of SAP systems.
        /// Expected value is 'SapControl'.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SapControlConnectorArgs()
        {
            Timezone = "GMT+0";
        }
        public static new SapControlConnectorArgs Empty => new SapControlConnectorArgs();
    }
}
