// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.Inputs
{

    /// <summary>
    /// Describes automation rule triggering logic
    /// </summary>
    public sealed class AutomationRuleTriggeringLogicArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.AutomationRulePropertyValuesConditionArgs>? _conditions;

        /// <summary>
        /// The conditions to evaluate to determine if the automation rule should be triggered on a given object
        /// </summary>
        public InputList<Inputs.AutomationRulePropertyValuesConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.AutomationRulePropertyValuesConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Determines when the automation rule should automatically expire and be disabled.
        /// </summary>
        [Input("expirationTimeUtc")]
        public Input<string>? ExpirationTimeUtc { get; set; }

        /// <summary>
        /// Determines whether the automation rule is enabled or disabled.
        /// </summary>
        [Input("isEnabled", required: true)]
        public Input<bool> IsEnabled { get; set; } = null!;

        /// <summary>
        /// The type of object the automation rule triggers on
        /// </summary>
        [Input("triggersOn", required: true)]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.TriggersOn> TriggersOn { get; set; } = null!;

        /// <summary>
        /// The type of event the automation rule triggers on
        /// </summary>
        [Input("triggersWhen", required: true)]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.TriggersWhen> TriggersWhen { get; set; } = null!;

        public AutomationRuleTriggeringLogicArgs()
        {
        }
        public static new AutomationRuleTriggeringLogicArgs Empty => new AutomationRuleTriggeringLogicArgs();
    }
}
