// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230601Preview
{
    public static class GetIncidentComment
    {
        /// <summary>
        /// Gets an incident comment.
        /// </summary>
        public static Task<GetIncidentCommentResult> InvokeAsync(GetIncidentCommentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIncidentCommentResult>("azure-native:securityinsights/v20230601preview:getIncidentComment", args ?? new GetIncidentCommentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an incident comment.
        /// </summary>
        public static Output<GetIncidentCommentResult> Invoke(GetIncidentCommentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentCommentResult>("azure-native:securityinsights/v20230601preview:getIncidentComment", args ?? new GetIncidentCommentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIncidentCommentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Incident comment ID
        /// </summary>
        [Input("incidentCommentId", required: true)]
        public string IncidentCommentId { get; set; } = null!;

        /// <summary>
        /// Incident ID
        /// </summary>
        [Input("incidentId", required: true)]
        public string IncidentId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetIncidentCommentArgs()
        {
        }
        public static new GetIncidentCommentArgs Empty => new GetIncidentCommentArgs();
    }

    public sealed class GetIncidentCommentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Incident comment ID
        /// </summary>
        [Input("incidentCommentId", required: true)]
        public Input<string> IncidentCommentId { get; set; } = null!;

        /// <summary>
        /// Incident ID
        /// </summary>
        [Input("incidentId", required: true)]
        public Input<string> IncidentId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetIncidentCommentInvokeArgs()
        {
        }
        public static new GetIncidentCommentInvokeArgs Empty => new GetIncidentCommentInvokeArgs();
    }


    [OutputType]
    public sealed class GetIncidentCommentResult
    {
        /// <summary>
        /// Describes the client that created the comment
        /// </summary>
        public readonly Outputs.ClientInfoResponse Author;
        /// <summary>
        /// The time the comment was created
        /// </summary>
        public readonly string CreatedTimeUtc;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time the comment was updated
        /// </summary>
        public readonly string LastModifiedTimeUtc;
        /// <summary>
        /// The comment message
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIncidentCommentResult(
            Outputs.ClientInfoResponse author,

            string createdTimeUtc,

            string? etag,

            string id,

            string lastModifiedTimeUtc,

            string message,

            string name,

            Outputs.SystemDataResponse systemData,

            string type)
        {
            Author = author;
            CreatedTimeUtc = createdTimeUtc;
            Etag = etag;
            Id = id;
            LastModifiedTimeUtc = lastModifiedTimeUtc;
            Message = message;
            Name = name;
            SystemData = systemData;
            Type = type;
        }
    }
}
