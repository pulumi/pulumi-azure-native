// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights
{
    public static class GetIncident
    {
        /// <summary>
        /// Gets a given incident.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2021-03-01-preview, 2023-02-01-preview, 2023-03-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview.
        /// </summary>
        public static Task<GetIncidentResult> InvokeAsync(GetIncidentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIncidentResult>("azure-native:securityinsights:getIncident", args ?? new GetIncidentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a given incident.
        /// Azure REST API version: 2023-02-01.
        /// 
        /// Other available API versions: 2021-03-01-preview, 2023-02-01-preview, 2023-03-01-preview, 2023-06-01-preview, 2023-07-01-preview, 2023-08-01-preview, 2023-09-01-preview, 2023-10-01-preview, 2023-11-01, 2023-12-01-preview, 2024-01-01-preview, 2024-03-01, 2024-04-01-preview.
        /// </summary>
        public static Output<GetIncidentResult> Invoke(GetIncidentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentResult>("azure-native:securityinsights:getIncident", args ?? new GetIncidentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIncidentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Incident ID
        /// </summary>
        [Input("incidentId", required: true)]
        public string IncidentId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetIncidentArgs()
        {
        }
        public static new GetIncidentArgs Empty => new GetIncidentArgs();
    }

    public sealed class GetIncidentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Incident ID
        /// </summary>
        [Input("incidentId", required: true)]
        public Input<string> IncidentId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetIncidentInvokeArgs()
        {
        }
        public static new GetIncidentInvokeArgs Empty => new GetIncidentInvokeArgs();
    }


    [OutputType]
    public sealed class GetIncidentResult
    {
        /// <summary>
        /// Additional data on the incident
        /// </summary>
        public readonly Outputs.IncidentAdditionalDataResponse AdditionalData;
        /// <summary>
        /// The reason the incident was closed
        /// </summary>
        public readonly string? Classification;
        /// <summary>
        /// Describes the reason the incident was closed
        /// </summary>
        public readonly string? ClassificationComment;
        /// <summary>
        /// The classification reason the incident was closed with
        /// </summary>
        public readonly string? ClassificationReason;
        /// <summary>
        /// The time the incident was created
        /// </summary>
        public readonly string CreatedTimeUtc;
        /// <summary>
        /// The description of the incident
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// The time of the first activity in the incident
        /// </summary>
        public readonly string? FirstActivityTimeUtc;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A sequential number
        /// </summary>
        public readonly int IncidentNumber;
        /// <summary>
        /// The deep-link url to the incident in Azure portal
        /// </summary>
        public readonly string IncidentUrl;
        /// <summary>
        /// List of labels relevant to this incident
        /// </summary>
        public readonly ImmutableArray<Outputs.IncidentLabelResponse> Labels;
        /// <summary>
        /// The time of the last activity in the incident
        /// </summary>
        public readonly string? LastActivityTimeUtc;
        /// <summary>
        /// The last time the incident was updated
        /// </summary>
        public readonly string LastModifiedTimeUtc;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Describes a user that the incident is assigned to
        /// </summary>
        public readonly Outputs.IncidentOwnerInfoResponse? Owner;
        /// <summary>
        /// The incident ID assigned by the incident provider
        /// </summary>
        public readonly string ProviderIncidentId;
        /// <summary>
        /// The name of the source provider that generated the incident
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// List of resource ids of Analytic rules related to the incident
        /// </summary>
        public readonly ImmutableArray<string> RelatedAnalyticRuleIds;
        /// <summary>
        /// The severity of the incident
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The status of the incident
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The title of the incident
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIncidentResult(
            Outputs.IncidentAdditionalDataResponse additionalData,

            string? classification,

            string? classificationComment,

            string? classificationReason,

            string createdTimeUtc,

            string? description,

            string? etag,

            string? firstActivityTimeUtc,

            string id,

            int incidentNumber,

            string incidentUrl,

            ImmutableArray<Outputs.IncidentLabelResponse> labels,

            string? lastActivityTimeUtc,

            string lastModifiedTimeUtc,

            string name,

            Outputs.IncidentOwnerInfoResponse? owner,

            string providerIncidentId,

            string providerName,

            ImmutableArray<string> relatedAnalyticRuleIds,

            string severity,

            string status,

            Outputs.SystemDataResponse systemData,

            string title,

            string type)
        {
            AdditionalData = additionalData;
            Classification = classification;
            ClassificationComment = classificationComment;
            ClassificationReason = classificationReason;
            CreatedTimeUtc = createdTimeUtc;
            Description = description;
            Etag = etag;
            FirstActivityTimeUtc = firstActivityTimeUtc;
            Id = id;
            IncidentNumber = incidentNumber;
            IncidentUrl = incidentUrl;
            Labels = labels;
            LastActivityTimeUtc = lastActivityTimeUtc;
            LastModifiedTimeUtc = lastModifiedTimeUtc;
            Name = name;
            Owner = owner;
            ProviderIncidentId = providerIncidentId;
            ProviderName = providerName;
            RelatedAnalyticRuleIds = relatedAnalyticRuleIds;
            Severity = severity;
            Status = status;
            SystemData = systemData;
            Title = title;
            Type = type;
        }
    }
}
