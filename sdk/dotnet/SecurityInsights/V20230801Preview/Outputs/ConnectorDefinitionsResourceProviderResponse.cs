// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20230801Preview.Outputs
{

    /// <summary>
    /// The resource provider details include the required permissions for the user to create connections.
    /// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
    /// </summary>
    [OutputType]
    public sealed class ConnectorDefinitionsResourceProviderResponse
    {
        /// <summary>
        /// Gets or sets the permissions description text.
        /// </summary>
        public readonly string PermissionsDisplayText;
        /// <summary>
        /// Gets or sets the provider name.
        /// </summary>
        public readonly string Provider;
        /// <summary>
        /// Gets or sets the permissions provider display name.
        /// </summary>
        public readonly string ProviderDisplayName;
        /// <summary>
        /// Required permissions for the connector resource provider that define in ResourceProviders.
        /// For more information about the permissions see &lt;see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format"&gt;here&lt;/see&gt;.
        /// </summary>
        public readonly Outputs.ResourceProviderRequiredPermissionsResponse RequiredPermissions;
        /// <summary>
        /// The scope on which the user should have permissions, in order to be able to create connections.
        /// </summary>
        public readonly string Scope;

        [OutputConstructor]
        private ConnectorDefinitionsResourceProviderResponse(
            string permissionsDisplayText,

            string provider,

            string providerDisplayName,

            Outputs.ResourceProviderRequiredPermissionsResponse requiredPermissions,

            string scope)
        {
            PermissionsDisplayText = permissionsDisplayText;
            Provider = provider;
            ProviderDisplayName = providerDisplayName;
            RequiredPermissions = requiredPermissions;
            Scope = scope;
        }
    }
}
