// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20220801Preview
{
    public static class GetActivityCustomEntityQuery
    {
        /// <summary>
        /// Gets an entity query.
        /// </summary>
        public static Task<GetActivityCustomEntityQueryResult> InvokeAsync(GetActivityCustomEntityQueryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActivityCustomEntityQueryResult>("azure-native:securityinsights/v20220801preview:getActivityCustomEntityQuery", args ?? new GetActivityCustomEntityQueryArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an entity query.
        /// </summary>
        public static Output<GetActivityCustomEntityQueryResult> Invoke(GetActivityCustomEntityQueryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActivityCustomEntityQueryResult>("azure-native:securityinsights/v20220801preview:getActivityCustomEntityQuery", args ?? new GetActivityCustomEntityQueryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActivityCustomEntityQueryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// entity query ID
        /// </summary>
        [Input("entityQueryId", required: true)]
        public string EntityQueryId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public string WorkspaceName { get; set; } = null!;

        public GetActivityCustomEntityQueryArgs()
        {
        }
        public static new GetActivityCustomEntityQueryArgs Empty => new GetActivityCustomEntityQueryArgs();
    }

    public sealed class GetActivityCustomEntityQueryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// entity query ID
        /// </summary>
        [Input("entityQueryId", required: true)]
        public Input<string> EntityQueryId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public GetActivityCustomEntityQueryInvokeArgs()
        {
        }
        public static new GetActivityCustomEntityQueryInvokeArgs Empty => new GetActivityCustomEntityQueryInvokeArgs();
    }


    [OutputType]
    public sealed class GetActivityCustomEntityQueryResult
    {
        /// <summary>
        /// The entity query content to display in timeline
        /// </summary>
        public readonly string? Content;
        /// <summary>
        /// The time the activity was created
        /// </summary>
        public readonly string CreatedTimeUtc;
        /// <summary>
        /// The entity query description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Determines whether this activity is enabled or disabled.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The query applied only to entities matching to all filters
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<string>>? EntitiesFilter;
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of the query's source entity
        /// </summary>
        public readonly string? InputEntityType;
        /// <summary>
        /// The kind of the entity query
        /// Expected value is 'Activity'.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The last time the activity was updated
        /// </summary>
        public readonly string LastModifiedTimeUtc;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Activity query definitions
        /// </summary>
        public readonly Outputs.ActivityEntityQueriesPropertiesResponseQueryDefinitions? QueryDefinitions;
        /// <summary>
        /// List of the fields of the source entity that are required to run the query
        /// </summary>
        public readonly ImmutableArray<ImmutableArray<string>> RequiredInputFieldsSets;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// The template id this activity was created from
        /// </summary>
        public readonly string? TemplateName;
        /// <summary>
        /// The entity query title
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetActivityCustomEntityQueryResult(
            string? content,

            string createdTimeUtc,

            string? description,

            bool? enabled,

            ImmutableDictionary<string, ImmutableArray<string>>? entitiesFilter,

            string? etag,

            string id,

            string? inputEntityType,

            string kind,

            string lastModifiedTimeUtc,

            string name,

            Outputs.ActivityEntityQueriesPropertiesResponseQueryDefinitions? queryDefinitions,

            ImmutableArray<ImmutableArray<string>> requiredInputFieldsSets,

            Outputs.SystemDataResponse systemData,

            string? templateName,

            string? title,

            string type)
        {
            Content = content;
            CreatedTimeUtc = createdTimeUtc;
            Description = description;
            Enabled = enabled;
            EntitiesFilter = entitiesFilter;
            Etag = etag;
            Id = id;
            InputEntityType = inputEntityType;
            Kind = kind;
            LastModifiedTimeUtc = lastModifiedTimeUtc;
            Name = name;
            QueryDefinitions = queryDefinitions;
            RequiredInputFieldsSets = requiredInputFieldsSets;
            SystemData = systemData;
            TemplateName = templateName;
            Title = title;
            Type = type;
        }
    }
}
