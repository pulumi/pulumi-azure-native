// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.SecurityInsights.V20230501Preview
{
    /// <summary>
    /// Content type.
    /// </summary>
    [EnumType]
    public readonly struct ContentType : IEquatable<ContentType>
    {
        private readonly string _value;

        private ContentType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ContentType AnalyticRule { get; } = new ContentType("AnalyticRule");
        public static ContentType Workbook { get; } = new ContentType("Workbook");

        public static bool operator ==(ContentType left, ContentType right) => left.Equals(right);
        public static bool operator !=(ContentType left, ContentType right) => !left.Equals(right);

        public static explicit operator string(ContentType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContentType other && Equals(other);
        public bool Equals(ContentType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Status while fetching the last deployment.
    /// </summary>
    [EnumType]
    public readonly struct DeploymentFetchStatus : IEquatable<DeploymentFetchStatus>
    {
        private readonly string _value;

        private DeploymentFetchStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DeploymentFetchStatus Success { get; } = new DeploymentFetchStatus("Success");
        public static DeploymentFetchStatus Unauthorized { get; } = new DeploymentFetchStatus("Unauthorized");
        public static DeploymentFetchStatus NotFound { get; } = new DeploymentFetchStatus("NotFound");

        public static bool operator ==(DeploymentFetchStatus left, DeploymentFetchStatus right) => left.Equals(right);
        public static bool operator !=(DeploymentFetchStatus left, DeploymentFetchStatus right) => !left.Equals(right);

        public static explicit operator string(DeploymentFetchStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DeploymentFetchStatus other && Equals(other);
        public bool Equals(DeploymentFetchStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The outcome of the deployment.
    /// </summary>
    [EnumType]
    public readonly struct DeploymentResult : IEquatable<DeploymentResult>
    {
        private readonly string _value;

        private DeploymentResult(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DeploymentResult Success { get; } = new DeploymentResult("Success");
        public static DeploymentResult Canceled { get; } = new DeploymentResult("Canceled");
        public static DeploymentResult Failed { get; } = new DeploymentResult("Failed");

        public static bool operator ==(DeploymentResult left, DeploymentResult right) => left.Equals(right);
        public static bool operator !=(DeploymentResult left, DeploymentResult right) => !left.Equals(right);

        public static explicit operator string(DeploymentResult value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DeploymentResult other && Equals(other);
        public bool Equals(DeploymentResult other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Current status of the deployment.
    /// </summary>
    [EnumType]
    public readonly struct DeploymentState : IEquatable<DeploymentState>
    {
        private readonly string _value;

        private DeploymentState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DeploymentState In_Progress { get; } = new DeploymentState("In_Progress");
        public static DeploymentState Completed { get; } = new DeploymentState("Completed");
        public static DeploymentState Queued { get; } = new DeploymentState("Queued");
        public static DeploymentState Canceling { get; } = new DeploymentState("Canceling");

        public static bool operator ==(DeploymentState left, DeploymentState right) => left.Equals(right);
        public static bool operator !=(DeploymentState left, DeploymentState right) => !left.Equals(right);

        public static explicit operator string(DeploymentState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DeploymentState other && Equals(other);
        public bool Equals(DeploymentState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The entity query kind
    /// </summary>
    [EnumType]
    public readonly struct EntityTimelineKind : IEquatable<EntityTimelineKind>
    {
        private readonly string _value;

        private EntityTimelineKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// activity
        /// </summary>
        public static EntityTimelineKind Activity { get; } = new EntityTimelineKind("Activity");
        /// <summary>
        /// bookmarks
        /// </summary>
        public static EntityTimelineKind Bookmark { get; } = new EntityTimelineKind("Bookmark");
        /// <summary>
        /// security alerts
        /// </summary>
        public static EntityTimelineKind SecurityAlert { get; } = new EntityTimelineKind("SecurityAlert");
        /// <summary>
        /// anomaly
        /// </summary>
        public static EntityTimelineKind Anomaly { get; } = new EntityTimelineKind("Anomaly");

        public static bool operator ==(EntityTimelineKind left, EntityTimelineKind right) => left.Equals(right);
        public static bool operator !=(EntityTimelineKind left, EntityTimelineKind right) => !left.Equals(right);

        public static explicit operator string(EntityTimelineKind value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntityTimelineKind other && Equals(other);
        public bool Equals(EntityTimelineKind other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The repository type of the source control
    /// </summary>
    [EnumType]
    public readonly struct RepoType : IEquatable<RepoType>
    {
        private readonly string _value;

        private RepoType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RepoType Github { get; } = new RepoType("Github");
        public static RepoType DevOps { get; } = new RepoType("DevOps");

        public static bool operator ==(RepoType left, RepoType right) => left.Equals(right);
        public static bool operator !=(RepoType left, RepoType right) => !left.Equals(right);

        public static explicit operator string(RepoType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RepoType other && Equals(other);
        public bool Equals(RepoType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The version number associated with the source control
    /// </summary>
    [EnumType]
    public readonly struct Version : IEquatable<Version>
    {
        private readonly string _value;

        private Version(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Version V1 { get; } = new Version("V1");
        public static Version V2 { get; } = new Version("V2");

        public static bool operator ==(Version left, Version right) => left.Equals(right);
        public static bool operator !=(Version left, Version right) => !left.Equals(right);

        public static explicit operator string(Version value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Version other && Equals(other);
        public bool Equals(Version other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
