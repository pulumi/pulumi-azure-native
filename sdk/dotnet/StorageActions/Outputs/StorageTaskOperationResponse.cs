// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageActions.Outputs
{

    /// <summary>
    /// Represents an operation to be performed on the object
    /// </summary>
    [OutputType]
    public sealed class StorageTaskOperationResponse
    {
        /// <summary>
        /// The operation to be performed on the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Action to be taken when the operation fails for a object.
        /// </summary>
        public readonly string? OnFailure;
        /// <summary>
        /// Action to be taken when the operation is successful for a object.
        /// </summary>
        public readonly string? OnSuccess;
        /// <summary>
        /// Key-value parameters for the operation.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Parameters;

        [OutputConstructor]
        private StorageTaskOperationResponse(
            string name,

            string? onFailure,

            string? onSuccess,

            ImmutableDictionary<string, string>? parameters)
        {
            Name = name;
            OnFailure = onFailure;
            OnSuccess = onSuccess;
            Parameters = parameters;
        }
    }
}
