// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorageActions.V20230101
{
    public static class GetStorageTask
    {
        /// <summary>
        /// Get the storage task properties
        /// </summary>
        public static Task<GetStorageTaskResult> InvokeAsync(GetStorageTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageTaskResult>("azure-native:storageactions/v20230101:getStorageTask", args ?? new GetStorageTaskArgs(), options.WithDefaults());

        /// <summary>
        /// Get the storage task properties
        /// </summary>
        public static Output<GetStorageTaskResult> Invoke(GetStorageTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageTaskResult>("azure-native:storageactions/v20230101:getStorageTask", args ?? new GetStorageTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("storageTaskName", required: true)]
        public string StorageTaskName { get; set; } = null!;

        public GetStorageTaskArgs()
        {
        }
        public static new GetStorageTaskArgs Empty => new GetStorageTaskArgs();
    }

    public sealed class GetStorageTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("storageTaskName", required: true)]
        public Input<string> StorageTaskName { get; set; } = null!;

        public GetStorageTaskInvokeArgs()
        {
        }
        public static new GetStorageTaskInvokeArgs Empty => new GetStorageTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageTaskResult
    {
        /// <summary>
        /// The storage task action that is executed
        /// </summary>
        public readonly Outputs.StorageTaskActionResponse Action;
        /// <summary>
        /// The creation date and time of the storage task in UTC.
        /// </summary>
        public readonly string CreationTimeInUtc;
        /// <summary>
        /// Text that describes the purpose of the storage task
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Storage Task is enabled when set to true and disabled when set to false
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed service identity of the resource.
        /// </summary>
        public readonly Outputs.ManagedServiceIdentityResponse Identity;
        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the resource
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Represents the provisioning state of the storage task.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        public readonly Outputs.SystemDataResponse SystemData;
        /// <summary>
        /// Resource tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Storage task version.
        /// </summary>
        public readonly double TaskVersion;
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStorageTaskResult(
            Outputs.StorageTaskActionResponse action,

            string creationTimeInUtc,

            string description,

            bool enabled,

            string id,

            Outputs.ManagedServiceIdentityResponse identity,

            string location,

            string name,

            string provisioningState,

            Outputs.SystemDataResponse systemData,

            ImmutableDictionary<string, string>? tags,

            double taskVersion,

            string type)
        {
            Action = action;
            CreationTimeInUtc = creationTimeInUtc;
            Description = description;
            Enabled = enabled;
            Id = id;
            Identity = identity;
            Location = location;
            Name = name;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Tags = tags;
            TaskVersion = taskVersion;
            Type = type;
        }
    }
}
