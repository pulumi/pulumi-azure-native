// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200808preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Delegated subnet details
type DelegatedSubnetServiceDetails struct {
	pulumi.CustomResourceState

	// Location of the DelegatedSubnet resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the DelegatedSubnet resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current state of delegated subnet resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of the DelegatedSubnet  resource.(Microsoft.DelegatedNetwork/delegatedSubnet)
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDelegatedSubnetServiceDetails registers a new resource with the given unique name, arguments, and options.
func NewDelegatedSubnetServiceDetails(ctx *pulumi.Context,
	name string, args *DelegatedSubnetServiceDetailsArgs, opts ...pulumi.ResourceOption) (*DelegatedSubnetServiceDetails, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ResourceName == nil {
		return nil, errors.New("missing required argument 'ResourceName'")
	}
	if args == nil || args.SubnetName == nil {
		return nil, errors.New("missing required argument 'SubnetName'")
	}
	if args == nil || args.VnetName == nil {
		return nil, errors.New("missing required argument 'VnetName'")
	}
	if args == nil {
		args = &DelegatedSubnetServiceDetailsArgs{}
	}
	var resource DelegatedSubnetServiceDetails
	err := ctx.RegisterResource("azure-nextgen:network/v20200808preview:DelegatedSubnetServiceDetails", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDelegatedSubnetServiceDetails gets an existing DelegatedSubnetServiceDetails resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDelegatedSubnetServiceDetails(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DelegatedSubnetServiceDetailsState, opts ...pulumi.ResourceOption) (*DelegatedSubnetServiceDetails, error) {
	var resource DelegatedSubnetServiceDetails
	err := ctx.ReadResource("azure-nextgen:network/v20200808preview:DelegatedSubnetServiceDetails", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DelegatedSubnetServiceDetails resources.
type delegatedSubnetServiceDetailsState struct {
	// Location of the DelegatedSubnet resource.
	Location *string `pulumi:"location"`
	// The name of the DelegatedSubnet resource.
	Name *string `pulumi:"name"`
	// The current state of delegated subnet resource.
	State *string `pulumi:"state"`
	// The type of the DelegatedSubnet  resource.(Microsoft.DelegatedNetwork/delegatedSubnet)
	Type *string `pulumi:"type"`
}

type DelegatedSubnetServiceDetailsState struct {
	// Location of the DelegatedSubnet resource.
	Location pulumi.StringPtrInput
	// The name of the DelegatedSubnet resource.
	Name pulumi.StringPtrInput
	// The current state of delegated subnet resource.
	State pulumi.StringPtrInput
	// The type of the DelegatedSubnet  resource.(Microsoft.DelegatedNetwork/delegatedSubnet)
	Type pulumi.StringPtrInput
}

func (DelegatedSubnetServiceDetailsState) ElementType() reflect.Type {
	return reflect.TypeOf((*delegatedSubnetServiceDetailsState)(nil)).Elem()
}

type delegatedSubnetServiceDetailsArgs struct {
	// Delegated Network Controller ID
	ControllerID *string `pulumi:"controllerID"`
	// The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName string `pulumi:"resourceName"`
	// The name of the delegated subnet. This name must be at least 1 character in length, and no more than 90.
	SubnetName string `pulumi:"subnetName"`
	// The name of the virtual network. This name must be at least 1 character in length, and no more than 90.
	VnetName string `pulumi:"vnetName"`
}

// The set of arguments for constructing a DelegatedSubnetServiceDetails resource.
type DelegatedSubnetServiceDetailsArgs struct {
	// Delegated Network Controller ID
	ControllerID pulumi.StringPtrInput
	// The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90.
	ResourceGroupName pulumi.StringInput
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName pulumi.StringInput
	// The name of the delegated subnet. This name must be at least 1 character in length, and no more than 90.
	SubnetName pulumi.StringInput
	// The name of the virtual network. This name must be at least 1 character in length, and no more than 90.
	VnetName pulumi.StringInput
}

func (DelegatedSubnetServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*delegatedSubnetServiceDetailsArgs)(nil)).Elem()
}
