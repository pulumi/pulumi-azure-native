// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20171001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A common class for general resource information
//
// Deprecated: Version 2017-10-01 will be removed in v2 of the provider.
func LookupVirtualNetworkGatewayConnection(ctx *pulumi.Context, args *LookupVirtualNetworkGatewayConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVirtualNetworkGatewayConnectionResult, error) {
	var rv LookupVirtualNetworkGatewayConnectionResult
	err := ctx.Invoke("azure-native:network/v20171001:getVirtualNetworkGatewayConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualNetworkGatewayConnectionArgs struct {
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual network gateway connection.
	VirtualNetworkGatewayConnectionName string `pulumi:"virtualNetworkGatewayConnectionName"`
}

// A common class for general resource information
type LookupVirtualNetworkGatewayConnectionResult struct {
	// The authorizationKey.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Gateway connection type. Possible values are: 'IPsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
	ConnectionType string `pulumi:"connectionType"`
	// The egress bytes transferred in this connection.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ingress bytes transferred in this connection.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The reference to local network gateway resource.
	LocalNetworkGateway2 *LocalNetworkGatewayResponse `pulumi:"localNetworkGateway2"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference to peerings resource.
	Peer *SubResourceResponse `pulumi:"peer"`
	// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGatewayConnection resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The routing weight.
	RoutingWeight *int `pulumi:"routingWeight"`
	// The IPSec shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Collection of all tunnels' connection health status.
	TunnelConnectionStatus []TunnelConnectionHealthResponse `pulumi:"tunnelConnectionStatus"`
	// Resource type.
	Type string `pulumi:"type"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway1 VirtualNetworkGatewayResponse `pulumi:"virtualNetworkGateway1"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway2 *VirtualNetworkGatewayResponse `pulumi:"virtualNetworkGateway2"`
}

func LookupVirtualNetworkGatewayConnectionOutput(ctx *pulumi.Context, args LookupVirtualNetworkGatewayConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualNetworkGatewayConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualNetworkGatewayConnectionResult, error) {
			args := v.(LookupVirtualNetworkGatewayConnectionArgs)
			r, err := LookupVirtualNetworkGatewayConnection(ctx, &args, opts...)
			var s LookupVirtualNetworkGatewayConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualNetworkGatewayConnectionResultOutput)
}

type LookupVirtualNetworkGatewayConnectionOutputArgs struct {
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the virtual network gateway connection.
	VirtualNetworkGatewayConnectionName pulumi.StringInput `pulumi:"virtualNetworkGatewayConnectionName"`
}

func (LookupVirtualNetworkGatewayConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNetworkGatewayConnectionArgs)(nil)).Elem()
}

// A common class for general resource information
type LookupVirtualNetworkGatewayConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualNetworkGatewayConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNetworkGatewayConnectionResult)(nil)).Elem()
}

func (o LookupVirtualNetworkGatewayConnectionResultOutput) ToLookupVirtualNetworkGatewayConnectionResultOutput() LookupVirtualNetworkGatewayConnectionResultOutput {
	return o
}

func (o LookupVirtualNetworkGatewayConnectionResultOutput) ToLookupVirtualNetworkGatewayConnectionResultOutputWithContext(ctx context.Context) LookupVirtualNetworkGatewayConnectionResultOutput {
	return o
}

// The authorizationKey.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Gateway connection type. Possible values are: 'IPsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The egress bytes transferred in this connection.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// EnableBgp flag
func (o LookupVirtualNetworkGatewayConnectionResultOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ingress bytes transferred in this connection.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The IPSec Policies to be considered by this connection.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The reference to local network gateway resource.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) LocalNetworkGateway2() LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *LocalNetworkGatewayResponse {
		return v.LocalNetworkGateway2
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// Resource location.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to peerings resource.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Peer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *SubResourceResponse { return v.Peer }).(SubResourceResponsePtrOutput)
}

// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the VirtualNetworkGatewayConnection resource.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The routing weight.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// The IPSec shared key.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Collection of all tunnels' connection health status.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) TunnelConnectionStatus() TunnelConnectionHealthResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) []TunnelConnectionHealthResponse {
		return v.TunnelConnectionStatus
	}).(TunnelConnectionHealthResponseArrayOutput)
}

// Resource type.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

// Enable policy-based traffic selectors.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// The reference to virtual network gateway resource.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) VirtualNetworkGateway1() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) VirtualNetworkGatewayResponse {
		return v.VirtualNetworkGateway1
	}).(VirtualNetworkGatewayResponseOutput)
}

// The reference to virtual network gateway resource.
func (o LookupVirtualNetworkGatewayConnectionResultOutput) VirtualNetworkGateway2() VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualNetworkGatewayConnectionResult) *VirtualNetworkGatewayResponse {
		return v.VirtualNetworkGateway2
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualNetworkGatewayConnectionResultOutput{})
}
