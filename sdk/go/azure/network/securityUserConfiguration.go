// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines the security configuration
// API Version: 2021-02-01-preview.
type SecurityUserConfiguration struct {
	pulumi.CustomResourceState

	// Flag if need to delete existing network security groups.
	DeleteExistingNSGs pulumi.StringPtrOutput `pulumi:"deleteExistingNSGs"`
	// A description of the security configuration.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A display name of the security configuration.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Security Type.
	SecurityType pulumi.StringPtrOutput `pulumi:"securityType"`
	// The system metadata related to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecurityUserConfiguration registers a new resource with the given unique name, arguments, and options.
func NewSecurityUserConfiguration(ctx *pulumi.Context,
	name string, args *SecurityUserConfigurationArgs, opts ...pulumi.ResourceOption) (*SecurityUserConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20210201preview:SecurityUserConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210501preview:SecurityUserConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220201preview:SecurityUserConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220401preview:SecurityUserConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource SecurityUserConfiguration
	err := ctx.RegisterResource("azure-native:network:SecurityUserConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityUserConfiguration gets an existing SecurityUserConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityUserConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityUserConfigurationState, opts ...pulumi.ResourceOption) (*SecurityUserConfiguration, error) {
	var resource SecurityUserConfiguration
	err := ctx.ReadResource("azure-native:network:SecurityUserConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityUserConfiguration resources.
type securityUserConfigurationState struct {
}

type SecurityUserConfigurationState struct {
}

func (SecurityUserConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityUserConfigurationState)(nil)).Elem()
}

type securityUserConfigurationArgs struct {
	// The name of the network manager security Configuration.
	ConfigurationName *string `pulumi:"configurationName"`
	// Flag if need to delete existing network security groups.
	DeleteExistingNSGs *string `pulumi:"deleteExistingNSGs"`
	// A description of the security configuration.
	Description *string `pulumi:"description"`
	// A display name of the security configuration.
	DisplayName *string `pulumi:"displayName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Security Type.
	SecurityType *string `pulumi:"securityType"`
}

// The set of arguments for constructing a SecurityUserConfiguration resource.
type SecurityUserConfigurationArgs struct {
	// The name of the network manager security Configuration.
	ConfigurationName pulumi.StringPtrInput
	// Flag if need to delete existing network security groups.
	DeleteExistingNSGs pulumi.StringPtrInput
	// A description of the security configuration.
	Description pulumi.StringPtrInput
	// A display name of the security configuration.
	DisplayName pulumi.StringPtrInput
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Security Type.
	SecurityType pulumi.StringPtrInput
}

func (SecurityUserConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityUserConfigurationArgs)(nil)).Elem()
}

type SecurityUserConfigurationInput interface {
	pulumi.Input

	ToSecurityUserConfigurationOutput() SecurityUserConfigurationOutput
	ToSecurityUserConfigurationOutputWithContext(ctx context.Context) SecurityUserConfigurationOutput
}

func (*SecurityUserConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityUserConfiguration)(nil)).Elem()
}

func (i *SecurityUserConfiguration) ToSecurityUserConfigurationOutput() SecurityUserConfigurationOutput {
	return i.ToSecurityUserConfigurationOutputWithContext(context.Background())
}

func (i *SecurityUserConfiguration) ToSecurityUserConfigurationOutputWithContext(ctx context.Context) SecurityUserConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityUserConfigurationOutput)
}

type SecurityUserConfigurationOutput struct{ *pulumi.OutputState }

func (SecurityUserConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityUserConfiguration)(nil)).Elem()
}

func (o SecurityUserConfigurationOutput) ToSecurityUserConfigurationOutput() SecurityUserConfigurationOutput {
	return o
}

func (o SecurityUserConfigurationOutput) ToSecurityUserConfigurationOutputWithContext(ctx context.Context) SecurityUserConfigurationOutput {
	return o
}

// Flag if need to delete existing network security groups.
func (o SecurityUserConfigurationOutput) DeleteExistingNSGs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringPtrOutput { return v.DeleteExistingNSGs }).(pulumi.StringPtrOutput)
}

// A description of the security configuration.
func (o SecurityUserConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A display name of the security configuration.
func (o SecurityUserConfigurationOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityUserConfigurationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource name.
func (o SecurityUserConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o SecurityUserConfigurationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Security Type.
func (o SecurityUserConfigurationOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringPtrOutput { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// The system metadata related to this resource.
func (o SecurityUserConfigurationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o SecurityUserConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SecurityUserConfigurationOutput{})
}
