// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150504preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a DNS record set (a collection of DNS records with the same name and type).
//
// Deprecated: Version 2015-05-04-preview will be removed in v2 of the provider.
type RecordSet struct {
	pulumi.CustomResourceState

	// Gets or sets the list of AAAA records in the RecordSet.
	AAAARecords AaaaRecordResponseArrayOutput `pulumi:"aAAARecords"`
	// Gets or sets the list of A records in the RecordSet.
	ARecords ARecordResponseArrayOutput `pulumi:"aRecords"`
	// Gets or sets the CNAME record in the RecordSet.
	CNAMERecord CnameRecordResponsePtrOutput `pulumi:"cNAMERecord"`
	// The etag of the record set.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Fully qualified domain name of the record set.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// Gets or sets the list of MX records in the RecordSet.
	MXRecords MxRecordResponseArrayOutput `pulumi:"mXRecords"`
	// Gets or sets the list of NS records in the RecordSet.
	NSRecords NsRecordResponseArrayOutput `pulumi:"nSRecords"`
	// The name of the record set.
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the list of PTR records in the RecordSet.
	PTRRecords PtrRecordResponseArrayOutput `pulumi:"pTRRecords"`
	// Gets or sets the SOA record in the RecordSet.
	SOARecord SoaRecordResponsePtrOutput `pulumi:"sOARecord"`
	// Gets or sets the list of SRV records in the RecordSet.
	SRVRecords SrvRecordResponseArrayOutput `pulumi:"sRVRecords"`
	// Gets or sets the list of TXT records in the RecordSet.
	TXTRecords TxtRecordResponseArrayOutput `pulumi:"tXTRecords"`
	// Gets or sets the TTL of the records in the RecordSet.
	Ttl pulumi.Float64PtrOutput `pulumi:"ttl"`
	// The type of the record set.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRecordSet registers a new resource with the given unique name, arguments, and options.
func NewRecordSet(ctx *pulumi.Context,
	name string, args *RecordSetArgs, opts ...pulumi.ResourceOption) (*RecordSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RecordType == nil {
		return nil, errors.New("invalid value for required argument 'RecordType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ZoneName == nil {
		return nil, errors.New("invalid value for required argument 'ZoneName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network:RecordSet"),
		},
		{
			Type: pulumi.String("azure-native:network/v20160401:RecordSet"),
		},
		{
			Type: pulumi.String("azure-native:network/v20170901:RecordSet"),
		},
		{
			Type: pulumi.String("azure-native:network/v20171001:RecordSet"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180301preview:RecordSet"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180501:RecordSet"),
		},
	})
	opts = append(opts, aliases)
	var resource RecordSet
	err := ctx.RegisterResource("azure-native:network/v20150504preview:RecordSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecordSet gets an existing RecordSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecordSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecordSetState, opts ...pulumi.ResourceOption) (*RecordSet, error) {
	var resource RecordSet
	err := ctx.ReadResource("azure-native:network/v20150504preview:RecordSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecordSet resources.
type recordSetState struct {
}

type RecordSetState struct {
}

func (RecordSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*recordSetState)(nil)).Elem()
}

type recordSetArgs struct {
	// Gets or sets the list of AAAA records in the RecordSet.
	AAAARecords []AaaaRecord `pulumi:"aAAARecords"`
	// Gets or sets the list of A records in the RecordSet.
	ARecords []ARecord `pulumi:"aRecords"`
	// Gets or sets the CNAME record in the RecordSet.
	CNAMERecord *CnameRecord `pulumi:"cNAMERecord"`
	// Gets or sets the list of MX records in the RecordSet.
	MXRecords []MxRecord `pulumi:"mXRecords"`
	// Gets or sets the list of NS records in the RecordSet.
	NSRecords []NsRecord `pulumi:"nSRecords"`
	// Gets or sets the list of PTR records in the RecordSet.
	PTRRecords []PtrRecord `pulumi:"pTRRecords"`
	// The type of DNS record.
	RecordType string `pulumi:"recordType"`
	// The name of the RecordSet, relative to the name of the zone.
	RelativeRecordSetName *string `pulumi:"relativeRecordSetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets the SOA record in the RecordSet.
	SOARecord *SoaRecord `pulumi:"sOARecord"`
	// Gets or sets the list of SRV records in the RecordSet.
	SRVRecords []SrvRecord `pulumi:"sRVRecords"`
	// Gets or sets the list of TXT records in the RecordSet.
	TXTRecords []TxtRecord `pulumi:"tXTRecords"`
	// Gets or sets the TTL of the records in the RecordSet.
	Ttl *float64 `pulumi:"ttl"`
	// The name of the zone without a terminating dot.
	ZoneName string `pulumi:"zoneName"`
}

// The set of arguments for constructing a RecordSet resource.
type RecordSetArgs struct {
	// Gets or sets the list of AAAA records in the RecordSet.
	AAAARecords AaaaRecordArrayInput
	// Gets or sets the list of A records in the RecordSet.
	ARecords ARecordArrayInput
	// Gets or sets the CNAME record in the RecordSet.
	CNAMERecord CnameRecordPtrInput
	// Gets or sets the list of MX records in the RecordSet.
	MXRecords MxRecordArrayInput
	// Gets or sets the list of NS records in the RecordSet.
	NSRecords NsRecordArrayInput
	// Gets or sets the list of PTR records in the RecordSet.
	PTRRecords PtrRecordArrayInput
	// The type of DNS record.
	RecordType pulumi.StringInput
	// The name of the RecordSet, relative to the name of the zone.
	RelativeRecordSetName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Gets or sets the SOA record in the RecordSet.
	SOARecord SoaRecordPtrInput
	// Gets or sets the list of SRV records in the RecordSet.
	SRVRecords SrvRecordArrayInput
	// Gets or sets the list of TXT records in the RecordSet.
	TXTRecords TxtRecordArrayInput
	// Gets or sets the TTL of the records in the RecordSet.
	Ttl pulumi.Float64PtrInput
	// The name of the zone without a terminating dot.
	ZoneName pulumi.StringInput
}

func (RecordSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recordSetArgs)(nil)).Elem()
}

type RecordSetInput interface {
	pulumi.Input

	ToRecordSetOutput() RecordSetOutput
	ToRecordSetOutputWithContext(ctx context.Context) RecordSetOutput
}

func (*RecordSet) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSet)(nil)).Elem()
}

func (i *RecordSet) ToRecordSetOutput() RecordSetOutput {
	return i.ToRecordSetOutputWithContext(context.Background())
}

func (i *RecordSet) ToRecordSetOutputWithContext(ctx context.Context) RecordSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetOutput)
}

type RecordSetOutput struct{ *pulumi.OutputState }

func (RecordSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSet)(nil)).Elem()
}

func (o RecordSetOutput) ToRecordSetOutput() RecordSetOutput {
	return o
}

func (o RecordSetOutput) ToRecordSetOutputWithContext(ctx context.Context) RecordSetOutput {
	return o
}

// Gets or sets the list of AAAA records in the RecordSet.
func (o RecordSetOutput) AAAARecords() AaaaRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) AaaaRecordResponseArrayOutput { return v.AAAARecords }).(AaaaRecordResponseArrayOutput)
}

// Gets or sets the list of A records in the RecordSet.
func (o RecordSetOutput) ARecords() ARecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) ARecordResponseArrayOutput { return v.ARecords }).(ARecordResponseArrayOutput)
}

// Gets or sets the CNAME record in the RecordSet.
func (o RecordSetOutput) CNAMERecord() CnameRecordResponsePtrOutput {
	return o.ApplyT(func(v *RecordSet) CnameRecordResponsePtrOutput { return v.CNAMERecord }).(CnameRecordResponsePtrOutput)
}

// The etag of the record set.
func (o RecordSetOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSet) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name of the record set.
func (o RecordSetOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *RecordSet) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// Gets or sets the list of MX records in the RecordSet.
func (o RecordSetOutput) MXRecords() MxRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) MxRecordResponseArrayOutput { return v.MXRecords }).(MxRecordResponseArrayOutput)
}

// Gets or sets the list of NS records in the RecordSet.
func (o RecordSetOutput) NSRecords() NsRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) NsRecordResponseArrayOutput { return v.NSRecords }).(NsRecordResponseArrayOutput)
}

// The name of the record set.
func (o RecordSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RecordSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the list of PTR records in the RecordSet.
func (o RecordSetOutput) PTRRecords() PtrRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) PtrRecordResponseArrayOutput { return v.PTRRecords }).(PtrRecordResponseArrayOutput)
}

// Gets or sets the SOA record in the RecordSet.
func (o RecordSetOutput) SOARecord() SoaRecordResponsePtrOutput {
	return o.ApplyT(func(v *RecordSet) SoaRecordResponsePtrOutput { return v.SOARecord }).(SoaRecordResponsePtrOutput)
}

// Gets or sets the list of SRV records in the RecordSet.
func (o RecordSetOutput) SRVRecords() SrvRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) SrvRecordResponseArrayOutput { return v.SRVRecords }).(SrvRecordResponseArrayOutput)
}

// Gets or sets the list of TXT records in the RecordSet.
func (o RecordSetOutput) TXTRecords() TxtRecordResponseArrayOutput {
	return o.ApplyT(func(v *RecordSet) TxtRecordResponseArrayOutput { return v.TXTRecords }).(TxtRecordResponseArrayOutput)
}

// Gets or sets the TTL of the records in the RecordSet.
func (o RecordSetOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordSet) pulumi.Float64PtrOutput { return v.Ttl }).(pulumi.Float64PtrOutput)
}

// The type of the record set.
func (o RecordSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RecordSet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RecordSetOutput{})
}
