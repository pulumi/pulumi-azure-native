// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Network admin rule.
// API Version: 2021-02-01-preview.
type AdminRule struct {
	pulumi.CustomResourceState

	// Indicates the access allowed for this particular rule
	Access pulumi.StringOutput `pulumi:"access"`
	// Groups for configuration
	AppliesToGroups NetworkManagerSecurityGroupItemResponseArrayOutput `pulumi:"appliesToGroups"`
	// A description for this rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destination AddressPrefixItemResponseArrayOutput `pulumi:"destination"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayOutput `pulumi:"destinationPortRanges"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The provisioning state of the security Configuration resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The CIDR or source IP ranges.
	Source AddressPrefixItemResponseArrayOutput `pulumi:"source"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayOutput `pulumi:"sourcePortRanges"`
	// The system metadata related to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAdminRule registers a new resource with the given unique name, arguments, and options.
func NewAdminRule(ctx *pulumi.Context,
	name string, args *AdminRuleArgs, opts ...pulumi.ResourceOption) (*AdminRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Access == nil {
		return nil, errors.New("invalid value for required argument 'Access'")
	}
	if args.ConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationName'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.NetworkManagerName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerName'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:network:AdminRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210201preview:AdminRule"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20210201preview:AdminRule"),
		},
	})
	opts = append(opts, aliases)
	var resource AdminRule
	err := ctx.RegisterResource("azure-native:network:AdminRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdminRule gets an existing AdminRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdminRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdminRuleState, opts ...pulumi.ResourceOption) (*AdminRule, error) {
	var resource AdminRule
	err := ctx.ReadResource("azure-native:network:AdminRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AdminRule resources.
type adminRuleState struct {
	// Indicates the access allowed for this particular rule
	Access *string `pulumi:"access"`
	// Groups for configuration
	AppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"appliesToGroups"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destination []AddressPrefixItemResponse `pulumi:"destination"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction *string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the security Configuration resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP ranges.
	Source []AddressPrefixItemResponse `pulumi:"source"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The system metadata related to this resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type AdminRuleState struct {
	// Indicates the access allowed for this particular rule
	Access pulumi.StringPtrInput
	// Groups for configuration
	AppliesToGroups NetworkManagerSecurityGroupItemResponseArrayInput
	// A description for this rule.
	Description pulumi.StringPtrInput
	// The destination address prefixes. CIDR or destination IP ranges.
	Destination AddressPrefixItemResponseArrayInput
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction pulumi.StringPtrInput
	// A friendly name for the rule.
	DisplayName pulumi.StringPtrInput
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput
	// Network protocol this rule applies to.
	Protocol pulumi.StringPtrInput
	// The provisioning state of the security Configuration resource.
	ProvisioningState pulumi.StringPtrInput
	// The CIDR or source IP ranges.
	Source AddressPrefixItemResponseArrayInput
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput
	// The system metadata related to this resource.
	SystemData SystemDataResponsePtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (AdminRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*adminRuleState)(nil)).Elem()
}

type adminRuleArgs struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// Groups for configuration
	AppliesToGroups []NetworkManagerSecurityGroupItem `pulumi:"appliesToGroups"`
	// The name of the network manager security Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destination []AddressPrefixItem `pulumi:"destination"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the rule.
	RuleName *string `pulumi:"ruleName"`
	// The CIDR or source IP ranges.
	Source []AddressPrefixItem `pulumi:"source"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// The set of arguments for constructing a AdminRule resource.
type AdminRuleArgs struct {
	// Indicates the access allowed for this particular rule
	Access pulumi.StringInput
	// Groups for configuration
	AppliesToGroups NetworkManagerSecurityGroupItemArrayInput
	// The name of the network manager security Configuration.
	ConfigurationName pulumi.StringInput
	// A description for this rule.
	Description pulumi.StringPtrInput
	// The destination address prefixes. CIDR or destination IP ranges.
	Destination AddressPrefixItemArrayInput
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction pulumi.StringInput
	// A friendly name for the rule.
	DisplayName pulumi.StringPtrInput
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the rule.
	RuleName pulumi.StringPtrInput
	// The CIDR or source IP ranges.
	Source AddressPrefixItemArrayInput
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput
}

func (AdminRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adminRuleArgs)(nil)).Elem()
}

type AdminRuleInput interface {
	pulumi.Input

	ToAdminRuleOutput() AdminRuleOutput
	ToAdminRuleOutputWithContext(ctx context.Context) AdminRuleOutput
}

func (*AdminRule) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminRule)(nil))
}

func (i *AdminRule) ToAdminRuleOutput() AdminRuleOutput {
	return i.ToAdminRuleOutputWithContext(context.Background())
}

func (i *AdminRule) ToAdminRuleOutputWithContext(ctx context.Context) AdminRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminRuleOutput)
}

type AdminRuleOutput struct {
	*pulumi.OutputState
}

func (AdminRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminRule)(nil))
}

func (o AdminRuleOutput) ToAdminRuleOutput() AdminRuleOutput {
	return o
}

func (o AdminRuleOutput) ToAdminRuleOutputWithContext(ctx context.Context) AdminRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AdminRuleOutput{})
}
