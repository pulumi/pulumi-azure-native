// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VpnServerConfigurationPolicyGroup Resource.
func LookupConfigurationPolicyGroup(ctx *pulumi.Context, args *LookupConfigurationPolicyGroupArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationPolicyGroupResult, error) {
	var rv LookupConfigurationPolicyGroupResult
	err := ctx.Invoke("azure-native:network/v20210801:getConfigurationPolicyGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationPolicyGroupArgs struct {
	// The name of the ConfigurationPolicyGroup being retrieved.
	ConfigurationPolicyGroupName string `pulumi:"configurationPolicyGroupName"`
	// The resource group name of the VpnServerConfiguration.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the VpnServerConfiguration.
	VpnServerConfigurationName string `pulumi:"vpnServerConfigurationName"`
}

// VpnServerConfigurationPolicyGroup Resource.
type LookupConfigurationPolicyGroupResult struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of references to P2SConnectionConfigurations.
	P2SConnectionConfigurations []SubResourceResponse `pulumi:"p2SConnectionConfigurations"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers []VpnServerConfigurationPolicyGroupMemberResponse `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupConfigurationPolicyGroupOutput(ctx *pulumi.Context, args LookupConfigurationPolicyGroupOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationPolicyGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationPolicyGroupResult, error) {
			args := v.(LookupConfigurationPolicyGroupArgs)
			r, err := LookupConfigurationPolicyGroup(ctx, &args, opts...)
			var s LookupConfigurationPolicyGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationPolicyGroupResultOutput)
}

type LookupConfigurationPolicyGroupOutputArgs struct {
	// The name of the ConfigurationPolicyGroup being retrieved.
	ConfigurationPolicyGroupName pulumi.StringInput `pulumi:"configurationPolicyGroupName"`
	// The resource group name of the VpnServerConfiguration.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the VpnServerConfiguration.
	VpnServerConfigurationName pulumi.StringInput `pulumi:"vpnServerConfigurationName"`
}

func (LookupConfigurationPolicyGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationPolicyGroupArgs)(nil)).Elem()
}

// VpnServerConfigurationPolicyGroup Resource.
type LookupConfigurationPolicyGroupResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationPolicyGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationPolicyGroupResult)(nil)).Elem()
}

func (o LookupConfigurationPolicyGroupResultOutput) ToLookupConfigurationPolicyGroupResultOutput() LookupConfigurationPolicyGroupResultOutput {
	return o
}

func (o LookupConfigurationPolicyGroupResultOutput) ToLookupConfigurationPolicyGroupResultOutputWithContext(ctx context.Context) LookupConfigurationPolicyGroupResultOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupConfigurationPolicyGroupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupConfigurationPolicyGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
func (o LookupConfigurationPolicyGroupResultOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LookupConfigurationPolicyGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to P2SConnectionConfigurations.
func (o LookupConfigurationPolicyGroupResultOutput) P2SConnectionConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) []SubResourceResponse {
		return v.P2SConnectionConfigurations
	}).(SubResourceResponseArrayOutput)
}

// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
func (o LookupConfigurationPolicyGroupResultOutput) PolicyMembers() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) []VpnServerConfigurationPolicyGroupMemberResponse {
		return v.PolicyMembers
	}).(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput)
}

// Priority for VpnServerConfigurationPolicyGroup.
func (o LookupConfigurationPolicyGroupResultOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
func (o LookupConfigurationPolicyGroupResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupConfigurationPolicyGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationPolicyGroupResultOutput{})
}
