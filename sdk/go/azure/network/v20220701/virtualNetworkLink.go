// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220701

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a virtual network link.
type VirtualNetworkLink struct {
	pulumi.CustomResourceState

	// ETag of the virtual network link.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Metadata attached to the virtual network link.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResourceResponseOutput `pulumi:"virtualNetwork"`
}

// NewVirtualNetworkLink registers a new resource with the given unique name, arguments, and options.
func NewVirtualNetworkLink(ctx *pulumi.Context,
	name string, args *VirtualNetworkLinkArgs, opts ...pulumi.ResourceOption) (*VirtualNetworkLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsForwardingRulesetName == nil {
		return nil, errors.New("invalid value for required argument 'DnsForwardingRulesetName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VirtualNetwork == nil {
		return nil, errors.New("invalid value for required argument 'VirtualNetwork'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20200401preview:VirtualNetworkLink"),
		},
	})
	opts = append(opts, aliases)
	var resource VirtualNetworkLink
	err := ctx.RegisterResource("azure-native:network/v20220701:VirtualNetworkLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualNetworkLink gets an existing VirtualNetworkLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualNetworkLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualNetworkLinkState, opts ...pulumi.ResourceOption) (*VirtualNetworkLink, error) {
	var resource VirtualNetworkLink
	err := ctx.ReadResource("azure-native:network/v20220701:VirtualNetworkLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualNetworkLink resources.
type virtualNetworkLinkState struct {
}

type VirtualNetworkLinkState struct {
}

func (VirtualNetworkLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkLinkState)(nil)).Elem()
}

type virtualNetworkLinkArgs struct {
	// The name of the DNS forwarding ruleset.
	DnsForwardingRulesetName string `pulumi:"dnsForwardingRulesetName"`
	// Metadata attached to the virtual network link.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResource `pulumi:"virtualNetwork"`
	// The name of the virtual network link.
	VirtualNetworkLinkName *string `pulumi:"virtualNetworkLinkName"`
}

// The set of arguments for constructing a VirtualNetworkLink resource.
type VirtualNetworkLinkArgs struct {
	// The name of the DNS forwarding ruleset.
	DnsForwardingRulesetName pulumi.StringInput
	// Metadata attached to the virtual network link.
	Metadata pulumi.StringMapInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResourceInput
	// The name of the virtual network link.
	VirtualNetworkLinkName pulumi.StringPtrInput
}

func (VirtualNetworkLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkLinkArgs)(nil)).Elem()
}

type VirtualNetworkLinkInput interface {
	pulumi.Input

	ToVirtualNetworkLinkOutput() VirtualNetworkLinkOutput
	ToVirtualNetworkLinkOutputWithContext(ctx context.Context) VirtualNetworkLinkOutput
}

func (*VirtualNetworkLink) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkLink)(nil)).Elem()
}

func (i *VirtualNetworkLink) ToVirtualNetworkLinkOutput() VirtualNetworkLinkOutput {
	return i.ToVirtualNetworkLinkOutputWithContext(context.Background())
}

func (i *VirtualNetworkLink) ToVirtualNetworkLinkOutputWithContext(ctx context.Context) VirtualNetworkLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkLinkOutput)
}

type VirtualNetworkLinkOutput struct{ *pulumi.OutputState }

func (VirtualNetworkLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkLink)(nil)).Elem()
}

func (o VirtualNetworkLinkOutput) ToVirtualNetworkLinkOutput() VirtualNetworkLinkOutput {
	return o
}

func (o VirtualNetworkLinkOutput) ToVirtualNetworkLinkOutputWithContext(ctx context.Context) VirtualNetworkLinkOutput {
	return o
}

// ETag of the virtual network link.
func (o VirtualNetworkLinkOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Metadata attached to the virtual network link.
func (o VirtualNetworkLinkOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the resource
func (o VirtualNetworkLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.
func (o VirtualNetworkLinkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o VirtualNetworkLinkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VirtualNetworkLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The reference to the virtual network. This cannot be changed after creation.
func (o VirtualNetworkLinkOutput) VirtualNetwork() SubResourceResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkLink) SubResourceResponseOutput { return v.VirtualNetwork }).(SubResourceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualNetworkLinkOutput{})
}
